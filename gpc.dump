
./GPC/gpc:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 d1 ef 01 00 	mov    0x1efd1(%rip),%rax        # 20fe0 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 72 ee 01 00    	push   0x1ee72(%rip)        # 20e98 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 74 ee 01 00    	jmp    *0x1ee74(%rip)        # 20ea0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)
    2030:	f3 0f 1e fa          	endbr64
    2034:	68 00 00 00 00       	push   $0x0
    2039:	e9 e2 ff ff ff       	jmp    2020 <_init+0x20>
    203e:	66 90                	xchg   %ax,%ax
    2040:	f3 0f 1e fa          	endbr64
    2044:	68 01 00 00 00       	push   $0x1
    2049:	e9 d2 ff ff ff       	jmp    2020 <_init+0x20>
    204e:	66 90                	xchg   %ax,%ax
    2050:	f3 0f 1e fa          	endbr64
    2054:	68 02 00 00 00       	push   $0x2
    2059:	e9 c2 ff ff ff       	jmp    2020 <_init+0x20>
    205e:	66 90                	xchg   %ax,%ax
    2060:	f3 0f 1e fa          	endbr64
    2064:	68 03 00 00 00       	push   $0x3
    2069:	e9 b2 ff ff ff       	jmp    2020 <_init+0x20>
    206e:	66 90                	xchg   %ax,%ax
    2070:	f3 0f 1e fa          	endbr64
    2074:	68 04 00 00 00       	push   $0x4
    2079:	e9 a2 ff ff ff       	jmp    2020 <_init+0x20>
    207e:	66 90                	xchg   %ax,%ax
    2080:	f3 0f 1e fa          	endbr64
    2084:	68 05 00 00 00       	push   $0x5
    2089:	e9 92 ff ff ff       	jmp    2020 <_init+0x20>
    208e:	66 90                	xchg   %ax,%ax
    2090:	f3 0f 1e fa          	endbr64
    2094:	68 06 00 00 00       	push   $0x6
    2099:	e9 82 ff ff ff       	jmp    2020 <_init+0x20>
    209e:	66 90                	xchg   %ax,%ax
    20a0:	f3 0f 1e fa          	endbr64
    20a4:	68 07 00 00 00       	push   $0x7
    20a9:	e9 72 ff ff ff       	jmp    2020 <_init+0x20>
    20ae:	66 90                	xchg   %ax,%ax
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	68 08 00 00 00       	push   $0x8
    20b9:	e9 62 ff ff ff       	jmp    2020 <_init+0x20>
    20be:	66 90                	xchg   %ax,%ax
    20c0:	f3 0f 1e fa          	endbr64
    20c4:	68 09 00 00 00       	push   $0x9
    20c9:	e9 52 ff ff ff       	jmp    2020 <_init+0x20>
    20ce:	66 90                	xchg   %ax,%ax
    20d0:	f3 0f 1e fa          	endbr64
    20d4:	68 0a 00 00 00       	push   $0xa
    20d9:	e9 42 ff ff ff       	jmp    2020 <_init+0x20>
    20de:	66 90                	xchg   %ax,%ax
    20e0:	f3 0f 1e fa          	endbr64
    20e4:	68 0b 00 00 00       	push   $0xb
    20e9:	e9 32 ff ff ff       	jmp    2020 <_init+0x20>
    20ee:	66 90                	xchg   %ax,%ax
    20f0:	f3 0f 1e fa          	endbr64
    20f4:	68 0c 00 00 00       	push   $0xc
    20f9:	e9 22 ff ff ff       	jmp    2020 <_init+0x20>
    20fe:	66 90                	xchg   %ax,%ax
    2100:	f3 0f 1e fa          	endbr64
    2104:	68 0d 00 00 00       	push   $0xd
    2109:	e9 12 ff ff ff       	jmp    2020 <_init+0x20>
    210e:	66 90                	xchg   %ax,%ax
    2110:	f3 0f 1e fa          	endbr64
    2114:	68 0e 00 00 00       	push   $0xe
    2119:	e9 02 ff ff ff       	jmp    2020 <_init+0x20>
    211e:	66 90                	xchg   %ax,%ax
    2120:	f3 0f 1e fa          	endbr64
    2124:	68 0f 00 00 00       	push   $0xf
    2129:	e9 f2 fe ff ff       	jmp    2020 <_init+0x20>
    212e:	66 90                	xchg   %ax,%ax
    2130:	f3 0f 1e fa          	endbr64
    2134:	68 10 00 00 00       	push   $0x10
    2139:	e9 e2 fe ff ff       	jmp    2020 <_init+0x20>
    213e:	66 90                	xchg   %ax,%ax
    2140:	f3 0f 1e fa          	endbr64
    2144:	68 11 00 00 00       	push   $0x11
    2149:	e9 d2 fe ff ff       	jmp    2020 <_init+0x20>
    214e:	66 90                	xchg   %ax,%ax
    2150:	f3 0f 1e fa          	endbr64
    2154:	68 12 00 00 00       	push   $0x12
    2159:	e9 c2 fe ff ff       	jmp    2020 <_init+0x20>
    215e:	66 90                	xchg   %ax,%ax
    2160:	f3 0f 1e fa          	endbr64
    2164:	68 13 00 00 00       	push   $0x13
    2169:	e9 b2 fe ff ff       	jmp    2020 <_init+0x20>
    216e:	66 90                	xchg   %ax,%ax
    2170:	f3 0f 1e fa          	endbr64
    2174:	68 14 00 00 00       	push   $0x14
    2179:	e9 a2 fe ff ff       	jmp    2020 <_init+0x20>
    217e:	66 90                	xchg   %ax,%ax
    2180:	f3 0f 1e fa          	endbr64
    2184:	68 15 00 00 00       	push   $0x15
    2189:	e9 92 fe ff ff       	jmp    2020 <_init+0x20>
    218e:	66 90                	xchg   %ax,%ax
    2190:	f3 0f 1e fa          	endbr64
    2194:	68 16 00 00 00       	push   $0x16
    2199:	e9 82 fe ff ff       	jmp    2020 <_init+0x20>
    219e:	66 90                	xchg   %ax,%ax
    21a0:	f3 0f 1e fa          	endbr64
    21a4:	68 17 00 00 00       	push   $0x17
    21a9:	e9 72 fe ff ff       	jmp    2020 <_init+0x20>
    21ae:	66 90                	xchg   %ax,%ax
    21b0:	f3 0f 1e fa          	endbr64
    21b4:	68 18 00 00 00       	push   $0x18
    21b9:	e9 62 fe ff ff       	jmp    2020 <_init+0x20>
    21be:	66 90                	xchg   %ax,%ax
    21c0:	f3 0f 1e fa          	endbr64
    21c4:	68 19 00 00 00       	push   $0x19
    21c9:	e9 52 fe ff ff       	jmp    2020 <_init+0x20>
    21ce:	66 90                	xchg   %ax,%ax
    21d0:	f3 0f 1e fa          	endbr64
    21d4:	68 1a 00 00 00       	push   $0x1a
    21d9:	e9 42 fe ff ff       	jmp    2020 <_init+0x20>
    21de:	66 90                	xchg   %ax,%ax
    21e0:	f3 0f 1e fa          	endbr64
    21e4:	68 1b 00 00 00       	push   $0x1b
    21e9:	e9 32 fe ff ff       	jmp    2020 <_init+0x20>
    21ee:	66 90                	xchg   %ax,%ax
    21f0:	f3 0f 1e fa          	endbr64
    21f4:	68 1c 00 00 00       	push   $0x1c
    21f9:	e9 22 fe ff ff       	jmp    2020 <_init+0x20>
    21fe:	66 90                	xchg   %ax,%ax
    2200:	f3 0f 1e fa          	endbr64
    2204:	68 1d 00 00 00       	push   $0x1d
    2209:	e9 12 fe ff ff       	jmp    2020 <_init+0x20>
    220e:	66 90                	xchg   %ax,%ax
    2210:	f3 0f 1e fa          	endbr64
    2214:	68 1e 00 00 00       	push   $0x1e
    2219:	e9 02 fe ff ff       	jmp    2020 <_init+0x20>
    221e:	66 90                	xchg   %ax,%ax
    2220:	f3 0f 1e fa          	endbr64
    2224:	68 1f 00 00 00       	push   $0x1f
    2229:	e9 f2 fd ff ff       	jmp    2020 <_init+0x20>
    222e:	66 90                	xchg   %ax,%ax
    2230:	f3 0f 1e fa          	endbr64
    2234:	68 20 00 00 00       	push   $0x20
    2239:	e9 e2 fd ff ff       	jmp    2020 <_init+0x20>
    223e:	66 90                	xchg   %ax,%ax
    2240:	f3 0f 1e fa          	endbr64
    2244:	68 21 00 00 00       	push   $0x21
    2249:	e9 d2 fd ff ff       	jmp    2020 <_init+0x20>
    224e:	66 90                	xchg   %ax,%ax
    2250:	f3 0f 1e fa          	endbr64
    2254:	68 22 00 00 00       	push   $0x22
    2259:	e9 c2 fd ff ff       	jmp    2020 <_init+0x20>
    225e:	66 90                	xchg   %ax,%ax
    2260:	f3 0f 1e fa          	endbr64
    2264:	68 23 00 00 00       	push   $0x23
    2269:	e9 b2 fd ff ff       	jmp    2020 <_init+0x20>
    226e:	66 90                	xchg   %ax,%ax
    2270:	f3 0f 1e fa          	endbr64
    2274:	68 24 00 00 00       	push   $0x24
    2279:	e9 a2 fd ff ff       	jmp    2020 <_init+0x20>
    227e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000002280 <__cxa_finalize@plt>:
    2280:	f3 0f 1e fa          	endbr64
    2284:	ff 25 66 ed 01 00    	jmp    *0x1ed66(%rip)        # 20ff0 <__cxa_finalize@GLIBC_2.2.5>
    228a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000002290 <free@plt>:
    2290:	f3 0f 1e fa          	endbr64
    2294:	ff 25 0e ec 01 00    	jmp    *0x1ec0e(%rip)        # 20ea8 <free@GLIBC_2.2.5>
    229a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000022a0 <__errno_location@plt>:
    22a0:	f3 0f 1e fa          	endbr64
    22a4:	ff 25 06 ec 01 00    	jmp    *0x1ec06(%rip)        # 20eb0 <__errno_location@GLIBC_2.2.5>
    22aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000022b0 <strncpy@plt>:
    22b0:	f3 0f 1e fa          	endbr64
    22b4:	ff 25 fe eb 01 00    	jmp    *0x1ebfe(%rip)        # 20eb8 <strncpy@GLIBC_2.2.5>
    22ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000022c0 <strcpy@plt>:
    22c0:	f3 0f 1e fa          	endbr64
    22c4:	ff 25 f6 eb 01 00    	jmp    *0x1ebf6(%rip)        # 20ec0 <strcpy@GLIBC_2.2.5>
    22ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000022d0 <ferror@plt>:
    22d0:	f3 0f 1e fa          	endbr64
    22d4:	ff 25 ee eb 01 00    	jmp    *0x1ebee(%rip)        # 20ec8 <ferror@GLIBC_2.2.5>
    22da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000022e0 <isatty@plt>:
    22e0:	f3 0f 1e fa          	endbr64
    22e4:	ff 25 e6 eb 01 00    	jmp    *0x1ebe6(%rip)        # 20ed0 <isatty@GLIBC_2.2.5>
    22ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000022f0 <fread@plt>:
    22f0:	f3 0f 1e fa          	endbr64
    22f4:	ff 25 de eb 01 00    	jmp    *0x1ebde(%rip)        # 20ed8 <fread@GLIBC_2.2.5>
    22fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002300 <atof@plt>:
    2300:	f3 0f 1e fa          	endbr64
    2304:	ff 25 d6 eb 01 00    	jmp    *0x1ebd6(%rip)        # 20ee0 <atof@GLIBC_2.2.5>
    230a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002310 <fclose@plt>:
    2310:	f3 0f 1e fa          	endbr64
    2314:	ff 25 ce eb 01 00    	jmp    *0x1ebce(%rip)        # 20ee8 <fclose@GLIBC_2.2.5>
    231a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002320 <strlen@plt>:
    2320:	f3 0f 1e fa          	endbr64
    2324:	ff 25 c6 eb 01 00    	jmp    *0x1ebc6(%rip)        # 20ef0 <strlen@GLIBC_2.2.5>
    232a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002330 <__stack_chk_fail@plt>:
    2330:	f3 0f 1e fa          	endbr64
    2334:	ff 25 be eb 01 00    	jmp    *0x1ebbe(%rip)        # 20ef8 <__stack_chk_fail@GLIBC_2.4>
    233a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002340 <snprintf@plt>:
    2340:	f3 0f 1e fa          	endbr64
    2344:	ff 25 b6 eb 01 00    	jmp    *0x1ebb6(%rip)        # 20f00 <snprintf@GLIBC_2.2.5>
    234a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002350 <__assert_fail@plt>:
    2350:	f3 0f 1e fa          	endbr64
    2354:	ff 25 ae eb 01 00    	jmp    *0x1ebae(%rip)        # 20f08 <__assert_fail@GLIBC_2.2.5>
    235a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002360 <fputs@plt>:
    2360:	f3 0f 1e fa          	endbr64
    2364:	ff 25 a6 eb 01 00    	jmp    *0x1eba6(%rip)        # 20f10 <fputs@GLIBC_2.2.5>
    236a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002370 <memset@plt>:
    2370:	f3 0f 1e fa          	endbr64
    2374:	ff 25 9e eb 01 00    	jmp    *0x1eb9e(%rip)        # 20f18 <memset@GLIBC_2.2.5>
    237a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002380 <strncat@plt>:
    2380:	f3 0f 1e fa          	endbr64
    2384:	ff 25 96 eb 01 00    	jmp    *0x1eb96(%rip)        # 20f20 <strncat@GLIBC_2.2.5>
    238a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002390 <fputc@plt>:
    2390:	f3 0f 1e fa          	endbr64
    2394:	ff 25 8e eb 01 00    	jmp    *0x1eb8e(%rip)        # 20f28 <fputc@GLIBC_2.2.5>
    239a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023a0 <strcspn@plt>:
    23a0:	f3 0f 1e fa          	endbr64
    23a4:	ff 25 86 eb 01 00    	jmp    *0x1eb86(%rip)        # 20f30 <strcspn@GLIBC_2.2.5>
    23aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023b0 <fgets@plt>:
    23b0:	f3 0f 1e fa          	endbr64
    23b4:	ff 25 7e eb 01 00    	jmp    *0x1eb7e(%rip)        # 20f38 <fgets@GLIBC_2.2.5>
    23ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023c0 <strcmp@plt>:
    23c0:	f3 0f 1e fa          	endbr64
    23c4:	ff 25 76 eb 01 00    	jmp    *0x1eb76(%rip)        # 20f40 <strcmp@GLIBC_2.2.5>
    23ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023d0 <fprintf@plt>:
    23d0:	f3 0f 1e fa          	endbr64
    23d4:	ff 25 6e eb 01 00    	jmp    *0x1eb6e(%rip)        # 20f48 <fprintf@GLIBC_2.2.5>
    23da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023e0 <clearerr@plt>:
    23e0:	f3 0f 1e fa          	endbr64
    23e4:	ff 25 66 eb 01 00    	jmp    *0x1eb66(%rip)        # 20f50 <clearerr@GLIBC_2.2.5>
    23ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023f0 <memcpy@plt>:
    23f0:	f3 0f 1e fa          	endbr64
    23f4:	ff 25 5e eb 01 00    	jmp    *0x1eb5e(%rip)        # 20f58 <memcpy@GLIBC_2.14>
    23fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002400 <fileno@plt>:
    2400:	f3 0f 1e fa          	endbr64
    2404:	ff 25 56 eb 01 00    	jmp    *0x1eb56(%rip)        # 20f60 <fileno@GLIBC_2.2.5>
    240a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002410 <malloc@plt>:
    2410:	f3 0f 1e fa          	endbr64
    2414:	ff 25 4e eb 01 00    	jmp    *0x1eb4e(%rip)        # 20f68 <malloc@GLIBC_2.2.5>
    241a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002420 <__isoc99_sscanf@plt>:
    2420:	f3 0f 1e fa          	endbr64
    2424:	ff 25 46 eb 01 00    	jmp    *0x1eb46(%rip)        # 20f70 <__isoc99_sscanf@GLIBC_2.7>
    242a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002430 <realloc@plt>:
    2430:	f3 0f 1e fa          	endbr64
    2434:	ff 25 3e eb 01 00    	jmp    *0x1eb3e(%rip)        # 20f78 <realloc@GLIBC_2.2.5>
    243a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002440 <fopen@plt>:
    2440:	f3 0f 1e fa          	endbr64
    2444:	ff 25 36 eb 01 00    	jmp    *0x1eb36(%rip)        # 20f80 <fopen@GLIBC_2.2.5>
    244a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002450 <atoi@plt>:
    2450:	f3 0f 1e fa          	endbr64
    2454:	ff 25 2e eb 01 00    	jmp    *0x1eb2e(%rip)        # 20f88 <atoi@GLIBC_2.2.5>
    245a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002460 <strcat@plt>:
    2460:	f3 0f 1e fa          	endbr64
    2464:	ff 25 26 eb 01 00    	jmp    *0x1eb26(%rip)        # 20f90 <strcat@GLIBC_2.2.5>
    246a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002470 <sprintf@plt>:
    2470:	f3 0f 1e fa          	endbr64
    2474:	ff 25 1e eb 01 00    	jmp    *0x1eb1e(%rip)        # 20f98 <sprintf@GLIBC_2.2.5>
    247a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002480 <exit@plt>:
    2480:	f3 0f 1e fa          	endbr64
    2484:	ff 25 16 eb 01 00    	jmp    *0x1eb16(%rip)        # 20fa0 <exit@GLIBC_2.2.5>
    248a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002490 <fwrite@plt>:
    2490:	f3 0f 1e fa          	endbr64
    2494:	ff 25 0e eb 01 00    	jmp    *0x1eb0e(%rip)        # 20fa8 <fwrite@GLIBC_2.2.5>
    249a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024a0 <strdup@plt>:
    24a0:	f3 0f 1e fa          	endbr64
    24a4:	ff 25 06 eb 01 00    	jmp    *0x1eb06(%rip)        # 20fb0 <strdup@GLIBC_2.2.5>
    24aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024b0 <getc@plt>:
    24b0:	f3 0f 1e fa          	endbr64
    24b4:	ff 25 fe ea 01 00    	jmp    *0x1eafe(%rip)        # 20fb8 <getc@GLIBC_2.2.5>
    24ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024c0 <strstr@plt>:
    24c0:	f3 0f 1e fa          	endbr64
    24c4:	ff 25 f6 ea 01 00    	jmp    *0x1eaf6(%rip)        # 20fc0 <strstr@GLIBC_2.2.5>
    24ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024d0 <__ctype_b_loc@plt>:
    24d0:	f3 0f 1e fa          	endbr64
    24d4:	ff 25 ee ea 01 00    	jmp    *0x1eaee(%rip)        # 20fc8 <__ctype_b_loc@GLIBC_2.3>
    24da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000024e0 <_start>:
    24e0:	f3 0f 1e fa          	endbr64
    24e4:	31 ed                	xor    %ebp,%ebp
    24e6:	49 89 d1             	mov    %rdx,%r9
    24e9:	5e                   	pop    %rsi
    24ea:	48 89 e2             	mov    %rsp,%rdx
    24ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    24f1:	50                   	push   %rax
    24f2:	54                   	push   %rsp
    24f3:	45 31 c0             	xor    %r8d,%r8d
    24f6:	31 c9                	xor    %ecx,%ecx
    24f8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 25c9 <main>
    24ff:	ff 15 cb ea 01 00    	call   *0x1eacb(%rip)        # 20fd0 <__libc_start_main@GLIBC_2.34>
    2505:	f4                   	hlt
    2506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250d:	00 00 00

0000000000002510 <deregister_tm_clones>:
    2510:	48 8d 3d 21 eb 01 00 	lea    0x1eb21(%rip),%rdi        # 21038 <__TMC_END__>
    2517:	48 8d 05 1a eb 01 00 	lea    0x1eb1a(%rip),%rax        # 21038 <__TMC_END__>
    251e:	48 39 f8             	cmp    %rdi,%rax
    2521:	74 15                	je     2538 <deregister_tm_clones+0x28>
    2523:	48 8b 05 ae ea 01 00 	mov    0x1eaae(%rip),%rax        # 20fd8 <_ITM_deregisterTMCloneTable@Base>
    252a:	48 85 c0             	test   %rax,%rax
    252d:	74 09                	je     2538 <deregister_tm_clones+0x28>
    252f:	ff e0                	jmp    *%rax
    2531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2538:	c3                   	ret
    2539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002540 <register_tm_clones>:
    2540:	48 8d 3d f1 ea 01 00 	lea    0x1eaf1(%rip),%rdi        # 21038 <__TMC_END__>
    2547:	48 8d 35 ea ea 01 00 	lea    0x1eaea(%rip),%rsi        # 21038 <__TMC_END__>
    254e:	48 29 fe             	sub    %rdi,%rsi
    2551:	48 89 f0             	mov    %rsi,%rax
    2554:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2558:	48 c1 f8 03          	sar    $0x3,%rax
    255c:	48 01 c6             	add    %rax,%rsi
    255f:	48 d1 fe             	sar    $1,%rsi
    2562:	74 14                	je     2578 <register_tm_clones+0x38>
    2564:	48 8b 05 7d ea 01 00 	mov    0x1ea7d(%rip),%rax        # 20fe8 <_ITM_registerTMCloneTable@Base>
    256b:	48 85 c0             	test   %rax,%rax
    256e:	74 08                	je     2578 <register_tm_clones+0x38>
    2570:	ff e0                	jmp    *%rax
    2572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2578:	c3                   	ret
    2579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002580 <__do_global_dtors_aux>:
    2580:	f3 0f 1e fa          	endbr64
    2584:	80 3d dd ea 01 00 00 	cmpb   $0x0,0x1eadd(%rip)        # 21068 <completed.0>
    258b:	75 2b                	jne    25b8 <__do_global_dtors_aux+0x38>
    258d:	55                   	push   %rbp
    258e:	48 83 3d 5a ea 01 00 	cmpq   $0x0,0x1ea5a(%rip)        # 20ff0 <__cxa_finalize@GLIBC_2.2.5>
    2595:	00
    2596:	48 89 e5             	mov    %rsp,%rbp
    2599:	74 0c                	je     25a7 <__do_global_dtors_aux+0x27>
    259b:	48 8b 3d 66 ea 01 00 	mov    0x1ea66(%rip),%rdi        # 21008 <__dso_handle>
    25a2:	e8 d9 fc ff ff       	call   2280 <__cxa_finalize@plt>
    25a7:	e8 64 ff ff ff       	call   2510 <deregister_tm_clones>
    25ac:	c6 05 b5 ea 01 00 01 	movb   $0x1,0x1eab5(%rip)        # 21068 <completed.0>
    25b3:	5d                   	pop    %rbp
    25b4:	c3                   	ret
    25b5:	0f 1f 00             	nopl   (%rax)
    25b8:	c3                   	ret
    25b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000025c0 <frame_dummy>:
    25c0:	f3 0f 1e fa          	endbr64
    25c4:	e9 77 ff ff ff       	jmp    2540 <register_tm_clones>

00000000000025c9 <main>:
    25c9:	f3 0f 1e fa          	endbr64
    25cd:	55                   	push   %rbp
    25ce:	48 89 e5             	mov    %rsp,%rbp
    25d1:	48 83 ec 40          	sub    $0x40,%rsp
    25d5:	89 7d cc             	mov    %edi,-0x34(%rbp)
    25d8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    25dc:	c7 45 d0 03 00 00 00 	movl   $0x3,-0x30(%rbp)
    25e3:	8b 45 cc             	mov    -0x34(%rbp),%eax
    25e6:	3b 45 d0             	cmp    -0x30(%rbp),%eax
    25e9:	7d 2d                	jge    2618 <main+0x4f>
    25eb:	48 8b 05 6e ea 01 00 	mov    0x1ea6e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    25f2:	48 89 c1             	mov    %rax,%rcx
    25f5:	ba 3f 00 00 00       	mov    $0x3f,%edx
    25fa:	be 01 00 00 00       	mov    $0x1,%esi
    25ff:	48 8d 05 02 4a 01 00 	lea    0x14a02(%rip),%rax        # 17008 <_IO_stdin_used+0x8>
    2606:	48 89 c7             	mov    %rax,%rdi
    2609:	e8 82 fe ff ff       	call   2490 <fwrite@plt>
    260e:	bf 01 00 00 00       	mov    $0x1,%edi
    2613:	e8 68 fe ff ff       	call   2480 <exit@plt>
    2618:	8b 45 cc             	mov    -0x34(%rbp),%eax
    261b:	2b 45 d0             	sub    -0x30(%rbp),%eax
    261e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2621:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    2625:	7e 21                	jle    2648 <main+0x7f>
    2627:	8b 45 d0             	mov    -0x30(%rbp),%eax
    262a:	48 98                	cltq
    262c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2633:	00
    2634:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2638:	48 01 c2             	add    %rax,%rdx
    263b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    263e:	89 c6                	mov    %eax,%esi
    2640:	48 89 d7             	mov    %rdx,%rdi
    2643:	e8 6d 01 00 00       	call   27b5 <set_flags>
    2648:	48 8d 05 f9 49 01 00 	lea    0x149f9(%rip),%rax        # 17048 <_IO_stdin_used+0x48>
    264f:	48 89 c7             	mov    %rax,%rdi
    2652:	e8 d4 52 00 00       	call   792b <ParsePascalOnly>
    2657:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    265b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    265f:	48 83 c0 08          	add    $0x8,%rax
    2663:	48 8b 00             	mov    (%rax),%rax
    2666:	48 89 c7             	mov    %rax,%rdi
    2669:	e8 bd 52 00 00       	call   792b <ParsePascalOnly>
    266e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2672:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2677:	0f 84 fb 00 00 00    	je     2778 <main+0x1af>
    267d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2682:	0f 84 f0 00 00 00    	je     2778 <main+0x1af>
    2688:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    268c:	48 8b 40 28          	mov    0x28(%rax),%rax
    2690:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2694:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2698:	48 8b 40 28          	mov    0x28(%rax),%rax
    269c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    26a0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    26a5:	75 0e                	jne    26b5 <main+0xec>
    26a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    26af:	48 89 50 28          	mov    %rdx,0x28(%rax)
    26b3:	eb 2f                	jmp    26e4 <main+0x11b>
    26b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26b9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    26bd:	eb 0c                	jmp    26cb <main+0x102>
    26bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26c3:	48 8b 40 10          	mov    0x10(%rax),%rax
    26c7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    26cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26cf:	48 8b 40 10          	mov    0x10(%rax),%rax
    26d3:	48 85 c0             	test   %rax,%rax
    26d6:	75 e7                	jne    26bf <main+0xf6>
    26d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    26e0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    26e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    26e8:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    26ef:	00
    26f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26f4:	48 89 c7             	mov    %rax,%rdi
    26f7:	e8 e5 77 00 00       	call   9ee1 <start_semcheck>
    26fc:	85 c0                	test   %eax,%eax
    26fe:	75 4e                	jne    274e <main+0x185>
    2700:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2704:	48 83 c0 10          	add    $0x10,%rax
    2708:	48 8b 10             	mov    (%rax),%rdx
    270b:	48 8b 05 4e e9 01 00 	mov    0x1e94e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    2712:	48 8d 0d 3c 49 01 00 	lea    0x1493c(%rip),%rcx        # 17055 <_IO_stdin_used+0x55>
    2719:	48 89 ce             	mov    %rcx,%rsi
    271c:	48 89 c7             	mov    %rax,%rdi
    271f:	b8 00 00 00 00       	mov    $0x0,%eax
    2724:	e8 a7 fc ff ff       	call   23d0 <fprintf@plt>
    2729:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    272d:	48 83 c0 10          	add    $0x10,%rax
    2731:	48 8b 10             	mov    (%rax),%rdx
    2734:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2738:	48 83 c0 08          	add    $0x8,%rax
    273c:	48 8b 08             	mov    (%rax),%rcx
    273f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2743:	48 89 ce             	mov    %rcx,%rsi
    2746:	48 89 c7             	mov    %rax,%rdi
    2749:	e8 83 c5 00 00       	call   ecd1 <codegen>
    274e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2752:	48 89 c7             	mov    %rax,%rdi
    2755:	e8 db 68 00 00       	call   9035 <destroy_tree>
    275a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    275e:	48 89 c7             	mov    %rax,%rdi
    2761:	e8 cf 68 00 00       	call   9035 <destroy_tree>
    2766:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    276d:	00
    276e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    2775:	00
    2776:	eb 36                	jmp    27ae <main+0x1e5>
    2778:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    277d:	74 14                	je     2793 <main+0x1ca>
    277f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2783:	48 89 c7             	mov    %rax,%rdi
    2786:	e8 aa 68 00 00       	call   9035 <destroy_tree>
    278b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2792:	00
    2793:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2798:	74 14                	je     27ae <main+0x1e5>
    279a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    279e:	48 89 c7             	mov    %rax,%rdi
    27a1:	e8 8f 68 00 00       	call   9035 <destroy_tree>
    27a6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    27ad:	00
    27ae:	b8 00 00 00 00       	mov    $0x0,%eax
    27b3:	c9                   	leave
    27b4:	c3                   	ret

00000000000027b5 <set_flags>:
    27b5:	f3 0f 1e fa          	endbr64
    27b9:	55                   	push   %rbp
    27ba:	48 89 e5             	mov    %rsp,%rbp
    27bd:	48 83 ec 20          	sub    $0x20,%rsp
    27c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    27c5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    27c8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    27cf:	e9 84 01 00 00       	jmp    2958 <set_flags+0x1a3>
    27d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27d7:	48 98                	cltq
    27d9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    27e0:	00
    27e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    27e5:	48 01 d0             	add    %rdx,%rax
    27e8:	48 8b 00             	mov    (%rax),%rax
    27eb:	48 8d 15 80 48 01 00 	lea    0x14880(%rip),%rdx        # 17072 <_IO_stdin_used+0x72>
    27f2:	48 89 d6             	mov    %rdx,%rsi
    27f5:	48 89 c7             	mov    %rax,%rdi
    27f8:	e8 c3 fb ff ff       	call   23c0 <strcmp@plt>
    27fd:	85 c0                	test   %eax,%eax
    27ff:	75 55                	jne    2856 <set_flags+0xa1>
    2801:	48 8b 05 58 e8 01 00 	mov    0x1e858(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    2808:	48 89 c1             	mov    %rax,%rcx
    280b:	ba 22 00 00 00       	mov    $0x22,%edx
    2810:	be 01 00 00 00       	mov    $0x1,%esi
    2815:	48 8d 05 64 48 01 00 	lea    0x14864(%rip),%rax        # 17080 <_IO_stdin_used+0x80>
    281c:	48 89 c7             	mov    %rax,%rdi
    281f:	e8 6c fc ff ff       	call   2490 <fwrite@plt>
    2824:	48 8b 05 35 e8 01 00 	mov    0x1e835(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    282b:	48 89 c1             	mov    %rax,%rcx
    282e:	ba 3f 00 00 00       	mov    $0x3f,%edx
    2833:	be 01 00 00 00       	mov    $0x1,%esi
    2838:	48 8d 05 69 48 01 00 	lea    0x14869(%rip),%rax        # 170a8 <_IO_stdin_used+0xa8>
    283f:	48 89 c7             	mov    %rax,%rdi
    2842:	e8 49 fc ff ff       	call   2490 <fwrite@plt>
    2847:	b8 00 00 00 00       	mov    $0x0,%eax
    284c:	e8 15 01 00 00       	call   2966 <set_nonlocal_flag>
    2851:	e9 fa 00 00 00       	jmp    2950 <set_flags+0x19b>
    2856:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2859:	48 98                	cltq
    285b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2862:	00
    2863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2867:	48 01 d0             	add    %rdx,%rax
    286a:	48 8b 00             	mov    (%rax),%rax
    286d:	48 8d 15 74 48 01 00 	lea    0x14874(%rip),%rdx        # 170e8 <_IO_stdin_used+0xe8>
    2874:	48 89 d6             	mov    %rdx,%rsi
    2877:	48 89 c7             	mov    %rax,%rdi
    287a:	e8 41 fb ff ff       	call   23c0 <strcmp@plt>
    287f:	85 c0                	test   %eax,%eax
    2881:	75 32                	jne    28b5 <set_flags+0x100>
    2883:	48 8b 05 d6 e7 01 00 	mov    0x1e7d6(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    288a:	48 89 c1             	mov    %rax,%rcx
    288d:	ba 1b 00 00 00       	mov    $0x1b,%edx
    2892:	be 01 00 00 00       	mov    $0x1,%esi
    2897:	48 8d 05 4e 48 01 00 	lea    0x1484e(%rip),%rax        # 170ec <_IO_stdin_used+0xec>
    289e:	48 89 c7             	mov    %rax,%rdi
    28a1:	e8 ea fb ff ff       	call   2490 <fwrite@plt>
    28a6:	b8 00 00 00 00       	mov    $0x0,%eax
    28ab:	e8 cb 00 00 00       	call   297b <set_o1_flag>
    28b0:	e9 9b 00 00 00       	jmp    2950 <set_flags+0x19b>
    28b5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    28b8:	48 98                	cltq
    28ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    28c1:	00
    28c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28c6:	48 01 d0             	add    %rdx,%rax
    28c9:	48 8b 00             	mov    (%rax),%rax
    28cc:	48 8d 15 35 48 01 00 	lea    0x14835(%rip),%rdx        # 17108 <_IO_stdin_used+0x108>
    28d3:	48 89 d6             	mov    %rdx,%rsi
    28d6:	48 89 c7             	mov    %rax,%rdi
    28d9:	e8 e2 fa ff ff       	call   23c0 <strcmp@plt>
    28de:	85 c0                	test   %eax,%eax
    28e0:	75 2f                	jne    2911 <set_flags+0x15c>
    28e2:	48 8b 05 77 e7 01 00 	mov    0x1e777(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    28e9:	48 89 c1             	mov    %rax,%rcx
    28ec:	ba 1b 00 00 00       	mov    $0x1b,%edx
    28f1:	be 01 00 00 00       	mov    $0x1,%esi
    28f6:	48 8d 05 0f 48 01 00 	lea    0x1480f(%rip),%rax        # 1710c <_IO_stdin_used+0x10c>
    28fd:	48 89 c7             	mov    %rax,%rdi
    2900:	e8 8b fb ff ff       	call   2490 <fwrite@plt>
    2905:	b8 00 00 00 00       	mov    $0x0,%eax
    290a:	e8 8b 00 00 00       	call   299a <set_o2_flag>
    290f:	eb 3f                	jmp    2950 <set_flags+0x19b>
    2911:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2914:	48 98                	cltq
    2916:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    291d:	00
    291e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2922:	48 01 d0             	add    %rdx,%rax
    2925:	48 8b 10             	mov    (%rax),%rdx
    2928:	48 8b 05 31 e7 01 00 	mov    0x1e731(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    292f:	48 8d 0d f2 47 01 00 	lea    0x147f2(%rip),%rcx        # 17128 <_IO_stdin_used+0x128>
    2936:	48 89 ce             	mov    %rcx,%rsi
    2939:	48 89 c7             	mov    %rax,%rdi
    293c:	b8 00 00 00 00       	mov    $0x0,%eax
    2941:	e8 8a fa ff ff       	call   23d0 <fprintf@plt>
    2946:	bf 01 00 00 00       	mov    $0x1,%edi
    294b:	e8 30 fb ff ff       	call   2480 <exit@plt>
    2950:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
    2954:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2958:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    295c:	0f 8f 72 fe ff ff    	jg     27d4 <set_flags+0x1f>
    2962:	90                   	nop
    2963:	90                   	nop
    2964:	c9                   	leave
    2965:	c3                   	ret

0000000000002966 <set_nonlocal_flag>:
    2966:	f3 0f 1e fa          	endbr64
    296a:	55                   	push   %rbp
    296b:	48 89 e5             	mov    %rsp,%rbp
    296e:	c7 05 10 e7 01 00 01 	movl   $0x1,0x1e710(%rip)        # 21088 <FLAG_NON_LOCAL_CHASING>
    2975:	00 00 00
    2978:	90                   	nop
    2979:	5d                   	pop    %rbp
    297a:	c3                   	ret

000000000000297b <set_o1_flag>:
    297b:	f3 0f 1e fa          	endbr64
    297f:	55                   	push   %rbp
    2980:	48 89 e5             	mov    %rsp,%rbp
    2983:	8b 05 03 e7 01 00    	mov    0x1e703(%rip),%eax        # 2108c <FLAG_OPTIMIZE>
    2989:	85 c0                	test   %eax,%eax
    298b:	7f 0a                	jg     2997 <set_o1_flag+0x1c>
    298d:	c7 05 f5 e6 01 00 01 	movl   $0x1,0x1e6f5(%rip)        # 2108c <FLAG_OPTIMIZE>
    2994:	00 00 00
    2997:	90                   	nop
    2998:	5d                   	pop    %rbp
    2999:	c3                   	ret

000000000000299a <set_o2_flag>:
    299a:	f3 0f 1e fa          	endbr64
    299e:	55                   	push   %rbp
    299f:	48 89 e5             	mov    %rsp,%rbp
    29a2:	8b 05 e4 e6 01 00    	mov    0x1e6e4(%rip),%eax        # 2108c <FLAG_OPTIMIZE>
    29a8:	83 f8 01             	cmp    $0x1,%eax
    29ab:	7f 0a                	jg     29b7 <set_o2_flag+0x1d>
    29ad:	c7 05 d5 e6 01 00 02 	movl   $0x2,0x1e6d5(%rip)        # 2108c <FLAG_OPTIMIZE>
    29b4:	00 00 00
    29b7:	90                   	nop
    29b8:	5d                   	pop    %rbp
    29b9:	c3                   	ret

00000000000029ba <nonlocal_flag>:
    29ba:	f3 0f 1e fa          	endbr64
    29be:	55                   	push   %rbp
    29bf:	48 89 e5             	mov    %rsp,%rbp
    29c2:	8b 05 c0 e6 01 00    	mov    0x1e6c0(%rip),%eax        # 21088 <FLAG_NON_LOCAL_CHASING>
    29c8:	5d                   	pop    %rbp
    29c9:	c3                   	ret

00000000000029ca <optimize_flag>:
    29ca:	f3 0f 1e fa          	endbr64
    29ce:	55                   	push   %rbp
    29cf:	48 89 e5             	mov    %rsp,%rbp
    29d2:	8b 05 b4 e6 01 00    	mov    0x1e6b4(%rip),%eax        # 2108c <FLAG_OPTIMIZE>
    29d8:	5d                   	pop    %rbp
    29d9:	c3                   	ret

00000000000029da <is_defined>:
    29da:	f3 0f 1e fa          	endbr64
    29de:	55                   	push   %rbp
    29df:	48 89 e5             	mov    %rsp,%rbp
    29e2:	48 83 ec 20          	sub    $0x20,%rsp
    29e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    29ea:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    29f1:	eb 36                	jmp    2a29 <is_defined+0x4f>
    29f3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    29f6:	48 98                	cltq
    29f8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    29ff:	00
    2a00:	48 8d 05 19 e6 01 00 	lea    0x1e619(%rip),%rax        # 21020 <defined_symbols>
    2a07:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    2a0b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2a0f:	48 89 d6             	mov    %rdx,%rsi
    2a12:	48 89 c7             	mov    %rax,%rdi
    2a15:	e8 a6 f9 ff ff       	call   23c0 <strcmp@plt>
    2a1a:	85 c0                	test   %eax,%eax
    2a1c:	75 07                	jne    2a25 <is_defined+0x4b>
    2a1e:	b8 01 00 00 00       	mov    $0x1,%eax
    2a23:	eb 26                	jmp    2a4b <is_defined+0x71>
    2a25:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2a29:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a2c:	48 98                	cltq
    2a2e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a35:	00
    2a36:	48 8d 05 e3 e5 01 00 	lea    0x1e5e3(%rip),%rax        # 21020 <defined_symbols>
    2a3d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    2a41:	48 85 c0             	test   %rax,%rax
    2a44:	75 ad                	jne    29f3 <is_defined+0x19>
    2a46:	b8 00 00 00 00       	mov    $0x0,%eax
    2a4b:	c9                   	leave
    2a4c:	c3                   	ret

0000000000002a4d <yylex>:
    2a4d:	f3 0f 1e fa          	endbr64
    2a51:	55                   	push   %rbp
    2a52:	48 89 e5             	mov    %rsp,%rbp
    2a55:	53                   	push   %rbx
    2a56:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    2a5d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2a64:	00 00
    2a66:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2a6a:	31 c0                	xor    %eax,%eax
    2a6c:	8b 05 2e ec 01 00    	mov    0x1ec2e(%rip),%eax        # 216a0 <yy_init>
    2a72:	85 c0                	test   %eax,%eax
    2a74:	0f 85 b2 00 00 00    	jne    2b2c <yylex+0xdf>
    2a7a:	c7 05 1c ec 01 00 01 	movl   $0x1,0x1ec1c(%rip)        # 216a0 <yy_init>
    2a81:	00 00 00
    2a84:	8b 05 1a ec 01 00    	mov    0x1ec1a(%rip),%eax        # 216a4 <yy_start>
    2a8a:	85 c0                	test   %eax,%eax
    2a8c:	75 0a                	jne    2a98 <yylex+0x4b>
    2a8e:	c7 05 0c ec 01 00 01 	movl   $0x1,0x1ec0c(%rip)        # 216a4 <yy_start>
    2a95:	00 00 00
    2a98:	48 8b 05 09 e6 01 00 	mov    0x1e609(%rip),%rax        # 210a8 <yyin>
    2a9f:	48 85 c0             	test   %rax,%rax
    2aa2:	75 0e                	jne    2ab2 <yylex+0x65>
    2aa4:	48 8b 05 a5 e5 01 00 	mov    0x1e5a5(%rip),%rax        # 21050 <stdin@GLIBC_2.2.5>
    2aab:	48 89 05 f6 e5 01 00 	mov    %rax,0x1e5f6(%rip)        # 210a8 <yyin>
    2ab2:	48 8b 05 f7 e5 01 00 	mov    0x1e5f7(%rip),%rax        # 210b0 <yyout>
    2ab9:	48 85 c0             	test   %rax,%rax
    2abc:	75 0e                	jne    2acc <yylex+0x7f>
    2abe:	48 8b 05 7b e5 01 00 	mov    0x1e57b(%rip),%rax        # 21040 <stdout@GLIBC_2.2.5>
    2ac5:	48 89 05 e4 e5 01 00 	mov    %rax,0x1e5e4(%rip)        # 210b0 <yyout>
    2acc:	48 8b 05 b5 eb 01 00 	mov    0x1ebb5(%rip),%rax        # 21688 <yy_buffer_stack>
    2ad3:	48 85 c0             	test   %rax,%rax
    2ad6:	74 1d                	je     2af5 <yylex+0xa8>
    2ad8:	48 8b 05 a9 eb 01 00 	mov    0x1eba9(%rip),%rax        # 21688 <yy_buffer_stack>
    2adf:	48 8b 15 92 eb 01 00 	mov    0x1eb92(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    2ae6:	48 c1 e2 03          	shl    $0x3,%rdx
    2aea:	48 01 d0             	add    %rdx,%rax
    2aed:	48 8b 00             	mov    (%rax),%rax
    2af0:	48 85 c0             	test   %rax,%rax
    2af3:	75 32                	jne    2b27 <yylex+0xda>
    2af5:	e8 31 21 00 00       	call   4c2b <yyensure_buffer_stack>
    2afa:	48 8b 05 a7 e5 01 00 	mov    0x1e5a7(%rip),%rax        # 210a8 <yyin>
    2b01:	48 8b 15 80 eb 01 00 	mov    0x1eb80(%rip),%rdx        # 21688 <yy_buffer_stack>
    2b08:	48 8b 0d 69 eb 01 00 	mov    0x1eb69(%rip),%rcx        # 21678 <yy_buffer_stack_top>
    2b0f:	48 c1 e1 03          	shl    $0x3,%rcx
    2b13:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
    2b17:	be 00 40 00 00       	mov    $0x4000,%esi
    2b1c:	48 89 c7             	mov    %rax,%rdi
    2b1f:	e8 89 1c 00 00       	call   47ad <yy_create_buffer>
    2b24:	48 89 03             	mov    %rax,(%rbx)
    2b27:	e8 f2 1b 00 00       	call   471e <yy_load_buffer_state>
    2b2c:	48 8b 05 65 eb 01 00 	mov    0x1eb65(%rip),%rax        # 21698 <yy_c_buf_p>
    2b33:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    2b3a:	0f b6 15 4f eb 01 00 	movzbl 0x1eb4f(%rip),%edx        # 21690 <yy_hold_char>
    2b41:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2b48:	88 10                	mov    %dl,(%rax)
    2b4a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2b51:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    2b58:	8b 05 46 eb 01 00    	mov    0x1eb46(%rip),%eax        # 216a4 <yy_start>
    2b5e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    2b64:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2b6b:	0f b6 00             	movzbl (%rax),%eax
    2b6e:	0f b6 c0             	movzbl %al,%eax
    2b71:	48 98                	cltq
    2b73:	48 8d 15 a6 47 01 00 	lea    0x147a6(%rip),%rdx        # 17320 <yy_ec>
    2b7a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    2b7e:	88 85 43 ff ff ff    	mov    %al,-0xbd(%rbp)
    2b84:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2b8a:	48 98                	cltq
    2b8c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2b90:	48 8d 05 c9 45 01 00 	lea    0x145c9(%rip),%rax        # 17160 <yy_accept>
    2b97:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2b9b:	66 85 c0             	test   %ax,%ax
    2b9e:	74 60                	je     2c00 <yylex+0x1b3>
    2ba0:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2ba6:	89 05 00 eb 01 00    	mov    %eax,0x1eb00(%rip)        # 216ac <yy_last_accepting_state>
    2bac:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2bb3:	48 89 05 f6 ea 01 00 	mov    %rax,0x1eaf6(%rip)        # 216b0 <yy_last_accepting_cpos>
    2bba:	eb 44                	jmp    2c00 <yylex+0x1b3>
    2bbc:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2bc2:	48 98                	cltq
    2bc4:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2bc8:	48 8d 05 71 4a 01 00 	lea    0x14a71(%rip),%rax        # 17640 <yy_def>
    2bcf:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2bd3:	98                   	cwtl
    2bd4:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    2bda:	81 bd 44 ff ff ff d4 	cmpl   $0xd4,-0xbc(%rbp)
    2be1:	00 00 00
    2be4:	7e 1a                	jle    2c00 <yylex+0x1b3>
    2be6:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    2bed:	48 98                	cltq
    2bef:	48 8d 15 2a 48 01 00 	lea    0x1482a(%rip),%rdx        # 17420 <yy_meta>
    2bf6:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    2bfa:	88 85 43 ff ff ff    	mov    %al,-0xbd(%rbp)
    2c00:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2c06:	48 98                	cltq
    2c08:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2c0c:	48 8d 05 4d 48 01 00 	lea    0x1484d(%rip),%rax        # 17460 <yy_base>
    2c13:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2c17:	0f bf d0             	movswl %ax,%edx
    2c1a:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    2c21:	01 d0                	add    %edx,%eax
    2c23:	48 98                	cltq
    2c25:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2c29:	48 8d 05 90 4e 01 00 	lea    0x14e90(%rip),%rax        # 17ac0 <yy_chk>
    2c30:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2c34:	98                   	cwtl
    2c35:	39 85 44 ff ff ff    	cmp    %eax,-0xbc(%rbp)
    2c3b:	0f 85 7b ff ff ff    	jne    2bbc <yylex+0x16f>
    2c41:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2c47:	48 98                	cltq
    2c49:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2c4d:	48 8d 05 0c 48 01 00 	lea    0x1480c(%rip),%rax        # 17460 <yy_base>
    2c54:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2c58:	0f bf d0             	movswl %ax,%edx
    2c5b:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    2c62:	01 d0                	add    %edx,%eax
    2c64:	48 98                	cltq
    2c66:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2c6a:	48 8d 05 af 4b 01 00 	lea    0x14baf(%rip),%rax        # 17820 <yy_nxt>
    2c71:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2c75:	98                   	cwtl
    2c76:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    2c7c:	48 83 85 58 ff ff ff 	addq   $0x1,-0xa8(%rbp)
    2c83:	01
    2c84:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2c8a:	48 98                	cltq
    2c8c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2c90:	48 8d 05 c9 47 01 00 	lea    0x147c9(%rip),%rax        # 17460 <yy_base>
    2c97:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2c9b:	66 3d 12 01          	cmp    $0x112,%ax
    2c9f:	0f 85 bf fe ff ff    	jne    2b64 <yylex+0x117>
    2ca5:	90                   	nop
    2ca6:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2cac:	48 98                	cltq
    2cae:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2cb2:	48 8d 05 a7 44 01 00 	lea    0x144a7(%rip),%rax        # 17160 <yy_accept>
    2cb9:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2cbd:	98                   	cwtl
    2cbe:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    2cc4:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
    2ccb:	75 38                	jne    2d05 <yylex+0x2b8>
    2ccd:	48 8b 05 dc e9 01 00 	mov    0x1e9dc(%rip),%rax        # 216b0 <yy_last_accepting_cpos>
    2cd4:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    2cdb:	8b 05 cb e9 01 00    	mov    0x1e9cb(%rip),%eax        # 216ac <yy_last_accepting_state>
    2ce1:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    2ce7:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2ced:	48 98                	cltq
    2cef:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2cf3:	48 8d 05 66 44 01 00 	lea    0x14466(%rip),%rax        # 17160 <yy_accept>
    2cfa:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2cfe:	98                   	cwtl
    2cff:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    2d05:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2d0c:	48 89 05 ad e3 01 00 	mov    %rax,0x1e3ad(%rip)        # 210c0 <yytext>
    2d13:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2d1a:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
    2d21:	89 05 79 e3 01 00    	mov    %eax,0x1e379(%rip)        # 210a0 <yyleng>
    2d27:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2d2e:	0f b6 00             	movzbl (%rax),%eax
    2d31:	88 05 59 e9 01 00    	mov    %al,0x1e959(%rip)        # 21690 <yy_hold_char>
    2d37:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2d3e:	c6 00 00             	movb   $0x0,(%rax)
    2d41:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2d48:	48 89 05 49 e9 01 00 	mov    %rax,0x1e949(%rip)        # 21698 <yy_c_buf_p>
    2d4f:	83 bd 48 ff ff ff 42 	cmpl   $0x42,-0xb8(%rbp)
    2d56:	0f 87 41 0c 00 00    	ja     399d <yylex+0xf50>
    2d5c:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    2d62:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2d69:	00
    2d6a:	48 8d 05 43 50 01 00 	lea    0x15043(%rip),%rax        # 17db4 <yy_chk+0x2f4>
    2d71:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    2d74:	48 98                	cltq
    2d76:	48 8d 15 37 50 01 00 	lea    0x15037(%rip),%rdx        # 17db4 <yy_chk+0x2f4>
    2d7d:	48 01 d0             	add    %rdx,%rax
    2d80:	3e ff e0             	notrack jmp *%rax
    2d83:	0f b6 15 06 e9 01 00 	movzbl 0x1e906(%rip),%edx        # 21690 <yy_hold_char>
    2d8a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2d91:	88 10                	mov    %dl,(%rax)
    2d93:	48 8b 05 16 e9 01 00 	mov    0x1e916(%rip),%rax        # 216b0 <yy_last_accepting_cpos>
    2d9a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    2da1:	8b 05 05 e9 01 00    	mov    0x1e905(%rip),%eax        # 216ac <yy_last_accepting_state>
    2da7:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    2dad:	e9 f4 fe ff ff       	jmp    2ca6 <yylex+0x259>
    2db2:	0f b6 15 d7 e8 01 00 	movzbl 0x1e8d7(%rip),%edx        # 21690 <yy_hold_char>
    2db9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2dc0:	88 10                	mov    %dl,(%rax)
    2dc2:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2dc9:	48 83 c0 01          	add    $0x1,%rax
    2dcd:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    2dd4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2ddb:	48 89 05 b6 e8 01 00 	mov    %rax,0x1e8b6(%rip)        # 21698 <yy_c_buf_p>
    2de2:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2de9:	48 89 05 d0 e2 01 00 	mov    %rax,0x1e2d0(%rip)        # 210c0 <yytext>
    2df0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2df7:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
    2dfe:	89 05 9c e2 01 00    	mov    %eax,0x1e29c(%rip)        # 210a0 <yyleng>
    2e04:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2e0b:	0f b6 00             	movzbl (%rax),%eax
    2e0e:	88 05 7c e8 01 00    	mov    %al,0x1e87c(%rip)        # 21690 <yy_hold_char>
    2e14:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2e1b:	c6 00 00             	movb   $0x0,(%rax)
    2e1e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    2e25:	48 89 05 6c e8 01 00 	mov    %rax,0x1e86c(%rip)        # 21698 <yy_c_buf_p>
    2e2c:	c7 05 6e e8 01 00 05 	movl   $0x5,0x1e86e(%rip)        # 216a4 <yy_start>
    2e33:	00 00 00
    2e36:	e9 a2 0b 00 00       	jmp    39dd <yylex+0xf90>
    2e3b:	c7 05 5f e8 01 00 01 	movl   $0x1,0x1e85f(%rip)        # 216a4 <yy_start>
    2e42:	00 00 00
    2e45:	e9 93 0b 00 00       	jmp    39dd <yylex+0xf90>
    2e4a:	48 8b 05 6f e2 01 00 	mov    0x1e26f(%rip),%rax        # 210c0 <yytext>
    2e51:	0f b6 00             	movzbl (%rax),%eax
    2e54:	3c 0a                	cmp    $0xa,%al
    2e56:	0f 85 56 0b 00 00    	jne    39b2 <yylex+0xf65>
    2e5c:	8b 05 b2 e1 01 00    	mov    0x1e1b2(%rip),%eax        # 21014 <line_num>
    2e62:	83 c0 01             	add    $0x1,%eax
    2e65:	89 05 a9 e1 01 00    	mov    %eax,0x1e1a9(%rip)        # 21014 <line_num>
    2e6b:	e9 42 0b 00 00       	jmp    39b2 <yylex+0xf65>
    2e70:	48 8b 05 49 e2 01 00 	mov    0x1e249(%rip),%rax        # 210c0 <yytext>
    2e77:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    2e7b:	48 8d 0d ca 4e 01 00 	lea    0x14eca(%rip),%rcx        # 17d4c <yy_chk+0x28c>
    2e82:	48 89 ce             	mov    %rcx,%rsi
    2e85:	48 89 c7             	mov    %rax,%rdi
    2e88:	b8 00 00 00 00       	mov    $0x0,%eax
    2e8d:	e8 8e f5 ff ff       	call   2420 <__isoc99_sscanf@plt>
    2e92:	8b 05 d8 e7 01 00    	mov    0x1e7d8(%rip),%eax        # 21670 <if_stack_ptr>
    2e98:	85 c0                	test   %eax,%eax
    2e9a:	7e 4a                	jle    2ee6 <yylex+0x499>
    2e9c:	8b 05 ce e7 01 00    	mov    0x1e7ce(%rip),%eax        # 21670 <if_stack_ptr>
    2ea2:	83 e8 01             	sub    $0x1,%eax
    2ea5:	48 98                	cltq
    2ea7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2eae:	00
    2eaf:	48 8d 05 2a e6 01 00 	lea    0x1e62a(%rip),%rax        # 214e0 <if_stack>
    2eb6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    2eb9:	85 c0                	test   %eax,%eax
    2ebb:	75 29                	jne    2ee6 <yylex+0x499>
    2ebd:	8b 05 ad e7 01 00    	mov    0x1e7ad(%rip),%eax        # 21670 <if_stack_ptr>
    2ec3:	8d 50 01             	lea    0x1(%rax),%edx
    2ec6:	89 15 a4 e7 01 00    	mov    %edx,0x1e7a4(%rip)        # 21670 <if_stack_ptr>
    2ecc:	48 98                	cltq
    2ece:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2ed5:	00
    2ed6:	48 8d 05 03 e6 01 00 	lea    0x1e603(%rip),%rax        # 214e0 <if_stack>
    2edd:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
    2ee4:	eb 30                	jmp    2f16 <yylex+0x4c9>
    2ee6:	8b 1d 84 e7 01 00    	mov    0x1e784(%rip),%ebx        # 21670 <if_stack_ptr>
    2eec:	8d 43 01             	lea    0x1(%rbx),%eax
    2eef:	89 05 7b e7 01 00    	mov    %eax,0x1e77b(%rip)        # 21670 <if_stack_ptr>
    2ef5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    2ef9:	48 89 c7             	mov    %rax,%rdi
    2efc:	e8 d9 fa ff ff       	call   29da <is_defined>
    2f01:	48 63 d3             	movslq %ebx,%rdx
    2f04:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    2f0b:	00
    2f0c:	48 8d 15 cd e5 01 00 	lea    0x1e5cd(%rip),%rdx        # 214e0 <if_stack>
    2f13:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
    2f16:	8b 05 54 e7 01 00    	mov    0x1e754(%rip),%eax        # 21670 <if_stack_ptr>
    2f1c:	83 e8 01             	sub    $0x1,%eax
    2f1f:	48 98                	cltq
    2f21:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2f28:	00
    2f29:	48 8d 05 b0 e5 01 00 	lea    0x1e5b0(%rip),%rax        # 214e0 <if_stack>
    2f30:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    2f33:	85 c0                	test   %eax,%eax
    2f35:	0f 85 7d 0a 00 00    	jne    39b8 <yylex+0xf6b>
    2f3b:	c7 05 5f e7 01 00 07 	movl   $0x7,0x1e75f(%rip)        # 216a4 <yy_start>
    2f42:	00 00 00
    2f45:	e9 6e 0a 00 00       	jmp    39b8 <yylex+0xf6b>
    2f4a:	48 8b 05 6f e1 01 00 	mov    0x1e16f(%rip),%rax        # 210c0 <yytext>
    2f51:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    2f55:	48 8d 0d fe 4d 01 00 	lea    0x14dfe(%rip),%rcx        # 17d5a <yy_chk+0x29a>
    2f5c:	48 89 ce             	mov    %rcx,%rsi
    2f5f:	48 89 c7             	mov    %rax,%rdi
    2f62:	b8 00 00 00 00       	mov    $0x0,%eax
    2f67:	e8 b4 f4 ff ff       	call   2420 <__isoc99_sscanf@plt>
    2f6c:	8b 05 fe e6 01 00    	mov    0x1e6fe(%rip),%eax        # 21670 <if_stack_ptr>
    2f72:	85 c0                	test   %eax,%eax
    2f74:	7e 4a                	jle    2fc0 <yylex+0x573>
    2f76:	8b 05 f4 e6 01 00    	mov    0x1e6f4(%rip),%eax        # 21670 <if_stack_ptr>
    2f7c:	83 e8 01             	sub    $0x1,%eax
    2f7f:	48 98                	cltq
    2f81:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2f88:	00
    2f89:	48 8d 05 50 e5 01 00 	lea    0x1e550(%rip),%rax        # 214e0 <if_stack>
    2f90:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    2f93:	85 c0                	test   %eax,%eax
    2f95:	75 29                	jne    2fc0 <yylex+0x573>
    2f97:	8b 05 d3 e6 01 00    	mov    0x1e6d3(%rip),%eax        # 21670 <if_stack_ptr>
    2f9d:	8d 50 01             	lea    0x1(%rax),%edx
    2fa0:	89 15 ca e6 01 00    	mov    %edx,0x1e6ca(%rip)        # 21670 <if_stack_ptr>
    2fa6:	48 98                	cltq
    2fa8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2faf:	00
    2fb0:	48 8d 05 29 e5 01 00 	lea    0x1e529(%rip),%rax        # 214e0 <if_stack>
    2fb7:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
    2fbe:	eb 37                	jmp    2ff7 <yylex+0x5aa>
    2fc0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    2fc4:	48 89 c7             	mov    %rax,%rdi
    2fc7:	e8 0e fa ff ff       	call   29da <is_defined>
    2fcc:	85 c0                	test   %eax,%eax
    2fce:	0f 94 c1             	sete   %cl
    2fd1:	8b 05 99 e6 01 00    	mov    0x1e699(%rip),%eax        # 21670 <if_stack_ptr>
    2fd7:	8d 50 01             	lea    0x1(%rax),%edx
    2fda:	89 15 90 e6 01 00    	mov    %edx,0x1e690(%rip)        # 21670 <if_stack_ptr>
    2fe0:	0f b6 d1             	movzbl %cl,%edx
    2fe3:	48 98                	cltq
    2fe5:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    2fec:	00
    2fed:	48 8d 05 ec e4 01 00 	lea    0x1e4ec(%rip),%rax        # 214e0 <if_stack>
    2ff4:	89 14 01             	mov    %edx,(%rcx,%rax,1)
    2ff7:	8b 05 73 e6 01 00    	mov    0x1e673(%rip),%eax        # 21670 <if_stack_ptr>
    2ffd:	83 e8 01             	sub    $0x1,%eax
    3000:	48 98                	cltq
    3002:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3009:	00
    300a:	48 8d 05 cf e4 01 00 	lea    0x1e4cf(%rip),%rax        # 214e0 <if_stack>
    3011:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3014:	85 c0                	test   %eax,%eax
    3016:	0f 85 a2 09 00 00    	jne    39be <yylex+0xf71>
    301c:	c7 05 7e e6 01 00 07 	movl   $0x7,0x1e67e(%rip)        # 216a4 <yy_start>
    3023:	00 00 00
    3026:	e9 93 09 00 00       	jmp    39be <yylex+0xf71>
    302b:	8b 05 3f e6 01 00    	mov    0x1e63f(%rip),%eax        # 21670 <if_stack_ptr>
    3031:	85 c0                	test   %eax,%eax
    3033:	0f 8e 8b 09 00 00    	jle    39c4 <yylex+0xf77>
    3039:	8b 05 31 e6 01 00    	mov    0x1e631(%rip),%eax        # 21670 <if_stack_ptr>
    303f:	83 e8 01             	sub    $0x1,%eax
    3042:	48 98                	cltq
    3044:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    304b:	00
    304c:	48 8d 05 8d e4 01 00 	lea    0x1e48d(%rip),%rax        # 214e0 <if_stack>
    3053:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3056:	83 f8 01             	cmp    $0x1,%eax
    3059:	75 0f                	jne    306a <yylex+0x61d>
    305b:	c7 05 3f e6 01 00 07 	movl   $0x7,0x1e63f(%rip)        # 216a4 <yy_start>
    3062:	00 00 00
    3065:	e9 5a 09 00 00       	jmp    39c4 <yylex+0xf77>
    306a:	8b 05 00 e6 01 00    	mov    0x1e600(%rip),%eax        # 21670 <if_stack_ptr>
    3070:	83 f8 01             	cmp    $0x1,%eax
    3073:	7e 21                	jle    3096 <yylex+0x649>
    3075:	8b 05 f5 e5 01 00    	mov    0x1e5f5(%rip),%eax        # 21670 <if_stack_ptr>
    307b:	83 e8 02             	sub    $0x2,%eax
    307e:	48 98                	cltq
    3080:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3087:	00
    3088:	48 8d 05 51 e4 01 00 	lea    0x1e451(%rip),%rax        # 214e0 <if_stack>
    308f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3092:	85 c0                	test   %eax,%eax
    3094:	74 0f                	je     30a5 <yylex+0x658>
    3096:	c7 05 04 e6 01 00 01 	movl   $0x1,0x1e604(%rip)        # 216a4 <yy_start>
    309d:	00 00 00
    30a0:	e9 1f 09 00 00       	jmp    39c4 <yylex+0xf77>
    30a5:	e9 1a 09 00 00       	jmp    39c4 <yylex+0xf77>
    30aa:	8b 05 c0 e5 01 00    	mov    0x1e5c0(%rip),%eax        # 21670 <if_stack_ptr>
    30b0:	85 c0                	test   %eax,%eax
    30b2:	0f 8e 12 09 00 00    	jle    39ca <yylex+0xf7d>
    30b8:	8b 05 b2 e5 01 00    	mov    0x1e5b2(%rip),%eax        # 21670 <if_stack_ptr>
    30be:	83 e8 01             	sub    $0x1,%eax
    30c1:	89 05 a9 e5 01 00    	mov    %eax,0x1e5a9(%rip)        # 21670 <if_stack_ptr>
    30c7:	8b 05 a3 e5 01 00    	mov    0x1e5a3(%rip),%eax        # 21670 <if_stack_ptr>
    30cd:	85 c0                	test   %eax,%eax
    30cf:	74 26                	je     30f7 <yylex+0x6aa>
    30d1:	8b 05 99 e5 01 00    	mov    0x1e599(%rip),%eax        # 21670 <if_stack_ptr>
    30d7:	83 e8 01             	sub    $0x1,%eax
    30da:	48 98                	cltq
    30dc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    30e3:	00
    30e4:	48 8d 05 f5 e3 01 00 	lea    0x1e3f5(%rip),%rax        # 214e0 <if_stack>
    30eb:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    30ee:	83 f8 01             	cmp    $0x1,%eax
    30f1:	0f 85 d3 08 00 00    	jne    39ca <yylex+0xf7d>
    30f7:	c7 05 a3 e5 01 00 01 	movl   $0x1,0x1e5a3(%rip)        # 216a4 <yy_start>
    30fe:	00 00 00
    3101:	e9 c4 08 00 00       	jmp    39ca <yylex+0xf7d>
    3106:	8b 05 64 e5 01 00    	mov    0x1e564(%rip),%eax        # 21670 <if_stack_ptr>
    310c:	83 c0 01             	add    $0x1,%eax
    310f:	89 05 5b e5 01 00    	mov    %eax,0x1e55b(%rip)        # 21670 <if_stack_ptr>
    3115:	e9 c3 08 00 00       	jmp    39dd <yylex+0xf90>
    311a:	8b 05 50 e5 01 00    	mov    0x1e550(%rip),%eax        # 21670 <if_stack_ptr>
    3120:	83 c0 01             	add    $0x1,%eax
    3123:	89 05 47 e5 01 00    	mov    %eax,0x1e547(%rip)        # 21670 <if_stack_ptr>
    3129:	e9 af 08 00 00       	jmp    39dd <yylex+0xf90>
    312e:	8b 05 3c e5 01 00    	mov    0x1e53c(%rip),%eax        # 21670 <if_stack_ptr>
    3134:	85 c0                	test   %eax,%eax
    3136:	0f 8e 94 08 00 00    	jle    39d0 <yylex+0xf83>
    313c:	8b 05 2e e5 01 00    	mov    0x1e52e(%rip),%eax        # 21670 <if_stack_ptr>
    3142:	83 e8 01             	sub    $0x1,%eax
    3145:	48 98                	cltq
    3147:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    314e:	00
    314f:	48 8d 05 8a e3 01 00 	lea    0x1e38a(%rip),%rax        # 214e0 <if_stack>
    3156:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3159:	85 c0                	test   %eax,%eax
    315b:	0f 85 6f 08 00 00    	jne    39d0 <yylex+0xf83>
    3161:	8b 05 09 e5 01 00    	mov    0x1e509(%rip),%eax        # 21670 <if_stack_ptr>
    3167:	83 f8 01             	cmp    $0x1,%eax
    316a:	7e 21                	jle    318d <yylex+0x740>
    316c:	8b 05 fe e4 01 00    	mov    0x1e4fe(%rip),%eax        # 21670 <if_stack_ptr>
    3172:	83 e8 02             	sub    $0x2,%eax
    3175:	48 98                	cltq
    3177:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    317e:	00
    317f:	48 8d 05 5a e3 01 00 	lea    0x1e35a(%rip),%rax        # 214e0 <if_stack>
    3186:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3189:	85 c0                	test   %eax,%eax
    318b:	74 0f                	je     319c <yylex+0x74f>
    318d:	c7 05 0d e5 01 00 01 	movl   $0x1,0x1e50d(%rip)        # 216a4 <yy_start>
    3194:	00 00 00
    3197:	e9 34 08 00 00       	jmp    39d0 <yylex+0xf83>
    319c:	e9 2f 08 00 00       	jmp    39d0 <yylex+0xf83>
    31a1:	8b 05 c9 e4 01 00    	mov    0x1e4c9(%rip),%eax        # 21670 <if_stack_ptr>
    31a7:	85 c0                	test   %eax,%eax
    31a9:	7e 0f                	jle    31ba <yylex+0x76d>
    31ab:	8b 05 bf e4 01 00    	mov    0x1e4bf(%rip),%eax        # 21670 <if_stack_ptr>
    31b1:	83 e8 01             	sub    $0x1,%eax
    31b4:	89 05 b6 e4 01 00    	mov    %eax,0x1e4b6(%rip)        # 21670 <if_stack_ptr>
    31ba:	8b 05 b0 e4 01 00    	mov    0x1e4b0(%rip),%eax        # 21670 <if_stack_ptr>
    31c0:	85 c0                	test   %eax,%eax
    31c2:	74 26                	je     31ea <yylex+0x79d>
    31c4:	8b 05 a6 e4 01 00    	mov    0x1e4a6(%rip),%eax        # 21670 <if_stack_ptr>
    31ca:	83 e8 01             	sub    $0x1,%eax
    31cd:	48 98                	cltq
    31cf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    31d6:	00
    31d7:	48 8d 05 02 e3 01 00 	lea    0x1e302(%rip),%rax        # 214e0 <if_stack>
    31de:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    31e1:	83 f8 01             	cmp    $0x1,%eax
    31e4:	0f 85 ec 07 00 00    	jne    39d6 <yylex+0xf89>
    31ea:	c7 05 b0 e4 01 00 01 	movl   $0x1,0x1e4b0(%rip)        # 216a4 <yy_start>
    31f1:	00 00 00
    31f4:	e9 dd 07 00 00       	jmp    39d6 <yylex+0xf89>
    31f9:	b8 7d 00 00 00       	mov    $0x7d,%eax
    31fe:	e9 df 07 00 00       	jmp    39e2 <yylex+0xf95>
    3203:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    320a:	00 00 00
    320d:	eb 2f                	jmp    323e <yylex+0x7f1>
    320f:	48 8b 15 aa de 01 00 	mov    0x1deaa(%rip),%rdx        # 210c0 <yytext>
    3216:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    321c:	48 98                	cltq
    321e:	48 01 d0             	add    %rdx,%rax
    3221:	0f b6 00             	movzbl (%rax),%eax
    3224:	3c 0a                	cmp    $0xa,%al
    3226:	75 0f                	jne    3237 <yylex+0x7ea>
    3228:	8b 05 e6 dd 01 00    	mov    0x1dde6(%rip),%eax        # 21014 <line_num>
    322e:	83 c0 01             	add    $0x1,%eax
    3231:	89 05 dd dd 01 00    	mov    %eax,0x1dddd(%rip)        # 21014 <line_num>
    3237:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    323e:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    3244:	48 63 d8             	movslq %eax,%rbx
    3247:	48 8b 05 72 de 01 00 	mov    0x1de72(%rip),%rax        # 210c0 <yytext>
    324e:	48 89 c7             	mov    %rax,%rdi
    3251:	e8 ca f0 ff ff       	call   2320 <strlen@plt>
    3256:	48 39 c3             	cmp    %rax,%rbx
    3259:	72 b4                	jb     320f <yylex+0x7c2>
    325b:	e9 7d 07 00 00       	jmp    39dd <yylex+0xf90>
    3260:	8b 05 ae dd 01 00    	mov    0x1ddae(%rip),%eax        # 21014 <line_num>
    3266:	83 c0 01             	add    $0x1,%eax
    3269:	89 05 a5 dd 01 00    	mov    %eax,0x1dda5(%rip)        # 21014 <line_num>
    326f:	e9 69 07 00 00       	jmp    39dd <yylex+0xf90>
    3274:	b8 22 01 00 00       	mov    $0x122,%eax
    3279:	e9 64 07 00 00       	jmp    39e2 <yylex+0xf95>
    327e:	b8 02 01 00 00       	mov    $0x102,%eax
    3283:	e9 5a 07 00 00       	jmp    39e2 <yylex+0xf95>
    3288:	b8 04 01 00 00       	mov    $0x104,%eax
    328d:	e9 50 07 00 00       	jmp    39e2 <yylex+0xf95>
    3292:	b8 05 01 00 00       	mov    $0x105,%eax
    3297:	e9 46 07 00 00       	jmp    39e2 <yylex+0xf95>
    329c:	b8 06 01 00 00       	mov    $0x106,%eax
    32a1:	e9 3c 07 00 00       	jmp    39e2 <yylex+0xf95>
    32a6:	b8 07 01 00 00       	mov    $0x107,%eax
    32ab:	e9 32 07 00 00       	jmp    39e2 <yylex+0xf95>
    32b0:	c6 05 29 de 01 00 00 	movb   $0x0,0x1de29(%rip)        # 210e0 <asm_buffer>
    32b7:	c7 05 e3 e3 01 00 03 	movl   $0x3,0x1e3e3(%rip)        # 216a4 <yy_start>
    32be:	00 00 00
    32c1:	b8 13 01 00 00       	mov    $0x113,%eax
    32c6:	e9 17 07 00 00       	jmp    39e2 <yylex+0xf95>
    32cb:	48 8d 05 0e de 01 00 	lea    0x1de0e(%rip),%rax        # 210e0 <asm_buffer>
    32d2:	48 89 c7             	mov    %rax,%rdi
    32d5:	e8 c6 f1 ff ff       	call   24a0 <strdup@plt>
    32da:	48 89 05 ff e3 01 00 	mov    %rax,0x1e3ff(%rip)        # 216e0 <yylval>
    32e1:	c7 05 b9 e3 01 00 01 	movl   $0x1,0x1e3b9(%rip)        # 216a4 <yy_start>
    32e8:	00 00 00
    32eb:	b8 0e 01 00 00       	mov    $0x10e,%eax
    32f0:	e9 ed 06 00 00       	jmp    39e2 <yylex+0xf95>
    32f5:	48 8d 05 e4 dd 01 00 	lea    0x1dde4(%rip),%rax        # 210e0 <asm_buffer>
    32fc:	48 89 c7             	mov    %rax,%rdi
    32ff:	e8 1c f0 ff ff       	call   2320 <strlen@plt>
    3304:	48 89 c3             	mov    %rax,%rbx
    3307:	48 8b 05 b2 dd 01 00 	mov    0x1ddb2(%rip),%rax        # 210c0 <yytext>
    330e:	48 89 c7             	mov    %rax,%rdi
    3311:	e8 0a f0 ff ff       	call   2320 <strlen@plt>
    3316:	48 01 d8             	add    %rbx,%rax
    3319:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    331f:	77 1e                	ja     333f <yylex+0x8f2>
    3321:	48 8b 05 98 dd 01 00 	mov    0x1dd98(%rip),%rax        # 210c0 <yytext>
    3328:	48 89 c6             	mov    %rax,%rsi
    332b:	48 8d 05 ae dd 01 00 	lea    0x1ddae(%rip),%rax        # 210e0 <asm_buffer>
    3332:	48 89 c7             	mov    %rax,%rdi
    3335:	e8 26 f1 ff ff       	call   2460 <strcat@plt>
    333a:	e9 9e 06 00 00       	jmp    39dd <yylex+0xf90>
    333f:	48 8b 05 1a dd 01 00 	mov    0x1dd1a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    3346:	48 89 c1             	mov    %rax,%rcx
    3349:	ba 14 00 00 00       	mov    $0x14,%edx
    334e:	be 01 00 00 00       	mov    $0x1,%esi
    3353:	48 8d 05 0f 4a 01 00 	lea    0x14a0f(%rip),%rax        # 17d69 <yy_chk+0x2a9>
    335a:	48 89 c7             	mov    %rax,%rdi
    335d:	e8 2e f1 ff ff       	call   2490 <fwrite@plt>
    3362:	bf 01 00 00 00       	mov    $0x1,%edi
    3367:	e8 14 f1 ff ff       	call   2480 <exit@plt>
    336c:	b8 12 01 00 00       	mov    $0x112,%eax
    3371:	e9 6c 06 00 00       	jmp    39e2 <yylex+0xf95>
    3376:	b8 14 01 00 00       	mov    $0x114,%eax
    337b:	e9 62 06 00 00       	jmp    39e2 <yylex+0xf95>
    3380:	b8 10 01 00 00       	mov    $0x110,%eax
    3385:	e9 58 06 00 00       	jmp    39e2 <yylex+0xf95>
    338a:	b8 03 01 00 00       	mov    $0x103,%eax
    338f:	e9 4e 06 00 00       	jmp    39e2 <yylex+0xf95>
    3394:	b8 11 01 00 00       	mov    $0x111,%eax
    3399:	e9 44 06 00 00       	jmp    39e2 <yylex+0xf95>
    339e:	b8 18 01 00 00       	mov    $0x118,%eax
    33a3:	e9 3a 06 00 00       	jmp    39e2 <yylex+0xf95>
    33a8:	b8 17 01 00 00       	mov    $0x117,%eax
    33ad:	e9 30 06 00 00       	jmp    39e2 <yylex+0xf95>
    33b2:	b8 19 01 00 00       	mov    $0x119,%eax
    33b7:	e9 26 06 00 00       	jmp    39e2 <yylex+0xf95>
    33bc:	b8 1a 01 00 00       	mov    $0x11a,%eax
    33c1:	e9 1c 06 00 00       	jmp    39e2 <yylex+0xf95>
    33c6:	b8 1b 01 00 00       	mov    $0x11b,%eax
    33cb:	e9 12 06 00 00       	jmp    39e2 <yylex+0xf95>
    33d0:	b8 1f 01 00 00       	mov    $0x11f,%eax
    33d5:	e9 08 06 00 00       	jmp    39e2 <yylex+0xf95>
    33da:	b8 20 01 00 00       	mov    $0x120,%eax
    33df:	e9 fe 05 00 00       	jmp    39e2 <yylex+0xf95>
    33e4:	b8 1d 01 00 00       	mov    $0x11d,%eax
    33e9:	e9 f4 05 00 00       	jmp    39e2 <yylex+0xf95>
    33ee:	b8 1c 01 00 00       	mov    $0x11c,%eax
    33f3:	e9 ea 05 00 00       	jmp    39e2 <yylex+0xf95>
    33f8:	b8 21 01 00 00       	mov    $0x121,%eax
    33fd:	e9 e0 05 00 00       	jmp    39e2 <yylex+0xf95>
    3402:	b8 23 01 00 00       	mov    $0x123,%eax
    3407:	e9 d6 05 00 00       	jmp    39e2 <yylex+0xf95>
    340c:	c7 05 ca e2 01 00 29 	movl   $0x129,0x1e2ca(%rip)        # 216e0 <yylval>
    3413:	01 00 00
    3416:	b8 24 01 00 00       	mov    $0x124,%eax
    341b:	e9 c2 05 00 00       	jmp    39e2 <yylex+0xf95>
    3420:	c7 05 b6 e2 01 00 2a 	movl   $0x12a,0x1e2b6(%rip)        # 216e0 <yylval>
    3427:	01 00 00
    342a:	b8 24 01 00 00       	mov    $0x124,%eax
    342f:	e9 ae 05 00 00       	jmp    39e2 <yylex+0xf95>
    3434:	c7 05 a2 e2 01 00 27 	movl   $0x127,0x1e2a2(%rip)        # 216e0 <yylval>
    343b:	01 00 00
    343e:	b8 24 01 00 00       	mov    $0x124,%eax
    3443:	e9 9a 05 00 00       	jmp    39e2 <yylex+0xf95>
    3448:	c7 05 8e e2 01 00 28 	movl   $0x128,0x1e28e(%rip)        # 216e0 <yylval>
    344f:	01 00 00
    3452:	b8 24 01 00 00       	mov    $0x124,%eax
    3457:	e9 86 05 00 00       	jmp    39e2 <yylex+0xf95>
    345c:	c7 05 7a e2 01 00 25 	movl   $0x125,0x1e27a(%rip)        # 216e0 <yylval>
    3463:	01 00 00
    3466:	b8 24 01 00 00       	mov    $0x124,%eax
    346b:	e9 72 05 00 00       	jmp    39e2 <yylex+0xf95>
    3470:	c7 05 66 e2 01 00 26 	movl   $0x126,0x1e266(%rip)        # 216e0 <yylval>
    3477:	01 00 00
    347a:	b8 24 01 00 00       	mov    $0x124,%eax
    347f:	e9 5e 05 00 00       	jmp    39e2 <yylex+0xf95>
    3484:	b8 32 01 00 00       	mov    $0x132,%eax
    3489:	e9 54 05 00 00       	jmp    39e2 <yylex+0xf95>
    348e:	b8 2e 01 00 00       	mov    $0x12e,%eax
    3493:	e9 4a 05 00 00       	jmp    39e2 <yylex+0xf95>
    3498:	c7 05 3e e2 01 00 30 	movl   $0x130,0x1e23e(%rip)        # 216e0 <yylval>
    349f:	01 00 00
    34a2:	b8 2f 01 00 00       	mov    $0x12f,%eax
    34a7:	e9 36 05 00 00       	jmp    39e2 <yylex+0xf95>
    34ac:	c7 05 2a e2 01 00 31 	movl   $0x131,0x1e22a(%rip)        # 216e0 <yylval>
    34b3:	01 00 00
    34b6:	b8 2f 01 00 00       	mov    $0x12f,%eax
    34bb:	e9 22 05 00 00       	jmp    39e2 <yylex+0xf95>
    34c0:	c7 05 16 e2 01 00 2c 	movl   $0x12c,0x1e216(%rip)        # 216e0 <yylval>
    34c7:	01 00 00
    34ca:	b8 2b 01 00 00       	mov    $0x12b,%eax
    34cf:	e9 0e 05 00 00       	jmp    39e2 <yylex+0xf95>
    34d4:	c7 05 02 e2 01 00 2d 	movl   $0x12d,0x1e202(%rip)        # 216e0 <yylval>
    34db:	01 00 00
    34de:	b8 2b 01 00 00       	mov    $0x12b,%eax
    34e3:	e9 fa 04 00 00       	jmp    39e2 <yylex+0xf95>
    34e8:	b8 0a 01 00 00       	mov    $0x10a,%eax
    34ed:	e9 f0 04 00 00       	jmp    39e2 <yylex+0xf95>
    34f2:	b8 0b 01 00 00       	mov    $0x10b,%eax
    34f7:	e9 e6 04 00 00       	jmp    39e2 <yylex+0xf95>
    34fc:	b8 0c 01 00 00       	mov    $0x10c,%eax
    3501:	e9 dc 04 00 00       	jmp    39e2 <yylex+0xf95>
    3506:	48 8b 05 b3 db 01 00 	mov    0x1dbb3(%rip),%rax        # 210c0 <yytext>
    350d:	48 89 c7             	mov    %rax,%rdi
    3510:	e8 3b ef ff ff       	call   2450 <atoi@plt>
    3515:	89 05 c5 e1 01 00    	mov    %eax,0x1e1c5(%rip)        # 216e0 <yylval>
    351b:	b8 08 01 00 00       	mov    $0x108,%eax
    3520:	e9 bd 04 00 00       	jmp    39e2 <yylex+0xf95>
    3525:	48 8b 05 94 db 01 00 	mov    0x1db94(%rip),%rax        # 210c0 <yytext>
    352c:	48 89 c7             	mov    %rax,%rdi
    352f:	e8 cc ed ff ff       	call   2300 <atof@plt>
    3534:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    3538:	f3 0f 11 05 a0 e1 01 	movss  %xmm0,0x1e1a0(%rip)        # 216e0 <yylval>
    353f:	00
    3540:	b8 09 01 00 00       	mov    $0x109,%eax
    3545:	e9 98 04 00 00       	jmp    39e2 <yylex+0xf95>
    354a:	48 8b 05 6f db 01 00 	mov    0x1db6f(%rip),%rax        # 210c0 <yytext>
    3551:	48 89 c7             	mov    %rax,%rdi
    3554:	e8 47 ef ff ff       	call   24a0 <strdup@plt>
    3559:	48 89 05 80 e1 01 00 	mov    %rax,0x1e180(%rip)        # 216e0 <yylval>
    3560:	b8 0f 01 00 00       	mov    $0x10f,%eax
    3565:	e9 78 04 00 00       	jmp    39e2 <yylex+0xf95>
    356a:	48 8b 05 4f db 01 00 	mov    0x1db4f(%rip),%rax        # 210c0 <yytext>
    3571:	48 83 c0 01          	add    $0x1,%rax
    3575:	48 89 c7             	mov    %rax,%rdi
    3578:	e8 23 ef ff ff       	call   24a0 <strdup@plt>
    357d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    3584:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    358b:	48 89 c7             	mov    %rax,%rdi
    358e:	e8 8d ed ff ff       	call   2320 <strlen@plt>
    3593:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    3597:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    359e:	48 01 d0             	add    %rdx,%rax
    35a1:	c6 00 00             	movb   $0x0,(%rax)
    35a4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    35ab:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    35b2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    35b9:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    35c0:	e9 f5 00 00 00       	jmp    36ba <yylex+0xc6d>
    35c5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    35cc:	0f b6 00             	movzbl (%rax),%eax
    35cf:	3c 5c                	cmp    $0x5c,%al
    35d1:	0f 85 ba 00 00 00    	jne    3691 <yylex+0xc44>
    35d7:	48 83 85 68 ff ff ff 	addq   $0x1,-0x98(%rbp)
    35de:	01
    35df:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    35e6:	0f b6 00             	movzbl (%rax),%eax
    35e9:	0f be c0             	movsbl %al,%eax
    35ec:	83 f8 74             	cmp    $0x74,%eax
    35ef:	74 32                	je     3623 <yylex+0xbd6>
    35f1:	83 f8 74             	cmp    $0x74,%eax
    35f4:	7f 72                	jg     3668 <yylex+0xc1b>
    35f6:	83 f8 6e             	cmp    $0x6e,%eax
    35f9:	74 11                	je     360c <yylex+0xbbf>
    35fb:	83 f8 6e             	cmp    $0x6e,%eax
    35fe:	7f 68                	jg     3668 <yylex+0xc1b>
    3600:	83 f8 22             	cmp    $0x22,%eax
    3603:	74 4c                	je     3651 <yylex+0xc04>
    3605:	83 f8 5c             	cmp    $0x5c,%eax
    3608:	74 30                	je     363a <yylex+0xbed>
    360a:	eb 5c                	jmp    3668 <yylex+0xc1b>
    360c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    3613:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3617:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    361e:	c6 00 0a             	movb   $0xa,(%rax)
    3621:	eb 64                	jmp    3687 <yylex+0xc3a>
    3623:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    362a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    362e:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    3635:	c6 00 09             	movb   $0x9,(%rax)
    3638:	eb 4d                	jmp    3687 <yylex+0xc3a>
    363a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    3641:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3645:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    364c:	c6 00 5c             	movb   $0x5c,(%rax)
    364f:	eb 36                	jmp    3687 <yylex+0xc3a>
    3651:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    3658:	48 8d 50 01          	lea    0x1(%rax),%rdx
    365c:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    3663:	c6 00 22             	movb   $0x22,(%rax)
    3666:	eb 1f                	jmp    3687 <yylex+0xc3a>
    3668:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    366f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3673:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    367a:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    3681:	0f b6 12             	movzbl (%rdx),%edx
    3684:	88 10                	mov    %dl,(%rax)
    3686:	90                   	nop
    3687:	48 83 85 68 ff ff ff 	addq   $0x1,-0x98(%rbp)
    368e:	01
    368f:	eb 29                	jmp    36ba <yylex+0xc6d>
    3691:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    3698:	48 8d 42 01          	lea    0x1(%rdx),%rax
    369c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    36a3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    36aa:	48 8d 48 01          	lea    0x1(%rax),%rcx
    36ae:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    36b5:	0f b6 12             	movzbl (%rdx),%edx
    36b8:	88 10                	mov    %dl,(%rax)
    36ba:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    36c1:	0f b6 00             	movzbl (%rax),%eax
    36c4:	84 c0                	test   %al,%al
    36c6:	0f 85 f9 fe ff ff    	jne    35c5 <yylex+0xb78>
    36cc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    36d3:	c6 00 00             	movb   $0x0,(%rax)
    36d6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    36dd:	48 89 05 fc df 01 00 	mov    %rax,0x1dffc(%rip)        # 216e0 <yylval>
    36e4:	b8 0d 01 00 00       	mov    $0x10d,%eax
    36e9:	e9 f4 02 00 00       	jmp    39e2 <yylex+0xf95>
    36ee:	48 8b 05 cb d9 01 00 	mov    0x1d9cb(%rip),%rax        # 210c0 <yytext>
    36f5:	0f b6 00             	movzbl (%rax),%eax
    36f8:	0f be c0             	movsbl %al,%eax
    36fb:	e9 e2 02 00 00       	jmp    39e2 <yylex+0xf95>
    3700:	48 8b 15 a9 d9 01 00 	mov    0x1d9a9(%rip),%rdx        # 210b0 <yyout>
    3707:	8b 05 93 d9 01 00    	mov    0x1d993(%rip),%eax        # 210a0 <yyleng>
    370d:	48 63 f0             	movslq %eax,%rsi
    3710:	48 8b 05 a9 d9 01 00 	mov    0x1d9a9(%rip),%rax        # 210c0 <yytext>
    3717:	48 89 d1             	mov    %rdx,%rcx
    371a:	ba 01 00 00 00       	mov    $0x1,%edx
    371f:	48 89 c7             	mov    %rax,%rdi
    3722:	e8 69 ed ff ff       	call   2490 <fwrite@plt>
    3727:	e9 b1 02 00 00       	jmp    39dd <yylex+0xf90>
    372c:	48 8b 05 8d d9 01 00 	mov    0x1d98d(%rip),%rax        # 210c0 <yytext>
    3733:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    373a:	48 29 c2             	sub    %rax,%rdx
    373d:	89 d0                	mov    %edx,%eax
    373f:	83 e8 01             	sub    $0x1,%eax
    3742:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
    3748:	0f b6 15 41 df 01 00 	movzbl 0x1df41(%rip),%edx        # 21690 <yy_hold_char>
    374f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    3756:	88 10                	mov    %dl,(%rax)
    3758:	48 8b 05 29 df 01 00 	mov    0x1df29(%rip),%rax        # 21688 <yy_buffer_stack>
    375f:	48 8b 15 12 df 01 00 	mov    0x1df12(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3766:	48 c1 e2 03          	shl    $0x3,%rdx
    376a:	48 01 d0             	add    %rdx,%rax
    376d:	48 8b 00             	mov    (%rax),%rax
    3770:	8b 40 38             	mov    0x38(%rax),%eax
    3773:	85 c0                	test   %eax,%eax
    3775:	75 62                	jne    37d9 <yylex+0xd8c>
    3777:	48 8b 05 0a df 01 00 	mov    0x1df0a(%rip),%rax        # 21688 <yy_buffer_stack>
    377e:	48 8b 15 f3 de 01 00 	mov    0x1def3(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3785:	48 c1 e2 03          	shl    $0x3,%rdx
    3789:	48 01 d0             	add    %rdx,%rax
    378c:	48 8b 00             	mov    (%rax),%rax
    378f:	8b 40 1c             	mov    0x1c(%rax),%eax
    3792:	89 05 fc de 01 00    	mov    %eax,0x1defc(%rip)        # 21694 <yy_n_chars>
    3798:	48 8b 05 e9 de 01 00 	mov    0x1dee9(%rip),%rax        # 21688 <yy_buffer_stack>
    379f:	48 8b 15 d2 de 01 00 	mov    0x1ded2(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    37a6:	48 c1 e2 03          	shl    $0x3,%rdx
    37aa:	48 01 d0             	add    %rdx,%rax
    37ad:	48 8b 00             	mov    (%rax),%rax
    37b0:	48 8b 15 f1 d8 01 00 	mov    0x1d8f1(%rip),%rdx        # 210a8 <yyin>
    37b7:	48 89 10             	mov    %rdx,(%rax)
    37ba:	48 8b 05 c7 de 01 00 	mov    0x1dec7(%rip),%rax        # 21688 <yy_buffer_stack>
    37c1:	48 8b 15 b0 de 01 00 	mov    0x1deb0(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    37c8:	48 c1 e2 03          	shl    $0x3,%rdx
    37cc:	48 01 d0             	add    %rdx,%rax
    37cf:	48 8b 00             	mov    (%rax),%rax
    37d2:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%rax)
    37d9:	48 8b 05 a8 de 01 00 	mov    0x1dea8(%rip),%rax        # 21688 <yy_buffer_stack>
    37e0:	48 8b 15 91 de 01 00 	mov    0x1de91(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    37e7:	48 c1 e2 03          	shl    $0x3,%rdx
    37eb:	48 01 d0             	add    %rdx,%rax
    37ee:	48 8b 00             	mov    (%rax),%rax
    37f1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    37f5:	8b 05 99 de 01 00    	mov    0x1de99(%rip),%eax        # 21694 <yy_n_chars>
    37fb:	48 98                	cltq
    37fd:	48 01 c2             	add    %rax,%rdx
    3800:	48 8b 05 91 de 01 00 	mov    0x1de91(%rip),%rax        # 21698 <yy_c_buf_p>
    3807:	48 39 c2             	cmp    %rax,%rdx
    380a:	0f 82 92 00 00 00    	jb     38a2 <yylex+0xe55>
    3810:	48 8b 15 a9 d8 01 00 	mov    0x1d8a9(%rip),%rdx        # 210c0 <yytext>
    3817:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    381d:	48 98                	cltq
    381f:	48 01 d0             	add    %rdx,%rax
    3822:	48 89 05 6f de 01 00 	mov    %rax,0x1de6f(%rip)        # 21698 <yy_c_buf_p>
    3829:	e8 23 08 00 00       	call   4051 <yy_get_previous_state>
    382e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    3834:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    383a:	89 c7                	mov    %eax,%edi
    383c:	e8 42 09 00 00       	call   4183 <yy_try_NUL_trans>
    3841:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    3847:	48 8b 05 72 d8 01 00 	mov    0x1d872(%rip),%rax        # 210c0 <yytext>
    384e:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    3855:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
    385c:	74 31                	je     388f <yylex+0xe42>
    385e:	48 8b 05 33 de 01 00 	mov    0x1de33(%rip),%rax        # 21698 <yy_c_buf_p>
    3865:	48 83 c0 01          	add    $0x1,%rax
    3869:	48 89 05 28 de 01 00 	mov    %rax,0x1de28(%rip)        # 21698 <yy_c_buf_p>
    3870:	48 8b 05 21 de 01 00 	mov    0x1de21(%rip),%rax        # 21698 <yy_c_buf_p>
    3877:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    387e:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    3884:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    388a:	e9 d5 f2 ff ff       	jmp    2b64 <yylex+0x117>
    388f:	48 8b 05 02 de 01 00 	mov    0x1de02(%rip),%rax        # 21698 <yy_c_buf_p>
    3896:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    389d:	e9 04 f4 ff ff       	jmp    2ca6 <yylex+0x259>
    38a2:	e8 55 01 00 00       	call   39fc <yy_get_next_buffer>
    38a7:	83 f8 02             	cmp    $0x2,%eax
    38aa:	0f 84 93 00 00 00    	je     3943 <yylex+0xef6>
    38b0:	83 f8 02             	cmp    $0x2,%eax
    38b3:	0f 8f 23 01 00 00    	jg     39dc <yylex+0xf8f>
    38b9:	85 c0                	test   %eax,%eax
    38bb:	74 41                	je     38fe <yylex+0xeb1>
    38bd:	83 f8 01             	cmp    $0x1,%eax
    38c0:	0f 85 16 01 00 00    	jne    39dc <yylex+0xf8f>
    38c6:	c7 05 d8 dd 01 00 00 	movl   $0x0,0x1ddd8(%rip)        # 216a8 <yy_did_buffer_switch_on_eof>
    38cd:	00 00 00
    38d0:	48 8b 05 e9 d7 01 00 	mov    0x1d7e9(%rip),%rax        # 210c0 <yytext>
    38d7:	48 89 05 ba dd 01 00 	mov    %rax,0x1ddba(%rip)        # 21698 <yy_c_buf_p>
    38de:	8b 05 c0 dd 01 00    	mov    0x1ddc0(%rip),%eax        # 216a4 <yy_start>
    38e4:	83 e8 01             	sub    $0x1,%eax
    38e7:	89 c2                	mov    %eax,%edx
    38e9:	c1 ea 1f             	shr    $0x1f,%edx
    38ec:	01 d0                	add    %edx,%eax
    38ee:	d1 f8                	sar    $1,%eax
    38f0:	83 c0 3f             	add    $0x3f,%eax
    38f3:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    38f9:	e9 51 f4 ff ff       	jmp    2d4f <yylex+0x302>
    38fe:	48 8b 15 bb d7 01 00 	mov    0x1d7bb(%rip),%rdx        # 210c0 <yytext>
    3905:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    390b:	48 98                	cltq
    390d:	48 01 d0             	add    %rdx,%rax
    3910:	48 89 05 81 dd 01 00 	mov    %rax,0x1dd81(%rip)        # 21698 <yy_c_buf_p>
    3917:	e8 35 07 00 00       	call   4051 <yy_get_previous_state>
    391c:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    3922:	48 8b 05 6f dd 01 00 	mov    0x1dd6f(%rip),%rax        # 21698 <yy_c_buf_p>
    3929:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    3930:	48 8b 05 89 d7 01 00 	mov    0x1d789(%rip),%rax        # 210c0 <yytext>
    3937:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    393e:	e9 21 f2 ff ff       	jmp    2b64 <yylex+0x117>
    3943:	48 8b 05 3e dd 01 00 	mov    0x1dd3e(%rip),%rax        # 21688 <yy_buffer_stack>
    394a:	48 8b 15 27 dd 01 00 	mov    0x1dd27(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3951:	48 c1 e2 03          	shl    $0x3,%rdx
    3955:	48 01 d0             	add    %rdx,%rax
    3958:	48 8b 00             	mov    (%rax),%rax
    395b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    395f:	8b 05 2f dd 01 00    	mov    0x1dd2f(%rip),%eax        # 21694 <yy_n_chars>
    3965:	48 98                	cltq
    3967:	48 01 d0             	add    %rdx,%rax
    396a:	48 89 05 27 dd 01 00 	mov    %rax,0x1dd27(%rip)        # 21698 <yy_c_buf_p>
    3971:	e8 db 06 00 00       	call   4051 <yy_get_previous_state>
    3976:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    397c:	48 8b 05 15 dd 01 00 	mov    0x1dd15(%rip),%rax        # 21698 <yy_c_buf_p>
    3983:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    398a:	48 8b 05 2f d7 01 00 	mov    0x1d72f(%rip),%rax        # 210c0 <yytext>
    3991:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    3998:	e9 09 f3 ff ff       	jmp    2ca6 <yylex+0x259>
    399d:	48 8d 05 dc 43 01 00 	lea    0x143dc(%rip),%rax        # 17d80 <yy_chk+0x2c0>
    39a4:	48 89 c7             	mov    %rax,%rdi
    39a7:	e8 c9 15 00 00       	call   4f75 <yy_fatal_error>
    39ac:	90                   	nop
    39ad:	e9 7a f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39b2:	90                   	nop
    39b3:	e9 74 f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39b8:	90                   	nop
    39b9:	e9 6e f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39be:	90                   	nop
    39bf:	e9 68 f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39c4:	90                   	nop
    39c5:	e9 62 f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39ca:	90                   	nop
    39cb:	e9 5c f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39d0:	90                   	nop
    39d1:	e9 56 f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39d6:	90                   	nop
    39d7:	e9 50 f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39dc:	90                   	nop
    39dd:	e9 4a f1 ff ff       	jmp    2b2c <yylex+0xdf>
    39e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    39e6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    39ed:	00 00
    39ef:	74 05                	je     39f6 <yylex+0xfa9>
    39f1:	e8 3a e9 ff ff       	call   2330 <__stack_chk_fail@plt>
    39f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39fa:	c9                   	leave
    39fb:	c3                   	ret

00000000000039fc <yy_get_next_buffer>:
    39fc:	f3 0f 1e fa          	endbr64
    3a00:	55                   	push   %rbp
    3a01:	48 89 e5             	mov    %rsp,%rbp
    3a04:	53                   	push   %rbx
    3a05:	48 83 ec 48          	sub    $0x48,%rsp
    3a09:	48 8b 05 78 dc 01 00 	mov    0x1dc78(%rip),%rax        # 21688 <yy_buffer_stack>
    3a10:	48 8b 15 61 dc 01 00 	mov    0x1dc61(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3a17:	48 c1 e2 03          	shl    $0x3,%rdx
    3a1b:	48 01 d0             	add    %rdx,%rax
    3a1e:	48 8b 00             	mov    (%rax),%rax
    3a21:	48 8b 40 08          	mov    0x8(%rax),%rax
    3a25:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3a29:	48 8b 05 90 d6 01 00 	mov    0x1d690(%rip),%rax        # 210c0 <yytext>
    3a30:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3a34:	48 8b 05 4d dc 01 00 	mov    0x1dc4d(%rip),%rax        # 21688 <yy_buffer_stack>
    3a3b:	48 8b 15 36 dc 01 00 	mov    0x1dc36(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3a42:	48 c1 e2 03          	shl    $0x3,%rdx
    3a46:	48 01 d0             	add    %rdx,%rax
    3a49:	48 8b 00             	mov    (%rax),%rax
    3a4c:	48 8b 40 08          	mov    0x8(%rax),%rax
    3a50:	8b 15 3e dc 01 00    	mov    0x1dc3e(%rip),%edx        # 21694 <yy_n_chars>
    3a56:	48 63 d2             	movslq %edx,%rdx
    3a59:	48 83 c2 01          	add    $0x1,%rdx
    3a5d:	48 01 c2             	add    %rax,%rdx
    3a60:	48 8b 05 31 dc 01 00 	mov    0x1dc31(%rip),%rax        # 21698 <yy_c_buf_p>
    3a67:	48 39 c2             	cmp    %rax,%rdx
    3a6a:	73 0f                	jae    3a7b <yy_get_next_buffer+0x7f>
    3a6c:	48 8d 05 4d 44 01 00 	lea    0x1444d(%rip),%rax        # 17ec0 <yy_chk+0x400>
    3a73:	48 89 c7             	mov    %rax,%rdi
    3a76:	e8 fa 14 00 00       	call   4f75 <yy_fatal_error>
    3a7b:	48 8b 05 06 dc 01 00 	mov    0x1dc06(%rip),%rax        # 21688 <yy_buffer_stack>
    3a82:	48 8b 15 ef db 01 00 	mov    0x1dbef(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3a89:	48 c1 e2 03          	shl    $0x3,%rdx
    3a8d:	48 01 d0             	add    %rdx,%rax
    3a90:	48 8b 00             	mov    (%rax),%rax
    3a93:	8b 40 34             	mov    0x34(%rax),%eax
    3a96:	85 c0                	test   %eax,%eax
    3a98:	75 2b                	jne    3ac5 <yy_get_next_buffer+0xc9>
    3a9a:	48 8b 15 f7 db 01 00 	mov    0x1dbf7(%rip),%rdx        # 21698 <yy_c_buf_p>
    3aa1:	48 8b 05 18 d6 01 00 	mov    0x1d618(%rip),%rax        # 210c0 <yytext>
    3aa8:	48 29 c2             	sub    %rax,%rdx
    3aab:	48 83 fa 01          	cmp    $0x1,%rdx
    3aaf:	75 0a                	jne    3abb <yy_get_next_buffer+0xbf>
    3ab1:	b8 01 00 00 00       	mov    $0x1,%eax
    3ab6:	e9 90 05 00 00       	jmp    404b <yy_get_next_buffer+0x64f>
    3abb:	b8 02 00 00 00       	mov    $0x2,%eax
    3ac0:	e9 86 05 00 00       	jmp    404b <yy_get_next_buffer+0x64f>
    3ac5:	48 8b 15 cc db 01 00 	mov    0x1dbcc(%rip),%rdx        # 21698 <yy_c_buf_p>
    3acc:	48 8b 05 ed d5 01 00 	mov    0x1d5ed(%rip),%rax        # 210c0 <yytext>
    3ad3:	48 29 c2             	sub    %rax,%rdx
    3ad6:	89 d0                	mov    %edx,%eax
    3ad8:	83 e8 01             	sub    $0x1,%eax
    3adb:	89 45 c8             	mov    %eax,-0x38(%rbp)
    3ade:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    3ae5:	eb 21                	jmp    3b08 <yy_get_next_buffer+0x10c>
    3ae7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3aeb:	48 8d 42 01          	lea    0x1(%rdx),%rax
    3aef:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3af3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3af7:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3afb:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    3aff:	0f b6 12             	movzbl (%rdx),%edx
    3b02:	88 10                	mov    %dl,(%rax)
    3b04:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    3b08:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3b0b:	3b 45 c8             	cmp    -0x38(%rbp),%eax
    3b0e:	7c d7                	jl     3ae7 <yy_get_next_buffer+0xeb>
    3b10:	48 8b 05 71 db 01 00 	mov    0x1db71(%rip),%rax        # 21688 <yy_buffer_stack>
    3b17:	48 8b 15 5a db 01 00 	mov    0x1db5a(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3b1e:	48 c1 e2 03          	shl    $0x3,%rdx
    3b22:	48 01 d0             	add    %rdx,%rax
    3b25:	48 8b 00             	mov    (%rax),%rax
    3b28:	8b 40 38             	mov    0x38(%rax),%eax
    3b2b:	83 f8 02             	cmp    $0x2,%eax
    3b2e:	75 30                	jne    3b60 <yy_get_next_buffer+0x164>
    3b30:	c7 05 5a db 01 00 00 	movl   $0x0,0x1db5a(%rip)        # 21694 <yy_n_chars>
    3b37:	00 00 00
    3b3a:	48 8b 05 47 db 01 00 	mov    0x1db47(%rip),%rax        # 21688 <yy_buffer_stack>
    3b41:	48 8b 15 30 db 01 00 	mov    0x1db30(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3b48:	48 c1 e2 03          	shl    $0x3,%rdx
    3b4c:	48 01 d0             	add    %rdx,%rax
    3b4f:	48 8b 00             	mov    (%rax),%rax
    3b52:	8b 15 3c db 01 00    	mov    0x1db3c(%rip),%edx        # 21694 <yy_n_chars>
    3b58:	89 50 1c             	mov    %edx,0x1c(%rax)
    3b5b:	e9 23 03 00 00       	jmp    3e83 <yy_get_next_buffer+0x487>
    3b60:	48 8b 05 21 db 01 00 	mov    0x1db21(%rip),%rax        # 21688 <yy_buffer_stack>
    3b67:	48 8b 15 0a db 01 00 	mov    0x1db0a(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3b6e:	48 c1 e2 03          	shl    $0x3,%rdx
    3b72:	48 01 d0             	add    %rdx,%rax
    3b75:	48 8b 00             	mov    (%rax),%rax
    3b78:	8b 40 18             	mov    0x18(%rax),%eax
    3b7b:	2b 45 c8             	sub    -0x38(%rbp),%eax
    3b7e:	83 e8 01             	sub    $0x1,%eax
    3b81:	89 45 bc             	mov    %eax,-0x44(%rbp)
    3b84:	e9 10 01 00 00       	jmp    3c99 <yy_get_next_buffer+0x29d>
    3b89:	48 8b 05 f8 da 01 00 	mov    0x1daf8(%rip),%rax        # 21688 <yy_buffer_stack>
    3b90:	48 8b 15 e1 da 01 00 	mov    0x1dae1(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3b97:	48 c1 e2 03          	shl    $0x3,%rdx
    3b9b:	48 01 d0             	add    %rdx,%rax
    3b9e:	48 8b 00             	mov    (%rax),%rax
    3ba1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3ba5:	48 8b 15 ec da 01 00 	mov    0x1daec(%rip),%rdx        # 21698 <yy_c_buf_p>
    3bac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bb0:	48 8b 40 08          	mov    0x8(%rax),%rax
    3bb4:	48 29 c2             	sub    %rax,%rdx
    3bb7:	89 55 cc             	mov    %edx,-0x34(%rbp)
    3bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bbe:	8b 40 20             	mov    0x20(%rax),%eax
    3bc1:	85 c0                	test   %eax,%eax
    3bc3:	74 71                	je     3c36 <yy_get_next_buffer+0x23a>
    3bc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bc9:	8b 40 18             	mov    0x18(%rax),%eax
    3bcc:	01 c0                	add    %eax,%eax
    3bce:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3bd1:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    3bd5:	7f 24                	jg     3bfb <yy_get_next_buffer+0x1ff>
    3bd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bdb:	8b 50 18             	mov    0x18(%rax),%edx
    3bde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3be2:	8b 40 18             	mov    0x18(%rax),%eax
    3be5:	8d 48 07             	lea    0x7(%rax),%ecx
    3be8:	85 c0                	test   %eax,%eax
    3bea:	0f 48 c1             	cmovs  %ecx,%eax
    3bed:	c1 f8 03             	sar    $0x3,%eax
    3bf0:	01 c2                	add    %eax,%edx
    3bf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bf6:	89 50 18             	mov    %edx,0x18(%rax)
    3bf9:	eb 11                	jmp    3c0c <yy_get_next_buffer+0x210>
    3bfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bff:	8b 40 18             	mov    0x18(%rax),%eax
    3c02:	8d 14 00             	lea    (%rax,%rax,1),%edx
    3c05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c09:	89 50 18             	mov    %edx,0x18(%rax)
    3c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c10:	8b 40 18             	mov    0x18(%rax),%eax
    3c13:	83 c0 02             	add    $0x2,%eax
    3c16:	48 63 d0             	movslq %eax,%rdx
    3c19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c1d:	48 8b 40 08          	mov    0x8(%rax),%rax
    3c21:	48 89 d6             	mov    %rdx,%rsi
    3c24:	48 89 c7             	mov    %rax,%rdi
    3c27:	e8 7a 15 00 00       	call   51a6 <yyrealloc>
    3c2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3c30:	48 89 42 08          	mov    %rax,0x8(%rdx)
    3c34:	eb 0c                	jmp    3c42 <yy_get_next_buffer+0x246>
    3c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c3a:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3c41:	00
    3c42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c46:	48 8b 40 08          	mov    0x8(%rax),%rax
    3c4a:	48 85 c0             	test   %rax,%rax
    3c4d:	75 0f                	jne    3c5e <yy_get_next_buffer+0x262>
    3c4f:	48 8d 05 a2 42 01 00 	lea    0x142a2(%rip),%rax        # 17ef8 <yy_chk+0x438>
    3c56:	48 89 c7             	mov    %rax,%rdi
    3c59:	e8 17 13 00 00       	call   4f75 <yy_fatal_error>
    3c5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c62:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3c66:	8b 45 cc             	mov    -0x34(%rbp),%eax
    3c69:	48 98                	cltq
    3c6b:	48 01 d0             	add    %rdx,%rax
    3c6e:	48 89 05 23 da 01 00 	mov    %rax,0x1da23(%rip)        # 21698 <yy_c_buf_p>
    3c75:	48 8b 05 0c da 01 00 	mov    0x1da0c(%rip),%rax        # 21688 <yy_buffer_stack>
    3c7c:	48 8b 15 f5 d9 01 00 	mov    0x1d9f5(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3c83:	48 c1 e2 03          	shl    $0x3,%rdx
    3c87:	48 01 d0             	add    %rdx,%rax
    3c8a:	48 8b 00             	mov    (%rax),%rax
    3c8d:	8b 40 18             	mov    0x18(%rax),%eax
    3c90:	2b 45 c8             	sub    -0x38(%rbp),%eax
    3c93:	83 e8 01             	sub    $0x1,%eax
    3c96:	89 45 bc             	mov    %eax,-0x44(%rbp)
    3c99:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    3c9d:	0f 8e e6 fe ff ff    	jle    3b89 <yy_get_next_buffer+0x18d>
    3ca3:	81 7d bc 00 20 00 00 	cmpl   $0x2000,-0x44(%rbp)
    3caa:	7e 07                	jle    3cb3 <yy_get_next_buffer+0x2b7>
    3cac:	c7 45 bc 00 20 00 00 	movl   $0x2000,-0x44(%rbp)
    3cb3:	48 8b 05 ce d9 01 00 	mov    0x1d9ce(%rip),%rax        # 21688 <yy_buffer_stack>
    3cba:	48 8b 15 b7 d9 01 00 	mov    0x1d9b7(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3cc1:	48 c1 e2 03          	shl    $0x3,%rdx
    3cc5:	48 01 d0             	add    %rdx,%rax
    3cc8:	48 8b 00             	mov    (%rax),%rax
    3ccb:	8b 40 24             	mov    0x24(%rax),%eax
    3cce:	85 c0                	test   %eax,%eax
    3cd0:	0f 84 e1 00 00 00    	je     3db7 <yy_get_next_buffer+0x3bb>
    3cd6:	c7 45 c0 2a 00 00 00 	movl   $0x2a,-0x40(%rbp)
    3cdd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    3ce4:	eb 37                	jmp    3d1d <yy_get_next_buffer+0x321>
    3ce6:	48 8b 05 9b d9 01 00 	mov    0x1d99b(%rip),%rax        # 21688 <yy_buffer_stack>
    3ced:	48 8b 15 84 d9 01 00 	mov    0x1d984(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3cf4:	48 c1 e2 03          	shl    $0x3,%rdx
    3cf8:	48 01 d0             	add    %rdx,%rax
    3cfb:	48 8b 00             	mov    (%rax),%rax
    3cfe:	48 8b 40 08          	mov    0x8(%rax),%rax
    3d02:	8b 55 c8             	mov    -0x38(%rbp),%edx
    3d05:	48 63 ca             	movslq %edx,%rcx
    3d08:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    3d0b:	48 63 d2             	movslq %edx,%rdx
    3d0e:	48 01 ca             	add    %rcx,%rdx
    3d11:	48 01 d0             	add    %rdx,%rax
    3d14:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3d17:	88 10                	mov    %dl,(%rax)
    3d19:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    3d1d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3d20:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    3d23:	7d 1e                	jge    3d43 <yy_get_next_buffer+0x347>
    3d25:	48 8b 05 7c d3 01 00 	mov    0x1d37c(%rip),%rax        # 210a8 <yyin>
    3d2c:	48 89 c7             	mov    %rax,%rdi
    3d2f:	e8 7c e7 ff ff       	call   24b0 <getc@plt>
    3d34:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3d37:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%rbp)
    3d3b:	74 06                	je     3d43 <yy_get_next_buffer+0x347>
    3d3d:	83 7d c0 0a          	cmpl   $0xa,-0x40(%rbp)
    3d41:	75 a3                	jne    3ce6 <yy_get_next_buffer+0x2ea>
    3d43:	83 7d c0 0a          	cmpl   $0xa,-0x40(%rbp)
    3d47:	75 38                	jne    3d81 <yy_get_next_buffer+0x385>
    3d49:	48 8b 05 38 d9 01 00 	mov    0x1d938(%rip),%rax        # 21688 <yy_buffer_stack>
    3d50:	48 8b 15 21 d9 01 00 	mov    0x1d921(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3d57:	48 c1 e2 03          	shl    $0x3,%rdx
    3d5b:	48 01 d0             	add    %rdx,%rax
    3d5e:	48 8b 00             	mov    (%rax),%rax
    3d61:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3d65:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3d68:	48 63 f0             	movslq %eax,%rsi
    3d6b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3d6e:	8d 50 01             	lea    0x1(%rax),%edx
    3d71:	89 55 c4             	mov    %edx,-0x3c(%rbp)
    3d74:	48 98                	cltq
    3d76:	48 01 f0             	add    %rsi,%rax
    3d79:	48 01 c8             	add    %rcx,%rax
    3d7c:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3d7f:	88 10                	mov    %dl,(%rax)
    3d81:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%rbp)
    3d85:	75 22                	jne    3da9 <yy_get_next_buffer+0x3ad>
    3d87:	48 8b 05 1a d3 01 00 	mov    0x1d31a(%rip),%rax        # 210a8 <yyin>
    3d8e:	48 89 c7             	mov    %rax,%rdi
    3d91:	e8 3a e5 ff ff       	call   22d0 <ferror@plt>
    3d96:	85 c0                	test   %eax,%eax
    3d98:	74 0f                	je     3da9 <yy_get_next_buffer+0x3ad>
    3d9a:	48 8d 05 83 41 01 00 	lea    0x14183(%rip),%rax        # 17f24 <yy_chk+0x464>
    3da1:	48 89 c7             	mov    %rax,%rdi
    3da4:	e8 cc 11 00 00       	call   4f75 <yy_fatal_error>
    3da9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3dac:	89 05 e2 d8 01 00    	mov    %eax,0x1d8e2(%rip)        # 21694 <yy_n_chars>
    3db2:	e9 ab 00 00 00       	jmp    3e62 <yy_get_next_buffer+0x466>
    3db7:	e8 e4 e4 ff ff       	call   22a0 <__errno_location@plt>
    3dbc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    3dc2:	eb 35                	jmp    3df9 <yy_get_next_buffer+0x3fd>
    3dc4:	e8 d7 e4 ff ff       	call   22a0 <__errno_location@plt>
    3dc9:	8b 00                	mov    (%rax),%eax
    3dcb:	83 f8 04             	cmp    $0x4,%eax
    3dce:	74 0f                	je     3ddf <yy_get_next_buffer+0x3e3>
    3dd0:	48 8d 05 4d 41 01 00 	lea    0x1414d(%rip),%rax        # 17f24 <yy_chk+0x464>
    3dd7:	48 89 c7             	mov    %rax,%rdi
    3dda:	e8 96 11 00 00       	call   4f75 <yy_fatal_error>
    3ddf:	e8 bc e4 ff ff       	call   22a0 <__errno_location@plt>
    3de4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    3dea:	48 8b 05 b7 d2 01 00 	mov    0x1d2b7(%rip),%rax        # 210a8 <yyin>
    3df1:	48 89 c7             	mov    %rax,%rdi
    3df4:	e8 e7 e5 ff ff       	call   23e0 <clearerr@plt>
    3df9:	48 8b 15 a8 d2 01 00 	mov    0x1d2a8(%rip),%rdx        # 210a8 <yyin>
    3e00:	8b 45 bc             	mov    -0x44(%rbp),%eax
    3e03:	48 98                	cltq
    3e05:	48 8b 0d 7c d8 01 00 	mov    0x1d87c(%rip),%rcx        # 21688 <yy_buffer_stack>
    3e0c:	48 8b 35 65 d8 01 00 	mov    0x1d865(%rip),%rsi        # 21678 <yy_buffer_stack_top>
    3e13:	48 c1 e6 03          	shl    $0x3,%rsi
    3e17:	48 01 f1             	add    %rsi,%rcx
    3e1a:	48 8b 09             	mov    (%rcx),%rcx
    3e1d:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    3e21:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    3e24:	48 63 c9             	movslq %ecx,%rcx
    3e27:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    3e2b:	48 89 d1             	mov    %rdx,%rcx
    3e2e:	48 89 c2             	mov    %rax,%rdx
    3e31:	be 01 00 00 00       	mov    $0x1,%esi
    3e36:	e8 b5 e4 ff ff       	call   22f0 <fread@plt>
    3e3b:	89 05 53 d8 01 00    	mov    %eax,0x1d853(%rip)        # 21694 <yy_n_chars>
    3e41:	8b 05 4d d8 01 00    	mov    0x1d84d(%rip),%eax        # 21694 <yy_n_chars>
    3e47:	85 c0                	test   %eax,%eax
    3e49:	75 17                	jne    3e62 <yy_get_next_buffer+0x466>
    3e4b:	48 8b 05 56 d2 01 00 	mov    0x1d256(%rip),%rax        # 210a8 <yyin>
    3e52:	48 89 c7             	mov    %rax,%rdi
    3e55:	e8 76 e4 ff ff       	call   22d0 <ferror@plt>
    3e5a:	85 c0                	test   %eax,%eax
    3e5c:	0f 85 62 ff ff ff    	jne    3dc4 <yy_get_next_buffer+0x3c8>
    3e62:	48 8b 05 1f d8 01 00 	mov    0x1d81f(%rip),%rax        # 21688 <yy_buffer_stack>
    3e69:	48 8b 15 08 d8 01 00 	mov    0x1d808(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3e70:	48 c1 e2 03          	shl    $0x3,%rdx
    3e74:	48 01 d0             	add    %rdx,%rax
    3e77:	48 8b 00             	mov    (%rax),%rax
    3e7a:	8b 15 14 d8 01 00    	mov    0x1d814(%rip),%edx        # 21694 <yy_n_chars>
    3e80:	89 50 1c             	mov    %edx,0x1c(%rax)
    3e83:	8b 05 0b d8 01 00    	mov    0x1d80b(%rip),%eax        # 21694 <yy_n_chars>
    3e89:	85 c0                	test   %eax,%eax
    3e8b:	75 46                	jne    3ed3 <yy_get_next_buffer+0x4d7>
    3e8d:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    3e91:	75 18                	jne    3eab <yy_get_next_buffer+0x4af>
    3e93:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
    3e9a:	48 8b 05 07 d2 01 00 	mov    0x1d207(%rip),%rax        # 210a8 <yyin>
    3ea1:	48 89 c7             	mov    %rax,%rdi
    3ea4:	e8 cc 06 00 00       	call   4575 <yyrestart>
    3ea9:	eb 2f                	jmp    3eda <yy_get_next_buffer+0x4de>
    3eab:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    3eb2:	48 8b 05 cf d7 01 00 	mov    0x1d7cf(%rip),%rax        # 21688 <yy_buffer_stack>
    3eb9:	48 8b 15 b8 d7 01 00 	mov    0x1d7b8(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3ec0:	48 c1 e2 03          	shl    $0x3,%rdx
    3ec4:	48 01 d0             	add    %rdx,%rax
    3ec7:	48 8b 00             	mov    (%rax),%rax
    3eca:	c7 40 38 02 00 00 00 	movl   $0x2,0x38(%rax)
    3ed1:	eb 07                	jmp    3eda <yy_get_next_buffer+0x4de>
    3ed3:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    3eda:	8b 15 b4 d7 01 00    	mov    0x1d7b4(%rip),%edx        # 21694 <yy_n_chars>
    3ee0:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3ee3:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    3ee6:	48 8b 05 9b d7 01 00 	mov    0x1d79b(%rip),%rax        # 21688 <yy_buffer_stack>
    3eed:	48 8b 15 84 d7 01 00 	mov    0x1d784(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3ef4:	48 c1 e2 03          	shl    $0x3,%rdx
    3ef8:	48 01 d0             	add    %rdx,%rax
    3efb:	48 8b 00             	mov    (%rax),%rax
    3efe:	8b 40 18             	mov    0x18(%rax),%eax
    3f01:	39 c1                	cmp    %eax,%ecx
    3f03:	0f 8e b2 00 00 00    	jle    3fbb <yy_get_next_buffer+0x5bf>
    3f09:	8b 15 85 d7 01 00    	mov    0x1d785(%rip),%edx        # 21694 <yy_n_chars>
    3f0f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3f12:	01 c2                	add    %eax,%edx
    3f14:	8b 05 7a d7 01 00    	mov    0x1d77a(%rip),%eax        # 21694 <yy_n_chars>
    3f1a:	d1 f8                	sar    $1,%eax
    3f1c:	01 d0                	add    %edx,%eax
    3f1e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3f21:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3f24:	48 63 d0             	movslq %eax,%rdx
    3f27:	48 8b 05 5a d7 01 00 	mov    0x1d75a(%rip),%rax        # 21688 <yy_buffer_stack>
    3f2e:	48 8b 0d 43 d7 01 00 	mov    0x1d743(%rip),%rcx        # 21678 <yy_buffer_stack_top>
    3f35:	48 c1 e1 03          	shl    $0x3,%rcx
    3f39:	48 01 c8             	add    %rcx,%rax
    3f3c:	48 8b 00             	mov    (%rax),%rax
    3f3f:	48 8b 40 08          	mov    0x8(%rax),%rax
    3f43:	48 8b 0d 3e d7 01 00 	mov    0x1d73e(%rip),%rcx        # 21688 <yy_buffer_stack>
    3f4a:	48 8b 35 27 d7 01 00 	mov    0x1d727(%rip),%rsi        # 21678 <yy_buffer_stack_top>
    3f51:	48 c1 e6 03          	shl    $0x3,%rsi
    3f55:	48 01 f1             	add    %rsi,%rcx
    3f58:	48 8b 19             	mov    (%rcx),%rbx
    3f5b:	48 89 d6             	mov    %rdx,%rsi
    3f5e:	48 89 c7             	mov    %rax,%rdi
    3f61:	e8 40 12 00 00       	call   51a6 <yyrealloc>
    3f66:	48 89 43 08          	mov    %rax,0x8(%rbx)
    3f6a:	48 8b 05 17 d7 01 00 	mov    0x1d717(%rip),%rax        # 21688 <yy_buffer_stack>
    3f71:	48 8b 15 00 d7 01 00 	mov    0x1d700(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3f78:	48 c1 e2 03          	shl    $0x3,%rdx
    3f7c:	48 01 d0             	add    %rdx,%rax
    3f7f:	48 8b 00             	mov    (%rax),%rax
    3f82:	48 8b 40 08          	mov    0x8(%rax),%rax
    3f86:	48 85 c0             	test   %rax,%rax
    3f89:	75 0f                	jne    3f9a <yy_get_next_buffer+0x59e>
    3f8b:	48 8d 05 b6 3f 01 00 	lea    0x13fb6(%rip),%rax        # 17f48 <yy_chk+0x488>
    3f92:	48 89 c7             	mov    %rax,%rdi
    3f95:	e8 db 0f 00 00       	call   4f75 <yy_fatal_error>
    3f9a:	48 8b 05 e7 d6 01 00 	mov    0x1d6e7(%rip),%rax        # 21688 <yy_buffer_stack>
    3fa1:	48 8b 15 d0 d6 01 00 	mov    0x1d6d0(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3fa8:	48 c1 e2 03          	shl    $0x3,%rdx
    3fac:	48 01 d0             	add    %rdx,%rax
    3faf:	48 8b 00             	mov    (%rax),%rax
    3fb2:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3fb5:	83 ea 02             	sub    $0x2,%edx
    3fb8:	89 50 18             	mov    %edx,0x18(%rax)
    3fbb:	8b 15 d3 d6 01 00    	mov    0x1d6d3(%rip),%edx        # 21694 <yy_n_chars>
    3fc1:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3fc4:	01 d0                	add    %edx,%eax
    3fc6:	89 05 c8 d6 01 00    	mov    %eax,0x1d6c8(%rip)        # 21694 <yy_n_chars>
    3fcc:	48 8b 05 b5 d6 01 00 	mov    0x1d6b5(%rip),%rax        # 21688 <yy_buffer_stack>
    3fd3:	48 8b 15 9e d6 01 00 	mov    0x1d69e(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    3fda:	48 c1 e2 03          	shl    $0x3,%rdx
    3fde:	48 01 d0             	add    %rdx,%rax
    3fe1:	48 8b 00             	mov    (%rax),%rax
    3fe4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3fe8:	8b 05 a6 d6 01 00    	mov    0x1d6a6(%rip),%eax        # 21694 <yy_n_chars>
    3fee:	48 98                	cltq
    3ff0:	48 01 d0             	add    %rdx,%rax
    3ff3:	c6 00 00             	movb   $0x0,(%rax)
    3ff6:	48 8b 05 8b d6 01 00 	mov    0x1d68b(%rip),%rax        # 21688 <yy_buffer_stack>
    3ffd:	48 8b 15 74 d6 01 00 	mov    0x1d674(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4004:	48 c1 e2 03          	shl    $0x3,%rdx
    4008:	48 01 d0             	add    %rdx,%rax
    400b:	48 8b 00             	mov    (%rax),%rax
    400e:	48 8b 40 08          	mov    0x8(%rax),%rax
    4012:	8b 15 7c d6 01 00    	mov    0x1d67c(%rip),%edx        # 21694 <yy_n_chars>
    4018:	48 63 d2             	movslq %edx,%rdx
    401b:	48 83 c2 01          	add    $0x1,%rdx
    401f:	48 01 d0             	add    %rdx,%rax
    4022:	c6 00 00             	movb   $0x0,(%rax)
    4025:	48 8b 05 5c d6 01 00 	mov    0x1d65c(%rip),%rax        # 21688 <yy_buffer_stack>
    402c:	48 8b 15 45 d6 01 00 	mov    0x1d645(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4033:	48 c1 e2 03          	shl    $0x3,%rdx
    4037:	48 01 d0             	add    %rdx,%rax
    403a:	48 8b 00             	mov    (%rax),%rax
    403d:	48 8b 40 08          	mov    0x8(%rax),%rax
    4041:	48 89 05 78 d0 01 00 	mov    %rax,0x1d078(%rip)        # 210c0 <yytext>
    4048:	8b 45 b8             	mov    -0x48(%rbp),%eax
    404b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    404f:	c9                   	leave
    4050:	c3                   	ret

0000000000004051 <yy_get_previous_state>:
    4051:	f3 0f 1e fa          	endbr64
    4055:	55                   	push   %rbp
    4056:	48 89 e5             	mov    %rsp,%rbp
    4059:	8b 05 45 d6 01 00    	mov    0x1d645(%rip),%eax        # 216a4 <yy_start>
    405f:	89 45 f4             	mov    %eax,-0xc(%rbp)
    4062:	48 8b 05 57 d0 01 00 	mov    0x1d057(%rip),%rax        # 210c0 <yytext>
    4069:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    406d:	e9 fb 00 00 00       	jmp    416d <yy_get_previous_state+0x11c>
    4072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4076:	0f b6 00             	movzbl (%rax),%eax
    4079:	84 c0                	test   %al,%al
    407b:	74 19                	je     4096 <yy_get_previous_state+0x45>
    407d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4081:	0f b6 00             	movzbl (%rax),%eax
    4084:	0f b6 c0             	movzbl %al,%eax
    4087:	48 98                	cltq
    4089:	48 8d 15 90 32 01 00 	lea    0x13290(%rip),%rdx        # 17320 <yy_ec>
    4090:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4094:	eb 05                	jmp    409b <yy_get_previous_state+0x4a>
    4096:	b8 01 00 00 00       	mov    $0x1,%eax
    409b:	88 45 f3             	mov    %al,-0xd(%rbp)
    409e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    40a1:	48 98                	cltq
    40a3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    40a7:	48 8d 05 b2 30 01 00 	lea    0x130b2(%rip),%rax        # 17160 <yy_accept>
    40ae:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    40b2:	66 85 c0             	test   %ax,%ax
    40b5:	74 4b                	je     4102 <yy_get_previous_state+0xb1>
    40b7:	8b 45 f4             	mov    -0xc(%rbp),%eax
    40ba:	89 05 ec d5 01 00    	mov    %eax,0x1d5ec(%rip)        # 216ac <yy_last_accepting_state>
    40c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40c4:	48 89 05 e5 d5 01 00 	mov    %rax,0x1d5e5(%rip)        # 216b0 <yy_last_accepting_cpos>
    40cb:	eb 35                	jmp    4102 <yy_get_previous_state+0xb1>
    40cd:	8b 45 f4             	mov    -0xc(%rbp),%eax
    40d0:	48 98                	cltq
    40d2:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    40d6:	48 8d 05 63 35 01 00 	lea    0x13563(%rip),%rax        # 17640 <yy_def>
    40dd:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    40e1:	98                   	cwtl
    40e2:	89 45 f4             	mov    %eax,-0xc(%rbp)
    40e5:	81 7d f4 d4 00 00 00 	cmpl   $0xd4,-0xc(%rbp)
    40ec:	7e 14                	jle    4102 <yy_get_previous_state+0xb1>
    40ee:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    40f2:	48 98                	cltq
    40f4:	48 8d 15 25 33 01 00 	lea    0x13325(%rip),%rdx        # 17420 <yy_meta>
    40fb:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    40ff:	88 45 f3             	mov    %al,-0xd(%rbp)
    4102:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4105:	48 98                	cltq
    4107:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    410b:	48 8d 05 4e 33 01 00 	lea    0x1334e(%rip),%rax        # 17460 <yy_base>
    4112:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4116:	0f bf d0             	movswl %ax,%edx
    4119:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    411d:	01 d0                	add    %edx,%eax
    411f:	48 98                	cltq
    4121:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4125:	48 8d 05 94 39 01 00 	lea    0x13994(%rip),%rax        # 17ac0 <yy_chk>
    412c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4130:	98                   	cwtl
    4131:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    4134:	75 97                	jne    40cd <yy_get_previous_state+0x7c>
    4136:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4139:	48 98                	cltq
    413b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    413f:	48 8d 05 1a 33 01 00 	lea    0x1331a(%rip),%rax        # 17460 <yy_base>
    4146:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    414a:	0f bf d0             	movswl %ax,%edx
    414d:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    4151:	01 d0                	add    %edx,%eax
    4153:	48 98                	cltq
    4155:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4159:	48 8d 05 c0 36 01 00 	lea    0x136c0(%rip),%rax        # 17820 <yy_nxt>
    4160:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4164:	98                   	cwtl
    4165:	89 45 f4             	mov    %eax,-0xc(%rbp)
    4168:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    416d:	48 8b 05 24 d5 01 00 	mov    0x1d524(%rip),%rax        # 21698 <yy_c_buf_p>
    4174:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    4178:	0f 82 f4 fe ff ff    	jb     4072 <yy_get_previous_state+0x21>
    417e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4181:	5d                   	pop    %rbp
    4182:	c3                   	ret

0000000000004183 <yy_try_NUL_trans>:
    4183:	f3 0f 1e fa          	endbr64
    4187:	55                   	push   %rbp
    4188:	48 89 e5             	mov    %rsp,%rbp
    418b:	89 7d ec             	mov    %edi,-0x14(%rbp)
    418e:	48 8b 05 03 d5 01 00 	mov    0x1d503(%rip),%rax        # 21698 <yy_c_buf_p>
    4195:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4199:	c6 45 f3 01          	movb   $0x1,-0xd(%rbp)
    419d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    41a0:	48 98                	cltq
    41a2:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    41a6:	48 8d 05 b3 2f 01 00 	lea    0x12fb3(%rip),%rax        # 17160 <yy_accept>
    41ad:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    41b1:	66 85 c0             	test   %ax,%ax
    41b4:	74 4b                	je     4201 <yy_try_NUL_trans+0x7e>
    41b6:	8b 45 ec             	mov    -0x14(%rbp),%eax
    41b9:	89 05 ed d4 01 00    	mov    %eax,0x1d4ed(%rip)        # 216ac <yy_last_accepting_state>
    41bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41c3:	48 89 05 e6 d4 01 00 	mov    %rax,0x1d4e6(%rip)        # 216b0 <yy_last_accepting_cpos>
    41ca:	eb 35                	jmp    4201 <yy_try_NUL_trans+0x7e>
    41cc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    41cf:	48 98                	cltq
    41d1:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    41d5:	48 8d 05 64 34 01 00 	lea    0x13464(%rip),%rax        # 17640 <yy_def>
    41dc:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    41e0:	98                   	cwtl
    41e1:	89 45 ec             	mov    %eax,-0x14(%rbp)
    41e4:	81 7d ec d4 00 00 00 	cmpl   $0xd4,-0x14(%rbp)
    41eb:	7e 14                	jle    4201 <yy_try_NUL_trans+0x7e>
    41ed:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    41f1:	48 98                	cltq
    41f3:	48 8d 15 26 32 01 00 	lea    0x13226(%rip),%rdx        # 17420 <yy_meta>
    41fa:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    41fe:	88 45 f3             	mov    %al,-0xd(%rbp)
    4201:	8b 45 ec             	mov    -0x14(%rbp),%eax
    4204:	48 98                	cltq
    4206:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    420a:	48 8d 05 4f 32 01 00 	lea    0x1324f(%rip),%rax        # 17460 <yy_base>
    4211:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4215:	0f bf d0             	movswl %ax,%edx
    4218:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    421c:	01 d0                	add    %edx,%eax
    421e:	48 98                	cltq
    4220:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4224:	48 8d 05 95 38 01 00 	lea    0x13895(%rip),%rax        # 17ac0 <yy_chk>
    422b:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    422f:	98                   	cwtl
    4230:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    4233:	75 97                	jne    41cc <yy_try_NUL_trans+0x49>
    4235:	8b 45 ec             	mov    -0x14(%rbp),%eax
    4238:	48 98                	cltq
    423a:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    423e:	48 8d 05 1b 32 01 00 	lea    0x1321b(%rip),%rax        # 17460 <yy_base>
    4245:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4249:	0f bf d0             	movswl %ax,%edx
    424c:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    4250:	01 d0                	add    %edx,%eax
    4252:	48 98                	cltq
    4254:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4258:	48 8d 05 c1 35 01 00 	lea    0x135c1(%rip),%rax        # 17820 <yy_nxt>
    425f:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4263:	98                   	cwtl
    4264:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4267:	81 7d ec d4 00 00 00 	cmpl   $0xd4,-0x14(%rbp)
    426e:	0f 94 c0             	sete   %al
    4271:	0f b6 c0             	movzbl %al,%eax
    4274:	89 45 f4             	mov    %eax,-0xc(%rbp)
    4277:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    427b:	75 05                	jne    4282 <yy_try_NUL_trans+0xff>
    427d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    4280:	eb 05                	jmp    4287 <yy_try_NUL_trans+0x104>
    4282:	b8 00 00 00 00       	mov    $0x0,%eax
    4287:	5d                   	pop    %rbp
    4288:	c3                   	ret

0000000000004289 <yyunput>:
    4289:	f3 0f 1e fa          	endbr64
    428d:	55                   	push   %rbp
    428e:	48 89 e5             	mov    %rsp,%rbp
    4291:	48 83 ec 30          	sub    $0x30,%rsp
    4295:	89 7d dc             	mov    %edi,-0x24(%rbp)
    4298:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    429c:	48 8b 05 f5 d3 01 00 	mov    0x1d3f5(%rip),%rax        # 21698 <yy_c_buf_p>
    42a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    42a7:	0f b6 15 e2 d3 01 00 	movzbl 0x1d3e2(%rip),%edx        # 21690 <yy_hold_char>
    42ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42b2:	88 10                	mov    %dl,(%rax)
    42b4:	48 8b 05 cd d3 01 00 	mov    0x1d3cd(%rip),%rax        # 21688 <yy_buffer_stack>
    42bb:	48 8b 15 b6 d3 01 00 	mov    0x1d3b6(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    42c2:	48 c1 e2 03          	shl    $0x3,%rdx
    42c6:	48 01 d0             	add    %rdx,%rax
    42c9:	48 8b 00             	mov    (%rax),%rax
    42cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    42d0:	48 83 c0 02          	add    $0x2,%rax
    42d4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    42d8:	0f 83 46 01 00 00    	jae    4424 <yyunput+0x19b>
    42de:	8b 05 b0 d3 01 00    	mov    0x1d3b0(%rip),%eax        # 21694 <yy_n_chars>
    42e4:	83 c0 02             	add    $0x2,%eax
    42e7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    42ea:	48 8b 05 97 d3 01 00 	mov    0x1d397(%rip),%rax        # 21688 <yy_buffer_stack>
    42f1:	48 8b 15 80 d3 01 00 	mov    0x1d380(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    42f8:	48 c1 e2 03          	shl    $0x3,%rdx
    42fc:	48 01 d0             	add    %rdx,%rax
    42ff:	48 8b 00             	mov    (%rax),%rax
    4302:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4306:	48 8b 05 7b d3 01 00 	mov    0x1d37b(%rip),%rax        # 21688 <yy_buffer_stack>
    430d:	48 8b 0d 64 d3 01 00 	mov    0x1d364(%rip),%rcx        # 21678 <yy_buffer_stack_top>
    4314:	48 c1 e1 03          	shl    $0x3,%rcx
    4318:	48 01 c8             	add    %rcx,%rax
    431b:	48 8b 00             	mov    (%rax),%rax
    431e:	8b 40 18             	mov    0x18(%rax),%eax
    4321:	48 98                	cltq
    4323:	48 83 c0 02          	add    $0x2,%rax
    4327:	48 01 d0             	add    %rdx,%rax
    432a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    432e:	48 8b 05 53 d3 01 00 	mov    0x1d353(%rip),%rax        # 21688 <yy_buffer_stack>
    4335:	48 8b 15 3c d3 01 00 	mov    0x1d33c(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    433c:	48 c1 e2 03          	shl    $0x3,%rdx
    4340:	48 01 d0             	add    %rdx,%rax
    4343:	48 8b 00             	mov    (%rax),%rax
    4346:	48 8b 50 08          	mov    0x8(%rax),%rdx
    434a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    434d:	48 98                	cltq
    434f:	48 01 d0             	add    %rdx,%rax
    4352:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4356:	eb 17                	jmp    436f <yyunput+0xe6>
    4358:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    435d:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
    4362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4366:	0f b6 10             	movzbl (%rax),%edx
    4369:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    436d:	88 10                	mov    %dl,(%rax)
    436f:	48 8b 05 12 d3 01 00 	mov    0x1d312(%rip),%rax        # 21688 <yy_buffer_stack>
    4376:	48 8b 15 fb d2 01 00 	mov    0x1d2fb(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    437d:	48 c1 e2 03          	shl    $0x3,%rdx
    4381:	48 01 d0             	add    %rdx,%rax
    4384:	48 8b 00             	mov    (%rax),%rax
    4387:	48 8b 40 08          	mov    0x8(%rax),%rax
    438b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    438f:	72 c7                	jb     4358 <yyunput+0xcf>
    4391:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4395:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    4399:	48 98                	cltq
    439b:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    439f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43a3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    43a7:	48 98                	cltq
    43a9:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    43ad:	48 8b 05 d4 d2 01 00 	mov    0x1d2d4(%rip),%rax        # 21688 <yy_buffer_stack>
    43b4:	48 8b 15 bd d2 01 00 	mov    0x1d2bd(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    43bb:	48 c1 e2 03          	shl    $0x3,%rdx
    43bf:	48 01 d0             	add    %rdx,%rax
    43c2:	48 8b 00             	mov    (%rax),%rax
    43c5:	8b 40 18             	mov    0x18(%rax),%eax
    43c8:	89 05 c6 d2 01 00    	mov    %eax,0x1d2c6(%rip)        # 21694 <yy_n_chars>
    43ce:	48 8b 05 b3 d2 01 00 	mov    0x1d2b3(%rip),%rax        # 21688 <yy_buffer_stack>
    43d5:	48 8b 15 9c d2 01 00 	mov    0x1d29c(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    43dc:	48 c1 e2 03          	shl    $0x3,%rdx
    43e0:	48 01 d0             	add    %rdx,%rax
    43e3:	48 8b 00             	mov    (%rax),%rax
    43e6:	8b 15 a8 d2 01 00    	mov    0x1d2a8(%rip),%edx        # 21694 <yy_n_chars>
    43ec:	89 50 1c             	mov    %edx,0x1c(%rax)
    43ef:	48 8b 05 92 d2 01 00 	mov    0x1d292(%rip),%rax        # 21688 <yy_buffer_stack>
    43f6:	48 8b 15 7b d2 01 00 	mov    0x1d27b(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    43fd:	48 c1 e2 03          	shl    $0x3,%rdx
    4401:	48 01 d0             	add    %rdx,%rax
    4404:	48 8b 00             	mov    (%rax),%rax
    4407:	48 8b 40 08          	mov    0x8(%rax),%rax
    440b:	48 83 c0 02          	add    $0x2,%rax
    440f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    4413:	73 0f                	jae    4424 <yyunput+0x19b>
    4415:	48 8d 05 5c 3b 01 00 	lea    0x13b5c(%rip),%rax        # 17f78 <yy_chk+0x4b8>
    441c:	48 89 c7             	mov    %rax,%rdi
    441f:	e8 51 0b 00 00       	call   4f75 <yy_fatal_error>
    4424:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
    4429:	8b 45 dc             	mov    -0x24(%rbp),%eax
    442c:	89 c2                	mov    %eax,%edx
    442e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4432:	88 10                	mov    %dl,(%rax)
    4434:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4438:	48 89 05 81 cc 01 00 	mov    %rax,0x1cc81(%rip)        # 210c0 <yytext>
    443f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4443:	0f b6 00             	movzbl (%rax),%eax
    4446:	88 05 44 d2 01 00    	mov    %al,0x1d244(%rip)        # 21690 <yy_hold_char>
    444c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4450:	48 89 05 41 d2 01 00 	mov    %rax,0x1d241(%rip)        # 21698 <yy_c_buf_p>
    4457:	90                   	nop
    4458:	c9                   	leave
    4459:	c3                   	ret

000000000000445a <input>:
    445a:	f3 0f 1e fa          	endbr64
    445e:	55                   	push   %rbp
    445f:	48 89 e5             	mov    %rsp,%rbp
    4462:	48 83 ec 10          	sub    $0x10,%rsp
    4466:	48 8b 05 2b d2 01 00 	mov    0x1d22b(%rip),%rax        # 21698 <yy_c_buf_p>
    446d:	0f b6 15 1c d2 01 00 	movzbl 0x1d21c(%rip),%edx        # 21690 <yy_hold_char>
    4474:	88 10                	mov    %dl,(%rax)
    4476:	48 8b 05 1b d2 01 00 	mov    0x1d21b(%rip),%rax        # 21698 <yy_c_buf_p>
    447d:	0f b6 00             	movzbl (%rax),%eax
    4480:	84 c0                	test   %al,%al
    4482:	0f 85 ac 00 00 00    	jne    4534 <input+0xda>
    4488:	48 8b 05 f9 d1 01 00 	mov    0x1d1f9(%rip),%rax        # 21688 <yy_buffer_stack>
    448f:	48 8b 15 e2 d1 01 00 	mov    0x1d1e2(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4496:	48 c1 e2 03          	shl    $0x3,%rdx
    449a:	48 01 d0             	add    %rdx,%rax
    449d:	48 8b 00             	mov    (%rax),%rax
    44a0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    44a4:	8b 05 ea d1 01 00    	mov    0x1d1ea(%rip),%eax        # 21694 <yy_n_chars>
    44aa:	48 98                	cltq
    44ac:	48 01 d0             	add    %rdx,%rax
    44af:	48 8b 15 e2 d1 01 00 	mov    0x1d1e2(%rip),%rdx        # 21698 <yy_c_buf_p>
    44b6:	48 39 c2             	cmp    %rax,%rdx
    44b9:	73 0c                	jae    44c7 <input+0x6d>
    44bb:	48 8b 05 d6 d1 01 00 	mov    0x1d1d6(%rip),%rax        # 21698 <yy_c_buf_p>
    44c2:	c6 00 00             	movb   $0x0,(%rax)
    44c5:	eb 6d                	jmp    4534 <input+0xda>
    44c7:	48 8b 15 ca d1 01 00 	mov    0x1d1ca(%rip),%rdx        # 21698 <yy_c_buf_p>
    44ce:	48 8b 05 eb cb 01 00 	mov    0x1cbeb(%rip),%rax        # 210c0 <yytext>
    44d5:	48 29 c2             	sub    %rax,%rdx
    44d8:	89 55 f8             	mov    %edx,-0x8(%rbp)
    44db:	48 8b 05 b6 d1 01 00 	mov    0x1d1b6(%rip),%rax        # 21698 <yy_c_buf_p>
    44e2:	48 83 c0 01          	add    $0x1,%rax
    44e6:	48 89 05 ab d1 01 00 	mov    %rax,0x1d1ab(%rip)        # 21698 <yy_c_buf_p>
    44ed:	e8 0a f5 ff ff       	call   39fc <yy_get_next_buffer>
    44f2:	83 f8 02             	cmp    $0x2,%eax
    44f5:	74 10                	je     4507 <input+0xad>
    44f7:	83 f8 02             	cmp    $0x2,%eax
    44fa:	7f 38                	jg     4534 <input+0xda>
    44fc:	85 c0                	test   %eax,%eax
    44fe:	74 1d                	je     451d <input+0xc3>
    4500:	83 f8 01             	cmp    $0x1,%eax
    4503:	74 11                	je     4516 <input+0xbc>
    4505:	eb 2d                	jmp    4534 <input+0xda>
    4507:	48 8b 05 9a cb 01 00 	mov    0x1cb9a(%rip),%rax        # 210a8 <yyin>
    450e:	48 89 c7             	mov    %rax,%rdi
    4511:	e8 5f 00 00 00       	call   4575 <yyrestart>
    4516:	b8 00 00 00 00       	mov    $0x0,%eax
    451b:	eb 56                	jmp    4573 <input+0x119>
    451d:	48 8b 15 9c cb 01 00 	mov    0x1cb9c(%rip),%rdx        # 210c0 <yytext>
    4524:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4527:	48 98                	cltq
    4529:	48 01 d0             	add    %rdx,%rax
    452c:	48 89 05 65 d1 01 00 	mov    %rax,0x1d165(%rip)        # 21698 <yy_c_buf_p>
    4533:	90                   	nop
    4534:	48 8b 05 5d d1 01 00 	mov    0x1d15d(%rip),%rax        # 21698 <yy_c_buf_p>
    453b:	0f b6 00             	movzbl (%rax),%eax
    453e:	0f b6 c0             	movzbl %al,%eax
    4541:	89 45 fc             	mov    %eax,-0x4(%rbp)
    4544:	48 8b 05 4d d1 01 00 	mov    0x1d14d(%rip),%rax        # 21698 <yy_c_buf_p>
    454b:	c6 00 00             	movb   $0x0,(%rax)
    454e:	48 8b 05 43 d1 01 00 	mov    0x1d143(%rip),%rax        # 21698 <yy_c_buf_p>
    4555:	48 83 c0 01          	add    $0x1,%rax
    4559:	48 89 05 38 d1 01 00 	mov    %rax,0x1d138(%rip)        # 21698 <yy_c_buf_p>
    4560:	48 8b 05 31 d1 01 00 	mov    0x1d131(%rip),%rax        # 21698 <yy_c_buf_p>
    4567:	0f b6 00             	movzbl (%rax),%eax
    456a:	88 05 20 d1 01 00    	mov    %al,0x1d120(%rip)        # 21690 <yy_hold_char>
    4570:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4573:	c9                   	leave
    4574:	c3                   	ret

0000000000004575 <yyrestart>:
    4575:	f3 0f 1e fa          	endbr64
    4579:	55                   	push   %rbp
    457a:	48 89 e5             	mov    %rsp,%rbp
    457d:	53                   	push   %rbx
    457e:	48 83 ec 18          	sub    $0x18,%rsp
    4582:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4586:	48 8b 05 fb d0 01 00 	mov    0x1d0fb(%rip),%rax        # 21688 <yy_buffer_stack>
    458d:	48 85 c0             	test   %rax,%rax
    4590:	74 1d                	je     45af <yyrestart+0x3a>
    4592:	48 8b 05 ef d0 01 00 	mov    0x1d0ef(%rip),%rax        # 21688 <yy_buffer_stack>
    4599:	48 8b 15 d8 d0 01 00 	mov    0x1d0d8(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    45a0:	48 c1 e2 03          	shl    $0x3,%rdx
    45a4:	48 01 d0             	add    %rdx,%rax
    45a7:	48 8b 00             	mov    (%rax),%rax
    45aa:	48 85 c0             	test   %rax,%rax
    45ad:	75 32                	jne    45e1 <yyrestart+0x6c>
    45af:	e8 77 06 00 00       	call   4c2b <yyensure_buffer_stack>
    45b4:	48 8b 05 ed ca 01 00 	mov    0x1caed(%rip),%rax        # 210a8 <yyin>
    45bb:	48 8b 15 c6 d0 01 00 	mov    0x1d0c6(%rip),%rdx        # 21688 <yy_buffer_stack>
    45c2:	48 8b 0d af d0 01 00 	mov    0x1d0af(%rip),%rcx        # 21678 <yy_buffer_stack_top>
    45c9:	48 c1 e1 03          	shl    $0x3,%rcx
    45cd:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
    45d1:	be 00 40 00 00       	mov    $0x4000,%esi
    45d6:	48 89 c7             	mov    %rax,%rdi
    45d9:	e8 cf 01 00 00       	call   47ad <yy_create_buffer>
    45de:	48 89 03             	mov    %rax,(%rbx)
    45e1:	48 8b 05 a0 d0 01 00 	mov    0x1d0a0(%rip),%rax        # 21688 <yy_buffer_stack>
    45e8:	48 85 c0             	test   %rax,%rax
    45eb:	74 1a                	je     4607 <yyrestart+0x92>
    45ed:	48 8b 05 94 d0 01 00 	mov    0x1d094(%rip),%rax        # 21688 <yy_buffer_stack>
    45f4:	48 8b 15 7d d0 01 00 	mov    0x1d07d(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    45fb:	48 c1 e2 03          	shl    $0x3,%rdx
    45ff:	48 01 d0             	add    %rdx,%rax
    4602:	48 8b 00             	mov    (%rax),%rax
    4605:	eb 05                	jmp    460c <yyrestart+0x97>
    4607:	b8 00 00 00 00       	mov    $0x0,%eax
    460c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4610:	48 89 d6             	mov    %rdx,%rsi
    4613:	48 89 c7             	mov    %rax,%rdi
    4616:	e8 bf 02 00 00       	call   48da <yy_init_buffer>
    461b:	e8 fe 00 00 00       	call   471e <yy_load_buffer_state>
    4620:	90                   	nop
    4621:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4625:	c9                   	leave
    4626:	c3                   	ret

0000000000004627 <yy_switch_to_buffer>:
    4627:	f3 0f 1e fa          	endbr64
    462b:	55                   	push   %rbp
    462c:	48 89 e5             	mov    %rsp,%rbp
    462f:	48 83 ec 10          	sub    $0x10,%rsp
    4633:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4637:	e8 ef 05 00 00       	call   4c2b <yyensure_buffer_stack>
    463c:	48 8b 05 45 d0 01 00 	mov    0x1d045(%rip),%rax        # 21688 <yy_buffer_stack>
    4643:	48 85 c0             	test   %rax,%rax
    4646:	74 1a                	je     4662 <yy_switch_to_buffer+0x3b>
    4648:	48 8b 05 39 d0 01 00 	mov    0x1d039(%rip),%rax        # 21688 <yy_buffer_stack>
    464f:	48 8b 15 22 d0 01 00 	mov    0x1d022(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4656:	48 c1 e2 03          	shl    $0x3,%rdx
    465a:	48 01 d0             	add    %rdx,%rax
    465d:	48 8b 00             	mov    (%rax),%rax
    4660:	eb 05                	jmp    4667 <yy_switch_to_buffer+0x40>
    4662:	b8 00 00 00 00       	mov    $0x0,%eax
    4667:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    466b:	0f 84 aa 00 00 00    	je     471b <yy_switch_to_buffer+0xf4>
    4671:	48 8b 05 10 d0 01 00 	mov    0x1d010(%rip),%rax        # 21688 <yy_buffer_stack>
    4678:	48 85 c0             	test   %rax,%rax
    467b:	74 71                	je     46ee <yy_switch_to_buffer+0xc7>
    467d:	48 8b 05 04 d0 01 00 	mov    0x1d004(%rip),%rax        # 21688 <yy_buffer_stack>
    4684:	48 8b 15 ed cf 01 00 	mov    0x1cfed(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    468b:	48 c1 e2 03          	shl    $0x3,%rdx
    468f:	48 01 d0             	add    %rdx,%rax
    4692:	48 8b 00             	mov    (%rax),%rax
    4695:	48 85 c0             	test   %rax,%rax
    4698:	74 54                	je     46ee <yy_switch_to_buffer+0xc7>
    469a:	48 8b 05 f7 cf 01 00 	mov    0x1cff7(%rip),%rax        # 21698 <yy_c_buf_p>
    46a1:	0f b6 15 e8 cf 01 00 	movzbl 0x1cfe8(%rip),%edx        # 21690 <yy_hold_char>
    46a8:	88 10                	mov    %dl,(%rax)
    46aa:	48 8b 05 d7 cf 01 00 	mov    0x1cfd7(%rip),%rax        # 21688 <yy_buffer_stack>
    46b1:	48 8b 15 c0 cf 01 00 	mov    0x1cfc0(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    46b8:	48 c1 e2 03          	shl    $0x3,%rdx
    46bc:	48 01 d0             	add    %rdx,%rax
    46bf:	48 8b 00             	mov    (%rax),%rax
    46c2:	48 8b 15 cf cf 01 00 	mov    0x1cfcf(%rip),%rdx        # 21698 <yy_c_buf_p>
    46c9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    46cd:	48 8b 05 b4 cf 01 00 	mov    0x1cfb4(%rip),%rax        # 21688 <yy_buffer_stack>
    46d4:	48 8b 15 9d cf 01 00 	mov    0x1cf9d(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    46db:	48 c1 e2 03          	shl    $0x3,%rdx
    46df:	48 01 d0             	add    %rdx,%rax
    46e2:	48 8b 00             	mov    (%rax),%rax
    46e5:	8b 15 a9 cf 01 00    	mov    0x1cfa9(%rip),%edx        # 21694 <yy_n_chars>
    46eb:	89 50 1c             	mov    %edx,0x1c(%rax)
    46ee:	48 8b 05 93 cf 01 00 	mov    0x1cf93(%rip),%rax        # 21688 <yy_buffer_stack>
    46f5:	48 8b 15 7c cf 01 00 	mov    0x1cf7c(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    46fc:	48 c1 e2 03          	shl    $0x3,%rdx
    4700:	48 01 c2             	add    %rax,%rdx
    4703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4707:	48 89 02             	mov    %rax,(%rdx)
    470a:	e8 0f 00 00 00       	call   471e <yy_load_buffer_state>
    470f:	c7 05 8f cf 01 00 01 	movl   $0x1,0x1cf8f(%rip)        # 216a8 <yy_did_buffer_switch_on_eof>
    4716:	00 00 00
    4719:	eb 01                	jmp    471c <yy_switch_to_buffer+0xf5>
    471b:	90                   	nop
    471c:	c9                   	leave
    471d:	c3                   	ret

000000000000471e <yy_load_buffer_state>:
    471e:	f3 0f 1e fa          	endbr64
    4722:	55                   	push   %rbp
    4723:	48 89 e5             	mov    %rsp,%rbp
    4726:	48 8b 05 5b cf 01 00 	mov    0x1cf5b(%rip),%rax        # 21688 <yy_buffer_stack>
    472d:	48 8b 15 44 cf 01 00 	mov    0x1cf44(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4734:	48 c1 e2 03          	shl    $0x3,%rdx
    4738:	48 01 d0             	add    %rdx,%rax
    473b:	48 8b 00             	mov    (%rax),%rax
    473e:	8b 40 1c             	mov    0x1c(%rax),%eax
    4741:	89 05 4d cf 01 00    	mov    %eax,0x1cf4d(%rip)        # 21694 <yy_n_chars>
    4747:	48 8b 05 3a cf 01 00 	mov    0x1cf3a(%rip),%rax        # 21688 <yy_buffer_stack>
    474e:	48 8b 15 23 cf 01 00 	mov    0x1cf23(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4755:	48 c1 e2 03          	shl    $0x3,%rdx
    4759:	48 01 d0             	add    %rdx,%rax
    475c:	48 8b 00             	mov    (%rax),%rax
    475f:	48 8b 40 10          	mov    0x10(%rax),%rax
    4763:	48 89 05 2e cf 01 00 	mov    %rax,0x1cf2e(%rip)        # 21698 <yy_c_buf_p>
    476a:	48 8b 05 27 cf 01 00 	mov    0x1cf27(%rip),%rax        # 21698 <yy_c_buf_p>
    4771:	48 89 05 48 c9 01 00 	mov    %rax,0x1c948(%rip)        # 210c0 <yytext>
    4778:	48 8b 05 09 cf 01 00 	mov    0x1cf09(%rip),%rax        # 21688 <yy_buffer_stack>
    477f:	48 8b 15 f2 ce 01 00 	mov    0x1cef2(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4786:	48 c1 e2 03          	shl    $0x3,%rdx
    478a:	48 01 d0             	add    %rdx,%rax
    478d:	48 8b 00             	mov    (%rax),%rax
    4790:	48 8b 00             	mov    (%rax),%rax
    4793:	48 89 05 0e c9 01 00 	mov    %rax,0x1c90e(%rip)        # 210a8 <yyin>
    479a:	48 8b 05 f7 ce 01 00 	mov    0x1cef7(%rip),%rax        # 21698 <yy_c_buf_p>
    47a1:	0f b6 00             	movzbl (%rax),%eax
    47a4:	88 05 e6 ce 01 00    	mov    %al,0x1cee6(%rip)        # 21690 <yy_hold_char>
    47aa:	90                   	nop
    47ab:	5d                   	pop    %rbp
    47ac:	c3                   	ret

00000000000047ad <yy_create_buffer>:
    47ad:	f3 0f 1e fa          	endbr64
    47b1:	55                   	push   %rbp
    47b2:	48 89 e5             	mov    %rsp,%rbp
    47b5:	48 83 ec 20          	sub    $0x20,%rsp
    47b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    47bd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    47c0:	bf 40 00 00 00       	mov    $0x40,%edi
    47c5:	e8 be 09 00 00       	call   5188 <yyalloc>
    47ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    47ce:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    47d3:	75 0f                	jne    47e4 <yy_create_buffer+0x37>
    47d5:	48 8d 05 bc 37 01 00 	lea    0x137bc(%rip),%rax        # 17f98 <yy_chk+0x4d8>
    47dc:	48 89 c7             	mov    %rax,%rdi
    47df:	e8 91 07 00 00       	call   4f75 <yy_fatal_error>
    47e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47e8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    47eb:	89 50 18             	mov    %edx,0x18(%rax)
    47ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47f2:	8b 40 18             	mov    0x18(%rax),%eax
    47f5:	83 c0 02             	add    $0x2,%eax
    47f8:	48 98                	cltq
    47fa:	48 89 c7             	mov    %rax,%rdi
    47fd:	e8 86 09 00 00       	call   5188 <yyalloc>
    4802:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4806:	48 89 42 08          	mov    %rax,0x8(%rdx)
    480a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    480e:	48 8b 40 08          	mov    0x8(%rax),%rax
    4812:	48 85 c0             	test   %rax,%rax
    4815:	75 0f                	jne    4826 <yy_create_buffer+0x79>
    4817:	48 8d 05 7a 37 01 00 	lea    0x1377a(%rip),%rax        # 17f98 <yy_chk+0x4d8>
    481e:	48 89 c7             	mov    %rax,%rdi
    4821:	e8 4f 07 00 00       	call   4f75 <yy_fatal_error>
    4826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    482a:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
    4831:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4839:	48 89 d6             	mov    %rdx,%rsi
    483c:	48 89 c7             	mov    %rax,%rdi
    483f:	e8 96 00 00 00       	call   48da <yy_init_buffer>
    4844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4848:	c9                   	leave
    4849:	c3                   	ret

000000000000484a <yy_delete_buffer>:
    484a:	f3 0f 1e fa          	endbr64
    484e:	55                   	push   %rbp
    484f:	48 89 e5             	mov    %rsp,%rbp
    4852:	48 83 ec 10          	sub    $0x10,%rsp
    4856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    485a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    485f:	74 76                	je     48d7 <yy_delete_buffer+0x8d>
    4861:	48 8b 05 20 ce 01 00 	mov    0x1ce20(%rip),%rax        # 21688 <yy_buffer_stack>
    4868:	48 85 c0             	test   %rax,%rax
    486b:	74 1a                	je     4887 <yy_delete_buffer+0x3d>
    486d:	48 8b 05 14 ce 01 00 	mov    0x1ce14(%rip),%rax        # 21688 <yy_buffer_stack>
    4874:	48 8b 15 fd cd 01 00 	mov    0x1cdfd(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    487b:	48 c1 e2 03          	shl    $0x3,%rdx
    487f:	48 01 d0             	add    %rdx,%rax
    4882:	48 8b 00             	mov    (%rax),%rax
    4885:	eb 05                	jmp    488c <yy_delete_buffer+0x42>
    4887:	b8 00 00 00 00       	mov    $0x0,%eax
    488c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4890:	75 1c                	jne    48ae <yy_delete_buffer+0x64>
    4892:	48 8b 05 ef cd 01 00 	mov    0x1cdef(%rip),%rax        # 21688 <yy_buffer_stack>
    4899:	48 8b 15 d8 cd 01 00 	mov    0x1cdd8(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    48a0:	48 c1 e2 03          	shl    $0x3,%rdx
    48a4:	48 01 d0             	add    %rdx,%rax
    48a7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    48ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48b2:	8b 40 20             	mov    0x20(%rax),%eax
    48b5:	85 c0                	test   %eax,%eax
    48b7:	74 10                	je     48c9 <yy_delete_buffer+0x7f>
    48b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48bd:	48 8b 40 08          	mov    0x8(%rax),%rax
    48c1:	48 89 c7             	mov    %rax,%rdi
    48c4:	e8 06 09 00 00       	call   51cf <yyfree>
    48c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48cd:	48 89 c7             	mov    %rax,%rdi
    48d0:	e8 fa 08 00 00       	call   51cf <yyfree>
    48d5:	eb 01                	jmp    48d8 <yy_delete_buffer+0x8e>
    48d7:	90                   	nop
    48d8:	c9                   	leave
    48d9:	c3                   	ret

00000000000048da <yy_init_buffer>:
    48da:	f3 0f 1e fa          	endbr64
    48de:	55                   	push   %rbp
    48df:	48 89 e5             	mov    %rsp,%rbp
    48e2:	48 83 ec 20          	sub    $0x20,%rsp
    48e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    48ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    48ee:	e8 ad d9 ff ff       	call   22a0 <__errno_location@plt>
    48f3:	8b 00                	mov    (%rax),%eax
    48f5:	89 45 fc             	mov    %eax,-0x4(%rbp)
    48f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48fc:	48 89 c7             	mov    %rax,%rdi
    48ff:	e8 9b 00 00 00       	call   499f <yy_flush_buffer>
    4904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4908:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    490c:	48 89 10             	mov    %rdx,(%rax)
    490f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4913:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)
    491a:	48 8b 05 67 cd 01 00 	mov    0x1cd67(%rip),%rax        # 21688 <yy_buffer_stack>
    4921:	48 85 c0             	test   %rax,%rax
    4924:	74 1a                	je     4940 <yy_init_buffer+0x66>
    4926:	48 8b 05 5b cd 01 00 	mov    0x1cd5b(%rip),%rax        # 21688 <yy_buffer_stack>
    492d:	48 8b 15 44 cd 01 00 	mov    0x1cd44(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4934:	48 c1 e2 03          	shl    $0x3,%rdx
    4938:	48 01 d0             	add    %rdx,%rax
    493b:	48 8b 00             	mov    (%rax),%rax
    493e:	eb 05                	jmp    4945 <yy_init_buffer+0x6b>
    4940:	b8 00 00 00 00       	mov    $0x0,%eax
    4945:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    4949:	74 16                	je     4961 <yy_init_buffer+0x87>
    494b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    494f:	c7 40 2c 01 00 00 00 	movl   $0x1,0x2c(%rax)
    4956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    495a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    4961:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4966:	74 1e                	je     4986 <yy_init_buffer+0xac>
    4968:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    496c:	48 89 c7             	mov    %rax,%rdi
    496f:	e8 8c da ff ff       	call   2400 <fileno@plt>
    4974:	89 c7                	mov    %eax,%edi
    4976:	e8 65 d9 ff ff       	call   22e0 <isatty@plt>
    497b:	85 c0                	test   %eax,%eax
    497d:	7e 07                	jle    4986 <yy_init_buffer+0xac>
    497f:	ba 01 00 00 00       	mov    $0x1,%edx
    4984:	eb 05                	jmp    498b <yy_init_buffer+0xb1>
    4986:	ba 00 00 00 00       	mov    $0x0,%edx
    498b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    498f:	89 50 24             	mov    %edx,0x24(%rax)
    4992:	e8 09 d9 ff ff       	call   22a0 <__errno_location@plt>
    4997:	8b 55 fc             	mov    -0x4(%rbp),%edx
    499a:	89 10                	mov    %edx,(%rax)
    499c:	90                   	nop
    499d:	c9                   	leave
    499e:	c3                   	ret

000000000000499f <yy_flush_buffer>:
    499f:	f3 0f 1e fa          	endbr64
    49a3:	55                   	push   %rbp
    49a4:	48 89 e5             	mov    %rsp,%rbp
    49a7:	48 83 ec 08          	sub    $0x8,%rsp
    49ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49af:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    49b4:	0f 84 83 00 00 00    	je     4a3d <yy_flush_buffer+0x9e>
    49ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49be:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    49c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49c9:	48 8b 40 08          	mov    0x8(%rax),%rax
    49cd:	c6 00 00             	movb   $0x0,(%rax)
    49d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49d4:	48 8b 40 08          	mov    0x8(%rax),%rax
    49d8:	48 83 c0 01          	add    $0x1,%rax
    49dc:	c6 00 00             	movb   $0x0,(%rax)
    49df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49e3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    49e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49eb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    49ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49f3:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    49fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49fe:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    4a05:	48 8b 05 7c cc 01 00 	mov    0x1cc7c(%rip),%rax        # 21688 <yy_buffer_stack>
    4a0c:	48 85 c0             	test   %rax,%rax
    4a0f:	74 1a                	je     4a2b <yy_flush_buffer+0x8c>
    4a11:	48 8b 05 70 cc 01 00 	mov    0x1cc70(%rip),%rax        # 21688 <yy_buffer_stack>
    4a18:	48 8b 15 59 cc 01 00 	mov    0x1cc59(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4a1f:	48 c1 e2 03          	shl    $0x3,%rdx
    4a23:	48 01 d0             	add    %rdx,%rax
    4a26:	48 8b 00             	mov    (%rax),%rax
    4a29:	eb 05                	jmp    4a30 <yy_flush_buffer+0x91>
    4a2b:	b8 00 00 00 00       	mov    $0x0,%eax
    4a30:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4a34:	75 08                	jne    4a3e <yy_flush_buffer+0x9f>
    4a36:	e8 e3 fc ff ff       	call   471e <yy_load_buffer_state>
    4a3b:	eb 01                	jmp    4a3e <yy_flush_buffer+0x9f>
    4a3d:	90                   	nop
    4a3e:	c9                   	leave
    4a3f:	c3                   	ret

0000000000004a40 <yypush_buffer_state>:
    4a40:	f3 0f 1e fa          	endbr64
    4a44:	55                   	push   %rbp
    4a45:	48 89 e5             	mov    %rsp,%rbp
    4a48:	48 83 ec 10          	sub    $0x10,%rsp
    4a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a50:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4a55:	0f 84 ea 00 00 00    	je     4b45 <yypush_buffer_state+0x105>
    4a5b:	e8 cb 01 00 00       	call   4c2b <yyensure_buffer_stack>
    4a60:	48 8b 05 21 cc 01 00 	mov    0x1cc21(%rip),%rax        # 21688 <yy_buffer_stack>
    4a67:	48 85 c0             	test   %rax,%rax
    4a6a:	74 71                	je     4add <yypush_buffer_state+0x9d>
    4a6c:	48 8b 05 15 cc 01 00 	mov    0x1cc15(%rip),%rax        # 21688 <yy_buffer_stack>
    4a73:	48 8b 15 fe cb 01 00 	mov    0x1cbfe(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4a7a:	48 c1 e2 03          	shl    $0x3,%rdx
    4a7e:	48 01 d0             	add    %rdx,%rax
    4a81:	48 8b 00             	mov    (%rax),%rax
    4a84:	48 85 c0             	test   %rax,%rax
    4a87:	74 54                	je     4add <yypush_buffer_state+0x9d>
    4a89:	48 8b 05 08 cc 01 00 	mov    0x1cc08(%rip),%rax        # 21698 <yy_c_buf_p>
    4a90:	0f b6 15 f9 cb 01 00 	movzbl 0x1cbf9(%rip),%edx        # 21690 <yy_hold_char>
    4a97:	88 10                	mov    %dl,(%rax)
    4a99:	48 8b 05 e8 cb 01 00 	mov    0x1cbe8(%rip),%rax        # 21688 <yy_buffer_stack>
    4aa0:	48 8b 15 d1 cb 01 00 	mov    0x1cbd1(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4aa7:	48 c1 e2 03          	shl    $0x3,%rdx
    4aab:	48 01 d0             	add    %rdx,%rax
    4aae:	48 8b 00             	mov    (%rax),%rax
    4ab1:	48 8b 15 e0 cb 01 00 	mov    0x1cbe0(%rip),%rdx        # 21698 <yy_c_buf_p>
    4ab8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    4abc:	48 8b 05 c5 cb 01 00 	mov    0x1cbc5(%rip),%rax        # 21688 <yy_buffer_stack>
    4ac3:	48 8b 15 ae cb 01 00 	mov    0x1cbae(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4aca:	48 c1 e2 03          	shl    $0x3,%rdx
    4ace:	48 01 d0             	add    %rdx,%rax
    4ad1:	48 8b 00             	mov    (%rax),%rax
    4ad4:	8b 15 ba cb 01 00    	mov    0x1cbba(%rip),%edx        # 21694 <yy_n_chars>
    4ada:	89 50 1c             	mov    %edx,0x1c(%rax)
    4add:	48 8b 05 a4 cb 01 00 	mov    0x1cba4(%rip),%rax        # 21688 <yy_buffer_stack>
    4ae4:	48 85 c0             	test   %rax,%rax
    4ae7:	74 2f                	je     4b18 <yypush_buffer_state+0xd8>
    4ae9:	48 8b 05 98 cb 01 00 	mov    0x1cb98(%rip),%rax        # 21688 <yy_buffer_stack>
    4af0:	48 8b 15 81 cb 01 00 	mov    0x1cb81(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4af7:	48 c1 e2 03          	shl    $0x3,%rdx
    4afb:	48 01 d0             	add    %rdx,%rax
    4afe:	48 8b 00             	mov    (%rax),%rax
    4b01:	48 85 c0             	test   %rax,%rax
    4b04:	74 12                	je     4b18 <yypush_buffer_state+0xd8>
    4b06:	48 8b 05 6b cb 01 00 	mov    0x1cb6b(%rip),%rax        # 21678 <yy_buffer_stack_top>
    4b0d:	48 83 c0 01          	add    $0x1,%rax
    4b11:	48 89 05 60 cb 01 00 	mov    %rax,0x1cb60(%rip)        # 21678 <yy_buffer_stack_top>
    4b18:	48 8b 05 69 cb 01 00 	mov    0x1cb69(%rip),%rax        # 21688 <yy_buffer_stack>
    4b1f:	48 8b 15 52 cb 01 00 	mov    0x1cb52(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4b26:	48 c1 e2 03          	shl    $0x3,%rdx
    4b2a:	48 01 c2             	add    %rax,%rdx
    4b2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b31:	48 89 02             	mov    %rax,(%rdx)
    4b34:	e8 e5 fb ff ff       	call   471e <yy_load_buffer_state>
    4b39:	c7 05 65 cb 01 00 01 	movl   $0x1,0x1cb65(%rip)        # 216a8 <yy_did_buffer_switch_on_eof>
    4b40:	00 00 00
    4b43:	eb 01                	jmp    4b46 <yypush_buffer_state+0x106>
    4b45:	90                   	nop
    4b46:	c9                   	leave
    4b47:	c3                   	ret

0000000000004b48 <yypop_buffer_state>:
    4b48:	f3 0f 1e fa          	endbr64
    4b4c:	55                   	push   %rbp
    4b4d:	48 89 e5             	mov    %rsp,%rbp
    4b50:	48 8b 05 31 cb 01 00 	mov    0x1cb31(%rip),%rax        # 21688 <yy_buffer_stack>
    4b57:	48 85 c0             	test   %rax,%rax
    4b5a:	0f 84 c8 00 00 00    	je     4c28 <yypop_buffer_state+0xe0>
    4b60:	48 8b 05 21 cb 01 00 	mov    0x1cb21(%rip),%rax        # 21688 <yy_buffer_stack>
    4b67:	48 8b 15 0a cb 01 00 	mov    0x1cb0a(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4b6e:	48 c1 e2 03          	shl    $0x3,%rdx
    4b72:	48 01 d0             	add    %rdx,%rax
    4b75:	48 8b 00             	mov    (%rax),%rax
    4b78:	48 85 c0             	test   %rax,%rax
    4b7b:	0f 84 a7 00 00 00    	je     4c28 <yypop_buffer_state+0xe0>
    4b81:	48 8b 05 00 cb 01 00 	mov    0x1cb00(%rip),%rax        # 21688 <yy_buffer_stack>
    4b88:	48 85 c0             	test   %rax,%rax
    4b8b:	74 1a                	je     4ba7 <yypop_buffer_state+0x5f>
    4b8d:	48 8b 05 f4 ca 01 00 	mov    0x1caf4(%rip),%rax        # 21688 <yy_buffer_stack>
    4b94:	48 8b 15 dd ca 01 00 	mov    0x1cadd(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4b9b:	48 c1 e2 03          	shl    $0x3,%rdx
    4b9f:	48 01 d0             	add    %rdx,%rax
    4ba2:	48 8b 00             	mov    (%rax),%rax
    4ba5:	eb 05                	jmp    4bac <yypop_buffer_state+0x64>
    4ba7:	b8 00 00 00 00       	mov    $0x0,%eax
    4bac:	48 89 c7             	mov    %rax,%rdi
    4baf:	e8 96 fc ff ff       	call   484a <yy_delete_buffer>
    4bb4:	48 8b 05 cd ca 01 00 	mov    0x1cacd(%rip),%rax        # 21688 <yy_buffer_stack>
    4bbb:	48 8b 15 b6 ca 01 00 	mov    0x1cab6(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4bc2:	48 c1 e2 03          	shl    $0x3,%rdx
    4bc6:	48 01 d0             	add    %rdx,%rax
    4bc9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4bd0:	48 8b 05 a1 ca 01 00 	mov    0x1caa1(%rip),%rax        # 21678 <yy_buffer_stack_top>
    4bd7:	48 85 c0             	test   %rax,%rax
    4bda:	74 12                	je     4bee <yypop_buffer_state+0xa6>
    4bdc:	48 8b 05 95 ca 01 00 	mov    0x1ca95(%rip),%rax        # 21678 <yy_buffer_stack_top>
    4be3:	48 83 e8 01          	sub    $0x1,%rax
    4be7:	48 89 05 8a ca 01 00 	mov    %rax,0x1ca8a(%rip)        # 21678 <yy_buffer_stack_top>
    4bee:	48 8b 05 93 ca 01 00 	mov    0x1ca93(%rip),%rax        # 21688 <yy_buffer_stack>
    4bf5:	48 85 c0             	test   %rax,%rax
    4bf8:	74 2f                	je     4c29 <yypop_buffer_state+0xe1>
    4bfa:	48 8b 05 87 ca 01 00 	mov    0x1ca87(%rip),%rax        # 21688 <yy_buffer_stack>
    4c01:	48 8b 15 70 ca 01 00 	mov    0x1ca70(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4c08:	48 c1 e2 03          	shl    $0x3,%rdx
    4c0c:	48 01 d0             	add    %rdx,%rax
    4c0f:	48 8b 00             	mov    (%rax),%rax
    4c12:	48 85 c0             	test   %rax,%rax
    4c15:	74 12                	je     4c29 <yypop_buffer_state+0xe1>
    4c17:	e8 02 fb ff ff       	call   471e <yy_load_buffer_state>
    4c1c:	c7 05 82 ca 01 00 01 	movl   $0x1,0x1ca82(%rip)        # 216a8 <yy_did_buffer_switch_on_eof>
    4c23:	00 00 00
    4c26:	eb 01                	jmp    4c29 <yypop_buffer_state+0xe1>
    4c28:	90                   	nop
    4c29:	5d                   	pop    %rbp
    4c2a:	c3                   	ret

0000000000004c2b <yyensure_buffer_stack>:
    4c2b:	f3 0f 1e fa          	endbr64
    4c2f:	55                   	push   %rbp
    4c30:	48 89 e5             	mov    %rsp,%rbp
    4c33:	48 83 ec 10          	sub    $0x10,%rsp
    4c37:	48 8b 05 4a ca 01 00 	mov    0x1ca4a(%rip),%rax        # 21688 <yy_buffer_stack>
    4c3e:	48 85 c0             	test   %rax,%rax
    4c41:	75 75                	jne    4cb8 <yyensure_buffer_stack+0x8d>
    4c43:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
    4c4a:	00
    4c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c4f:	48 c1 e0 03          	shl    $0x3,%rax
    4c53:	48 89 c7             	mov    %rax,%rdi
    4c56:	e8 2d 05 00 00       	call   5188 <yyalloc>
    4c5b:	48 89 05 26 ca 01 00 	mov    %rax,0x1ca26(%rip)        # 21688 <yy_buffer_stack>
    4c62:	48 8b 05 1f ca 01 00 	mov    0x1ca1f(%rip),%rax        # 21688 <yy_buffer_stack>
    4c69:	48 85 c0             	test   %rax,%rax
    4c6c:	75 0f                	jne    4c7d <yyensure_buffer_stack+0x52>
    4c6e:	48 8d 05 53 33 01 00 	lea    0x13353(%rip),%rax        # 17fc8 <yy_chk+0x508>
    4c75:	48 89 c7             	mov    %rax,%rdi
    4c78:	e8 f8 02 00 00       	call   4f75 <yy_fatal_error>
    4c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c81:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4c88:	00
    4c89:	48 8b 05 f8 c9 01 00 	mov    0x1c9f8(%rip),%rax        # 21688 <yy_buffer_stack>
    4c90:	be 00 00 00 00       	mov    $0x0,%esi
    4c95:	48 89 c7             	mov    %rax,%rdi
    4c98:	e8 d3 d6 ff ff       	call   2370 <memset@plt>
    4c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ca1:	48 89 05 d8 c9 01 00 	mov    %rax,0x1c9d8(%rip)        # 21680 <yy_buffer_stack_max>
    4ca8:	48 c7 05 c5 c9 01 00 	movq   $0x0,0x1c9c5(%rip)        # 21678 <yy_buffer_stack_top>
    4caf:	00 00 00 00
    4cb3:	e9 ae 00 00 00       	jmp    4d66 <yyensure_buffer_stack+0x13b>
    4cb8:	48 8b 05 c1 c9 01 00 	mov    0x1c9c1(%rip),%rax        # 21680 <yy_buffer_stack_max>
    4cbf:	48 83 e8 01          	sub    $0x1,%rax
    4cc3:	48 8b 15 ae c9 01 00 	mov    0x1c9ae(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    4cca:	48 39 c2             	cmp    %rax,%rdx
    4ccd:	0f 82 93 00 00 00    	jb     4d66 <yyensure_buffer_stack+0x13b>
    4cd3:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    4cda:	00
    4cdb:	48 8b 15 9e c9 01 00 	mov    0x1c99e(%rip),%rdx        # 21680 <yy_buffer_stack_max>
    4ce2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ce6:	48 01 d0             	add    %rdx,%rax
    4ce9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cf1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4cf8:	00
    4cf9:	48 8b 05 88 c9 01 00 	mov    0x1c988(%rip),%rax        # 21688 <yy_buffer_stack>
    4d00:	48 89 d6             	mov    %rdx,%rsi
    4d03:	48 89 c7             	mov    %rax,%rdi
    4d06:	e8 9b 04 00 00       	call   51a6 <yyrealloc>
    4d0b:	48 89 05 76 c9 01 00 	mov    %rax,0x1c976(%rip)        # 21688 <yy_buffer_stack>
    4d12:	48 8b 05 6f c9 01 00 	mov    0x1c96f(%rip),%rax        # 21688 <yy_buffer_stack>
    4d19:	48 85 c0             	test   %rax,%rax
    4d1c:	75 0f                	jne    4d2d <yyensure_buffer_stack+0x102>
    4d1e:	48 8d 05 a3 32 01 00 	lea    0x132a3(%rip),%rax        # 17fc8 <yy_chk+0x508>
    4d25:	48 89 c7             	mov    %rax,%rdi
    4d28:	e8 48 02 00 00       	call   4f75 <yy_fatal_error>
    4d2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d31:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4d38:	00
    4d39:	48 8b 05 48 c9 01 00 	mov    0x1c948(%rip),%rax        # 21688 <yy_buffer_stack>
    4d40:	48 8b 0d 39 c9 01 00 	mov    0x1c939(%rip),%rcx        # 21680 <yy_buffer_stack_max>
    4d47:	48 c1 e1 03          	shl    $0x3,%rcx
    4d4b:	48 01 c8             	add    %rcx,%rax
    4d4e:	be 00 00 00 00       	mov    $0x0,%esi
    4d53:	48 89 c7             	mov    %rax,%rdi
    4d56:	e8 15 d6 ff ff       	call   2370 <memset@plt>
    4d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d5f:	48 89 05 1a c9 01 00 	mov    %rax,0x1c91a(%rip)        # 21680 <yy_buffer_stack_max>
    4d66:	c9                   	leave
    4d67:	c3                   	ret

0000000000004d68 <yy_scan_buffer>:
    4d68:	f3 0f 1e fa          	endbr64
    4d6c:	55                   	push   %rbp
    4d6d:	48 89 e5             	mov    %rsp,%rbp
    4d70:	48 83 ec 20          	sub    $0x20,%rsp
    4d74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4d7c:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
    4d81:	76 2c                	jbe    4daf <yy_scan_buffer+0x47>
    4d83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d87:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    4d8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d8f:	48 01 d0             	add    %rdx,%rax
    4d92:	0f b6 00             	movzbl (%rax),%eax
    4d95:	84 c0                	test   %al,%al
    4d97:	75 16                	jne    4daf <yy_scan_buffer+0x47>
    4d99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d9d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    4da1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4da5:	48 01 d0             	add    %rdx,%rax
    4da8:	0f b6 00             	movzbl (%rax),%eax
    4dab:	84 c0                	test   %al,%al
    4dad:	74 0a                	je     4db9 <yy_scan_buffer+0x51>
    4daf:	b8 00 00 00 00       	mov    $0x0,%eax
    4db4:	e9 b0 00 00 00       	jmp    4e69 <yy_scan_buffer+0x101>
    4db9:	bf 40 00 00 00       	mov    $0x40,%edi
    4dbe:	e8 c5 03 00 00       	call   5188 <yyalloc>
    4dc3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4dc7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4dcc:	75 0f                	jne    4ddd <yy_scan_buffer+0x75>
    4dce:	48 8d 05 2b 32 01 00 	lea    0x1322b(%rip),%rax        # 18000 <yy_chk+0x540>
    4dd5:	48 89 c7             	mov    %rax,%rdi
    4dd8:	e8 98 01 00 00       	call   4f75 <yy_fatal_error>
    4ddd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4de1:	83 e8 02             	sub    $0x2,%eax
    4de4:	89 c2                	mov    %eax,%edx
    4de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dea:	89 50 18             	mov    %edx,0x18(%rax)
    4ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4df5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dfd:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e05:	48 89 50 10          	mov    %rdx,0x10(%rax)
    4e09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0d:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    4e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e18:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e23:	8b 50 18             	mov    0x18(%rax),%edx
    4e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e2a:	89 50 1c             	mov    %edx,0x1c(%rax)
    4e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e31:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    4e38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e3c:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    4e43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e47:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    4e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e52:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    4e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e5d:	48 89 c7             	mov    %rax,%rdi
    4e60:	e8 c2 f7 ff ff       	call   4627 <yy_switch_to_buffer>
    4e65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e69:	c9                   	leave
    4e6a:	c3                   	ret

0000000000004e6b <yy_scan_string>:
    4e6b:	f3 0f 1e fa          	endbr64
    4e6f:	55                   	push   %rbp
    4e70:	48 89 e5             	mov    %rsp,%rbp
    4e73:	48 83 ec 10          	sub    $0x10,%rsp
    4e77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7f:	48 89 c7             	mov    %rax,%rdi
    4e82:	e8 99 d4 ff ff       	call   2320 <strlen@plt>
    4e87:	89 c2                	mov    %eax,%edx
    4e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e8d:	89 d6                	mov    %edx,%esi
    4e8f:	48 89 c7             	mov    %rax,%rdi
    4e92:	e8 02 00 00 00       	call   4e99 <yy_scan_bytes>
    4e97:	c9                   	leave
    4e98:	c3                   	ret

0000000000004e99 <yy_scan_bytes>:
    4e99:	f3 0f 1e fa          	endbr64
    4e9d:	55                   	push   %rbp
    4e9e:	48 89 e5             	mov    %rsp,%rbp
    4ea1:	48 83 ec 30          	sub    $0x30,%rsp
    4ea5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4ea9:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    4eac:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4eaf:	83 c0 02             	add    $0x2,%eax
    4eb2:	48 98                	cltq
    4eb4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4eb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ebc:	48 89 c7             	mov    %rax,%rdi
    4ebf:	e8 c4 02 00 00       	call   5188 <yyalloc>
    4ec4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4ec8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4ecd:	75 0f                	jne    4ede <yy_scan_bytes+0x45>
    4ecf:	48 8d 05 5a 31 01 00 	lea    0x1315a(%rip),%rax        # 18030 <yy_chk+0x570>
    4ed6:	48 89 c7             	mov    %rax,%rdi
    4ed9:	e8 97 00 00 00       	call   4f75 <yy_fatal_error>
    4ede:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    4ee5:	eb 23                	jmp    4f0a <yy_scan_bytes+0x71>
    4ee7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4eea:	48 63 d0             	movslq %eax,%rdx
    4eed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ef1:	48 01 d0             	add    %rdx,%rax
    4ef4:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    4ef7:	48 63 ca             	movslq %edx,%rcx
    4efa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4efe:	48 01 ca             	add    %rcx,%rdx
    4f01:	0f b6 00             	movzbl (%rax),%eax
    4f04:	88 02                	mov    %al,(%rdx)
    4f06:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    4f0a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4f0d:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    4f10:	7c d5                	jl     4ee7 <yy_scan_bytes+0x4e>
    4f12:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4f15:	48 98                	cltq
    4f17:	48 8d 50 01          	lea    0x1(%rax),%rdx
    4f1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f1f:	48 01 d0             	add    %rdx,%rax
    4f22:	c6 00 00             	movb   $0x0,(%rax)
    4f25:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    4f28:	48 63 ca             	movslq %edx,%rcx
    4f2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4f2f:	48 01 ca             	add    %rcx,%rdx
    4f32:	0f b6 00             	movzbl (%rax),%eax
    4f35:	88 02                	mov    %al,(%rdx)
    4f37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f3f:	48 89 d6             	mov    %rdx,%rsi
    4f42:	48 89 c7             	mov    %rax,%rdi
    4f45:	e8 1e fe ff ff       	call   4d68 <yy_scan_buffer>
    4f4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4f4e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4f53:	75 0f                	jne    4f64 <yy_scan_bytes+0xcb>
    4f55:	48 8d 05 fd 30 01 00 	lea    0x130fd(%rip),%rax        # 18059 <yy_chk+0x599>
    4f5c:	48 89 c7             	mov    %rax,%rdi
    4f5f:	e8 11 00 00 00       	call   4f75 <yy_fatal_error>
    4f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f68:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
    4f6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f73:	c9                   	leave
    4f74:	c3                   	ret

0000000000004f75 <yy_fatal_error>:
    4f75:	f3 0f 1e fa          	endbr64
    4f79:	55                   	push   %rbp
    4f7a:	48 89 e5             	mov    %rsp,%rbp
    4f7d:	48 83 ec 10          	sub    $0x10,%rsp
    4f81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f85:	48 8b 05 d4 c0 01 00 	mov    0x1c0d4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    4f8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4f90:	48 8d 0d e0 30 01 00 	lea    0x130e0(%rip),%rcx        # 18077 <yy_chk+0x5b7>
    4f97:	48 89 ce             	mov    %rcx,%rsi
    4f9a:	48 89 c7             	mov    %rax,%rdi
    4f9d:	b8 00 00 00 00       	mov    $0x0,%eax
    4fa2:	e8 29 d4 ff ff       	call   23d0 <fprintf@plt>
    4fa7:	bf 02 00 00 00       	mov    $0x2,%edi
    4fac:	e8 cf d4 ff ff       	call   2480 <exit@plt>

0000000000004fb1 <yyget_lineno>:
    4fb1:	f3 0f 1e fa          	endbr64
    4fb5:	55                   	push   %rbp
    4fb6:	48 89 e5             	mov    %rsp,%rbp
    4fb9:	8b 05 5d c0 01 00    	mov    0x1c05d(%rip),%eax        # 2101c <yylineno>
    4fbf:	5d                   	pop    %rbp
    4fc0:	c3                   	ret

0000000000004fc1 <yyget_in>:
    4fc1:	f3 0f 1e fa          	endbr64
    4fc5:	55                   	push   %rbp
    4fc6:	48 89 e5             	mov    %rsp,%rbp
    4fc9:	48 8b 05 d8 c0 01 00 	mov    0x1c0d8(%rip),%rax        # 210a8 <yyin>
    4fd0:	5d                   	pop    %rbp
    4fd1:	c3                   	ret

0000000000004fd2 <yyget_out>:
    4fd2:	f3 0f 1e fa          	endbr64
    4fd6:	55                   	push   %rbp
    4fd7:	48 89 e5             	mov    %rsp,%rbp
    4fda:	48 8b 05 cf c0 01 00 	mov    0x1c0cf(%rip),%rax        # 210b0 <yyout>
    4fe1:	5d                   	pop    %rbp
    4fe2:	c3                   	ret

0000000000004fe3 <yyget_leng>:
    4fe3:	f3 0f 1e fa          	endbr64
    4fe7:	55                   	push   %rbp
    4fe8:	48 89 e5             	mov    %rsp,%rbp
    4feb:	8b 05 af c0 01 00    	mov    0x1c0af(%rip),%eax        # 210a0 <yyleng>
    4ff1:	5d                   	pop    %rbp
    4ff2:	c3                   	ret

0000000000004ff3 <yyget_text>:
    4ff3:	f3 0f 1e fa          	endbr64
    4ff7:	55                   	push   %rbp
    4ff8:	48 89 e5             	mov    %rsp,%rbp
    4ffb:	48 8b 05 be c0 01 00 	mov    0x1c0be(%rip),%rax        # 210c0 <yytext>
    5002:	5d                   	pop    %rbp
    5003:	c3                   	ret

0000000000005004 <yyset_lineno>:
    5004:	f3 0f 1e fa          	endbr64
    5008:	55                   	push   %rbp
    5009:	48 89 e5             	mov    %rsp,%rbp
    500c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    500f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5012:	89 05 04 c0 01 00    	mov    %eax,0x1c004(%rip)        # 2101c <yylineno>
    5018:	90                   	nop
    5019:	5d                   	pop    %rbp
    501a:	c3                   	ret

000000000000501b <yyset_in>:
    501b:	f3 0f 1e fa          	endbr64
    501f:	55                   	push   %rbp
    5020:	48 89 e5             	mov    %rsp,%rbp
    5023:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    502b:	48 89 05 76 c0 01 00 	mov    %rax,0x1c076(%rip)        # 210a8 <yyin>
    5032:	90                   	nop
    5033:	5d                   	pop    %rbp
    5034:	c3                   	ret

0000000000005035 <yyset_out>:
    5035:	f3 0f 1e fa          	endbr64
    5039:	55                   	push   %rbp
    503a:	48 89 e5             	mov    %rsp,%rbp
    503d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5045:	48 89 05 64 c0 01 00 	mov    %rax,0x1c064(%rip)        # 210b0 <yyout>
    504c:	90                   	nop
    504d:	5d                   	pop    %rbp
    504e:	c3                   	ret

000000000000504f <yyget_debug>:
    504f:	f3 0f 1e fa          	endbr64
    5053:	55                   	push   %rbp
    5054:	48 89 e5             	mov    %rsp,%rbp
    5057:	8b 05 5b c0 01 00    	mov    0x1c05b(%rip),%eax        # 210b8 <yy_flex_debug>
    505d:	5d                   	pop    %rbp
    505e:	c3                   	ret

000000000000505f <yyset_debug>:
    505f:	f3 0f 1e fa          	endbr64
    5063:	55                   	push   %rbp
    5064:	48 89 e5             	mov    %rsp,%rbp
    5067:	89 7d fc             	mov    %edi,-0x4(%rbp)
    506a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    506d:	89 05 45 c0 01 00    	mov    %eax,0x1c045(%rip)        # 210b8 <yy_flex_debug>
    5073:	90                   	nop
    5074:	5d                   	pop    %rbp
    5075:	c3                   	ret

0000000000005076 <yy_init_globals>:
    5076:	f3 0f 1e fa          	endbr64
    507a:	55                   	push   %rbp
    507b:	48 89 e5             	mov    %rsp,%rbp
    507e:	48 c7 05 ff c5 01 00 	movq   $0x0,0x1c5ff(%rip)        # 21688 <yy_buffer_stack>
    5085:	00 00 00 00
    5089:	48 c7 05 e4 c5 01 00 	movq   $0x0,0x1c5e4(%rip)        # 21678 <yy_buffer_stack_top>
    5090:	00 00 00 00
    5094:	48 c7 05 e1 c5 01 00 	movq   $0x0,0x1c5e1(%rip)        # 21680 <yy_buffer_stack_max>
    509b:	00 00 00 00
    509f:	48 c7 05 ee c5 01 00 	movq   $0x0,0x1c5ee(%rip)        # 21698 <yy_c_buf_p>
    50a6:	00 00 00 00
    50aa:	c7 05 ec c5 01 00 00 	movl   $0x0,0x1c5ec(%rip)        # 216a0 <yy_init>
    50b1:	00 00 00
    50b4:	c7 05 e6 c5 01 00 00 	movl   $0x0,0x1c5e6(%rip)        # 216a4 <yy_start>
    50bb:	00 00 00
    50be:	48 c7 05 df bf 01 00 	movq   $0x0,0x1bfdf(%rip)        # 210a8 <yyin>
    50c5:	00 00 00 00
    50c9:	48 c7 05 dc bf 01 00 	movq   $0x0,0x1bfdc(%rip)        # 210b0 <yyout>
    50d0:	00 00 00 00
    50d4:	b8 00 00 00 00       	mov    $0x0,%eax
    50d9:	5d                   	pop    %rbp
    50da:	c3                   	ret

00000000000050db <yylex_destroy>:
    50db:	f3 0f 1e fa          	endbr64
    50df:	55                   	push   %rbp
    50e0:	48 89 e5             	mov    %rsp,%rbp
    50e3:	eb 54                	jmp    5139 <yylex_destroy+0x5e>
    50e5:	48 8b 05 9c c5 01 00 	mov    0x1c59c(%rip),%rax        # 21688 <yy_buffer_stack>
    50ec:	48 85 c0             	test   %rax,%rax
    50ef:	74 1a                	je     510b <yylex_destroy+0x30>
    50f1:	48 8b 05 90 c5 01 00 	mov    0x1c590(%rip),%rax        # 21688 <yy_buffer_stack>
    50f8:	48 8b 15 79 c5 01 00 	mov    0x1c579(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    50ff:	48 c1 e2 03          	shl    $0x3,%rdx
    5103:	48 01 d0             	add    %rdx,%rax
    5106:	48 8b 00             	mov    (%rax),%rax
    5109:	eb 05                	jmp    5110 <yylex_destroy+0x35>
    510b:	b8 00 00 00 00       	mov    $0x0,%eax
    5110:	48 89 c7             	mov    %rax,%rdi
    5113:	e8 32 f7 ff ff       	call   484a <yy_delete_buffer>
    5118:	48 8b 05 69 c5 01 00 	mov    0x1c569(%rip),%rax        # 21688 <yy_buffer_stack>
    511f:	48 8b 15 52 c5 01 00 	mov    0x1c552(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    5126:	48 c1 e2 03          	shl    $0x3,%rdx
    512a:	48 01 d0             	add    %rdx,%rax
    512d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5134:	e8 0f fa ff ff       	call   4b48 <yypop_buffer_state>
    5139:	48 8b 05 48 c5 01 00 	mov    0x1c548(%rip),%rax        # 21688 <yy_buffer_stack>
    5140:	48 85 c0             	test   %rax,%rax
    5143:	74 1d                	je     5162 <yylex_destroy+0x87>
    5145:	48 8b 05 3c c5 01 00 	mov    0x1c53c(%rip),%rax        # 21688 <yy_buffer_stack>
    514c:	48 8b 15 25 c5 01 00 	mov    0x1c525(%rip),%rdx        # 21678 <yy_buffer_stack_top>
    5153:	48 c1 e2 03          	shl    $0x3,%rdx
    5157:	48 01 d0             	add    %rdx,%rax
    515a:	48 8b 00             	mov    (%rax),%rax
    515d:	48 85 c0             	test   %rax,%rax
    5160:	75 83                	jne    50e5 <yylex_destroy+0xa>
    5162:	48 8b 05 1f c5 01 00 	mov    0x1c51f(%rip),%rax        # 21688 <yy_buffer_stack>
    5169:	48 89 c7             	mov    %rax,%rdi
    516c:	e8 5e 00 00 00       	call   51cf <yyfree>
    5171:	48 c7 05 0c c5 01 00 	movq   $0x0,0x1c50c(%rip)        # 21688 <yy_buffer_stack>
    5178:	00 00 00 00
    517c:	e8 f5 fe ff ff       	call   5076 <yy_init_globals>
    5181:	b8 00 00 00 00       	mov    $0x0,%eax
    5186:	5d                   	pop    %rbp
    5187:	c3                   	ret

0000000000005188 <yyalloc>:
    5188:	f3 0f 1e fa          	endbr64
    518c:	55                   	push   %rbp
    518d:	48 89 e5             	mov    %rsp,%rbp
    5190:	48 83 ec 10          	sub    $0x10,%rsp
    5194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    519c:	48 89 c7             	mov    %rax,%rdi
    519f:	e8 6c d2 ff ff       	call   2410 <malloc@plt>
    51a4:	c9                   	leave
    51a5:	c3                   	ret

00000000000051a6 <yyrealloc>:
    51a6:	f3 0f 1e fa          	endbr64
    51aa:	55                   	push   %rbp
    51ab:	48 89 e5             	mov    %rsp,%rbp
    51ae:	48 83 ec 10          	sub    $0x10,%rsp
    51b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    51ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c2:	48 89 d6             	mov    %rdx,%rsi
    51c5:	48 89 c7             	mov    %rax,%rdi
    51c8:	e8 63 d2 ff ff       	call   2430 <realloc@plt>
    51cd:	c9                   	leave
    51ce:	c3                   	ret

00000000000051cf <yyfree>:
    51cf:	f3 0f 1e fa          	endbr64
    51d3:	55                   	push   %rbp
    51d4:	48 89 e5             	mov    %rsp,%rbp
    51d7:	48 83 ec 10          	sub    $0x10,%rsp
    51db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51e3:	48 89 c7             	mov    %rax,%rdi
    51e6:	e8 a5 d0 ff ff       	call   2290 <free@plt>
    51eb:	90                   	nop
    51ec:	c9                   	leave
    51ed:	c3                   	ret

00000000000051ee <yysymbol_name>:
    51ee:	f3 0f 1e fa          	endbr64
    51f2:	55                   	push   %rbp
    51f3:	48 89 e5             	mov    %rsp,%rbp
    51f6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    51f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    51fc:	48 98                	cltq
    51fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5205:	00
    5206:	48 8d 05 13 b7 01 00 	lea    0x1b713(%rip),%rax        # 20920 <yytname>
    520d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    5211:	5d                   	pop    %rbp
    5212:	c3                   	ret

0000000000005213 <yypcontext_expected_tokens>:
    5213:	f3 0f 1e fa          	endbr64
    5217:	55                   	push   %rbp
    5218:	48 89 e5             	mov    %rsp,%rbp
    521b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    521f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5223:	89 55 cc             	mov    %edx,-0x34(%rbp)
    5226:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    522d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5231:	48 8b 00             	mov    (%rax),%rax
    5234:	0f b6 00             	movzbl (%rax),%eax
    5237:	0f b6 c0             	movzbl %al,%eax
    523a:	48 98                	cltq
    523c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5240:	48 8d 05 79 33 01 00 	lea    0x13379(%rip),%rax        # 185c0 <yypact>
    5247:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    524b:	98                   	cwtl
    524c:	89 45 f0             	mov    %eax,-0x10(%rbp)
    524f:	83 7d f0 95          	cmpl   $0xffffff95,-0x10(%rbp)
    5253:	0f 84 a4 00 00 00    	je     52fd <yypcontext_expected_tokens+0xea>
    5259:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    525d:	79 07                	jns    5266 <yypcontext_expected_tokens+0x53>
    525f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    5262:	f7 d8                	neg    %eax
    5264:	eb 05                	jmp    526b <yypcontext_expected_tokens+0x58>
    5266:	b8 00 00 00 00       	mov    $0x0,%eax
    526b:	89 45 f4             	mov    %eax,-0xc(%rbp)
    526e:	b8 b0 00 00 00       	mov    $0xb0,%eax
    5273:	2b 45 f0             	sub    -0x10(%rbp),%eax
    5276:	89 45 f8             	mov    %eax,-0x8(%rbp)
    5279:	8b 45 f8             	mov    -0x8(%rbp),%eax
    527c:	ba 42 00 00 00       	mov    $0x42,%edx
    5281:	39 d0                	cmp    %edx,%eax
    5283:	0f 4f c2             	cmovg  %edx,%eax
    5286:	89 45 fc             	mov    %eax,-0x4(%rbp)
    5289:	8b 45 f4             	mov    -0xc(%rbp),%eax
    528c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    528f:	eb 64                	jmp    52f5 <yypcontext_expected_tokens+0xe2>
    5291:	8b 55 ec             	mov    -0x14(%rbp),%edx
    5294:	8b 45 f0             	mov    -0x10(%rbp),%eax
    5297:	01 d0                	add    %edx,%eax
    5299:	48 98                	cltq
    529b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    529f:	48 8d 05 3a 37 01 00 	lea    0x1373a(%rip),%rax        # 189e0 <yycheck>
    52a6:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    52aa:	98                   	cwtl
    52ab:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    52ae:	75 41                	jne    52f1 <yypcontext_expected_tokens+0xde>
    52b0:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    52b4:	74 3b                	je     52f1 <yypcontext_expected_tokens+0xde>
    52b6:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    52bb:	75 06                	jne    52c3 <yypcontext_expected_tokens+0xb0>
    52bd:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    52c1:	eb 2e                	jmp    52f1 <yypcontext_expected_tokens+0xde>
    52c3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    52c6:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    52c9:	75 07                	jne    52d2 <yypcontext_expected_tokens+0xbf>
    52cb:	b8 00 00 00 00       	mov    $0x0,%eax
    52d0:	eb 4b                	jmp    531d <yypcontext_expected_tokens+0x10a>
    52d2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    52d5:	8d 50 01             	lea    0x1(%rax),%edx
    52d8:	89 55 e8             	mov    %edx,-0x18(%rbp)
    52db:	48 98                	cltq
    52dd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    52e4:	00
    52e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    52e9:	48 01 c2             	add    %rax,%rdx
    52ec:	8b 45 ec             	mov    -0x14(%rbp),%eax
    52ef:	89 02                	mov    %eax,(%rdx)
    52f1:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    52f5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    52f8:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    52fb:	7c 94                	jl     5291 <yypcontext_expected_tokens+0x7e>
    52fd:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    5302:	74 16                	je     531a <yypcontext_expected_tokens+0x107>
    5304:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
    5308:	75 10                	jne    531a <yypcontext_expected_tokens+0x107>
    530a:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    530e:	7e 0a                	jle    531a <yypcontext_expected_tokens+0x107>
    5310:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5314:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%rax)
    531a:	8b 45 e8             	mov    -0x18(%rbp),%eax
    531d:	5d                   	pop    %rbp
    531e:	c3                   	ret

000000000000531f <yystpcpy>:
    531f:	f3 0f 1e fa          	endbr64
    5323:	55                   	push   %rbp
    5324:	48 89 e5             	mov    %rsp,%rbp
    5327:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    532b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    532f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5333:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5337:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    533b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    533f:	eb 01                	jmp    5342 <yystpcpy+0x23>
    5341:	90                   	nop
    5342:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5346:	48 8d 42 01          	lea    0x1(%rdx),%rax
    534a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    534e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5352:	48 8d 48 01          	lea    0x1(%rax),%rcx
    5356:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    535a:	0f b6 12             	movzbl (%rdx),%edx
    535d:	88 10                	mov    %dl,(%rax)
    535f:	0f b6 00             	movzbl (%rax),%eax
    5362:	84 c0                	test   %al,%al
    5364:	75 db                	jne    5341 <yystpcpy+0x22>
    5366:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    536a:	48 83 e8 01          	sub    $0x1,%rax
    536e:	5d                   	pop    %rbp
    536f:	c3                   	ret

0000000000005370 <yytnamerr>:
    5370:	f3 0f 1e fa          	endbr64
    5374:	55                   	push   %rbp
    5375:	48 89 e5             	mov    %rsp,%rbp
    5378:	48 83 ec 20          	sub    $0x20,%rsp
    537c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5380:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5384:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5388:	0f b6 00             	movzbl (%rax),%eax
    538b:	3c 22                	cmp    $0x22,%al
    538d:	0f 85 93 00 00 00    	jne    5426 <yytnamerr+0xb6>
    5393:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    539a:	00
    539b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    539f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    53a3:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    53a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ac:	0f b6 00             	movzbl (%rax),%eax
    53af:	0f be c0             	movsbl %al,%eax
    53b2:	83 f8 5c             	cmp    $0x5c,%eax
    53b5:	74 1b                	je     53d2 <yytnamerr+0x62>
    53b7:	83 f8 5c             	cmp    $0x5c,%eax
    53ba:	7f 27                	jg     53e3 <yytnamerr+0x73>
    53bc:	83 f8 2c             	cmp    $0x2c,%eax
    53bf:	74 61                	je     5422 <yytnamerr+0xb2>
    53c1:	83 f8 2c             	cmp    $0x2c,%eax
    53c4:	7f 1d                	jg     53e3 <yytnamerr+0x73>
    53c6:	83 f8 22             	cmp    $0x22,%eax
    53c9:	74 3a                	je     5405 <yytnamerr+0x95>
    53cb:	83 f8 27             	cmp    $0x27,%eax
    53ce:	75 13                	jne    53e3 <yytnamerr+0x73>
    53d0:	eb 50                	jmp    5422 <yytnamerr+0xb2>
    53d2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    53d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53db:	0f b6 00             	movzbl (%rax),%eax
    53de:	3c 5c                	cmp    $0x5c,%al
    53e0:	75 43                	jne    5425 <yytnamerr+0xb5>
    53e2:	90                   	nop
    53e3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    53e8:	74 14                	je     53fe <yytnamerr+0x8e>
    53ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53f2:	48 01 c2             	add    %rax,%rdx
    53f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f9:	0f b6 00             	movzbl (%rax),%eax
    53fc:	88 02                	mov    %al,(%rdx)
    53fe:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    5403:	eb 1b                	jmp    5420 <yytnamerr+0xb0>
    5405:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    540a:	74 0e                	je     541a <yytnamerr+0xaa>
    540c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5414:	48 01 d0             	add    %rdx,%rax
    5417:	c6 00 00             	movb   $0x0,(%rax)
    541a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    541e:	eb 32                	jmp    5452 <yytnamerr+0xe2>
    5420:	eb 81                	jmp    53a3 <yytnamerr+0x33>
    5422:	90                   	nop
    5423:	eb 01                	jmp    5426 <yytnamerr+0xb6>
    5425:	90                   	nop
    5426:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    542b:	74 19                	je     5446 <yytnamerr+0xd6>
    542d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5435:	48 89 d6             	mov    %rdx,%rsi
    5438:	48 89 c7             	mov    %rax,%rdi
    543b:	e8 df fe ff ff       	call   531f <yystpcpy>
    5440:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    5444:	eb 0c                	jmp    5452 <yytnamerr+0xe2>
    5446:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    544a:	48 89 c7             	mov    %rax,%rdi
    544d:	e8 ce ce ff ff       	call   2320 <strlen@plt>
    5452:	c9                   	leave
    5453:	c3                   	ret

0000000000005454 <yy_syntax_error_arguments>:
    5454:	f3 0f 1e fa          	endbr64
    5458:	55                   	push   %rbp
    5459:	48 89 e5             	mov    %rsp,%rbp
    545c:	48 83 ec 28          	sub    $0x28,%rsp
    5460:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5464:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5468:	89 55 dc             	mov    %edx,-0x24(%rbp)
    546b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    5472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5476:	8b 40 08             	mov    0x8(%rax),%eax
    5479:	83 f8 fe             	cmp    $0xfffffffe,%eax
    547c:	74 68                	je     54e6 <yy_syntax_error_arguments+0x92>
    547e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5483:	74 1d                	je     54a2 <yy_syntax_error_arguments+0x4e>
    5485:	8b 45 f8             	mov    -0x8(%rbp),%eax
    5488:	48 98                	cltq
    548a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5491:	00
    5492:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5496:	48 01 c2             	add    %rax,%rdx
    5499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    549d:	8b 40 08             	mov    0x8(%rax),%eax
    54a0:	89 02                	mov    %eax,(%rdx)
    54a2:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    54a6:	8b 45 dc             	mov    -0x24(%rbp),%eax
    54a9:	8d 50 ff             	lea    -0x1(%rax),%edx
    54ac:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    54b1:	74 0a                	je     54bd <yy_syntax_error_arguments+0x69>
    54b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    54b7:	48 83 c0 04          	add    $0x4,%rax
    54bb:	eb 04                	jmp    54c1 <yy_syntax_error_arguments+0x6d>
    54bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    54c1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    54c5:	48 89 c6             	mov    %rax,%rsi
    54c8:	48 89 cf             	mov    %rcx,%rdi
    54cb:	e8 43 fd ff ff       	call   5213 <yypcontext_expected_tokens>
    54d0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    54d3:	83 7d fc fe          	cmpl   $0xfffffffe,-0x4(%rbp)
    54d7:	75 07                	jne    54e0 <yy_syntax_error_arguments+0x8c>
    54d9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    54de:	eb 09                	jmp    54e9 <yy_syntax_error_arguments+0x95>
    54e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    54e3:	01 45 f8             	add    %eax,-0x8(%rbp)
    54e6:	8b 45 f8             	mov    -0x8(%rbp),%eax
    54e9:	c9                   	leave
    54ea:	c3                   	ret

00000000000054eb <yysyntax_error>:
    54eb:	f3 0f 1e fa          	endbr64
    54ef:	55                   	push   %rbp
    54f0:	48 89 e5             	mov    %rsp,%rbp
    54f3:	48 83 ec 70          	sub    $0x70,%rsp
    54f7:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    54fb:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    54ff:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    5503:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    550a:	00 00
    550c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5510:	31 c0                	xor    %eax,%eax
    5512:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    5519:	00
    551a:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5521:	00
    5522:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    5526:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    552a:	ba 05 00 00 00       	mov    $0x5,%edx
    552f:	48 89 ce             	mov    %rcx,%rsi
    5532:	48 89 c7             	mov    %rax,%rdi
    5535:	e8 1a ff ff ff       	call   5454 <yy_syntax_error_arguments>
    553a:	89 45 bc             	mov    %eax,-0x44(%rbp)
    553d:	83 7d bc fe          	cmpl   $0xfffffffe,-0x44(%rbp)
    5541:	75 0a                	jne    554d <yysyntax_error+0x62>
    5543:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5548:	e9 e3 01 00 00       	jmp    5730 <yysyntax_error+0x245>
    554d:	83 7d bc 05          	cmpl   $0x5,-0x44(%rbp)
    5551:	77 24                	ja     5577 <yysyntax_error+0x8c>
    5553:	8b 45 bc             	mov    -0x44(%rbp),%eax
    5556:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    555d:	00
    555e:	48 8d 05 57 38 01 00 	lea    0x13857(%rip),%rax        # 18dbc <yyr2+0x15c>
    5565:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5568:	48 98                	cltq
    556a:	48 8d 15 4b 38 01 00 	lea    0x1384b(%rip),%rdx        # 18dbc <yyr2+0x15c>
    5571:	48 01 d0             	add    %rdx,%rax
    5574:	3e ff e0             	notrack jmp *%rax
    5577:	48 8d 05 3b 37 01 00 	lea    0x1373b(%rip),%rax        # 18cb9 <yyr2+0x59>
    557e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5582:	eb 3f                	jmp    55c3 <yysyntax_error+0xd8>
    5584:	48 8d 05 3b 37 01 00 	lea    0x1373b(%rip),%rax        # 18cc6 <yyr2+0x66>
    558b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    558f:	eb 32                	jmp    55c3 <yysyntax_error+0xd8>
    5591:	48 8d 05 50 37 01 00 	lea    0x13750(%rip),%rax        # 18ce8 <yyr2+0x88>
    5598:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    559c:	eb 25                	jmp    55c3 <yysyntax_error+0xd8>
    559e:	48 8d 05 73 37 01 00 	lea    0x13773(%rip),%rax        # 18d18 <yyr2+0xb8>
    55a5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    55a9:	eb 18                	jmp    55c3 <yysyntax_error+0xd8>
    55ab:	48 8d 05 96 37 01 00 	lea    0x13796(%rip),%rax        # 18d48 <yyr2+0xe8>
    55b2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    55b6:	eb 0b                	jmp    55c3 <yysyntax_error+0xd8>
    55b8:	48 8d 05 c1 37 01 00 	lea    0x137c1(%rip),%rax        # 18d80 <yyr2+0x120>
    55bf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    55c3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    55c7:	48 89 c7             	mov    %rax,%rdi
    55ca:	e8 51 cd ff ff       	call   2320 <strlen@plt>
    55cf:	48 89 c2             	mov    %rax,%rdx
    55d2:	8b 45 bc             	mov    -0x44(%rbp),%eax
    55d5:	01 c0                	add    %eax,%eax
    55d7:	48 98                	cltq
    55d9:	48 29 c2             	sub    %rax,%rdx
    55dc:	48 8d 42 01          	lea    0x1(%rdx),%rax
    55e0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    55e4:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    55eb:	eb 58                	jmp    5645 <yysyntax_error+0x15a>
    55ed:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    55f0:	48 98                	cltq
    55f2:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    55f6:	48 98                	cltq
    55f8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55ff:	00
    5600:	48 8d 05 19 b3 01 00 	lea    0x1b319(%rip),%rax        # 20920 <yytname>
    5607:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    560b:	48 89 c6             	mov    %rax,%rsi
    560e:	bf 00 00 00 00       	mov    $0x0,%edi
    5613:	e8 58 fd ff ff       	call   5370 <yytnamerr>
    5618:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    561c:	48 01 d0             	add    %rdx,%rax
    561f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5623:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5627:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    562b:	7f 0a                	jg     5637 <yysyntax_error+0x14c>
    562d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5631:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5635:	eb 0a                	jmp    5641 <yysyntax_error+0x156>
    5637:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    563c:	e9 ef 00 00 00       	jmp    5730 <yysyntax_error+0x245>
    5641:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    5645:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    5648:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    564b:	7c a0                	jl     55ed <yysyntax_error+0x102>
    564d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5651:	48 8b 00             	mov    (%rax),%rax
    5654:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    5658:	7e 37                	jle    5691 <yysyntax_error+0x1a6>
    565a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    565e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5662:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5666:	48 89 10             	mov    %rdx,(%rax)
    5669:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    566d:	48 8b 00             	mov    (%rax),%rax
    5670:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    5674:	7e 11                	jle    5687 <yysyntax_error+0x19c>
    5676:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    567a:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
    5681:	ff ff 7f
    5684:	48 89 08             	mov    %rcx,(%rax)
    5687:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    568c:	e9 9f 00 00 00       	jmp    5730 <yysyntax_error+0x245>
    5691:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5695:	48 8b 00             	mov    (%rax),%rax
    5698:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    569c:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    56a3:	eb 6a                	jmp    570f <yysyntax_error+0x224>
    56a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    56a9:	0f b6 00             	movzbl (%rax),%eax
    56ac:	3c 25                	cmp    $0x25,%al
    56ae:	75 55                	jne    5705 <yysyntax_error+0x21a>
    56b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56b4:	48 83 c0 01          	add    $0x1,%rax
    56b8:	0f b6 00             	movzbl (%rax),%eax
    56bb:	3c 73                	cmp    $0x73,%al
    56bd:	75 46                	jne    5705 <yysyntax_error+0x21a>
    56bf:	8b 45 b8             	mov    -0x48(%rbp),%eax
    56c2:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    56c5:	7d 3e                	jge    5705 <yysyntax_error+0x21a>
    56c7:	8b 45 b8             	mov    -0x48(%rbp),%eax
    56ca:	8d 50 01             	lea    0x1(%rax),%edx
    56cd:	89 55 b8             	mov    %edx,-0x48(%rbp)
    56d0:	48 98                	cltq
    56d2:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    56d6:	48 98                	cltq
    56d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    56df:	00
    56e0:	48 8d 05 39 b2 01 00 	lea    0x1b239(%rip),%rax        # 20920 <yytname>
    56e7:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
    56eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    56ef:	48 89 d6             	mov    %rdx,%rsi
    56f2:	48 89 c7             	mov    %rax,%rdi
    56f5:	e8 76 fc ff ff       	call   5370 <yytnamerr>
    56fa:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    56fe:	48 83 45 c0 02       	addq   $0x2,-0x40(%rbp)
    5703:	eb 0a                	jmp    570f <yysyntax_error+0x224>
    5705:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    570a:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    570f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5713:	0f b6 10             	movzbl (%rax),%edx
    5716:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    571a:	88 10                	mov    %dl,(%rax)
    571c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5720:	0f b6 00             	movzbl (%rax),%eax
    5723:	84 c0                	test   %al,%al
    5725:	0f 85 7a ff ff ff    	jne    56a5 <yysyntax_error+0x1ba>
    572b:	b8 00 00 00 00       	mov    $0x0,%eax
    5730:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5734:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    573b:	00 00
    573d:	74 05                	je     5744 <yysyntax_error+0x259>
    573f:	e8 ec cb ff ff       	call   2330 <__stack_chk_fail@plt>
    5744:	c9                   	leave
    5745:	c3                   	ret

0000000000005746 <yydestruct>:
    5746:	f3 0f 1e fa          	endbr64
    574a:	55                   	push   %rbp
    574b:	48 89 e5             	mov    %rsp,%rbp
    574e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5752:	89 75 f4             	mov    %esi,-0xc(%rbp)
    5755:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5759:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    575e:	75 0b                	jne    576b <yydestruct+0x25>
    5760:	48 8d 05 6d 36 01 00 	lea    0x1366d(%rip),%rax        # 18dd4 <yyr2+0x174>
    5767:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    576b:	90                   	nop
    576c:	5d                   	pop    %rbp
    576d:	c3                   	ret

000000000000576e <yyparse>:
    576e:	f3 0f 1e fa          	endbr64
    5772:	55                   	push   %rbp
    5773:	48 89 e5             	mov    %rsp,%rbp
    5776:	53                   	push   %rbx
    5777:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    577e:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    5783:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    578a:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    578f:	48 81 ec b8 07 00 00 	sub    $0x7b8,%rsp
    5796:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    579d:	00 00
    579f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    57a3:	31 c0                	xor    %eax,%eax
    57a5:	c7 85 44 d8 ff ff 00 	movl   $0x0,-0x27bc(%rbp)
    57ac:	00 00 00
    57af:	c7 85 48 d8 ff ff 00 	movl   $0x0,-0x27b8(%rbp)
    57b6:	00 00 00
    57b9:	48 c7 85 78 d8 ff ff 	movq   $0xc8,-0x2788(%rbp)
    57c0:	c8 00 00 00
    57c4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    57cb:	48 89 85 80 d8 ff ff 	mov    %rax,-0x2780(%rbp)
    57d2:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    57d9:	48 89 85 88 d8 ff ff 	mov    %rax,-0x2778(%rbp)
    57e0:	48 8d 85 20 d9 ff ff 	lea    -0x26e0(%rbp),%rax
    57e7:	48 89 85 90 d8 ff ff 	mov    %rax,-0x2770(%rbp)
    57ee:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    57f5:	48 89 85 98 d8 ff ff 	mov    %rax,-0x2768(%rbp)
    57fc:	c7 85 54 d8 ff ff fe 	movl   $0xfffffffe,-0x27ac(%rbp)
    5803:	ff ff ff
    5806:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    580d:	48 89 85 68 d8 ff ff 	mov    %rax,-0x2798(%rbp)
    5814:	48 c7 85 70 d8 ff ff 	movq   $0x80,-0x2790(%rbp)
    581b:	80 00 00 00
    581f:	c7 85 58 d8 ff ff 00 	movl   $0x0,-0x27a8(%rbp)
    5826:	00 00 00
    5829:	c7 05 8d be 01 00 fe 	movl   $0xfffffffe,0x1be8d(%rip)        # 216c0 <yychar>
    5830:	ff ff ff
    5833:	eb 08                	jmp    583d <yyparse+0xcf>
    5835:	48 83 85 88 d8 ff ff 	addq   $0x1,-0x2778(%rbp)
    583c:	01
    583d:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    5843:	89 c2                	mov    %eax,%edx
    5845:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    584c:	88 10                	mov    %dl,(%rax)
    584e:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    5855:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5859:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    5860:	48 01 d0             	add    %rdx,%rax
    5863:	48 39 85 88 d8 ff ff 	cmp    %rax,-0x2778(%rbp)
    586a:	0f 82 2d 02 00 00    	jb     5a9d <yyparse+0x32f>
    5870:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    5877:	48 2b 85 80 d8 ff ff 	sub    -0x2780(%rbp),%rax
    587e:	48 83 c0 01          	add    $0x1,%rax
    5882:	48 89 85 b8 d8 ff ff 	mov    %rax,-0x2748(%rbp)
    5889:	48 81 bd 78 d8 ff ff 	cmpq   $0x270f,-0x2788(%rbp)
    5890:	0f 27 00 00
    5894:	0f 8f b6 1a 00 00    	jg     7350 <yyparse+0x1be2>
    589a:	48 d1 a5 78 d8 ff ff 	shlq   $1,-0x2788(%rbp)
    58a1:	48 81 bd 78 d8 ff ff 	cmpq   $0x2710,-0x2788(%rbp)
    58a8:	10 27 00 00
    58ac:	7e 0b                	jle    58b9 <yyparse+0x14b>
    58ae:	48 c7 85 78 d8 ff ff 	movq   $0x2710,-0x2788(%rbp)
    58b5:	10 27 00 00
    58b9:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    58c0:	48 89 85 c0 d8 ff ff 	mov    %rax,-0x2740(%rbp)
    58c7:	48 8b 95 78 d8 ff ff 	mov    -0x2788(%rbp),%rdx
    58ce:	48 89 d0             	mov    %rdx,%rax
    58d1:	48 01 c0             	add    %rax,%rax
    58d4:	48 01 d0             	add    %rdx,%rax
    58d7:	48 c1 e0 04          	shl    $0x4,%rax
    58db:	48 01 d0             	add    %rdx,%rax
    58de:	48 83 c0 2f          	add    $0x2f,%rax
    58e2:	48 89 c7             	mov    %rax,%rdi
    58e5:	e8 26 cb ff ff       	call   2410 <malloc@plt>
    58ea:	48 89 85 c8 d8 ff ff 	mov    %rax,-0x2738(%rbp)
    58f1:	48 83 bd c8 d8 ff ff 	cmpq   $0x0,-0x2738(%rbp)
    58f8:	00
    58f9:	0f 84 54 1a 00 00    	je     7353 <yyparse+0x1be5>
    58ff:	48 8b 85 b8 d8 ff ff 	mov    -0x2748(%rbp),%rax
    5906:	48 8b 8d c8 d8 ff ff 	mov    -0x2738(%rbp),%rcx
    590d:	48 8b 95 80 d8 ff ff 	mov    -0x2780(%rbp),%rdx
    5914:	48 89 d6             	mov    %rdx,%rsi
    5917:	48 89 c2             	mov    %rax,%rdx
    591a:	48 89 cf             	mov    %rcx,%rdi
    591d:	e8 ce ca ff ff       	call   23f0 <memcpy@plt>
    5922:	48 8b 85 c8 d8 ff ff 	mov    -0x2738(%rbp),%rax
    5929:	48 89 85 80 d8 ff ff 	mov    %rax,-0x2780(%rbp)
    5930:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    5937:	48 83 c0 2f          	add    $0x2f,%rax
    593b:	48 89 85 d0 d8 ff ff 	mov    %rax,-0x2730(%rbp)
    5942:	48 8b 8d d0 d8 ff ff 	mov    -0x2730(%rbp),%rcx
    5949:	48 ba ab aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaab,%rdx
    5950:	aa aa 2a
    5953:	48 89 c8             	mov    %rcx,%rax
    5956:	48 f7 ea             	imul   %rdx
    5959:	48 c1 fa 03          	sar    $0x3,%rdx
    595d:	48 89 c8             	mov    %rcx,%rax
    5960:	48 c1 f8 3f          	sar    $0x3f,%rax
    5964:	48 29 c2             	sub    %rax,%rdx
    5967:	48 89 d0             	mov    %rdx,%rax
    596a:	48 01 c0             	add    %rax,%rax
    596d:	48 01 d0             	add    %rdx,%rax
    5970:	48 c1 e0 04          	shl    $0x4,%rax
    5974:	48 01 85 c8 d8 ff ff 	add    %rax,-0x2738(%rbp)
    597b:	48 8b 95 b8 d8 ff ff 	mov    -0x2748(%rbp),%rdx
    5982:	48 89 d0             	mov    %rdx,%rax
    5985:	48 01 c0             	add    %rax,%rax
    5988:	48 01 d0             	add    %rdx,%rax
    598b:	48 c1 e0 04          	shl    $0x4,%rax
    598f:	48 89 c6             	mov    %rax,%rsi
    5992:	48 8b 95 c8 d8 ff ff 	mov    -0x2738(%rbp),%rdx
    5999:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    59a0:	48 89 d1             	mov    %rdx,%rcx
    59a3:	48 89 f2             	mov    %rsi,%rdx
    59a6:	48 89 c6             	mov    %rax,%rsi
    59a9:	48 89 cf             	mov    %rcx,%rdi
    59ac:	e8 3f ca ff ff       	call   23f0 <memcpy@plt>
    59b1:	48 8b 85 c8 d8 ff ff 	mov    -0x2738(%rbp),%rax
    59b8:	48 89 85 90 d8 ff ff 	mov    %rax,-0x2770(%rbp)
    59bf:	48 8b 95 78 d8 ff ff 	mov    -0x2788(%rbp),%rdx
    59c6:	48 89 d0             	mov    %rdx,%rax
    59c9:	48 01 c0             	add    %rax,%rax
    59cc:	48 01 d0             	add    %rdx,%rax
    59cf:	48 c1 e0 04          	shl    $0x4,%rax
    59d3:	48 83 c0 2f          	add    $0x2f,%rax
    59d7:	48 89 85 d8 d8 ff ff 	mov    %rax,-0x2728(%rbp)
    59de:	48 8b 8d d8 d8 ff ff 	mov    -0x2728(%rbp),%rcx
    59e5:	48 ba ab aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaab,%rdx
    59ec:	aa aa 2a
    59ef:	48 89 c8             	mov    %rcx,%rax
    59f2:	48 f7 ea             	imul   %rdx
    59f5:	48 c1 fa 03          	sar    $0x3,%rdx
    59f9:	48 89 c8             	mov    %rcx,%rax
    59fc:	48 c1 f8 3f          	sar    $0x3f,%rax
    5a00:	48 29 c2             	sub    %rax,%rdx
    5a03:	48 89 d0             	mov    %rdx,%rax
    5a06:	48 01 c0             	add    %rax,%rax
    5a09:	48 01 d0             	add    %rdx,%rax
    5a0c:	48 c1 e0 04          	shl    $0x4,%rax
    5a10:	48 01 85 c8 d8 ff ff 	add    %rax,-0x2738(%rbp)
    5a17:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    5a1e:	48 39 85 c0 d8 ff ff 	cmp    %rax,-0x2740(%rbp)
    5a25:	74 0f                	je     5a36 <yyparse+0x2c8>
    5a27:	48 8b 85 c0 d8 ff ff 	mov    -0x2740(%rbp),%rax
    5a2e:	48 89 c7             	mov    %rax,%rdi
    5a31:	e8 5a c8 ff ff       	call   2290 <free@plt>
    5a36:	48 8b 85 b8 d8 ff ff 	mov    -0x2748(%rbp),%rax
    5a3d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5a41:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    5a48:	48 01 d0             	add    %rdx,%rax
    5a4b:	48 89 85 88 d8 ff ff 	mov    %rax,-0x2778(%rbp)
    5a52:	48 8b 95 b8 d8 ff ff 	mov    -0x2748(%rbp),%rdx
    5a59:	48 89 d0             	mov    %rdx,%rax
    5a5c:	48 01 c0             	add    %rax,%rax
    5a5f:	48 01 d0             	add    %rdx,%rax
    5a62:	48 c1 e0 04          	shl    $0x4,%rax
    5a66:	48 8d 50 d0          	lea    -0x30(%rax),%rdx
    5a6a:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    5a71:	48 01 d0             	add    %rdx,%rax
    5a74:	48 89 85 98 d8 ff ff 	mov    %rax,-0x2768(%rbp)
    5a7b:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    5a82:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5a86:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    5a8d:	48 01 d0             	add    %rdx,%rax
    5a90:	48 39 85 88 d8 ff ff 	cmp    %rax,-0x2778(%rbp)
    5a97:	0f 83 a3 18 00 00    	jae    7340 <yyparse+0x1bd2>
    5a9d:	83 bd 44 d8 ff ff 05 	cmpl   $0x5,-0x27bc(%rbp)
    5aa4:	0f 84 89 18 00 00    	je     7333 <yyparse+0x1bc5>
    5aaa:	90                   	nop
    5aab:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    5ab1:	48 98                	cltq
    5ab3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5ab7:	48 8d 05 02 2b 01 00 	lea    0x12b02(%rip),%rax        # 185c0 <yypact>
    5abe:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5ac2:	98                   	cwtl
    5ac3:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    5ac9:	83 bd 4c d8 ff ff 95 	cmpl   $0xffffff95,-0x27b4(%rbp)
    5ad0:	0f 84 90 01 00 00    	je     5c66 <yyparse+0x4f8>
    5ad6:	8b 05 e4 bb 01 00    	mov    0x1bbe4(%rip),%eax        # 216c0 <yychar>
    5adc:	83 f8 fe             	cmp    $0xfffffffe,%eax
    5adf:	75 0b                	jne    5aec <yyparse+0x37e>
    5ae1:	e8 67 cf ff ff       	call   2a4d <yylex>
    5ae6:	89 05 d4 bb 01 00    	mov    %eax,0x1bbd4(%rip)        # 216c0 <yychar>
    5aec:	8b 05 ce bb 01 00    	mov    0x1bbce(%rip),%eax        # 216c0 <yychar>
    5af2:	85 c0                	test   %eax,%eax
    5af4:	7f 16                	jg     5b0c <yyparse+0x39e>
    5af6:	c7 05 c0 bb 01 00 00 	movl   $0x0,0x1bbc0(%rip)        # 216c0 <yychar>
    5afd:	00 00 00
    5b00:	c7 85 54 d8 ff ff 00 	movl   $0x0,-0x27ac(%rbp)
    5b07:	00 00 00
    5b0a:	eb 60                	jmp    5b6c <yyparse+0x3fe>
    5b0c:	8b 05 ae bb 01 00    	mov    0x1bbae(%rip),%eax        # 216c0 <yychar>
    5b12:	3d 00 01 00 00       	cmp    $0x100,%eax
    5b17:	75 19                	jne    5b32 <yyparse+0x3c4>
    5b19:	c7 05 9d bb 01 00 01 	movl   $0x101,0x1bb9d(%rip)        # 216c0 <yychar>
    5b20:	01 00 00
    5b23:	c7 85 54 d8 ff ff 01 	movl   $0x1,-0x27ac(%rbp)
    5b2a:	00 00 00
    5b2d:	e9 a4 16 00 00       	jmp    71d6 <yyparse+0x1a68>
    5b32:	8b 05 88 bb 01 00    	mov    0x1bb88(%rip),%eax        # 216c0 <yychar>
    5b38:	85 c0                	test   %eax,%eax
    5b3a:	78 25                	js     5b61 <yyparse+0x3f3>
    5b3c:	8b 05 7e bb 01 00    	mov    0x1bb7e(%rip),%eax        # 216c0 <yychar>
    5b42:	3d 38 01 00 00       	cmp    $0x138,%eax
    5b47:	7f 18                	jg     5b61 <yyparse+0x3f3>
    5b49:	8b 05 71 bb 01 00    	mov    0x1bb71(%rip),%eax        # 216c0 <yychar>
    5b4f:	48 98                	cltq
    5b51:	48 8d 15 28 25 01 00 	lea    0x12528(%rip),%rdx        # 18080 <yytranslate>
    5b58:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    5b5c:	0f be c0             	movsbl %al,%eax
    5b5f:	eb 05                	jmp    5b66 <yyparse+0x3f8>
    5b61:	b8 02 00 00 00       	mov    $0x2,%eax
    5b66:	89 85 54 d8 ff ff    	mov    %eax,-0x27ac(%rbp)
    5b6c:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    5b72:	01 85 4c d8 ff ff    	add    %eax,-0x27b4(%rbp)
    5b78:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    5b7f:	0f 88 e4 00 00 00    	js     5c69 <yyparse+0x4fb>
    5b85:	81 bd 4c d8 ff ff af 	cmpl   $0xaf,-0x27b4(%rbp)
    5b8c:	00 00 00
    5b8f:	0f 8f d4 00 00 00    	jg     5c69 <yyparse+0x4fb>
    5b95:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    5b9b:	48 98                	cltq
    5b9d:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5ba1:	48 8d 05 38 2e 01 00 	lea    0x12e38(%rip),%rax        # 189e0 <yycheck>
    5ba8:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5bac:	98                   	cwtl
    5bad:	39 85 54 d8 ff ff    	cmp    %eax,-0x27ac(%rbp)
    5bb3:	0f 85 b0 00 00 00    	jne    5c69 <yyparse+0x4fb>
    5bb9:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    5bbf:	48 98                	cltq
    5bc1:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5bc5:	48 8d 05 b4 2c 01 00 	lea    0x12cb4(%rip),%rax        # 18880 <yytable>
    5bcc:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5bd0:	98                   	cwtl
    5bd1:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    5bd7:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    5bde:	7f 0b                	jg     5beb <yyparse+0x47d>
    5be0:	f7 9d 4c d8 ff ff    	negl   -0x27b4(%rbp)
    5be6:	e9 a9 00 00 00       	jmp    5c94 <yyparse+0x526>
    5beb:	83 bd 48 d8 ff ff 00 	cmpl   $0x0,-0x27b8(%rbp)
    5bf2:	74 07                	je     5bfb <yyparse+0x48d>
    5bf4:	83 ad 48 d8 ff ff 01 	subl   $0x1,-0x27b8(%rbp)
    5bfb:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    5c01:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    5c07:	48 83 85 98 d8 ff ff 	addq   $0x30,-0x2768(%rbp)
    5c0e:	30
    5c0f:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5c16:	48 8b 0d c3 ba 01 00 	mov    0x1bac3(%rip),%rcx        # 216e0 <yylval>
    5c1d:	48 8b 1d c4 ba 01 00 	mov    0x1bac4(%rip),%rbx        # 216e8 <yylval+0x8>
    5c24:	48 89 08             	mov    %rcx,(%rax)
    5c27:	48 89 58 08          	mov    %rbx,0x8(%rax)
    5c2b:	48 8b 0d be ba 01 00 	mov    0x1babe(%rip),%rcx        # 216f0 <yylval+0x10>
    5c32:	48 8b 1d bf ba 01 00 	mov    0x1babf(%rip),%rbx        # 216f8 <yylval+0x18>
    5c39:	48 89 48 10          	mov    %rcx,0x10(%rax)
    5c3d:	48 89 58 18          	mov    %rbx,0x18(%rax)
    5c41:	48 8b 0d b8 ba 01 00 	mov    0x1bab8(%rip),%rcx        # 21700 <yylval+0x20>
    5c48:	48 8b 1d b9 ba 01 00 	mov    0x1bab9(%rip),%rbx        # 21708 <yylval+0x28>
    5c4f:	48 89 48 20          	mov    %rcx,0x20(%rax)
    5c53:	48 89 58 28          	mov    %rbx,0x28(%rax)
    5c57:	c7 05 5f ba 01 00 fe 	movl   $0xfffffffe,0x1ba5f(%rip)        # 216c0 <yychar>
    5c5e:	ff ff ff
    5c61:	e9 cf fb ff ff       	jmp    5835 <yyparse+0xc7>
    5c66:	90                   	nop
    5c67:	eb 01                	jmp    5c6a <yyparse+0x4fc>
    5c69:	90                   	nop
    5c6a:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    5c70:	48 98                	cltq
    5c72:	48 8d 15 a7 2a 01 00 	lea    0x12aa7(%rip),%rdx        # 18720 <yydefact>
    5c79:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    5c7d:	0f be c0             	movsbl %al,%eax
    5c80:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    5c86:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    5c8d:	0f 84 5f 13 00 00    	je     6ff2 <yyparse+0x1884>
    5c93:	90                   	nop
    5c94:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    5c9a:	48 98                	cltq
    5c9c:	48 8d 15 bd 2f 01 00 	lea    0x12fbd(%rip),%rdx        # 18c60 <yyr2>
    5ca3:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    5ca7:	0f be c0             	movsbl %al,%eax
    5caa:	89 85 58 d8 ff ff    	mov    %eax,-0x27a8(%rbp)
    5cb0:	b8 01 00 00 00       	mov    $0x1,%eax
    5cb5:	2b 85 58 d8 ff ff    	sub    -0x27a8(%rbp),%eax
    5cbb:	48 63 d0             	movslq %eax,%rdx
    5cbe:	48 89 d0             	mov    %rdx,%rax
    5cc1:	48 01 c0             	add    %rax,%rax
    5cc4:	48 01 d0             	add    %rdx,%rax
    5cc7:	48 c1 e0 04          	shl    $0x4,%rax
    5ccb:	48 89 c2             	mov    %rax,%rdx
    5cce:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5cd5:	48 01 d0             	add    %rdx,%rax
    5cd8:	48 8b 08             	mov    (%rax),%rcx
    5cdb:	48 8b 58 08          	mov    0x8(%rax),%rbx
    5cdf:	48 89 8d f0 d8 ff ff 	mov    %rcx,-0x2710(%rbp)
    5ce6:	48 89 9d f8 d8 ff ff 	mov    %rbx,-0x2708(%rbp)
    5ced:	48 8b 48 10          	mov    0x10(%rax),%rcx
    5cf1:	48 8b 58 18          	mov    0x18(%rax),%rbx
    5cf5:	48 89 8d 00 d9 ff ff 	mov    %rcx,-0x2700(%rbp)
    5cfc:	48 89 9d 08 d9 ff ff 	mov    %rbx,-0x26f8(%rbp)
    5d03:	48 8b 50 28          	mov    0x28(%rax),%rdx
    5d07:	48 8b 40 20          	mov    0x20(%rax),%rax
    5d0b:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    5d12:	48 89 95 18 d9 ff ff 	mov    %rdx,-0x26e8(%rbp)
    5d19:	83 bd 4c d8 ff ff 58 	cmpl   $0x58,-0x27b4(%rbp)
    5d20:	0f 87 76 11 00 00    	ja     6e9c <yyparse+0x172e>
    5d26:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    5d2c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5d33:	00
    5d34:	48 8d 05 29 31 01 00 	lea    0x13129(%rip),%rax        # 18e64 <yyr2+0x204>
    5d3b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5d3e:	48 98                	cltq
    5d40:	48 8d 15 1d 31 01 00 	lea    0x1311d(%rip),%rdx        # 18e64 <yyr2+0x204>
    5d47:	48 01 d0             	add    %rdx,%rax
    5d4a:	3e ff e0             	notrack jmp *%rax
    5d4d:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5d54:	48 83 e8 30          	sub    $0x30,%rax
    5d58:	48 8b 00             	mov    (%rax),%rax
    5d5b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    5d62:	e9 36 11 00 00       	jmp    6e9d <yyparse+0x172f>
    5d67:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    5d6e:	00 00 00 00
    5d72:	e9 26 11 00 00       	jmp    6e9d <yyparse+0x172f>
    5d77:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5d7e:	48 83 e8 60          	sub    $0x60,%rax
    5d82:	48 8b 38             	mov    (%rax),%rdi
    5d85:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5d8c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    5d92:	4c 8b 08             	mov    (%rax),%r9
    5d95:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5d9c:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    5da2:	4c 8b 00             	mov    (%rax),%r8
    5da5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5dac:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    5db2:	48 8b 08             	mov    (%rax),%rcx
    5db5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5dbc:	48 2d 50 01 00 00    	sub    $0x150,%rax
    5dc2:	48 8b 10             	mov    (%rax),%rdx
    5dc5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5dcc:	48 2d 80 01 00 00    	sub    $0x180,%rax
    5dd2:	48 8b 30             	mov    (%rax),%rsi
    5dd5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5ddc:	48 2d 80 01 00 00    	sub    $0x180,%rax
    5de2:	8b 40 08             	mov    0x8(%rax),%eax
    5de5:	48 83 ec 08          	sub    $0x8,%rsp
    5de9:	57                   	push   %rdi
    5dea:	89 c7                	mov    %eax,%edi
    5dec:	e8 2f 37 00 00       	call   9520 <mk_program>
    5df1:	48 83 c4 10          	add    $0x10,%rsp
    5df5:	48 89 05 74 b2 01 00 	mov    %rax,0x1b274(%rip)        # 21070 <parse_tree>
    5dfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5e01:	e9 9e 16 00 00       	jmp    74a4 <yyparse+0x1d36>
    5e06:	48 8b 05 d3 b8 01 00 	mov    0x1b8d3(%rip),%rax        # 216e0 <yylval>
    5e0d:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    5e14:	8b 05 fa b1 01 00    	mov    0x1b1fa(%rip),%eax        # 21014 <line_num>
    5e1a:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    5e20:	e9 78 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e25:	8b 05 b5 b8 01 00    	mov    0x1b8b5(%rip),%eax        # 216e0 <yylval>
    5e2b:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    5e31:	e9 67 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e36:	f3 0f 10 05 a2 b8 01 	movss  0x1b8a2(%rip),%xmm0        # 216e0 <yylval>
    5e3d:	00
    5e3e:	f3 0f 11 85 f0 d8 ff 	movss  %xmm0,-0x2710(%rbp)
    5e45:	ff
    5e46:	e9 52 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e4b:	48 8b 05 8e b8 01 00 	mov    0x1b88e(%rip),%rax        # 216e0 <yylval>
    5e52:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    5e59:	e9 3f 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e5e:	8b 05 7c b8 01 00    	mov    0x1b87c(%rip),%eax        # 216e0 <yylval>
    5e64:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    5e6a:	e9 2e 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e6f:	8b 05 6b b8 01 00    	mov    0x1b86b(%rip),%eax        # 216e0 <yylval>
    5e75:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    5e7b:	e9 1d 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e80:	8b 05 5a b8 01 00    	mov    0x1b85a(%rip),%eax        # 216e0 <yylval>
    5e86:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    5e8c:	e9 0c 10 00 00       	jmp    6e9d <yyparse+0x172f>
    5e91:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5e98:	48 8b 00             	mov    (%rax),%rax
    5e9b:	be 03 00 00 00       	mov    $0x3,%esi
    5ea0:	48 89 c7             	mov    %rax,%rdi
    5ea3:	e8 9f 1b 00 00       	call   7a47 <CreateListNode>
    5ea8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    5eaf:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5eb6:	8b 40 08             	mov    0x8(%rax),%eax
    5eb9:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    5ebf:	e9 d9 0f 00 00       	jmp    6e9d <yyparse+0x172f>
    5ec4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5ecb:	48 8b 00             	mov    (%rax),%rax
    5ece:	be 03 00 00 00       	mov    $0x3,%esi
    5ed3:	48 89 c7             	mov    %rax,%rdi
    5ed6:	e8 6c 1b 00 00       	call   7a47 <CreateListNode>
    5edb:	48 89 c2             	mov    %rax,%rdx
    5ede:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5ee5:	48 83 e8 60          	sub    $0x60,%rax
    5ee9:	48 8b 00             	mov    (%rax),%rax
    5eec:	48 89 d6             	mov    %rdx,%rsi
    5eef:	48 89 c7             	mov    %rax,%rdi
    5ef2:	e8 1c 1c 00 00       	call   7b13 <PushListNodeBack>
    5ef7:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    5efe:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f05:	48 83 e8 60          	sub    $0x60,%rax
    5f09:	8b 40 08             	mov    0x8(%rax),%eax
    5f0c:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    5f12:	e9 86 0f 00 00       	jmp    6e9d <yyparse+0x172f>
    5f17:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f1e:	48 83 e8 30          	sub    $0x30,%rax
    5f22:	8b 00                	mov    (%rax),%eax
    5f24:	3d 11 01 00 00       	cmp    $0x111,%eax
    5f29:	75 5d                	jne    5f88 <yyparse+0x81a>
    5f2b:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f32:	48 83 e8 30          	sub    $0x30,%rax
    5f36:	8b 78 14             	mov    0x14(%rax),%edi
    5f39:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f40:	48 83 e8 30          	sub    $0x30,%rax
    5f44:	8b 48 10             	mov    0x10(%rax),%ecx
    5f47:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f4e:	48 83 e8 30          	sub    $0x30,%rax
    5f52:	8b 50 04             	mov    0x4(%rax),%edx
    5f55:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f5c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    5f62:	48 8b 30             	mov    (%rax),%rsi
    5f65:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f6c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    5f72:	8b 40 08             	mov    0x8(%rax),%eax
    5f75:	41 89 f8             	mov    %edi,%r8d
    5f78:	89 c7                	mov    %eax,%edi
    5f7a:	e8 52 38 00 00       	call   97d1 <mk_arraydecl>
    5f7f:	48 89 85 a0 d8 ff ff 	mov    %rax,-0x2760(%rbp)
    5f86:	eb 4b                	jmp    5fd3 <yyparse+0x865>
    5f88:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f8f:	48 83 e8 30          	sub    $0x30,%rax
    5f93:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5f97:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5f9e:	48 83 e8 30          	sub    $0x30,%rax
    5fa2:	8b 50 04             	mov    0x4(%rax),%edx
    5fa5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5fac:	48 2d 90 00 00 00    	sub    $0x90,%rax
    5fb2:	48 8b 30             	mov    (%rax),%rsi
    5fb5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5fbc:	48 2d 90 00 00 00    	sub    $0x90,%rax
    5fc2:	8b 40 08             	mov    0x8(%rax),%eax
    5fc5:	89 c7                	mov    %eax,%edi
    5fc7:	e8 a1 37 00 00       	call   976d <mk_vardecl>
    5fcc:	48 89 85 a0 d8 ff ff 	mov    %rax,-0x2760(%rbp)
    5fd3:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    5fda:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    5fe0:	48 8b 00             	mov    (%rax),%rax
    5fe3:	48 85 c0             	test   %rax,%rax
    5fe6:	75 20                	jne    6008 <yyparse+0x89a>
    5fe8:	48 8b 85 a0 d8 ff ff 	mov    -0x2760(%rbp),%rax
    5fef:	be 00 00 00 00       	mov    $0x0,%esi
    5ff4:	48 89 c7             	mov    %rax,%rdi
    5ff7:	e8 4b 1a 00 00       	call   7a47 <CreateListNode>
    5ffc:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6003:	e9 95 0e 00 00       	jmp    6e9d <yyparse+0x172f>
    6008:	48 8b 85 a0 d8 ff ff 	mov    -0x2760(%rbp),%rax
    600f:	be 00 00 00 00       	mov    $0x0,%esi
    6014:	48 89 c7             	mov    %rax,%rdi
    6017:	e8 2b 1a 00 00       	call   7a47 <CreateListNode>
    601c:	48 89 c2             	mov    %rax,%rdx
    601f:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6026:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    602c:	48 8b 00             	mov    (%rax),%rax
    602f:	48 89 d6             	mov    %rdx,%rsi
    6032:	48 89 c7             	mov    %rax,%rdi
    6035:	e8 d9 1a 00 00       	call   7b13 <PushListNodeBack>
    603a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6041:	e9 57 0e 00 00       	jmp    6e9d <yyparse+0x172f>
    6046:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    604d:	00 00 00 00
    6051:	e9 47 0e 00 00       	jmp    6e9d <yyparse+0x172f>
    6056:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    605d:	48 8b 00             	mov    (%rax),%rax
    6060:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6067:	e9 31 0e 00 00       	jmp    6e9d <yyparse+0x172f>
    606c:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    6073:	00 00 00 00
    6077:	e9 21 0e 00 00       	jmp    6e9d <yyparse+0x172f>
    607c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6083:	48 8b 00             	mov    (%rax),%rax
    6086:	be 00 00 00 00       	mov    $0x0,%esi
    608b:	48 89 c7             	mov    %rax,%rdi
    608e:	e8 b4 19 00 00       	call   7a47 <CreateListNode>
    6093:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    609a:	e9 fe 0d 00 00       	jmp    6e9d <yyparse+0x172f>
    609f:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    60a6:	48 8b 00             	mov    (%rax),%rax
    60a9:	be 00 00 00 00       	mov    $0x0,%esi
    60ae:	48 89 c7             	mov    %rax,%rdi
    60b1:	e8 91 19 00 00       	call   7a47 <CreateListNode>
    60b6:	48 89 c2             	mov    %rax,%rdx
    60b9:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    60c0:	48 83 e8 30          	sub    $0x30,%rax
    60c4:	48 8b 00             	mov    (%rax),%rax
    60c7:	48 89 d6             	mov    %rdx,%rsi
    60ca:	48 89 c7             	mov    %rax,%rdi
    60cd:	e8 41 1a 00 00       	call   7b13 <PushListNodeBack>
    60d2:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    60d9:	e9 bf 0d 00 00       	jmp    6e9d <yyparse+0x172f>
    60de:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    60e5:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    60eb:	8b 00                	mov    (%rax),%eax
    60ed:	3d 25 01 00 00       	cmp    $0x125,%eax
    60f2:	74 0f                	je     6103 <yyparse+0x995>
    60f4:	48 8d 05 e5 2c 01 00 	lea    0x12ce5(%rip),%rax        # 18de0 <yyr2+0x180>
    60fb:	48 89 c7             	mov    %rax,%rdi
    60fe:	e8 bb 13 00 00       	call   74be <yyerror>
    6103:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    610a:	48 83 e8 30          	sub    $0x30,%rax
    610e:	8b 08                	mov    (%rax),%ecx
    6110:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6117:	48 2d 90 00 00 00    	sub    $0x90,%rax
    611d:	8b 10                	mov    (%rax),%edx
    611f:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6126:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    612c:	48 8b 30             	mov    (%rax),%rsi
    612f:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6136:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    613c:	8b 40 08             	mov    0x8(%rax),%eax
    613f:	89 c7                	mov    %eax,%edi
    6141:	e8 6d 34 00 00       	call   95b3 <mk_typedecl>
    6146:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    614d:	e9 4b 0d 00 00       	jmp    6e9d <yyparse+0x172f>
    6152:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6159:	8b 00                	mov    (%rax),%eax
    615b:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    6161:	e9 37 0d 00 00       	jmp    6e9d <yyparse+0x172f>
    6166:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    616d:	48 83 e8 30          	sub    $0x30,%rax
    6171:	8b 00                	mov    (%rax),%eax
    6173:	3d 2d 01 00 00       	cmp    $0x12d,%eax
    6178:	75 16                	jne    6190 <yyparse+0xa22>
    617a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6181:	8b 00                	mov    (%rax),%eax
    6183:	f7 d8                	neg    %eax
    6185:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    618b:	e9 0d 0d 00 00       	jmp    6e9d <yyparse+0x172f>
    6190:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6197:	8b 00                	mov    (%rax),%eax
    6199:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    619f:	e9 f9 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    61a4:	c7 85 f0 d8 ff ff 16 	movl   $0x116,-0x2710(%rbp)
    61ab:	01 00 00
    61ae:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    61b5:	8b 00                	mov    (%rax),%eax
    61b7:	89 85 f4 d8 ff ff    	mov    %eax,-0x270c(%rbp)
    61bd:	48 c7 85 f8 d8 ff ff 	movq   $0x0,-0x2708(%rbp)
    61c4:	00 00 00 00
    61c8:	e9 d0 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    61cd:	c7 85 f0 d8 ff ff 11 	movl   $0x111,-0x2710(%rbp)
    61d4:	01 00 00
    61d7:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    61de:	8b 00                	mov    (%rax),%eax
    61e0:	89 85 f4 d8 ff ff    	mov    %eax,-0x270c(%rbp)
    61e6:	48 c7 85 f8 d8 ff ff 	movq   $0x0,-0x2708(%rbp)
    61ed:	00 00 00 00
    61f1:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    61f8:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    61fe:	8b 00                	mov    (%rax),%eax
    6200:	89 85 00 d9 ff ff    	mov    %eax,-0x2700(%rbp)
    6206:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    620d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6213:	8b 00                	mov    (%rax),%eax
    6215:	89 85 04 d9 ff ff    	mov    %eax,-0x26fc(%rbp)
    621b:	e9 7d 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    6220:	c7 85 f0 d8 ff ff 0f 	movl   $0x10f,-0x2710(%rbp)
    6227:	01 00 00
    622a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6231:	48 8b 00             	mov    (%rax),%rax
    6234:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    623b:	c7 85 f4 d8 ff ff ff 	movl   $0xffffffff,-0x270c(%rbp)
    6242:	ff ff ff
    6245:	e9 53 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    624a:	c7 85 f0 d8 ff ff 0a 	movl   $0x10a,-0x2710(%rbp)
    6251:	01 00 00
    6254:	e9 44 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    6259:	c7 85 f0 d8 ff ff 0b 	movl   $0x10b,-0x2710(%rbp)
    6260:	01 00 00
    6263:	e9 35 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    6268:	c7 85 f0 d8 ff ff 0c 	movl   $0x10c,-0x2710(%rbp)
    626f:	01 00 00
    6272:	e9 26 0c 00 00       	jmp    6e9d <yyparse+0x172f>
    6277:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    627e:	48 83 e8 60          	sub    $0x60,%rax
    6282:	48 8b 00             	mov    (%rax),%rax
    6285:	48 85 c0             	test   %rax,%rax
    6288:	75 27                	jne    62b1 <yyparse+0xb43>
    628a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6291:	48 83 e8 30          	sub    $0x30,%rax
    6295:	48 8b 00             	mov    (%rax),%rax
    6298:	be 00 00 00 00       	mov    $0x0,%esi
    629d:	48 89 c7             	mov    %rax,%rdi
    62a0:	e8 a2 17 00 00       	call   7a47 <CreateListNode>
    62a5:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    62ac:	e9 ec 0b 00 00       	jmp    6e9d <yyparse+0x172f>
    62b1:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    62b8:	48 83 e8 30          	sub    $0x30,%rax
    62bc:	48 8b 00             	mov    (%rax),%rax
    62bf:	be 00 00 00 00       	mov    $0x0,%esi
    62c4:	48 89 c7             	mov    %rax,%rdi
    62c7:	e8 7b 17 00 00       	call   7a47 <CreateListNode>
    62cc:	48 89 c2             	mov    %rax,%rdx
    62cf:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    62d6:	48 83 e8 60          	sub    $0x60,%rax
    62da:	48 8b 00             	mov    (%rax),%rax
    62dd:	48 89 d6             	mov    %rdx,%rsi
    62e0:	48 89 c7             	mov    %rax,%rdi
    62e3:	e8 2b 18 00 00       	call   7b13 <PushListNodeBack>
    62e8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    62ef:	e9 a9 0b 00 00       	jmp    6e9d <yyparse+0x172f>
    62f4:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    62fb:	00 00 00 00
    62ff:	e9 99 0b 00 00       	jmp    6e9d <yyparse+0x172f>
    6304:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    630b:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6311:	8b 00                	mov    (%rax),%eax
    6313:	3d 04 01 00 00       	cmp    $0x104,%eax
    6318:	0f 85 84 00 00 00    	jne    63a2 <yyparse+0xc34>
    631e:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6325:	48 2d 90 00 00 00    	sub    $0x90,%rax
    632b:	8b 78 28             	mov    0x28(%rax),%edi
    632e:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6335:	4c 8b 08             	mov    (%rax),%r9
    6338:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    633f:	48 83 e8 30          	sub    $0x30,%rax
    6343:	4c 8b 00             	mov    (%rax),%r8
    6346:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    634d:	48 83 e8 60          	sub    $0x60,%rax
    6351:	48 8b 08             	mov    (%rax),%rcx
    6354:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    635b:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6361:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6365:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    636c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6372:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6376:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    637d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6383:	8b 40 18             	mov    0x18(%rax),%eax
    6386:	48 83 ec 08          	sub    $0x8,%rsp
    638a:	57                   	push   %rdi
    638b:	89 c7                	mov    %eax,%edi
    638d:	e8 82 32 00 00       	call   9614 <mk_procedure>
    6392:	48 83 c4 10          	add    $0x10,%rsp
    6396:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    639d:	e9 fb 0a 00 00       	jmp    6e9d <yyparse+0x172f>
    63a2:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    63a9:	48 2d 90 00 00 00    	sub    $0x90,%rax
    63af:	44 8b 48 28          	mov    0x28(%rax),%r9d
    63b3:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    63ba:	48 2d 90 00 00 00    	sub    $0x90,%rax
    63c0:	4c 8b 40 20          	mov    0x20(%rax),%r8
    63c4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    63cb:	48 2d 90 00 00 00    	sub    $0x90,%rax
    63d1:	8b 78 1c             	mov    0x1c(%rax),%edi
    63d4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    63db:	4c 8b 18             	mov    (%rax),%r11
    63de:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    63e5:	48 83 e8 30          	sub    $0x30,%rax
    63e9:	4c 8b 10             	mov    (%rax),%r10
    63ec:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    63f3:	48 83 e8 60          	sub    $0x60,%rax
    63f7:	48 8b 08             	mov    (%rax),%rcx
    63fa:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6401:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6407:	48 8b 50 10          	mov    0x10(%rax),%rdx
    640b:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6412:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6418:	48 8b 70 08          	mov    0x8(%rax),%rsi
    641c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6423:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6429:	8b 40 18             	mov    0x18(%rax),%eax
    642c:	48 83 ec 08          	sub    $0x8,%rsp
    6430:	41 51                	push   %r9
    6432:	41 50                	push   %r8
    6434:	57                   	push   %rdi
    6435:	4d 89 d9             	mov    %r11,%r9
    6438:	4d 89 d0             	mov    %r10,%r8
    643b:	89 c7                	mov    %eax,%edi
    643d:	e8 79 32 00 00       	call   96bb <mk_function>
    6442:	48 83 c4 20          	add    $0x20,%rsp
    6446:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    644d:	e9 4b 0a 00 00       	jmp    6e9d <yyparse+0x172f>
    6452:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    6459:	01 00 00
    645c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6463:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    6469:	48 8b 00             	mov    (%rax),%rax
    646c:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    6473:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    647a:	48 83 e8 60          	sub    $0x60,%rax
    647e:	8b 00                	mov    (%rax),%eax
    6480:	3d 0f 01 00 00       	cmp    $0x10f,%eax
    6485:	75 22                	jne    64a9 <yyparse+0xd3b>
    6487:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    648e:	ff ff ff
    6491:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6498:	48 83 e8 60          	sub    $0x60,%rax
    649c:	48 8b 40 08          	mov    0x8(%rax),%rax
    64a0:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    64a7:	eb 1f                	jmp    64c8 <yyparse+0xd5a>
    64a9:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    64b0:	48 83 e8 60          	sub    $0x60,%rax
    64b4:	8b 40 04             	mov    0x4(%rax),%eax
    64b7:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    64bd:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    64c4:	00 00 00 00
    64c8:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    64cf:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    64d5:	48 8b 00             	mov    (%rax),%rax
    64d8:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    64df:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    64e6:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    64ec:	8b 40 08             	mov    0x8(%rax),%eax
    64ef:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    64f5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    64fc:	8b 00                	mov    (%rax),%eax
    64fe:	89 85 18 d9 ff ff    	mov    %eax,-0x26e8(%rbp)
    6504:	e9 94 09 00 00       	jmp    6e9d <yyparse+0x172f>
    6509:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    6510:	01 00 00
    6513:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    651a:	48 83 e8 60          	sub    $0x60,%rax
    651e:	48 8b 00             	mov    (%rax),%rax
    6521:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    6528:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    652f:	ff ff ff
    6532:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    6539:	00 00 00 00
    653d:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6544:	48 2d 90 00 00 00    	sub    $0x90,%rax
    654a:	48 8b 00             	mov    (%rax),%rax
    654d:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    6554:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    655b:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6561:	8b 40 08             	mov    0x8(%rax),%eax
    6564:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    656a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6571:	8b 00                	mov    (%rax),%eax
    6573:	89 85 18 d9 ff ff    	mov    %eax,-0x26e8(%rbp)
    6579:	e9 1f 09 00 00       	jmp    6e9d <yyparse+0x172f>
    657e:	c7 85 f0 d8 ff ff 01 	movl   $0x1,-0x2710(%rbp)
    6585:	00 00 00
    6588:	e9 10 09 00 00       	jmp    6e9d <yyparse+0x172f>
    658d:	c7 85 f0 d8 ff ff 00 	movl   $0x0,-0x2710(%rbp)
    6594:	00 00 00
    6597:	e9 01 09 00 00       	jmp    6e9d <yyparse+0x172f>
    659c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    65a3:	48 83 e8 30          	sub    $0x30,%rax
    65a7:	48 8b 00             	mov    (%rax),%rax
    65aa:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    65b1:	e9 e7 08 00 00       	jmp    6e9d <yyparse+0x172f>
    65b6:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    65bd:	00 00 00 00
    65c1:	e9 d7 08 00 00       	jmp    6e9d <yyparse+0x172f>
    65c6:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    65cd:	48 8b 00             	mov    (%rax),%rax
    65d0:	be 00 00 00 00       	mov    $0x0,%esi
    65d5:	48 89 c7             	mov    %rax,%rdi
    65d8:	e8 6a 14 00 00       	call   7a47 <CreateListNode>
    65dd:	48 89 c2             	mov    %rax,%rdx
    65e0:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    65e7:	48 83 e8 60          	sub    $0x60,%rax
    65eb:	48 8b 00             	mov    (%rax),%rax
    65ee:	48 89 d6             	mov    %rdx,%rsi
    65f1:	48 89 c7             	mov    %rax,%rdi
    65f4:	e8 1a 15 00 00       	call   7b13 <PushListNodeBack>
    65f9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6600:	e9 98 08 00 00       	jmp    6e9d <yyparse+0x172f>
    6605:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    660c:	48 8b 00             	mov    (%rax),%rax
    660f:	be 00 00 00 00       	mov    $0x0,%esi
    6614:	48 89 c7             	mov    %rax,%rdi
    6617:	e8 2b 14 00 00       	call   7a47 <CreateListNode>
    661c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6623:	e9 75 08 00 00       	jmp    6e9d <yyparse+0x172f>
    6628:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    662f:	8b 00                	mov    (%rax),%eax
    6631:	3d 11 01 00 00       	cmp    $0x111,%eax
    6636:	75 4d                	jne    6685 <yyparse+0xf17>
    6638:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    663f:	8b 78 14             	mov    0x14(%rax),%edi
    6642:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6649:	8b 48 10             	mov    0x10(%rax),%ecx
    664c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6653:	8b 50 04             	mov    0x4(%rax),%edx
    6656:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    665d:	48 83 e8 60          	sub    $0x60,%rax
    6661:	48 8b 30             	mov    (%rax),%rsi
    6664:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    666b:	48 83 e8 60          	sub    $0x60,%rax
    666f:	8b 40 08             	mov    0x8(%rax),%eax
    6672:	41 89 f8             	mov    %edi,%r8d
    6675:	89 c7                	mov    %eax,%edi
    6677:	e8 55 31 00 00       	call   97d1 <mk_arraydecl>
    667c:	48 89 85 a8 d8 ff ff 	mov    %rax,-0x2758(%rbp)
    6683:	eb 3f                	jmp    66c4 <yyparse+0xf56>
    6685:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    668c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6690:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6697:	8b 50 04             	mov    0x4(%rax),%edx
    669a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    66a1:	48 83 e8 60          	sub    $0x60,%rax
    66a5:	48 8b 30             	mov    (%rax),%rsi
    66a8:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    66af:	48 83 e8 60          	sub    $0x60,%rax
    66b3:	8b 40 08             	mov    0x8(%rax),%eax
    66b6:	89 c7                	mov    %eax,%edi
    66b8:	e8 b0 30 00 00       	call   976d <mk_vardecl>
    66bd:	48 89 85 a8 d8 ff ff 	mov    %rax,-0x2758(%rbp)
    66c4:	48 8b 85 a8 d8 ff ff 	mov    -0x2758(%rbp),%rax
    66cb:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    66d2:	e9 c6 07 00 00       	jmp    6e9d <yyparse+0x172f>
    66d7:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    66de:	48 83 e8 30          	sub    $0x30,%rax
    66e2:	48 8b 10             	mov    (%rax),%rdx
    66e5:	8b 05 29 a9 01 00    	mov    0x1a929(%rip),%eax        # 21014 <line_num>
    66eb:	48 89 d6             	mov    %rdx,%rsi
    66ee:	89 c7                	mov    %eax,%edi
    66f0:	e8 f9 31 00 00       	call   98ee <mk_compoundstatement>
    66f5:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    66fc:	e9 9c 07 00 00       	jmp    6e9d <yyparse+0x172f>
    6701:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6708:	48 8b 10             	mov    (%rax),%rdx
    670b:	8b 05 03 a9 01 00    	mov    0x1a903(%rip),%eax        # 21014 <line_num>
    6711:	48 89 d6             	mov    %rdx,%rsi
    6714:	89 c7                	mov    %eax,%edi
    6716:	e8 bc 33 00 00       	call   9ad7 <mk_asmblock>
    671b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6722:	e9 76 07 00 00       	jmp    6e9d <yyparse+0x172f>
    6727:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    672e:	00 00 00 00
    6732:	e9 66 07 00 00       	jmp    6e9d <yyparse+0x172f>
    6737:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    673e:	48 8b 00             	mov    (%rax),%rax
    6741:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6748:	e9 50 07 00 00       	jmp    6e9d <yyparse+0x172f>
    674d:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6754:	48 83 e8 30          	sub    $0x30,%rax
    6758:	48 8b 00             	mov    (%rax),%rax
    675b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6762:	e9 36 07 00 00       	jmp    6e9d <yyparse+0x172f>
    6767:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    676e:	48 8b 00             	mov    (%rax),%rax
    6771:	be 01 00 00 00       	mov    $0x1,%esi
    6776:	48 89 c7             	mov    %rax,%rdi
    6779:	e8 c9 12 00 00       	call   7a47 <CreateListNode>
    677e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6785:	e9 13 07 00 00       	jmp    6e9d <yyparse+0x172f>
    678a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6791:	48 8b 00             	mov    (%rax),%rax
    6794:	be 01 00 00 00       	mov    $0x1,%esi
    6799:	48 89 c7             	mov    %rax,%rdi
    679c:	e8 a6 12 00 00       	call   7a47 <CreateListNode>
    67a1:	48 89 c2             	mov    %rax,%rdx
    67a4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    67ab:	48 83 e8 60          	sub    $0x60,%rax
    67af:	48 8b 00             	mov    (%rax),%rax
    67b2:	48 89 d6             	mov    %rdx,%rsi
    67b5:	48 89 c7             	mov    %rax,%rdi
    67b8:	e8 56 13 00 00       	call   7b13 <PushListNodeBack>
    67bd:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    67c4:	e9 d4 06 00 00       	jmp    6e9d <yyparse+0x172f>
    67c9:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    67d0:	48 8b 00             	mov    (%rax),%rax
    67d3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    67da:	e9 be 06 00 00       	jmp    6e9d <yyparse+0x172f>
    67df:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    67e6:	48 8b 00             	mov    (%rax),%rax
    67e9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    67f0:	e9 a8 06 00 00       	jmp    6e9d <yyparse+0x172f>
    67f5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    67fc:	48 8b 00             	mov    (%rax),%rax
    67ff:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6806:	e9 92 06 00 00       	jmp    6e9d <yyparse+0x172f>
    680b:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6812:	48 8b 00             	mov    (%rax),%rax
    6815:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    681c:	e9 7c 06 00 00       	jmp    6e9d <yyparse+0x172f>
    6821:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6828:	48 8b 10             	mov    (%rax),%rdx
    682b:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6832:	48 83 e8 60          	sub    $0x60,%rax
    6836:	48 8b 08             	mov    (%rax),%rcx
    6839:	8b 05 d5 a7 01 00    	mov    0x1a7d5(%rip),%eax        # 21014 <line_num>
    683f:	48 89 ce             	mov    %rcx,%rsi
    6842:	89 c7                	mov    %eax,%edi
    6844:	e8 53 31 00 00       	call   999c <mk_while>
    6849:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6850:	e9 48 06 00 00       	jmp    6e9d <yyparse+0x172f>
    6855:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    685c:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    6862:	8b 00                	mov    (%rax),%eax
    6864:	3d 34 01 00 00       	cmp    $0x134,%eax
    6869:	75 42                	jne    68ad <yyparse+0x113f>
    686b:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6872:	48 8b 08             	mov    (%rax),%rcx
    6875:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    687c:	48 83 e8 60          	sub    $0x60,%rax
    6880:	48 8b 10             	mov    (%rax),%rdx
    6883:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    688a:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    6890:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6894:	8b 05 7a a7 01 00    	mov    0x1a77a(%rip),%eax        # 21014 <line_num>
    689a:	89 c7                	mov    %eax,%edi
    689c:	e8 52 31 00 00       	call   99f3 <mk_forassign>
    68a1:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    68a8:	e9 f0 05 00 00       	jmp    6e9d <yyparse+0x172f>
    68ad:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    68b4:	48 8b 08             	mov    (%rax),%rcx
    68b7:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    68be:	48 83 e8 60          	sub    $0x60,%rax
    68c2:	48 8b 10             	mov    (%rax),%rdx
    68c5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    68cc:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    68d2:	48 8b 70 08          	mov    0x8(%rax),%rsi
    68d6:	8b 05 38 a7 01 00    	mov    0x1a738(%rip),%eax        # 21014 <line_num>
    68dc:	89 c7                	mov    %eax,%edi
    68de:	e8 82 31 00 00       	call   9a65 <mk_forvar>
    68e3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    68ea:	e9 ae 05 00 00       	jmp    6e9d <yyparse+0x172f>
    68ef:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    68f6:	48 8b 10             	mov    (%rax),%rdx
    68f9:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6900:	48 83 e8 60          	sub    $0x60,%rax
    6904:	48 8b 30             	mov    (%rax),%rsi
    6907:	8b 05 07 a7 01 00    	mov    0x1a707(%rip),%eax        # 21014 <line_num>
    690d:	b9 00 00 00 00       	mov    $0x0,%ecx
    6912:	89 c7                	mov    %eax,%edi
    6914:	e8 1c 30 00 00       	call   9935 <mk_ifthen>
    6919:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6920:	e9 78 05 00 00       	jmp    6e9d <yyparse+0x172f>
    6925:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    692c:	48 8b 08             	mov    (%rax),%rcx
    692f:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6936:	48 83 e8 60          	sub    $0x60,%rax
    693a:	48 8b 10             	mov    (%rax),%rdx
    693d:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6944:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    694a:	48 8b 30             	mov    (%rax),%rsi
    694d:	8b 05 c1 a6 01 00    	mov    0x1a6c1(%rip),%eax        # 21014 <line_num>
    6953:	89 c7                	mov    %eax,%edi
    6955:	e8 db 2f 00 00       	call   9935 <mk_ifthen>
    695a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6961:	e9 37 05 00 00       	jmp    6e9d <yyparse+0x172f>
    6966:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    696d:	48 8b 10             	mov    (%rax),%rdx
    6970:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6977:	48 83 e8 60          	sub    $0x60,%rax
    697b:	48 8b 08             	mov    (%rax),%rcx
    697e:	8b 05 90 a6 01 00    	mov    0x1a690(%rip),%eax        # 21014 <line_num>
    6984:	48 89 ce             	mov    %rcx,%rsi
    6987:	89 c7                	mov    %eax,%edi
    6989:	e8 b2 2e 00 00       	call   9840 <mk_varassign>
    698e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6995:	e9 03 05 00 00       	jmp    6e9d <yyparse+0x172f>
    699a:	c7 85 f0 d8 ff ff 34 	movl   $0x134,-0x2710(%rbp)
    69a1:	01 00 00
    69a4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    69ab:	48 8b 00             	mov    (%rax),%rax
    69ae:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    69b5:	e9 e3 04 00 00       	jmp    6e9d <yyparse+0x172f>
    69ba:	c7 85 f0 d8 ff ff 35 	movl   $0x135,-0x2710(%rbp)
    69c1:	01 00 00
    69c4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    69cb:	48 8b 00             	mov    (%rax),%rax
    69ce:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    69d5:	e9 c3 04 00 00       	jmp    6e9d <yyparse+0x172f>
    69da:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    69e1:	48 8b 10             	mov    (%rax),%rdx
    69e4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    69eb:	8b 40 08             	mov    0x8(%rax),%eax
    69ee:	48 89 d6             	mov    %rdx,%rsi
    69f1:	89 c7                	mov    %eax,%edi
    69f3:	e8 99 32 00 00       	call   9c91 <mk_varid>
    69f8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    69ff:	e9 99 04 00 00       	jmp    6e9d <yyparse+0x172f>
    6a04:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a0b:	48 83 e8 30          	sub    $0x30,%rax
    6a0f:	48 8b 10             	mov    (%rax),%rdx
    6a12:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a19:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6a1f:	48 8b 08             	mov    (%rax),%rcx
    6a22:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a29:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6a2f:	8b 40 08             	mov    0x8(%rax),%eax
    6a32:	48 89 ce             	mov    %rcx,%rsi
    6a35:	89 c7                	mov    %eax,%edi
    6a37:	e8 9c 32 00 00       	call   9cd8 <mk_arrayaccess>
    6a3c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6a43:	e9 55 04 00 00       	jmp    6e9d <yyparse+0x172f>
    6a48:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a4f:	48 8b 08             	mov    (%rax),%rcx
    6a52:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a59:	8b 40 08             	mov    0x8(%rax),%eax
    6a5c:	ba 00 00 00 00       	mov    $0x0,%edx
    6a61:	48 89 ce             	mov    %rcx,%rsi
    6a64:	89 c7                	mov    %eax,%edi
    6a66:	e8 2c 2e 00 00       	call   9897 <mk_procedurecall>
    6a6b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6a72:	e9 26 04 00 00       	jmp    6e9d <yyparse+0x172f>
    6a77:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a7e:	48 83 e8 30          	sub    $0x30,%rax
    6a82:	48 8b 10             	mov    (%rax),%rdx
    6a85:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a8c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6a92:	48 8b 08             	mov    (%rax),%rcx
    6a95:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6a9c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6aa2:	8b 40 08             	mov    0x8(%rax),%eax
    6aa5:	48 89 ce             	mov    %rcx,%rsi
    6aa8:	89 c7                	mov    %eax,%edi
    6aaa:	e8 e8 2d 00 00       	call   9897 <mk_procedurecall>
    6aaf:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6ab6:	e9 e2 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6abb:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6ac2:	48 8b 08             	mov    (%rax),%rcx
    6ac5:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6acc:	48 83 e8 60          	sub    $0x60,%rax
    6ad0:	48 8b 10             	mov    (%rax),%rdx
    6ad3:	8b 05 3b a5 01 00    	mov    0x1a53b(%rip),%eax        # 21014 <line_num>
    6ad9:	be 2e 01 00 00       	mov    $0x12e,%esi
    6ade:	89 c7                	mov    %eax,%edi
    6ae0:	e8 39 30 00 00       	call   9b1e <mk_relop>
    6ae5:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6aec:	e9 ac 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6af1:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6af8:	48 8b 00             	mov    (%rax),%rax
    6afb:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6b02:	e9 96 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6b07:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6b0e:	48 8b 08             	mov    (%rax),%rcx
    6b11:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6b18:	48 83 e8 60          	sub    $0x60,%rax
    6b1c:	48 8b 10             	mov    (%rax),%rdx
    6b1f:	8b 05 ef a4 01 00    	mov    0x1a4ef(%rip),%eax        # 21014 <line_num>
    6b25:	be 32 01 00 00       	mov    $0x132,%esi
    6b2a:	89 c7                	mov    %eax,%edi
    6b2c:	e8 ed 2f 00 00       	call   9b1e <mk_relop>
    6b31:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6b38:	e9 60 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6b3d:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6b44:	48 8b 00             	mov    (%rax),%rax
    6b47:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6b4e:	e9 4a 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6b53:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6b5a:	48 8b 10             	mov    (%rax),%rdx
    6b5d:	8b 05 b1 a4 01 00    	mov    0x1a4b1(%rip),%eax        # 21014 <line_num>
    6b63:	b9 00 00 00 00       	mov    $0x0,%ecx
    6b68:	be 1e 01 00 00       	mov    $0x11e,%esi
    6b6d:	89 c7                	mov    %eax,%edi
    6b6f:	e8 aa 2f 00 00       	call   9b1e <mk_relop>
    6b74:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6b7b:	e9 1d 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6b80:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6b87:	48 8b 00             	mov    (%rax),%rax
    6b8a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6b91:	e9 07 03 00 00       	jmp    6e9d <yyparse+0x172f>
    6b96:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6b9d:	48 83 e8 30          	sub    $0x30,%rax
    6ba1:	48 8b 00             	mov    (%rax),%rax
    6ba4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6bab:	e9 ed 02 00 00       	jmp    6e9d <yyparse+0x172f>
    6bb0:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6bb7:	48 8b 00             	mov    (%rax),%rax
    6bba:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6bc1:	e9 d7 02 00 00       	jmp    6e9d <yyparse+0x172f>
    6bc6:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6bcd:	48 8b 08             	mov    (%rax),%rcx
    6bd0:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6bd7:	48 83 e8 60          	sub    $0x60,%rax
    6bdb:	48 8b 10             	mov    (%rax),%rdx
    6bde:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6be5:	48 83 e8 30          	sub    $0x30,%rax
    6be9:	8b 30                	mov    (%rax),%esi
    6beb:	8b 05 23 a4 01 00    	mov    0x1a423(%rip),%eax        # 21014 <line_num>
    6bf1:	89 c7                	mov    %eax,%edi
    6bf3:	e8 26 2f 00 00       	call   9b1e <mk_relop>
    6bf8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6bff:	e9 99 02 00 00       	jmp    6e9d <yyparse+0x172f>
    6c04:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c0b:	48 8b 00             	mov    (%rax),%rax
    6c0e:	be 02 00 00 00       	mov    $0x2,%esi
    6c13:	48 89 c7             	mov    %rax,%rdi
    6c16:	e8 2c 0e 00 00       	call   7a47 <CreateListNode>
    6c1b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6c22:	e9 76 02 00 00       	jmp    6e9d <yyparse+0x172f>
    6c27:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c2e:	48 8b 00             	mov    (%rax),%rax
    6c31:	be 02 00 00 00       	mov    $0x2,%esi
    6c36:	48 89 c7             	mov    %rax,%rdi
    6c39:	e8 09 0e 00 00       	call   7a47 <CreateListNode>
    6c3e:	48 89 c2             	mov    %rax,%rdx
    6c41:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c48:	48 83 e8 60          	sub    $0x60,%rax
    6c4c:	48 8b 00             	mov    (%rax),%rax
    6c4f:	48 89 d6             	mov    %rdx,%rsi
    6c52:	48 89 c7             	mov    %rax,%rdi
    6c55:	e8 b9 0e 00 00       	call   7b13 <PushListNodeBack>
    6c5a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6c61:	e9 37 02 00 00       	jmp    6e9d <yyparse+0x172f>
    6c66:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c6d:	48 8b 00             	mov    (%rax),%rax
    6c70:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6c77:	e9 21 02 00 00       	jmp    6e9d <yyparse+0x172f>
    6c7c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c83:	48 8b 08             	mov    (%rax),%rcx
    6c86:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c8d:	48 83 e8 60          	sub    $0x60,%rax
    6c91:	48 8b 10             	mov    (%rax),%rdx
    6c94:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6c9b:	48 83 e8 30          	sub    $0x30,%rax
    6c9f:	8b 30                	mov    (%rax),%esi
    6ca1:	8b 05 6d a3 01 00    	mov    0x1a36d(%rip),%eax        # 21014 <line_num>
    6ca7:	89 c7                	mov    %eax,%edi
    6ca9:	e8 1b 2f 00 00       	call   9bc9 <mk_addop>
    6cae:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6cb5:	e9 e3 01 00 00       	jmp    6e9d <yyparse+0x172f>
    6cba:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6cc1:	48 8b 00             	mov    (%rax),%rax
    6cc4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6ccb:	e9 cd 01 00 00       	jmp    6e9d <yyparse+0x172f>
    6cd0:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6cd7:	48 8b 08             	mov    (%rax),%rcx
    6cda:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6ce1:	48 83 e8 60          	sub    $0x60,%rax
    6ce5:	48 8b 10             	mov    (%rax),%rdx
    6ce8:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6cef:	48 83 e8 30          	sub    $0x30,%rax
    6cf3:	8b 30                	mov    (%rax),%esi
    6cf5:	8b 05 19 a3 01 00    	mov    0x1a319(%rip),%eax        # 21014 <line_num>
    6cfb:	89 c7                	mov    %eax,%edi
    6cfd:	e8 2b 2f 00 00       	call   9c2d <mk_mulop>
    6d02:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6d09:	e9 8f 01 00 00       	jmp    6e9d <yyparse+0x172f>
    6d0e:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d15:	48 8b 10             	mov    (%rax),%rdx
    6d18:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d1f:	8b 40 08             	mov    0x8(%rax),%eax
    6d22:	48 89 d6             	mov    %rdx,%rsi
    6d25:	89 c7                	mov    %eax,%edi
    6d27:	e8 65 2f 00 00       	call   9c91 <mk_varid>
    6d2c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6d33:	e9 65 01 00 00       	jmp    6e9d <yyparse+0x172f>
    6d38:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d3f:	48 83 e8 30          	sub    $0x30,%rax
    6d43:	48 8b 10             	mov    (%rax),%rdx
    6d46:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d4d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6d53:	48 8b 08             	mov    (%rax),%rcx
    6d56:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d5d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6d63:	8b 40 08             	mov    0x8(%rax),%eax
    6d66:	48 89 ce             	mov    %rcx,%rsi
    6d69:	89 c7                	mov    %eax,%edi
    6d6b:	e8 68 2f 00 00       	call   9cd8 <mk_arrayaccess>
    6d70:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6d77:	e9 21 01 00 00       	jmp    6e9d <yyparse+0x172f>
    6d7c:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d83:	48 83 e8 30          	sub    $0x30,%rax
    6d87:	48 8b 10             	mov    (%rax),%rdx
    6d8a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6d91:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6d97:	48 8b 08             	mov    (%rax),%rcx
    6d9a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6da1:	48 2d 90 00 00 00    	sub    $0x90,%rax
    6da7:	8b 40 08             	mov    0x8(%rax),%eax
    6daa:	48 89 ce             	mov    %rcx,%rsi
    6dad:	89 c7                	mov    %eax,%edi
    6daf:	e8 7b 2f 00 00       	call   9d2f <mk_functioncall>
    6db4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6dbb:	e9 dd 00 00 00       	jmp    6e9d <yyparse+0x172f>
    6dc0:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6dc7:	8b 10                	mov    (%rax),%edx
    6dc9:	8b 05 45 a2 01 00    	mov    0x1a245(%rip),%eax        # 21014 <line_num>
    6dcf:	89 d6                	mov    %edx,%esi
    6dd1:	89 c7                	mov    %eax,%edi
    6dd3:	e8 ae 2f 00 00       	call   9d86 <mk_inum>
    6dd8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6ddf:	e9 b9 00 00 00       	jmp    6e9d <yyparse+0x172f>
    6de4:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6deb:	8b 10                	mov    (%rax),%edx
    6ded:	8b 05 21 a2 01 00    	mov    0x1a221(%rip),%eax        # 21014 <line_num>
    6df3:	66 0f 6e c2          	movd   %edx,%xmm0
    6df7:	89 c7                	mov    %eax,%edi
    6df9:	e8 3e 30 00 00       	call   9e3c <mk_rnum>
    6dfe:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6e05:	e9 93 00 00 00       	jmp    6e9d <yyparse+0x172f>
    6e0a:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6e11:	48 8b 10             	mov    (%rax),%rdx
    6e14:	8b 05 fa a1 01 00    	mov    0x1a1fa(%rip),%eax        # 21014 <line_num>
    6e1a:	48 89 d6             	mov    %rdx,%rsi
    6e1d:	89 c7                	mov    %eax,%edi
    6e1f:	e8 a6 2f 00 00       	call   9dca <mk_string>
    6e24:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6e2b:	eb 70                	jmp    6e9d <yyparse+0x172f>
    6e2d:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6e34:	48 83 e8 30          	sub    $0x30,%rax
    6e38:	8b 00                	mov    (%rax),%eax
    6e3a:	3d 2d 01 00 00       	cmp    $0x12d,%eax
    6e3f:	75 23                	jne    6e64 <yyparse+0x16f6>
    6e41:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6e48:	48 8b 10             	mov    (%rax),%rdx
    6e4b:	8b 05 c3 a1 01 00    	mov    0x1a1c3(%rip),%eax        # 21014 <line_num>
    6e51:	48 89 d6             	mov    %rdx,%rsi
    6e54:	89 c7                	mov    %eax,%edi
    6e56:	e8 27 2d 00 00       	call   9b82 <mk_signterm>
    6e5b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6e62:	eb 39                	jmp    6e9d <yyparse+0x172f>
    6e64:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6e6b:	48 8b 00             	mov    (%rax),%rax
    6e6e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6e75:	eb 26                	jmp    6e9d <yyparse+0x172f>
    6e77:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6e7e:	48 83 e8 30          	sub    $0x30,%rax
    6e82:	48 8b 00             	mov    (%rax),%rax
    6e85:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    6e8c:	eb 0f                	jmp    6e9d <yyparse+0x172f>
    6e8e:	8b 05 4c a8 01 00    	mov    0x1a84c(%rip),%eax        # 216e0 <yylval>
    6e94:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    6e9a:	eb 01                	jmp    6e9d <yyparse+0x172f>
    6e9c:	90                   	nop
    6e9d:	8b 85 58 d8 ff ff    	mov    -0x27a8(%rbp),%eax
    6ea3:	48 63 d0             	movslq %eax,%rdx
    6ea6:	48 89 d0             	mov    %rdx,%rax
    6ea9:	48 01 c0             	add    %rax,%rax
    6eac:	48 01 d0             	add    %rdx,%rax
    6eaf:	48 c1 e0 04          	shl    $0x4,%rax
    6eb3:	48 f7 d8             	neg    %rax
    6eb6:	48 01 85 98 d8 ff ff 	add    %rax,-0x2768(%rbp)
    6ebd:	8b 85 58 d8 ff ff    	mov    -0x27a8(%rbp),%eax
    6ec3:	48 98                	cltq
    6ec5:	48 f7 d8             	neg    %rax
    6ec8:	48 01 85 88 d8 ff ff 	add    %rax,-0x2778(%rbp)
    6ecf:	c7 85 58 d8 ff ff 00 	movl   $0x0,-0x27a8(%rbp)
    6ed6:	00 00 00
    6ed9:	48 83 85 98 d8 ff ff 	addq   $0x30,-0x2768(%rbp)
    6ee0:	30
    6ee1:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    6ee8:	48 8b 8d f0 d8 ff ff 	mov    -0x2710(%rbp),%rcx
    6eef:	48 8b 9d f8 d8 ff ff 	mov    -0x2708(%rbp),%rbx
    6ef6:	48 89 08             	mov    %rcx,(%rax)
    6ef9:	48 89 58 08          	mov    %rbx,0x8(%rax)
    6efd:	48 8b 8d 00 d9 ff ff 	mov    -0x2700(%rbp),%rcx
    6f04:	48 8b 9d 08 d9 ff ff 	mov    -0x26f8(%rbp),%rbx
    6f0b:	48 89 48 10          	mov    %rcx,0x10(%rax)
    6f0f:	48 89 58 18          	mov    %rbx,0x18(%rax)
    6f13:	48 8b 8d 10 d9 ff ff 	mov    -0x26f0(%rbp),%rcx
    6f1a:	48 8b 9d 18 d9 ff ff 	mov    -0x26e8(%rbp),%rbx
    6f21:	48 89 48 20          	mov    %rcx,0x20(%rax)
    6f25:	48 89 58 28          	mov    %rbx,0x28(%rax)
    6f29:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    6f2f:	48 98                	cltq
    6f31:	48 8d 15 c8 1c 01 00 	lea    0x11cc8(%rip),%rdx        # 18c00 <yyr1>
    6f38:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6f3c:	0f be c0             	movsbl %al,%eax
    6f3f:	83 e8 42             	sub    $0x42,%eax
    6f42:	89 85 60 d8 ff ff    	mov    %eax,-0x27a0(%rbp)
    6f48:	8b 85 60 d8 ff ff    	mov    -0x27a0(%rbp),%eax
    6f4e:	48 98                	cltq
    6f50:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6f54:	48 8d 05 85 18 01 00 	lea    0x11885(%rip),%rax        # 187e0 <yypgoto>
    6f5b:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6f5f:	0f bf d0             	movswl %ax,%edx
    6f62:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    6f69:	0f b6 00             	movzbl (%rax),%eax
    6f6c:	0f b6 c0             	movzbl %al,%eax
    6f6f:	01 d0                	add    %edx,%eax
    6f71:	89 85 64 d8 ff ff    	mov    %eax,-0x279c(%rbp)
    6f77:	83 bd 64 d8 ff ff 00 	cmpl   $0x0,-0x279c(%rbp)
    6f7e:	78 51                	js     6fd1 <yyparse+0x1863>
    6f80:	81 bd 64 d8 ff ff af 	cmpl   $0xaf,-0x279c(%rbp)
    6f87:	00 00 00
    6f8a:	7f 45                	jg     6fd1 <yyparse+0x1863>
    6f8c:	8b 85 64 d8 ff ff    	mov    -0x279c(%rbp),%eax
    6f92:	48 98                	cltq
    6f94:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6f98:	48 8d 05 41 1a 01 00 	lea    0x11a41(%rip),%rax        # 189e0 <yycheck>
    6f9f:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6fa3:	0f bf d0             	movswl %ax,%edx
    6fa6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    6fad:	0f b6 00             	movzbl (%rax),%eax
    6fb0:	0f b6 c0             	movzbl %al,%eax
    6fb3:	39 c2                	cmp    %eax,%edx
    6fb5:	75 1a                	jne    6fd1 <yyparse+0x1863>
    6fb7:	8b 85 64 d8 ff ff    	mov    -0x279c(%rbp),%eax
    6fbd:	48 98                	cltq
    6fbf:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6fc3:	48 8d 05 b6 18 01 00 	lea    0x118b6(%rip),%rax        # 18880 <yytable>
    6fca:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6fce:	98                   	cwtl
    6fcf:	eb 16                	jmp    6fe7 <yyparse+0x1879>
    6fd1:	8b 85 60 d8 ff ff    	mov    -0x27a0(%rbp),%eax
    6fd7:	48 98                	cltq
    6fd9:	48 8d 15 60 18 01 00 	lea    0x11860(%rip),%rdx        # 18840 <yydefgoto>
    6fe0:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6fe4:	0f b6 c0             	movzbl %al,%eax
    6fe7:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    6fed:	e9 43 e8 ff ff       	jmp    5835 <yyparse+0xc7>
    6ff2:	90                   	nop
    6ff3:	8b 05 c7 a6 01 00    	mov    0x1a6c7(%rip),%eax        # 216c0 <yychar>
    6ff9:	83 f8 fe             	cmp    $0xfffffffe,%eax
    6ffc:	74 36                	je     7034 <yyparse+0x18c6>
    6ffe:	8b 05 bc a6 01 00    	mov    0x1a6bc(%rip),%eax        # 216c0 <yychar>
    7004:	85 c0                	test   %eax,%eax
    7006:	78 25                	js     702d <yyparse+0x18bf>
    7008:	8b 05 b2 a6 01 00    	mov    0x1a6b2(%rip),%eax        # 216c0 <yychar>
    700e:	3d 38 01 00 00       	cmp    $0x138,%eax
    7013:	7f 18                	jg     702d <yyparse+0x18bf>
    7015:	8b 05 a5 a6 01 00    	mov    0x1a6a5(%rip),%eax        # 216c0 <yychar>
    701b:	48 98                	cltq
    701d:	48 8d 15 5c 10 01 00 	lea    0x1105c(%rip),%rdx        # 18080 <yytranslate>
    7024:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    7028:	0f be c0             	movsbl %al,%eax
    702b:	eb 0c                	jmp    7039 <yyparse+0x18cb>
    702d:	b8 02 00 00 00       	mov    $0x2,%eax
    7032:	eb 05                	jmp    7039 <yyparse+0x18cb>
    7034:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    7039:	89 85 54 d8 ff ff    	mov    %eax,-0x27ac(%rbp)
    703f:	83 bd 48 d8 ff ff 00 	cmpl   $0x0,-0x27b8(%rbp)
    7046:	0f 85 3f 01 00 00    	jne    718b <yyparse+0x1a1d>
    704c:	8b 05 be a6 01 00    	mov    0x1a6be(%rip),%eax        # 21710 <yynerrs>
    7052:	83 c0 01             	add    $0x1,%eax
    7055:	89 05 b5 a6 01 00    	mov    %eax,0x1a6b5(%rip)        # 21710 <yynerrs>
    705b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    7062:	48 89 85 e0 d8 ff ff 	mov    %rax,-0x2720(%rbp)
    7069:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    706f:	89 85 e8 d8 ff ff    	mov    %eax,-0x2718(%rbp)
    7075:	48 8d 05 3d 1c 01 00 	lea    0x11c3d(%rip),%rax        # 18cb9 <yyr2+0x59>
    707c:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    7083:	48 8d 95 e0 d8 ff ff 	lea    -0x2720(%rbp),%rdx
    708a:	48 8d 8d 68 d8 ff ff 	lea    -0x2798(%rbp),%rcx
    7091:	48 8d 85 70 d8 ff ff 	lea    -0x2790(%rbp),%rax
    7098:	48 89 ce             	mov    %rcx,%rsi
    709b:	48 89 c7             	mov    %rax,%rdi
    709e:	e8 48 e4 ff ff       	call   54eb <yysyntax_error>
    70a3:	89 85 5c d8 ff ff    	mov    %eax,-0x27a4(%rbp)
    70a9:	83 bd 5c d8 ff ff 00 	cmpl   $0x0,-0x27a4(%rbp)
    70b0:	75 13                	jne    70c5 <yyparse+0x1957>
    70b2:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    70b9:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    70c0:	e9 aa 00 00 00       	jmp    716f <yyparse+0x1a01>
    70c5:	83 bd 5c d8 ff ff ff 	cmpl   $0xffffffff,-0x27a4(%rbp)
    70cc:	0f 85 9d 00 00 00    	jne    716f <yyparse+0x1a01>
    70d2:	48 8b 95 68 d8 ff ff 	mov    -0x2798(%rbp),%rdx
    70d9:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    70e0:	48 39 c2             	cmp    %rax,%rdx
    70e3:	74 0f                	je     70f4 <yyparse+0x1986>
    70e5:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    70ec:	48 89 c7             	mov    %rax,%rdi
    70ef:	e8 9c b1 ff ff       	call   2290 <free@plt>
    70f4:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    70fb:	48 89 c7             	mov    %rax,%rdi
    70fe:	e8 0d b3 ff ff       	call   2410 <malloc@plt>
    7103:	48 89 85 68 d8 ff ff 	mov    %rax,-0x2798(%rbp)
    710a:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    7111:	48 85 c0             	test   %rax,%rax
    7114:	74 36                	je     714c <yyparse+0x19de>
    7116:	48 8d 95 e0 d8 ff ff 	lea    -0x2720(%rbp),%rdx
    711d:	48 8d 8d 68 d8 ff ff 	lea    -0x2798(%rbp),%rcx
    7124:	48 8d 85 70 d8 ff ff 	lea    -0x2790(%rbp),%rax
    712b:	48 89 ce             	mov    %rcx,%rsi
    712e:	48 89 c7             	mov    %rax,%rdi
    7131:	e8 b5 e3 ff ff       	call   54eb <yysyntax_error>
    7136:	89 85 5c d8 ff ff    	mov    %eax,-0x27a4(%rbp)
    713c:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    7143:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    714a:	eb 23                	jmp    716f <yyparse+0x1a01>
    714c:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    7153:	48 89 85 68 d8 ff ff 	mov    %rax,-0x2798(%rbp)
    715a:	48 c7 85 70 d8 ff ff 	movq   $0x80,-0x2790(%rbp)
    7161:	80 00 00 00
    7165:	c7 85 5c d8 ff ff fe 	movl   $0xfffffffe,-0x27a4(%rbp)
    716c:	ff ff ff
    716f:	48 8b 85 b0 d8 ff ff 	mov    -0x2750(%rbp),%rax
    7176:	48 89 c7             	mov    %rax,%rdi
    7179:	e8 40 03 00 00       	call   74be <yyerror>
    717e:	83 bd 5c d8 ff ff fe 	cmpl   $0xfffffffe,-0x27a4(%rbp)
    7185:	0f 84 cb 01 00 00    	je     7356 <yyparse+0x1be8>
    718b:	83 bd 48 d8 ff ff 03 	cmpl   $0x3,-0x27b8(%rbp)
    7192:	75 41                	jne    71d5 <yyparse+0x1a67>
    7194:	8b 05 26 a5 01 00    	mov    0x1a526(%rip),%eax        # 216c0 <yychar>
    719a:	85 c0                	test   %eax,%eax
    719c:	7f 0f                	jg     71ad <yyparse+0x1a3f>
    719e:	8b 05 1c a5 01 00    	mov    0x1a51c(%rip),%eax        # 216c0 <yychar>
    71a4:	85 c0                	test   %eax,%eax
    71a6:	75 2d                	jne    71d5 <yyparse+0x1a67>
    71a8:	e9 97 01 00 00       	jmp    7344 <yyparse+0x1bd6>
    71ad:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    71b3:	48 8d 15 26 a5 01 00 	lea    0x1a526(%rip),%rdx        # 216e0 <yylval>
    71ba:	89 c6                	mov    %eax,%esi
    71bc:	48 8d 05 3e 1c 01 00 	lea    0x11c3e(%rip),%rax        # 18e01 <yyr2+0x1a1>
    71c3:	48 89 c7             	mov    %rax,%rdi
    71c6:	e8 7b e5 ff ff       	call   5746 <yydestruct>
    71cb:	c7 05 eb a4 01 00 fe 	movl   $0xfffffffe,0x1a4eb(%rip)        # 216c0 <yychar>
    71d2:	ff ff ff
    71d5:	90                   	nop
    71d6:	c7 85 48 d8 ff ff 03 	movl   $0x3,-0x27b8(%rbp)
    71dd:	00 00 00
    71e0:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    71e6:	48 98                	cltq
    71e8:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    71ec:	48 8d 05 cd 13 01 00 	lea    0x113cd(%rip),%rax        # 185c0 <yypact>
    71f3:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    71f7:	98                   	cwtl
    71f8:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    71fe:	83 bd 4c d8 ff ff 95 	cmpl   $0xffffff95,-0x27b4(%rbp)
    7205:	74 60                	je     7267 <yyparse+0x1af9>
    7207:	83 85 4c d8 ff ff 01 	addl   $0x1,-0x27b4(%rbp)
    720e:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    7215:	78 50                	js     7267 <yyparse+0x1af9>
    7217:	81 bd 4c d8 ff ff af 	cmpl   $0xaf,-0x27b4(%rbp)
    721e:	00 00 00
    7221:	7f 44                	jg     7267 <yyparse+0x1af9>
    7223:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    7229:	48 98                	cltq
    722b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    722f:	48 8d 05 aa 17 01 00 	lea    0x117aa(%rip),%rax        # 189e0 <yycheck>
    7236:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    723a:	66 83 f8 01          	cmp    $0x1,%ax
    723e:	75 27                	jne    7267 <yyparse+0x1af9>
    7240:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    7246:	48 98                	cltq
    7248:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    724c:	48 8d 05 2d 16 01 00 	lea    0x1162d(%rip),%rax        # 18880 <yytable>
    7253:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    7257:	98                   	cwtl
    7258:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    725e:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    7265:	7f 6a                	jg     72d1 <yyparse+0x1b63>
    7267:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    726e:	48 3b 85 80 d8 ff ff 	cmp    -0x2780(%rbp),%rax
    7275:	0f 84 c8 00 00 00    	je     7343 <yyparse+0x1bd5>
    727b:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    7281:	48 98                	cltq
    7283:	48 8d 15 b6 18 01 00 	lea    0x118b6(%rip),%rdx        # 18b40 <yystos>
    728a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    728e:	0f be c0             	movsbl %al,%eax
    7291:	48 8b 95 98 d8 ff ff 	mov    -0x2768(%rbp),%rdx
    7298:	89 c6                	mov    %eax,%esi
    729a:	48 8d 05 72 1b 01 00 	lea    0x11b72(%rip),%rax        # 18e13 <yyr2+0x1b3>
    72a1:	48 89 c7             	mov    %rax,%rdi
    72a4:	e8 9d e4 ff ff       	call   5746 <yydestruct>
    72a9:	48 83 ad 98 d8 ff ff 	subq   $0x30,-0x2768(%rbp)
    72b0:	30
    72b1:	48 83 ad 88 d8 ff ff 	subq   $0x1,-0x2778(%rbp)
    72b8:	01
    72b9:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    72c0:	0f b6 00             	movzbl (%rax),%eax
    72c3:	0f b6 c0             	movzbl %al,%eax
    72c6:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    72cc:	e9 0f ff ff ff       	jmp    71e0 <yyparse+0x1a72>
    72d1:	90                   	nop
    72d2:	48 83 85 98 d8 ff ff 	addq   $0x30,-0x2768(%rbp)
    72d9:	30
    72da:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    72e1:	48 8b 0d f8 a3 01 00 	mov    0x1a3f8(%rip),%rcx        # 216e0 <yylval>
    72e8:	48 8b 1d f9 a3 01 00 	mov    0x1a3f9(%rip),%rbx        # 216e8 <yylval+0x8>
    72ef:	48 89 08             	mov    %rcx,(%rax)
    72f2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    72f6:	48 8b 0d f3 a3 01 00 	mov    0x1a3f3(%rip),%rcx        # 216f0 <yylval+0x10>
    72fd:	48 8b 1d f4 a3 01 00 	mov    0x1a3f4(%rip),%rbx        # 216f8 <yylval+0x18>
    7304:	48 89 48 10          	mov    %rcx,0x10(%rax)
    7308:	48 89 58 18          	mov    %rbx,0x18(%rax)
    730c:	48 8b 0d ed a3 01 00 	mov    0x1a3ed(%rip),%rcx        # 21700 <yylval+0x20>
    7313:	48 8b 1d ee a3 01 00 	mov    0x1a3ee(%rip),%rbx        # 21708 <yylval+0x28>
    731a:	48 89 48 20          	mov    %rcx,0x20(%rax)
    731e:	48 89 58 28          	mov    %rbx,0x28(%rax)
    7322:	8b 85 4c d8 ff ff    	mov    -0x27b4(%rbp),%eax
    7328:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    732e:	e9 02 e5 ff ff       	jmp    5835 <yyparse+0xc7>
    7333:	90                   	nop
    7334:	c7 85 50 d8 ff ff 00 	movl   $0x0,-0x27b0(%rbp)
    733b:	00 00 00
    733e:	eb 31                	jmp    7371 <yyparse+0x1c03>
    7340:	90                   	nop
    7341:	eb 01                	jmp    7344 <yyparse+0x1bd6>
    7343:	90                   	nop
    7344:	c7 85 50 d8 ff ff 01 	movl   $0x1,-0x27b0(%rbp)
    734b:	00 00 00
    734e:	eb 21                	jmp    7371 <yyparse+0x1c03>
    7350:	90                   	nop
    7351:	eb 04                	jmp    7357 <yyparse+0x1be9>
    7353:	90                   	nop
    7354:	eb 01                	jmp    7357 <yyparse+0x1be9>
    7356:	90                   	nop
    7357:	48 8d 05 c4 1a 01 00 	lea    0x11ac4(%rip),%rax        # 18e22 <yyr2+0x1c2>
    735e:	48 89 c7             	mov    %rax,%rdi
    7361:	e8 58 01 00 00       	call   74be <yyerror>
    7366:	c7 85 50 d8 ff ff 02 	movl   $0x2,-0x27b0(%rbp)
    736d:	00 00 00
    7370:	90                   	nop
    7371:	8b 05 49 a3 01 00    	mov    0x1a349(%rip),%eax        # 216c0 <yychar>
    7377:	83 f8 fe             	cmp    $0xfffffffe,%eax
    737a:	74 58                	je     73d4 <yyparse+0x1c66>
    737c:	8b 05 3e a3 01 00    	mov    0x1a33e(%rip),%eax        # 216c0 <yychar>
    7382:	85 c0                	test   %eax,%eax
    7384:	78 25                	js     73ab <yyparse+0x1c3d>
    7386:	8b 05 34 a3 01 00    	mov    0x1a334(%rip),%eax        # 216c0 <yychar>
    738c:	3d 38 01 00 00       	cmp    $0x138,%eax
    7391:	7f 18                	jg     73ab <yyparse+0x1c3d>
    7393:	8b 05 27 a3 01 00    	mov    0x1a327(%rip),%eax        # 216c0 <yychar>
    7399:	48 98                	cltq
    739b:	48 8d 15 de 0c 01 00 	lea    0x10cde(%rip),%rdx        # 18080 <yytranslate>
    73a2:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    73a6:	0f be c0             	movsbl %al,%eax
    73a9:	eb 05                	jmp    73b0 <yyparse+0x1c42>
    73ab:	b8 02 00 00 00       	mov    $0x2,%eax
    73b0:	89 85 54 d8 ff ff    	mov    %eax,-0x27ac(%rbp)
    73b6:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    73bc:	48 8d 15 1d a3 01 00 	lea    0x1a31d(%rip),%rdx        # 216e0 <yylval>
    73c3:	89 c6                	mov    %eax,%esi
    73c5:	48 8d 05 67 1a 01 00 	lea    0x11a67(%rip),%rax        # 18e33 <yyr2+0x1d3>
    73cc:	48 89 c7             	mov    %rax,%rdi
    73cf:	e8 72 e3 ff ff       	call   5746 <yydestruct>
    73d4:	8b 85 58 d8 ff ff    	mov    -0x27a8(%rbp),%eax
    73da:	48 63 d0             	movslq %eax,%rdx
    73dd:	48 89 d0             	mov    %rdx,%rax
    73e0:	48 01 c0             	add    %rax,%rax
    73e3:	48 01 d0             	add    %rdx,%rax
    73e6:	48 c1 e0 04          	shl    $0x4,%rax
    73ea:	48 f7 d8             	neg    %rax
    73ed:	48 01 85 98 d8 ff ff 	add    %rax,-0x2768(%rbp)
    73f4:	8b 85 58 d8 ff ff    	mov    -0x27a8(%rbp),%eax
    73fa:	48 98                	cltq
    73fc:	48 f7 d8             	neg    %rax
    73ff:	48 01 85 88 d8 ff ff 	add    %rax,-0x2778(%rbp)
    7406:	eb 45                	jmp    744d <yyparse+0x1cdf>
    7408:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    740f:	0f b6 00             	movzbl (%rax),%eax
    7412:	0f b6 c0             	movzbl %al,%eax
    7415:	48 98                	cltq
    7417:	48 8d 15 22 17 01 00 	lea    0x11722(%rip),%rdx        # 18b40 <yystos>
    741e:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    7422:	0f be c0             	movsbl %al,%eax
    7425:	48 8b 95 98 d8 ff ff 	mov    -0x2768(%rbp),%rdx
    742c:	89 c6                	mov    %eax,%esi
    742e:	48 8d 05 1c 1a 01 00 	lea    0x11a1c(%rip),%rax        # 18e51 <yyr2+0x1f1>
    7435:	48 89 c7             	mov    %rax,%rdi
    7438:	e8 09 e3 ff ff       	call   5746 <yydestruct>
    743d:	48 83 ad 98 d8 ff ff 	subq   $0x30,-0x2768(%rbp)
    7444:	30
    7445:	48 83 ad 88 d8 ff ff 	subq   $0x1,-0x2778(%rbp)
    744c:	01
    744d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    7454:	48 3b 85 80 d8 ff ff 	cmp    -0x2780(%rbp),%rax
    745b:	75 ab                	jne    7408 <yyparse+0x1c9a>
    745d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    7464:	48 39 85 80 d8 ff ff 	cmp    %rax,-0x2780(%rbp)
    746b:	74 0f                	je     747c <yyparse+0x1d0e>
    746d:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    7474:	48 89 c7             	mov    %rax,%rdi
    7477:	e8 14 ae ff ff       	call   2290 <free@plt>
    747c:	48 8b 95 68 d8 ff ff 	mov    -0x2798(%rbp),%rdx
    7483:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    748a:	48 39 c2             	cmp    %rax,%rdx
    748d:	74 0f                	je     749e <yyparse+0x1d30>
    748f:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    7496:	48 89 c7             	mov    %rax,%rdi
    7499:	e8 f2 ad ff ff       	call   2290 <free@plt>
    749e:	8b 85 50 d8 ff ff    	mov    -0x27b0(%rbp),%eax
    74a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    74a8:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    74af:	00 00
    74b1:	74 05                	je     74b8 <yyparse+0x1d4a>
    74b3:	e8 78 ae ff ff       	call   2330 <__stack_chk_fail@plt>
    74b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74bc:	c9                   	leave
    74bd:	c3                   	ret

00000000000074be <yyerror>:
    74be:	f3 0f 1e fa          	endbr64
    74c2:	55                   	push   %rbp
    74c3:	48 89 e5             	mov    %rsp,%rbp
    74c6:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
    74cd:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    74d4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    74db:	00 00
    74dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    74e1:	31 c0                	xor    %eax,%eax
    74e3:	48 8b 05 96 9b 01 00 	mov    0x19b96(%rip),%rax        # 21080 <file_to_parse>
    74ea:	48 85 c0             	test   %rax,%rax
    74ed:	74 09                	je     74f8 <yyerror+0x3a>
    74ef:	48 8b 15 8a 9b 01 00 	mov    0x19b8a(%rip),%rdx        # 21080 <file_to_parse>
    74f6:	eb 07                	jmp    74ff <yyerror+0x41>
    74f8:	48 8d 15 c9 1a 01 00 	lea    0x11ac9(%rip),%rdx        # 18fc8 <yyr2+0x368>
    74ff:	8b 0d 13 9b 01 00    	mov    0x19b13(%rip),%ecx        # 21018 <col_num>
    7505:	44 8b 0d 08 9b 01 00 	mov    0x19b08(%rip),%r9d        # 21014 <line_num>
    750c:	44 8b 05 8d 9b 01 00 	mov    0x19b8d(%rip),%r8d        # 210a0 <yyleng>
    7513:	48 8b 05 a6 9b 01 00 	mov    0x19ba6(%rip),%rax        # 210c0 <yytext>
    751a:	48 85 c0             	test   %rax,%rax
    751d:	74 09                	je     7528 <yyerror+0x6a>
    751f:	48 8b 05 9a 9b 01 00 	mov    0x19b9a(%rip),%rax        # 210c0 <yytext>
    7526:	eb 07                	jmp    752f <yyerror+0x71>
    7528:	48 8d 05 99 1a 01 00 	lea    0x11a99(%rip),%rax        # 18fc8 <yyr2+0x368>
    752f:	48 8b 3d 2a 9b 01 00 	mov    0x19b2a(%rip),%rdi        # 21060 <stderr@GLIBC_2.2.5>
    7536:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
    753d:	52                   	push   %rdx
    753e:	51                   	push   %rcx
    753f:	48 89 c1             	mov    %rax,%rcx
    7542:	48 89 f2             	mov    %rsi,%rdx
    7545:	48 8d 05 84 1a 01 00 	lea    0x11a84(%rip),%rax        # 18fd0 <yyr2+0x370>
    754c:	48 89 c6             	mov    %rax,%rsi
    754f:	b8 00 00 00 00       	mov    $0x0,%eax
    7554:	e8 77 ae ff ff       	call   23d0 <fprintf@plt>
    7559:	48 83 c4 10          	add    $0x10,%rsp
    755d:	48 8b 05 fc 9a 01 00 	mov    0x19afc(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7564:	48 89 c1             	mov    %rax,%rcx
    7567:	ba 05 00 00 00       	mov    $0x5,%edx
    756c:	be 01 00 00 00       	mov    $0x1,%esi
    7571:	48 8d 05 be 1a 01 00 	lea    0x11abe(%rip),%rax        # 19036 <yyr2+0x3d6>
    7578:	48 89 c7             	mov    %rax,%rdi
    757b:	e8 10 af ff ff       	call   2490 <fwrite@plt>
    7580:	48 8b 05 f9 9a 01 00 	mov    0x19af9(%rip),%rax        # 21080 <file_to_parse>
    7587:	48 85 c0             	test   %rax,%rax
    758a:	74 33                	je     75bf <yyerror+0x101>
    758c:	48 8b 05 ed 9a 01 00 	mov    0x19aed(%rip),%rax        # 21080 <file_to_parse>
    7593:	0f b6 00             	movzbl (%rax),%eax
    7596:	84 c0                	test   %al,%al
    7598:	74 25                	je     75bf <yyerror+0x101>
    759a:	48 8b 15 df 9a 01 00 	mov    0x19adf(%rip),%rdx        # 21080 <file_to_parse>
    75a1:	48 8b 05 b8 9a 01 00 	mov    0x19ab8(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    75a8:	48 8d 0d 8d 1a 01 00 	lea    0x11a8d(%rip),%rcx        # 1903c <yyr2+0x3dc>
    75af:	48 89 ce             	mov    %rcx,%rsi
    75b2:	48 89 c7             	mov    %rax,%rdi
    75b5:	b8 00 00 00 00       	mov    $0x0,%eax
    75ba:	e8 11 ae ff ff       	call   23d0 <fprintf@plt>
    75bf:	48 8b 05 fa 9a 01 00 	mov    0x19afa(%rip),%rax        # 210c0 <yytext>
    75c6:	48 85 c0             	test   %rax,%rax
    75c9:	74 08                	je     75d3 <yyerror+0x115>
    75cb:	8b 05 cf 9a 01 00    	mov    0x19acf(%rip),%eax        # 210a0 <yyleng>
    75d1:	eb 05                	jmp    75d8 <yyerror+0x11a>
    75d3:	b8 00 00 00 00       	mov    $0x0,%eax
    75d8:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
    75de:	8b 05 34 9a 01 00    	mov    0x19a34(%rip),%eax        # 21018 <col_num>
    75e4:	39 85 d8 fe ff ff    	cmp    %eax,-0x128(%rbp)
    75ea:	7d 11                	jge    75fd <yyerror+0x13f>
    75ec:	8b 05 26 9a 01 00    	mov    0x19a26(%rip),%eax        # 21018 <col_num>
    75f2:	2b 85 d8 fe ff ff    	sub    -0x128(%rbp),%eax
    75f8:	83 c0 01             	add    $0x1,%eax
    75fb:	eb 05                	jmp    7602 <yyerror+0x144>
    75fd:	b8 01 00 00 00       	mov    $0x1,%eax
    7602:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
    7608:	8b 15 06 9a 01 00    	mov    0x19a06(%rip),%edx        # 21014 <line_num>
    760e:	48 8b 05 4b 9a 01 00 	mov    0x19a4b(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7615:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
    761b:	48 8d 35 23 1a 01 00 	lea    0x11a23(%rip),%rsi        # 19045 <yyr2+0x3e5>
    7622:	48 89 c7             	mov    %rax,%rdi
    7625:	b8 00 00 00 00       	mov    $0x0,%eax
    762a:	e8 a1 ad ff ff       	call   23d0 <fprintf@plt>
    762f:	48 8b 05 2a 9a 01 00 	mov    0x19a2a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7636:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    763d:	48 8d 0d 17 1a 01 00 	lea    0x11a17(%rip),%rcx        # 1905b <yyr2+0x3fb>
    7644:	48 89 ce             	mov    %rcx,%rsi
    7647:	48 89 c7             	mov    %rax,%rdi
    764a:	b8 00 00 00 00       	mov    $0x0,%eax
    764f:	e8 7c ad ff ff       	call   23d0 <fprintf@plt>
    7654:	48 8b 05 65 9a 01 00 	mov    0x19a65(%rip),%rax        # 210c0 <yytext>
    765b:	48 85 c0             	test   %rax,%rax
    765e:	0f 84 0e 01 00 00    	je     7772 <yyerror+0x2b4>
    7664:	48 8b 05 55 9a 01 00 	mov    0x19a55(%rip),%rax        # 210c0 <yytext>
    766b:	0f b6 00             	movzbl (%rax),%eax
    766e:	84 c0                	test   %al,%al
    7670:	0f 84 fc 00 00 00    	je     7772 <yyerror+0x2b4>
    7676:	48 8b 0d 43 9a 01 00 	mov    0x19a43(%rip),%rcx        # 210c0 <yytext>
    767d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7684:	ba 63 00 00 00       	mov    $0x63,%edx
    7689:	48 89 ce             	mov    %rcx,%rsi
    768c:	48 89 c7             	mov    %rax,%rdi
    768f:	e8 1c ac ff ff       	call   22b0 <strncpy@plt>
    7694:	c6 85 53 ff ff ff 00 	movb   $0x0,-0xad(%rbp)
    769b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    76a2:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    76a9:	eb 58                	jmp    7703 <yyerror+0x245>
    76ab:	e8 20 ae ff ff       	call   24d0 <__ctype_b_loc@plt>
    76b0:	48 8b 10             	mov    (%rax),%rdx
    76b3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    76ba:	0f b6 00             	movzbl (%rax),%eax
    76bd:	0f b6 c0             	movzbl %al,%eax
    76c0:	48 01 c0             	add    %rax,%rax
    76c3:	48 01 d0             	add    %rdx,%rax
    76c6:	0f b7 00             	movzwl (%rax),%eax
    76c9:	0f b7 c0             	movzwl %ax,%eax
    76cc:	25 00 40 00 00       	and    $0x4000,%eax
    76d1:	85 c0                	test   %eax,%eax
    76d3:	75 26                	jne    76fb <yyerror+0x23d>
    76d5:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    76dc:	0f b6 00             	movzbl (%rax),%eax
    76df:	3c 0a                	cmp    $0xa,%al
    76e1:	74 18                	je     76fb <yyerror+0x23d>
    76e3:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    76ea:	0f b6 00             	movzbl (%rax),%eax
    76ed:	3c 09                	cmp    $0x9,%al
    76ef:	74 0a                	je     76fb <yyerror+0x23d>
    76f1:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    76f8:	c6 00 3f             	movb   $0x3f,(%rax)
    76fb:	48 83 85 e0 fe ff ff 	addq   $0x1,-0x120(%rbp)
    7702:	01
    7703:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    770a:	0f b6 00             	movzbl (%rax),%eax
    770d:	84 c0                	test   %al,%al
    770f:	75 9a                	jne    76ab <yyerror+0x1ed>
    7711:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7718:	48 8d 15 42 19 01 00 	lea    0x11942(%rip),%rdx        # 19061 <yyr2+0x401>
    771f:	48 89 d6             	mov    %rdx,%rsi
    7722:	48 89 c7             	mov    %rax,%rdi
    7725:	e8 96 ad ff ff       	call   24c0 <strstr@plt>
    772a:	48 85 c0             	test   %rax,%rax
    772d:	74 1e                	je     774d <yyerror+0x28f>
    772f:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    7736:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    773d:	48 89 d6             	mov    %rdx,%rsi
    7740:	48 89 c7             	mov    %rax,%rdi
    7743:	e8 78 ad ff ff       	call   24c0 <strstr@plt>
    7748:	48 85 c0             	test   %rax,%rax
    774b:	75 25                	jne    7772 <yyerror+0x2b4>
    774d:	48 8b 05 0c 99 01 00 	mov    0x1990c(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7754:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    775b:	48 8d 0d 0a 19 01 00 	lea    0x1190a(%rip),%rcx        # 1906c <yyr2+0x40c>
    7762:	48 89 ce             	mov    %rcx,%rsi
    7765:	48 89 c7             	mov    %rax,%rdi
    7768:	b8 00 00 00 00       	mov    $0x0,%eax
    776d:	e8 5e ac ff ff       	call   23d0 <fprintf@plt>
    7772:	48 8b 05 07 99 01 00 	mov    0x19907(%rip),%rax        # 21080 <file_to_parse>
    7779:	48 85 c0             	test   %rax,%rax
    777c:	0f 84 7e 01 00 00    	je     7900 <yyerror+0x442>
    7782:	48 8b 05 f7 98 01 00 	mov    0x198f7(%rip),%rax        # 21080 <file_to_parse>
    7789:	48 8d 15 f6 18 01 00 	lea    0x118f6(%rip),%rdx        # 19086 <yyr2+0x426>
    7790:	48 89 d6             	mov    %rdx,%rsi
    7793:	48 89 c7             	mov    %rax,%rdi
    7796:	e8 a5 ac ff ff       	call   2440 <fopen@plt>
    779b:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    77a2:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
    77a9:	00
    77aa:	0f 84 50 01 00 00    	je     7900 <yyerror+0x442>
    77b0:	c7 85 d0 fe ff ff 01 	movl   $0x1,-0x130(%rbp)
    77b7:	00 00 00
    77ba:	eb 07                	jmp    77c3 <yyerror+0x305>
    77bc:	83 85 d0 fe ff ff 01 	addl   $0x1,-0x130(%rbp)
    77c3:	8b 05 4b 98 01 00    	mov    0x1984b(%rip),%eax        # 21014 <line_num>
    77c9:	39 85 d0 fe ff ff    	cmp    %eax,-0x130(%rbp)
    77cf:	7d 20                	jge    77f1 <yyerror+0x333>
    77d1:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    77d8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    77df:	be 00 01 00 00       	mov    $0x100,%esi
    77e4:	48 89 c7             	mov    %rax,%rdi
    77e7:	e8 c4 ab ff ff       	call   23b0 <fgets@plt>
    77ec:	48 85 c0             	test   %rax,%rax
    77ef:	75 cb                	jne    77bc <yyerror+0x2fe>
    77f1:	8b 05 1d 98 01 00    	mov    0x1981d(%rip),%eax        # 21014 <line_num>
    77f7:	39 85 d0 fe ff ff    	cmp    %eax,-0x130(%rbp)
    77fd:	0f 85 ee 00 00 00    	jne    78f1 <yyerror+0x433>
    7803:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    780a:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7811:	be 00 01 00 00       	mov    $0x100,%esi
    7816:	48 89 c7             	mov    %rax,%rdi
    7819:	e8 92 ab ff ff       	call   23b0 <fgets@plt>
    781e:	48 85 c0             	test   %rax,%rax
    7821:	0f 84 ca 00 00 00    	je     78f1 <yyerror+0x433>
    7827:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    782e:	48 8d 15 53 18 01 00 	lea    0x11853(%rip),%rdx        # 19088 <yyr2+0x428>
    7835:	48 89 d6             	mov    %rdx,%rsi
    7838:	48 89 c7             	mov    %rax,%rdi
    783b:	e8 60 ab ff ff       	call   23a0 <strcspn@plt>
    7840:	c6 84 05 f0 fe ff ff 	movb   $0x0,-0x110(%rbp,%rax,1)
    7847:	00
    7848:	48 8b 05 11 98 01 00 	mov    0x19811(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    784f:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    7856:	48 8d 0d 2e 18 01 00 	lea    0x1182e(%rip),%rcx        # 1908b <yyr2+0x42b>
    785d:	48 89 ce             	mov    %rcx,%rsi
    7860:	48 89 c7             	mov    %rax,%rdi
    7863:	b8 00 00 00 00       	mov    $0x0,%eax
    7868:	e8 63 ab ff ff       	call   23d0 <fprintf@plt>
    786d:	83 bd dc fe ff ff 00 	cmpl   $0x0,-0x124(%rbp)
    7874:	7e 7b                	jle    78f1 <yyerror+0x433>
    7876:	48 8b 05 e3 97 01 00 	mov    0x197e3(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    787d:	48 89 c1             	mov    %rax,%rcx
    7880:	ba 0b 00 00 00       	mov    $0xb,%edx
    7885:	be 01 00 00 00       	mov    $0x1,%esi
    788a:	48 8d 05 09 18 01 00 	lea    0x11809(%rip),%rax        # 1909a <yyr2+0x43a>
    7891:	48 89 c7             	mov    %rax,%rdi
    7894:	e8 f7 ab ff ff       	call   2490 <fwrite@plt>
    7899:	c7 85 d4 fe ff ff 01 	movl   $0x1,-0x12c(%rbp)
    78a0:	00 00 00
    78a3:	eb 1b                	jmp    78c0 <yyerror+0x402>
    78a5:	48 8b 05 b4 97 01 00 	mov    0x197b4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    78ac:	48 89 c6             	mov    %rax,%rsi
    78af:	bf 20 00 00 00       	mov    $0x20,%edi
    78b4:	e8 d7 aa ff ff       	call   2390 <fputc@plt>
    78b9:	83 85 d4 fe ff ff 01 	addl   $0x1,-0x12c(%rbp)
    78c0:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
    78c6:	3b 85 dc fe ff ff    	cmp    -0x124(%rbp),%eax
    78cc:	7c d7                	jl     78a5 <yyerror+0x3e7>
    78ce:	48 8b 05 8b 97 01 00 	mov    0x1978b(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    78d5:	48 89 c1             	mov    %rax,%rcx
    78d8:	ba 02 00 00 00       	mov    $0x2,%edx
    78dd:	be 01 00 00 00       	mov    $0x1,%esi
    78e2:	48 8d 05 bd 17 01 00 	lea    0x117bd(%rip),%rax        # 190a6 <yyr2+0x446>
    78e9:	48 89 c7             	mov    %rax,%rdi
    78ec:	e8 9f ab ff ff       	call   2490 <fwrite@plt>
    78f1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    78f8:	48 89 c7             	mov    %rax,%rdi
    78fb:	e8 10 aa ff ff       	call   2310 <fclose@plt>
    7900:	48 8b 05 59 97 01 00 	mov    0x19759(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7907:	48 89 c6             	mov    %rax,%rsi
    790a:	bf 0a 00 00 00       	mov    $0xa,%edi
    790f:	e8 7c aa ff ff       	call   2390 <fputc@plt>
    7914:	90                   	nop
    7915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7919:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7920:	00 00
    7922:	74 05                	je     7929 <yyerror+0x46b>
    7924:	e8 07 aa ff ff       	call   2330 <__stack_chk_fail@plt>
    7929:	c9                   	leave
    792a:	c3                   	ret

000000000000792b <ParsePascalOnly>:
    792b:	f3 0f 1e fa          	endbr64
    792f:	55                   	push   %rbp
    7930:	48 89 e5             	mov    %rsp,%rbp
    7933:	48 83 ec 10          	sub    $0x10,%rsp
    7937:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    793b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7940:	74 62                	je     79a4 <ParsePascalOnly+0x79>
    7942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7946:	48 8d 15 5c 17 01 00 	lea    0x1175c(%rip),%rdx        # 190a9 <yyr2+0x449>
    794d:	48 89 d6             	mov    %rdx,%rsi
    7950:	48 89 c7             	mov    %rax,%rdi
    7953:	e8 e8 aa ff ff       	call   2440 <fopen@plt>
    7958:	48 89 05 49 97 01 00 	mov    %rax,0x19749(%rip)        # 210a8 <yyin>
    795f:	48 8b 05 42 97 01 00 	mov    0x19742(%rip),%rax        # 210a8 <yyin>
    7966:	48 85 c0             	test   %rax,%rax
    7969:	75 2c                	jne    7997 <ParsePascalOnly+0x6c>
    796b:	48 8b 05 ee 96 01 00 	mov    0x196ee(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7972:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7976:	48 8d 0d 2e 17 01 00 	lea    0x1172e(%rip),%rcx        # 190ab <yyr2+0x44b>
    797d:	48 89 ce             	mov    %rcx,%rsi
    7980:	48 89 c7             	mov    %rax,%rdi
    7983:	b8 00 00 00 00       	mov    $0x0,%eax
    7988:	e8 43 aa ff ff       	call   23d0 <fprintf@plt>
    798d:	bf 01 00 00 00       	mov    $0x1,%edi
    7992:	e8 e9 aa ff ff       	call   2480 <exit@plt>
    7997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    799b:	48 89 05 de 96 01 00 	mov    %rax,0x196de(%rip)        # 21080 <file_to_parse>
    79a2:	eb 0b                	jmp    79af <ParsePascalOnly+0x84>
    79a4:	48 c7 05 d1 96 01 00 	movq   $0x0,0x196d1(%rip)        # 21080 <file_to_parse>
    79ab:	00 00 00 00
    79af:	b8 00 00 00 00       	mov    $0x0,%eax
    79b4:	e8 64 00 00 00       	call   7a1d <InitParser>
    79b9:	e8 b0 dd ff ff       	call   576e <yyparse>
    79be:	48 8b 05 ab 96 01 00 	mov    0x196ab(%rip),%rax        # 21070 <parse_tree>
    79c5:	c9                   	leave
    79c6:	c3                   	ret

00000000000079c7 <ParsePascal>:
    79c7:	f3 0f 1e fa          	endbr64
    79cb:	55                   	push   %rbp
    79cc:	48 89 e5             	mov    %rsp,%rbp
    79cf:	48 83 ec 20          	sub    $0x20,%rsp
    79d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79db:	48 89 c7             	mov    %rax,%rdi
    79de:	e8 48 ff ff ff       	call   792b <ParsePascalOnly>
    79e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    79e7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    79ec:	74 29                	je     7a17 <ParsePascal+0x50>
    79ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79f2:	48 89 c7             	mov    %rax,%rdi
    79f5:	e8 e7 24 00 00       	call   9ee1 <start_semcheck>
    79fa:	89 45 f4             	mov    %eax,-0xc(%rbp)
    79fd:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    7a01:	7e 14                	jle    7a17 <ParsePascal+0x50>
    7a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a07:	48 89 c7             	mov    %rax,%rdi
    7a0a:	e8 26 16 00 00       	call   9035 <destroy_tree>
    7a0f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    7a16:	00
    7a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a1b:	c9                   	leave
    7a1c:	c3                   	ret

0000000000007a1d <InitParser>:
    7a1d:	f3 0f 1e fa          	endbr64
    7a21:	55                   	push   %rbp
    7a22:	48 89 e5             	mov    %rsp,%rbp
    7a25:	c7 05 e5 95 01 00 01 	movl   $0x1,0x195e5(%rip)        # 21014 <line_num>
    7a2c:	00 00 00
    7a2f:	c7 05 df 95 01 00 01 	movl   $0x1,0x195df(%rip)        # 21018 <col_num>
    7a36:	00 00 00
    7a39:	48 c7 05 2c 96 01 00 	movq   $0x0,0x1962c(%rip)        # 21070 <parse_tree>
    7a40:	00 00 00 00
    7a44:	90                   	nop
    7a45:	5d                   	pop    %rbp
    7a46:	c3                   	ret

0000000000007a47 <CreateListNode>:
    7a47:	f3 0f 1e fa          	endbr64
    7a4b:	55                   	push   %rbp
    7a4c:	48 89 e5             	mov    %rsp,%rbp
    7a4f:	48 83 ec 20          	sub    $0x20,%rsp
    7a53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a57:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    7a5a:	bf 18 00 00 00       	mov    $0x18,%edi
    7a5f:	e8 ac a9 ff ff       	call   2410 <malloc@plt>
    7a64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a6c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    7a6f:	89 10                	mov    %edx,(%rax)
    7a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7a79:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a81:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7a88:	00
    7a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a8d:	c9                   	leave
    7a8e:	c3                   	ret

0000000000007a8f <PushListNodeFront>:
    7a8f:	f3 0f 1e fa          	endbr64
    7a93:	55                   	push   %rbp
    7a94:	48 89 e5             	mov    %rsp,%rbp
    7a97:	48 83 ec 10          	sub    $0x10,%rsp
    7a9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7aa3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7aa8:	75 28                	jne    7ad2 <PushListNodeFront+0x43>
    7aaa:	48 8d 05 8f 16 01 00 	lea    0x1168f(%rip),%rax        # 19140 <__PRETTY_FUNCTION__.3>
    7ab1:	48 89 c1             	mov    %rax,%rcx
    7ab4:	ba 1d 00 00 00       	mov    $0x1d,%edx
    7ab9:	48 8d 05 10 16 01 00 	lea    0x11610(%rip),%rax        # 190d0 <yyr2+0x470>
    7ac0:	48 89 c6             	mov    %rax,%rsi
    7ac3:	48 8d 05 12 16 01 00 	lea    0x11612(%rip),%rax        # 190dc <yyr2+0x47c>
    7aca:	48 89 c7             	mov    %rax,%rdi
    7acd:	e8 7e a8 ff ff       	call   2350 <__assert_fail@plt>
    7ad2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7ad7:	75 28                	jne    7b01 <PushListNodeFront+0x72>
    7ad9:	48 8d 05 60 16 01 00 	lea    0x11660(%rip),%rax        # 19140 <__PRETTY_FUNCTION__.3>
    7ae0:	48 89 c1             	mov    %rax,%rcx
    7ae3:	ba 1e 00 00 00       	mov    $0x1e,%edx
    7ae8:	48 8d 05 e1 15 01 00 	lea    0x115e1(%rip),%rax        # 190d0 <yyr2+0x470>
    7aef:	48 89 c6             	mov    %rax,%rsi
    7af2:	48 8d 05 f5 15 01 00 	lea    0x115f5(%rip),%rax        # 190ee <yyr2+0x48e>
    7af9:	48 89 c7             	mov    %rax,%rdi
    7afc:	e8 4f a8 ff ff       	call   2350 <__assert_fail@plt>
    7b01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b05:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7b09:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7b0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b11:	c9                   	leave
    7b12:	c3                   	ret

0000000000007b13 <PushListNodeBack>:
    7b13:	f3 0f 1e fa          	endbr64
    7b17:	55                   	push   %rbp
    7b18:	48 89 e5             	mov    %rsp,%rbp
    7b1b:	48 83 ec 20          	sub    $0x20,%rsp
    7b1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7b27:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7b2c:	75 28                	jne    7b56 <PushListNodeBack+0x43>
    7b2e:	48 8d 05 2b 16 01 00 	lea    0x1162b(%rip),%rax        # 19160 <__PRETTY_FUNCTION__.2>
    7b35:	48 89 c1             	mov    %rax,%rcx
    7b38:	ba 29 00 00 00       	mov    $0x29,%edx
    7b3d:	48 8d 05 8c 15 01 00 	lea    0x1158c(%rip),%rax        # 190d0 <yyr2+0x470>
    7b44:	48 89 c6             	mov    %rax,%rsi
    7b47:	48 8d 05 b1 15 01 00 	lea    0x115b1(%rip),%rax        # 190ff <yyr2+0x49f>
    7b4e:	48 89 c7             	mov    %rax,%rdi
    7b51:	e8 fa a7 ff ff       	call   2350 <__assert_fail@plt>
    7b56:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    7b5b:	75 28                	jne    7b85 <PushListNodeBack+0x72>
    7b5d:	48 8d 05 fc 15 01 00 	lea    0x115fc(%rip),%rax        # 19160 <__PRETTY_FUNCTION__.2>
    7b64:	48 89 c1             	mov    %rax,%rcx
    7b67:	ba 2a 00 00 00       	mov    $0x2a,%edx
    7b6c:	48 8d 05 5d 15 01 00 	lea    0x1155d(%rip),%rax        # 190d0 <yyr2+0x470>
    7b73:	48 89 c6             	mov    %rax,%rsi
    7b76:	48 8d 05 5f 15 01 00 	lea    0x1155f(%rip),%rax        # 190dc <yyr2+0x47c>
    7b7d:	48 89 c7             	mov    %rax,%rdi
    7b80:	e8 cb a7 ff ff       	call   2350 <__assert_fail@plt>
    7b85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7b8d:	eb 0c                	jmp    7b9b <PushListNodeBack+0x88>
    7b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b93:	48 8b 40 10          	mov    0x10(%rax),%rax
    7b97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b9f:	48 8b 40 10          	mov    0x10(%rax),%rax
    7ba3:	48 85 c0             	test   %rax,%rax
    7ba6:	75 e7                	jne    7b8f <PushListNodeBack+0x7c>
    7ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7bb0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7bb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bb8:	c9                   	leave
    7bb9:	c3                   	ret

0000000000007bba <InsertListNode>:
    7bba:	f3 0f 1e fa          	endbr64
    7bbe:	55                   	push   %rbp
    7bbf:	48 89 e5             	mov    %rsp,%rbp
    7bc2:	48 83 ec 10          	sub    $0x10,%rsp
    7bc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7bce:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7bd3:	75 28                	jne    7bfd <InsertListNode+0x43>
    7bd5:	48 8d 05 9c 15 01 00 	lea    0x1159c(%rip),%rax        # 19178 <__PRETTY_FUNCTION__.1>
    7bdc:	48 89 c1             	mov    %rax,%rcx
    7bdf:	ba 36 00 00 00       	mov    $0x36,%edx
    7be4:	48 8d 05 e5 14 01 00 	lea    0x114e5(%rip),%rax        # 190d0 <yyr2+0x470>
    7beb:	48 89 c6             	mov    %rax,%rsi
    7bee:	48 8d 05 1b 15 01 00 	lea    0x1151b(%rip),%rax        # 19110 <yyr2+0x4b0>
    7bf5:	48 89 c7             	mov    %rax,%rdi
    7bf8:	e8 53 a7 ff ff       	call   2350 <__assert_fail@plt>
    7bfd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7c02:	75 28                	jne    7c2c <InsertListNode+0x72>
    7c04:	48 8d 05 6d 15 01 00 	lea    0x1156d(%rip),%rax        # 19178 <__PRETTY_FUNCTION__.1>
    7c0b:	48 89 c1             	mov    %rax,%rcx
    7c0e:	ba 37 00 00 00       	mov    $0x37,%edx
    7c13:	48 8d 05 b6 14 01 00 	lea    0x114b6(%rip),%rax        # 190d0 <yyr2+0x470>
    7c1a:	48 89 c6             	mov    %rax,%rsi
    7c1d:	48 8d 05 db 14 01 00 	lea    0x114db(%rip),%rax        # 190ff <yyr2+0x49f>
    7c24:	48 89 c7             	mov    %rax,%rdi
    7c27:	e8 24 a7 ff ff       	call   2350 <__assert_fail@plt>
    7c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c30:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7c34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7c38:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c44:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7c48:	90                   	nop
    7c49:	c9                   	leave
    7c4a:	c3                   	ret

0000000000007c4b <PopListHeadNode>:
    7c4b:	f3 0f 1e fa          	endbr64
    7c4f:	55                   	push   %rbp
    7c50:	48 89 e5             	mov    %rsp,%rbp
    7c53:	48 83 ec 10          	sub    $0x10,%rsp
    7c57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c5f:	be 00 00 00 00       	mov    $0x0,%esi
    7c64:	48 89 c7             	mov    %rax,%rdi
    7c67:	e8 02 00 00 00       	call   7c6e <DeleteListNode>
    7c6c:	c9                   	leave
    7c6d:	c3                   	ret

0000000000007c6e <DeleteListNode>:
    7c6e:	f3 0f 1e fa          	endbr64
    7c72:	55                   	push   %rbp
    7c73:	48 89 e5             	mov    %rsp,%rbp
    7c76:	48 83 ec 20          	sub    $0x20,%rsp
    7c7a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c7e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7c82:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    7c87:	75 28                	jne    7cb1 <DeleteListNode+0x43>
    7c89:	48 8d 05 f8 14 01 00 	lea    0x114f8(%rip),%rax        # 19188 <__PRETTY_FUNCTION__.0>
    7c90:	48 89 c1             	mov    %rax,%rcx
    7c93:	ba 46 00 00 00       	mov    $0x46,%edx
    7c98:	48 8d 05 31 14 01 00 	lea    0x11431(%rip),%rax        # 190d0 <yyr2+0x470>
    7c9f:	48 89 c6             	mov    %rax,%rsi
    7ca2:	48 8d 05 74 14 01 00 	lea    0x11474(%rip),%rax        # 1911d <yyr2+0x4bd>
    7ca9:	48 89 c7             	mov    %rax,%rdi
    7cac:	e8 9f a6 ff ff       	call   2350 <__assert_fail@plt>
    7cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cb5:	48 8b 40 10          	mov    0x10(%rax),%rax
    7cb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7cbd:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7cc2:	74 0c                	je     7cd0 <DeleteListNode+0x62>
    7cc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7cc8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ccc:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cd4:	48 89 c7             	mov    %rax,%rdi
    7cd7:	e8 b4 a5 ff ff       	call   2290 <free@plt>
    7cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ce0:	c9                   	leave
    7ce1:	c3                   	ret

0000000000007ce2 <DestroyList>:
    7ce2:	f3 0f 1e fa          	endbr64
    7ce6:	55                   	push   %rbp
    7ce7:	48 89 e5             	mov    %rsp,%rbp
    7cea:	48 83 ec 20          	sub    $0x20,%rsp
    7cee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7cf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cf6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7cfa:	eb 15                	jmp    7d11 <DestroyList+0x2f>
    7cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d00:	be 00 00 00 00       	mov    $0x0,%esi
    7d05:	48 89 c7             	mov    %rax,%rdi
    7d08:	e8 61 ff ff ff       	call   7c6e <DeleteListNode>
    7d0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7d11:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7d16:	75 e4                	jne    7cfc <DestroyList+0x1a>
    7d18:	90                   	nop
    7d19:	90                   	nop
    7d1a:	c9                   	leave
    7d1b:	c3                   	ret

0000000000007d1c <PrintList>:
    7d1c:	f3 0f 1e fa          	endbr64
    7d20:	55                   	push   %rbp
    7d21:	48 89 e5             	mov    %rsp,%rbp
    7d24:	48 83 ec 30          	sub    $0x30,%rsp
    7d28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7d2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7d30:	89 55 dc             	mov    %edx,-0x24(%rbp)
    7d33:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    7d3a:	eb 24                	jmp    7d60 <PrintList+0x44>
    7d3c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d40:	48 89 c1             	mov    %rax,%rcx
    7d43:	ba 02 00 00 00       	mov    $0x2,%edx
    7d48:	be 01 00 00 00       	mov    $0x1,%esi
    7d4d:	48 8d 05 d6 13 01 00 	lea    0x113d6(%rip),%rax        # 1912a <yyr2+0x4ca>
    7d54:	48 89 c7             	mov    %rax,%rdi
    7d57:	e8 34 a7 ff ff       	call   2490 <fwrite@plt>
    7d5c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    7d60:	8b 45 f4             	mov    -0xc(%rbp),%eax
    7d63:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    7d66:	7c d4                	jl     7d3c <PrintList+0x20>
    7d68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7d70:	eb 56                	jmp    7dc8 <PrintList+0xac>
    7d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d76:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7d7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d7e:	48 8d 0d a8 13 01 00 	lea    0x113a8(%rip),%rcx        # 1912d <yyr2+0x4cd>
    7d85:	48 89 ce             	mov    %rcx,%rsi
    7d88:	48 89 c7             	mov    %rax,%rdi
    7d8b:	b8 00 00 00 00       	mov    $0x0,%eax
    7d90:	e8 3b a6 ff ff       	call   23d0 <fprintf@plt>
    7d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d99:	48 8b 40 10          	mov    0x10(%rax),%rax
    7d9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7da1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7da6:	74 20                	je     7dc8 <PrintList+0xac>
    7da8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7dac:	48 89 c1             	mov    %rax,%rcx
    7daf:	ba 04 00 00 00       	mov    $0x4,%edx
    7db4:	be 01 00 00 00       	mov    $0x1,%esi
    7db9:	48 8d 05 70 13 01 00 	lea    0x11370(%rip),%rax        # 19130 <yyr2+0x4d0>
    7dc0:	48 89 c7             	mov    %rax,%rdi
    7dc3:	e8 c8 a6 ff ff       	call   2490 <fwrite@plt>
    7dc8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7dcd:	75 a3                	jne    7d72 <PrintList+0x56>
    7dcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7dd3:	48 89 c6             	mov    %rax,%rsi
    7dd6:	bf 0a 00 00 00       	mov    $0xa,%edi
    7ddb:	e8 b0 a5 ff ff       	call   2390 <fputc@plt>
    7de0:	90                   	nop
    7de1:	c9                   	leave
    7de2:	c3                   	ret

0000000000007de3 <ListLength>:
    7de3:	f3 0f 1e fa          	endbr64
    7de7:	55                   	push   %rbp
    7de8:	48 89 e5             	mov    %rsp,%rbp
    7deb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7def:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    7df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7dfe:	eb 10                	jmp    7e10 <ListLength+0x2d>
    7e00:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    7e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e08:	48 8b 40 10          	mov    0x10(%rax),%rax
    7e0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7e10:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7e15:	75 e9                	jne    7e00 <ListLength+0x1d>
    7e17:	8b 45 f4             	mov    -0xc(%rbp),%eax
    7e1a:	5d                   	pop    %rbp
    7e1b:	c3                   	ret

0000000000007e1c <print_indent>:
    7e1c:	f3 0f 1e fa          	endbr64
    7e20:	55                   	push   %rbp
    7e21:	48 89 e5             	mov    %rsp,%rbp
    7e24:	48 83 ec 20          	sub    $0x20,%rsp
    7e28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e2c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    7e2f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    7e36:	eb 24                	jmp    7e5c <print_indent+0x40>
    7e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e3c:	48 89 c1             	mov    %rax,%rcx
    7e3f:	ba 02 00 00 00       	mov    $0x2,%edx
    7e44:	be 01 00 00 00       	mov    $0x1,%esi
    7e49:	48 8d 05 48 13 01 00 	lea    0x11348(%rip),%rax        # 19198 <__PRETTY_FUNCTION__.0+0x10>
    7e50:	48 89 c7             	mov    %rax,%rdi
    7e53:	e8 38 a6 ff ff       	call   2490 <fwrite@plt>
    7e58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    7e5c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7e5f:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    7e62:	7c d4                	jl     7e38 <print_indent+0x1c>
    7e64:	90                   	nop
    7e65:	90                   	nop
    7e66:	c9                   	leave
    7e67:	c3                   	ret

0000000000007e68 <list_print>:
    7e68:	f3 0f 1e fa          	endbr64
    7e6c:	55                   	push   %rbp
    7e6d:	48 89 e5             	mov    %rsp,%rbp
    7e70:	48 83 ec 30          	sub    $0x30,%rsp
    7e74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7e7c:	89 55 dc             	mov    %edx,-0x24(%rbp)
    7e7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7e87:	e9 2b 01 00 00       	jmp    7fb7 <list_print+0x14f>
    7e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e90:	48 8b 40 08          	mov    0x8(%rax),%rax
    7e94:	48 85 c0             	test   %rax,%rax
    7e97:	75 28                	jne    7ec1 <list_print+0x59>
    7e99:	48 8d 05 50 17 01 00 	lea    0x11750(%rip),%rax        # 195f0 <__PRETTY_FUNCTION__.2>
    7ea0:	48 89 c1             	mov    %rax,%rcx
    7ea3:	ba 1e 00 00 00       	mov    $0x1e,%edx
    7ea8:	48 8d 05 ec 12 01 00 	lea    0x112ec(%rip),%rax        # 1919b <__PRETTY_FUNCTION__.0+0x13>
    7eaf:	48 89 c6             	mov    %rax,%rsi
    7eb2:	48 8d 05 f3 12 01 00 	lea    0x112f3(%rip),%rax        # 191ac <__PRETTY_FUNCTION__.0+0x24>
    7eb9:	48 89 c7             	mov    %rax,%rdi
    7ebc:	e8 8f a4 ff ff       	call   2350 <__assert_fail@plt>
    7ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ec5:	8b 00                	mov    (%rax),%eax
    7ec7:	83 f8 03             	cmp    $0x3,%eax
    7eca:	74 7c                	je     7f48 <list_print+0xe0>
    7ecc:	83 f8 03             	cmp    $0x3,%eax
    7ecf:	0f 87 a9 00 00 00    	ja     7f7e <list_print+0x116>
    7ed5:	83 f8 02             	cmp    $0x2,%eax
    7ed8:	74 36                	je     7f10 <list_print+0xa8>
    7eda:	83 f8 02             	cmp    $0x2,%eax
    7edd:	0f 87 9b 00 00 00    	ja     7f7e <list_print+0x116>
    7ee3:	85 c0                	test   %eax,%eax
    7ee5:	74 0a                	je     7ef1 <list_print+0x89>
    7ee7:	83 f8 01             	cmp    $0x1,%eax
    7eea:	74 40                	je     7f2c <list_print+0xc4>
    7eec:	e9 8d 00 00 00       	jmp    7f7e <list_print+0x116>
    7ef1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ef5:	48 8b 40 08          	mov    0x8(%rax),%rax
    7ef9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    7efc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7f00:	48 89 ce             	mov    %rcx,%rsi
    7f03:	48 89 c7             	mov    %rax,%rdi
    7f06:	e8 bb 00 00 00       	call   7fc6 <tree_print>
    7f0b:	e9 9b 00 00 00       	jmp    7fab <list_print+0x143>
    7f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f14:	48 8b 40 08          	mov    0x8(%rax),%rax
    7f18:	8b 55 dc             	mov    -0x24(%rbp),%edx
    7f1b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7f1f:	48 89 ce             	mov    %rcx,%rsi
    7f22:	48 89 c7             	mov    %rax,%rdi
    7f25:	e8 23 0b 00 00       	call   8a4d <expr_print>
    7f2a:	eb 7f                	jmp    7fab <list_print+0x143>
    7f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f30:	48 8b 40 08          	mov    0x8(%rax),%rax
    7f34:	8b 55 dc             	mov    -0x24(%rbp),%edx
    7f37:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7f3b:	48 89 ce             	mov    %rcx,%rsi
    7f3e:	48 89 c7             	mov    %rax,%rdi
    7f41:	e8 e3 05 00 00       	call   8529 <stmt_print>
    7f46:	eb 63                	jmp    7fab <list_print+0x143>
    7f48:	8b 55 dc             	mov    -0x24(%rbp),%edx
    7f4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f4f:	89 d6                	mov    %edx,%esi
    7f51:	48 89 c7             	mov    %rax,%rdi
    7f54:	e8 c3 fe ff ff       	call   7e1c <print_indent>
    7f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f5d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7f61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f65:	48 8d 0d 51 12 01 00 	lea    0x11251(%rip),%rcx        # 191bd <__PRETTY_FUNCTION__.0+0x35>
    7f6c:	48 89 ce             	mov    %rcx,%rsi
    7f6f:	48 89 c7             	mov    %rax,%rdi
    7f72:	b8 00 00 00 00       	mov    $0x0,%eax
    7f77:	e8 54 a4 ff ff       	call   23d0 <fprintf@plt>
    7f7c:	eb 2d                	jmp    7fab <list_print+0x143>
    7f7e:	48 8b 05 db 90 01 00 	mov    0x190db(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    7f85:	48 89 c1             	mov    %rax,%rcx
    7f88:	ba 18 00 00 00       	mov    $0x18,%edx
    7f8d:	be 01 00 00 00       	mov    $0x1,%esi
    7f92:	48 8d 05 28 12 01 00 	lea    0x11228(%rip),%rax        # 191c1 <__PRETTY_FUNCTION__.0+0x39>
    7f99:	48 89 c7             	mov    %rax,%rdi
    7f9c:	e8 ef a4 ff ff       	call   2490 <fwrite@plt>
    7fa1:	bf 01 00 00 00       	mov    $0x1,%edi
    7fa6:	e8 d5 a4 ff ff       	call   2480 <exit@plt>
    7fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7faf:	48 8b 40 10          	mov    0x10(%rax),%rax
    7fb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7fb7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7fbc:	0f 85 ca fe ff ff    	jne    7e8c <list_print+0x24>
    7fc2:	90                   	nop
    7fc3:	90                   	nop
    7fc4:	c9                   	leave
    7fc5:	c3                   	ret

0000000000007fc6 <tree_print>:
    7fc6:	f3 0f 1e fa          	endbr64
    7fca:	55                   	push   %rbp
    7fcb:	48 89 e5             	mov    %rsp,%rbp
    7fce:	48 83 ec 20          	sub    $0x20,%rsp
    7fd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7fda:	89 55 ec             	mov    %edx,-0x14(%rbp)
    7fdd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7fe0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fe4:	89 d6                	mov    %edx,%esi
    7fe6:	48 89 c7             	mov    %rax,%rdi
    7fe9:	e8 2e fe ff ff       	call   7e1c <print_indent>
    7fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff2:	8b 40 04             	mov    0x4(%rax),%eax
    7ff5:	83 f8 07             	cmp    $0x7,%eax
    7ff8:	0f 87 fb 04 00 00    	ja     84f9 <tree_print+0x533>
    7ffe:	89 c0                	mov    %eax,%eax
    8000:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8007:	00
    8008:	48 8d 05 21 13 01 00 	lea    0x11321(%rip),%rax        # 19330 <__PRETTY_FUNCTION__.0+0x1a8>
    800f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    8012:	48 98                	cltq
    8014:	48 8d 15 15 13 01 00 	lea    0x11315(%rip),%rdx        # 19330 <__PRETTY_FUNCTION__.0+0x1a8>
    801b:	48 01 d0             	add    %rdx,%rax
    801e:	3e ff e0             	notrack jmp *%rax
    8021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8025:	48 8b 40 08          	mov    0x8(%rax),%rax
    8029:	48 85 c0             	test   %rax,%rax
    802c:	75 28                	jne    8056 <tree_print+0x90>
    802e:	48 8d 05 cb 15 01 00 	lea    0x115cb(%rip),%rax        # 19600 <__PRETTY_FUNCTION__.1>
    8035:	48 89 c1             	mov    %rax,%rcx
    8038:	ba 3d 00 00 00       	mov    $0x3d,%edx
    803d:	48 8d 05 57 11 01 00 	lea    0x11157(%rip),%rax        # 1919b <__PRETTY_FUNCTION__.0+0x13>
    8044:	48 89 c6             	mov    %rax,%rsi
    8047:	48 8d 05 92 11 01 00 	lea    0x11192(%rip),%rax        # 191e0 <__PRETTY_FUNCTION__.0+0x58>
    804e:	48 89 c7             	mov    %rax,%rdi
    8051:	e8 fa a2 ff ff       	call   2350 <__assert_fail@plt>
    8056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    805a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    805e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8062:	48 8d 0d a7 11 01 00 	lea    0x111a7(%rip),%rcx        # 19210 <__PRETTY_FUNCTION__.0+0x88>
    8069:	48 89 ce             	mov    %rcx,%rsi
    806c:	48 89 c7             	mov    %rax,%rdi
    806f:	b8 00 00 00 00       	mov    $0x0,%eax
    8074:	e8 57 a3 ff ff       	call   23d0 <fprintf@plt>
    8079:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    807d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8080:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8084:	89 d6                	mov    %edx,%esi
    8086:	48 89 c7             	mov    %rax,%rdi
    8089:	e8 8e fd ff ff       	call   7e1c <print_indent>
    808e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8092:	48 89 c1             	mov    %rax,%rcx
    8095:	ba 08 00 00 00       	mov    $0x8,%edx
    809a:	be 01 00 00 00       	mov    $0x1,%esi
    809f:	48 8d 05 78 11 01 00 	lea    0x11178(%rip),%rax        # 1921e <__PRETTY_FUNCTION__.0+0x96>
    80a6:	48 89 c7             	mov    %rax,%rdi
    80a9:	e8 e2 a3 ff ff       	call   2490 <fwrite@plt>
    80ae:	8b 45 ec             	mov    -0x14(%rbp),%eax
    80b1:	8d 50 01             	lea    0x1(%rax),%edx
    80b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b8:	48 8b 40 10          	mov    0x10(%rax),%rax
    80bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    80c0:	48 89 ce             	mov    %rcx,%rsi
    80c3:	48 89 c7             	mov    %rax,%rdi
    80c6:	e8 9d fd ff ff       	call   7e68 <list_print>
    80cb:	8b 55 ec             	mov    -0x14(%rbp),%edx
    80ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80d2:	89 d6                	mov    %edx,%esi
    80d4:	48 89 c7             	mov    %rax,%rdi
    80d7:	e8 40 fd ff ff       	call   7e1c <print_indent>
    80dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80e0:	48 89 c1             	mov    %rax,%rcx
    80e3:	ba 0d 00 00 00       	mov    $0xd,%edx
    80e8:	be 01 00 00 00       	mov    $0x1,%esi
    80ed:	48 8d 05 33 11 01 00 	lea    0x11133(%rip),%rax        # 19227 <__PRETTY_FUNCTION__.0+0x9f>
    80f4:	48 89 c7             	mov    %rax,%rdi
    80f7:	e8 94 a3 ff ff       	call   2490 <fwrite@plt>
    80fc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    80ff:	8d 50 01             	lea    0x1(%rax),%edx
    8102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8106:	48 8b 40 18          	mov    0x18(%rax),%rax
    810a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    810e:	48 89 ce             	mov    %rcx,%rsi
    8111:	48 89 c7             	mov    %rax,%rdi
    8114:	e8 4f fd ff ff       	call   7e68 <list_print>
    8119:	8b 55 ec             	mov    -0x14(%rbp),%edx
    811c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8120:	89 d6                	mov    %edx,%esi
    8122:	48 89 c7             	mov    %rax,%rdi
    8125:	e8 f2 fc ff ff       	call   7e1c <print_indent>
    812a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    812e:	48 89 c1             	mov    %rax,%rcx
    8131:	ba 0f 00 00 00       	mov    $0xf,%edx
    8136:	be 01 00 00 00       	mov    $0x1,%esi
    813b:	48 8d 05 f3 10 01 00 	lea    0x110f3(%rip),%rax        # 19235 <__PRETTY_FUNCTION__.0+0xad>
    8142:	48 89 c7             	mov    %rax,%rdi
    8145:	e8 46 a3 ff ff       	call   2490 <fwrite@plt>
    814a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    814d:	8d 50 01             	lea    0x1(%rax),%edx
    8150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8154:	48 8b 40 28          	mov    0x28(%rax),%rax
    8158:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    815c:	48 89 ce             	mov    %rcx,%rsi
    815f:	48 89 c7             	mov    %rax,%rdi
    8162:	e8 01 fd ff ff       	call   7e68 <list_print>
    8167:	8b 55 ec             	mov    -0x14(%rbp),%edx
    816a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    816e:	89 d6                	mov    %edx,%esi
    8170:	48 89 c7             	mov    %rax,%rdi
    8173:	e8 a4 fc ff ff       	call   7e1c <print_indent>
    8178:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    817c:	48 89 c1             	mov    %rax,%rcx
    817f:	ba 08 00 00 00       	mov    $0x8,%edx
    8184:	be 01 00 00 00       	mov    $0x1,%esi
    8189:	48 8d 05 b5 10 01 00 	lea    0x110b5(%rip),%rax        # 19245 <__PRETTY_FUNCTION__.0+0xbd>
    8190:	48 89 c7             	mov    %rax,%rdi
    8193:	e8 f8 a2 ff ff       	call   2490 <fwrite@plt>
    8198:	8b 45 ec             	mov    -0x14(%rbp),%eax
    819b:	8d 50 01             	lea    0x1(%rax),%edx
    819e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a2:	48 8b 40 30          	mov    0x30(%rax),%rax
    81a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    81aa:	48 89 ce             	mov    %rcx,%rsi
    81ad:	48 89 c7             	mov    %rax,%rdi
    81b0:	e8 74 03 00 00       	call   8529 <stmt_print>
    81b5:	e9 6c 03 00 00       	jmp    8526 <tree_print+0x560>
    81ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81be:	8b 40 08             	mov    0x8(%rax),%eax
    81c1:	83 f8 05             	cmp    $0x5,%eax
    81c4:	74 0a                	je     81d0 <tree_print+0x20a>
    81c6:	83 f8 06             	cmp    $0x6,%eax
    81c9:	74 3e                	je     8209 <tree_print+0x243>
    81cb:	e9 c3 00 00 00       	jmp    8293 <tree_print+0x2cd>
    81d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81d4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    81d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    81dc:	48 8d 0d 6b 10 01 00 	lea    0x1106b(%rip),%rcx        # 1924e <__PRETTY_FUNCTION__.0+0xc6>
    81e3:	48 89 ce             	mov    %rcx,%rsi
    81e6:	48 89 c7             	mov    %rax,%rdi
    81e9:	b8 00 00 00 00       	mov    $0x0,%eax
    81ee:	e8 dd a1 ff ff       	call   23d0 <fprintf@plt>
    81f3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    81f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    81fa:	89 d6                	mov    %edx,%esi
    81fc:	48 89 c7             	mov    %rax,%rdi
    81ff:	e8 18 fc ff ff       	call   7e1c <print_indent>
    8204:	e9 b7 00 00 00       	jmp    82c0 <tree_print+0x2fa>
    8209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    820d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8211:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8215:	48 8d 0d 43 10 01 00 	lea    0x11043(%rip),%rcx        # 1925f <__PRETTY_FUNCTION__.0+0xd7>
    821c:	48 89 ce             	mov    %rcx,%rsi
    821f:	48 89 c7             	mov    %rax,%rdi
    8222:	b8 00 00 00 00       	mov    $0x0,%eax
    8227:	e8 a4 a1 ff ff       	call   23d0 <fprintf@plt>
    822c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    822f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8233:	89 d6                	mov    %edx,%esi
    8235:	48 89 c7             	mov    %rax,%rdi
    8238:	e8 df fb ff ff       	call   7e1c <print_indent>
    823d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8241:	48 8b 40 28          	mov    0x28(%rax),%rax
    8245:	48 85 c0             	test   %rax,%rax
    8248:	74 25                	je     826f <tree_print+0x2a9>
    824a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    824e:	48 8b 50 28          	mov    0x28(%rax),%rdx
    8252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8256:	48 8d 0d 12 10 01 00 	lea    0x11012(%rip),%rcx        # 1926f <__PRETTY_FUNCTION__.0+0xe7>
    825d:	48 89 ce             	mov    %rcx,%rsi
    8260:	48 89 c7             	mov    %rax,%rdi
    8263:	b8 00 00 00 00       	mov    $0x0,%eax
    8268:	e8 63 a1 ff ff       	call   23d0 <fprintf@plt>
    826d:	eb 51                	jmp    82c0 <tree_print+0x2fa>
    826f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8273:	8b 50 20             	mov    0x20(%rax),%edx
    8276:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    827a:	48 8d 0d fc 0f 01 00 	lea    0x10ffc(%rip),%rcx        # 1927d <__PRETTY_FUNCTION__.0+0xf5>
    8281:	48 89 ce             	mov    %rcx,%rsi
    8284:	48 89 c7             	mov    %rax,%rdi
    8287:	b8 00 00 00 00       	mov    $0x0,%eax
    828c:	e8 3f a1 ff ff       	call   23d0 <fprintf@plt>
    8291:	eb 2d                	jmp    82c0 <tree_print+0x2fa>
    8293:	48 8b 05 c6 8d 01 00 	mov    0x18dc6(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    829a:	48 89 c1             	mov    %rax,%rcx
    829d:	ba 1d 00 00 00       	mov    $0x1d,%edx
    82a2:	be 01 00 00 00       	mov    $0x1,%esi
    82a7:	48 8d 05 dd 0f 01 00 	lea    0x10fdd(%rip),%rax        # 1928b <__PRETTY_FUNCTION__.0+0x103>
    82ae:	48 89 c7             	mov    %rax,%rdi
    82b1:	e8 da a1 ff ff       	call   2490 <fwrite@plt>
    82b6:	bf 01 00 00 00       	mov    $0x1,%edi
    82bb:	e8 c0 a1 ff ff       	call   2480 <exit@plt>
    82c0:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    82c4:	8b 55 ec             	mov    -0x14(%rbp),%edx
    82c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82cb:	89 d6                	mov    %edx,%esi
    82cd:	48 89 c7             	mov    %rax,%rdi
    82d0:	e8 47 fb ff ff       	call   7e1c <print_indent>
    82d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82d9:	48 89 c1             	mov    %rax,%rcx
    82dc:	ba 08 00 00 00       	mov    $0x8,%edx
    82e1:	be 01 00 00 00       	mov    $0x1,%esi
    82e6:	48 8d 05 31 0f 01 00 	lea    0x10f31(%rip),%rax        # 1921e <__PRETTY_FUNCTION__.0+0x96>
    82ed:	48 89 c7             	mov    %rax,%rdi
    82f0:	e8 9b a1 ff ff       	call   2490 <fwrite@plt>
    82f5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    82f8:	8d 50 01             	lea    0x1(%rax),%edx
    82fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ff:	48 8b 40 18          	mov    0x18(%rax),%rax
    8303:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8307:	48 89 ce             	mov    %rcx,%rsi
    830a:	48 89 c7             	mov    %rax,%rdi
    830d:	e8 56 fb ff ff       	call   7e68 <list_print>
    8312:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8315:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8319:	89 d6                	mov    %edx,%esi
    831b:	48 89 c7             	mov    %rax,%rdi
    831e:	e8 f9 fa ff ff       	call   7e1c <print_indent>
    8323:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8327:	48 89 c1             	mov    %rax,%rcx
    832a:	ba 0d 00 00 00       	mov    $0xd,%edx
    832f:	be 01 00 00 00       	mov    $0x1,%esi
    8334:	48 8d 05 ec 0e 01 00 	lea    0x10eec(%rip),%rax        # 19227 <__PRETTY_FUNCTION__.0+0x9f>
    833b:	48 89 c7             	mov    %rax,%rdi
    833e:	e8 4d a1 ff ff       	call   2490 <fwrite@plt>
    8343:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8346:	8d 50 01             	lea    0x1(%rax),%edx
    8349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    834d:	48 8b 40 38          	mov    0x38(%rax),%rax
    8351:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8355:	48 89 ce             	mov    %rcx,%rsi
    8358:	48 89 c7             	mov    %rax,%rdi
    835b:	e8 08 fb ff ff       	call   7e68 <list_print>
    8360:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8363:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8367:	89 d6                	mov    %edx,%esi
    8369:	48 89 c7             	mov    %rax,%rdi
    836c:	e8 ab fa ff ff       	call   7e1c <print_indent>
    8371:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8375:	48 89 c1             	mov    %rax,%rcx
    8378:	ba 0f 00 00 00       	mov    $0xf,%edx
    837d:	be 01 00 00 00       	mov    $0x1,%esi
    8382:	48 8d 05 ac 0e 01 00 	lea    0x10eac(%rip),%rax        # 19235 <__PRETTY_FUNCTION__.0+0xad>
    8389:	48 89 c7             	mov    %rax,%rdi
    838c:	e8 ff a0 ff ff       	call   2490 <fwrite@plt>
    8391:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8394:	8d 50 01             	lea    0x1(%rax),%edx
    8397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    839b:	48 8b 40 40          	mov    0x40(%rax),%rax
    839f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83a3:	48 89 ce             	mov    %rcx,%rsi
    83a6:	48 89 c7             	mov    %rax,%rdi
    83a9:	e8 ba fa ff ff       	call   7e68 <list_print>
    83ae:	8b 55 ec             	mov    -0x14(%rbp),%edx
    83b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    83b5:	89 d6                	mov    %edx,%esi
    83b7:	48 89 c7             	mov    %rax,%rdi
    83ba:	e8 5d fa ff ff       	call   7e1c <print_indent>
    83bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    83c3:	48 89 c1             	mov    %rax,%rcx
    83c6:	ba 08 00 00 00       	mov    $0x8,%edx
    83cb:	be 01 00 00 00       	mov    $0x1,%esi
    83d0:	48 8d 05 6e 0e 01 00 	lea    0x10e6e(%rip),%rax        # 19245 <__PRETTY_FUNCTION__.0+0xbd>
    83d7:	48 89 c7             	mov    %rax,%rdi
    83da:	e8 b1 a0 ff ff       	call   2490 <fwrite@plt>
    83df:	8b 45 ec             	mov    -0x14(%rbp),%eax
    83e2:	8d 50 01             	lea    0x1(%rax),%edx
    83e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83e9:	48 8b 40 48          	mov    0x48(%rax),%rax
    83ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83f1:	48 89 ce             	mov    %rcx,%rsi
    83f4:	48 89 c7             	mov    %rax,%rdi
    83f7:	e8 2d 01 00 00       	call   8529 <stmt_print>
    83fc:	e9 25 01 00 00       	jmp    8526 <tree_print+0x560>
    8401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8405:	48 8b 40 18          	mov    0x18(%rax),%rax
    8409:	48 85 c0             	test   %rax,%rax
    840c:	74 25                	je     8433 <tree_print+0x46d>
    840e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8412:	48 8b 50 18          	mov    0x18(%rax),%rdx
    8416:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    841a:	48 8d 0d 88 0e 01 00 	lea    0x10e88(%rip),%rcx        # 192a9 <__PRETTY_FUNCTION__.0+0x121>
    8421:	48 89 ce             	mov    %rcx,%rsi
    8424:	48 89 c7             	mov    %rax,%rdi
    8427:	b8 00 00 00 00       	mov    $0x0,%eax
    842c:	e8 9f 9f ff ff       	call   23d0 <fprintf@plt>
    8431:	eb 22                	jmp    8455 <tree_print+0x48f>
    8433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8437:	8b 50 10             	mov    0x10(%rax),%edx
    843a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    843e:	48 8d 0d 7a 0e 01 00 	lea    0x10e7a(%rip),%rcx        # 192bf <__PRETTY_FUNCTION__.0+0x137>
    8445:	48 89 ce             	mov    %rcx,%rsi
    8448:	48 89 c7             	mov    %rax,%rdi
    844b:	b8 00 00 00 00       	mov    $0x0,%eax
    8450:	e8 7b 9f ff ff       	call   23d0 <fprintf@plt>
    8455:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8458:	8d 50 01             	lea    0x1(%rax),%edx
    845b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    845f:	48 8b 40 08          	mov    0x8(%rax),%rax
    8463:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8467:	48 89 ce             	mov    %rcx,%rsi
    846a:	48 89 c7             	mov    %rax,%rdi
    846d:	e8 f6 f9 ff ff       	call   7e68 <list_print>
    8472:	e9 af 00 00 00       	jmp    8526 <tree_print+0x560>
    8477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    847b:	8b 70 18             	mov    0x18(%rax),%esi
    847e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8482:	8b 48 14             	mov    0x14(%rax),%ecx
    8485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8489:	8b 50 10             	mov    0x10(%rax),%edx
    848c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8490:	41 89 f0             	mov    %esi,%r8d
    8493:	48 8d 35 3e 0e 01 00 	lea    0x10e3e(%rip),%rsi        # 192d8 <__PRETTY_FUNCTION__.0+0x150>
    849a:	48 89 c7             	mov    %rax,%rdi
    849d:	b8 00 00 00 00       	mov    $0x0,%eax
    84a2:	e8 29 9f ff ff       	call   23d0 <fprintf@plt>
    84a7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    84aa:	8d 50 01             	lea    0x1(%rax),%edx
    84ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b1:	48 8b 40 08          	mov    0x8(%rax),%rax
    84b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    84b9:	48 89 ce             	mov    %rcx,%rsi
    84bc:	48 89 c7             	mov    %rax,%rdi
    84bf:	e8 a4 f9 ff ff       	call   7e68 <list_print>
    84c4:	eb 60                	jmp    8526 <tree_print+0x560>
    84c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ca:	8b 70 14             	mov    0x14(%rax),%esi
    84cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d1:	8b 48 10             	mov    0x10(%rax),%ecx
    84d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    84dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84e0:	41 89 f0             	mov    %esi,%r8d
    84e3:	48 8d 35 15 0e 01 00 	lea    0x10e15(%rip),%rsi        # 192ff <__PRETTY_FUNCTION__.0+0x177>
    84ea:	48 89 c7             	mov    %rax,%rdi
    84ed:	b8 00 00 00 00       	mov    $0x0,%eax
    84f2:	e8 d9 9e ff ff       	call   23d0 <fprintf@plt>
    84f7:	eb 2d                	jmp    8526 <tree_print+0x560>
    84f9:	48 8b 05 60 8b 01 00 	mov    0x18b60(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    8500:	48 89 c1             	mov    %rax,%rcx
    8503:	ba 18 00 00 00       	mov    $0x18,%edx
    8508:	be 01 00 00 00       	mov    $0x1,%esi
    850d:	48 8d 05 03 0e 01 00 	lea    0x10e03(%rip),%rax        # 19317 <__PRETTY_FUNCTION__.0+0x18f>
    8514:	48 89 c7             	mov    %rax,%rdi
    8517:	e8 74 9f ff ff       	call   2490 <fwrite@plt>
    851c:	bf 01 00 00 00       	mov    $0x1,%edi
    8521:	e8 5a 9f ff ff       	call   2480 <exit@plt>
    8526:	90                   	nop
    8527:	c9                   	leave
    8528:	c3                   	ret

0000000000008529 <stmt_print>:
    8529:	f3 0f 1e fa          	endbr64
    852d:	55                   	push   %rbp
    852e:	48 89 e5             	mov    %rsp,%rbp
    8531:	48 83 ec 20          	sub    $0x20,%rsp
    8535:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8539:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    853d:	89 55 ec             	mov    %edx,-0x14(%rbp)
    8540:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8543:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8547:	89 d6                	mov    %edx,%esi
    8549:	48 89 c7             	mov    %rax,%rdi
    854c:	e8 cb f8 ff ff       	call   7e1c <print_indent>
    8551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8555:	8b 40 04             	mov    0x4(%rax),%eax
    8558:	83 f8 08             	cmp    $0x8,%eax
    855b:	0f 87 bb 04 00 00    	ja     8a1c <stmt_print+0x4f3>
    8561:	89 c0                	mov    %eax,%eax
    8563:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    856a:	00
    856b:	48 8d 05 9e 0e 01 00 	lea    0x10e9e(%rip),%rax        # 19410 <__PRETTY_FUNCTION__.0+0x288>
    8572:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    8575:	48 98                	cltq
    8577:	48 8d 15 92 0e 01 00 	lea    0x10e92(%rip),%rdx        # 19410 <__PRETTY_FUNCTION__.0+0x288>
    857e:	48 01 d0             	add    %rdx,%rax
    8581:	3e ff e0             	notrack jmp *%rax
    8584:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8588:	48 89 c1             	mov    %rax,%rcx
    858b:	ba 0d 00 00 00       	mov    $0xd,%edx
    8590:	be 01 00 00 00       	mov    $0x1,%esi
    8595:	48 8d 05 b4 0d 01 00 	lea    0x10db4(%rip),%rax        # 19350 <__PRETTY_FUNCTION__.0+0x1c8>
    859c:	48 89 c7             	mov    %rax,%rdi
    859f:	e8 ec 9e ff ff       	call   2490 <fwrite@plt>
    85a4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    85a8:	8b 55 ec             	mov    -0x14(%rbp),%edx
    85ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    85af:	89 d6                	mov    %edx,%esi
    85b1:	48 89 c7             	mov    %rax,%rdi
    85b4:	e8 63 f8 ff ff       	call   7e1c <print_indent>
    85b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    85bd:	48 89 c1             	mov    %rax,%rcx
    85c0:	ba 07 00 00 00       	mov    $0x7,%edx
    85c5:	be 01 00 00 00       	mov    $0x1,%esi
    85ca:	48 8d 05 8d 0d 01 00 	lea    0x10d8d(%rip),%rax        # 1935e <__PRETTY_FUNCTION__.0+0x1d6>
    85d1:	48 89 c7             	mov    %rax,%rdi
    85d4:	e8 b7 9e ff ff       	call   2490 <fwrite@plt>
    85d9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    85dc:	8d 50 01             	lea    0x1(%rax),%edx
    85df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85e3:	48 8b 40 08          	mov    0x8(%rax),%rax
    85e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    85eb:	48 89 ce             	mov    %rcx,%rsi
    85ee:	48 89 c7             	mov    %rax,%rdi
    85f1:	e8 57 04 00 00       	call   8a4d <expr_print>
    85f6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    85f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    85fd:	89 d6                	mov    %edx,%esi
    85ff:	48 89 c7             	mov    %rax,%rdi
    8602:	e8 15 f8 ff ff       	call   7e1c <print_indent>
    8607:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    860b:	48 89 c1             	mov    %rax,%rcx
    860e:	ba 08 00 00 00       	mov    $0x8,%edx
    8613:	be 01 00 00 00       	mov    $0x1,%esi
    8618:	48 8d 05 47 0d 01 00 	lea    0x10d47(%rip),%rax        # 19366 <__PRETTY_FUNCTION__.0+0x1de>
    861f:	48 89 c7             	mov    %rax,%rdi
    8622:	e8 69 9e ff ff       	call   2490 <fwrite@plt>
    8627:	8b 45 ec             	mov    -0x14(%rbp),%eax
    862a:	8d 50 01             	lea    0x1(%rax),%edx
    862d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8631:	48 8b 40 10          	mov    0x10(%rax),%rax
    8635:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8639:	48 89 ce             	mov    %rcx,%rsi
    863c:	48 89 c7             	mov    %rax,%rdi
    863f:	e8 09 04 00 00       	call   8a4d <expr_print>
    8644:	e9 01 04 00 00       	jmp    8a4a <stmt_print+0x521>
    8649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    864d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8651:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8655:	48 8d 0d 13 0d 01 00 	lea    0x10d13(%rip),%rcx        # 1936f <__PRETTY_FUNCTION__.0+0x1e7>
    865c:	48 89 ce             	mov    %rcx,%rsi
    865f:	48 89 c7             	mov    %rax,%rdi
    8662:	b8 00 00 00 00       	mov    $0x0,%eax
    8667:	e8 64 9d ff ff       	call   23d0 <fprintf@plt>
    866c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8670:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8673:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8677:	89 d6                	mov    %edx,%esi
    8679:	48 89 c7             	mov    %rax,%rdi
    867c:	e8 9b f7 ff ff       	call   7e1c <print_indent>
    8681:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8685:	48 89 c1             	mov    %rax,%rcx
    8688:	ba 08 00 00 00       	mov    $0x8,%edx
    868d:	be 01 00 00 00       	mov    $0x1,%esi
    8692:	48 8d 05 85 0b 01 00 	lea    0x10b85(%rip),%rax        # 1921e <__PRETTY_FUNCTION__.0+0x96>
    8699:	48 89 c7             	mov    %rax,%rdi
    869c:	e8 ef 9d ff ff       	call   2490 <fwrite@plt>
    86a1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    86a4:	8d 50 01             	lea    0x1(%rax),%edx
    86a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ab:	48 8b 40 10          	mov    0x10(%rax),%rax
    86af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    86b3:	48 89 ce             	mov    %rcx,%rsi
    86b6:	48 89 c7             	mov    %rax,%rdi
    86b9:	e8 aa f7 ff ff       	call   7e68 <list_print>
    86be:	e9 87 03 00 00       	jmp    8a4a <stmt_print+0x521>
    86c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86c7:	48 89 c1             	mov    %rax,%rcx
    86ca:	ba 11 00 00 00       	mov    $0x11,%edx
    86cf:	be 01 00 00 00       	mov    $0x1,%esi
    86d4:	48 8d 05 aa 0c 01 00 	lea    0x10caa(%rip),%rax        # 19385 <__PRETTY_FUNCTION__.0+0x1fd>
    86db:	48 89 c7             	mov    %rax,%rdi
    86de:	e8 ad 9d ff ff       	call   2490 <fwrite@plt>
    86e3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    86e6:	8d 50 01             	lea    0x1(%rax),%edx
    86e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ed:	48 8b 40 08          	mov    0x8(%rax),%rax
    86f1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    86f5:	48 89 ce             	mov    %rcx,%rsi
    86f8:	48 89 c7             	mov    %rax,%rdi
    86fb:	e8 68 f7 ff ff       	call   7e68 <list_print>
    8700:	e9 45 03 00 00       	jmp    8a4a <stmt_print+0x521>
    8705:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8709:	48 89 c1             	mov    %rax,%rcx
    870c:	ba 06 00 00 00       	mov    $0x6,%edx
    8711:	be 01 00 00 00       	mov    $0x1,%esi
    8716:	48 8d 05 7a 0c 01 00 	lea    0x10c7a(%rip),%rax        # 19397 <__PRETTY_FUNCTION__.0+0x20f>
    871d:	48 89 c7             	mov    %rax,%rdi
    8720:	e8 6b 9d ff ff       	call   2490 <fwrite@plt>
    8725:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8728:	8d 50 01             	lea    0x1(%rax),%edx
    872b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    872f:	48 8b 40 08          	mov    0x8(%rax),%rax
    8733:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8737:	48 89 ce             	mov    %rcx,%rsi
    873a:	48 89 c7             	mov    %rax,%rdi
    873d:	e8 0b 03 00 00       	call   8a4d <expr_print>
    8742:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8745:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8749:	89 d6                	mov    %edx,%esi
    874b:	48 89 c7             	mov    %rax,%rdi
    874e:	e8 c9 f6 ff ff       	call   7e1c <print_indent>
    8753:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8757:	48 89 c1             	mov    %rax,%rcx
    875a:	ba 08 00 00 00       	mov    $0x8,%edx
    875f:	be 01 00 00 00       	mov    $0x1,%esi
    8764:	48 8d 05 33 0c 01 00 	lea    0x10c33(%rip),%rax        # 1939e <__PRETTY_FUNCTION__.0+0x216>
    876b:	48 89 c7             	mov    %rax,%rdi
    876e:	e8 1d 9d ff ff       	call   2490 <fwrite@plt>
    8773:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8776:	8d 50 01             	lea    0x1(%rax),%edx
    8779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    877d:	48 8b 40 10          	mov    0x10(%rax),%rax
    8781:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8785:	48 89 ce             	mov    %rcx,%rsi
    8788:	48 89 c7             	mov    %rax,%rdi
    878b:	e8 99 fd ff ff       	call   8529 <stmt_print>
    8790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8794:	48 8b 40 18          	mov    0x18(%rax),%rax
    8798:	48 85 c0             	test   %rax,%rax
    879b:	0f 84 a8 02 00 00    	je     8a49 <stmt_print+0x520>
    87a1:	8b 55 ec             	mov    -0x14(%rbp),%edx
    87a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    87a8:	89 d6                	mov    %edx,%esi
    87aa:	48 89 c7             	mov    %rax,%rdi
    87ad:	e8 6a f6 ff ff       	call   7e1c <print_indent>
    87b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    87b6:	48 89 c1             	mov    %rax,%rcx
    87b9:	ba 08 00 00 00       	mov    $0x8,%edx
    87be:	be 01 00 00 00       	mov    $0x1,%esi
    87c3:	48 8d 05 dd 0b 01 00 	lea    0x10bdd(%rip),%rax        # 193a7 <__PRETTY_FUNCTION__.0+0x21f>
    87ca:	48 89 c7             	mov    %rax,%rdi
    87cd:	e8 be 9c ff ff       	call   2490 <fwrite@plt>
    87d2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    87d5:	8d 50 01             	lea    0x1(%rax),%edx
    87d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87dc:	48 8b 40 18          	mov    0x18(%rax),%rax
    87e0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    87e4:	48 89 ce             	mov    %rcx,%rsi
    87e7:	48 89 c7             	mov    %rax,%rdi
    87ea:	e8 3a fd ff ff       	call   8529 <stmt_print>
    87ef:	e9 55 02 00 00       	jmp    8a49 <stmt_print+0x520>
    87f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    87f8:	48 89 c1             	mov    %rax,%rcx
    87fb:	ba 09 00 00 00       	mov    $0x9,%edx
    8800:	be 01 00 00 00       	mov    $0x1,%esi
    8805:	48 8d 05 a4 0b 01 00 	lea    0x10ba4(%rip),%rax        # 193b0 <__PRETTY_FUNCTION__.0+0x228>
    880c:	48 89 c7             	mov    %rax,%rdi
    880f:	e8 7c 9c ff ff       	call   2490 <fwrite@plt>
    8814:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8817:	8d 50 01             	lea    0x1(%rax),%edx
    881a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    881e:	48 8b 40 08          	mov    0x8(%rax),%rax
    8822:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8826:	48 89 ce             	mov    %rcx,%rsi
    8829:	48 89 c7             	mov    %rax,%rdi
    882c:	e8 1c 02 00 00       	call   8a4d <expr_print>
    8831:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8834:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8838:	89 d6                	mov    %edx,%esi
    883a:	48 89 c7             	mov    %rax,%rdi
    883d:	e8 da f5 ff ff       	call   7e1c <print_indent>
    8842:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8846:	48 89 c1             	mov    %rax,%rcx
    8849:	ba 06 00 00 00       	mov    $0x6,%edx
    884e:	be 01 00 00 00       	mov    $0x1,%esi
    8853:	48 8d 05 60 0b 01 00 	lea    0x10b60(%rip),%rax        # 193ba <__PRETTY_FUNCTION__.0+0x232>
    885a:	48 89 c7             	mov    %rax,%rdi
    885d:	e8 2e 9c ff ff       	call   2490 <fwrite@plt>
    8862:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8865:	8d 50 01             	lea    0x1(%rax),%edx
    8868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8870:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8874:	48 89 ce             	mov    %rcx,%rsi
    8877:	48 89 c7             	mov    %rax,%rdi
    887a:	e8 aa fc ff ff       	call   8529 <stmt_print>
    887f:	e9 c6 01 00 00       	jmp    8a4a <stmt_print+0x521>
    8884:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8888:	48 89 c1             	mov    %rax,%rcx
    888b:	ba 07 00 00 00       	mov    $0x7,%edx
    8890:	be 01 00 00 00       	mov    $0x1,%esi
    8895:	48 8d 05 25 0b 01 00 	lea    0x10b25(%rip),%rax        # 193c1 <__PRETTY_FUNCTION__.0+0x239>
    889c:	48 89 c7             	mov    %rax,%rdi
    889f:	e8 ec 9b ff ff       	call   2490 <fwrite@plt>
    88a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88a8:	8b 40 08             	mov    0x8(%rax),%eax
    88ab:	83 f8 06             	cmp    $0x6,%eax
    88ae:	74 07                	je     88b7 <stmt_print+0x38e>
    88b0:	83 f8 07             	cmp    $0x7,%eax
    88b3:	74 21                	je     88d6 <stmt_print+0x3ad>
    88b5:	eb 3e                	jmp    88f5 <stmt_print+0x3cc>
    88b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    88ba:	8d 50 01             	lea    0x1(%rax),%edx
    88bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88c1:	48 8b 40 20          	mov    0x20(%rax),%rax
    88c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    88c9:	48 89 ce             	mov    %rcx,%rsi
    88cc:	48 89 c7             	mov    %rax,%rdi
    88cf:	e8 79 01 00 00       	call   8a4d <expr_print>
    88d4:	eb 4c                	jmp    8922 <stmt_print+0x3f9>
    88d6:	8b 45 ec             	mov    -0x14(%rbp),%eax
    88d9:	8d 50 01             	lea    0x1(%rax),%edx
    88dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e0:	48 8b 40 20          	mov    0x20(%rax),%rax
    88e4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    88e8:	48 89 ce             	mov    %rcx,%rsi
    88eb:	48 89 c7             	mov    %rax,%rdi
    88ee:	e8 36 fc ff ff       	call   8529 <stmt_print>
    88f3:	eb 2d                	jmp    8922 <stmt_print+0x3f9>
    88f5:	48 8b 05 64 87 01 00 	mov    0x18764(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    88fc:	48 89 c1             	mov    %rax,%rcx
    88ff:	ba 16 00 00 00       	mov    $0x16,%edx
    8904:	be 01 00 00 00       	mov    $0x1,%esi
    8909:	48 8d 05 b9 0a 01 00 	lea    0x10ab9(%rip),%rax        # 193c9 <__PRETTY_FUNCTION__.0+0x241>
    8910:	48 89 c7             	mov    %rax,%rdi
    8913:	e8 78 9b ff ff       	call   2490 <fwrite@plt>
    8918:	bf 01 00 00 00       	mov    $0x1,%edi
    891d:	e8 5e 9b ff ff       	call   2480 <exit@plt>
    8922:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8929:	89 d6                	mov    %edx,%esi
    892b:	48 89 c7             	mov    %rax,%rdi
    892e:	e8 e9 f4 ff ff       	call   7e1c <print_indent>
    8933:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8937:	48 89 c1             	mov    %rax,%rcx
    893a:	ba 06 00 00 00       	mov    $0x6,%edx
    893f:	be 01 00 00 00       	mov    $0x1,%esi
    8944:	48 8d 05 95 0a 01 00 	lea    0x10a95(%rip),%rax        # 193e0 <__PRETTY_FUNCTION__.0+0x258>
    894b:	48 89 c7             	mov    %rax,%rdi
    894e:	e8 3d 9b ff ff       	call   2490 <fwrite@plt>
    8953:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8956:	8d 50 01             	lea    0x1(%rax),%edx
    8959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    895d:	48 8b 40 10          	mov    0x10(%rax),%rax
    8961:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8965:	48 89 ce             	mov    %rcx,%rsi
    8968:	48 89 c7             	mov    %rax,%rdi
    896b:	e8 dd 00 00 00       	call   8a4d <expr_print>
    8970:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8973:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8977:	89 d6                	mov    %edx,%esi
    8979:	48 89 c7             	mov    %rax,%rdi
    897c:	e8 9b f4 ff ff       	call   7e1c <print_indent>
    8981:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8985:	48 89 c1             	mov    %rax,%rcx
    8988:	ba 06 00 00 00       	mov    $0x6,%edx
    898d:	be 01 00 00 00       	mov    $0x1,%esi
    8992:	48 8d 05 21 0a 01 00 	lea    0x10a21(%rip),%rax        # 193ba <__PRETTY_FUNCTION__.0+0x232>
    8999:	48 89 c7             	mov    %rax,%rdi
    899c:	e8 ef 9a ff ff       	call   2490 <fwrite@plt>
    89a1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    89a4:	8d 50 01             	lea    0x1(%rax),%edx
    89a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ab:	48 8b 40 18          	mov    0x18(%rax),%rax
    89af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    89b3:	48 89 ce             	mov    %rcx,%rsi
    89b6:	48 89 c7             	mov    %rax,%rdi
    89b9:	e8 6b fb ff ff       	call   8529 <stmt_print>
    89be:	e9 87 00 00 00       	jmp    8a4a <stmt_print+0x521>
    89c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89c7:	48 89 c1             	mov    %rax,%rcx
    89ca:	ba 0d 00 00 00       	mov    $0xd,%edx
    89cf:	be 01 00 00 00       	mov    $0x1,%esi
    89d4:	48 8d 05 0c 0a 01 00 	lea    0x10a0c(%rip),%rax        # 193e7 <__PRETTY_FUNCTION__.0+0x25f>
    89db:	48 89 c7             	mov    %rax,%rdi
    89de:	e8 ad 9a ff ff       	call   2490 <fwrite@plt>
    89e3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    89e6:	8d 50 01             	lea    0x1(%rax),%edx
    89e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89ed:	89 d6                	mov    %edx,%esi
    89ef:	48 89 c7             	mov    %rax,%rdi
    89f2:	e8 25 f4 ff ff       	call   7e1c <print_indent>
    89f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89fb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    89ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a03:	48 8d 0d b3 07 01 00 	lea    0x107b3(%rip),%rcx        # 191bd <__PRETTY_FUNCTION__.0+0x35>
    8a0a:	48 89 ce             	mov    %rcx,%rsi
    8a0d:	48 89 c7             	mov    %rax,%rdi
    8a10:	b8 00 00 00 00       	mov    $0x0,%eax
    8a15:	e8 b6 99 ff ff       	call   23d0 <fprintf@plt>
    8a1a:	eb 2e                	jmp    8a4a <stmt_print+0x521>
    8a1c:	48 8b 05 3d 86 01 00 	mov    0x1863d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    8a23:	48 89 c1             	mov    %rax,%rcx
    8a26:	ba 18 00 00 00       	mov    $0x18,%edx
    8a2b:	be 01 00 00 00       	mov    $0x1,%esi
    8a30:	48 8d 05 be 09 01 00 	lea    0x109be(%rip),%rax        # 193f5 <__PRETTY_FUNCTION__.0+0x26d>
    8a37:	48 89 c7             	mov    %rax,%rdi
    8a3a:	e8 51 9a ff ff       	call   2490 <fwrite@plt>
    8a3f:	bf 01 00 00 00       	mov    $0x1,%edi
    8a44:	e8 37 9a ff ff       	call   2480 <exit@plt>
    8a49:	90                   	nop
    8a4a:	90                   	nop
    8a4b:	c9                   	leave
    8a4c:	c3                   	ret

0000000000008a4d <expr_print>:
    8a4d:	f3 0f 1e fa          	endbr64
    8a51:	55                   	push   %rbp
    8a52:	48 89 e5             	mov    %rsp,%rbp
    8a55:	48 83 ec 20          	sub    $0x20,%rsp
    8a59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8a61:	89 55 ec             	mov    %edx,-0x14(%rbp)
    8a64:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8a67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a6b:	89 d6                	mov    %edx,%esi
    8a6d:	48 89 c7             	mov    %rax,%rdi
    8a70:	e8 a7 f3 ff ff       	call   7e1c <print_indent>
    8a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a79:	8b 40 04             	mov    0x4(%rax),%eax
    8a7c:	83 f8 09             	cmp    $0x9,%eax
    8a7f:	0f 87 5a 04 00 00    	ja     8edf <expr_print+0x492>
    8a85:	89 c0                	mov    %eax,%eax
    8a87:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8a8e:	00
    8a8f:	48 8d 05 5a 0a 01 00 	lea    0x10a5a(%rip),%rax        # 194f0 <__PRETTY_FUNCTION__.0+0x368>
    8a96:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    8a99:	48 98                	cltq
    8a9b:	48 8d 15 4e 0a 01 00 	lea    0x10a4e(%rip),%rdx        # 194f0 <__PRETTY_FUNCTION__.0+0x368>
    8aa2:	48 01 d0             	add    %rdx,%rax
    8aa5:	3e ff e0             	notrack jmp *%rax
    8aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aac:	8b 50 08             	mov    0x8(%rax),%edx
    8aaf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ab3:	48 8d 0d 7a 09 01 00 	lea    0x1097a(%rip),%rcx        # 19434 <__PRETTY_FUNCTION__.0+0x2ac>
    8aba:	48 89 ce             	mov    %rcx,%rsi
    8abd:	48 89 c7             	mov    %rax,%rdi
    8ac0:	b8 00 00 00 00       	mov    $0x0,%eax
    8ac5:	e8 06 99 ff ff       	call   23d0 <fprintf@plt>
    8aca:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8ace:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8ad1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ad5:	89 d6                	mov    %edx,%esi
    8ad7:	48 89 c7             	mov    %rax,%rdi
    8ada:	e8 3d f3 ff ff       	call   7e1c <print_indent>
    8adf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ae3:	48 89 c1             	mov    %rax,%rcx
    8ae6:	ba 08 00 00 00       	mov    $0x8,%edx
    8aeb:	be 01 00 00 00       	mov    $0x1,%esi
    8af0:	48 8d 05 4a 09 01 00 	lea    0x1094a(%rip),%rax        # 19441 <__PRETTY_FUNCTION__.0+0x2b9>
    8af7:	48 89 c7             	mov    %rax,%rdi
    8afa:	e8 91 99 ff ff       	call   2490 <fwrite@plt>
    8aff:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b02:	8d 50 01             	lea    0x1(%rax),%edx
    8b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b09:	48 8b 40 10          	mov    0x10(%rax),%rax
    8b0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b11:	48 89 ce             	mov    %rcx,%rsi
    8b14:	48 89 c7             	mov    %rax,%rdi
    8b17:	e8 31 ff ff ff       	call   8a4d <expr_print>
    8b1c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8b1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b23:	89 d6                	mov    %edx,%esi
    8b25:	48 89 c7             	mov    %rax,%rdi
    8b28:	e8 ef f2 ff ff       	call   7e1c <print_indent>
    8b2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b31:	48 89 c1             	mov    %rax,%rcx
    8b34:	ba 09 00 00 00       	mov    $0x9,%edx
    8b39:	be 01 00 00 00       	mov    $0x1,%esi
    8b3e:	48 8d 05 05 09 01 00 	lea    0x10905(%rip),%rax        # 1944a <__PRETTY_FUNCTION__.0+0x2c2>
    8b45:	48 89 c7             	mov    %rax,%rdi
    8b48:	e8 43 99 ff ff       	call   2490 <fwrite@plt>
    8b4d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b50:	8d 50 01             	lea    0x1(%rax),%edx
    8b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b57:	48 8b 40 18          	mov    0x18(%rax),%rax
    8b5b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b5f:	48 89 ce             	mov    %rcx,%rsi
    8b62:	48 89 c7             	mov    %rax,%rdi
    8b65:	e8 e3 fe ff ff       	call   8a4d <expr_print>
    8b6a:	e9 9d 03 00 00       	jmp    8f0c <expr_print+0x4bf>
    8b6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b73:	48 89 c1             	mov    %rax,%rcx
    8b76:	ba 08 00 00 00       	mov    $0x8,%edx
    8b7b:	be 01 00 00 00       	mov    $0x1,%esi
    8b80:	48 8d 05 cd 08 01 00 	lea    0x108cd(%rip),%rax        # 19454 <__PRETTY_FUNCTION__.0+0x2cc>
    8b87:	48 89 c7             	mov    %rax,%rdi
    8b8a:	e8 01 99 ff ff       	call   2490 <fwrite@plt>
    8b8f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b92:	8d 50 01             	lea    0x1(%rax),%edx
    8b95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b99:	48 8b 40 08          	mov    0x8(%rax),%rax
    8b9d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ba1:	48 89 ce             	mov    %rcx,%rsi
    8ba4:	48 89 c7             	mov    %rax,%rdi
    8ba7:	e8 a1 fe ff ff       	call   8a4d <expr_print>
    8bac:	e9 5b 03 00 00       	jmp    8f0c <expr_print+0x4bf>
    8bb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb5:	8b 50 08             	mov    0x8(%rax),%edx
    8bb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bbc:	48 8d 0d 9a 08 01 00 	lea    0x1089a(%rip),%rcx        # 1945d <__PRETTY_FUNCTION__.0+0x2d5>
    8bc3:	48 89 ce             	mov    %rcx,%rsi
    8bc6:	48 89 c7             	mov    %rax,%rdi
    8bc9:	b8 00 00 00 00       	mov    $0x0,%eax
    8bce:	e8 fd 97 ff ff       	call   23d0 <fprintf@plt>
    8bd3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8bd7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8bda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bde:	89 d6                	mov    %edx,%esi
    8be0:	48 89 c7             	mov    %rax,%rdi
    8be3:	e8 34 f2 ff ff       	call   7e1c <print_indent>
    8be8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bec:	48 89 c1             	mov    %rax,%rcx
    8bef:	ba 08 00 00 00       	mov    $0x8,%edx
    8bf4:	be 01 00 00 00       	mov    $0x1,%esi
    8bf9:	48 8d 05 41 08 01 00 	lea    0x10841(%rip),%rax        # 19441 <__PRETTY_FUNCTION__.0+0x2b9>
    8c00:	48 89 c7             	mov    %rax,%rdi
    8c03:	e8 88 98 ff ff       	call   2490 <fwrite@plt>
    8c08:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8c0b:	8d 50 01             	lea    0x1(%rax),%edx
    8c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c12:	48 8b 40 10          	mov    0x10(%rax),%rax
    8c16:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c1a:	48 89 ce             	mov    %rcx,%rsi
    8c1d:	48 89 c7             	mov    %rax,%rdi
    8c20:	e8 28 fe ff ff       	call   8a4d <expr_print>
    8c25:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8c28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c2c:	89 d6                	mov    %edx,%esi
    8c2e:	48 89 c7             	mov    %rax,%rdi
    8c31:	e8 e6 f1 ff ff       	call   7e1c <print_indent>
    8c36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c3a:	48 89 c1             	mov    %rax,%rcx
    8c3d:	ba 09 00 00 00       	mov    $0x9,%edx
    8c42:	be 01 00 00 00       	mov    $0x1,%esi
    8c47:	48 8d 05 fc 07 01 00 	lea    0x107fc(%rip),%rax        # 1944a <__PRETTY_FUNCTION__.0+0x2c2>
    8c4e:	48 89 c7             	mov    %rax,%rdi
    8c51:	e8 3a 98 ff ff       	call   2490 <fwrite@plt>
    8c56:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8c59:	8d 50 01             	lea    0x1(%rax),%edx
    8c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c60:	48 8b 40 18          	mov    0x18(%rax),%rax
    8c64:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c68:	48 89 ce             	mov    %rcx,%rsi
    8c6b:	48 89 c7             	mov    %rax,%rdi
    8c6e:	e8 da fd ff ff       	call   8a4d <expr_print>
    8c73:	e9 94 02 00 00       	jmp    8f0c <expr_print+0x4bf>
    8c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c7c:	8b 50 08             	mov    0x8(%rax),%edx
    8c7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c83:	48 8d 0d e0 07 01 00 	lea    0x107e0(%rip),%rcx        # 1946a <__PRETTY_FUNCTION__.0+0x2e2>
    8c8a:	48 89 ce             	mov    %rcx,%rsi
    8c8d:	48 89 c7             	mov    %rax,%rdi
    8c90:	b8 00 00 00 00       	mov    $0x0,%eax
    8c95:	e8 36 97 ff ff       	call   23d0 <fprintf@plt>
    8c9a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8c9e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8ca1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ca5:	89 d6                	mov    %edx,%esi
    8ca7:	48 89 c7             	mov    %rax,%rdi
    8caa:	e8 6d f1 ff ff       	call   7e1c <print_indent>
    8caf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cb3:	48 89 c1             	mov    %rax,%rcx
    8cb6:	ba 08 00 00 00       	mov    $0x8,%edx
    8cbb:	be 01 00 00 00       	mov    $0x1,%esi
    8cc0:	48 8d 05 7a 07 01 00 	lea    0x1077a(%rip),%rax        # 19441 <__PRETTY_FUNCTION__.0+0x2b9>
    8cc7:	48 89 c7             	mov    %rax,%rdi
    8cca:	e8 c1 97 ff ff       	call   2490 <fwrite@plt>
    8ccf:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8cd2:	8d 50 01             	lea    0x1(%rax),%edx
    8cd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd9:	48 8b 40 10          	mov    0x10(%rax),%rax
    8cdd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ce1:	48 89 ce             	mov    %rcx,%rsi
    8ce4:	48 89 c7             	mov    %rax,%rdi
    8ce7:	e8 61 fd ff ff       	call   8a4d <expr_print>
    8cec:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8cef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cf3:	89 d6                	mov    %edx,%esi
    8cf5:	48 89 c7             	mov    %rax,%rdi
    8cf8:	e8 1f f1 ff ff       	call   7e1c <print_indent>
    8cfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d01:	48 89 c1             	mov    %rax,%rcx
    8d04:	ba 09 00 00 00       	mov    $0x9,%edx
    8d09:	be 01 00 00 00       	mov    $0x1,%esi
    8d0e:	48 8d 05 35 07 01 00 	lea    0x10735(%rip),%rax        # 1944a <__PRETTY_FUNCTION__.0+0x2c2>
    8d15:	48 89 c7             	mov    %rax,%rdi
    8d18:	e8 73 97 ff ff       	call   2490 <fwrite@plt>
    8d1d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8d20:	8d 50 01             	lea    0x1(%rax),%edx
    8d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d27:	48 8b 40 18          	mov    0x18(%rax),%rax
    8d2b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d2f:	48 89 ce             	mov    %rcx,%rsi
    8d32:	48 89 c7             	mov    %rax,%rdi
    8d35:	e8 13 fd ff ff       	call   8a4d <expr_print>
    8d3a:	e9 cd 01 00 00       	jmp    8f0c <expr_print+0x4bf>
    8d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d43:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8d47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d4b:	48 8d 0d 25 07 01 00 	lea    0x10725(%rip),%rcx        # 19477 <__PRETTY_FUNCTION__.0+0x2ef>
    8d52:	48 89 ce             	mov    %rcx,%rsi
    8d55:	48 89 c7             	mov    %rax,%rdi
    8d58:	b8 00 00 00 00       	mov    $0x0,%eax
    8d5d:	e8 6e 96 ff ff       	call   23d0 <fprintf@plt>
    8d62:	e9 a5 01 00 00       	jmp    8f0c <expr_print+0x4bf>
    8d67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d6b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8d6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d73:	48 8d 0d 0a 07 01 00 	lea    0x1070a(%rip),%rcx        # 19484 <__PRETTY_FUNCTION__.0+0x2fc>
    8d7a:	48 89 ce             	mov    %rcx,%rsi
    8d7d:	48 89 c7             	mov    %rax,%rdi
    8d80:	b8 00 00 00 00       	mov    $0x0,%eax
    8d85:	e8 46 96 ff ff       	call   23d0 <fprintf@plt>
    8d8a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8d8e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8d91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d95:	89 d6                	mov    %edx,%esi
    8d97:	48 89 c7             	mov    %rax,%rdi
    8d9a:	e8 7d f0 ff ff       	call   7e1c <print_indent>
    8d9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8da3:	48 89 c1             	mov    %rax,%rcx
    8da6:	ba 09 00 00 00       	mov    $0x9,%edx
    8dab:	be 01 00 00 00       	mov    $0x1,%esi
    8db0:	48 8d 05 dd 06 01 00 	lea    0x106dd(%rip),%rax        # 19494 <__PRETTY_FUNCTION__.0+0x30c>
    8db7:	48 89 c7             	mov    %rax,%rdi
    8dba:	e8 d1 96 ff ff       	call   2490 <fwrite@plt>
    8dbf:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8dc2:	8d 50 01             	lea    0x1(%rax),%edx
    8dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dc9:	48 8b 40 10          	mov    0x10(%rax),%rax
    8dcd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8dd1:	48 89 ce             	mov    %rcx,%rsi
    8dd4:	48 89 c7             	mov    %rax,%rdi
    8dd7:	e8 71 fc ff ff       	call   8a4d <expr_print>
    8ddc:	e9 2b 01 00 00       	jmp    8f0c <expr_print+0x4bf>
    8de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8de9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ded:	48 8d 0d aa 06 01 00 	lea    0x106aa(%rip),%rcx        # 1949e <__PRETTY_FUNCTION__.0+0x316>
    8df4:	48 89 ce             	mov    %rcx,%rsi
    8df7:	48 89 c7             	mov    %rax,%rdi
    8dfa:	b8 00 00 00 00       	mov    $0x0,%eax
    8dff:	e8 cc 95 ff ff       	call   23d0 <fprintf@plt>
    8e04:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8e08:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8e0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e0f:	89 d6                	mov    %edx,%esi
    8e11:	48 89 c7             	mov    %rax,%rdi
    8e14:	e8 03 f0 ff ff       	call   7e1c <print_indent>
    8e19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e1d:	48 89 c1             	mov    %rax,%rcx
    8e20:	ba 08 00 00 00       	mov    $0x8,%edx
    8e25:	be 01 00 00 00       	mov    $0x1,%esi
    8e2a:	48 8d 05 ed 03 01 00 	lea    0x103ed(%rip),%rax        # 1921e <__PRETTY_FUNCTION__.0+0x96>
    8e31:	48 89 c7             	mov    %rax,%rdi
    8e34:	e8 57 96 ff ff       	call   2490 <fwrite@plt>
    8e39:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8e3c:	8d 50 01             	lea    0x1(%rax),%edx
    8e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e43:	48 8b 40 10          	mov    0x10(%rax),%rax
    8e47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e4b:	48 89 ce             	mov    %rcx,%rsi
    8e4e:	48 89 c7             	mov    %rax,%rdi
    8e51:	e8 12 f0 ff ff       	call   7e68 <list_print>
    8e56:	e9 b1 00 00 00       	jmp    8f0c <expr_print+0x4bf>
    8e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5f:	8b 50 08             	mov    0x8(%rax),%edx
    8e62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e66:	48 8d 0d 42 06 01 00 	lea    0x10642(%rip),%rcx        # 194af <__PRETTY_FUNCTION__.0+0x327>
    8e6d:	48 89 ce             	mov    %rcx,%rsi
    8e70:	48 89 c7             	mov    %rax,%rdi
    8e73:	b8 00 00 00 00       	mov    $0x0,%eax
    8e78:	e8 53 95 ff ff       	call   23d0 <fprintf@plt>
    8e7d:	e9 8a 00 00 00       	jmp    8f0c <expr_print+0x4bf>
    8e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e86:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
    8e8b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    8e8f:	f3 0f 5a c8          	cvtss2sd %xmm0,%xmm1
    8e93:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    8e98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e9c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    8ea1:	48 8d 15 13 06 01 00 	lea    0x10613(%rip),%rdx        # 194bb <__PRETTY_FUNCTION__.0+0x333>
    8ea8:	48 89 d6             	mov    %rdx,%rsi
    8eab:	48 89 c7             	mov    %rax,%rdi
    8eae:	b8 01 00 00 00       	mov    $0x1,%eax
    8eb3:	e8 18 95 ff ff       	call   23d0 <fprintf@plt>
    8eb8:	eb 52                	jmp    8f0c <expr_print+0x4bf>
    8eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ebe:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8ec2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ec6:	48 8d 0d fa 05 01 00 	lea    0x105fa(%rip),%rcx        # 194c7 <__PRETTY_FUNCTION__.0+0x33f>
    8ecd:	48 89 ce             	mov    %rcx,%rsi
    8ed0:	48 89 c7             	mov    %rax,%rdi
    8ed3:	b8 00 00 00 00       	mov    $0x0,%eax
    8ed8:	e8 f3 94 ff ff       	call   23d0 <fprintf@plt>
    8edd:	eb 2d                	jmp    8f0c <expr_print+0x4bf>
    8edf:	48 8b 05 7a 81 01 00 	mov    0x1817a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    8ee6:	48 89 c1             	mov    %rax,%rcx
    8ee9:	ba 18 00 00 00       	mov    $0x18,%edx
    8eee:	be 01 00 00 00       	mov    $0x1,%esi
    8ef3:	48 8d 05 da 05 01 00 	lea    0x105da(%rip),%rax        # 194d4 <__PRETTY_FUNCTION__.0+0x34c>
    8efa:	48 89 c7             	mov    %rax,%rdi
    8efd:	e8 8e 95 ff ff       	call   2490 <fwrite@plt>
    8f02:	bf 01 00 00 00       	mov    $0x1,%edi
    8f07:	e8 74 95 ff ff       	call   2480 <exit@plt>
    8f0c:	90                   	nop
    8f0d:	c9                   	leave
    8f0e:	c3                   	ret

0000000000008f0f <destroy_list>:
    8f0f:	f3 0f 1e fa          	endbr64
    8f13:	55                   	push   %rbp
    8f14:	48 89 e5             	mov    %rsp,%rbp
    8f17:	48 83 ec 20          	sub    $0x20,%rsp
    8f1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f1f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    8f24:	0f 84 08 01 00 00    	je     9032 <destroy_list+0x123>
    8f2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f2e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8f32:	e9 f0 00 00 00       	jmp    9027 <destroy_list+0x118>
    8f37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f3b:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f3f:	48 85 c0             	test   %rax,%rax
    8f42:	75 28                	jne    8f6c <destroy_list+0x5d>
    8f44:	48 8d 05 c5 06 01 00 	lea    0x106c5(%rip),%rax        # 19610 <__PRETTY_FUNCTION__.0>
    8f4b:	48 89 c1             	mov    %rax,%rcx
    8f4e:	ba 54 01 00 00       	mov    $0x154,%edx
    8f53:	48 8d 05 41 02 01 00 	lea    0x10241(%rip),%rax        # 1919b <__PRETTY_FUNCTION__.0+0x13>
    8f5a:	48 89 c6             	mov    %rax,%rsi
    8f5d:	48 8d 05 48 02 01 00 	lea    0x10248(%rip),%rax        # 191ac <__PRETTY_FUNCTION__.0+0x24>
    8f64:	48 89 c7             	mov    %rax,%rdi
    8f67:	e8 e4 93 ff ff       	call   2350 <__assert_fail@plt>
    8f6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f70:	8b 00                	mov    (%rax),%eax
    8f72:	83 f8 03             	cmp    $0x3,%eax
    8f75:	74 50                	je     8fc7 <destroy_list+0xb8>
    8f77:	83 f8 03             	cmp    $0x3,%eax
    8f7a:	77 5d                	ja     8fd9 <destroy_list+0xca>
    8f7c:	83 f8 02             	cmp    $0x2,%eax
    8f7f:	74 34                	je     8fb5 <destroy_list+0xa6>
    8f81:	83 f8 02             	cmp    $0x2,%eax
    8f84:	77 53                	ja     8fd9 <destroy_list+0xca>
    8f86:	85 c0                	test   %eax,%eax
    8f88:	74 07                	je     8f91 <destroy_list+0x82>
    8f8a:	83 f8 01             	cmp    $0x1,%eax
    8f8d:	74 14                	je     8fa3 <destroy_list+0x94>
    8f8f:	eb 48                	jmp    8fd9 <destroy_list+0xca>
    8f91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f95:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f99:	48 89 c7             	mov    %rax,%rdi
    8f9c:	e8 94 00 00 00       	call   9035 <destroy_tree>
    8fa1:	eb 64                	jmp    9007 <destroy_list+0xf8>
    8fa3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fa7:	48 8b 40 08          	mov    0x8(%rax),%rax
    8fab:	48 89 c7             	mov    %rax,%rdi
    8fae:	e8 1c 02 00 00       	call   91cf <destroy_stmt>
    8fb3:	eb 52                	jmp    9007 <destroy_list+0xf8>
    8fb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fb9:	48 8b 40 08          	mov    0x8(%rax),%rax
    8fbd:	48 89 c7             	mov    %rax,%rdi
    8fc0:	e8 ec 03 00 00       	call   93b1 <destroy_expr>
    8fc5:	eb 40                	jmp    9007 <destroy_list+0xf8>
    8fc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fcb:	48 8b 40 08          	mov    0x8(%rax),%rax
    8fcf:	48 89 c7             	mov    %rax,%rdi
    8fd2:	e8 b9 92 ff ff       	call   2290 <free@plt>
    8fd7:	eb 2e                	jmp    9007 <destroy_list+0xf8>
    8fd9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fdd:	8b 10                	mov    (%rax),%edx
    8fdf:	48 8b 05 7a 80 01 00 	mov    0x1807a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    8fe6:	48 8d 0d 2b 05 01 00 	lea    0x1052b(%rip),%rcx        # 19518 <__PRETTY_FUNCTION__.0+0x390>
    8fed:	48 89 ce             	mov    %rcx,%rsi
    8ff0:	48 89 c7             	mov    %rax,%rdi
    8ff3:	b8 00 00 00 00       	mov    $0x0,%eax
    8ff8:	e8 d3 93 ff ff       	call   23d0 <fprintf@plt>
    8ffd:	bf 01 00 00 00       	mov    $0x1,%edi
    9002:	e8 79 94 ff ff       	call   2480 <exit@plt>
    9007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    900b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    900f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9013:	48 8b 40 10          	mov    0x10(%rax),%rax
    9017:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    901b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    901f:	48 89 c7             	mov    %rax,%rdi
    9022:	e8 69 92 ff ff       	call   2290 <free@plt>
    9027:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    902c:	0f 85 05 ff ff ff    	jne    8f37 <destroy_list+0x28>
    9032:	90                   	nop
    9033:	c9                   	leave
    9034:	c3                   	ret

0000000000009035 <destroy_tree>:
    9035:	f3 0f 1e fa          	endbr64
    9039:	55                   	push   %rbp
    903a:	48 89 e5             	mov    %rsp,%rbp
    903d:	48 83 ec 10          	sub    $0x10,%rsp
    9041:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9049:	8b 40 04             	mov    0x4(%rax),%eax
    904c:	83 f8 07             	cmp    $0x7,%eax
    904f:	0f 87 3d 01 00 00    	ja     9192 <destroy_tree+0x15d>
    9055:	89 c0                	mov    %eax,%eax
    9057:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    905e:	00
    905f:	48 8d 05 ee 04 01 00 	lea    0x104ee(%rip),%rax        # 19554 <__PRETTY_FUNCTION__.0+0x3cc>
    9066:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    9069:	48 98                	cltq
    906b:	48 8d 15 e2 04 01 00 	lea    0x104e2(%rip),%rdx        # 19554 <__PRETTY_FUNCTION__.0+0x3cc>
    9072:	48 01 d0             	add    %rdx,%rax
    9075:	3e ff e0             	notrack jmp *%rax
    9078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    907c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9080:	48 89 c7             	mov    %rax,%rdi
    9083:	e8 08 92 ff ff       	call   2290 <free@plt>
    9088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    908c:	48 8b 40 10          	mov    0x10(%rax),%rax
    9090:	48 89 c7             	mov    %rax,%rdi
    9093:	e8 77 fe ff ff       	call   8f0f <destroy_list>
    9098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909c:	48 8b 40 18          	mov    0x18(%rax),%rax
    90a0:	48 89 c7             	mov    %rax,%rdi
    90a3:	e8 67 fe ff ff       	call   8f0f <destroy_list>
    90a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ac:	48 8b 40 28          	mov    0x28(%rax),%rax
    90b0:	48 89 c7             	mov    %rax,%rdi
    90b3:	e8 57 fe ff ff       	call   8f0f <destroy_list>
    90b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90bc:	48 8b 40 30          	mov    0x30(%rax),%rax
    90c0:	48 89 c7             	mov    %rax,%rdi
    90c3:	e8 07 01 00 00       	call   91cf <destroy_stmt>
    90c8:	e9 f3 00 00 00       	jmp    91c0 <destroy_tree+0x18b>
    90cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90d1:	48 8b 40 10          	mov    0x10(%rax),%rax
    90d5:	48 89 c7             	mov    %rax,%rdi
    90d8:	e8 b3 91 ff ff       	call   2290 <free@plt>
    90dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90e1:	48 8b 40 28          	mov    0x28(%rax),%rax
    90e5:	48 85 c0             	test   %rax,%rax
    90e8:	74 10                	je     90fa <destroy_tree+0xc5>
    90ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ee:	48 8b 40 28          	mov    0x28(%rax),%rax
    90f2:	48 89 c7             	mov    %rax,%rdi
    90f5:	e8 96 91 ff ff       	call   2290 <free@plt>
    90fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90fe:	48 8b 40 18          	mov    0x18(%rax),%rax
    9102:	48 89 c7             	mov    %rax,%rdi
    9105:	e8 05 fe ff ff       	call   8f0f <destroy_list>
    910a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    910e:	48 8b 40 38          	mov    0x38(%rax),%rax
    9112:	48 89 c7             	mov    %rax,%rdi
    9115:	e8 f5 fd ff ff       	call   8f0f <destroy_list>
    911a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    911e:	48 8b 40 40          	mov    0x40(%rax),%rax
    9122:	48 89 c7             	mov    %rax,%rdi
    9125:	e8 e5 fd ff ff       	call   8f0f <destroy_list>
    912a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    912e:	48 8b 40 48          	mov    0x48(%rax),%rax
    9132:	48 89 c7             	mov    %rax,%rdi
    9135:	e8 95 00 00 00       	call   91cf <destroy_stmt>
    913a:	e9 81 00 00 00       	jmp    91c0 <destroy_tree+0x18b>
    913f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9143:	48 8b 40 08          	mov    0x8(%rax),%rax
    9147:	48 89 c7             	mov    %rax,%rdi
    914a:	e8 c0 fd ff ff       	call   8f0f <destroy_list>
    914f:	eb 6f                	jmp    91c0 <destroy_tree+0x18b>
    9151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9155:	48 8b 40 08          	mov    0x8(%rax),%rax
    9159:	48 89 c7             	mov    %rax,%rdi
    915c:	e8 ae fd ff ff       	call   8f0f <destroy_list>
    9161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9165:	48 8b 40 18          	mov    0x18(%rax),%rax
    9169:	48 85 c0             	test   %rax,%rax
    916c:	74 51                	je     91bf <destroy_tree+0x18a>
    916e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9172:	48 8b 40 18          	mov    0x18(%rax),%rax
    9176:	48 89 c7             	mov    %rax,%rdi
    9179:	e8 12 91 ff ff       	call   2290 <free@plt>
    917e:	eb 3f                	jmp    91bf <destroy_tree+0x18a>
    9180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9184:	48 8b 40 08          	mov    0x8(%rax),%rax
    9188:	48 89 c7             	mov    %rax,%rdi
    918b:	e8 00 91 ff ff       	call   2290 <free@plt>
    9190:	eb 2e                	jmp    91c0 <destroy_tree+0x18b>
    9192:	48 8b 05 c7 7e 01 00 	mov    0x17ec7(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    9199:	48 89 c1             	mov    %rax,%rcx
    919c:	ba 1a 00 00 00       	mov    $0x1a,%edx
    91a1:	be 01 00 00 00       	mov    $0x1,%esi
    91a6:	48 8d 05 8b 03 01 00 	lea    0x1038b(%rip),%rax        # 19538 <__PRETTY_FUNCTION__.0+0x3b0>
    91ad:	48 89 c7             	mov    %rax,%rdi
    91b0:	e8 db 92 ff ff       	call   2490 <fwrite@plt>
    91b5:	bf 01 00 00 00       	mov    $0x1,%edi
    91ba:	e8 c1 92 ff ff       	call   2480 <exit@plt>
    91bf:	90                   	nop
    91c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c4:	48 89 c7             	mov    %rax,%rdi
    91c7:	e8 c4 90 ff ff       	call   2290 <free@plt>
    91cc:	90                   	nop
    91cd:	c9                   	leave
    91ce:	c3                   	ret

00000000000091cf <destroy_stmt>:
    91cf:	f3 0f 1e fa          	endbr64
    91d3:	55                   	push   %rbp
    91d4:	48 89 e5             	mov    %rsp,%rbp
    91d7:	48 83 ec 10          	sub    $0x10,%rsp
    91db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e3:	8b 40 04             	mov    0x4(%rax),%eax
    91e6:	83 f8 08             	cmp    $0x8,%eax
    91e9:	0f 87 85 01 00 00    	ja     9374 <destroy_stmt+0x1a5>
    91ef:	89 c0                	mov    %eax,%eax
    91f1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    91f8:	00
    91f9:	48 8d 05 a0 03 01 00 	lea    0x103a0(%rip),%rax        # 195a0 <__PRETTY_FUNCTION__.0+0x418>
    9200:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    9203:	48 98                	cltq
    9205:	48 8d 15 94 03 01 00 	lea    0x10394(%rip),%rdx        # 195a0 <__PRETTY_FUNCTION__.0+0x418>
    920c:	48 01 d0             	add    %rdx,%rax
    920f:	3e ff e0             	notrack jmp *%rax
    9212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9216:	48 8b 40 08          	mov    0x8(%rax),%rax
    921a:	48 89 c7             	mov    %rax,%rdi
    921d:	e8 8f 01 00 00       	call   93b1 <destroy_expr>
    9222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9226:	48 8b 40 10          	mov    0x10(%rax),%rax
    922a:	48 89 c7             	mov    %rax,%rdi
    922d:	e8 7f 01 00 00       	call   93b1 <destroy_expr>
    9232:	e9 6b 01 00 00       	jmp    93a2 <destroy_stmt+0x1d3>
    9237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    923b:	48 8b 40 08          	mov    0x8(%rax),%rax
    923f:	48 89 c7             	mov    %rax,%rdi
    9242:	e8 49 90 ff ff       	call   2290 <free@plt>
    9247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    924b:	48 8b 40 10          	mov    0x10(%rax),%rax
    924f:	48 89 c7             	mov    %rax,%rdi
    9252:	e8 b8 fc ff ff       	call   8f0f <destroy_list>
    9257:	e9 46 01 00 00       	jmp    93a2 <destroy_stmt+0x1d3>
    925c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9260:	48 8b 40 08          	mov    0x8(%rax),%rax
    9264:	48 89 c7             	mov    %rax,%rdi
    9267:	e8 a3 fc ff ff       	call   8f0f <destroy_list>
    926c:	e9 31 01 00 00       	jmp    93a2 <destroy_stmt+0x1d3>
    9271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9275:	48 8b 40 08          	mov    0x8(%rax),%rax
    9279:	48 89 c7             	mov    %rax,%rdi
    927c:	e8 30 01 00 00       	call   93b1 <destroy_expr>
    9281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9285:	48 8b 40 10          	mov    0x10(%rax),%rax
    9289:	48 89 c7             	mov    %rax,%rdi
    928c:	e8 3e ff ff ff       	call   91cf <destroy_stmt>
    9291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9295:	48 8b 40 18          	mov    0x18(%rax),%rax
    9299:	48 85 c0             	test   %rax,%rax
    929c:	0f 84 ff 00 00 00    	je     93a1 <destroy_stmt+0x1d2>
    92a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a6:	48 8b 40 18          	mov    0x18(%rax),%rax
    92aa:	48 89 c7             	mov    %rax,%rdi
    92ad:	e8 1d ff ff ff       	call   91cf <destroy_stmt>
    92b2:	e9 ea 00 00 00       	jmp    93a1 <destroy_stmt+0x1d2>
    92b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92bb:	48 8b 40 08          	mov    0x8(%rax),%rax
    92bf:	48 89 c7             	mov    %rax,%rdi
    92c2:	e8 ea 00 00 00       	call   93b1 <destroy_expr>
    92c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92cb:	48 8b 40 10          	mov    0x10(%rax),%rax
    92cf:	48 89 c7             	mov    %rax,%rdi
    92d2:	e8 f8 fe ff ff       	call   91cf <destroy_stmt>
    92d7:	e9 c6 00 00 00       	jmp    93a2 <destroy_stmt+0x1d3>
    92dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92e0:	8b 40 08             	mov    0x8(%rax),%eax
    92e3:	83 f8 06             	cmp    $0x6,%eax
    92e6:	74 07                	je     92ef <destroy_stmt+0x120>
    92e8:	83 f8 07             	cmp    $0x7,%eax
    92eb:	74 14                	je     9301 <destroy_stmt+0x132>
    92ed:	eb 24                	jmp    9313 <destroy_stmt+0x144>
    92ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92f3:	48 8b 40 20          	mov    0x20(%rax),%rax
    92f7:	48 89 c7             	mov    %rax,%rdi
    92fa:	e8 b2 00 00 00       	call   93b1 <destroy_expr>
    92ff:	eb 3f                	jmp    9340 <destroy_stmt+0x171>
    9301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9305:	48 8b 40 20          	mov    0x20(%rax),%rax
    9309:	48 89 c7             	mov    %rax,%rdi
    930c:	e8 be fe ff ff       	call   91cf <destroy_stmt>
    9311:	eb 2d                	jmp    9340 <destroy_stmt+0x171>
    9313:	48 8b 05 46 7d 01 00 	mov    0x17d46(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    931a:	48 89 c1             	mov    %rax,%rcx
    931d:	ba 25 00 00 00       	mov    $0x25,%edx
    9322:	be 01 00 00 00       	mov    $0x1,%esi
    9327:	48 8d 05 4a 02 01 00 	lea    0x1024a(%rip),%rax        # 19578 <__PRETTY_FUNCTION__.0+0x3f0>
    932e:	48 89 c7             	mov    %rax,%rdi
    9331:	e8 5a 91 ff ff       	call   2490 <fwrite@plt>
    9336:	bf 01 00 00 00       	mov    $0x1,%edi
    933b:	e8 40 91 ff ff       	call   2480 <exit@plt>
    9340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9344:	48 8b 40 10          	mov    0x10(%rax),%rax
    9348:	48 89 c7             	mov    %rax,%rdi
    934b:	e8 61 00 00 00       	call   93b1 <destroy_expr>
    9350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9354:	48 8b 40 18          	mov    0x18(%rax),%rax
    9358:	48 89 c7             	mov    %rax,%rdi
    935b:	e8 6f fe ff ff       	call   91cf <destroy_stmt>
    9360:	eb 40                	jmp    93a2 <destroy_stmt+0x1d3>
    9362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9366:	48 8b 40 08          	mov    0x8(%rax),%rax
    936a:	48 89 c7             	mov    %rax,%rdi
    936d:	e8 1e 8f ff ff       	call   2290 <free@plt>
    9372:	eb 2e                	jmp    93a2 <destroy_stmt+0x1d3>
    9374:	48 8b 05 e5 7c 01 00 	mov    0x17ce5(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    937b:	48 89 c1             	mov    %rax,%rcx
    937e:	ba 18 00 00 00       	mov    $0x18,%edx
    9383:	be 01 00 00 00       	mov    $0x1,%esi
    9388:	48 8d 05 66 00 01 00 	lea    0x10066(%rip),%rax        # 193f5 <__PRETTY_FUNCTION__.0+0x26d>
    938f:	48 89 c7             	mov    %rax,%rdi
    9392:	e8 f9 90 ff ff       	call   2490 <fwrite@plt>
    9397:	bf 01 00 00 00       	mov    $0x1,%edi
    939c:	e8 df 90 ff ff       	call   2480 <exit@plt>
    93a1:	90                   	nop
    93a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a6:	48 89 c7             	mov    %rax,%rdi
    93a9:	e8 e2 8e ff ff       	call   2290 <free@plt>
    93ae:	90                   	nop
    93af:	c9                   	leave
    93b0:	c3                   	ret

00000000000093b1 <destroy_expr>:
    93b1:	f3 0f 1e fa          	endbr64
    93b5:	55                   	push   %rbp
    93b6:	48 89 e5             	mov    %rsp,%rbp
    93b9:	48 83 ec 10          	sub    $0x10,%rsp
    93bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c5:	8b 40 04             	mov    0x4(%rax),%eax
    93c8:	83 f8 09             	cmp    $0x9,%eax
    93cb:	0f 87 12 01 00 00    	ja     94e3 <destroy_expr+0x132>
    93d1:	89 c0                	mov    %eax,%eax
    93d3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    93da:	00
    93db:	48 8d 05 e2 01 01 00 	lea    0x101e2(%rip),%rax        # 195c4 <__PRETTY_FUNCTION__.0+0x43c>
    93e2:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    93e5:	48 98                	cltq
    93e7:	48 8d 15 d6 01 01 00 	lea    0x101d6(%rip),%rdx        # 195c4 <__PRETTY_FUNCTION__.0+0x43c>
    93ee:	48 01 d0             	add    %rdx,%rax
    93f1:	3e ff e0             	notrack jmp *%rax
    93f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f8:	48 8b 40 10          	mov    0x10(%rax),%rax
    93fc:	48 89 c7             	mov    %rax,%rdi
    93ff:	e8 ad ff ff ff       	call   93b1 <destroy_expr>
    9404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9408:	48 8b 40 18          	mov    0x18(%rax),%rax
    940c:	48 89 c7             	mov    %rax,%rdi
    940f:	e8 9d ff ff ff       	call   93b1 <destroy_expr>
    9414:	e9 f8 00 00 00       	jmp    9511 <destroy_expr+0x160>
    9419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    941d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9421:	48 89 c7             	mov    %rax,%rdi
    9424:	e8 88 ff ff ff       	call   93b1 <destroy_expr>
    9429:	e9 e3 00 00 00       	jmp    9511 <destroy_expr+0x160>
    942e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9432:	48 8b 40 10          	mov    0x10(%rax),%rax
    9436:	48 89 c7             	mov    %rax,%rdi
    9439:	e8 73 ff ff ff       	call   93b1 <destroy_expr>
    943e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9442:	48 8b 40 18          	mov    0x18(%rax),%rax
    9446:	48 89 c7             	mov    %rax,%rdi
    9449:	e8 63 ff ff ff       	call   93b1 <destroy_expr>
    944e:	e9 be 00 00 00       	jmp    9511 <destroy_expr+0x160>
    9453:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9457:	48 8b 40 10          	mov    0x10(%rax),%rax
    945b:	48 89 c7             	mov    %rax,%rdi
    945e:	e8 4e ff ff ff       	call   93b1 <destroy_expr>
    9463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9467:	48 8b 40 18          	mov    0x18(%rax),%rax
    946b:	48 89 c7             	mov    %rax,%rdi
    946e:	e8 3e ff ff ff       	call   93b1 <destroy_expr>
    9473:	e9 99 00 00 00       	jmp    9511 <destroy_expr+0x160>
    9478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9480:	48 89 c7             	mov    %rax,%rdi
    9483:	e8 08 8e ff ff       	call   2290 <free@plt>
    9488:	e9 84 00 00 00       	jmp    9511 <destroy_expr+0x160>
    948d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9491:	48 8b 40 08          	mov    0x8(%rax),%rax
    9495:	48 89 c7             	mov    %rax,%rdi
    9498:	e8 f3 8d ff ff       	call   2290 <free@plt>
    949d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94a1:	48 8b 40 10          	mov    0x10(%rax),%rax
    94a5:	48 89 c7             	mov    %rax,%rdi
    94a8:	e8 04 ff ff ff       	call   93b1 <destroy_expr>
    94ad:	eb 62                	jmp    9511 <destroy_expr+0x160>
    94af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b3:	48 8b 40 08          	mov    0x8(%rax),%rax
    94b7:	48 89 c7             	mov    %rax,%rdi
    94ba:	e8 d1 8d ff ff       	call   2290 <free@plt>
    94bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c3:	48 8b 40 10          	mov    0x10(%rax),%rax
    94c7:	48 89 c7             	mov    %rax,%rdi
    94ca:	e8 40 fa ff ff       	call   8f0f <destroy_list>
    94cf:	eb 40                	jmp    9511 <destroy_expr+0x160>
    94d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d5:	48 8b 40 08          	mov    0x8(%rax),%rax
    94d9:	48 89 c7             	mov    %rax,%rdi
    94dc:	e8 af 8d ff ff       	call   2290 <free@plt>
    94e1:	eb 2e                	jmp    9511 <destroy_expr+0x160>
    94e3:	48 8b 05 76 7b 01 00 	mov    0x17b76(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    94ea:	48 89 c1             	mov    %rax,%rcx
    94ed:	ba 18 00 00 00       	mov    $0x18,%edx
    94f2:	be 01 00 00 00       	mov    $0x1,%esi
    94f7:	48 8d 05 d6 ff 00 00 	lea    0xffd6(%rip),%rax        # 194d4 <__PRETTY_FUNCTION__.0+0x34c>
    94fe:	48 89 c7             	mov    %rax,%rdi
    9501:	e8 8a 8f ff ff       	call   2490 <fwrite@plt>
    9506:	bf 01 00 00 00       	mov    $0x1,%edi
    950b:	e8 70 8f ff ff       	call   2480 <exit@plt>
    9510:	90                   	nop
    9511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9515:	48 89 c7             	mov    %rax,%rdi
    9518:	e8 73 8d ff ff       	call   2290 <free@plt>
    951d:	90                   	nop
    951e:	c9                   	leave
    951f:	c3                   	ret

0000000000009520 <mk_program>:
    9520:	f3 0f 1e fa          	endbr64
    9524:	55                   	push   %rbp
    9525:	48 89 e5             	mov    %rsp,%rbp
    9528:	48 83 ec 40          	sub    $0x40,%rsp
    952c:	89 7d ec             	mov    %edi,-0x14(%rbp)
    952f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9533:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9537:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    953b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    953f:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9543:	bf 50 00 00 00       	mov    $0x50,%edi
    9548:	e8 c3 8e ff ff       	call   2410 <malloc@plt>
    954d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9555:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9558:	89 10                	mov    %edx,(%rax)
    955a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    955e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9569:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    956d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9575:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9579:	48 89 50 10          	mov    %rdx,0x10(%rax)
    957d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9581:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9585:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    958d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9591:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9599:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    959d:	48 89 50 28          	mov    %rdx,0x28(%rax)
    95a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95a5:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    95a9:	48 89 50 30          	mov    %rdx,0x30(%rax)
    95ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95b1:	c9                   	leave
    95b2:	c3                   	ret

00000000000095b3 <mk_typedecl>:
    95b3:	f3 0f 1e fa          	endbr64
    95b7:	55                   	push   %rbp
    95b8:	48 89 e5             	mov    %rsp,%rbp
    95bb:	48 83 ec 30          	sub    $0x30,%rsp
    95bf:	89 7d ec             	mov    %edi,-0x14(%rbp)
    95c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    95c6:	89 55 e8             	mov    %edx,-0x18(%rbp)
    95c9:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    95cc:	bf 50 00 00 00       	mov    $0x50,%edi
    95d1:	e8 3a 8e ff ff       	call   2410 <malloc@plt>
    95d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    95da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95de:	8b 55 ec             	mov    -0x14(%rbp),%edx
    95e1:	89 10                	mov    %edx,(%rax)
    95e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e7:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%rax)
    95ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    95fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95fe:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9601:	89 50 10             	mov    %edx,0x10(%rax)
    9604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9608:	8b 55 dc             	mov    -0x24(%rbp),%edx
    960b:	89 50 14             	mov    %edx,0x14(%rax)
    960e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9612:	c9                   	leave
    9613:	c3                   	ret

0000000000009614 <mk_procedure>:
    9614:	f3 0f 1e fa          	endbr64
    9618:	55                   	push   %rbp
    9619:	48 89 e5             	mov    %rsp,%rbp
    961c:	48 83 ec 40          	sub    $0x40,%rsp
    9620:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9623:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9627:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    962b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    962f:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9633:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9637:	bf 50 00 00 00       	mov    $0x50,%edi
    963c:	e8 cf 8d ff ff       	call   2410 <malloc@plt>
    9641:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9649:	8b 55 ec             	mov    -0x14(%rbp),%edx
    964c:	89 10                	mov    %edx,(%rax)
    964e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9652:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    965d:	c7 40 08 05 00 00 00 	movl   $0x5,0x8(%rax)
    9664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9668:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    966c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9674:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9678:	48 89 50 18          	mov    %rdx,0x18(%rax)
    967c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9680:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rax)
    9687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    968b:	8b 55 10             	mov    0x10(%rbp),%edx
    968e:	89 50 30             	mov    %edx,0x30(%rax)
    9691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9695:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9699:	48 89 50 38          	mov    %rdx,0x38(%rax)
    969d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    96a5:	48 89 50 40          	mov    %rdx,0x40(%rax)
    96a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ad:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    96b1:	48 89 50 48          	mov    %rdx,0x48(%rax)
    96b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b9:	c9                   	leave
    96ba:	c3                   	ret

00000000000096bb <mk_function>:
    96bb:	f3 0f 1e fa          	endbr64
    96bf:	55                   	push   %rbp
    96c0:	48 89 e5             	mov    %rsp,%rbp
    96c3:	48 83 ec 40          	sub    $0x40,%rsp
    96c7:	89 7d ec             	mov    %edi,-0x14(%rbp)
    96ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    96ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    96d2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    96d6:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    96da:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    96de:	bf 50 00 00 00       	mov    $0x50,%edi
    96e3:	e8 28 8d ff ff       	call   2410 <malloc@plt>
    96e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    96ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96f0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    96f3:	89 10                	mov    %edx,(%rax)
    96f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96f9:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9704:	c7 40 08 06 00 00 00 	movl   $0x6,0x8(%rax)
    970b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    970f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9713:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    971b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    971f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9727:	8b 55 10             	mov    0x10(%rbp),%edx
    972a:	89 50 20             	mov    %edx,0x20(%rax)
    972d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9731:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    9735:	48 89 50 28          	mov    %rdx,0x28(%rax)
    9739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973d:	8b 55 20             	mov    0x20(%rbp),%edx
    9740:	89 50 30             	mov    %edx,0x30(%rax)
    9743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9747:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    974b:	48 89 50 38          	mov    %rdx,0x38(%rax)
    974f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9753:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9757:	48 89 50 40          	mov    %rdx,0x40(%rax)
    975b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    975f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9763:	48 89 50 48          	mov    %rdx,0x48(%rax)
    9767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    976b:	c9                   	leave
    976c:	c3                   	ret

000000000000976d <mk_vardecl>:
    976d:	f3 0f 1e fa          	endbr64
    9771:	55                   	push   %rbp
    9772:	48 89 e5             	mov    %rsp,%rbp
    9775:	48 83 ec 30          	sub    $0x30,%rsp
    9779:	89 7d ec             	mov    %edi,-0x14(%rbp)
    977c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9780:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9783:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    9787:	bf 50 00 00 00       	mov    $0x50,%edi
    978c:	e8 7f 8c ff ff       	call   2410 <malloc@plt>
    9791:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9799:	8b 55 ec             	mov    -0x14(%rbp),%edx
    979c:	89 10                	mov    %edx,(%rax)
    979e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a2:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    97a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    97b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    97b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b9:	8b 55 e8             	mov    -0x18(%rbp),%edx
    97bc:	89 50 10             	mov    %edx,0x10(%rax)
    97bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    97c7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    97cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97cf:	c9                   	leave
    97d0:	c3                   	ret

00000000000097d1 <mk_arraydecl>:
    97d1:	f3 0f 1e fa          	endbr64
    97d5:	55                   	push   %rbp
    97d6:	48 89 e5             	mov    %rsp,%rbp
    97d9:	48 83 ec 30          	sub    $0x30,%rsp
    97dd:	89 7d ec             	mov    %edi,-0x14(%rbp)
    97e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    97e4:	89 55 e8             	mov    %edx,-0x18(%rbp)
    97e7:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    97ea:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
    97ee:	bf 50 00 00 00       	mov    $0x50,%edi
    97f3:	e8 18 8c ff ff       	call   2410 <malloc@plt>
    97f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    97fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9800:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9803:	89 10                	mov    %edx,(%rax)
    9805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9809:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    9810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9814:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9818:	48 89 50 08          	mov    %rdx,0x8(%rax)
    981c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9820:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9823:	89 50 10             	mov    %edx,0x10(%rax)
    9826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    982a:	8b 55 dc             	mov    -0x24(%rbp),%edx
    982d:	89 50 14             	mov    %edx,0x14(%rax)
    9830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9834:	8b 55 d8             	mov    -0x28(%rbp),%edx
    9837:	89 50 18             	mov    %edx,0x18(%rax)
    983a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    983e:	c9                   	leave
    983f:	c3                   	ret

0000000000009840 <mk_varassign>:
    9840:	f3 0f 1e fa          	endbr64
    9844:	55                   	push   %rbp
    9845:	48 89 e5             	mov    %rsp,%rbp
    9848:	48 83 ec 30          	sub    $0x30,%rsp
    984c:	89 7d ec             	mov    %edi,-0x14(%rbp)
    984f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9853:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9857:	bf 28 00 00 00       	mov    $0x28,%edi
    985c:	e8 af 8b ff ff       	call   2410 <malloc@plt>
    9861:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9869:	8b 55 ec             	mov    -0x14(%rbp),%edx
    986c:	89 10                	mov    %edx,(%rax)
    986e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9872:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    987d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9881:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9889:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    988d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9895:	c9                   	leave
    9896:	c3                   	ret

0000000000009897 <mk_procedurecall>:
    9897:	f3 0f 1e fa          	endbr64
    989b:	55                   	push   %rbp
    989c:	48 89 e5             	mov    %rsp,%rbp
    989f:	48 83 ec 30          	sub    $0x30,%rsp
    98a3:	89 7d ec             	mov    %edi,-0x14(%rbp)
    98a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    98aa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    98ae:	bf 28 00 00 00       	mov    $0x28,%edi
    98b3:	e8 58 8b ff ff       	call   2410 <malloc@plt>
    98b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    98bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98c0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    98c3:	89 10                	mov    %edx,(%rax)
    98c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98c9:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    98d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98d4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98d8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    98dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    98e4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    98e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ec:	c9                   	leave
    98ed:	c3                   	ret

00000000000098ee <mk_compoundstatement>:
    98ee:	f3 0f 1e fa          	endbr64
    98f2:	55                   	push   %rbp
    98f3:	48 89 e5             	mov    %rsp,%rbp
    98f6:	48 83 ec 20          	sub    $0x20,%rsp
    98fa:	89 7d ec             	mov    %edi,-0x14(%rbp)
    98fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9901:	bf 28 00 00 00       	mov    $0x28,%edi
    9906:	e8 05 8b ff ff       	call   2410 <malloc@plt>
    990b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    990f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9913:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9916:	89 10                	mov    %edx,(%rax)
    9918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    991c:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    9923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9927:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    992b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    992f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9933:	c9                   	leave
    9934:	c3                   	ret

0000000000009935 <mk_ifthen>:
    9935:	f3 0f 1e fa          	endbr64
    9939:	55                   	push   %rbp
    993a:	48 89 e5             	mov    %rsp,%rbp
    993d:	48 83 ec 30          	sub    $0x30,%rsp
    9941:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9944:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9948:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    994c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9950:	bf 28 00 00 00       	mov    $0x28,%edi
    9955:	e8 b6 8a ff ff       	call   2410 <malloc@plt>
    995a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    995e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9962:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9965:	89 10                	mov    %edx,(%rax)
    9967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    996b:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    9972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9976:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    997a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    997e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9982:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9986:	48 89 50 10          	mov    %rdx,0x10(%rax)
    998a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    998e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9992:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    999a:	c9                   	leave
    999b:	c3                   	ret

000000000000999c <mk_while>:
    999c:	f3 0f 1e fa          	endbr64
    99a0:	55                   	push   %rbp
    99a1:	48 89 e5             	mov    %rsp,%rbp
    99a4:	48 83 ec 30          	sub    $0x30,%rsp
    99a8:	89 7d ec             	mov    %edi,-0x14(%rbp)
    99ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    99af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    99b3:	bf 28 00 00 00       	mov    $0x28,%edi
    99b8:	e8 53 8a ff ff       	call   2410 <malloc@plt>
    99bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    99c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99c5:	8b 55 ec             	mov    -0x14(%rbp),%edx
    99c8:	89 10                	mov    %edx,(%rax)
    99ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99ce:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    99d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    99e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99e5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99e9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    99ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99f1:	c9                   	leave
    99f2:	c3                   	ret

00000000000099f3 <mk_forassign>:
    99f3:	f3 0f 1e fa          	endbr64
    99f7:	55                   	push   %rbp
    99f8:	48 89 e5             	mov    %rsp,%rbp
    99fb:	48 83 ec 30          	sub    $0x30,%rsp
    99ff:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9a02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a06:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9a0a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9a0e:	bf 28 00 00 00       	mov    $0x28,%edi
    9a13:	e8 f8 89 ff ff       	call   2410 <malloc@plt>
    9a18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a20:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9a23:	89 10                	mov    %edx,(%rax)
    9a25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a29:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    9a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a34:	c7 40 08 07 00 00 00 	movl   $0x7,0x8(%rax)
    9a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a3f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9a43:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9a47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a4b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9a4f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9a53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a57:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a5b:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a63:	c9                   	leave
    9a64:	c3                   	ret

0000000000009a65 <mk_forvar>:
    9a65:	f3 0f 1e fa          	endbr64
    9a69:	55                   	push   %rbp
    9a6a:	48 89 e5             	mov    %rsp,%rbp
    9a6d:	48 83 ec 30          	sub    $0x30,%rsp
    9a71:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9a74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9a7c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9a80:	bf 28 00 00 00       	mov    $0x28,%edi
    9a85:	e8 86 89 ff ff       	call   2410 <malloc@plt>
    9a8a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a92:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9a95:	89 10                	mov    %edx,(%rax)
    9a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9b:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    9aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa6:	c7 40 08 06 00 00 00 	movl   $0x6,0x8(%rax)
    9aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9ab5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9abd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9ac1:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9acd:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ad5:	c9                   	leave
    9ad6:	c3                   	ret

0000000000009ad7 <mk_asmblock>:
    9ad7:	f3 0f 1e fa          	endbr64
    9adb:	55                   	push   %rbp
    9adc:	48 89 e5             	mov    %rsp,%rbp
    9adf:	48 83 ec 20          	sub    $0x20,%rsp
    9ae3:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ae6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9aea:	bf 28 00 00 00       	mov    $0x28,%edi
    9aef:	e8 1c 89 ff ff       	call   2410 <malloc@plt>
    9af4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9afc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9aff:	89 10                	mov    %edx,(%rax)
    9b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b05:	c7 40 04 08 00 00 00 	movl   $0x8,0x4(%rax)
    9b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b10:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b14:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9b18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1c:	c9                   	leave
    9b1d:	c3                   	ret

0000000000009b1e <mk_relop>:
    9b1e:	f3 0f 1e fa          	endbr64
    9b22:	55                   	push   %rbp
    9b23:	48 89 e5             	mov    %rsp,%rbp
    9b26:	48 83 ec 30          	sub    $0x30,%rsp
    9b2a:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9b2d:	89 75 e8             	mov    %esi,-0x18(%rbp)
    9b30:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    9b34:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    9b38:	bf 20 00 00 00       	mov    $0x20,%edi
    9b3d:	e8 ce 88 ff ff       	call   2410 <malloc@plt>
    9b42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b4a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9b4d:	89 10                	mov    %edx,(%rax)
    9b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b53:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b5e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9b61:	89 50 08             	mov    %edx,0x8(%rax)
    9b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b68:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b74:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b78:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b80:	c9                   	leave
    9b81:	c3                   	ret

0000000000009b82 <mk_signterm>:
    9b82:	f3 0f 1e fa          	endbr64
    9b86:	55                   	push   %rbp
    9b87:	48 89 e5             	mov    %rsp,%rbp
    9b8a:	48 83 ec 20          	sub    $0x20,%rsp
    9b8e:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9b91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b95:	bf 20 00 00 00       	mov    $0x20,%edi
    9b9a:	e8 71 88 ff ff       	call   2410 <malloc@plt>
    9b9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ba7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9baa:	89 10                	mov    %edx,(%rax)
    9bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bb0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9bb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bbb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9bbf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc7:	c9                   	leave
    9bc8:	c3                   	ret

0000000000009bc9 <mk_addop>:
    9bc9:	f3 0f 1e fa          	endbr64
    9bcd:	55                   	push   %rbp
    9bce:	48 89 e5             	mov    %rsp,%rbp
    9bd1:	48 83 ec 30          	sub    $0x30,%rsp
    9bd5:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9bd8:	89 75 e8             	mov    %esi,-0x18(%rbp)
    9bdb:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    9bdf:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    9be3:	bf 20 00 00 00       	mov    $0x20,%edi
    9be8:	e8 23 88 ff ff       	call   2410 <malloc@plt>
    9bed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9bf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf5:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9bf8:	89 10                	mov    %edx,(%rax)
    9bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bfe:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    9c05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c09:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9c0c:	89 50 08             	mov    %edx,0x8(%rax)
    9c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c13:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c17:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c1f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c23:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c2b:	c9                   	leave
    9c2c:	c3                   	ret

0000000000009c2d <mk_mulop>:
    9c2d:	f3 0f 1e fa          	endbr64
    9c31:	55                   	push   %rbp
    9c32:	48 89 e5             	mov    %rsp,%rbp
    9c35:	48 83 ec 30          	sub    $0x30,%rsp
    9c39:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9c3c:	89 75 e8             	mov    %esi,-0x18(%rbp)
    9c3f:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    9c43:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    9c47:	bf 20 00 00 00       	mov    $0x20,%edi
    9c4c:	e8 bf 87 ff ff       	call   2410 <malloc@plt>
    9c51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c59:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9c5c:	89 10                	mov    %edx,(%rax)
    9c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c62:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    9c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c6d:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9c70:	89 50 08             	mov    %edx,0x8(%rax)
    9c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c77:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c7b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c83:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c87:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c8f:	c9                   	leave
    9c90:	c3                   	ret

0000000000009c91 <mk_varid>:
    9c91:	f3 0f 1e fa          	endbr64
    9c95:	55                   	push   %rbp
    9c96:	48 89 e5             	mov    %rsp,%rbp
    9c99:	48 83 ec 20          	sub    $0x20,%rsp
    9c9d:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ca0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ca4:	bf 20 00 00 00       	mov    $0x20,%edi
    9ca9:	e8 62 87 ff ff       	call   2410 <malloc@plt>
    9cae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cb6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9cb9:	89 10                	mov    %edx,(%rax)
    9cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cbf:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    9cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9cce:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd6:	c9                   	leave
    9cd7:	c3                   	ret

0000000000009cd8 <mk_arrayaccess>:
    9cd8:	f3 0f 1e fa          	endbr64
    9cdc:	55                   	push   %rbp
    9cdd:	48 89 e5             	mov    %rsp,%rbp
    9ce0:	48 83 ec 30          	sub    $0x30,%rsp
    9ce4:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ce7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ceb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9cef:	bf 20 00 00 00       	mov    $0x20,%edi
    9cf4:	e8 17 87 ff ff       	call   2410 <malloc@plt>
    9cf9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d01:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9d04:	89 10                	mov    %edx,(%rax)
    9d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d0a:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    9d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d15:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9d19:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d21:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9d25:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2d:	c9                   	leave
    9d2e:	c3                   	ret

0000000000009d2f <mk_functioncall>:
    9d2f:	f3 0f 1e fa          	endbr64
    9d33:	55                   	push   %rbp
    9d34:	48 89 e5             	mov    %rsp,%rbp
    9d37:	48 83 ec 30          	sub    $0x30,%rsp
    9d3b:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9d3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d42:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9d46:	bf 20 00 00 00       	mov    $0x20,%edi
    9d4b:	e8 c0 86 ff ff       	call   2410 <malloc@plt>
    9d50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d58:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9d5b:	89 10                	mov    %edx,(%rax)
    9d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d61:	c7 40 04 06 00 00 00 	movl   $0x6,0x4(%rax)
    9d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9d70:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9d7c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d84:	c9                   	leave
    9d85:	c3                   	ret

0000000000009d86 <mk_inum>:
    9d86:	f3 0f 1e fa          	endbr64
    9d8a:	55                   	push   %rbp
    9d8b:	48 89 e5             	mov    %rsp,%rbp
    9d8e:	48 83 ec 20          	sub    $0x20,%rsp
    9d92:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9d95:	89 75 e8             	mov    %esi,-0x18(%rbp)
    9d98:	bf 20 00 00 00       	mov    $0x20,%edi
    9d9d:	e8 6e 86 ff ff       	call   2410 <malloc@plt>
    9da2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9da6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9daa:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9dad:	89 10                	mov    %edx,(%rax)
    9daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db3:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%rax)
    9dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dbe:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9dc1:	89 50 08             	mov    %edx,0x8(%rax)
    9dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc8:	c9                   	leave
    9dc9:	c3                   	ret

0000000000009dca <mk_string>:
    9dca:	f3 0f 1e fa          	endbr64
    9dce:	55                   	push   %rbp
    9dcf:	48 89 e5             	mov    %rsp,%rbp
    9dd2:	48 83 ec 20          	sub    $0x20,%rsp
    9dd6:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9dd9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ddd:	bf 20 00 00 00       	mov    $0x20,%edi
    9de2:	e8 29 86 ff ff       	call   2410 <malloc@plt>
    9de7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9deb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9def:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9df2:	89 10                	mov    %edx,(%rax)
    9df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9df8:	c7 40 04 09 00 00 00 	movl   $0x9,0x4(%rax)
    9dff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e03:	48 89 c7             	mov    %rax,%rdi
    9e06:	e8 95 86 ff ff       	call   24a0 <strdup@plt>
    9e0b:	48 89 c2             	mov    %rax,%rdx
    9e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e12:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	48 8b 40 08          	mov    0x8(%rax),%rax
    9e1e:	48 85 c0             	test   %rax,%rax
    9e21:	75 13                	jne    9e36 <mk_string+0x6c>
    9e23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e27:	48 89 c7             	mov    %rax,%rdi
    9e2a:	e8 61 84 ff ff       	call   2290 <free@plt>
    9e2f:	b8 00 00 00 00       	mov    $0x0,%eax
    9e34:	eb 04                	jmp    9e3a <mk_string+0x70>
    9e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e3a:	c9                   	leave
    9e3b:	c3                   	ret

0000000000009e3c <mk_rnum>:
    9e3c:	f3 0f 1e fa          	endbr64
    9e40:	55                   	push   %rbp
    9e41:	48 89 e5             	mov    %rsp,%rbp
    9e44:	48 83 ec 20          	sub    $0x20,%rsp
    9e48:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9e4b:	f3 0f 11 45 e8       	movss  %xmm0,-0x18(%rbp)
    9e50:	bf 20 00 00 00       	mov    $0x20,%edi
    9e55:	e8 b6 85 ff ff       	call   2410 <malloc@plt>
    9e5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e62:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9e65:	89 10                	mov    %edx,(%rax)
    9e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6b:	c7 40 04 08 00 00 00 	movl   $0x8,0x4(%rax)
    9e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e76:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
    9e7b:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
    9e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e84:	c9                   	leave
    9e85:	c3                   	ret

0000000000009e86 <semcheck_id_not_main>:
    9e86:	f3 0f 1e fa          	endbr64
    9e8a:	55                   	push   %rbp
    9e8b:	48 89 e5             	mov    %rsp,%rbp
    9e8e:	48 83 ec 10          	sub    $0x10,%rsp
    9e92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9a:	48 8d 15 7f f7 00 00 	lea    0xf77f(%rip),%rdx        # 19620 <__PRETTY_FUNCTION__.0+0x10>
    9ea1:	48 89 d6             	mov    %rdx,%rsi
    9ea4:	48 89 c7             	mov    %rax,%rdi
    9ea7:	e8 14 85 ff ff       	call   23c0 <strcmp@plt>
    9eac:	85 c0                	test   %eax,%eax
    9eae:	75 2a                	jne    9eda <semcheck_id_not_main+0x54>
    9eb0:	48 8b 05 a9 71 01 00 	mov    0x171a9(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    9eb7:	48 89 c1             	mov    %rax,%rcx
    9eba:	ba 46 00 00 00       	mov    $0x46,%edx
    9ebf:	be 01 00 00 00       	mov    $0x1,%esi
    9ec4:	48 8d 05 5d f7 00 00 	lea    0xf75d(%rip),%rax        # 19628 <__PRETTY_FUNCTION__.0+0x18>
    9ecb:	48 89 c7             	mov    %rax,%rdi
    9ece:	e8 bd 85 ff ff       	call   2490 <fwrite@plt>
    9ed3:	b8 01 00 00 00       	mov    $0x1,%eax
    9ed8:	eb 05                	jmp    9edf <semcheck_id_not_main+0x59>
    9eda:	b8 00 00 00 00       	mov    $0x0,%eax
    9edf:	c9                   	leave
    9ee0:	c3                   	ret

0000000000009ee1 <start_semcheck>:
    9ee1:	f3 0f 1e fa          	endbr64
    9ee5:	55                   	push   %rbp
    9ee6:	48 89 e5             	mov    %rsp,%rbp
    9ee9:	48 83 ec 20          	sub    $0x20,%rsp
    9eed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ef1:	b8 00 00 00 00       	mov    $0x0,%eax
    9ef6:	e8 2a 14 00 00       	call   b325 <InitSymTab>
    9efb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f03:	48 89 c7             	mov    %rax,%rdi
    9f06:	e8 b1 01 00 00       	call   a0bc <semcheck_add_builtins>
    9f0b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f13:	48 89 d6             	mov    %rdx,%rsi
    9f16:	48 89 c7             	mov    %rax,%rdi
    9f19:	e8 4b 04 00 00       	call   a369 <semcheck_program>
    9f1e:	89 45 f4             	mov    %eax,-0xc(%rbp)
    9f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f25:	48 89 c7             	mov    %rax,%rdi
    9f28:	e8 af 1c 00 00       	call   bbdc <DestroySymTab>
    9f2d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    9f31:	7e 23                	jle    9f56 <start_semcheck+0x75>
    9f33:	48 8b 05 26 71 01 00 	mov    0x17126(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    9f3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
    9f3d:	48 8d 0d 2c f7 00 00 	lea    0xf72c(%rip),%rcx        # 19670 <__PRETTY_FUNCTION__.0+0x60>
    9f44:	48 89 ce             	mov    %rcx,%rsi
    9f47:	48 89 c7             	mov    %rax,%rdi
    9f4a:	b8 00 00 00 00       	mov    $0x0,%eax
    9f4f:	e8 7c 84 ff ff       	call   23d0 <fprintf@plt>
    9f54:	eb 23                	jmp    9f79 <start_semcheck+0x98>
    9f56:	48 8b 05 03 71 01 00 	mov    0x17103(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    9f5d:	48 89 c1             	mov    %rax,%rcx
    9f60:	ba 14 00 00 00       	mov    $0x14,%edx
    9f65:	be 01 00 00 00       	mov    $0x1,%esi
    9f6a:	48 8d 05 21 f7 00 00 	lea    0xf721(%rip),%rax        # 19692 <__PRETTY_FUNCTION__.0+0x82>
    9f71:	48 89 c7             	mov    %rax,%rdi
    9f74:	e8 17 85 ff ff       	call   2490 <fwrite@plt>
    9f79:	8b 45 f4             	mov    -0xc(%rbp),%eax
    9f7c:	c9                   	leave
    9f7d:	c3                   	ret

0000000000009f7e <semcheck_type_decls>:
    9f7e:	f3 0f 1e fa          	endbr64
    9f82:	55                   	push   %rbp
    9f83:	48 89 e5             	mov    %rsp,%rbp
    9f86:	48 83 ec 30          	sub    $0x30,%rsp
    9f8a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9f8e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9f92:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    9f97:	75 28                	jne    9fc1 <semcheck_type_decls+0x43>
    9f99:	48 8d 05 90 f9 00 00 	lea    0xf990(%rip),%rax        # 19930 <__PRETTY_FUNCTION__.5>
    9fa0:	48 89 c1             	mov    %rax,%rcx
    9fa3:	ba 57 00 00 00       	mov    $0x57,%edx
    9fa8:	48 8d 05 f8 f6 00 00 	lea    0xf6f8(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    9faf:	48 89 c6             	mov    %rax,%rsi
    9fb2:	48 8d 05 07 f7 00 00 	lea    0xf707(%rip),%rax        # 196c0 <__PRETTY_FUNCTION__.0+0xb0>
    9fb9:	48 89 c7             	mov    %rax,%rdi
    9fbc:	e8 8f 83 ff ff       	call   2350 <__assert_fail@plt>
    9fc1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    9fc8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9fcc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9fd0:	e9 d7 00 00 00       	jmp    a0ac <semcheck_type_decls+0x12e>
    9fd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9fd9:	8b 00                	mov    (%rax),%eax
    9fdb:	85 c0                	test   %eax,%eax
    9fdd:	74 28                	je     a007 <semcheck_type_decls+0x89>
    9fdf:	48 8d 05 4a f9 00 00 	lea    0xf94a(%rip),%rax        # 19930 <__PRETTY_FUNCTION__.5>
    9fe6:	48 89 c1             	mov    %rax,%rcx
    9fe9:	ba 5d 00 00 00       	mov    $0x5d,%edx
    9fee:	48 8d 05 b2 f6 00 00 	lea    0xf6b2(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    9ff5:	48 89 c6             	mov    %rax,%rsi
    9ff8:	48 8d 05 d0 f6 00 00 	lea    0xf6d0(%rip),%rax        # 196cf <__PRETTY_FUNCTION__.0+0xbf>
    9fff:	48 89 c7             	mov    %rax,%rdi
    a002:	e8 49 83 ff ff       	call   2350 <__assert_fail@plt>
    a007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a00b:	48 8b 40 08          	mov    0x8(%rax),%rax
    a00f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a017:	8b 40 04             	mov    0x4(%rax),%eax
    a01a:	83 f8 07             	cmp    $0x7,%eax
    a01d:	74 28                	je     a047 <semcheck_type_decls+0xc9>
    a01f:	48 8d 05 0a f9 00 00 	lea    0xf90a(%rip),%rax        # 19930 <__PRETTY_FUNCTION__.5>
    a026:	48 89 c1             	mov    %rax,%rcx
    a029:	ba 5f 00 00 00       	mov    $0x5f,%edx
    a02e:	48 8d 05 72 f6 00 00 	lea    0xf672(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a035:	48 89 c6             	mov    %rax,%rsi
    a038:	48 8d 05 a7 f6 00 00 	lea    0xf6a7(%rip),%rax        # 196e6 <__PRETTY_FUNCTION__.0+0xd6>
    a03f:	48 89 c7             	mov    %rax,%rdi
    a042:	e8 09 83 ff ff       	call   2350 <__assert_fail@plt>
    a047:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    a04e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a052:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a056:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a059:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a05d:	48 89 ce             	mov    %rcx,%rsi
    a060:	48 89 c7             	mov    %rax,%rdi
    a063:	e8 f9 19 00 00       	call   ba61 <PushTypeOntoScope>
    a068:	89 45 ec             	mov    %eax,-0x14(%rbp)
    a06b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    a06f:	7e 2f                	jle    a0a0 <semcheck_type_decls+0x122>
    a071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a075:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a07d:	8b 10                	mov    (%rax),%edx
    a07f:	48 8b 05 da 6f 01 00 	mov    0x16fda(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    a086:	48 8d 35 7b f6 00 00 	lea    0xf67b(%rip),%rsi        # 19708 <__PRETTY_FUNCTION__.0+0xf8>
    a08d:	48 89 c7             	mov    %rax,%rdi
    a090:	b8 00 00 00 00       	mov    $0x0,%eax
    a095:	e8 36 83 ff ff       	call   23d0 <fprintf@plt>
    a09a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    a09d:	01 45 e4             	add    %eax,-0x1c(%rbp)
    a0a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0a4:	48 8b 40 10          	mov    0x10(%rax),%rax
    a0a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a0ac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a0b1:	0f 85 1e ff ff ff    	jne    9fd5 <semcheck_type_decls+0x57>
    a0b7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    a0ba:	c9                   	leave
    a0bb:	c3                   	ret

000000000000a0bc <semcheck_add_builtins>:
    a0bc:	f3 0f 1e fa          	endbr64
    a0c0:	55                   	push   %rbp
    a0c1:	48 89 e5             	mov    %rsp,%rbp
    a0c4:	48 83 ec 30          	sub    $0x30,%rsp
    a0c8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a0cc:	48 8d 05 62 f6 00 00 	lea    0xf662(%rip),%rax        # 19735 <__PRETTY_FUNCTION__.0+0x125>
    a0d3:	48 89 c7             	mov    %rax,%rdi
    a0d6:	e8 c5 83 ff ff       	call   24a0 <strdup@plt>
    a0db:	48 89 c1             	mov    %rax,%rcx
    a0de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a0e2:	ba 04 00 00 00       	mov    $0x4,%edx
    a0e7:	48 89 ce             	mov    %rcx,%rsi
    a0ea:	48 89 c7             	mov    %rax,%rdi
    a0ed:	e8 0d 13 00 00       	call   b3ff <AddBuiltinType>
    a0f2:	48 8d 05 42 f6 00 00 	lea    0xf642(%rip),%rax        # 1973b <__PRETTY_FUNCTION__.0+0x12b>
    a0f9:	48 89 c7             	mov    %rax,%rdi
    a0fc:	e8 9f 83 ff ff       	call   24a0 <strdup@plt>
    a101:	48 89 c1             	mov    %rax,%rcx
    a104:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a108:	ba 04 00 00 00       	mov    $0x4,%edx
    a10d:	48 89 ce             	mov    %rcx,%rsi
    a110:	48 89 c7             	mov    %rax,%rdi
    a113:	e8 e7 12 00 00       	call   b3ff <AddBuiltinType>
    a118:	48 8d 05 23 f6 00 00 	lea    0xf623(%rip),%rax        # 19742 <__PRETTY_FUNCTION__.0+0x132>
    a11f:	48 89 c7             	mov    %rax,%rdi
    a122:	e8 79 83 ff ff       	call   24a0 <strdup@plt>
    a127:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a12b:	48 8d 05 15 f6 00 00 	lea    0xf615(%rip),%rax        # 19747 <__PRETTY_FUNCTION__.0+0x137>
    a132:	48 89 c7             	mov    %rax,%rdi
    a135:	e8 66 83 ff ff       	call   24a0 <strdup@plt>
    a13a:	be 03 00 00 00       	mov    $0x3,%esi
    a13f:	48 89 c7             	mov    %rax,%rdi
    a142:	e8 00 d9 ff ff       	call   7a47 <CreateListNode>
    a147:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a14b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a14f:	b9 00 00 00 00       	mov    $0x0,%ecx
    a154:	ba 36 01 00 00       	mov    $0x136,%edx
    a159:	48 89 c6             	mov    %rax,%rsi
    a15c:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    a161:	e8 07 f6 ff ff       	call   976d <mk_vardecl>
    a166:	be 00 00 00 00       	mov    $0x0,%esi
    a16b:	48 89 c7             	mov    %rax,%rdi
    a16e:	e8 d4 d8 ff ff       	call   7a47 <CreateListNode>
    a173:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a177:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a17b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a17f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a183:	48 89 ce             	mov    %rcx,%rsi
    a186:	48 89 c7             	mov    %rax,%rdi
    a189:	e8 d4 11 00 00       	call   b362 <AddBuiltinProc>
    a18e:	48 8d 05 b6 f5 00 00 	lea    0xf5b6(%rip),%rax        # 1974b <__PRETTY_FUNCTION__.0+0x13b>
    a195:	48 89 c7             	mov    %rax,%rdi
    a198:	e8 03 83 ff ff       	call   24a0 <strdup@plt>
    a19d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a1a1:	48 8d 05 9f f5 00 00 	lea    0xf59f(%rip),%rax        # 19747 <__PRETTY_FUNCTION__.0+0x137>
    a1a8:	48 89 c7             	mov    %rax,%rdi
    a1ab:	e8 f0 82 ff ff       	call   24a0 <strdup@plt>
    a1b0:	be 03 00 00 00       	mov    $0x3,%esi
    a1b5:	48 89 c7             	mov    %rax,%rdi
    a1b8:	e8 8a d8 ff ff       	call   7a47 <CreateListNode>
    a1bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a1c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a1c5:	b9 00 00 00 00       	mov    $0x0,%ecx
    a1ca:	ba 36 01 00 00       	mov    $0x136,%edx
    a1cf:	48 89 c6             	mov    %rax,%rsi
    a1d2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    a1d7:	e8 91 f5 ff ff       	call   976d <mk_vardecl>
    a1dc:	be 00 00 00 00       	mov    $0x0,%esi
    a1e1:	48 89 c7             	mov    %rax,%rdi
    a1e4:	e8 5e d8 ff ff       	call   7a47 <CreateListNode>
    a1e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a1ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a1f1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a1f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a1f9:	48 89 ce             	mov    %rcx,%rsi
    a1fc:	48 89 c7             	mov    %rax,%rdi
    a1ff:	e8 5e 11 00 00       	call   b362 <AddBuiltinProc>
    a204:	48 8d 05 46 f5 00 00 	lea    0xf546(%rip),%rax        # 19751 <__PRETTY_FUNCTION__.0+0x141>
    a20b:	48 89 c7             	mov    %rax,%rdi
    a20e:	e8 8d 82 ff ff       	call   24a0 <strdup@plt>
    a213:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a217:	48 8d 05 3b f5 00 00 	lea    0xf53b(%rip),%rax        # 19759 <__PRETTY_FUNCTION__.0+0x149>
    a21e:	48 89 c7             	mov    %rax,%rdi
    a221:	e8 7a 82 ff ff       	call   24a0 <strdup@plt>
    a226:	be 03 00 00 00       	mov    $0x3,%esi
    a22b:	48 89 c7             	mov    %rax,%rdi
    a22e:	e8 14 d8 ff ff       	call   7a47 <CreateListNode>
    a233:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a237:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a23b:	b9 00 00 00 00       	mov    $0x0,%ecx
    a240:	ba 36 01 00 00       	mov    $0x136,%edx
    a245:	48 89 c6             	mov    %rax,%rsi
    a248:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    a24d:	e8 1b f5 ff ff       	call   976d <mk_vardecl>
    a252:	be 00 00 00 00       	mov    $0x0,%esi
    a257:	48 89 c7             	mov    %rax,%rdi
    a25a:	e8 e8 d7 ff ff       	call   7a47 <CreateListNode>
    a25f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a263:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a267:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a26b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a26f:	48 89 ce             	mov    %rcx,%rsi
    a272:	48 89 c7             	mov    %rax,%rdi
    a275:	e8 e8 10 00 00       	call   b362 <AddBuiltinProc>
    a27a:	48 8d 05 df f4 00 00 	lea    0xf4df(%rip),%rax        # 19760 <__PRETTY_FUNCTION__.0+0x150>
    a281:	48 89 c7             	mov    %rax,%rdi
    a284:	e8 17 82 ff ff       	call   24a0 <strdup@plt>
    a289:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a28d:	48 8d 05 b3 f4 00 00 	lea    0xf4b3(%rip),%rax        # 19747 <__PRETTY_FUNCTION__.0+0x137>
    a294:	48 89 c7             	mov    %rax,%rdi
    a297:	e8 04 82 ff ff       	call   24a0 <strdup@plt>
    a29c:	be 03 00 00 00       	mov    $0x3,%esi
    a2a1:	48 89 c7             	mov    %rax,%rdi
    a2a4:	e8 9e d7 ff ff       	call   7a47 <CreateListNode>
    a2a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a2ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a2b1:	b9 00 00 00 00       	mov    $0x0,%ecx
    a2b6:	ba 36 01 00 00       	mov    $0x136,%edx
    a2bb:	48 89 c6             	mov    %rax,%rsi
    a2be:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    a2c3:	e8 a5 f4 ff ff       	call   976d <mk_vardecl>
    a2c8:	be 00 00 00 00       	mov    $0x0,%esi
    a2cd:	48 89 c7             	mov    %rax,%rdi
    a2d0:	e8 72 d7 ff ff       	call   7a47 <CreateListNode>
    a2d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a2d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a2dd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a2e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2e5:	48 89 ce             	mov    %rcx,%rsi
    a2e8:	48 89 c7             	mov    %rax,%rdi
    a2eb:	e8 72 10 00 00       	call   b362 <AddBuiltinProc>
    a2f0:	48 8d 05 70 f4 00 00 	lea    0xf470(%rip),%rax        # 19767 <__PRETTY_FUNCTION__.0+0x157>
    a2f7:	48 89 c7             	mov    %rax,%rdi
    a2fa:	e8 a1 81 ff ff       	call   24a0 <strdup@plt>
    a2ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a303:	48 8d 05 3d f4 00 00 	lea    0xf43d(%rip),%rax        # 19747 <__PRETTY_FUNCTION__.0+0x137>
    a30a:	48 89 c7             	mov    %rax,%rdi
    a30d:	e8 8e 81 ff ff       	call   24a0 <strdup@plt>
    a312:	be 03 00 00 00       	mov    $0x3,%esi
    a317:	48 89 c7             	mov    %rax,%rdi
    a31a:	e8 28 d7 ff ff       	call   7a47 <CreateListNode>
    a31f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a323:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a327:	b9 00 00 00 00       	mov    $0x0,%ecx
    a32c:	ba 36 01 00 00       	mov    $0x136,%edx
    a331:	48 89 c6             	mov    %rax,%rsi
    a334:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    a339:	e8 2f f4 ff ff       	call   976d <mk_vardecl>
    a33e:	be 00 00 00 00       	mov    $0x0,%esi
    a343:	48 89 c7             	mov    %rax,%rdi
    a346:	e8 fc d6 ff ff       	call   7a47 <CreateListNode>
    a34b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a34f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a353:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a357:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a35b:	48 89 ce             	mov    %rcx,%rsi
    a35e:	48 89 c7             	mov    %rax,%rdi
    a361:	e8 fc 0f 00 00       	call   b362 <AddBuiltinProc>
    a366:	90                   	nop
    a367:	c9                   	leave
    a368:	c3                   	ret

000000000000a369 <semcheck_program>:
    a369:	f3 0f 1e fa          	endbr64
    a36d:	55                   	push   %rbp
    a36e:	48 89 e5             	mov    %rsp,%rbp
    a371:	48 83 ec 20          	sub    $0x20,%rsp
    a375:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a379:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a37d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a382:	75 28                	jne    a3ac <semcheck_program+0x43>
    a384:	48 8d 05 c5 f5 00 00 	lea    0xf5c5(%rip),%rax        # 19950 <__PRETTY_FUNCTION__.4>
    a38b:	48 89 c1             	mov    %rax,%rcx
    a38e:	ba a5 00 00 00       	mov    $0xa5,%edx
    a393:	48 8d 05 0d f3 00 00 	lea    0xf30d(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a39a:	48 89 c6             	mov    %rax,%rsi
    a39d:	48 8d 05 cb f3 00 00 	lea    0xf3cb(%rip),%rax        # 1976f <__PRETTY_FUNCTION__.0+0x15f>
    a3a4:	48 89 c7             	mov    %rax,%rdi
    a3a7:	e8 a4 7f ff ff       	call   2350 <__assert_fail@plt>
    a3ac:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a3b1:	75 28                	jne    a3db <semcheck_program+0x72>
    a3b3:	48 8d 05 96 f5 00 00 	lea    0xf596(%rip),%rax        # 19950 <__PRETTY_FUNCTION__.4>
    a3ba:	48 89 c1             	mov    %rax,%rcx
    a3bd:	ba a6 00 00 00       	mov    $0xa6,%edx
    a3c2:	48 8d 05 de f2 00 00 	lea    0xf2de(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a3c9:	48 89 c6             	mov    %rax,%rsi
    a3cc:	48 8d 05 ed f2 00 00 	lea    0xf2ed(%rip),%rax        # 196c0 <__PRETTY_FUNCTION__.0+0xb0>
    a3d3:	48 89 c7             	mov    %rax,%rdi
    a3d6:	e8 75 7f ff ff       	call   2350 <__assert_fail@plt>
    a3db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3df:	8b 40 04             	mov    0x4(%rax),%eax
    a3e2:	85 c0                	test   %eax,%eax
    a3e4:	74 28                	je     a40e <semcheck_program+0xa5>
    a3e6:	48 8d 05 63 f5 00 00 	lea    0xf563(%rip),%rax        # 19950 <__PRETTY_FUNCTION__.4>
    a3ed:	48 89 c1             	mov    %rax,%rcx
    a3f0:	ba a7 00 00 00       	mov    $0xa7,%edx
    a3f5:	48 8d 05 ab f2 00 00 	lea    0xf2ab(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a3fc:	48 89 c6             	mov    %rax,%rsi
    a3ff:	48 8d 05 7a f3 00 00 	lea    0xf37a(%rip),%rax        # 19780 <__PRETTY_FUNCTION__.0+0x170>
    a406:	48 89 c7             	mov    %rax,%rdi
    a409:	e8 42 7f ff ff       	call   2350 <__assert_fail@plt>
    a40e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    a415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a419:	48 89 c7             	mov    %rax,%rdi
    a41c:	e8 77 10 00 00       	call   b498 <PushScope>
    a421:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a425:	48 8b 40 08          	mov    0x8(%rax),%rax
    a429:	48 89 c7             	mov    %rax,%rdi
    a42c:	e8 55 fa ff ff       	call   9e86 <semcheck_id_not_main>
    a431:	01 45 fc             	add    %eax,-0x4(%rbp)
    a434:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a438:	8b 10                	mov    (%rax),%edx
    a43a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a43e:	48 8b 48 10          	mov    0x10(%rax),%rcx
    a442:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a446:	48 89 ce             	mov    %rcx,%rsi
    a449:	48 89 c7             	mov    %rax,%rdi
    a44c:	e8 ad 00 00 00       	call   a4fe <semcheck_args>
    a451:	01 45 fc             	add    %eax,-0x4(%rbp)
    a454:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a458:	48 8b 50 20          	mov    0x20(%rax),%rdx
    a45c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a460:	48 89 d6             	mov    %rdx,%rsi
    a463:	48 89 c7             	mov    %rax,%rdi
    a466:	e8 13 fb ff ff       	call   9f7e <semcheck_type_decls>
    a46b:	01 45 fc             	add    %eax,-0x4(%rbp)
    a46e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a472:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a47a:	48 89 d6             	mov    %rdx,%rsi
    a47d:	48 89 c7             	mov    %rax,%rdi
    a480:	e8 9c 01 00 00       	call   a621 <semcheck_decls>
    a485:	01 45 fc             	add    %eax,-0x4(%rbp)
    a488:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a48c:	48 8b 48 28          	mov    0x28(%rax),%rcx
    a490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a494:	ba 00 00 00 00       	mov    $0x0,%edx
    a499:	48 89 ce             	mov    %rcx,%rsi
    a49c:	48 89 c7             	mov    %rax,%rdi
    a49f:	e8 22 08 00 00       	call   acc6 <semcheck_subprograms>
    a4a4:	01 45 fc             	add    %eax,-0x4(%rbp)
    a4a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a4ab:	48 8b 48 30          	mov    0x30(%rax),%rcx
    a4af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4b3:	ba 00 00 00 00       	mov    $0x0,%edx
    a4b8:	48 89 ce             	mov    %rcx,%rsi
    a4bb:	48 89 c7             	mov    %rax,%rdi
    a4be:	e8 c7 1d 00 00       	call   c28a <semcheck_stmt>
    a4c3:	01 45 fc             	add    %eax,-0x4(%rbp)
    a4c6:	b8 00 00 00 00       	mov    $0x0,%eax
    a4cb:	e8 fa 84 ff ff       	call   29ca <optimize_flag>
    a4d0:	85 c0                	test   %eax,%eax
    a4d2:	7e 19                	jle    a4ed <semcheck_program+0x184>
    a4d4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    a4d8:	75 13                	jne    a4ed <semcheck_program+0x184>
    a4da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a4de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4e2:	48 89 d6             	mov    %rdx,%rsi
    a4e5:	48 89 c7             	mov    %rax,%rdi
    a4e8:	e8 4b ab 00 00       	call   15038 <optimize>
    a4ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4f1:	48 89 c7             	mov    %rax,%rdi
    a4f4:	e8 34 16 00 00       	call   bb2d <PopScope>
    a4f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    a4fc:	c9                   	leave
    a4fd:	c3                   	ret

000000000000a4fe <semcheck_args>:
    a4fe:	f3 0f 1e fa          	endbr64
    a502:	55                   	push   %rbp
    a503:	48 89 e5             	mov    %rsp,%rbp
    a506:	48 83 ec 30          	sub    $0x30,%rsp
    a50a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a50e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a512:	89 55 dc             	mov    %edx,-0x24(%rbp)
    a515:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a51a:	75 28                	jne    a544 <semcheck_args+0x46>
    a51c:	48 8d 05 45 f4 00 00 	lea    0xf445(%rip),%rax        # 19968 <__PRETTY_FUNCTION__.3>
    a523:	48 89 c1             	mov    %rax,%rcx
    a526:	ba cc 00 00 00       	mov    $0xcc,%edx
    a52b:	48 8d 05 75 f1 00 00 	lea    0xf175(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a532:	48 89 c6             	mov    %rax,%rsi
    a535:	48 8d 05 84 f1 00 00 	lea    0xf184(%rip),%rax        # 196c0 <__PRETTY_FUNCTION__.0+0xb0>
    a53c:	48 89 c7             	mov    %rax,%rdi
    a53f:	e8 0c 7e ff ff       	call   2350 <__assert_fail@plt>
    a544:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    a54b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a54f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a553:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a558:	0f 84 b3 00 00 00    	je     a611 <semcheck_args+0x113>
    a55e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a562:	8b 00                	mov    (%rax),%eax
    a564:	85 c0                	test   %eax,%eax
    a566:	0f 85 a5 00 00 00    	jne    a611 <semcheck_args+0x113>
    a56c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a570:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a574:	48 89 d6             	mov    %rdx,%rsi
    a577:	48 89 c7             	mov    %rax,%rdi
    a57a:	e8 a2 00 00 00       	call   a621 <semcheck_decls>
    a57f:	e9 9b 00 00 00       	jmp    a61f <semcheck_args+0x121>
    a584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a588:	8b 00                	mov    (%rax),%eax
    a58a:	83 f8 03             	cmp    $0x3,%eax
    a58d:	74 28                	je     a5b7 <semcheck_args+0xb9>
    a58f:	48 8d 05 d2 f3 00 00 	lea    0xf3d2(%rip),%rax        # 19968 <__PRETTY_FUNCTION__.3>
    a596:	48 89 c1             	mov    %rax,%rcx
    a599:	ba db 00 00 00       	mov    $0xdb,%edx
    a59e:	48 8d 05 02 f1 00 00 	lea    0xf102(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a5a5:	48 89 c6             	mov    %rax,%rsi
    a5a8:	48 8d 05 f1 f1 00 00 	lea    0xf1f1(%rip),%rax        # 197a0 <__PRETTY_FUNCTION__.0+0x190>
    a5af:	48 89 c7             	mov    %rax,%rdi
    a5b2:	e8 99 7d ff ff       	call   2350 <__assert_fail@plt>
    a5b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5bb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a5bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5c3:	be 03 00 00 00       	mov    $0x3,%esi
    a5c8:	48 89 c7             	mov    %rax,%rdi
    a5cb:	e8 6b 0f 00 00       	call   b53b <PushVarOntoScope>
    a5d0:	89 45 f4             	mov    %eax,-0xc(%rbp)
    a5d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    a5d7:	7e 2c                	jle    a605 <semcheck_args+0x107>
    a5d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5dd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a5e1:	48 8b 05 78 6a 01 00 	mov    0x16a78(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    a5e8:	8b 55 dc             	mov    -0x24(%rbp),%edx
    a5eb:	48 8d 35 16 f1 00 00 	lea    0xf116(%rip),%rsi        # 19708 <__PRETTY_FUNCTION__.0+0xf8>
    a5f2:	48 89 c7             	mov    %rax,%rdi
    a5f5:	b8 00 00 00 00       	mov    $0x0,%eax
    a5fa:	e8 d1 7d ff ff       	call   23d0 <fprintf@plt>
    a5ff:	8b 45 f4             	mov    -0xc(%rbp),%eax
    a602:	01 45 f0             	add    %eax,-0x10(%rbp)
    a605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a609:	48 8b 40 10          	mov    0x10(%rax),%rax
    a60d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a611:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a616:	0f 85 68 ff ff ff    	jne    a584 <semcheck_args+0x86>
    a61c:	8b 45 f0             	mov    -0x10(%rbp),%eax
    a61f:	c9                   	leave
    a620:	c3                   	ret

000000000000a621 <semcheck_decls>:
    a621:	f3 0f 1e fa          	endbr64
    a625:	55                   	push   %rbp
    a626:	48 89 e5             	mov    %rsp,%rbp
    a629:	48 83 ec 50          	sub    $0x50,%rsp
    a62d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    a631:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    a635:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a63c:	00 00
    a63e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a642:	31 c0                	xor    %eax,%eax
    a644:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    a649:	75 28                	jne    a673 <semcheck_decls+0x52>
    a64b:	48 8d 05 26 f3 00 00 	lea    0xf326(%rip),%rax        # 19978 <__PRETTY_FUNCTION__.2>
    a652:	48 89 c1             	mov    %rax,%rcx
    a655:	ba f7 00 00 00       	mov    $0xf7,%edx
    a65a:	48 8d 05 46 f0 00 00 	lea    0xf046(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a661:	48 89 c6             	mov    %rax,%rsi
    a664:	48 8d 05 55 f0 00 00 	lea    0xf055(%rip),%rax        # 196c0 <__PRETTY_FUNCTION__.0+0xb0>
    a66b:	48 89 c7             	mov    %rax,%rdi
    a66e:	e8 dd 7c ff ff       	call   2350 <__assert_fail@plt>
    a673:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    a67a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a67e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a682:	e9 eb 01 00 00       	jmp    a872 <semcheck_decls+0x251>
    a687:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a68b:	8b 00                	mov    (%rax),%eax
    a68d:	85 c0                	test   %eax,%eax
    a68f:	74 28                	je     a6b9 <semcheck_decls+0x98>
    a691:	48 8d 05 e0 f2 00 00 	lea    0xf2e0(%rip),%rax        # 19978 <__PRETTY_FUNCTION__.2>
    a698:	48 89 c1             	mov    %rax,%rcx
    a69b:	ba fe 00 00 00       	mov    $0xfe,%edx
    a6a0:	48 8d 05 00 f0 00 00 	lea    0xf000(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a6a7:	48 89 c6             	mov    %rax,%rsi
    a6aa:	48 8d 05 1e f0 00 00 	lea    0xf01e(%rip),%rax        # 196cf <__PRETTY_FUNCTION__.0+0xbf>
    a6b1:	48 89 c7             	mov    %rax,%rdi
    a6b4:	e8 97 7c ff ff       	call   2350 <__assert_fail@plt>
    a6b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a6bd:	48 8b 40 08          	mov    0x8(%rax),%rax
    a6c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a6c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6c9:	48 8b 40 08          	mov    0x8(%rax),%rax
    a6cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a6d1:	e9 85 01 00 00       	jmp    a85b <semcheck_decls+0x23a>
    a6d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6da:	8b 00                	mov    (%rax),%eax
    a6dc:	83 f8 03             	cmp    $0x3,%eax
    a6df:	74 28                	je     a709 <semcheck_decls+0xe8>
    a6e1:	48 8d 05 90 f2 00 00 	lea    0xf290(%rip),%rax        # 19978 <__PRETTY_FUNCTION__.2>
    a6e8:	48 89 c1             	mov    %rax,%rcx
    a6eb:	ba 05 01 00 00       	mov    $0x105,%edx
    a6f0:	48 8d 05 b0 ef 00 00 	lea    0xefb0(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a6f7:	48 89 c6             	mov    %rax,%rsi
    a6fa:	48 8d 05 b8 f0 00 00 	lea    0xf0b8(%rip),%rax        # 197b9 <__PRETTY_FUNCTION__.0+0x1a9>
    a701:	48 89 c7             	mov    %rax,%rdi
    a704:	e8 47 7c ff ff       	call   2350 <__assert_fail@plt>
    a709:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a70d:	8b 40 04             	mov    0x4(%rax),%eax
    a710:	83 f8 02             	cmp    $0x2,%eax
    a713:	0f 85 b9 00 00 00    	jne    a7d2 <semcheck_decls+0x1b1>
    a719:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a71d:	48 8b 40 18          	mov    0x18(%rax),%rax
    a721:	48 85 c0             	test   %rax,%rax
    a724:	74 62                	je     a788 <semcheck_decls+0x167>
    a726:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a72a:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a72e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    a732:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a736:	48 89 ce             	mov    %rcx,%rsi
    a739:	48 89 c7             	mov    %rax,%rdi
    a73c:	e8 04 12 00 00       	call   b945 <FindIdent>
    a741:	83 f8 ff             	cmp    $0xffffffff,%eax
    a744:	75 36                	jne    a77c <semcheck_decls+0x15b>
    a746:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a74a:	48 8b 48 18          	mov    0x18(%rax),%rcx
    a74e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a752:	8b 10                	mov    (%rax),%edx
    a754:	48 8b 05 05 69 01 00 	mov    0x16905(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    a75b:	48 8d 35 76 f0 00 00 	lea    0xf076(%rip),%rsi        # 197d8 <__PRETTY_FUNCTION__.0+0x1c8>
    a762:	48 89 c7             	mov    %rax,%rdi
    a765:	b8 00 00 00 00       	mov    $0x0,%eax
    a76a:	e8 61 7c ff ff       	call   23d0 <fprintf@plt>
    a76f:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    a773:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%rbp)
    a77a:	eb 38                	jmp    a7b4 <semcheck_decls+0x193>
    a77c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a780:	8b 40 0c             	mov    0xc(%rax),%eax
    a783:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    a786:	eb 2c                	jmp    a7b4 <semcheck_decls+0x193>
    a788:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a78c:	8b 40 10             	mov    0x10(%rax),%eax
    a78f:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    a794:	74 0e                	je     a7a4 <semcheck_decls+0x183>
    a796:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a79a:	8b 40 10             	mov    0x10(%rax),%eax
    a79d:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    a7a2:	75 09                	jne    a7ad <semcheck_decls+0x18c>
    a7a4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    a7ab:	eb 07                	jmp    a7b4 <semcheck_decls+0x193>
    a7ad:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    a7b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7b8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a7bc:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    a7bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a7c3:	89 ce                	mov    %ecx,%esi
    a7c5:	48 89 c7             	mov    %rax,%rdi
    a7c8:	e8 6e 0d 00 00       	call   b53b <PushVarOntoScope>
    a7cd:	89 45 d0             	mov    %eax,-0x30(%rbp)
    a7d0:	eb 48                	jmp    a81a <semcheck_decls+0x1f9>
    a7d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7d6:	8b 40 10             	mov    0x10(%rax),%eax
    a7d9:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    a7de:	74 0e                	je     a7ee <semcheck_decls+0x1cd>
    a7e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7e4:	8b 40 10             	mov    0x10(%rax),%eax
    a7e7:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    a7ec:	75 09                	jne    a7f7 <semcheck_decls+0x1d6>
    a7ee:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    a7f5:	eb 07                	jmp    a7fe <semcheck_decls+0x1dd>
    a7f7:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    a7fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a802:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a806:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    a809:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a80d:	89 ce                	mov    %ecx,%esi
    a80f:	48 89 c7             	mov    %rax,%rdi
    a812:	e8 f0 0d 00 00       	call   b607 <PushArrayOntoScope>
    a817:	89 45 d0             	mov    %eax,-0x30(%rbp)
    a81a:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    a81e:	7e 2f                	jle    a84f <semcheck_decls+0x22e>
    a820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a824:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a828:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a82c:	8b 10                	mov    (%rax),%edx
    a82e:	48 8b 05 2b 68 01 00 	mov    0x1682b(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    a835:	48 8d 35 cc ee 00 00 	lea    0xeecc(%rip),%rsi        # 19708 <__PRETTY_FUNCTION__.0+0xf8>
    a83c:	48 89 c7             	mov    %rax,%rdi
    a83f:	b8 00 00 00 00       	mov    $0x0,%eax
    a844:	e8 87 7b ff ff       	call   23d0 <fprintf@plt>
    a849:	8b 45 d0             	mov    -0x30(%rbp),%eax
    a84c:	01 45 cc             	add    %eax,-0x34(%rbp)
    a84f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a853:	48 8b 40 10          	mov    0x10(%rax),%rax
    a857:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a85b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a860:	0f 85 70 fe ff ff    	jne    a6d6 <semcheck_decls+0xb5>
    a866:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a86a:	48 8b 40 10          	mov    0x10(%rax),%rax
    a86e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a872:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a877:	0f 85 0a fe ff ff    	jne    a687 <semcheck_decls+0x66>
    a87d:	8b 45 cc             	mov    -0x34(%rbp),%eax
    a880:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a884:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a88b:	00 00
    a88d:	74 05                	je     a894 <semcheck_decls+0x273>
    a88f:	e8 9c 7a ff ff       	call   2330 <__stack_chk_fail@plt>
    a894:	c9                   	leave
    a895:	c3                   	ret

000000000000a896 <semcheck_subprogram>:
    a896:	f3 0f 1e fa          	endbr64
    a89a:	55                   	push   %rbp
    a89b:	48 89 e5             	mov    %rsp,%rbp
    a89e:	48 83 ec 60          	sub    $0x60,%rsp
    a8a2:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    a8a6:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    a8aa:	89 55 ac             	mov    %edx,-0x54(%rbp)
    a8ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a8b4:	00 00
    a8b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a8ba:	31 c0                	xor    %eax,%eax
    a8bc:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    a8c3:	00
    a8c4:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    a8c9:	75 28                	jne    a8f3 <semcheck_subprogram+0x5d>
    a8cb:	48 8d 05 be f0 00 00 	lea    0xf0be(%rip),%rax        # 19990 <__PRETTY_FUNCTION__.1>
    a8d2:	48 89 c1             	mov    %rax,%rcx
    a8d5:	ba 49 01 00 00       	mov    $0x149,%edx
    a8da:	48 8d 05 c6 ed 00 00 	lea    0xedc6(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a8e1:	48 89 c6             	mov    %rax,%rsi
    a8e4:	48 8d 05 d5 ed 00 00 	lea    0xedd5(%rip),%rax        # 196c0 <__PRETTY_FUNCTION__.0+0xb0>
    a8eb:	48 89 c7             	mov    %rax,%rdi
    a8ee:	e8 5d 7a ff ff       	call   2350 <__assert_fail@plt>
    a8f3:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    a8f8:	75 28                	jne    a922 <semcheck_subprogram+0x8c>
    a8fa:	48 8d 05 8f f0 00 00 	lea    0xf08f(%rip),%rax        # 19990 <__PRETTY_FUNCTION__.1>
    a901:	48 89 c1             	mov    %rax,%rcx
    a904:	ba 4a 01 00 00       	mov    $0x14a,%edx
    a909:	48 8d 05 97 ed 00 00 	lea    0xed97(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a910:	48 89 c6             	mov    %rax,%rsi
    a913:	48 8d 05 e4 ee 00 00 	lea    0xeee4(%rip),%rax        # 197fe <__PRETTY_FUNCTION__.0+0x1ee>
    a91a:	48 89 c7             	mov    %rax,%rdi
    a91d:	e8 2e 7a ff ff       	call   2350 <__assert_fail@plt>
    a922:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a926:	8b 40 04             	mov    0x4(%rax),%eax
    a929:	83 f8 01             	cmp    $0x1,%eax
    a92c:	74 28                	je     a956 <semcheck_subprogram+0xc0>
    a92e:	48 8d 05 5b f0 00 00 	lea    0xf05b(%rip),%rax        # 19990 <__PRETTY_FUNCTION__.1>
    a935:	48 89 c1             	mov    %rax,%rcx
    a938:	ba 4b 01 00 00       	mov    $0x14b,%edx
    a93d:	48 8d 05 63 ed 00 00 	lea    0xed63(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a944:	48 89 c6             	mov    %rax,%rsi
    a947:	48 8d 05 ca ee 00 00 	lea    0xeeca(%rip),%rax        # 19818 <__PRETTY_FUNCTION__.0+0x208>
    a94e:	48 89 c7             	mov    %rax,%rdi
    a951:	e8 fa 79 ff ff       	call   2350 <__assert_fail@plt>
    a956:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a95a:	8b 40 08             	mov    0x8(%rax),%eax
    a95d:	89 45 dc             	mov    %eax,-0x24(%rbp)
    a960:	83 7d dc 05          	cmpl   $0x5,-0x24(%rbp)
    a964:	74 2e                	je     a994 <semcheck_subprogram+0xfe>
    a966:	83 7d dc 06          	cmpl   $0x6,-0x24(%rbp)
    a96a:	74 28                	je     a994 <semcheck_subprogram+0xfe>
    a96c:	48 8d 05 1d f0 00 00 	lea    0xf01d(%rip),%rax        # 19990 <__PRETTY_FUNCTION__.1>
    a973:	48 89 c1             	mov    %rax,%rcx
    a976:	ba 4e 01 00 00       	mov    $0x14e,%edx
    a97b:	48 8d 05 25 ed 00 00 	lea    0xed25(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    a982:	48 89 c6             	mov    %rax,%rsi
    a985:	48 8d 05 b4 ee 00 00 	lea    0xeeb4(%rip),%rax        # 19840 <__PRETTY_FUNCTION__.0+0x230>
    a98c:	48 89 c7             	mov    %rax,%rdi
    a98f:	e8 bc 79 ff ff       	call   2350 <__assert_fail@plt>
    a994:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    a99b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a99f:	48 8b 40 10          	mov    0x10(%rax),%rax
    a9a3:	48 89 c7             	mov    %rax,%rdi
    a9a6:	e8 db f4 ff ff       	call   9e86 <semcheck_id_not_main>
    a9ab:	01 45 cc             	add    %eax,-0x34(%rbp)
    a9ae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a9b2:	8b 40 30             	mov    0x30(%rax),%eax
    a9b5:	85 c0                	test   %eax,%eax
    a9b7:	74 0e                	je     a9c7 <semcheck_subprogram+0x131>
    a9b9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a9bd:	48 8b 40 10          	mov    0x10(%rax),%rax
    a9c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a9c5:	eb 27                	jmp    a9ee <semcheck_subprogram+0x158>
    a9c7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a9cb:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a9cf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a9d3:	48 8b 40 10          	mov    0x10(%rax),%rax
    a9d7:	48 89 d6             	mov    %rdx,%rsi
    a9da:	48 89 c7             	mov    %rax,%rdi
    a9dd:	e8 2f 17 00 00       	call   c111 <MangleFunctionName>
    a9e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a9e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a9ea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a9ee:	83 7d dc 05          	cmpl   $0x5,-0x24(%rbp)
    a9f2:	75 53                	jne    aa47 <semcheck_subprogram+0x1b1>
    a9f4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a9f8:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a9fc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aa00:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aa04:	48 89 ce             	mov    %rcx,%rsi
    aa07:	48 89 c7             	mov    %rax,%rdi
    aa0a:	e8 c4 0c 00 00       	call   b6d3 <PushProcedureOntoScope>
    aa0f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    aa12:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aa16:	48 89 c7             	mov    %rax,%rdi
    aa19:	e8 7a 0a 00 00       	call   b498 <PushScope>
    aa1e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aa22:	48 8b 50 18          	mov    0x18(%rax),%rdx
    aa26:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aa2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aa2e:	48 89 ce             	mov    %rcx,%rsi
    aa31:	48 89 c7             	mov    %rax,%rdi
    aa34:	e8 9a 0c 00 00       	call   b6d3 <PushProcedureOntoScope>
    aa39:	8b 45 ac             	mov    -0x54(%rbp),%eax
    aa3c:	83 c0 01             	add    $0x1,%eax
    aa3f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    aa42:	e9 e7 00 00 00       	jmp    ab2e <semcheck_subprogram+0x298>
    aa47:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aa4b:	48 8b 40 28          	mov    0x28(%rax),%rax
    aa4f:	48 85 c0             	test   %rax,%rax
    aa52:	74 62                	je     aab6 <semcheck_subprogram+0x220>
    aa54:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aa58:	48 8b 50 28          	mov    0x28(%rax),%rdx
    aa5c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    aa60:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    aa64:	48 89 ce             	mov    %rcx,%rsi
    aa67:	48 89 c7             	mov    %rax,%rdi
    aa6a:	e8 d6 0e 00 00       	call   b945 <FindIdent>
    aa6f:	83 f8 ff             	cmp    $0xffffffff,%eax
    aa72:	75 36                	jne    aaaa <semcheck_subprogram+0x214>
    aa74:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aa78:	48 8b 48 28          	mov    0x28(%rax),%rcx
    aa7c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aa80:	8b 10                	mov    (%rax),%edx
    aa82:	48 8b 05 d7 65 01 00 	mov    0x165d7(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    aa89:	48 8d 35 48 ed 00 00 	lea    0xed48(%rip),%rsi        # 197d8 <__PRETTY_FUNCTION__.0+0x1c8>
    aa90:	48 89 c7             	mov    %rax,%rdi
    aa93:	b8 00 00 00 00       	mov    $0x0,%eax
    aa98:	e8 33 79 ff ff       	call   23d0 <fprintf@plt>
    aa9d:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    aaa1:	c7 45 d8 03 00 00 00 	movl   $0x3,-0x28(%rbp)
    aaa8:	eb 38                	jmp    aae2 <semcheck_subprogram+0x24c>
    aaaa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aaae:	8b 40 0c             	mov    0xc(%rax),%eax
    aab1:	89 45 d8             	mov    %eax,-0x28(%rbp)
    aab4:	eb 2c                	jmp    aae2 <semcheck_subprogram+0x24c>
    aab6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aaba:	8b 40 20             	mov    0x20(%rax),%eax
    aabd:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    aac2:	74 0e                	je     aad2 <semcheck_subprogram+0x23c>
    aac4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aac8:	8b 40 20             	mov    0x20(%rax),%eax
    aacb:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    aad0:	75 09                	jne    aadb <semcheck_subprogram+0x245>
    aad2:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    aad9:	eb 07                	jmp    aae2 <semcheck_subprogram+0x24c>
    aadb:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
    aae2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    aae6:	48 8b 48 18          	mov    0x18(%rax),%rcx
    aaea:	8b 55 d8             	mov    -0x28(%rbp),%edx
    aaed:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    aaf1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aaf5:	48 89 c7             	mov    %rax,%rdi
    aaf8:	e8 a6 0c 00 00       	call   b7a3 <PushFunctionOntoScope>
    aafd:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ab00:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab04:	48 89 c7             	mov    %rax,%rdi
    ab07:	e8 8c 09 00 00       	call   b498 <PushScope>
    ab0c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab10:	48 8b 48 18          	mov    0x18(%rax),%rcx
    ab14:	8b 55 d8             	mov    -0x28(%rbp),%edx
    ab17:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    ab1b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab1f:	48 89 c7             	mov    %rax,%rdi
    ab22:	e8 4d 0d 00 00       	call   b874 <PushFuncRetOntoScope>
    ab27:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    ab2e:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    ab32:	7e 2f                	jle    ab63 <semcheck_subprogram+0x2cd>
    ab34:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab38:	48 8b 48 10          	mov    0x10(%rax),%rcx
    ab3c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab40:	8b 10                	mov    (%rax),%edx
    ab42:	48 8b 05 17 65 01 00 	mov    0x16517(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ab49:	48 8d 35 38 ed 00 00 	lea    0xed38(%rip),%rsi        # 19888 <__PRETTY_FUNCTION__.0+0x278>
    ab50:	48 89 c7             	mov    %rax,%rdi
    ab53:	b8 00 00 00 00       	mov    $0x0,%eax
    ab58:	e8 73 78 ff ff       	call   23d0 <fprintf@plt>
    ab5d:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ab60:	01 45 cc             	add    %eax,-0x34(%rbp)
    ab63:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab67:	48 8b 50 18          	mov    0x18(%rax),%rdx
    ab6b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab6f:	48 89 d6             	mov    %rdx,%rsi
    ab72:	48 89 c7             	mov    %rax,%rdi
    ab75:	e8 a7 fa ff ff       	call   a621 <semcheck_decls>
    ab7a:	01 45 cc             	add    %eax,-0x34(%rbp)
    ab7d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab81:	48 8b 50 38          	mov    0x38(%rax),%rdx
    ab85:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab89:	48 89 d6             	mov    %rdx,%rsi
    ab8c:	48 89 c7             	mov    %rax,%rdi
    ab8f:	e8 8d fa ff ff       	call   a621 <semcheck_decls>
    ab94:	01 45 cc             	add    %eax,-0x34(%rbp)
    ab97:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab9b:	48 8b 48 40          	mov    0x40(%rax),%rcx
    ab9f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    aba2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aba6:	48 89 ce             	mov    %rcx,%rsi
    aba9:	48 89 c7             	mov    %rax,%rdi
    abac:	e8 15 01 00 00       	call   acc6 <semcheck_subprograms>
    abb1:	01 45 cc             	add    %eax,-0x34(%rbp)
    abb4:	83 7d dc 05          	cmpl   $0x5,-0x24(%rbp)
    abb8:	75 22                	jne    abdc <semcheck_subprogram+0x346>
    abba:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    abbe:	48 8b 48 48          	mov    0x48(%rax),%rcx
    abc2:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    abc5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    abc9:	48 89 ce             	mov    %rcx,%rsi
    abcc:	48 89 c7             	mov    %rax,%rdi
    abcf:	e8 b6 16 00 00       	call   c28a <semcheck_stmt>
    abd4:	01 45 cc             	add    %eax,-0x34(%rbp)
    abd7:	e9 9e 00 00 00       	jmp    ac7a <semcheck_subprogram+0x3e4>
    abdc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abe0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    abe4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    abe8:	48 89 ce             	mov    %rcx,%rsi
    abeb:	48 89 c7             	mov    %rax,%rdi
    abee:	e8 52 0d 00 00       	call   b945 <FindIdent>
    abf3:	85 c0                	test   %eax,%eax
    abf5:	74 28                	je     ac1f <semcheck_subprogram+0x389>
    abf7:	48 8d 05 92 ed 00 00 	lea    0xed92(%rip),%rax        # 19990 <__PRETTY_FUNCTION__.1>
    abfe:	48 89 c1             	mov    %rax,%rcx
    ac01:	ba a9 01 00 00       	mov    $0x1a9,%edx
    ac06:	48 8d 05 9a ea 00 00 	lea    0xea9a(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    ac0d:	48 89 c6             	mov    %rax,%rsi
    ac10:	48 8d 05 99 ec 00 00 	lea    0xec99(%rip),%rax        # 198b0 <__PRETTY_FUNCTION__.0+0x2a0>
    ac17:	48 89 c7             	mov    %rax,%rdi
    ac1a:	e8 31 77 ff ff       	call   2350 <__assert_fail@plt>
    ac1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac23:	48 89 c7             	mov    %rax,%rdi
    ac26:	e8 bc 03 00 00       	call   afe7 <ResetHashNodeStatus>
    ac2b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ac2f:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ac33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ac37:	48 89 d6             	mov    %rdx,%rsi
    ac3a:	48 89 c7             	mov    %rax,%rdi
    ac3d:	e8 77 16 00 00       	call   c2b9 <semcheck_func_stmt>
    ac42:	01 45 cc             	add    %eax,-0x34(%rbp)
    ac45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac49:	8b 40 1c             	mov    0x1c(%rax),%eax
    ac4c:	85 c0                	test   %eax,%eax
    ac4e:	75 2a                	jne    ac7a <semcheck_subprogram+0x3e4>
    ac50:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ac54:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ac58:	48 8b 05 01 64 01 00 	mov    0x16401(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ac5f:	48 8d 0d 7a ec 00 00 	lea    0xec7a(%rip),%rcx        # 198e0 <__PRETTY_FUNCTION__.0+0x2d0>
    ac66:	48 89 ce             	mov    %rcx,%rsi
    ac69:	48 89 c7             	mov    %rax,%rdi
    ac6c:	b8 00 00 00 00       	mov    $0x0,%eax
    ac71:	e8 5a 77 ff ff       	call   23d0 <fprintf@plt>
    ac76:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    ac7a:	b8 00 00 00 00       	mov    $0x0,%eax
    ac7f:	e8 46 7d ff ff       	call   29ca <optimize_flag>
    ac84:	85 c0                	test   %eax,%eax
    ac86:	7e 19                	jle    aca1 <semcheck_subprogram+0x40b>
    ac88:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    ac8c:	75 13                	jne    aca1 <semcheck_subprogram+0x40b>
    ac8e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    ac92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ac96:	48 89 d6             	mov    %rdx,%rsi
    ac99:	48 89 c7             	mov    %rax,%rdi
    ac9c:	e8 97 a3 00 00       	call   15038 <optimize>
    aca1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aca5:	48 89 c7             	mov    %rax,%rdi
    aca8:	e8 80 0e 00 00       	call   bb2d <PopScope>
    acad:	8b 45 cc             	mov    -0x34(%rbp),%eax
    acb0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    acb4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    acbb:	00 00
    acbd:	74 05                	je     acc4 <semcheck_subprogram+0x42e>
    acbf:	e8 6c 76 ff ff       	call   2330 <__stack_chk_fail@plt>
    acc4:	c9                   	leave
    acc5:	c3                   	ret

000000000000acc6 <semcheck_subprograms>:
    acc6:	f3 0f 1e fa          	endbr64
    acca:	55                   	push   %rbp
    accb:	48 89 e5             	mov    %rsp,%rbp
    acce:	48 83 ec 30          	sub    $0x30,%rsp
    acd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acd6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    acda:	89 55 dc             	mov    %edx,-0x24(%rbp)
    acdd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    ace2:	75 28                	jne    ad0c <semcheck_subprograms+0x46>
    ace4:	48 8d 05 c5 ec 00 00 	lea    0xecc5(%rip),%rax        # 199b0 <__PRETTY_FUNCTION__.0>
    aceb:	48 89 c1             	mov    %rax,%rcx
    acee:	ba c8 01 00 00       	mov    $0x1c8,%edx
    acf3:	48 8d 05 ad e9 00 00 	lea    0xe9ad(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    acfa:	48 89 c6             	mov    %rax,%rsi
    acfd:	48 8d 05 bc e9 00 00 	lea    0xe9bc(%rip),%rax        # 196c0 <__PRETTY_FUNCTION__.0+0xb0>
    ad04:	48 89 c7             	mov    %rax,%rdi
    ad07:	e8 44 76 ff ff       	call   2350 <__assert_fail@plt>
    ad0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    ad13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ad1b:	eb 5b                	jmp    ad78 <semcheck_subprograms+0xb2>
    ad1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad21:	8b 00                	mov    (%rax),%eax
    ad23:	85 c0                	test   %eax,%eax
    ad25:	74 28                	je     ad4f <semcheck_subprograms+0x89>
    ad27:	48 8d 05 82 ec 00 00 	lea    0xec82(%rip),%rax        # 199b0 <__PRETTY_FUNCTION__.0>
    ad2e:	48 89 c1             	mov    %rax,%rcx
    ad31:	ba ce 01 00 00       	mov    $0x1ce,%edx
    ad36:	48 8d 05 6a e9 00 00 	lea    0xe96a(%rip),%rax        # 196a7 <__PRETTY_FUNCTION__.0+0x97>
    ad3d:	48 89 c6             	mov    %rax,%rsi
    ad40:	48 8d 05 88 e9 00 00 	lea    0xe988(%rip),%rax        # 196cf <__PRETTY_FUNCTION__.0+0xbf>
    ad47:	48 89 c7             	mov    %rax,%rdi
    ad4a:	e8 01 76 ff ff       	call   2350 <__assert_fail@plt>
    ad4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad53:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ad57:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ad5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad5e:	48 89 ce             	mov    %rcx,%rsi
    ad61:	48 89 c7             	mov    %rax,%rdi
    ad64:	e8 2d fb ff ff       	call   a896 <semcheck_subprogram>
    ad69:	01 45 f4             	add    %eax,-0xc(%rbp)
    ad6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad70:	48 8b 40 10          	mov    0x10(%rax),%rax
    ad74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ad78:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ad7d:	75 9e                	jne    ad1d <semcheck_subprograms+0x57>
    ad7f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    ad82:	c9                   	leave
    ad83:	c3                   	ret

000000000000ad84 <InitHashTable>:
    ad84:	f3 0f 1e fa          	endbr64
    ad88:	55                   	push   %rbp
    ad89:	48 89 e5             	mov    %rsp,%rbp
    ad8c:	48 83 ec 10          	sub    $0x10,%rsp
    ad90:	bf 98 06 00 00       	mov    $0x698,%edi
    ad95:	e8 76 76 ff ff       	call   2410 <malloc@plt>
    ad9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ad9e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    ada5:	eb 16                	jmp    adbd <InitHashTable+0x39>
    ada7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adab:	8b 55 f4             	mov    -0xc(%rbp),%edx
    adae:	48 63 d2             	movslq %edx,%rdx
    adb1:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
    adb8:	00
    adb9:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    adbd:	81 7d f4 d2 00 00 00 	cmpl   $0xd2,-0xc(%rbp)
    adc4:	7e e1                	jle    ada7 <InitHashTable+0x23>
    adc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adca:	c9                   	leave
    adcb:	c3                   	ret

000000000000adcc <AddIdentToTable>:
    adcc:	f3 0f 1e fa          	endbr64
    add0:	55                   	push   %rbp
    add1:	48 89 e5             	mov    %rsp,%rbp
    add4:	48 83 ec 40          	sub    $0x40,%rsp
    add8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    addc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ade0:	89 55 cc             	mov    %edx,-0x34(%rbp)
    ade3:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    ade6:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    adea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    adee:	48 89 c7             	mov    %rax,%rdi
    adf1:	e8 aa 04 00 00       	call   b2a0 <hashpjw>
    adf6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    adf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    adfd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    ae00:	48 63 d2             	movslq %edx,%rdx
    ae03:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    ae07:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ae0b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ae10:	75 78                	jne    ae8a <AddIdentToTable+0xbe>
    ae12:	bf 20 00 00 00       	mov    $0x20,%edi
    ae17:	e8 f4 75 ff ff       	call   2410 <malloc@plt>
    ae1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ae20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae24:	8b 55 c8             	mov    -0x38(%rbp),%edx
    ae27:	89 50 08             	mov    %edx,0x8(%rax)
    ae2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae2e:	8b 55 cc             	mov    -0x34(%rbp),%edx
    ae31:	89 50 0c             	mov    %edx,0xc(%rax)
    ae34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae38:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ae3c:	48 89 10             	mov    %rdx,(%rax)
    ae3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae43:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ae47:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ae4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    ae56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae5a:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    ae61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae65:	be 04 00 00 00       	mov    $0x4,%esi
    ae6a:	48 89 c7             	mov    %rax,%rdi
    ae6d:	e8 d5 cb ff ff       	call   7a47 <CreateListNode>
    ae72:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ae76:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    ae79:	48 63 c9             	movslq %ecx,%rcx
    ae7c:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    ae80:	b8 00 00 00 00       	mov    $0x0,%eax
    ae85:	e9 d2 00 00 00       	jmp    af5c <AddIdentToTable+0x190>
    ae8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae8e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ae92:	eb 3c                	jmp    aed0 <AddIdentToTable+0x104>
    ae94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae98:	48 8b 40 08          	mov    0x8(%rax),%rax
    ae9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    aea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea4:	48 8b 00             	mov    (%rax),%rax
    aea7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    aeab:	48 89 d6             	mov    %rdx,%rsi
    aeae:	48 89 c7             	mov    %rax,%rdi
    aeb1:	e8 0a 75 ff ff       	call   23c0 <strcmp@plt>
    aeb6:	85 c0                	test   %eax,%eax
    aeb8:	75 0a                	jne    aec4 <AddIdentToTable+0xf8>
    aeba:	b8 01 00 00 00       	mov    $0x1,%eax
    aebf:	e9 98 00 00 00       	jmp    af5c <AddIdentToTable+0x190>
    aec4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aec8:	48 8b 40 10          	mov    0x10(%rax),%rax
    aecc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    aed0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    aed5:	75 bd                	jne    ae94 <AddIdentToTable+0xc8>
    aed7:	bf 20 00 00 00       	mov    $0x20,%edi
    aedc:	e8 2f 75 ff ff       	call   2410 <malloc@plt>
    aee1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    aee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aee9:	8b 55 c8             	mov    -0x38(%rbp),%edx
    aeec:	89 50 08             	mov    %edx,0x8(%rax)
    aeef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef3:	8b 55 cc             	mov    -0x34(%rbp),%edx
    aef6:	89 50 0c             	mov    %edx,0xc(%rax)
    aef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aefd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    af01:	48 89 10             	mov    %rdx,(%rax)
    af04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af08:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    af0c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    af10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af14:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    af1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af1f:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    af26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af2a:	be 04 00 00 00       	mov    $0x4,%esi
    af2f:	48 89 c7             	mov    %rax,%rdi
    af32:	e8 10 cb ff ff       	call   7a47 <CreateListNode>
    af37:	48 89 c2             	mov    %rax,%rdx
    af3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af3e:	48 89 d6             	mov    %rdx,%rsi
    af41:	48 89 c7             	mov    %rax,%rdi
    af44:	e8 46 cb ff ff       	call   7a8f <PushListNodeFront>
    af49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    af4d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    af50:	48 63 c9             	movslq %ecx,%rcx
    af53:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    af57:	b8 00 00 00 00       	mov    $0x0,%eax
    af5c:	c9                   	leave
    af5d:	c3                   	ret

000000000000af5e <FindIdentInTable>:
    af5e:	f3 0f 1e fa          	endbr64
    af62:	55                   	push   %rbp
    af63:	48 89 e5             	mov    %rsp,%rbp
    af66:	48 83 ec 30          	sub    $0x30,%rsp
    af6a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    af6e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    af72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    af76:	48 89 c7             	mov    %rax,%rdi
    af79:	e8 22 03 00 00       	call   b2a0 <hashpjw>
    af7e:	89 45 ec             	mov    %eax,-0x14(%rbp)
    af81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af85:	8b 55 ec             	mov    -0x14(%rbp),%edx
    af88:	48 63 d2             	movslq %edx,%rdx
    af8b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    af8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    af93:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af98:	75 3f                	jne    afd9 <FindIdentInTable+0x7b>
    af9a:	b8 00 00 00 00       	mov    $0x0,%eax
    af9f:	eb 44                	jmp    afe5 <FindIdentInTable+0x87>
    afa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    afa5:	48 8b 40 08          	mov    0x8(%rax),%rax
    afa9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    afad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb1:	48 8b 00             	mov    (%rax),%rax
    afb4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    afb8:	48 89 d6             	mov    %rdx,%rsi
    afbb:	48 89 c7             	mov    %rax,%rdi
    afbe:	e8 fd 73 ff ff       	call   23c0 <strcmp@plt>
    afc3:	85 c0                	test   %eax,%eax
    afc5:	75 06                	jne    afcd <FindIdentInTable+0x6f>
    afc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afcb:	eb 18                	jmp    afe5 <FindIdentInTable+0x87>
    afcd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    afd1:	48 8b 40 10          	mov    0x10(%rax),%rax
    afd5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    afd9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    afde:	75 c1                	jne    afa1 <FindIdentInTable+0x43>
    afe0:	b8 00 00 00 00       	mov    $0x0,%eax
    afe5:	c9                   	leave
    afe6:	c3                   	ret

000000000000afe7 <ResetHashNodeStatus>:
    afe7:	f3 0f 1e fa          	endbr64
    afeb:	55                   	push   %rbp
    afec:	48 89 e5             	mov    %rsp,%rbp
    afef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff7:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    affe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b002:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    b009:	90                   	nop
    b00a:	5d                   	pop    %rbp
    b00b:	c3                   	ret

000000000000b00c <DestroyHashTable>:
    b00c:	f3 0f 1e fa          	endbr64
    b010:	55                   	push   %rbp
    b011:	48 89 e5             	mov    %rsp,%rbp
    b014:	48 83 ec 30          	sub    $0x30,%rsp
    b018:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b01c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    b023:	eb 73                	jmp    b098 <DestroyHashTable+0x8c>
    b025:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b029:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b02c:	48 63 d2             	movslq %edx,%rdx
    b02f:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b033:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b037:	eb 54                	jmp    b08d <DestroyHashTable+0x81>
    b039:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b03d:	48 8b 40 08          	mov    0x8(%rax),%rax
    b041:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b045:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b049:	8b 40 08             	mov    0x8(%rax),%eax
    b04c:	83 f8 05             	cmp    $0x5,%eax
    b04f:	75 0c                	jne    b05d <DestroyHashTable+0x51>
    b051:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b055:	48 89 c7             	mov    %rax,%rdi
    b058:	e8 53 00 00 00       	call   b0b0 <DestroyBuiltin>
    b05d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b061:	48 8b 40 08          	mov    0x8(%rax),%rax
    b065:	48 89 c7             	mov    %rax,%rdi
    b068:	e8 23 72 ff ff       	call   2290 <free@plt>
    b06d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b071:	48 8b 40 10          	mov    0x10(%rax),%rax
    b075:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b07d:	48 89 c7             	mov    %rax,%rdi
    b080:	e8 0b 72 ff ff       	call   2290 <free@plt>
    b085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b089:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b08d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b092:	75 a5                	jne    b039 <DestroyHashTable+0x2d>
    b094:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    b098:	81 7d e4 d2 00 00 00 	cmpl   $0xd2,-0x1c(%rbp)
    b09f:	7e 84                	jle    b025 <DestroyHashTable+0x19>
    b0a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b0a5:	48 89 c7             	mov    %rax,%rdi
    b0a8:	e8 e3 71 ff ff       	call   2290 <free@plt>
    b0ad:	90                   	nop
    b0ae:	c9                   	leave
    b0af:	c3                   	ret

000000000000b0b0 <DestroyBuiltin>:
    b0b0:	f3 0f 1e fa          	endbr64
    b0b4:	55                   	push   %rbp
    b0b5:	48 89 e5             	mov    %rsp,%rbp
    b0b8:	48 83 ec 10          	sub    $0x10,%rsp
    b0bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0c0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b0c5:	75 28                	jne    b0ef <DestroyBuiltin+0x3f>
    b0c7:	48 8d 05 a2 e9 00 00 	lea    0xe9a2(%rip),%rax        # 19a70 <__PRETTY_FUNCTION__.0>
    b0ce:	48 89 c1             	mov    %rax,%rcx
    b0d1:	ba 90 00 00 00       	mov    $0x90,%edx
    b0d6:	48 8d 05 eb e8 00 00 	lea    0xe8eb(%rip),%rax        # 199c8 <__PRETTY_FUNCTION__.0+0x18>
    b0dd:	48 89 c6             	mov    %rax,%rsi
    b0e0:	48 8d 05 05 e9 00 00 	lea    0xe905(%rip),%rax        # 199ec <__PRETTY_FUNCTION__.0+0x3c>
    b0e7:	48 89 c7             	mov    %rax,%rdi
    b0ea:	e8 61 72 ff ff       	call   2350 <__assert_fail@plt>
    b0ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0f3:	8b 40 08             	mov    0x8(%rax),%eax
    b0f6:	83 f8 05             	cmp    $0x5,%eax
    b0f9:	74 28                	je     b123 <DestroyBuiltin+0x73>
    b0fb:	48 8d 05 6e e9 00 00 	lea    0xe96e(%rip),%rax        # 19a70 <__PRETTY_FUNCTION__.0>
    b102:	48 89 c1             	mov    %rax,%rcx
    b105:	ba 91 00 00 00       	mov    $0x91,%edx
    b10a:	48 8d 05 b7 e8 00 00 	lea    0xe8b7(%rip),%rax        # 199c8 <__PRETTY_FUNCTION__.0+0x18>
    b111:	48 89 c6             	mov    %rax,%rsi
    b114:	48 8d 05 e5 e8 00 00 	lea    0xe8e5(%rip),%rax        # 19a00 <__PRETTY_FUNCTION__.0+0x50>
    b11b:	48 89 c7             	mov    %rax,%rdi
    b11e:	e8 2d 72 ff ff       	call   2350 <__assert_fail@plt>
    b123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b127:	48 8b 00             	mov    (%rax),%rax
    b12a:	48 89 c7             	mov    %rax,%rdi
    b12d:	e8 5e 71 ff ff       	call   2290 <free@plt>
    b132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b136:	48 8b 40 10          	mov    0x10(%rax),%rax
    b13a:	48 89 c7             	mov    %rax,%rdi
    b13d:	e8 cd dd ff ff       	call   8f0f <destroy_list>
    b142:	90                   	nop
    b143:	c9                   	leave
    b144:	c3                   	ret

000000000000b145 <PrintHashTable>:
    b145:	f3 0f 1e fa          	endbr64
    b149:	55                   	push   %rbp
    b14a:	48 89 e5             	mov    %rsp,%rbp
    b14d:	48 83 ec 40          	sub    $0x40,%rsp
    b151:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b155:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b159:	89 55 cc             	mov    %edx,-0x34(%rbp)
    b15c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    b163:	e9 27 01 00 00       	jmp    b28f <PrintHashTable+0x14a>
    b168:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b16c:	8b 55 e8             	mov    -0x18(%rbp),%edx
    b16f:	48 63 d2             	movslq %edx,%rdx
    b172:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b176:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b17a:	e9 01 01 00 00       	jmp    b280 <PrintHashTable+0x13b>
    b17f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b186:	eb 24                	jmp    b1ac <PrintHashTable+0x67>
    b188:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b18c:	48 89 c1             	mov    %rax,%rcx
    b18f:	ba 02 00 00 00       	mov    $0x2,%edx
    b194:	be 01 00 00 00       	mov    $0x1,%esi
    b199:	48 8d 05 8e e8 00 00 	lea    0xe88e(%rip),%rax        # 19a2e <__PRETTY_FUNCTION__.0+0x7e>
    b1a0:	48 89 c7             	mov    %rax,%rdi
    b1a3:	e8 e8 72 ff ff       	call   2490 <fwrite@plt>
    b1a8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b1ac:	8b 45 ec             	mov    -0x14(%rbp),%eax
    b1af:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    b1b2:	7c d4                	jl     b188 <PrintHashTable+0x43>
    b1b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b1b8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b1bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1c4:	8b 70 0c             	mov    0xc(%rax),%esi
    b1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1cb:	8b 48 08             	mov    0x8(%rax),%ecx
    b1ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d2:	48 8b 10             	mov    (%rax),%rdx
    b1d5:	8b 7d e8             	mov    -0x18(%rbp),%edi
    b1d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b1dc:	41 89 f9             	mov    %edi,%r9d
    b1df:	41 89 f0             	mov    %esi,%r8d
    b1e2:	48 8d 35 4f e8 00 00 	lea    0xe84f(%rip),%rsi        # 19a38 <__PRETTY_FUNCTION__.0+0x88>
    b1e9:	48 89 c7             	mov    %rax,%rdi
    b1ec:	b8 00 00 00 00       	mov    $0x0,%eax
    b1f1:	e8 da 71 ff ff       	call   23d0 <fprintf@plt>
    b1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1fa:	48 8b 40 10          	mov    0x10(%rax),%rax
    b1fe:	48 85 c0             	test   %rax,%rax
    b201:	74 71                	je     b274 <PrintHashTable+0x12f>
    b203:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b20a:	eb 24                	jmp    b230 <PrintHashTable+0xeb>
    b20c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b210:	48 89 c1             	mov    %rax,%rcx
    b213:	ba 02 00 00 00       	mov    $0x2,%edx
    b218:	be 01 00 00 00       	mov    $0x1,%esi
    b21d:	48 8d 05 0a e8 00 00 	lea    0xe80a(%rip),%rax        # 19a2e <__PRETTY_FUNCTION__.0+0x7e>
    b224:	48 89 c7             	mov    %rax,%rdi
    b227:	e8 64 72 ff ff       	call   2490 <fwrite@plt>
    b22c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b230:	8b 45 cc             	mov    -0x34(%rbp),%eax
    b233:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    b236:	7d d4                	jge    b20c <PrintHashTable+0xc7>
    b238:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b23c:	48 89 c1             	mov    %rax,%rcx
    b23f:	ba 08 00 00 00       	mov    $0x8,%edx
    b244:	be 01 00 00 00       	mov    $0x1,%esi
    b249:	48 8d 05 17 e8 00 00 	lea    0xe817(%rip),%rax        # 19a67 <__PRETTY_FUNCTION__.0+0xb7>
    b250:	48 89 c7             	mov    %rax,%rdi
    b253:	e8 38 72 ff ff       	call   2490 <fwrite@plt>
    b258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b25c:	48 8b 40 10          	mov    0x10(%rax),%rax
    b260:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b264:	ba 00 00 00 00       	mov    $0x0,%edx
    b269:	48 89 ce             	mov    %rcx,%rsi
    b26c:	48 89 c7             	mov    %rax,%rdi
    b26f:	e8 a8 ca ff ff       	call   7d1c <PrintList>
    b274:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b278:	48 8b 40 10          	mov    0x10(%rax),%rax
    b27c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b280:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b285:	0f 85 f4 fe ff ff    	jne    b17f <PrintHashTable+0x3a>
    b28b:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    b28f:	81 7d e8 d2 00 00 00 	cmpl   $0xd2,-0x18(%rbp)
    b296:	0f 8e cc fe ff ff    	jle    b168 <PrintHashTable+0x23>
    b29c:	90                   	nop
    b29d:	90                   	nop
    b29e:	c9                   	leave
    b29f:	c3                   	ret

000000000000b2a0 <hashpjw>:
    b2a0:	f3 0f 1e fa          	endbr64
    b2a4:	55                   	push   %rbp
    b2a5:	48 89 e5             	mov    %rsp,%rbp
    b2a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2ac:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    b2b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b2bb:	eb 3c                	jmp    b2f9 <hashpjw+0x59>
    b2bd:	8b 45 f0             	mov    -0x10(%rbp),%eax
    b2c0:	c1 e0 04             	shl    $0x4,%eax
    b2c3:	89 c2                	mov    %eax,%edx
    b2c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c9:	0f b6 00             	movzbl (%rax),%eax
    b2cc:	0f be c0             	movsbl %al,%eax
    b2cf:	01 d0                	add    %edx,%eax
    b2d1:	89 45 f0             	mov    %eax,-0x10(%rbp)
    b2d4:	8b 45 f0             	mov    -0x10(%rbp),%eax
    b2d7:	25 00 00 00 f0       	and    $0xf0000000,%eax
    b2dc:	89 45 f4             	mov    %eax,-0xc(%rbp)
    b2df:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    b2e3:	74 0f                	je     b2f4 <hashpjw+0x54>
    b2e5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    b2e8:	c1 e8 18             	shr    $0x18,%eax
    b2eb:	31 45 f0             	xor    %eax,-0x10(%rbp)
    b2ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    b2f1:	31 45 f0             	xor    %eax,-0x10(%rbp)
    b2f4:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    b2f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2fd:	0f b6 00             	movzbl (%rax),%eax
    b300:	84 c0                	test   %al,%al
    b302:	75 b9                	jne    b2bd <hashpjw+0x1d>
    b304:	8b 4d f0             	mov    -0x10(%rbp),%ecx
    b307:	89 ca                	mov    %ecx,%edx
    b309:	b8 9f 6f 4c 9b       	mov    $0x9b4c6f9f,%eax
    b30e:	48 0f af c2          	imul   %rdx,%rax
    b312:	48 c1 e8 20          	shr    $0x20,%rax
    b316:	c1 e8 07             	shr    $0x7,%eax
    b319:	69 d0 d3 00 00 00    	imul   $0xd3,%eax,%edx
    b31f:	89 c8                	mov    %ecx,%eax
    b321:	29 d0                	sub    %edx,%eax
    b323:	5d                   	pop    %rbp
    b324:	c3                   	ret

000000000000b325 <InitSymTab>:
    b325:	f3 0f 1e fa          	endbr64
    b329:	55                   	push   %rbp
    b32a:	48 89 e5             	mov    %rsp,%rbp
    b32d:	48 83 ec 10          	sub    $0x10,%rsp
    b331:	bf 10 00 00 00       	mov    $0x10,%edi
    b336:	e8 d5 70 ff ff       	call   2410 <malloc@plt>
    b33b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b33f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b343:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b34a:	b8 00 00 00 00       	mov    $0x0,%eax
    b34f:	e8 30 fa ff ff       	call   ad84 <InitHashTable>
    b354:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b358:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b35c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b360:	c9                   	leave
    b361:	c3                   	ret

000000000000b362 <AddBuiltinProc>:
    b362:	f3 0f 1e fa          	endbr64
    b366:	55                   	push   %rbp
    b367:	48 89 e5             	mov    %rsp,%rbp
    b36a:	48 83 ec 20          	sub    $0x20,%rsp
    b36e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b372:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b376:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    b37a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b37f:	75 28                	jne    b3a9 <AddBuiltinProc+0x47>
    b381:	48 8d 05 68 e7 00 00 	lea    0xe768(%rip),%rax        # 19af0 <__PRETTY_FUNCTION__.12>
    b388:	48 89 c1             	mov    %rax,%rcx
    b38b:	ba 22 00 00 00       	mov    $0x22,%edx
    b390:	48 8d 05 e9 e6 00 00 	lea    0xe6e9(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b397:	48 89 c6             	mov    %rax,%rsi
    b39a:	48 8d 05 fd e6 00 00 	lea    0xe6fd(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b3a1:	48 89 c7             	mov    %rax,%rdi
    b3a4:	e8 a7 6f ff ff       	call   2350 <__assert_fail@plt>
    b3a9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b3ae:	75 28                	jne    b3d8 <AddBuiltinProc+0x76>
    b3b0:	48 8d 05 39 e7 00 00 	lea    0xe739(%rip),%rax        # 19af0 <__PRETTY_FUNCTION__.12>
    b3b7:	48 89 c1             	mov    %rax,%rcx
    b3ba:	ba 23 00 00 00       	mov    $0x23,%edx
    b3bf:	48 8d 05 ba e6 00 00 	lea    0xe6ba(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b3c6:	48 89 c6             	mov    %rax,%rsi
    b3c9:	48 8d 05 dd e6 00 00 	lea    0xe6dd(%rip),%rax        # 19aad <__PRETTY_FUNCTION__.0+0x3d>
    b3d0:	48 89 c7             	mov    %rax,%rdi
    b3d3:	e8 78 6f ff ff       	call   2350 <__assert_fail@plt>
    b3d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3dc:	48 8b 40 08          	mov    0x8(%rax),%rax
    b3e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b3e4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b3e8:	49 89 d0             	mov    %rdx,%r8
    b3eb:	b9 05 00 00 00       	mov    $0x5,%ecx
    b3f0:	ba 02 00 00 00       	mov    $0x2,%edx
    b3f5:	48 89 c7             	mov    %rax,%rdi
    b3f8:	e8 cf f9 ff ff       	call   adcc <AddIdentToTable>
    b3fd:	c9                   	leave
    b3fe:	c3                   	ret

000000000000b3ff <AddBuiltinType>:
    b3ff:	f3 0f 1e fa          	endbr64
    b403:	55                   	push   %rbp
    b404:	48 89 e5             	mov    %rsp,%rbp
    b407:	48 83 ec 20          	sub    $0x20,%rsp
    b40b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b40f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b413:	89 55 ec             	mov    %edx,-0x14(%rbp)
    b416:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b41b:	75 28                	jne    b445 <AddBuiltinType+0x46>
    b41d:	48 8d 05 dc e6 00 00 	lea    0xe6dc(%rip),%rax        # 19b00 <__PRETTY_FUNCTION__.11>
    b424:	48 89 c1             	mov    %rax,%rcx
    b427:	ba 2c 00 00 00       	mov    $0x2c,%edx
    b42c:	48 8d 05 4d e6 00 00 	lea    0xe64d(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b433:	48 89 c6             	mov    %rax,%rsi
    b436:	48 8d 05 61 e6 00 00 	lea    0xe661(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b43d:	48 89 c7             	mov    %rax,%rdi
    b440:	e8 0b 6f ff ff       	call   2350 <__assert_fail@plt>
    b445:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b44a:	75 28                	jne    b474 <AddBuiltinType+0x75>
    b44c:	48 8d 05 ad e6 00 00 	lea    0xe6ad(%rip),%rax        # 19b00 <__PRETTY_FUNCTION__.11>
    b453:	48 89 c1             	mov    %rax,%rcx
    b456:	ba 2d 00 00 00       	mov    $0x2d,%edx
    b45b:	48 8d 05 1e e6 00 00 	lea    0xe61e(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b462:	48 89 c6             	mov    %rax,%rsi
    b465:	48 8d 05 41 e6 00 00 	lea    0xe641(%rip),%rax        # 19aad <__PRETTY_FUNCTION__.0+0x3d>
    b46c:	48 89 c7             	mov    %rax,%rdi
    b46f:	e8 dc 6e ff ff       	call   2350 <__assert_fail@plt>
    b474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b478:	48 8b 40 08          	mov    0x8(%rax),%rax
    b47c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    b47f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b483:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    b489:	b9 06 00 00 00       	mov    $0x6,%ecx
    b48e:	48 89 c7             	mov    %rax,%rdi
    b491:	e8 36 f9 ff ff       	call   adcc <AddIdentToTable>
    b496:	c9                   	leave
    b497:	c3                   	ret

000000000000b498 <PushScope>:
    b498:	f3 0f 1e fa          	endbr64
    b49c:	55                   	push   %rbp
    b49d:	48 89 e5             	mov    %rsp,%rbp
    b4a0:	48 83 ec 20          	sub    $0x20,%rsp
    b4a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4a8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b4ad:	75 28                	jne    b4d7 <PushScope+0x3f>
    b4af:	48 8d 05 5a e6 00 00 	lea    0xe65a(%rip),%rax        # 19b10 <__PRETTY_FUNCTION__.10>
    b4b6:	48 89 c1             	mov    %rax,%rcx
    b4b9:	ba 35 00 00 00       	mov    $0x35,%edx
    b4be:	48 8d 05 bb e5 00 00 	lea    0xe5bb(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b4c5:	48 89 c6             	mov    %rax,%rsi
    b4c8:	48 8d 05 cf e5 00 00 	lea    0xe5cf(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b4cf:	48 89 c7             	mov    %rax,%rdi
    b4d2:	e8 79 6e ff ff       	call   2350 <__assert_fail@plt>
    b4d7:	b8 00 00 00 00       	mov    $0x0,%eax
    b4dc:	e8 a3 f8 ff ff       	call   ad84 <InitHashTable>
    b4e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b4e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4e9:	48 8b 00             	mov    (%rax),%rax
    b4ec:	48 85 c0             	test   %rax,%rax
    b4ef:	75 1a                	jne    b50b <PushScope+0x73>
    b4f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f5:	be 04 00 00 00       	mov    $0x4,%esi
    b4fa:	48 89 c7             	mov    %rax,%rdi
    b4fd:	e8 45 c5 ff ff       	call   7a47 <CreateListNode>
    b502:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b506:	48 89 02             	mov    %rax,(%rdx)
    b509:	eb 2d                	jmp    b538 <PushScope+0xa0>
    b50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b50f:	be 04 00 00 00       	mov    $0x4,%esi
    b514:	48 89 c7             	mov    %rax,%rdi
    b517:	e8 2b c5 ff ff       	call   7a47 <CreateListNode>
    b51c:	48 89 c2             	mov    %rax,%rdx
    b51f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b523:	48 8b 00             	mov    (%rax),%rax
    b526:	48 89 d6             	mov    %rdx,%rsi
    b529:	48 89 c7             	mov    %rax,%rdi
    b52c:	e8 5e c5 ff ff       	call   7a8f <PushListNodeFront>
    b531:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b535:	48 89 02             	mov    %rax,(%rdx)
    b538:	90                   	nop
    b539:	c9                   	leave
    b53a:	c3                   	ret

000000000000b53b <PushVarOntoScope>:
    b53b:	f3 0f 1e fa          	endbr64
    b53f:	55                   	push   %rbp
    b540:	48 89 e5             	mov    %rsp,%rbp
    b543:	48 83 ec 30          	sub    $0x30,%rsp
    b547:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b54b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    b54e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b552:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b557:	75 28                	jne    b581 <PushVarOntoScope+0x46>
    b559:	48 8d 05 c0 e5 00 00 	lea    0xe5c0(%rip),%rax        # 19b20 <__PRETTY_FUNCTION__.9>
    b560:	48 89 c1             	mov    %rax,%rcx
    b563:	ba 44 00 00 00       	mov    $0x44,%edx
    b568:	48 8d 05 11 e5 00 00 	lea    0xe511(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b56f:	48 89 c6             	mov    %rax,%rsi
    b572:	48 8d 05 25 e5 00 00 	lea    0xe525(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b579:	48 89 c7             	mov    %rax,%rdi
    b57c:	e8 cf 6d ff ff       	call   2350 <__assert_fail@plt>
    b581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b585:	48 8b 00             	mov    (%rax),%rax
    b588:	48 85 c0             	test   %rax,%rax
    b58b:	75 28                	jne    b5b5 <PushVarOntoScope+0x7a>
    b58d:	48 8d 05 8c e5 00 00 	lea    0xe58c(%rip),%rax        # 19b20 <__PRETTY_FUNCTION__.9>
    b594:	48 89 c1             	mov    %rax,%rcx
    b597:	ba 45 00 00 00       	mov    $0x45,%edx
    b59c:	48 8d 05 dd e4 00 00 	lea    0xe4dd(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b5a3:	48 89 c6             	mov    %rax,%rsi
    b5a6:	48 8d 05 0b e5 00 00 	lea    0xe50b(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    b5ad:	48 89 c7             	mov    %rax,%rdi
    b5b0:	e8 9b 6d ff ff       	call   2350 <__assert_fail@plt>
    b5b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5b9:	48 8b 40 08          	mov    0x8(%rax),%rax
    b5bd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b5c1:	48 89 d6             	mov    %rdx,%rsi
    b5c4:	48 89 c7             	mov    %rax,%rdi
    b5c7:	e8 92 f9 ff ff       	call   af5e <FindIdentInTable>
    b5cc:	48 85 c0             	test   %rax,%rax
    b5cf:	75 2f                	jne    b600 <PushVarOntoScope+0xc5>
    b5d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5d5:	48 8b 00             	mov    (%rax),%rax
    b5d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b5dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b5e0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b5e3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    b5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5eb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    b5f1:	b9 00 00 00 00       	mov    $0x0,%ecx
    b5f6:	48 89 c7             	mov    %rax,%rdi
    b5f9:	e8 ce f7 ff ff       	call   adcc <AddIdentToTable>
    b5fe:	eb 05                	jmp    b605 <PushVarOntoScope+0xca>
    b600:	b8 01 00 00 00       	mov    $0x1,%eax
    b605:	c9                   	leave
    b606:	c3                   	ret

000000000000b607 <PushArrayOntoScope>:
    b607:	f3 0f 1e fa          	endbr64
    b60b:	55                   	push   %rbp
    b60c:	48 89 e5             	mov    %rsp,%rbp
    b60f:	48 83 ec 30          	sub    $0x30,%rsp
    b613:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b617:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    b61a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b61e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b623:	75 28                	jne    b64d <PushArrayOntoScope+0x46>
    b625:	48 8d 05 14 e5 00 00 	lea    0xe514(%rip),%rax        # 19b40 <__PRETTY_FUNCTION__.8>
    b62c:	48 89 c1             	mov    %rax,%rcx
    b62f:	ba 58 00 00 00       	mov    $0x58,%edx
    b634:	48 8d 05 45 e4 00 00 	lea    0xe445(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b63b:	48 89 c6             	mov    %rax,%rsi
    b63e:	48 8d 05 59 e4 00 00 	lea    0xe459(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b645:	48 89 c7             	mov    %rax,%rdi
    b648:	e8 03 6d ff ff       	call   2350 <__assert_fail@plt>
    b64d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b651:	48 8b 00             	mov    (%rax),%rax
    b654:	48 85 c0             	test   %rax,%rax
    b657:	75 28                	jne    b681 <PushArrayOntoScope+0x7a>
    b659:	48 8d 05 e0 e4 00 00 	lea    0xe4e0(%rip),%rax        # 19b40 <__PRETTY_FUNCTION__.8>
    b660:	48 89 c1             	mov    %rax,%rcx
    b663:	ba 59 00 00 00       	mov    $0x59,%edx
    b668:	48 8d 05 11 e4 00 00 	lea    0xe411(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b66f:	48 89 c6             	mov    %rax,%rsi
    b672:	48 8d 05 3f e4 00 00 	lea    0xe43f(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    b679:	48 89 c7             	mov    %rax,%rdi
    b67c:	e8 cf 6c ff ff       	call   2350 <__assert_fail@plt>
    b681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b685:	48 8b 40 08          	mov    0x8(%rax),%rax
    b689:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b68d:	48 89 d6             	mov    %rdx,%rsi
    b690:	48 89 c7             	mov    %rax,%rdi
    b693:	e8 c6 f8 ff ff       	call   af5e <FindIdentInTable>
    b698:	48 85 c0             	test   %rax,%rax
    b69b:	75 2f                	jne    b6cc <PushArrayOntoScope+0xc5>
    b69d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6a1:	48 8b 00             	mov    (%rax),%rax
    b6a4:	48 8b 40 08          	mov    0x8(%rax),%rax
    b6a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b6ac:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b6af:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    b6b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    b6bd:	b9 01 00 00 00       	mov    $0x1,%ecx
    b6c2:	48 89 c7             	mov    %rax,%rdi
    b6c5:	e8 02 f7 ff ff       	call   adcc <AddIdentToTable>
    b6ca:	eb 05                	jmp    b6d1 <PushArrayOntoScope+0xca>
    b6cc:	b8 01 00 00 00       	mov    $0x1,%eax
    b6d1:	c9                   	leave
    b6d2:	c3                   	ret

000000000000b6d3 <PushProcedureOntoScope>:
    b6d3:	f3 0f 1e fa          	endbr64
    b6d7:	55                   	push   %rbp
    b6d8:	48 89 e5             	mov    %rsp,%rbp
    b6db:	48 83 ec 30          	sub    $0x30,%rsp
    b6df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b6e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b6e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b6eb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b6f0:	75 28                	jne    b71a <PushProcedureOntoScope+0x47>
    b6f2:	48 8d 05 67 e4 00 00 	lea    0xe467(%rip),%rax        # 19b60 <__PRETTY_FUNCTION__.7>
    b6f9:	48 89 c1             	mov    %rax,%rcx
    b6fc:	ba 6d 00 00 00       	mov    $0x6d,%edx
    b701:	48 8d 05 78 e3 00 00 	lea    0xe378(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b708:	48 89 c6             	mov    %rax,%rsi
    b70b:	48 8d 05 8c e3 00 00 	lea    0xe38c(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b712:	48 89 c7             	mov    %rax,%rdi
    b715:	e8 36 6c ff ff       	call   2350 <__assert_fail@plt>
    b71a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b71e:	48 8b 00             	mov    (%rax),%rax
    b721:	48 85 c0             	test   %rax,%rax
    b724:	75 28                	jne    b74e <PushProcedureOntoScope+0x7b>
    b726:	48 8d 05 33 e4 00 00 	lea    0xe433(%rip),%rax        # 19b60 <__PRETTY_FUNCTION__.7>
    b72d:	48 89 c1             	mov    %rax,%rcx
    b730:	ba 6e 00 00 00       	mov    $0x6e,%edx
    b735:	48 8d 05 44 e3 00 00 	lea    0xe344(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b73c:	48 89 c6             	mov    %rax,%rsi
    b73f:	48 8d 05 72 e3 00 00 	lea    0xe372(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    b746:	48 89 c7             	mov    %rax,%rdi
    b749:	e8 02 6c ff ff       	call   2350 <__assert_fail@plt>
    b74e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b752:	48 8b 40 08          	mov    0x8(%rax),%rax
    b756:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b75a:	48 89 d6             	mov    %rdx,%rsi
    b75d:	48 89 c7             	mov    %rax,%rdi
    b760:	e8 f9 f7 ff ff       	call   af5e <FindIdentInTable>
    b765:	48 85 c0             	test   %rax,%rax
    b768:	75 32                	jne    b79c <PushProcedureOntoScope+0xc9>
    b76a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b76e:	48 8b 00             	mov    (%rax),%rax
    b771:	48 8b 40 08          	mov    0x8(%rax),%rax
    b775:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b779:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b77d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    b781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b785:	49 89 d0             	mov    %rdx,%r8
    b788:	b9 02 00 00 00       	mov    $0x2,%ecx
    b78d:	ba 02 00 00 00       	mov    $0x2,%edx
    b792:	48 89 c7             	mov    %rax,%rdi
    b795:	e8 32 f6 ff ff       	call   adcc <AddIdentToTable>
    b79a:	eb 05                	jmp    b7a1 <PushProcedureOntoScope+0xce>
    b79c:	b8 01 00 00 00       	mov    $0x1,%eax
    b7a1:	c9                   	leave
    b7a2:	c3                   	ret

000000000000b7a3 <PushFunctionOntoScope>:
    b7a3:	f3 0f 1e fa          	endbr64
    b7a7:	55                   	push   %rbp
    b7a8:	48 89 e5             	mov    %rsp,%rbp
    b7ab:	48 83 ec 30          	sub    $0x30,%rsp
    b7af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b7b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b7b7:	89 55 dc             	mov    %edx,-0x24(%rbp)
    b7ba:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    b7be:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b7c3:	75 28                	jne    b7ed <PushFunctionOntoScope+0x4a>
    b7c5:	48 8d 05 b4 e3 00 00 	lea    0xe3b4(%rip),%rax        # 19b80 <__PRETTY_FUNCTION__.6>
    b7cc:	48 89 c1             	mov    %rax,%rcx
    b7cf:	ba 82 00 00 00       	mov    $0x82,%edx
    b7d4:	48 8d 05 a5 e2 00 00 	lea    0xe2a5(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b7db:	48 89 c6             	mov    %rax,%rsi
    b7de:	48 8d 05 b9 e2 00 00 	lea    0xe2b9(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b7e5:	48 89 c7             	mov    %rax,%rdi
    b7e8:	e8 63 6b ff ff       	call   2350 <__assert_fail@plt>
    b7ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7f1:	48 8b 00             	mov    (%rax),%rax
    b7f4:	48 85 c0             	test   %rax,%rax
    b7f7:	75 28                	jne    b821 <PushFunctionOntoScope+0x7e>
    b7f9:	48 8d 05 80 e3 00 00 	lea    0xe380(%rip),%rax        # 19b80 <__PRETTY_FUNCTION__.6>
    b800:	48 89 c1             	mov    %rax,%rcx
    b803:	ba 83 00 00 00       	mov    $0x83,%edx
    b808:	48 8d 05 71 e2 00 00 	lea    0xe271(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b80f:	48 89 c6             	mov    %rax,%rsi
    b812:	48 8d 05 9f e2 00 00 	lea    0xe29f(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    b819:	48 89 c7             	mov    %rax,%rdi
    b81c:	e8 2f 6b ff ff       	call   2350 <__assert_fail@plt>
    b821:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b825:	48 8b 40 08          	mov    0x8(%rax),%rax
    b829:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b82d:	48 89 d6             	mov    %rdx,%rsi
    b830:	48 89 c7             	mov    %rax,%rdi
    b833:	e8 26 f7 ff ff       	call   af5e <FindIdentInTable>
    b838:	48 85 c0             	test   %rax,%rax
    b83b:	75 30                	jne    b86d <PushFunctionOntoScope+0xca>
    b83d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b841:	48 8b 00             	mov    (%rax),%rax
    b844:	48 8b 40 08          	mov    0x8(%rax),%rax
    b848:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b84c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b850:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b853:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    b857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b85b:	49 89 c8             	mov    %rcx,%r8
    b85e:	b9 03 00 00 00       	mov    $0x3,%ecx
    b863:	48 89 c7             	mov    %rax,%rdi
    b866:	e8 61 f5 ff ff       	call   adcc <AddIdentToTable>
    b86b:	eb 05                	jmp    b872 <PushFunctionOntoScope+0xcf>
    b86d:	b8 01 00 00 00       	mov    $0x1,%eax
    b872:	c9                   	leave
    b873:	c3                   	ret

000000000000b874 <PushFuncRetOntoScope>:
    b874:	f3 0f 1e fa          	endbr64
    b878:	55                   	push   %rbp
    b879:	48 89 e5             	mov    %rsp,%rbp
    b87c:	48 83 ec 30          	sub    $0x30,%rsp
    b880:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b884:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b888:	89 55 dc             	mov    %edx,-0x24(%rbp)
    b88b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    b88f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b894:	75 28                	jne    b8be <PushFuncRetOntoScope+0x4a>
    b896:	48 8d 05 03 e3 00 00 	lea    0xe303(%rip),%rax        # 19ba0 <__PRETTY_FUNCTION__.5>
    b89d:	48 89 c1             	mov    %rax,%rcx
    b8a0:	ba 97 00 00 00       	mov    $0x97,%edx
    b8a5:	48 8d 05 d4 e1 00 00 	lea    0xe1d4(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b8ac:	48 89 c6             	mov    %rax,%rsi
    b8af:	48 8d 05 e8 e1 00 00 	lea    0xe1e8(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b8b6:	48 89 c7             	mov    %rax,%rdi
    b8b9:	e8 92 6a ff ff       	call   2350 <__assert_fail@plt>
    b8be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8c2:	48 8b 00             	mov    (%rax),%rax
    b8c5:	48 85 c0             	test   %rax,%rax
    b8c8:	75 28                	jne    b8f2 <PushFuncRetOntoScope+0x7e>
    b8ca:	48 8d 05 cf e2 00 00 	lea    0xe2cf(%rip),%rax        # 19ba0 <__PRETTY_FUNCTION__.5>
    b8d1:	48 89 c1             	mov    %rax,%rcx
    b8d4:	ba 98 00 00 00       	mov    $0x98,%edx
    b8d9:	48 8d 05 a0 e1 00 00 	lea    0xe1a0(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b8e0:	48 89 c6             	mov    %rax,%rsi
    b8e3:	48 8d 05 ce e1 00 00 	lea    0xe1ce(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    b8ea:	48 89 c7             	mov    %rax,%rdi
    b8ed:	e8 5e 6a ff ff       	call   2350 <__assert_fail@plt>
    b8f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8f6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b8fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b8fe:	48 89 d6             	mov    %rdx,%rsi
    b901:	48 89 c7             	mov    %rax,%rdi
    b904:	e8 55 f6 ff ff       	call   af5e <FindIdentInTable>
    b909:	48 85 c0             	test   %rax,%rax
    b90c:	75 30                	jne    b93e <PushFuncRetOntoScope+0xca>
    b90e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b912:	48 8b 00             	mov    (%rax),%rax
    b915:	48 8b 40 08          	mov    0x8(%rax),%rax
    b919:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b91d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b921:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b924:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    b928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b92c:	49 89 c8             	mov    %rcx,%r8
    b92f:	b9 04 00 00 00       	mov    $0x4,%ecx
    b934:	48 89 c7             	mov    %rax,%rdi
    b937:	e8 90 f4 ff ff       	call   adcc <AddIdentToTable>
    b93c:	eb 05                	jmp    b943 <PushFuncRetOntoScope+0xcf>
    b93e:	b8 01 00 00 00       	mov    $0x1,%eax
    b943:	c9                   	leave
    b944:	c3                   	ret

000000000000b945 <FindIdent>:
    b945:	f3 0f 1e fa          	endbr64
    b949:	55                   	push   %rbp
    b94a:	48 89 e5             	mov    %rsp,%rbp
    b94d:	48 83 ec 40          	sub    $0x40,%rsp
    b951:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b955:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b959:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b95d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b964:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    b969:	75 28                	jne    b993 <FindIdent+0x4e>
    b96b:	48 8d 05 46 e2 00 00 	lea    0xe246(%rip),%rax        # 19bb8 <__PRETTY_FUNCTION__.4>
    b972:	48 89 c1             	mov    %rax,%rcx
    b975:	ba af 00 00 00       	mov    $0xaf,%edx
    b97a:	48 8d 05 ff e0 00 00 	lea    0xe0ff(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b981:	48 89 c6             	mov    %rax,%rsi
    b984:	48 8d 05 13 e1 00 00 	lea    0xe113(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    b98b:	48 89 c7             	mov    %rax,%rdi
    b98e:	e8 bd 69 ff ff       	call   2350 <__assert_fail@plt>
    b993:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    b998:	75 28                	jne    b9c2 <FindIdent+0x7d>
    b99a:	48 8d 05 17 e2 00 00 	lea    0xe217(%rip),%rax        # 19bb8 <__PRETTY_FUNCTION__.4>
    b9a1:	48 89 c1             	mov    %rax,%rcx
    b9a4:	ba b0 00 00 00       	mov    $0xb0,%edx
    b9a9:	48 8d 05 d0 e0 00 00 	lea    0xe0d0(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    b9b0:	48 89 c6             	mov    %rax,%rsi
    b9b3:	48 8d 05 f3 e0 00 00 	lea    0xe0f3(%rip),%rax        # 19aad <__PRETTY_FUNCTION__.0+0x3d>
    b9ba:	48 89 c7             	mov    %rax,%rdi
    b9bd:	e8 8e 69 ff ff       	call   2350 <__assert_fail@plt>
    b9c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b9c6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b9ca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b9ce:	48 89 d6             	mov    %rdx,%rsi
    b9d1:	48 89 c7             	mov    %rax,%rdi
    b9d4:	e8 85 f5 ff ff       	call   af5e <FindIdentInTable>
    b9d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b9dd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b9e2:	74 10                	je     b9f4 <FindIdent+0xaf>
    b9e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b9e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b9ec:	48 89 10             	mov    %rdx,(%rax)
    b9ef:	8b 45 ec             	mov    -0x14(%rbp),%eax
    b9f2:	eb 6b                	jmp    ba5f <FindIdent+0x11a>
    b9f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b9f8:	48 8b 00             	mov    (%rax),%rax
    b9fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b9ff:	eb 42                	jmp    ba43 <FindIdent+0xfe>
    ba01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba05:	48 8b 40 08          	mov    0x8(%rax),%rax
    ba09:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ba0d:	48 89 d6             	mov    %rdx,%rsi
    ba10:	48 89 c7             	mov    %rax,%rdi
    ba13:	e8 46 f5 ff ff       	call   af5e <FindIdentInTable>
    ba18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ba1c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ba21:	74 10                	je     ba33 <FindIdent+0xee>
    ba23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ba27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ba2b:	48 89 10             	mov    %rdx,(%rax)
    ba2e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ba31:	eb 2c                	jmp    ba5f <FindIdent+0x11a>
    ba33:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    ba37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba3b:	48 8b 40 10          	mov    0x10(%rax),%rax
    ba3f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ba43:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ba48:	75 b7                	jne    ba01 <FindIdent+0xbc>
    ba4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ba4e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ba55:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    ba5c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ba5f:	c9                   	leave
    ba60:	c3                   	ret

000000000000ba61 <PushTypeOntoScope>:
    ba61:	f3 0f 1e fa          	endbr64
    ba65:	55                   	push   %rbp
    ba66:	48 89 e5             	mov    %rsp,%rbp
    ba69:	48 83 ec 30          	sub    $0x30,%rsp
    ba6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ba75:	89 55 dc             	mov    %edx,-0x24(%rbp)
    ba78:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    ba7d:	75 28                	jne    baa7 <PushTypeOntoScope+0x46>
    ba7f:	48 8d 05 4a e1 00 00 	lea    0xe14a(%rip),%rax        # 19bd0 <__PRETTY_FUNCTION__.3>
    ba86:	48 89 c1             	mov    %rax,%rcx
    ba89:	ba d5 00 00 00       	mov    $0xd5,%edx
    ba8e:	48 8d 05 eb df 00 00 	lea    0xdfeb(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    ba95:	48 89 c6             	mov    %rax,%rsi
    ba98:	48 8d 05 ff df 00 00 	lea    0xdfff(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    ba9f:	48 89 c7             	mov    %rax,%rdi
    baa2:	e8 a9 68 ff ff       	call   2350 <__assert_fail@plt>
    baa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    baab:	48 8b 00             	mov    (%rax),%rax
    baae:	48 85 c0             	test   %rax,%rax
    bab1:	75 28                	jne    badb <PushTypeOntoScope+0x7a>
    bab3:	48 8d 05 16 e1 00 00 	lea    0xe116(%rip),%rax        # 19bd0 <__PRETTY_FUNCTION__.3>
    baba:	48 89 c1             	mov    %rax,%rcx
    babd:	ba d6 00 00 00       	mov    $0xd6,%edx
    bac2:	48 8d 05 b7 df 00 00 	lea    0xdfb7(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    bac9:	48 89 c6             	mov    %rax,%rsi
    bacc:	48 8d 05 e5 df 00 00 	lea    0xdfe5(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    bad3:	48 89 c7             	mov    %rax,%rdi
    bad6:	e8 75 68 ff ff       	call   2350 <__assert_fail@plt>
    badb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    badf:	48 8b 40 08          	mov    0x8(%rax),%rax
    bae3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bae7:	48 89 d6             	mov    %rdx,%rsi
    baea:	48 89 c7             	mov    %rax,%rdi
    baed:	e8 6c f4 ff ff       	call   af5e <FindIdentInTable>
    baf2:	48 85 c0             	test   %rax,%rax
    baf5:	75 2f                	jne    bb26 <PushTypeOntoScope+0xc5>
    baf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bafb:	48 8b 00             	mov    (%rax),%rax
    bafe:	48 8b 40 08          	mov    0x8(%rax),%rax
    bb02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bb06:	8b 55 dc             	mov    -0x24(%rbp),%edx
    bb09:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    bb0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb11:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    bb17:	b9 06 00 00 00       	mov    $0x6,%ecx
    bb1c:	48 89 c7             	mov    %rax,%rdi
    bb1f:	e8 a8 f2 ff ff       	call   adcc <AddIdentToTable>
    bb24:	eb 05                	jmp    bb2b <PushTypeOntoScope+0xca>
    bb26:	b8 01 00 00 00       	mov    $0x1,%eax
    bb2b:	c9                   	leave
    bb2c:	c3                   	ret

000000000000bb2d <PopScope>:
    bb2d:	f3 0f 1e fa          	endbr64
    bb31:	55                   	push   %rbp
    bb32:	48 89 e5             	mov    %rsp,%rbp
    bb35:	48 83 ec 20          	sub    $0x20,%rsp
    bb39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb3d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bb42:	75 28                	jne    bb6c <PopScope+0x3f>
    bb44:	48 8d 05 9d e0 00 00 	lea    0xe09d(%rip),%rax        # 19be8 <__PRETTY_FUNCTION__.2>
    bb4b:	48 89 c1             	mov    %rax,%rcx
    bb4e:	ba e8 00 00 00       	mov    $0xe8,%edx
    bb53:	48 8d 05 26 df 00 00 	lea    0xdf26(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    bb5a:	48 89 c6             	mov    %rax,%rsi
    bb5d:	48 8d 05 3a df 00 00 	lea    0xdf3a(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    bb64:	48 89 c7             	mov    %rax,%rdi
    bb67:	e8 e4 67 ff ff       	call   2350 <__assert_fail@plt>
    bb6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb70:	48 8b 00             	mov    (%rax),%rax
    bb73:	48 85 c0             	test   %rax,%rax
    bb76:	75 28                	jne    bba0 <PopScope+0x73>
    bb78:	48 8d 05 69 e0 00 00 	lea    0xe069(%rip),%rax        # 19be8 <__PRETTY_FUNCTION__.2>
    bb7f:	48 89 c1             	mov    %rax,%rcx
    bb82:	ba e9 00 00 00       	mov    $0xe9,%edx
    bb87:	48 8d 05 f2 de 00 00 	lea    0xdef2(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    bb8e:	48 89 c6             	mov    %rax,%rsi
    bb91:	48 8d 05 20 df 00 00 	lea    0xdf20(%rip),%rax        # 19ab8 <__PRETTY_FUNCTION__.0+0x48>
    bb98:	48 89 c7             	mov    %rax,%rdi
    bb9b:	e8 b0 67 ff ff       	call   2350 <__assert_fail@plt>
    bba0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bba4:	48 8b 00             	mov    (%rax),%rax
    bba7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bbab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bbaf:	48 8b 00             	mov    (%rax),%rax
    bbb2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bbb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bbba:	48 89 10             	mov    %rdx,(%rax)
    bbbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc1:	48 8b 40 08          	mov    0x8(%rax),%rax
    bbc5:	48 89 c7             	mov    %rax,%rdi
    bbc8:	e8 3f f4 ff ff       	call   b00c <DestroyHashTable>
    bbcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd1:	48 89 c7             	mov    %rax,%rdi
    bbd4:	e8 b7 66 ff ff       	call   2290 <free@plt>
    bbd9:	90                   	nop
    bbda:	c9                   	leave
    bbdb:	c3                   	ret

000000000000bbdc <DestroySymTab>:
    bbdc:	f3 0f 1e fa          	endbr64
    bbe0:	55                   	push   %rbp
    bbe1:	48 89 e5             	mov    %rsp,%rbp
    bbe4:	48 83 ec 20          	sub    $0x20,%rsp
    bbe8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bbec:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bbf1:	75 28                	jne    bc1b <DestroySymTab+0x3f>
    bbf3:	48 8d 05 fe df 00 00 	lea    0xdffe(%rip),%rax        # 19bf8 <__PRETTY_FUNCTION__.1>
    bbfa:	48 89 c1             	mov    %rax,%rcx
    bbfd:	ba f7 00 00 00       	mov    $0xf7,%edx
    bc02:	48 8d 05 77 de 00 00 	lea    0xde77(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    bc09:	48 89 c6             	mov    %rax,%rsi
    bc0c:	48 8d 05 8b de 00 00 	lea    0xde8b(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    bc13:	48 89 c7             	mov    %rax,%rdi
    bc16:	e8 35 67 ff ff       	call   2350 <__assert_fail@plt>
    bc1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc1f:	48 8b 00             	mov    (%rax),%rax
    bc22:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    bc26:	eb 30                	jmp    bc58 <DestroySymTab+0x7c>
    bc28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc2c:	48 8b 40 10          	mov    0x10(%rax),%rax
    bc30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bc34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc38:	48 8b 40 08          	mov    0x8(%rax),%rax
    bc3c:	48 89 c7             	mov    %rax,%rdi
    bc3f:	e8 c8 f3 ff ff       	call   b00c <DestroyHashTable>
    bc44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc48:	48 89 c7             	mov    %rax,%rdi
    bc4b:	e8 40 66 ff ff       	call   2290 <free@plt>
    bc50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc54:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    bc58:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bc5d:	75 c9                	jne    bc28 <DestroySymTab+0x4c>
    bc5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc63:	48 8b 40 08          	mov    0x8(%rax),%rax
    bc67:	48 89 c7             	mov    %rax,%rdi
    bc6a:	e8 9d f3 ff ff       	call   b00c <DestroyHashTable>
    bc6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc73:	48 89 c7             	mov    %rax,%rdi
    bc76:	e8 15 66 ff ff       	call   2290 <free@plt>
    bc7b:	90                   	nop
    bc7c:	c9                   	leave
    bc7d:	c3                   	ret

000000000000bc7e <PrintSymTab>:
    bc7e:	f3 0f 1e fa          	endbr64
    bc82:	55                   	push   %rbp
    bc83:	48 89 e5             	mov    %rsp,%rbp
    bc86:	48 83 ec 30          	sub    $0x30,%rsp
    bc8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc8e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bc92:	89 55 dc             	mov    %edx,-0x24(%rbp)
    bc95:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bc9a:	75 28                	jne    bcc4 <PrintSymTab+0x46>
    bc9c:	48 8d 05 65 df 00 00 	lea    0xdf65(%rip),%rax        # 19c08 <__PRETTY_FUNCTION__.0>
    bca3:	48 89 c1             	mov    %rax,%rcx
    bca6:	ba 0c 01 00 00       	mov    $0x10c,%edx
    bcab:	48 8d 05 ce dd 00 00 	lea    0xddce(%rip),%rax        # 19a80 <__PRETTY_FUNCTION__.0+0x10>
    bcb2:	48 89 c6             	mov    %rax,%rsi
    bcb5:	48 8d 05 e2 dd 00 00 	lea    0xdde2(%rip),%rax        # 19a9e <__PRETTY_FUNCTION__.0+0x2e>
    bcbc:	48 89 c7             	mov    %rax,%rdi
    bcbf:	e8 8c 66 ff ff       	call   2350 <__assert_fail@plt>
    bcc4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bccb:	eb 24                	jmp    bcf1 <PrintSymTab+0x73>
    bccd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bcd1:	48 89 c1             	mov    %rax,%rcx
    bcd4:	ba 02 00 00 00       	mov    $0x2,%edx
    bcd9:	be 01 00 00 00       	mov    $0x1,%esi
    bcde:	48 8d 05 ee dd 00 00 	lea    0xddee(%rip),%rax        # 19ad3 <__PRETTY_FUNCTION__.0+0x63>
    bce5:	48 89 c7             	mov    %rax,%rdi
    bce8:	e8 a3 67 ff ff       	call   2490 <fwrite@plt>
    bced:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    bcf1:	8b 45 f0             	mov    -0x10(%rbp),%eax
    bcf4:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    bcf7:	7c d4                	jl     bccd <PrintSymTab+0x4f>
    bcf9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bcfd:	48 89 c1             	mov    %rax,%rcx
    bd00:	ba 0d 00 00 00       	mov    $0xd,%edx
    bd05:	be 01 00 00 00       	mov    $0x1,%esi
    bd0a:	48 8d 05 c5 dd 00 00 	lea    0xddc5(%rip),%rax        # 19ad6 <__PRETTY_FUNCTION__.0+0x66>
    bd11:	48 89 c7             	mov    %rax,%rdi
    bd14:	e8 77 67 ff ff       	call   2490 <fwrite@plt>
    bd19:	8b 45 dc             	mov    -0x24(%rbp),%eax
    bd1c:	8d 50 01             	lea    0x1(%rax),%edx
    bd1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd23:	48 8b 40 08          	mov    0x8(%rax),%rax
    bd27:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bd2b:	48 89 ce             	mov    %rcx,%rsi
    bd2e:	48 89 c7             	mov    %rax,%rdi
    bd31:	e8 0f f4 ff ff       	call   b145 <PrintHashTable>
    bd36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd3a:	48 8b 00             	mov    (%rax),%rax
    bd3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bd41:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    bd48:	e9 91 00 00 00       	jmp    bdde <PrintSymTab+0x160>
    bd4d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bd54:	eb 24                	jmp    bd7a <PrintSymTab+0xfc>
    bd56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bd5a:	48 89 c1             	mov    %rax,%rcx
    bd5d:	ba 02 00 00 00       	mov    $0x2,%edx
    bd62:	be 01 00 00 00       	mov    $0x1,%esi
    bd67:	48 8d 05 65 dd 00 00 	lea    0xdd65(%rip),%rax        # 19ad3 <__PRETTY_FUNCTION__.0+0x63>
    bd6e:	48 89 c7             	mov    %rax,%rdi
    bd71:	e8 1a 67 ff ff       	call   2490 <fwrite@plt>
    bd76:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    bd7a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    bd7d:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    bd80:	7c d4                	jl     bd56 <PrintSymTab+0xd8>
    bd82:	8b 55 f4             	mov    -0xc(%rbp),%edx
    bd85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bd89:	48 8d 0d 54 dd 00 00 	lea    0xdd54(%rip),%rcx        # 19ae4 <__PRETTY_FUNCTION__.0+0x74>
    bd90:	48 89 ce             	mov    %rcx,%rsi
    bd93:	48 89 c7             	mov    %rax,%rdi
    bd96:	b8 00 00 00 00       	mov    $0x0,%eax
    bd9b:	e8 30 66 ff ff       	call   23d0 <fprintf@plt>
    bda0:	8b 45 dc             	mov    -0x24(%rbp),%eax
    bda3:	8d 50 01             	lea    0x1(%rax),%edx
    bda6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdaa:	48 8b 40 08          	mov    0x8(%rax),%rax
    bdae:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bdb2:	48 89 ce             	mov    %rcx,%rsi
    bdb5:	48 89 c7             	mov    %rax,%rdi
    bdb8:	e8 88 f3 ff ff       	call   b145 <PrintHashTable>
    bdbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bdc1:	48 89 c6             	mov    %rax,%rsi
    bdc4:	bf 0a 00 00 00       	mov    $0xa,%edi
    bdc9:	e8 c2 65 ff ff       	call   2390 <fputc@plt>
    bdce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdd2:	48 8b 40 10          	mov    0x10(%rax),%rax
    bdd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bdda:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    bdde:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    bde3:	0f 85 64 ff ff ff    	jne    bd4d <PrintSymTab+0xcf>
    bde9:	90                   	nop
    bdea:	90                   	nop
    bdeb:	c9                   	leave
    bdec:	c3                   	ret

000000000000bded <DestroyIntList>:
    bded:	f3 0f 1e fa          	endbr64
    bdf1:	55                   	push   %rbp
    bdf2:	48 89 e5             	mov    %rsp,%rbp
    bdf5:	48 83 ec 20          	sub    $0x20,%rsp
    bdf9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bdfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be01:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    be05:	eb 30                	jmp    be37 <DestroyIntList+0x4a>
    be07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be0b:	48 8b 40 08          	mov    0x8(%rax),%rax
    be0f:	48 89 c7             	mov    %rax,%rdi
    be12:	e8 79 64 ff ff       	call   2290 <free@plt>
    be17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be1b:	48 8b 40 10          	mov    0x10(%rax),%rax
    be1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    be23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be27:	48 89 c7             	mov    %rax,%rdi
    be2a:	e8 61 64 ff ff       	call   2290 <free@plt>
    be2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    be37:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    be3c:	75 c9                	jne    be07 <DestroyIntList+0x1a>
    be3e:	90                   	nop
    be3f:	90                   	nop
    be40:	c9                   	leave
    be41:	c3                   	ret

000000000000be42 <GetFlatTypeListForMangling>:
    be42:	f3 0f 1e fa          	endbr64
    be46:	55                   	push   %rbp
    be47:	48 89 e5             	mov    %rsp,%rbp
    be4a:	48 83 ec 50          	sub    $0x50,%rsp
    be4e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    be52:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    be57:	75 0a                	jne    be63 <GetFlatTypeListForMangling+0x21>
    be59:	b8 00 00 00 00       	mov    $0x0,%eax
    be5e:	e9 07 01 00 00       	jmp    bf6a <GetFlatTypeListForMangling+0x128>
    be63:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    be6a:	00
    be6b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    be6f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    be73:	e9 e3 00 00 00       	jmp    bf5b <GetFlatTypeListForMangling+0x119>
    be78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    be7c:	48 8b 40 08          	mov    0x8(%rax),%rax
    be80:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    be84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be88:	8b 40 04             	mov    0x4(%rax),%eax
    be8b:	83 f8 02             	cmp    $0x2,%eax
    be8e:	75 18                	jne    bea8 <GetFlatTypeListForMangling+0x66>
    be90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be94:	8b 40 10             	mov    0x10(%rax),%eax
    be97:	89 45 cc             	mov    %eax,-0x34(%rbp)
    be9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be9e:	48 8b 40 08          	mov    0x8(%rax),%rax
    bea2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    bea6:	eb 32                	jmp    beda <GetFlatTypeListForMangling+0x98>
    bea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    beac:	8b 40 04             	mov    0x4(%rax),%eax
    beaf:	83 f8 03             	cmp    $0x3,%eax
    beb2:	75 15                	jne    bec9 <GetFlatTypeListForMangling+0x87>
    beb4:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%rbp)
    bebb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bebf:	48 8b 40 08          	mov    0x8(%rax),%rax
    bec3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    bec7:	eb 11                	jmp    beda <GetFlatTypeListForMangling+0x98>
    bec9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    becd:	48 8b 40 10          	mov    0x10(%rax),%rax
    bed1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bed5:	e9 81 00 00 00       	jmp    bf5b <GetFlatTypeListForMangling+0x119>
    beda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bede:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    bee2:	eb 64                	jmp    bf48 <GetFlatTypeListForMangling+0x106>
    bee4:	bf 04 00 00 00       	mov    $0x4,%edi
    bee9:	e8 22 65 ff ff       	call   2410 <malloc@plt>
    beee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bef6:	8b 55 cc             	mov    -0x34(%rbp),%edx
    bef9:	89 10                	mov    %edx,(%rax)
    befb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    bf00:	75 17                	jne    bf19 <GetFlatTypeListForMangling+0xd7>
    bf02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf06:	be 04 00 00 00       	mov    $0x4,%esi
    bf0b:	48 89 c7             	mov    %rax,%rdi
    bf0e:	e8 34 bb ff ff       	call   7a47 <CreateListNode>
    bf13:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    bf17:	eb 23                	jmp    bf3c <GetFlatTypeListForMangling+0xfa>
    bf19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf1d:	be 04 00 00 00       	mov    $0x4,%esi
    bf22:	48 89 c7             	mov    %rax,%rdi
    bf25:	e8 1d bb ff ff       	call   7a47 <CreateListNode>
    bf2a:	48 89 c2             	mov    %rax,%rdx
    bf2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bf31:	48 89 d6             	mov    %rdx,%rsi
    bf34:	48 89 c7             	mov    %rax,%rdi
    bf37:	e8 d7 bb ff ff       	call   7b13 <PushListNodeBack>
    bf3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf40:	48 8b 40 10          	mov    0x10(%rax),%rax
    bf44:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    bf48:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bf4d:	75 95                	jne    bee4 <GetFlatTypeListForMangling+0xa2>
    bf4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf53:	48 8b 40 10          	mov    0x10(%rax),%rax
    bf57:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bf5b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    bf60:	0f 85 12 ff ff ff    	jne    be78 <GetFlatTypeListForMangling+0x36>
    bf66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bf6a:	c9                   	leave
    bf6b:	c3                   	ret

000000000000bf6c <MangleNameFromTypeList>:
    bf6c:	f3 0f 1e fa          	endbr64
    bf70:	55                   	push   %rbp
    bf71:	48 89 e5             	mov    %rsp,%rbp
    bf74:	53                   	push   %rbx
    bf75:	48 83 ec 58          	sub    $0x58,%rsp
    bf79:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    bf7d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    bf81:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    bf86:	75 62                	jne    bfea <MangleNameFromTypeList+0x7e>
    bf88:	48 8d 05 85 dc 00 00 	lea    0xdc85(%rip),%rax        # 19c14 <__PRETTY_FUNCTION__.0+0xc>
    bf8f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    bf93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bf97:	48 89 c7             	mov    %rax,%rdi
    bf9a:	e8 81 63 ff ff       	call   2320 <strlen@plt>
    bf9f:	48 89 c3             	mov    %rax,%rbx
    bfa2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bfa6:	48 89 c7             	mov    %rax,%rdi
    bfa9:	e8 72 63 ff ff       	call   2320 <strlen@plt>
    bfae:	48 01 d8             	add    %rbx,%rax
    bfb1:	48 83 c0 01          	add    $0x1,%rax
    bfb5:	48 89 c7             	mov    %rax,%rdi
    bfb8:	e8 53 64 ff ff       	call   2410 <malloc@plt>
    bfbd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    bfc1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bfc5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    bfc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfcd:	48 8d 35 46 dc 00 00 	lea    0xdc46(%rip),%rsi        # 19c1a <__PRETTY_FUNCTION__.0+0x12>
    bfd4:	48 89 c7             	mov    %rax,%rdi
    bfd7:	b8 00 00 00 00       	mov    $0x0,%eax
    bfdc:	e8 8f 64 ff ff       	call   2470 <sprintf@plt>
    bfe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfe5:	e9 21 01 00 00       	jmp    c10b <MangleNameFromTypeList+0x19f>
    bfea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bfee:	48 89 c7             	mov    %rax,%rdi
    bff1:	e8 2a 63 ff ff       	call   2320 <strlen@plt>
    bff6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    bffa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bffe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c002:	eb 11                	jmp    c015 <MangleNameFromTypeList+0xa9>
    c004:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
    c009:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c00d:	48 8b 40 10          	mov    0x10(%rax),%rax
    c011:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c015:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c01a:	75 e8                	jne    c004 <MangleNameFromTypeList+0x98>
    c01c:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    c021:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c025:	48 89 c7             	mov    %rax,%rdi
    c028:	e8 e3 63 ff ff       	call   2410 <malloc@plt>
    c02d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c031:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c035:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c039:	48 89 d6             	mov    %rdx,%rsi
    c03c:	48 89 c7             	mov    %rax,%rdi
    c03f:	e8 7c 62 ff ff       	call   22c0 <strcpy@plt>
    c044:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c048:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c04c:	e9 9f 00 00 00       	jmp    c0f0 <MangleNameFromTypeList+0x184>
    c051:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c055:	48 8b 40 08          	mov    0x8(%rax),%rax
    c059:	8b 00                	mov    (%rax),%eax
    c05b:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c05e:	81 7d bc 0c 01 00 00 	cmpl   $0x10c,-0x44(%rbp)
    c065:	74 37                	je     c09e <MangleNameFromTypeList+0x132>
    c067:	81 7d bc 0c 01 00 00 	cmpl   $0x10c,-0x44(%rbp)
    c06e:	7f 55                	jg     c0c5 <MangleNameFromTypeList+0x159>
    c070:	81 7d bc 0b 01 00 00 	cmpl   $0x10b,-0x44(%rbp)
    c077:	74 32                	je     c0ab <MangleNameFromTypeList+0x13f>
    c079:	81 7d bc 0b 01 00 00 	cmpl   $0x10b,-0x44(%rbp)
    c080:	7f 43                	jg     c0c5 <MangleNameFromTypeList+0x159>
    c082:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    c086:	74 30                	je     c0b8 <MangleNameFromTypeList+0x14c>
    c088:	81 7d bc 0a 01 00 00 	cmpl   $0x10a,-0x44(%rbp)
    c08f:	75 34                	jne    c0c5 <MangleNameFromTypeList+0x159>
    c091:	48 8d 05 87 db 00 00 	lea    0xdb87(%rip),%rax        # 19c1f <__PRETTY_FUNCTION__.0+0x17>
    c098:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c09c:	eb 33                	jmp    c0d1 <MangleNameFromTypeList+0x165>
    c09e:	48 8d 05 7d db 00 00 	lea    0xdb7d(%rip),%rax        # 19c22 <__PRETTY_FUNCTION__.0+0x1a>
    c0a5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c0a9:	eb 26                	jmp    c0d1 <MangleNameFromTypeList+0x165>
    c0ab:	48 8d 05 74 db 00 00 	lea    0xdb74(%rip),%rax        # 19c26 <__PRETTY_FUNCTION__.0+0x1e>
    c0b2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c0b6:	eb 19                	jmp    c0d1 <MangleNameFromTypeList+0x165>
    c0b8:	48 8d 05 6a db 00 00 	lea    0xdb6a(%rip),%rax        # 19c29 <__PRETTY_FUNCTION__.0+0x21>
    c0bf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c0c3:	eb 0c                	jmp    c0d1 <MangleNameFromTypeList+0x165>
    c0c5:	48 8d 05 60 db 00 00 	lea    0xdb60(%rip),%rax        # 19c2c <__PRETTY_FUNCTION__.0+0x24>
    c0cc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c0d0:	90                   	nop
    c0d1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c0d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0d9:	48 89 d6             	mov    %rdx,%rsi
    c0dc:	48 89 c7             	mov    %rax,%rdi
    c0df:	e8 7c 63 ff ff       	call   2460 <strcat@plt>
    c0e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c0e8:	48 8b 40 10          	mov    0x10(%rax),%rax
    c0ec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c0f0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c0f5:	0f 85 56 ff ff ff    	jne    c051 <MangleNameFromTypeList+0xe5>
    c0fb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c0ff:	48 89 c7             	mov    %rax,%rdi
    c102:	e8 e6 fc ff ff       	call   bded <DestroyIntList>
    c107:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c10b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c10f:	c9                   	leave
    c110:	c3                   	ret

000000000000c111 <MangleFunctionName>:
    c111:	f3 0f 1e fa          	endbr64
    c115:	55                   	push   %rbp
    c116:	48 89 e5             	mov    %rsp,%rbp
    c119:	48 83 ec 20          	sub    $0x20,%rsp
    c11d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c121:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c125:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c129:	48 89 c7             	mov    %rax,%rdi
    c12c:	e8 11 fd ff ff       	call   be42 <GetFlatTypeListForMangling>
    c131:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c135:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c139:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c13d:	48 89 d6             	mov    %rdx,%rsi
    c140:	48 89 c7             	mov    %rax,%rdi
    c143:	e8 24 fe ff ff       	call   bf6c <MangleNameFromTypeList>
    c148:	c9                   	leave
    c149:	c3                   	ret

000000000000c14a <GetFlatTypeListFromCallSite>:
    c14a:	f3 0f 1e fa          	endbr64
    c14e:	55                   	push   %rbp
    c14f:	48 89 e5             	mov    %rsp,%rbp
    c152:	48 83 ec 50          	sub    $0x50,%rsp
    c156:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c15a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    c15e:	89 55 bc             	mov    %edx,-0x44(%rbp)
    c161:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c168:	00 00
    c16a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c16e:	31 c0                	xor    %eax,%eax
    c170:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c175:	75 0a                	jne    c181 <GetFlatTypeListFromCallSite+0x37>
    c177:	b8 00 00 00 00       	mov    $0x0,%eax
    c17c:	e9 a9 00 00 00       	jmp    c22a <GetFlatTypeListFromCallSite+0xe0>
    c181:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    c188:	00
    c189:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c18d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c191:	e9 85 00 00 00       	jmp    c21b <GetFlatTypeListFromCallSite+0xd1>
    c196:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c19a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c19e:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    c1a1:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    c1a5:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    c1a9:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    c1af:	48 89 c7             	mov    %rax,%rdi
    c1b2:	e8 d5 13 00 00       	call   d58c <semcheck_expr_main>
    c1b7:	bf 04 00 00 00       	mov    $0x4,%edi
    c1bc:	e8 4f 62 ff ff       	call   2410 <malloc@plt>
    c1c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c1c5:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c1c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1cc:	89 10                	mov    %edx,(%rax)
    c1ce:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c1d3:	75 17                	jne    c1ec <GetFlatTypeListFromCallSite+0xa2>
    c1d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1d9:	be 04 00 00 00       	mov    $0x4,%esi
    c1de:	48 89 c7             	mov    %rax,%rdi
    c1e1:	e8 61 b8 ff ff       	call   7a47 <CreateListNode>
    c1e6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c1ea:	eb 23                	jmp    c20f <GetFlatTypeListFromCallSite+0xc5>
    c1ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1f0:	be 04 00 00 00       	mov    $0x4,%esi
    c1f5:	48 89 c7             	mov    %rax,%rdi
    c1f8:	e8 4a b8 ff ff       	call   7a47 <CreateListNode>
    c1fd:	48 89 c2             	mov    %rax,%rdx
    c200:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c204:	48 89 d6             	mov    %rdx,%rsi
    c207:	48 89 c7             	mov    %rax,%rdi
    c20a:	e8 04 b9 ff ff       	call   7b13 <PushListNodeBack>
    c20f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c213:	48 8b 40 10          	mov    0x10(%rax),%rax
    c217:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c21b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c220:	0f 85 70 ff ff ff    	jne    c196 <GetFlatTypeListFromCallSite+0x4c>
    c226:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c22a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c22e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    c235:	00 00
    c237:	74 05                	je     c23e <GetFlatTypeListFromCallSite+0xf4>
    c239:	e8 f2 60 ff ff       	call   2330 <__stack_chk_fail@plt>
    c23e:	c9                   	leave
    c23f:	c3                   	ret

000000000000c240 <MangleFunctionNameFromCallSite>:
    c240:	f3 0f 1e fa          	endbr64
    c244:	55                   	push   %rbp
    c245:	48 89 e5             	mov    %rsp,%rbp
    c248:	48 83 ec 30          	sub    $0x30,%rsp
    c24c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c250:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c254:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c258:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    c25b:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    c25e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    c262:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c266:	48 89 ce             	mov    %rcx,%rsi
    c269:	48 89 c7             	mov    %rax,%rdi
    c26c:	e8 d9 fe ff ff       	call   c14a <GetFlatTypeListFromCallSite>
    c271:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c275:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c279:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c27d:	48 89 d6             	mov    %rdx,%rsi
    c280:	48 89 c7             	mov    %rax,%rdi
    c283:	e8 e4 fc ff ff       	call   bf6c <MangleNameFromTypeList>
    c288:	c9                   	leave
    c289:	c3                   	ret

000000000000c28a <semcheck_stmt>:
    c28a:	f3 0f 1e fa          	endbr64
    c28e:	55                   	push   %rbp
    c28f:	48 89 e5             	mov    %rsp,%rbp
    c292:	48 83 ec 20          	sub    $0x20,%rsp
    c296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c29a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c29e:	89 55 ec             	mov    %edx,-0x14(%rbp)
    c2a1:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c2a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ac:	48 89 ce             	mov    %rcx,%rsi
    c2af:	48 89 c7             	mov    %rax,%rdi
    c2b2:	e8 30 00 00 00       	call   c2e7 <semcheck_stmt_main>
    c2b7:	c9                   	leave
    c2b8:	c3                   	ret

000000000000c2b9 <semcheck_func_stmt>:
    c2b9:	f3 0f 1e fa          	endbr64
    c2bd:	55                   	push   %rbp
    c2be:	48 89 e5             	mov    %rsp,%rbp
    c2c1:	48 83 ec 10          	sub    $0x10,%rsp
    c2c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d5:	ba 00 00 00 00       	mov    $0x0,%edx
    c2da:	48 89 ce             	mov    %rcx,%rsi
    c2dd:	48 89 c7             	mov    %rax,%rdi
    c2e0:	e8 02 00 00 00       	call   c2e7 <semcheck_stmt_main>
    c2e5:	c9                   	leave
    c2e6:	c3                   	ret

000000000000c2e7 <semcheck_stmt_main>:
    c2e7:	f3 0f 1e fa          	endbr64
    c2eb:	55                   	push   %rbp
    c2ec:	48 89 e5             	mov    %rsp,%rbp
    c2ef:	48 83 ec 30          	sub    $0x30,%rsp
    c2f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c2f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c2fb:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c2fe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c303:	75 28                	jne    c32d <semcheck_stmt_main+0x46>
    c305:	48 8d 05 04 e0 00 00 	lea    0xe004(%rip),%rax        # 1a310 <__PRETTY_FUNCTION__.7>
    c30c:	48 89 c1             	mov    %rax,%rcx
    c30f:	ba 33 00 00 00       	mov    $0x33,%edx
    c314:	48 8d 05 15 d9 00 00 	lea    0xd915(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c31b:	48 89 c6             	mov    %rax,%rsi
    c31e:	48 8d 05 33 d9 00 00 	lea    0xd933(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    c325:	48 89 c7             	mov    %rax,%rdi
    c328:	e8 23 60 ff ff       	call   2350 <__assert_fail@plt>
    c32d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c332:	75 28                	jne    c35c <semcheck_stmt_main+0x75>
    c334:	48 8d 05 d5 df 00 00 	lea    0xdfd5(%rip),%rax        # 1a310 <__PRETTY_FUNCTION__.7>
    c33b:	48 89 c1             	mov    %rax,%rcx
    c33e:	ba 34 00 00 00       	mov    $0x34,%edx
    c343:	48 8d 05 e6 d8 00 00 	lea    0xd8e6(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c34a:	48 89 c6             	mov    %rax,%rsi
    c34d:	48 8d 05 13 d9 00 00 	lea    0xd913(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    c354:	48 89 c7             	mov    %rax,%rdi
    c357:	e8 f4 5f ff ff       	call   2350 <__assert_fail@plt>
    c35c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    c363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c367:	8b 40 04             	mov    0x4(%rax),%eax
    c36a:	83 f8 08             	cmp    $0x8,%eax
    c36d:	0f 87 cb 00 00 00    	ja     c43e <semcheck_stmt_main+0x157>
    c373:	89 c0                	mov    %eax,%eax
    c375:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c37c:	00
    c37d:	48 8d 05 18 d9 00 00 	lea    0xd918(%rip),%rax        # 19c9c <__PRETTY_FUNCTION__.0+0x94>
    c384:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    c387:	48 98                	cltq
    c389:	48 8d 15 0c d9 00 00 	lea    0xd90c(%rip),%rdx        # 19c9c <__PRETTY_FUNCTION__.0+0x94>
    c390:	48 01 d0             	add    %rdx,%rax
    c393:	3e ff e0             	notrack jmp *%rax
    c396:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c399:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c39d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a1:	48 89 ce             	mov    %rcx,%rsi
    c3a4:	48 89 c7             	mov    %rax,%rdi
    c3a7:	e8 c5 00 00 00       	call   c471 <semcheck_varassign>
    c3ac:	01 45 fc             	add    %eax,-0x4(%rbp)
    c3af:	e9 b8 00 00 00       	jmp    c46c <semcheck_stmt_main+0x185>
    c3b4:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c3b7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c3bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3bf:	48 89 ce             	mov    %rcx,%rsi
    c3c2:	48 89 c7             	mov    %rax,%rdi
    c3c5:	e8 0a 02 00 00       	call   c5d4 <semcheck_proccall>
    c3ca:	01 45 fc             	add    %eax,-0x4(%rbp)
    c3cd:	e9 9a 00 00 00       	jmp    c46c <semcheck_stmt_main+0x185>
    c3d2:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c3d5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c3d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3dd:	48 89 ce             	mov    %rcx,%rsi
    c3e0:	48 89 c7             	mov    %rax,%rdi
    c3e3:	e8 34 07 00 00       	call   cb1c <semcheck_compoundstmt>
    c3e8:	01 45 fc             	add    %eax,-0x4(%rbp)
    c3eb:	eb 7f                	jmp    c46c <semcheck_stmt_main+0x185>
    c3ed:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c3f0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c3f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3f8:	48 89 ce             	mov    %rcx,%rsi
    c3fb:	48 89 c7             	mov    %rax,%rdi
    c3fe:	e8 3f 08 00 00       	call   cc42 <semcheck_ifthen>
    c403:	01 45 fc             	add    %eax,-0x4(%rbp)
    c406:	eb 64                	jmp    c46c <semcheck_stmt_main+0x185>
    c408:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c40b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c40f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c413:	48 89 ce             	mov    %rcx,%rsi
    c416:	48 89 c7             	mov    %rax,%rdi
    c419:	e8 ad 09 00 00       	call   cdcb <semcheck_while>
    c41e:	01 45 fc             	add    %eax,-0x4(%rbp)
    c421:	eb 49                	jmp    c46c <semcheck_stmt_main+0x185>
    c423:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c426:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c42a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c42e:	48 89 ce             	mov    %rcx,%rsi
    c431:	48 89 c7             	mov    %rax,%rdi
    c434:	e8 ef 0a 00 00       	call   cf28 <semcheck_for>
    c439:	01 45 fc             	add    %eax,-0x4(%rbp)
    c43c:	eb 2e                	jmp    c46c <semcheck_stmt_main+0x185>
    c43e:	48 8b 05 1b 4c 01 00 	mov    0x14c1b(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c445:	48 89 c1             	mov    %rax,%rcx
    c448:	ba 22 00 00 00       	mov    $0x22,%edx
    c44d:	be 01 00 00 00       	mov    $0x1,%esi
    c452:	48 8d 05 1f d8 00 00 	lea    0xd81f(%rip),%rax        # 19c78 <__PRETTY_FUNCTION__.0+0x70>
    c459:	48 89 c7             	mov    %rax,%rdi
    c45c:	e8 2f 60 ff ff       	call   2490 <fwrite@plt>
    c461:	bf 01 00 00 00       	mov    $0x1,%edi
    c466:	e8 15 60 ff ff       	call   2480 <exit@plt>
    c46b:	90                   	nop
    c46c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c46f:	c9                   	leave
    c470:	c3                   	ret

000000000000c471 <semcheck_varassign>:
    c471:	f3 0f 1e fa          	endbr64
    c475:	55                   	push   %rbp
    c476:	48 89 e5             	mov    %rsp,%rbp
    c479:	48 83 ec 50          	sub    $0x50,%rsp
    c47d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c481:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    c485:	89 55 bc             	mov    %edx,-0x44(%rbp)
    c488:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c48f:	00 00
    c491:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c495:	31 c0                	xor    %eax,%eax
    c497:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c49c:	75 28                	jne    c4c6 <semcheck_varassign+0x55>
    c49e:	48 8d 05 8b de 00 00 	lea    0xde8b(%rip),%rax        # 1a330 <__PRETTY_FUNCTION__.6>
    c4a5:	48 89 c1             	mov    %rax,%rcx
    c4a8:	ba 67 00 00 00       	mov    $0x67,%edx
    c4ad:	48 8d 05 7c d7 00 00 	lea    0xd77c(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c4b4:	48 89 c6             	mov    %rax,%rsi
    c4b7:	48 8d 05 9a d7 00 00 	lea    0xd79a(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    c4be:	48 89 c7             	mov    %rax,%rdi
    c4c1:	e8 8a 5e ff ff       	call   2350 <__assert_fail@plt>
    c4c6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    c4cb:	75 28                	jne    c4f5 <semcheck_varassign+0x84>
    c4cd:	48 8d 05 5c de 00 00 	lea    0xde5c(%rip),%rax        # 1a330 <__PRETTY_FUNCTION__.6>
    c4d4:	48 89 c1             	mov    %rax,%rcx
    c4d7:	ba 68 00 00 00       	mov    $0x68,%edx
    c4dc:	48 8d 05 4d d7 00 00 	lea    0xd74d(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c4e3:	48 89 c6             	mov    %rax,%rsi
    c4e6:	48 8d 05 7a d7 00 00 	lea    0xd77a(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    c4ed:	48 89 c7             	mov    %rax,%rdi
    c4f0:	e8 5b 5e ff ff       	call   2350 <__assert_fail@plt>
    c4f5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c4f9:	8b 40 04             	mov    0x4(%rax),%eax
    c4fc:	85 c0                	test   %eax,%eax
    c4fe:	74 28                	je     c528 <semcheck_varassign+0xb7>
    c500:	48 8d 05 29 de 00 00 	lea    0xde29(%rip),%rax        # 1a330 <__PRETTY_FUNCTION__.6>
    c507:	48 89 c1             	mov    %rax,%rcx
    c50a:	ba 69 00 00 00       	mov    $0x69,%edx
    c50f:	48 8d 05 1a d7 00 00 	lea    0xd71a(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c516:	48 89 c6             	mov    %rax,%rsi
    c519:	48 8d 05 a0 d7 00 00 	lea    0xd7a0(%rip),%rax        # 19cc0 <__PRETTY_FUNCTION__.0+0xb8>
    c520:	48 89 c7             	mov    %rax,%rdi
    c523:	e8 28 5e ff ff       	call   2350 <__assert_fail@plt>
    c528:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    c52f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c533:	48 8b 40 08          	mov    0x8(%rax),%rax
    c537:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c53b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c53f:	48 8b 40 10          	mov    0x10(%rax),%rax
    c543:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c547:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    c54a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c54e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    c552:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    c556:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c55c:	48 89 c7             	mov    %rax,%rdi
    c55f:	e8 28 10 00 00       	call   d58c <semcheck_expr_main>
    c564:	01 45 e4             	add    %eax,-0x1c(%rbp)
    c567:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c56b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    c56f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c573:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    c579:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    c57e:	48 89 c7             	mov    %rax,%rdi
    c581:	e8 06 10 00 00       	call   d58c <semcheck_expr_main>
    c586:	01 45 e4             	add    %eax,-0x1c(%rbp)
    c589:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c58c:	8b 45 e0             	mov    -0x20(%rbp),%eax
    c58f:	39 c2                	cmp    %eax,%edx
    c591:	74 28                	je     c5bb <semcheck_varassign+0x14a>
    c593:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c597:	8b 10                	mov    (%rax),%edx
    c599:	48 8b 05 c0 4a 01 00 	mov    0x14ac0(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c5a0:	48 8d 0d 39 d7 00 00 	lea    0xd739(%rip),%rcx        # 19ce0 <__PRETTY_FUNCTION__.0+0xd8>
    c5a7:	48 89 ce             	mov    %rcx,%rsi
    c5aa:	48 89 c7             	mov    %rax,%rdi
    c5ad:	b8 00 00 00 00       	mov    $0x0,%eax
    c5b2:	e8 19 5e ff ff       	call   23d0 <fprintf@plt>
    c5b7:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    c5bb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    c5be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c5c2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    c5c9:	00 00
    c5cb:	74 05                	je     c5d2 <semcheck_varassign+0x161>
    c5cd:	e8 5e 5d ff ff       	call   2330 <__stack_chk_fail@plt>
    c5d2:	c9                   	leave
    c5d3:	c3                   	ret

000000000000c5d4 <semcheck_proccall>:
    c5d4:	f3 0f 1e fa          	endbr64
    c5d8:	55                   	push   %rbp
    c5d9:	48 89 e5             	mov    %rsp,%rbp
    c5dc:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    c5e0:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    c5e4:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    c5e8:	89 55 8c             	mov    %edx,-0x74(%rbp)
    c5eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c5f2:	00 00
    c5f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c5f8:	31 c0                	xor    %eax,%eax
    c5fa:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
    c601:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c608:	00
    c609:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    c610:	00
    c611:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    c616:	75 28                	jne    c640 <semcheck_proccall+0x6c>
    c618:	48 8d 05 31 dd 00 00 	lea    0xdd31(%rip),%rax        # 1a350 <__PRETTY_FUNCTION__.5>
    c61f:	48 89 c1             	mov    %rax,%rcx
    c622:	ba 89 00 00 00       	mov    $0x89,%edx
    c627:	48 8d 05 02 d6 00 00 	lea    0xd602(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c62e:	48 89 c6             	mov    %rax,%rsi
    c631:	48 8d 05 20 d6 00 00 	lea    0xd620(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    c638:	48 89 c7             	mov    %rax,%rdi
    c63b:	e8 10 5d ff ff       	call   2350 <__assert_fail@plt>
    c640:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    c645:	75 28                	jne    c66f <semcheck_proccall+0x9b>
    c647:	48 8d 05 02 dd 00 00 	lea    0xdd02(%rip),%rax        # 1a350 <__PRETTY_FUNCTION__.5>
    c64e:	48 89 c1             	mov    %rax,%rcx
    c651:	ba 8a 00 00 00       	mov    $0x8a,%edx
    c656:	48 8d 05 d3 d5 00 00 	lea    0xd5d3(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c65d:	48 89 c6             	mov    %rax,%rsi
    c660:	48 8d 05 00 d6 00 00 	lea    0xd600(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    c667:	48 89 c7             	mov    %rax,%rdi
    c66a:	e8 e1 5c ff ff       	call   2350 <__assert_fail@plt>
    c66f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c673:	8b 40 04             	mov    0x4(%rax),%eax
    c676:	83 f8 01             	cmp    $0x1,%eax
    c679:	74 28                	je     c6a3 <semcheck_proccall+0xcf>
    c67b:	48 8d 05 ce dc 00 00 	lea    0xdcce(%rip),%rax        # 1a350 <__PRETTY_FUNCTION__.5>
    c682:	48 89 c1             	mov    %rax,%rcx
    c685:	ba 8b 00 00 00       	mov    $0x8b,%edx
    c68a:	48 8d 05 9f d5 00 00 	lea    0xd59f(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    c691:	48 89 c6             	mov    %rax,%rsi
    c694:	48 8d 05 85 d6 00 00 	lea    0xd685(%rip),%rax        # 19d20 <__PRETTY_FUNCTION__.0+0x118>
    c69b:	48 89 c7             	mov    %rax,%rdi
    c69e:	e8 ad 5c ff ff       	call   2350 <__assert_fail@plt>
    c6a3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c6a7:	48 8b 40 08          	mov    0x8(%rax),%rax
    c6ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c6af:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c6b3:	48 8b 40 10          	mov    0x10(%rax),%rax
    c6b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c6bb:	48 8b 05 9e 49 01 00 	mov    0x1499e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c6c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6c6:	48 8d 0d 7b d6 00 00 	lea    0xd67b(%rip),%rcx        # 19d48 <__PRETTY_FUNCTION__.0+0x140>
    c6cd:	48 89 ce             	mov    %rcx,%rsi
    c6d0:	48 89 c7             	mov    %rax,%rdi
    c6d3:	b8 00 00 00 00       	mov    $0x0,%eax
    c6d8:	e8 f3 5c ff ff       	call   23d0 <fprintf@plt>
    c6dd:	48 8b 05 7c 49 01 00 	mov    0x1497c(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c6e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6e8:	48 8d 0d 89 d6 00 00 	lea    0xd689(%rip),%rcx        # 19d78 <__PRETTY_FUNCTION__.0+0x170>
    c6ef:	48 89 ce             	mov    %rcx,%rsi
    c6f2:	48 89 c7             	mov    %rax,%rdi
    c6f5:	b8 00 00 00 00       	mov    $0x0,%eax
    c6fa:	e8 d1 5c ff ff       	call   23d0 <fprintf@plt>
    c6ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c703:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    c707:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    c70b:	48 89 ce             	mov    %rcx,%rsi
    c70e:	48 89 c7             	mov    %rax,%rdi
    c711:	e8 2f f2 ff ff       	call   b945 <FindIdent>
    c716:	89 45 ac             	mov    %eax,-0x54(%rbp)
    c719:	48 8b 05 40 49 01 00 	mov    0x14940(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c720:	8b 55 ac             	mov    -0x54(%rbp),%edx
    c723:	48 8d 0d 79 d6 00 00 	lea    0xd679(%rip),%rcx        # 19da3 <__PRETTY_FUNCTION__.0+0x19b>
    c72a:	48 89 ce             	mov    %rcx,%rsi
    c72d:	48 89 c7             	mov    %rax,%rdi
    c730:	b8 00 00 00 00       	mov    $0x0,%eax
    c735:	e8 96 5c ff ff       	call   23d0 <fprintf@plt>
    c73a:	83 7d ac ff          	cmpl   $0xffffffff,-0x54(%rbp)
    c73e:	74 20                	je     c760 <semcheck_proccall+0x18c>
    c740:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c744:	8b 40 08             	mov    0x8(%rax),%eax
    c747:	83 f8 02             	cmp    $0x2,%eax
    c74a:	0f 84 aa 00 00 00    	je     c7fa <semcheck_proccall+0x226>
    c750:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c754:	8b 40 08             	mov    0x8(%rax),%eax
    c757:	83 f8 05             	cmp    $0x5,%eax
    c75a:	0f 84 9a 00 00 00    	je     c7fa <semcheck_proccall+0x226>
    c760:	48 8b 05 f9 48 01 00 	mov    0x148f9(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c767:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c76b:	48 8d 0d 56 d6 00 00 	lea    0xd656(%rip),%rcx        # 19dc8 <__PRETTY_FUNCTION__.0+0x1c0>
    c772:	48 89 ce             	mov    %rcx,%rsi
    c775:	48 89 c7             	mov    %rax,%rdi
    c778:	b8 00 00 00 00       	mov    $0x0,%eax
    c77d:	e8 4e 5c ff ff       	call   23d0 <fprintf@plt>
    c782:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
    c785:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    c789:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    c78d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c791:	48 89 c7             	mov    %rax,%rdi
    c794:	e8 a7 fa ff ff       	call   c240 <MangleFunctionNameFromCallSite>
    c799:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c79d:	48 8b 05 bc 48 01 00 	mov    0x148bc(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c7a4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c7a8:	48 8d 0d 42 d6 00 00 	lea    0xd642(%rip),%rcx        # 19df1 <__PRETTY_FUNCTION__.0+0x1e9>
    c7af:	48 89 ce             	mov    %rcx,%rsi
    c7b2:	48 89 c7             	mov    %rax,%rdi
    c7b5:	b8 00 00 00 00       	mov    $0x0,%eax
    c7ba:	e8 11 5c ff ff       	call   23d0 <fprintf@plt>
    c7bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c7c3:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    c7c7:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    c7cb:	48 89 ce             	mov    %rcx,%rsi
    c7ce:	48 89 c7             	mov    %rax,%rdi
    c7d1:	e8 6f f1 ff ff       	call   b945 <FindIdent>
    c7d6:	89 45 ac             	mov    %eax,-0x54(%rbp)
    c7d9:	48 8b 05 80 48 01 00 	mov    0x14880(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c7e0:	8b 55 ac             	mov    -0x54(%rbp),%edx
    c7e3:	48 8d 0d 26 d6 00 00 	lea    0xd626(%rip),%rcx        # 19e10 <__PRETTY_FUNCTION__.0+0x208>
    c7ea:	48 89 ce             	mov    %rcx,%rsi
    c7ed:	48 89 c7             	mov    %rax,%rdi
    c7f0:	b8 00 00 00 00       	mov    $0x0,%eax
    c7f5:	e8 d6 5b ff ff       	call   23d0 <fprintf@plt>
    c7fa:	83 7d ac ff          	cmpl   $0xffffffff,-0x54(%rbp)
    c7fe:	75 41                	jne    c841 <semcheck_proccall+0x26d>
    c800:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c804:	8b 10                	mov    (%rax),%edx
    c806:	48 8b 05 53 48 01 00 	mov    0x14853(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c80d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c811:	48 8d 35 28 d6 00 00 	lea    0xd628(%rip),%rsi        # 19e40 <__PRETTY_FUNCTION__.0+0x238>
    c818:	48 89 c7             	mov    %rax,%rdi
    c81b:	b8 00 00 00 00       	mov    $0x0,%eax
    c820:	e8 ab 5b ff ff       	call   23d0 <fprintf@plt>
    c825:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c82a:	74 0c                	je     c838 <semcheck_proccall+0x264>
    c82c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c830:	48 89 c7             	mov    %rax,%rdi
    c833:	e8 58 5a ff ff       	call   2290 <free@plt>
    c838:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    c83c:	e9 a0 02 00 00       	jmp    cae1 <semcheck_proccall+0x50d>
    c841:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c845:	48 8b 10             	mov    (%rax),%rdx
    c848:	48 8b 05 11 48 01 00 	mov    0x14811(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c84f:	48 8d 0d 49 d6 00 00 	lea    0xd649(%rip),%rcx        # 19e9f <__PRETTY_FUNCTION__.0+0x297>
    c856:	48 89 ce             	mov    %rcx,%rsi
    c859:	48 89 c7             	mov    %rax,%rdi
    c85c:	b8 00 00 00 00       	mov    $0x0,%eax
    c861:	e8 6a 5b ff ff       	call   23d0 <fprintf@plt>
    c866:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c86b:	74 3f                	je     c8ac <semcheck_proccall+0x2d8>
    c86d:	48 8b 05 ec 47 01 00 	mov    0x147ec(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c874:	48 89 c1             	mov    %rax,%rcx
    c877:	ba 2d 00 00 00       	mov    $0x2d,%edx
    c87c:	be 01 00 00 00       	mov    $0x1,%esi
    c881:	48 8d 05 38 d6 00 00 	lea    0xd638(%rip),%rax        # 19ec0 <__PRETTY_FUNCTION__.0+0x2b8>
    c888:	48 89 c7             	mov    %rax,%rdi
    c88b:	e8 00 5c ff ff       	call   2490 <fwrite@plt>
    c890:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c894:	48 8b 40 08          	mov    0x8(%rax),%rax
    c898:	48 89 c7             	mov    %rax,%rdi
    c89b:	e8 f0 59 ff ff       	call   2290 <free@plt>
    c8a0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c8a4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c8a8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c8ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c8b0:	8b 50 18             	mov    0x18(%rax),%edx
    c8b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c8b7:	83 c2 01             	add    $0x1,%edx
    c8ba:	89 50 18             	mov    %edx,0x18(%rax)
    c8bd:	8b 45 ac             	mov    -0x54(%rbp),%eax
    c8c0:	3b 45 8c             	cmp    -0x74(%rbp),%eax
    c8c3:	7e 2d                	jle    c8f2 <semcheck_proccall+0x31e>
    c8c5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c8c9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c8cd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c8d1:	8b 10                	mov    (%rax),%edx
    c8d3:	48 8b 05 86 47 01 00 	mov    0x14786(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c8da:	48 8d 35 0f d6 00 00 	lea    0xd60f(%rip),%rsi        # 19ef0 <__PRETTY_FUNCTION__.0+0x2e8>
    c8e1:	48 89 c7             	mov    %rax,%rdi
    c8e4:	b8 00 00 00 00       	mov    $0x0,%eax
    c8e9:	e8 e2 5a ff ff       	call   23d0 <fprintf@plt>
    c8ee:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    c8f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c8f6:	8b 40 08             	mov    0x8(%rax),%eax
    c8f9:	83 f8 02             	cmp    $0x2,%eax
    c8fc:	74 39                	je     c937 <semcheck_proccall+0x363>
    c8fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c902:	8b 40 08             	mov    0x8(%rax),%eax
    c905:	83 f8 05             	cmp    $0x5,%eax
    c908:	74 2d                	je     c937 <semcheck_proccall+0x363>
    c90a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c90e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c912:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c916:	8b 10                	mov    (%rax),%edx
    c918:	48 8b 05 41 47 01 00 	mov    0x14741(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    c91f:	48 8d 35 12 d6 00 00 	lea    0xd612(%rip),%rsi        # 19f38 <__PRETTY_FUNCTION__.0+0x330>
    c926:	48 89 c7             	mov    %rax,%rdi
    c929:	b8 00 00 00 00       	mov    $0x0,%eax
    c92e:	e8 9d 5a ff ff       	call   23d0 <fprintf@plt>
    c933:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    c937:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    c93e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c942:	48 8b 40 10          	mov    0x10(%rax),%rax
    c946:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c94a:	e9 08 01 00 00       	jmp    ca57 <semcheck_proccall+0x483>
    c94f:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    c953:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c957:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c95b:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    c95f:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
    c963:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    c969:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    c96e:	48 89 c7             	mov    %rax,%rdi
    c971:	e8 16 0c 00 00       	call   d58c <semcheck_expr_main>
    c976:	01 45 a8             	add    %eax,-0x58(%rbp)
    c979:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c97d:	48 8b 40 08          	mov    0x8(%rax),%rax
    c981:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c985:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c989:	48 8b 40 08          	mov    0x8(%rax),%rax
    c98d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c991:	e9 a3 00 00 00       	jmp    ca39 <semcheck_proccall+0x465>
    c996:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c99a:	8b 40 10             	mov    0x10(%rax),%eax
    c99d:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    c9a0:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
    c9a4:	75 37                	jne    c9dd <semcheck_proccall+0x409>
    c9a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9aa:	48 8b 40 18          	mov    0x18(%rax),%rax
    c9ae:	48 85 c0             	test   %rax,%rax
    c9b1:	74 2a                	je     c9dd <semcheck_proccall+0x409>
    c9b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9b7:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c9bb:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    c9bf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c9c3:	48 89 ce             	mov    %rcx,%rsi
    c9c6:	48 89 c7             	mov    %rax,%rdi
    c9c9:	e8 77 ef ff ff       	call   b945 <FindIdent>
    c9ce:	83 f8 ff             	cmp    $0xffffffff,%eax
    c9d1:	74 0a                	je     c9dd <semcheck_proccall+0x409>
    c9d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c9d7:	8b 40 0c             	mov    0xc(%rax),%eax
    c9da:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    c9dd:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    c9e0:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
    c9e3:	74 3c                	je     ca21 <semcheck_proccall+0x44d>
    c9e5:	81 7d b4 36 01 00 00 	cmpl   $0x136,-0x4c(%rbp)
    c9ec:	74 33                	je     ca21 <semcheck_proccall+0x44d>
    c9ee:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c9f2:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c9f6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c9fa:	8b 10                	mov    (%rax),%edx
    c9fc:	48 8b 05 5d 46 01 00 	mov    0x1465d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ca03:	8b 75 b0             	mov    -0x50(%rbp),%esi
    ca06:	41 89 f0             	mov    %esi,%r8d
    ca09:	48 8d 35 68 d5 00 00 	lea    0xd568(%rip),%rsi        # 19f78 <__PRETTY_FUNCTION__.0+0x370>
    ca10:	48 89 c7             	mov    %rax,%rdi
    ca13:	b8 00 00 00 00       	mov    $0x0,%eax
    ca18:	e8 b3 59 ff ff       	call   23d0 <fprintf@plt>
    ca1d:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    ca21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca25:	48 8b 40 10          	mov    0x10(%rax),%rax
    ca29:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ca2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ca31:	48 8b 40 10          	mov    0x10(%rax),%rax
    ca35:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    ca39:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    ca3e:	74 0b                	je     ca4b <semcheck_proccall+0x477>
    ca40:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    ca45:	0f 85 4b ff ff ff    	jne    c996 <semcheck_proccall+0x3c2>
    ca4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca4f:	48 8b 40 10          	mov    0x10(%rax),%rax
    ca53:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ca57:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    ca5c:	74 0b                	je     ca69 <semcheck_proccall+0x495>
    ca5e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ca63:	0f 85 e6 fe ff ff    	jne    c94f <semcheck_proccall+0x37b>
    ca69:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ca6e:	75 36                	jne    caa6 <semcheck_proccall+0x4d2>
    ca70:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    ca75:	74 2f                	je     caa6 <semcheck_proccall+0x4d2>
    ca77:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ca7b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ca7f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ca83:	8b 10                	mov    (%rax),%edx
    ca85:	48 8b 05 d4 45 01 00 	mov    0x145d4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ca8c:	48 8d 35 2d d5 00 00 	lea    0xd52d(%rip),%rsi        # 19fc0 <__PRETTY_FUNCTION__.0+0x3b8>
    ca93:	48 89 c7             	mov    %rax,%rdi
    ca96:	b8 00 00 00 00       	mov    $0x0,%eax
    ca9b:	e8 30 59 ff ff       	call   23d0 <fprintf@plt>
    caa0:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    caa4:	eb 3b                	jmp    cae1 <semcheck_proccall+0x50d>
    caa6:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    caab:	74 34                	je     cae1 <semcheck_proccall+0x50d>
    caad:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    cab2:	75 2d                	jne    cae1 <semcheck_proccall+0x50d>
    cab4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    cab8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    cabc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    cac0:	8b 10                	mov    (%rax),%edx
    cac2:	48 8b 05 97 45 01 00 	mov    0x14597(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    cac9:	48 8d 35 38 d5 00 00 	lea    0xd538(%rip),%rsi        # 1a008 <__PRETTY_FUNCTION__.0+0x400>
    cad0:	48 89 c7             	mov    %rax,%rdi
    cad3:	b8 00 00 00 00       	mov    $0x0,%eax
    cad8:	e8 f3 58 ff ff       	call   23d0 <fprintf@plt>
    cadd:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    cae1:	48 8b 05 78 45 01 00 	mov    0x14578(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    cae8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    caec:	48 8d 0d 5d d5 00 00 	lea    0xd55d(%rip),%rcx        # 1a050 <__PRETTY_FUNCTION__.0+0x448>
    caf3:	48 89 ce             	mov    %rcx,%rsi
    caf6:	48 89 c7             	mov    %rax,%rdi
    caf9:	b8 00 00 00 00       	mov    $0x0,%eax
    cafe:	e8 cd 58 ff ff       	call   23d0 <fprintf@plt>
    cb03:	8b 45 a8             	mov    -0x58(%rbp),%eax
    cb06:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb0a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    cb11:	00 00
    cb13:	74 05                	je     cb1a <semcheck_proccall+0x546>
    cb15:	e8 16 58 ff ff       	call   2330 <__stack_chk_fail@plt>
    cb1a:	c9                   	leave
    cb1b:	c3                   	ret

000000000000cb1c <semcheck_compoundstmt>:
    cb1c:	f3 0f 1e fa          	endbr64
    cb20:	55                   	push   %rbp
    cb21:	48 89 e5             	mov    %rsp,%rbp
    cb24:	48 83 ec 30          	sub    $0x30,%rsp
    cb28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cb30:	89 55 dc             	mov    %edx,-0x24(%rbp)
    cb33:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cb38:	75 28                	jne    cb62 <semcheck_compoundstmt+0x46>
    cb3a:	48 8d 05 2f d8 00 00 	lea    0xd82f(%rip),%rax        # 1a370 <__PRETTY_FUNCTION__.4>
    cb41:	48 89 c1             	mov    %rax,%rcx
    cb44:	ba f5 00 00 00       	mov    $0xf5,%edx
    cb49:	48 8d 05 e0 d0 00 00 	lea    0xd0e0(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cb50:	48 89 c6             	mov    %rax,%rsi
    cb53:	48 8d 05 fe d0 00 00 	lea    0xd0fe(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    cb5a:	48 89 c7             	mov    %rax,%rdi
    cb5d:	e8 ee 57 ff ff       	call   2350 <__assert_fail@plt>
    cb62:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cb67:	75 28                	jne    cb91 <semcheck_compoundstmt+0x75>
    cb69:	48 8d 05 00 d8 00 00 	lea    0xd800(%rip),%rax        # 1a370 <__PRETTY_FUNCTION__.4>
    cb70:	48 89 c1             	mov    %rax,%rcx
    cb73:	ba f6 00 00 00       	mov    $0xf6,%edx
    cb78:	48 8d 05 b1 d0 00 00 	lea    0xd0b1(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cb7f:	48 89 c6             	mov    %rax,%rsi
    cb82:	48 8d 05 de d0 00 00 	lea    0xd0de(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    cb89:	48 89 c7             	mov    %rax,%rdi
    cb8c:	e8 bf 57 ff ff       	call   2350 <__assert_fail@plt>
    cb91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb95:	8b 40 04             	mov    0x4(%rax),%eax
    cb98:	83 f8 02             	cmp    $0x2,%eax
    cb9b:	74 28                	je     cbc5 <semcheck_compoundstmt+0xa9>
    cb9d:	48 8d 05 cc d7 00 00 	lea    0xd7cc(%rip),%rax        # 1a370 <__PRETTY_FUNCTION__.4>
    cba4:	48 89 c1             	mov    %rax,%rcx
    cba7:	ba f7 00 00 00       	mov    $0xf7,%edx
    cbac:	48 8d 05 7d d0 00 00 	lea    0xd07d(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cbb3:	48 89 c6             	mov    %rax,%rsi
    cbb6:	48 8d 05 c3 d4 00 00 	lea    0xd4c3(%rip),%rax        # 1a080 <__PRETTY_FUNCTION__.0+0x478>
    cbbd:	48 89 c7             	mov    %rax,%rdi
    cbc0:	e8 8b 57 ff ff       	call   2350 <__assert_fail@plt>
    cbc5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    cbcc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbd0:	48 8b 40 08          	mov    0x8(%rax),%rax
    cbd4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cbd8:	eb 5c                	jmp    cc36 <semcheck_compoundstmt+0x11a>
    cbda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbde:	8b 00                	mov    (%rax),%eax
    cbe0:	83 f8 01             	cmp    $0x1,%eax
    cbe3:	74 28                	je     cc0d <semcheck_compoundstmt+0xf1>
    cbe5:	48 8d 05 84 d7 00 00 	lea    0xd784(%rip),%rax        # 1a370 <__PRETTY_FUNCTION__.4>
    cbec:	48 89 c1             	mov    %rax,%rcx
    cbef:	ba fd 00 00 00       	mov    $0xfd,%edx
    cbf4:	48 8d 05 35 d0 00 00 	lea    0xd035(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cbfb:	48 89 c6             	mov    %rax,%rsi
    cbfe:	48 8d 05 a1 d4 00 00 	lea    0xd4a1(%rip),%rax        # 1a0a6 <__PRETTY_FUNCTION__.0+0x49e>
    cc05:	48 89 c7             	mov    %rax,%rdi
    cc08:	e8 43 57 ff ff       	call   2350 <__assert_fail@plt>
    cc0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc11:	48 8b 48 08          	mov    0x8(%rax),%rcx
    cc15:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cc18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc1c:	48 89 ce             	mov    %rcx,%rsi
    cc1f:	48 89 c7             	mov    %rax,%rdi
    cc22:	e8 c0 f6 ff ff       	call   c2e7 <semcheck_stmt_main>
    cc27:	01 45 f4             	add    %eax,-0xc(%rbp)
    cc2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc2e:	48 8b 40 10          	mov    0x10(%rax),%rax
    cc32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cc36:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cc3b:	75 9d                	jne    cbda <semcheck_compoundstmt+0xbe>
    cc3d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    cc40:	c9                   	leave
    cc41:	c3                   	ret

000000000000cc42 <semcheck_ifthen>:
    cc42:	f3 0f 1e fa          	endbr64
    cc46:	55                   	push   %rbp
    cc47:	48 89 e5             	mov    %rsp,%rbp
    cc4a:	48 83 ec 50          	sub    $0x50,%rsp
    cc4e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    cc52:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    cc56:	89 55 bc             	mov    %edx,-0x44(%rbp)
    cc59:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cc60:	00 00
    cc62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cc66:	31 c0                	xor    %eax,%eax
    cc68:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    cc6d:	75 28                	jne    cc97 <semcheck_ifthen+0x55>
    cc6f:	48 8d 05 1a d7 00 00 	lea    0xd71a(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    cc76:	48 89 c1             	mov    %rax,%rcx
    cc79:	ba 11 01 00 00       	mov    $0x111,%edx
    cc7e:	48 8d 05 ab cf 00 00 	lea    0xcfab(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cc85:	48 89 c6             	mov    %rax,%rsi
    cc88:	48 8d 05 c9 cf 00 00 	lea    0xcfc9(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    cc8f:	48 89 c7             	mov    %rax,%rdi
    cc92:	e8 b9 56 ff ff       	call   2350 <__assert_fail@plt>
    cc97:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    cc9c:	75 28                	jne    ccc6 <semcheck_ifthen+0x84>
    cc9e:	48 8d 05 eb d6 00 00 	lea    0xd6eb(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    cca5:	48 89 c1             	mov    %rax,%rcx
    cca8:	ba 12 01 00 00       	mov    $0x112,%edx
    ccad:	48 8d 05 7c cf 00 00 	lea    0xcf7c(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    ccb4:	48 89 c6             	mov    %rax,%rsi
    ccb7:	48 8d 05 a9 cf 00 00 	lea    0xcfa9(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    ccbe:	48 89 c7             	mov    %rax,%rdi
    ccc1:	e8 8a 56 ff ff       	call   2350 <__assert_fail@plt>
    ccc6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ccca:	8b 40 04             	mov    0x4(%rax),%eax
    cccd:	83 f8 03             	cmp    $0x3,%eax
    ccd0:	74 28                	je     ccfa <semcheck_ifthen+0xb8>
    ccd2:	48 8d 05 b7 d6 00 00 	lea    0xd6b7(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    ccd9:	48 89 c1             	mov    %rax,%rcx
    ccdc:	ba 13 01 00 00       	mov    $0x113,%edx
    cce1:	48 8d 05 48 cf 00 00 	lea    0xcf48(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cce8:	48 89 c6             	mov    %rax,%rsi
    cceb:	48 8d 05 d1 d3 00 00 	lea    0xd3d1(%rip),%rax        # 1a0c3 <__PRETTY_FUNCTION__.0+0x4bb>
    ccf2:	48 89 c7             	mov    %rax,%rdi
    ccf5:	e8 56 56 ff ff       	call   2350 <__assert_fail@plt>
    ccfa:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    cd01:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cd05:	48 8b 40 08          	mov    0x8(%rax),%rax
    cd09:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    cd0d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cd11:	48 8b 40 10          	mov    0x10(%rax),%rax
    cd15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cd19:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cd1d:	48 8b 40 18          	mov    0x18(%rax),%rax
    cd21:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cd25:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cd29:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    cd2d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    cd31:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cd37:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    cd3c:	48 89 c7             	mov    %rax,%rdi
    cd3f:	e8 48 08 00 00       	call   d58c <semcheck_expr_main>
    cd44:	01 45 dc             	add    %eax,-0x24(%rbp)
    cd47:	8b 45 d8             	mov    -0x28(%rbp),%eax
    cd4a:	3d 37 01 00 00       	cmp    $0x137,%eax
    cd4f:	74 28                	je     cd79 <semcheck_ifthen+0x137>
    cd51:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cd55:	8b 10                	mov    (%rax),%edx
    cd57:	48 8b 05 02 43 01 00 	mov    0x14302(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    cd5e:	48 8d 0d 7b d3 00 00 	lea    0xd37b(%rip),%rcx        # 1a0e0 <__PRETTY_FUNCTION__.0+0x4d8>
    cd65:	48 89 ce             	mov    %rcx,%rsi
    cd68:	48 89 c7             	mov    %rax,%rdi
    cd6b:	b8 00 00 00 00       	mov    $0x0,%eax
    cd70:	e8 5b 56 ff ff       	call   23d0 <fprintf@plt>
    cd75:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    cd79:	8b 55 bc             	mov    -0x44(%rbp),%edx
    cd7c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    cd80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd84:	48 89 ce             	mov    %rcx,%rsi
    cd87:	48 89 c7             	mov    %rax,%rdi
    cd8a:	e8 58 f5 ff ff       	call   c2e7 <semcheck_stmt_main>
    cd8f:	01 45 dc             	add    %eax,-0x24(%rbp)
    cd92:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cd97:	74 19                	je     cdb2 <semcheck_ifthen+0x170>
    cd99:	8b 55 bc             	mov    -0x44(%rbp),%edx
    cd9c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cda0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cda4:	48 89 ce             	mov    %rcx,%rsi
    cda7:	48 89 c7             	mov    %rax,%rdi
    cdaa:	e8 38 f5 ff ff       	call   c2e7 <semcheck_stmt_main>
    cdaf:	01 45 dc             	add    %eax,-0x24(%rbp)
    cdb2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    cdb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cdb9:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    cdc0:	00 00
    cdc2:	74 05                	je     cdc9 <semcheck_ifthen+0x187>
    cdc4:	e8 67 55 ff ff       	call   2330 <__stack_chk_fail@plt>
    cdc9:	c9                   	leave
    cdca:	c3                   	ret

000000000000cdcb <semcheck_while>:
    cdcb:	f3 0f 1e fa          	endbr64
    cdcf:	55                   	push   %rbp
    cdd0:	48 89 e5             	mov    %rsp,%rbp
    cdd3:	48 83 ec 40          	sub    $0x40,%rsp
    cdd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cddb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cddf:	89 55 cc             	mov    %edx,-0x34(%rbp)
    cde2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cde9:	00 00
    cdeb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cdef:	31 c0                	xor    %eax,%eax
    cdf1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    cdf6:	75 28                	jne    ce20 <semcheck_while+0x55>
    cdf8:	48 8d 05 a1 d5 00 00 	lea    0xd5a1(%rip),%rax        # 1a3a0 <__PRETTY_FUNCTION__.2>
    cdff:	48 89 c1             	mov    %rax,%rcx
    ce02:	ba 32 01 00 00       	mov    $0x132,%edx
    ce07:	48 8d 05 22 ce 00 00 	lea    0xce22(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    ce0e:	48 89 c6             	mov    %rax,%rsi
    ce11:	48 8d 05 40 ce 00 00 	lea    0xce40(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    ce18:	48 89 c7             	mov    %rax,%rdi
    ce1b:	e8 30 55 ff ff       	call   2350 <__assert_fail@plt>
    ce20:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    ce25:	75 28                	jne    ce4f <semcheck_while+0x84>
    ce27:	48 8d 05 72 d5 00 00 	lea    0xd572(%rip),%rax        # 1a3a0 <__PRETTY_FUNCTION__.2>
    ce2e:	48 89 c1             	mov    %rax,%rcx
    ce31:	ba 33 01 00 00       	mov    $0x133,%edx
    ce36:	48 8d 05 f3 cd 00 00 	lea    0xcdf3(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    ce3d:	48 89 c6             	mov    %rax,%rsi
    ce40:	48 8d 05 20 ce 00 00 	lea    0xce20(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    ce47:	48 89 c7             	mov    %rax,%rdi
    ce4a:	e8 01 55 ff ff       	call   2350 <__assert_fail@plt>
    ce4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ce53:	8b 40 04             	mov    0x4(%rax),%eax
    ce56:	83 f8 04             	cmp    $0x4,%eax
    ce59:	74 28                	je     ce83 <semcheck_while+0xb8>
    ce5b:	48 8d 05 3e d5 00 00 	lea    0xd53e(%rip),%rax        # 1a3a0 <__PRETTY_FUNCTION__.2>
    ce62:	48 89 c1             	mov    %rax,%rcx
    ce65:	ba 34 01 00 00       	mov    $0x134,%edx
    ce6a:	48 8d 05 bf cd 00 00 	lea    0xcdbf(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    ce71:	48 89 c6             	mov    %rax,%rsi
    ce74:	48 8d 05 a2 d2 00 00 	lea    0xd2a2(%rip),%rax        # 1a11d <__PRETTY_FUNCTION__.0+0x515>
    ce7b:	48 89 c7             	mov    %rax,%rdi
    ce7e:	e8 cd 54 ff ff       	call   2350 <__assert_fail@plt>
    ce83:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    ce8a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ce8e:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce92:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ce96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ce9a:	48 8b 40 10          	mov    0x10(%rax),%rax
    ce9e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cea2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cea6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    ceaa:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ceae:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ceb4:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    ceb9:	48 89 c7             	mov    %rax,%rdi
    cebc:	e8 cb 06 00 00       	call   d58c <semcheck_expr_main>
    cec1:	01 45 e4             	add    %eax,-0x1c(%rbp)
    cec4:	8b 45 e0             	mov    -0x20(%rbp),%eax
    cec7:	3d 37 01 00 00       	cmp    $0x137,%eax
    cecc:	74 28                	je     cef6 <semcheck_while+0x12b>
    cece:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ced2:	8b 10                	mov    (%rax),%edx
    ced4:	48 8b 05 85 41 01 00 	mov    0x14185(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    cedb:	48 8d 0d 56 d2 00 00 	lea    0xd256(%rip),%rcx        # 1a138 <__PRETTY_FUNCTION__.0+0x530>
    cee2:	48 89 ce             	mov    %rcx,%rsi
    cee5:	48 89 c7             	mov    %rax,%rdi
    cee8:	b8 00 00 00 00       	mov    $0x0,%eax
    ceed:	e8 de 54 ff ff       	call   23d0 <fprintf@plt>
    cef2:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    cef6:	8b 55 cc             	mov    -0x34(%rbp),%edx
    cef9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cefd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf01:	48 89 ce             	mov    %rcx,%rsi
    cf04:	48 89 c7             	mov    %rax,%rdi
    cf07:	e8 db f3 ff ff       	call   c2e7 <semcheck_stmt_main>
    cf0c:	01 45 e4             	add    %eax,-0x1c(%rbp)
    cf0f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    cf12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf16:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    cf1d:	00 00
    cf1f:	74 05                	je     cf26 <semcheck_while+0x15b>
    cf21:	e8 0a 54 ff ff       	call   2330 <__stack_chk_fail@plt>
    cf26:	c9                   	leave
    cf27:	c3                   	ret

000000000000cf28 <semcheck_for>:
    cf28:	f3 0f 1e fa          	endbr64
    cf2c:	55                   	push   %rbp
    cf2d:	48 89 e5             	mov    %rsp,%rbp
    cf30:	48 83 ec 60          	sub    $0x60,%rsp
    cf34:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    cf38:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    cf3c:	89 55 ac             	mov    %edx,-0x54(%rbp)
    cf3f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cf46:	00 00
    cf48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cf4c:	31 c0                	xor    %eax,%eax
    cf4e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    cf53:	75 28                	jne    cf7d <semcheck_for+0x55>
    cf55:	48 8d 05 54 d4 00 00 	lea    0xd454(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.1>
    cf5c:	48 89 c1             	mov    %rax,%rcx
    cf5f:	ba 53 01 00 00       	mov    $0x153,%edx
    cf64:	48 8d 05 c5 cc 00 00 	lea    0xccc5(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cf6b:	48 89 c6             	mov    %rax,%rsi
    cf6e:	48 8d 05 e3 cc 00 00 	lea    0xcce3(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    cf75:	48 89 c7             	mov    %rax,%rdi
    cf78:	e8 d3 53 ff ff       	call   2350 <__assert_fail@plt>
    cf7d:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    cf82:	75 28                	jne    cfac <semcheck_for+0x84>
    cf84:	48 8d 05 25 d4 00 00 	lea    0xd425(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.1>
    cf8b:	48 89 c1             	mov    %rax,%rcx
    cf8e:	ba 54 01 00 00       	mov    $0x154,%edx
    cf93:	48 8d 05 96 cc 00 00 	lea    0xcc96(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cf9a:	48 89 c6             	mov    %rax,%rsi
    cf9d:	48 8d 05 c3 cc 00 00 	lea    0xccc3(%rip),%rax        # 19c67 <__PRETTY_FUNCTION__.0+0x5f>
    cfa4:	48 89 c7             	mov    %rax,%rdi
    cfa7:	e8 a4 53 ff ff       	call   2350 <__assert_fail@plt>
    cfac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    cfb0:	8b 40 04             	mov    0x4(%rax),%eax
    cfb3:	83 f8 05             	cmp    $0x5,%eax
    cfb6:	74 28                	je     cfe0 <semcheck_for+0xb8>
    cfb8:	48 8d 05 f1 d3 00 00 	lea    0xd3f1(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.1>
    cfbf:	48 89 c1             	mov    %rax,%rcx
    cfc2:	ba 55 01 00 00       	mov    $0x155,%edx
    cfc7:	48 8d 05 62 cc 00 00 	lea    0xcc62(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    cfce:	48 89 c6             	mov    %rax,%rsi
    cfd1:	48 8d 05 a0 d1 00 00 	lea    0xd1a0(%rip),%rax        # 1a178 <__PRETTY_FUNCTION__.0+0x570>
    cfd8:	48 89 c7             	mov    %rax,%rdi
    cfdb:	e8 70 53 ff ff       	call   2350 <__assert_fail@plt>
    cfe0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    cfe4:	8b 40 08             	mov    0x8(%rax),%eax
    cfe7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    cfea:	83 7d d4 06          	cmpl   $0x6,-0x2c(%rbp)
    cfee:	74 2e                	je     d01e <semcheck_for+0xf6>
    cff0:	83 7d d4 07          	cmpl   $0x7,-0x2c(%rbp)
    cff4:	74 28                	je     d01e <semcheck_for+0xf6>
    cff6:	48 8d 05 b3 d3 00 00 	lea    0xd3b3(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.1>
    cffd:	48 89 c1             	mov    %rax,%rcx
    d000:	ba 58 01 00 00       	mov    $0x158,%edx
    d005:	48 8d 05 24 cc 00 00 	lea    0xcc24(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    d00c:	48 89 c6             	mov    %rax,%rsi
    d00f:	48 8d 05 7a d1 00 00 	lea    0xd17a(%rip),%rax        # 1a190 <__PRETTY_FUNCTION__.0+0x588>
    d016:	48 89 c7             	mov    %rax,%rdi
    d019:	e8 32 53 ff ff       	call   2350 <__assert_fail@plt>
    d01e:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    d025:	83 7d d4 06          	cmpl   $0x6,-0x2c(%rbp)
    d029:	75 60                	jne    d08b <semcheck_for+0x163>
    d02b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d02f:	48 8b 40 20          	mov    0x20(%rax),%rax
    d033:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d037:	8b 4d ac             	mov    -0x54(%rbp),%ecx
    d03a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d03e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    d042:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d046:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d04c:	48 89 c7             	mov    %rax,%rdi
    d04f:	e8 38 05 00 00       	call   d58c <semcheck_expr_main>
    d054:	01 45 d0             	add    %eax,-0x30(%rbp)
    d057:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d05a:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    d05f:	74 4f                	je     d0b0 <semcheck_for+0x188>
    d061:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d065:	8b 10                	mov    (%rax),%edx
    d067:	48 8b 05 f2 3f 01 00 	mov    0x13ff2(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d06e:	48 8d 0d 6b d1 00 00 	lea    0xd16b(%rip),%rcx        # 1a1e0 <__PRETTY_FUNCTION__.0+0x5d8>
    d075:	48 89 ce             	mov    %rcx,%rsi
    d078:	48 89 c7             	mov    %rax,%rdi
    d07b:	b8 00 00 00 00       	mov    $0x0,%eax
    d080:	e8 4b 53 ff ff       	call   23d0 <fprintf@plt>
    d085:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    d089:	eb 25                	jmp    d0b0 <semcheck_for+0x188>
    d08b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d08f:	48 8b 40 20          	mov    0x20(%rax),%rax
    d093:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d097:	8b 55 ac             	mov    -0x54(%rbp),%edx
    d09a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    d09e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d0a2:	48 89 ce             	mov    %rcx,%rsi
    d0a5:	48 89 c7             	mov    %rax,%rdi
    d0a8:	e8 a1 00 00 00       	call   d14e <semcheck_for_assign>
    d0ad:	01 45 d0             	add    %eax,-0x30(%rbp)
    d0b0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d0b4:	48 8b 40 10          	mov    0x10(%rax),%rax
    d0b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d0bc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d0c0:	48 8b 40 18          	mov    0x18(%rax),%rax
    d0c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d0c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0cc:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    d0d0:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    d0d4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d0da:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d0df:	48 89 c7             	mov    %rax,%rdi
    d0e2:	e8 a5 04 00 00       	call   d58c <semcheck_expr_main>
    d0e7:	01 45 d0             	add    %eax,-0x30(%rbp)
    d0ea:	8b 45 cc             	mov    -0x34(%rbp),%eax
    d0ed:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    d0f2:	74 28                	je     d11c <semcheck_for+0x1f4>
    d0f4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d0f8:	8b 10                	mov    (%rax),%edx
    d0fa:	48 8b 05 5f 3f 01 00 	mov    0x13f5f(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d101:	48 8d 0d 10 d1 00 00 	lea    0xd110(%rip),%rcx        # 1a218 <__PRETTY_FUNCTION__.0+0x610>
    d108:	48 89 ce             	mov    %rcx,%rsi
    d10b:	48 89 c7             	mov    %rax,%rdi
    d10e:	b8 00 00 00 00       	mov    $0x0,%eax
    d113:	e8 b8 52 ff ff       	call   23d0 <fprintf@plt>
    d118:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    d11c:	8b 55 ac             	mov    -0x54(%rbp),%edx
    d11f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d123:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d127:	48 89 ce             	mov    %rcx,%rsi
    d12a:	48 89 c7             	mov    %rax,%rdi
    d12d:	e8 b5 f1 ff ff       	call   c2e7 <semcheck_stmt_main>
    d132:	01 45 d0             	add    %eax,-0x30(%rbp)
    d135:	8b 45 d0             	mov    -0x30(%rbp),%eax
    d138:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d13c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d143:	00 00
    d145:	74 05                	je     d14c <semcheck_for+0x224>
    d147:	e8 e4 51 ff ff       	call   2330 <__stack_chk_fail@plt>
    d14c:	c9                   	leave
    d14d:	c3                   	ret

000000000000d14e <semcheck_for_assign>:
    d14e:	f3 0f 1e fa          	endbr64
    d152:	55                   	push   %rbp
    d153:	48 89 e5             	mov    %rsp,%rbp
    d156:	48 83 ec 50          	sub    $0x50,%rsp
    d15a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d15e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    d162:	89 55 bc             	mov    %edx,-0x44(%rbp)
    d165:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d16c:	00 00
    d16e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d172:	31 c0                	xor    %eax,%eax
    d174:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    d179:	75 28                	jne    d1a3 <semcheck_for_assign+0x55>
    d17b:	48 8d 05 3e d2 00 00 	lea    0xd23e(%rip),%rax        # 1a3c0 <__PRETTY_FUNCTION__.0>
    d182:	48 89 c1             	mov    %rax,%rcx
    d185:	ba 86 01 00 00       	mov    $0x186,%edx
    d18a:	48 8d 05 9f ca 00 00 	lea    0xca9f(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    d191:	48 89 c6             	mov    %rax,%rsi
    d194:	48 8d 05 bd ca 00 00 	lea    0xcabd(%rip),%rax        # 19c58 <__PRETTY_FUNCTION__.0+0x50>
    d19b:	48 89 c7             	mov    %rax,%rdi
    d19e:	e8 ad 51 ff ff       	call   2350 <__assert_fail@plt>
    d1a3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d1a8:	75 28                	jne    d1d2 <semcheck_for_assign+0x84>
    d1aa:	48 8d 05 0f d2 00 00 	lea    0xd20f(%rip),%rax        # 1a3c0 <__PRETTY_FUNCTION__.0>
    d1b1:	48 89 c1             	mov    %rax,%rcx
    d1b4:	ba 87 01 00 00       	mov    $0x187,%edx
    d1b9:	48 8d 05 70 ca 00 00 	lea    0xca70(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    d1c0:	48 89 c6             	mov    %rax,%rsi
    d1c3:	48 8d 05 83 d0 00 00 	lea    0xd083(%rip),%rax        # 1a24d <__PRETTY_FUNCTION__.0+0x645>
    d1ca:	48 89 c7             	mov    %rax,%rdi
    d1cd:	e8 7e 51 ff ff       	call   2350 <__assert_fail@plt>
    d1d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d1d6:	8b 40 04             	mov    0x4(%rax),%eax
    d1d9:	85 c0                	test   %eax,%eax
    d1db:	74 28                	je     d205 <semcheck_for_assign+0xb7>
    d1dd:	48 8d 05 dc d1 00 00 	lea    0xd1dc(%rip),%rax        # 1a3c0 <__PRETTY_FUNCTION__.0>
    d1e4:	48 89 c1             	mov    %rax,%rcx
    d1e7:	ba 88 01 00 00       	mov    $0x188,%edx
    d1ec:	48 8d 05 3d ca 00 00 	lea    0xca3d(%rip),%rax        # 19c30 <__PRETTY_FUNCTION__.0+0x28>
    d1f3:	48 89 c6             	mov    %rax,%rsi
    d1f6:	48 8d 05 63 d0 00 00 	lea    0xd063(%rip),%rax        # 1a260 <__PRETTY_FUNCTION__.0+0x658>
    d1fd:	48 89 c7             	mov    %rax,%rdi
    d200:	e8 4b 51 ff ff       	call   2350 <__assert_fail@plt>
    d205:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    d20c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d210:	48 8b 40 08          	mov    0x8(%rax),%rax
    d214:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d218:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d21c:	48 8b 40 10          	mov    0x10(%rax),%rax
    d220:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d224:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    d227:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d22b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    d22f:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    d233:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d239:	48 89 c7             	mov    %rax,%rdi
    d23c:	e8 4b 03 00 00       	call   d58c <semcheck_expr_main>
    d241:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d244:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d248:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    d24c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d250:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d256:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d25b:	48 89 c7             	mov    %rax,%rdi
    d25e:	e8 29 03 00 00       	call   d58c <semcheck_expr_main>
    d263:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d266:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d269:	8b 45 e0             	mov    -0x20(%rbp),%eax
    d26c:	39 c2                	cmp    %eax,%edx
    d26e:	74 28                	je     d298 <semcheck_for_assign+0x14a>
    d270:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d274:	8b 10                	mov    (%rax),%edx
    d276:	48 8b 05 e3 3d 01 00 	mov    0x13de3(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d27d:	48 8d 0d 04 d0 00 00 	lea    0xd004(%rip),%rcx        # 1a288 <__PRETTY_FUNCTION__.0+0x680>
    d284:	48 89 ce             	mov    %rcx,%rsi
    d287:	48 89 c7             	mov    %rax,%rdi
    d28a:	b8 00 00 00 00       	mov    $0x0,%eax
    d28f:	e8 3c 51 ff ff       	call   23d0 <fprintf@plt>
    d294:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d298:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d29b:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    d2a0:	74 28                	je     d2ca <semcheck_for_assign+0x17c>
    d2a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d2a6:	8b 10                	mov    (%rax),%edx
    d2a8:	48 8b 05 b1 3d 01 00 	mov    0x13db1(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d2af:	48 8d 0d 1a d0 00 00 	lea    0xd01a(%rip),%rcx        # 1a2d0 <__PRETTY_FUNCTION__.0+0x6c8>
    d2b6:	48 89 ce             	mov    %rcx,%rsi
    d2b9:	48 89 c7             	mov    %rax,%rdi
    d2bc:	b8 00 00 00 00       	mov    $0x0,%eax
    d2c1:	e8 0a 51 ff ff       	call   23d0 <fprintf@plt>
    d2c6:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d2ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d2cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2d1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d2d8:	00 00
    d2da:	74 05                	je     d2e1 <semcheck_for_assign+0x193>
    d2dc:	e8 4f 50 ff ff       	call   2330 <__stack_chk_fail@plt>
    d2e1:	c9                   	leave
    d2e2:	c3                   	ret

000000000000d2e3 <set_hash_meta>:
    d2e3:	f3 0f 1e fa          	endbr64
    d2e7:	55                   	push   %rbp
    d2e8:	48 89 e5             	mov    %rsp,%rbp
    d2eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2ef:	89 75 f4             	mov    %esi,-0xc(%rbp)
    d2f2:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
    d2f6:	75 24                	jne    d31c <set_hash_meta+0x39>
    d2f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2fc:	8b 40 18             	mov    0x18(%rax),%eax
    d2ff:	8d 50 01             	lea    0x1(%rax),%edx
    d302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d306:	89 50 18             	mov    %edx,0x18(%rax)
    d309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d30d:	8b 40 1c             	mov    0x1c(%rax),%eax
    d310:	8d 50 01             	lea    0x1(%rax),%edx
    d313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d317:	89 50 1c             	mov    %edx,0x1c(%rax)
    d31a:	eb 2b                	jmp    d347 <set_hash_meta+0x64>
    d31c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d320:	8b 50 18             	mov    0x18(%rax),%edx
    d323:	b8 01 00 00 00       	mov    $0x1,%eax
    d328:	2b 45 f4             	sub    -0xc(%rbp),%eax
    d32b:	01 c2                	add    %eax,%edx
    d32d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d331:	89 50 18             	mov    %edx,0x18(%rax)
    d334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d338:	8b 50 1c             	mov    0x1c(%rax),%edx
    d33b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    d33e:	01 c2                	add    %eax,%edx
    d340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d344:	89 50 1c             	mov    %edx,0x1c(%rax)
    d347:	90                   	nop
    d348:	5d                   	pop    %rbp
    d349:	c3                   	ret

000000000000d34a <is_type_ir>:
    d34a:	f3 0f 1e fa          	endbr64
    d34e:	55                   	push   %rbp
    d34f:	48 89 e5             	mov    %rsp,%rbp
    d352:	48 83 ec 10          	sub    $0x10,%rsp
    d356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d35a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d35f:	75 28                	jne    d389 <is_type_ir+0x3f>
    d361:	48 8d 05 e8 d8 00 00 	lea    0xd8e8(%rip),%rax        # 1ac50 <__PRETTY_FUNCTION__.10>
    d368:	48 89 c1             	mov    %rax,%rcx
    d36b:	ba 3d 00 00 00       	mov    $0x3d,%edx
    d370:	48 8d 05 69 d0 00 00 	lea    0xd069(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d377:	48 89 c6             	mov    %rax,%rsi
    d37a:	48 8d 05 87 d0 00 00 	lea    0xd087(%rip),%rax        # 1a408 <__PRETTY_FUNCTION__.0+0x48>
    d381:	48 89 c7             	mov    %rax,%rdi
    d384:	e8 c7 4f ff ff       	call   2350 <__assert_fail@plt>
    d389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d38d:	8b 00                	mov    (%rax),%eax
    d38f:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    d394:	74 0d                	je     d3a3 <is_type_ir+0x59>
    d396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d39a:	8b 00                	mov    (%rax),%eax
    d39c:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    d3a1:	75 07                	jne    d3aa <is_type_ir+0x60>
    d3a3:	b8 01 00 00 00       	mov    $0x1,%eax
    d3a8:	eb 05                	jmp    d3af <is_type_ir+0x65>
    d3aa:	b8 00 00 00 00       	mov    $0x0,%eax
    d3af:	c9                   	leave
    d3b0:	c3                   	ret

000000000000d3b1 <is_and_or>:
    d3b1:	f3 0f 1e fa          	endbr64
    d3b5:	55                   	push   %rbp
    d3b6:	48 89 e5             	mov    %rsp,%rbp
    d3b9:	48 83 ec 10          	sub    $0x10,%rsp
    d3bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3c1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d3c6:	75 28                	jne    d3f0 <is_and_or+0x3f>
    d3c8:	48 8d 05 91 d8 00 00 	lea    0xd891(%rip),%rax        # 1ac60 <__PRETTY_FUNCTION__.9>
    d3cf:	48 89 c1             	mov    %rax,%rcx
    d3d2:	ba 43 00 00 00       	mov    $0x43,%edx
    d3d7:	48 8d 05 02 d0 00 00 	lea    0xd002(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d3de:	48 89 c6             	mov    %rax,%rsi
    d3e1:	48 8d 05 20 d0 00 00 	lea    0xd020(%rip),%rax        # 1a408 <__PRETTY_FUNCTION__.0+0x48>
    d3e8:	48 89 c7             	mov    %rax,%rdi
    d3eb:	e8 60 4f ff ff       	call   2350 <__assert_fail@plt>
    d3f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3f4:	8b 00                	mov    (%rax),%eax
    d3f6:	3d 32 01 00 00       	cmp    $0x132,%eax
    d3fb:	74 0d                	je     d40a <is_and_or+0x59>
    d3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d401:	8b 00                	mov    (%rax),%eax
    d403:	3d 2e 01 00 00       	cmp    $0x12e,%eax
    d408:	75 07                	jne    d411 <is_and_or+0x60>
    d40a:	b8 01 00 00 00       	mov    $0x1,%eax
    d40f:	eb 05                	jmp    d416 <is_and_or+0x65>
    d411:	b8 00 00 00 00       	mov    $0x0,%eax
    d416:	c9                   	leave
    d417:	c3                   	ret

000000000000d418 <set_type_from_hashtype>:
    d418:	f3 0f 1e fa          	endbr64
    d41c:	55                   	push   %rbp
    d41d:	48 89 e5             	mov    %rsp,%rbp
    d420:	48 83 ec 10          	sub    $0x10,%rsp
    d424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d428:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d42c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d431:	75 28                	jne    d45b <set_type_from_hashtype+0x43>
    d433:	48 8d 05 36 d8 00 00 	lea    0xd836(%rip),%rax        # 1ac70 <__PRETTY_FUNCTION__.8>
    d43a:	48 89 c1             	mov    %rax,%rcx
    d43d:	ba 49 00 00 00       	mov    $0x49,%edx
    d442:	48 8d 05 97 cf 00 00 	lea    0xcf97(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d449:	48 89 c6             	mov    %rax,%rsi
    d44c:	48 8d 05 b5 cf 00 00 	lea    0xcfb5(%rip),%rax        # 1a408 <__PRETTY_FUNCTION__.0+0x48>
    d453:	48 89 c7             	mov    %rax,%rdi
    d456:	e8 f5 4e ff ff       	call   2350 <__assert_fail@plt>
    d45b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d460:	75 28                	jne    d48a <set_type_from_hashtype+0x72>
    d462:	48 8d 05 07 d8 00 00 	lea    0xd807(%rip),%rax        # 1ac70 <__PRETTY_FUNCTION__.8>
    d469:	48 89 c1             	mov    %rax,%rcx
    d46c:	ba 4a 00 00 00       	mov    $0x4a,%edx
    d471:	48 8d 05 68 cf 00 00 	lea    0xcf68(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d478:	48 89 c6             	mov    %rax,%rsi
    d47b:	48 8d 05 93 cf 00 00 	lea    0xcf93(%rip),%rax        # 1a415 <__PRETTY_FUNCTION__.0+0x55>
    d482:	48 89 c7             	mov    %rax,%rdi
    d485:	e8 c6 4e ff ff       	call   2350 <__assert_fail@plt>
    d48a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d48e:	8b 40 0c             	mov    0xc(%rax),%eax
    d491:	83 f8 03             	cmp    $0x3,%eax
    d494:	74 3e                	je     d4d4 <set_type_from_hashtype+0xbc>
    d496:	83 f8 03             	cmp    $0x3,%eax
    d499:	77 45                	ja     d4e0 <set_type_from_hashtype+0xc8>
    d49b:	83 f8 02             	cmp    $0x2,%eax
    d49e:	74 28                	je     d4c8 <set_type_from_hashtype+0xb0>
    d4a0:	83 f8 02             	cmp    $0x2,%eax
    d4a3:	77 3b                	ja     d4e0 <set_type_from_hashtype+0xc8>
    d4a5:	85 c0                	test   %eax,%eax
    d4a7:	74 07                	je     d4b0 <set_type_from_hashtype+0x98>
    d4a9:	83 f8 01             	cmp    $0x1,%eax
    d4ac:	74 0e                	je     d4bc <set_type_from_hashtype+0xa4>
    d4ae:	eb 30                	jmp    d4e0 <set_type_from_hashtype+0xc8>
    d4b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4b4:	c7 00 0a 01 00 00    	movl   $0x10a,(%rax)
    d4ba:	eb 51                	jmp    d50d <set_type_from_hashtype+0xf5>
    d4bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4c0:	c7 00 0b 01 00 00    	movl   $0x10b,(%rax)
    d4c6:	eb 45                	jmp    d50d <set_type_from_hashtype+0xf5>
    d4c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4cc:	c7 00 04 01 00 00    	movl   $0x104,(%rax)
    d4d2:	eb 39                	jmp    d50d <set_type_from_hashtype+0xf5>
    d4d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4d8:	c7 00 38 01 00 00    	movl   $0x138,(%rax)
    d4de:	eb 2d                	jmp    d50d <set_type_from_hashtype+0xf5>
    d4e0:	48 8b 05 79 3b 01 00 	mov    0x13b79(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d4e7:	48 89 c1             	mov    %rax,%rcx
    d4ea:	ba 2c 00 00 00       	mov    $0x2c,%edx
    d4ef:	be 01 00 00 00       	mov    $0x1,%esi
    d4f4:	48 8d 05 2d cf 00 00 	lea    0xcf2d(%rip),%rax        # 1a428 <__PRETTY_FUNCTION__.0+0x68>
    d4fb:	48 89 c7             	mov    %rax,%rdi
    d4fe:	e8 8d 4f ff ff       	call   2490 <fwrite@plt>
    d503:	bf 01 00 00 00       	mov    $0x1,%edi
    d508:	e8 73 4f ff ff       	call   2480 <exit@plt>
    d50d:	90                   	nop
    d50e:	c9                   	leave
    d50f:	c3                   	ret

000000000000d510 <semcheck_expr>:
    d510:	f3 0f 1e fa          	endbr64
    d514:	55                   	push   %rbp
    d515:	48 89 e5             	mov    %rsp,%rbp
    d518:	48 83 ec 20          	sub    $0x20,%rsp
    d51c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d520:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d524:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d528:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    d52b:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
    d52f:	8b 7d e0             	mov    -0x20(%rbp),%edi
    d532:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    d535:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d539:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    d53d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d541:	41 89 f8             	mov    %edi,%r8d
    d544:	48 89 c7             	mov    %rax,%rdi
    d547:	e8 40 00 00 00       	call   d58c <semcheck_expr_main>
    d54c:	90                   	nop
    d54d:	c9                   	leave
    d54e:	c3                   	ret

000000000000d54f <semcheck_expr_func>:
    d54f:	f3 0f 1e fa          	endbr64
    d553:	55                   	push   %rbp
    d554:	48 89 e5             	mov    %rsp,%rbp
    d557:	48 83 ec 20          	sub    $0x20,%rsp
    d55b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d55f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d563:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d567:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    d56a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    d56d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d571:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    d575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d579:	41 89 c8             	mov    %ecx,%r8d
    d57c:	b9 00 00 00 00       	mov    $0x0,%ecx
    d581:	48 89 c7             	mov    %rax,%rdi
    d584:	e8 03 00 00 00       	call   d58c <semcheck_expr_main>
    d589:	90                   	nop
    d58a:	c9                   	leave
    d58b:	c3                   	ret

000000000000d58c <semcheck_expr_main>:
    d58c:	f3 0f 1e fa          	endbr64
    d590:	55                   	push   %rbp
    d591:	48 89 e5             	mov    %rsp,%rbp
    d594:	48 83 ec 30          	sub    $0x30,%rsp
    d598:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d59c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d5a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d5a4:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    d5a7:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    d5ab:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    d5b0:	75 28                	jne    d5da <semcheck_expr_main+0x4e>
    d5b2:	48 8d 05 d7 d6 00 00 	lea    0xd6d7(%rip),%rax        # 1ac90 <__PRETTY_FUNCTION__.7>
    d5b9:	48 89 c1             	mov    %rax,%rcx
    d5bc:	ba 73 00 00 00       	mov    $0x73,%edx
    d5c1:	48 8d 05 18 ce 00 00 	lea    0xce18(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d5c8:	48 89 c6             	mov    %rax,%rsi
    d5cb:	48 8d 05 83 ce 00 00 	lea    0xce83(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    d5d2:	48 89 c7             	mov    %rax,%rdi
    d5d5:	e8 76 4d ff ff       	call   2350 <__assert_fail@plt>
    d5da:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d5df:	75 28                	jne    d609 <semcheck_expr_main+0x7d>
    d5e1:	48 8d 05 a8 d6 00 00 	lea    0xd6a8(%rip),%rax        # 1ac90 <__PRETTY_FUNCTION__.7>
    d5e8:	48 89 c1             	mov    %rax,%rcx
    d5eb:	ba 74 00 00 00       	mov    $0x74,%edx
    d5f0:	48 8d 05 e9 cd 00 00 	lea    0xcde9(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d5f7:	48 89 c6             	mov    %rax,%rsi
    d5fa:	48 8d 05 63 ce 00 00 	lea    0xce63(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    d601:	48 89 c7             	mov    %rax,%rdi
    d604:	e8 47 4d ff ff       	call   2350 <__assert_fail@plt>
    d609:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    d610:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d614:	8b 40 04             	mov    0x4(%rax),%eax
    d617:	83 f8 09             	cmp    $0x9,%eax
    d61a:	0f 87 44 01 00 00    	ja     d764 <semcheck_expr_main+0x1d8>
    d620:	89 c0                	mov    %eax,%eax
    d622:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    d629:	00
    d62a:	48 8d 05 6f ce 00 00 	lea    0xce6f(%rip),%rax        # 1a4a0 <__PRETTY_FUNCTION__.0+0xe0>
    d631:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    d634:	48 98                	cltq
    d636:	48 8d 15 63 ce 00 00 	lea    0xce63(%rip),%rdx        # 1a4a0 <__PRETTY_FUNCTION__.0+0xe0>
    d63d:	48 01 d0             	add    %rdx,%rax
    d640:	3e ff e0             	notrack jmp *%rax
    d643:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d646:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d649:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d64d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d651:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d655:	41 89 f8             	mov    %edi,%r8d
    d658:	48 89 c7             	mov    %rax,%rdi
    d65b:	e8 36 01 00 00       	call   d796 <semcheck_relop>
    d660:	01 45 fc             	add    %eax,-0x4(%rbp)
    d663:	e9 29 01 00 00       	jmp    d791 <semcheck_expr_main+0x205>
    d668:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d66b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d66e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d672:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d676:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d67a:	41 89 f8             	mov    %edi,%r8d
    d67d:	48 89 c7             	mov    %rax,%rdi
    d680:	e8 63 03 00 00       	call   d9e8 <semcheck_signterm>
    d685:	01 45 fc             	add    %eax,-0x4(%rbp)
    d688:	e9 04 01 00 00       	jmp    d791 <semcheck_expr_main+0x205>
    d68d:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d690:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d693:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d697:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d69b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d69f:	41 89 f8             	mov    %edi,%r8d
    d6a2:	48 89 c7             	mov    %rax,%rdi
    d6a5:	e8 5f 04 00 00       	call   db09 <semcheck_addop>
    d6aa:	01 45 fc             	add    %eax,-0x4(%rbp)
    d6ad:	e9 df 00 00 00       	jmp    d791 <semcheck_expr_main+0x205>
    d6b2:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d6b5:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d6b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d6bc:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d6c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6c4:	41 89 f8             	mov    %edi,%r8d
    d6c7:	48 89 c7             	mov    %rax,%rdi
    d6ca:	e8 f5 05 00 00       	call   dcc4 <semcheck_mulop>
    d6cf:	01 45 fc             	add    %eax,-0x4(%rbp)
    d6d2:	e9 ba 00 00 00       	jmp    d791 <semcheck_expr_main+0x205>
    d6d7:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d6da:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d6dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d6e1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d6e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6e9:	41 89 f8             	mov    %edi,%r8d
    d6ec:	48 89 c7             	mov    %rax,%rdi
    d6ef:	e8 8b 07 00 00       	call   de7f <semcheck_varid>
    d6f4:	01 45 fc             	add    %eax,-0x4(%rbp)
    d6f7:	e9 95 00 00 00       	jmp    d791 <semcheck_expr_main+0x205>
    d6fc:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d6ff:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d702:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d706:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d70a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d70e:	41 89 f8             	mov    %edi,%r8d
    d711:	48 89 c7             	mov    %rax,%rdi
    d714:	e8 62 09 00 00       	call   e07b <semcheck_arrayaccess>
    d719:	01 45 fc             	add    %eax,-0x4(%rbp)
    d71c:	eb 73                	jmp    d791 <semcheck_expr_main+0x205>
    d71e:	8b 7d d0             	mov    -0x30(%rbp),%edi
    d721:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    d724:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d728:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d72c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d730:	41 89 f8             	mov    %edi,%r8d
    d733:	48 89 c7             	mov    %rax,%rdi
    d736:	e8 8f 0b 00 00       	call   e2ca <semcheck_funccall>
    d73b:	01 45 fc             	add    %eax,-0x4(%rbp)
    d73e:	eb 51                	jmp    d791 <semcheck_expr_main+0x205>
    d740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d744:	c7 00 0a 01 00 00    	movl   $0x10a,(%rax)
    d74a:	eb 45                	jmp    d791 <semcheck_expr_main+0x205>
    d74c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d750:	c7 00 0b 01 00 00    	movl   $0x10b,(%rax)
    d756:	eb 39                	jmp    d791 <semcheck_expr_main+0x205>
    d758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d75c:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
    d762:	eb 2d                	jmp    d791 <semcheck_expr_main+0x205>
    d764:	48 8b 05 f5 38 01 00 	mov    0x138f5(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d76b:	48 89 c1             	mov    %rax,%rcx
    d76e:	ba 27 00 00 00       	mov    $0x27,%edx
    d773:	be 01 00 00 00       	mov    $0x1,%esi
    d778:	48 8d 05 f9 cc 00 00 	lea    0xccf9(%rip),%rax        # 1a478 <__PRETTY_FUNCTION__.0+0xb8>
    d77f:	48 89 c7             	mov    %rax,%rdi
    d782:	e8 09 4d ff ff       	call   2490 <fwrite@plt>
    d787:	bf 01 00 00 00       	mov    $0x1,%edi
    d78c:	e8 ef 4c ff ff       	call   2480 <exit@plt>
    d791:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d794:	c9                   	leave
    d795:	c3                   	ret

000000000000d796 <semcheck_relop>:
    d796:	f3 0f 1e fa          	endbr64
    d79a:	55                   	push   %rbp
    d79b:	48 89 e5             	mov    %rsp,%rbp
    d79e:	48 83 ec 50          	sub    $0x50,%rsp
    d7a2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d7a6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    d7aa:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    d7ae:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    d7b1:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    d7b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d7bc:	00 00
    d7be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d7c2:	31 c0                	xor    %eax,%eax
    d7c4:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d7c9:	75 28                	jne    d7f3 <semcheck_relop+0x5d>
    d7cb:	48 8d 05 d6 d4 00 00 	lea    0xd4d6(%rip),%rax        # 1aca8 <__PRETTY_FUNCTION__.6>
    d7d2:	48 89 c1             	mov    %rax,%rcx
    d7d5:	ba b3 00 00 00       	mov    $0xb3,%edx
    d7da:	48 8d 05 ff cb 00 00 	lea    0xcbff(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d7e1:	48 89 c6             	mov    %rax,%rsi
    d7e4:	48 8d 05 6a cc 00 00 	lea    0xcc6a(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    d7eb:	48 89 c7             	mov    %rax,%rdi
    d7ee:	e8 5d 4b ff ff       	call   2350 <__assert_fail@plt>
    d7f3:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    d7f8:	75 28                	jne    d822 <semcheck_relop+0x8c>
    d7fa:	48 8d 05 a7 d4 00 00 	lea    0xd4a7(%rip),%rax        # 1aca8 <__PRETTY_FUNCTION__.6>
    d801:	48 89 c1             	mov    %rax,%rcx
    d804:	ba b4 00 00 00       	mov    $0xb4,%edx
    d809:	48 8d 05 d0 cb 00 00 	lea    0xcbd0(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d810:	48 89 c6             	mov    %rax,%rsi
    d813:	48 8d 05 4a cc 00 00 	lea    0xcc4a(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    d81a:	48 89 c7             	mov    %rax,%rdi
    d81d:	e8 2e 4b ff ff       	call   2350 <__assert_fail@plt>
    d822:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d826:	8b 40 04             	mov    0x4(%rax),%eax
    d829:	85 c0                	test   %eax,%eax
    d82b:	74 28                	je     d855 <semcheck_relop+0xbf>
    d82d:	48 8d 05 74 d4 00 00 	lea    0xd474(%rip),%rax        # 1aca8 <__PRETTY_FUNCTION__.6>
    d834:	48 89 c1             	mov    %rax,%rcx
    d837:	ba b5 00 00 00       	mov    $0xb5,%edx
    d83c:	48 8d 05 9d cb 00 00 	lea    0xcb9d(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    d843:	48 89 c6             	mov    %rax,%rsi
    d846:	48 8d 05 7b cc 00 00 	lea    0xcc7b(%rip),%rax        # 1a4c8 <__PRETTY_FUNCTION__.0+0x108>
    d84d:	48 89 c7             	mov    %rax,%rdi
    d850:	e8 fb 4a ff ff       	call   2350 <__assert_fail@plt>
    d855:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    d85c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d860:	48 8b 40 10          	mov    0x10(%rax),%rax
    d864:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d868:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d86c:	48 8b 40 18          	mov    0x18(%rax),%rax
    d870:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d874:	8b 7d b0             	mov    -0x50(%rbp),%edi
    d877:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    d87a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d87e:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    d882:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    d886:	41 89 f8             	mov    %edi,%r8d
    d889:	48 89 c7             	mov    %rax,%rdi
    d88c:	e8 fb fc ff ff       	call   d58c <semcheck_expr_main>
    d891:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d894:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d899:	74 20                	je     d8bb <semcheck_relop+0x125>
    d89b:	8b 7d b0             	mov    -0x50(%rbp),%edi
    d89e:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    d8a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8a5:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    d8a9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d8ad:	41 89 f8             	mov    %edi,%r8d
    d8b0:	48 89 c7             	mov    %rax,%rdi
    d8b3:	e8 d4 fc ff ff       	call   d58c <semcheck_expr_main>
    d8b8:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d8bb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d8c0:	75 37                	jne    d8f9 <semcheck_relop+0x163>
    d8c2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d8c5:	3d 37 01 00 00       	cmp    $0x137,%eax
    d8ca:	74 2d                	je     d8f9 <semcheck_relop+0x163>
    d8cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d8d0:	8b 10                	mov    (%rax),%edx
    d8d2:	48 8b 05 87 37 01 00 	mov    0x13787(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d8d9:	48 8d 0d 08 cc 00 00 	lea    0xcc08(%rip),%rcx        # 1a4e8 <__PRETTY_FUNCTION__.0+0x128>
    d8e0:	48 89 ce             	mov    %rcx,%rsi
    d8e3:	48 89 c7             	mov    %rax,%rdi
    d8e6:	b8 00 00 00 00       	mov    $0x0,%eax
    d8eb:	e8 e0 4a ff ff       	call   23d0 <fprintf@plt>
    d8f0:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d8f4:	e9 cc 00 00 00       	jmp    d9c5 <semcheck_relop+0x22f>
    d8f9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d8fc:	8b 45 e0             	mov    -0x20(%rbp),%eax
    d8ff:	39 c2                	cmp    %eax,%edx
    d901:	74 28                	je     d92b <semcheck_relop+0x195>
    d903:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d907:	8b 10                	mov    (%rax),%edx
    d909:	48 8b 05 50 37 01 00 	mov    0x13750(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d910:	48 8d 0d 11 cc 00 00 	lea    0xcc11(%rip),%rcx        # 1a528 <__PRETTY_FUNCTION__.0+0x168>
    d917:	48 89 ce             	mov    %rcx,%rsi
    d91a:	48 89 c7             	mov    %rax,%rdi
    d91d:	b8 00 00 00 00       	mov    $0x0,%eax
    d922:	e8 a9 4a ff ff       	call   23d0 <fprintf@plt>
    d927:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d92b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d92f:	48 83 c0 08          	add    $0x8,%rax
    d933:	48 89 c7             	mov    %rax,%rdi
    d936:	e8 76 fa ff ff       	call   d3b1 <is_and_or>
    d93b:	85 c0                	test   %eax,%eax
    d93d:	74 3e                	je     d97d <semcheck_relop+0x1e7>
    d93f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d942:	3d 37 01 00 00       	cmp    $0x137,%eax
    d947:	75 0a                	jne    d953 <semcheck_relop+0x1bd>
    d949:	8b 45 e0             	mov    -0x20(%rbp),%eax
    d94c:	3d 37 01 00 00       	cmp    $0x137,%eax
    d951:	74 72                	je     d9c5 <semcheck_relop+0x22f>
    d953:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d957:	8b 10                	mov    (%rax),%edx
    d959:	48 8b 05 00 37 01 00 	mov    0x13700(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d960:	48 8d 0d f9 cb 00 00 	lea    0xcbf9(%rip),%rcx        # 1a560 <__PRETTY_FUNCTION__.0+0x1a0>
    d967:	48 89 ce             	mov    %rcx,%rsi
    d96a:	48 89 c7             	mov    %rax,%rdi
    d96d:	b8 00 00 00 00       	mov    $0x0,%eax
    d972:	e8 59 4a ff ff       	call   23d0 <fprintf@plt>
    d977:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d97b:	eb 48                	jmp    d9c5 <semcheck_relop+0x22f>
    d97d:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    d981:	48 89 c7             	mov    %rax,%rdi
    d984:	e8 c1 f9 ff ff       	call   d34a <is_type_ir>
    d989:	85 c0                	test   %eax,%eax
    d98b:	74 10                	je     d99d <semcheck_relop+0x207>
    d98d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d991:	48 89 c7             	mov    %rax,%rdi
    d994:	e8 b1 f9 ff ff       	call   d34a <is_type_ir>
    d999:	85 c0                	test   %eax,%eax
    d99b:	75 28                	jne    d9c5 <semcheck_relop+0x22f>
    d99d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d9a1:	8b 10                	mov    (%rax),%edx
    d9a3:	48 8b 05 b6 36 01 00 	mov    0x136b6(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    d9aa:	48 8d 0d f7 cb 00 00 	lea    0xcbf7(%rip),%rcx        # 1a5a8 <__PRETTY_FUNCTION__.0+0x1e8>
    d9b1:	48 89 ce             	mov    %rcx,%rsi
    d9b4:	48 89 c7             	mov    %rax,%rdi
    d9b7:	b8 00 00 00 00       	mov    $0x0,%eax
    d9bc:	e8 0f 4a ff ff       	call   23d0 <fprintf@plt>
    d9c1:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d9c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d9c9:	c7 00 37 01 00 00    	movl   $0x137,(%rax)
    d9cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d9d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d9d6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d9dd:	00 00
    d9df:	74 05                	je     d9e6 <semcheck_relop+0x250>
    d9e1:	e8 4a 49 ff ff       	call   2330 <__stack_chk_fail@plt>
    d9e6:	c9                   	leave
    d9e7:	c3                   	ret

000000000000d9e8 <semcheck_signterm>:
    d9e8:	f3 0f 1e fa          	endbr64
    d9ec:	55                   	push   %rbp
    d9ed:	48 89 e5             	mov    %rsp,%rbp
    d9f0:	48 83 ec 30          	sub    $0x30,%rsp
    d9f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d9f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d9fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    da00:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    da03:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    da07:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    da0c:	75 28                	jne    da36 <semcheck_signterm+0x4e>
    da0e:	48 8d 05 ab d2 00 00 	lea    0xd2ab(%rip),%rax        # 1acc0 <__PRETTY_FUNCTION__.5>
    da15:	48 89 c1             	mov    %rax,%rcx
    da18:	ba f1 00 00 00       	mov    $0xf1,%edx
    da1d:	48 8d 05 bc c9 00 00 	lea    0xc9bc(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    da24:	48 89 c6             	mov    %rax,%rsi
    da27:	48 8d 05 27 ca 00 00 	lea    0xca27(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    da2e:	48 89 c7             	mov    %rax,%rdi
    da31:	e8 1a 49 ff ff       	call   2350 <__assert_fail@plt>
    da36:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    da3b:	75 28                	jne    da65 <semcheck_signterm+0x7d>
    da3d:	48 8d 05 7c d2 00 00 	lea    0xd27c(%rip),%rax        # 1acc0 <__PRETTY_FUNCTION__.5>
    da44:	48 89 c1             	mov    %rax,%rcx
    da47:	ba f2 00 00 00       	mov    $0xf2,%edx
    da4c:	48 8d 05 8d c9 00 00 	lea    0xc98d(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    da53:	48 89 c6             	mov    %rax,%rsi
    da56:	48 8d 05 07 ca 00 00 	lea    0xca07(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    da5d:	48 89 c7             	mov    %rax,%rdi
    da60:	e8 eb 48 ff ff       	call   2350 <__assert_fail@plt>
    da65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da69:	8b 40 04             	mov    0x4(%rax),%eax
    da6c:	83 f8 01             	cmp    $0x1,%eax
    da6f:	74 28                	je     da99 <semcheck_signterm+0xb1>
    da71:	48 8d 05 48 d2 00 00 	lea    0xd248(%rip),%rax        # 1acc0 <__PRETTY_FUNCTION__.5>
    da78:	48 89 c1             	mov    %rax,%rcx
    da7b:	ba f3 00 00 00       	mov    $0xf3,%edx
    da80:	48 8d 05 59 c9 00 00 	lea    0xc959(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    da87:	48 89 c6             	mov    %rax,%rsi
    da8a:	48 8d 05 59 cb 00 00 	lea    0xcb59(%rip),%rax        # 1a5ea <__PRETTY_FUNCTION__.0+0x22a>
    da91:	48 89 c7             	mov    %rax,%rdi
    da94:	e8 b7 48 ff ff       	call   2350 <__assert_fail@plt>
    da99:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    daa0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    daa4:	48 8b 40 08          	mov    0x8(%rax),%rax
    daa8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    daac:	8b 7d d0             	mov    -0x30(%rbp),%edi
    daaf:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    dab2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dab6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    daba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dabe:	41 89 f8             	mov    %edi,%r8d
    dac1:	48 89 c7             	mov    %rax,%rdi
    dac4:	e8 c3 fa ff ff       	call   d58c <semcheck_expr_main>
    dac9:	01 45 f4             	add    %eax,-0xc(%rbp)
    dacc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dad0:	48 89 c7             	mov    %rax,%rdi
    dad3:	e8 72 f8 ff ff       	call   d34a <is_type_ir>
    dad8:	85 c0                	test   %eax,%eax
    dada:	75 28                	jne    db04 <semcheck_signterm+0x11c>
    dadc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dae0:	8b 10                	mov    (%rax),%edx
    dae2:	48 8b 05 77 35 01 00 	mov    0x13577(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    dae9:	48 8d 0d 18 cb 00 00 	lea    0xcb18(%rip),%rcx        # 1a608 <__PRETTY_FUNCTION__.0+0x248>
    daf0:	48 89 ce             	mov    %rcx,%rsi
    daf3:	48 89 c7             	mov    %rax,%rdi
    daf6:	b8 00 00 00 00       	mov    $0x0,%eax
    dafb:	e8 d0 48 ff ff       	call   23d0 <fprintf@plt>
    db00:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    db04:	8b 45 f4             	mov    -0xc(%rbp),%eax
    db07:	c9                   	leave
    db08:	c3                   	ret

000000000000db09 <semcheck_addop>:
    db09:	f3 0f 1e fa          	endbr64
    db0d:	55                   	push   %rbp
    db0e:	48 89 e5             	mov    %rsp,%rbp
    db11:	48 83 ec 50          	sub    $0x50,%rsp
    db15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    db19:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    db1d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    db21:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    db24:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    db28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    db2f:	00 00
    db31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    db35:	31 c0                	xor    %eax,%eax
    db37:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    db3c:	75 28                	jne    db66 <semcheck_addop+0x5d>
    db3e:	48 8d 05 93 d1 00 00 	lea    0xd193(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.4>
    db45:	48 89 c1             	mov    %rax,%rcx
    db48:	ba 0c 01 00 00       	mov    $0x10c,%edx
    db4d:	48 8d 05 8c c8 00 00 	lea    0xc88c(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    db54:	48 89 c6             	mov    %rax,%rsi
    db57:	48 8d 05 f7 c8 00 00 	lea    0xc8f7(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    db5e:	48 89 c7             	mov    %rax,%rdi
    db61:	e8 ea 47 ff ff       	call   2350 <__assert_fail@plt>
    db66:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    db6b:	75 28                	jne    db95 <semcheck_addop+0x8c>
    db6d:	48 8d 05 64 d1 00 00 	lea    0xd164(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.4>
    db74:	48 89 c1             	mov    %rax,%rcx
    db77:	ba 0d 01 00 00       	mov    $0x10d,%edx
    db7c:	48 8d 05 5d c8 00 00 	lea    0xc85d(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    db83:	48 89 c6             	mov    %rax,%rsi
    db86:	48 8d 05 d7 c8 00 00 	lea    0xc8d7(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    db8d:	48 89 c7             	mov    %rax,%rdi
    db90:	e8 bb 47 ff ff       	call   2350 <__assert_fail@plt>
    db95:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    db99:	8b 40 04             	mov    0x4(%rax),%eax
    db9c:	83 f8 02             	cmp    $0x2,%eax
    db9f:	74 28                	je     dbc9 <semcheck_addop+0xc0>
    dba1:	48 8d 05 30 d1 00 00 	lea    0xd130(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.4>
    dba8:	48 89 c1             	mov    %rax,%rcx
    dbab:	ba 0e 01 00 00       	mov    $0x10e,%edx
    dbb0:	48 8d 05 29 c8 00 00 	lea    0xc829(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    dbb7:	48 89 c6             	mov    %rax,%rsi
    dbba:	48 8d 05 7b ca 00 00 	lea    0xca7b(%rip),%rax        # 1a63c <__PRETTY_FUNCTION__.0+0x27c>
    dbc1:	48 89 c7             	mov    %rax,%rdi
    dbc4:	e8 87 47 ff ff       	call   2350 <__assert_fail@plt>
    dbc9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    dbd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dbd4:	48 8b 40 10          	mov    0x10(%rax),%rax
    dbd8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dbdc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dbe0:	48 8b 40 18          	mov    0x18(%rax),%rax
    dbe4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dbe8:	8b 7d b0             	mov    -0x50(%rbp),%edi
    dbeb:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    dbee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbf2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    dbf6:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    dbfa:	41 89 f8             	mov    %edi,%r8d
    dbfd:	48 89 c7             	mov    %rax,%rdi
    dc00:	e8 87 f9 ff ff       	call   d58c <semcheck_expr_main>
    dc05:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dc08:	8b 7d b0             	mov    -0x50(%rbp),%edi
    dc0b:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    dc0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc12:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    dc16:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    dc1a:	41 89 f8             	mov    %edi,%r8d
    dc1d:	48 89 c7             	mov    %rax,%rdi
    dc20:	e8 67 f9 ff ff       	call   d58c <semcheck_expr_main>
    dc25:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dc28:	8b 55 dc             	mov    -0x24(%rbp),%edx
    dc2b:	8b 45 e0             	mov    -0x20(%rbp),%eax
    dc2e:	39 c2                	cmp    %eax,%edx
    dc30:	74 28                	je     dc5a <semcheck_addop+0x151>
    dc32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc36:	8b 10                	mov    (%rax),%edx
    dc38:	48 8b 05 21 34 01 00 	mov    0x13421(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    dc3f:	48 8d 0d 12 ca 00 00 	lea    0xca12(%rip),%rcx        # 1a658 <__PRETTY_FUNCTION__.0+0x298>
    dc46:	48 89 ce             	mov    %rcx,%rsi
    dc49:	48 89 c7             	mov    %rax,%rdi
    dc4c:	b8 00 00 00 00       	mov    $0x0,%eax
    dc51:	e8 7a 47 ff ff       	call   23d0 <fprintf@plt>
    dc56:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    dc5a:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    dc5e:	48 89 c7             	mov    %rax,%rdi
    dc61:	e8 e4 f6 ff ff       	call   d34a <is_type_ir>
    dc66:	85 c0                	test   %eax,%eax
    dc68:	74 10                	je     dc7a <semcheck_addop+0x171>
    dc6a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    dc6e:	48 89 c7             	mov    %rax,%rdi
    dc71:	e8 d4 f6 ff ff       	call   d34a <is_type_ir>
    dc76:	85 c0                	test   %eax,%eax
    dc78:	75 28                	jne    dca2 <semcheck_addop+0x199>
    dc7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc7e:	8b 10                	mov    (%rax),%edx
    dc80:	48 8b 05 d9 33 01 00 	mov    0x133d9(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    dc87:	48 8d 0d fa c9 00 00 	lea    0xc9fa(%rip),%rcx        # 1a688 <__PRETTY_FUNCTION__.0+0x2c8>
    dc8e:	48 89 ce             	mov    %rcx,%rsi
    dc91:	48 89 c7             	mov    %rax,%rdi
    dc94:	b8 00 00 00 00       	mov    $0x0,%eax
    dc99:	e8 32 47 ff ff       	call   23d0 <fprintf@plt>
    dc9e:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    dca2:	8b 55 dc             	mov    -0x24(%rbp),%edx
    dca5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dca9:	89 10                	mov    %edx,(%rax)
    dcab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    dcae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dcb2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    dcb9:	00 00
    dcbb:	74 05                	je     dcc2 <semcheck_addop+0x1b9>
    dcbd:	e8 6e 46 ff ff       	call   2330 <__stack_chk_fail@plt>
    dcc2:	c9                   	leave
    dcc3:	c3                   	ret

000000000000dcc4 <semcheck_mulop>:
    dcc4:	f3 0f 1e fa          	endbr64
    dcc8:	55                   	push   %rbp
    dcc9:	48 89 e5             	mov    %rsp,%rbp
    dccc:	48 83 ec 50          	sub    $0x50,%rsp
    dcd0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    dcd4:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    dcd8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    dcdc:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    dcdf:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    dce3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dcea:	00 00
    dcec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dcf0:	31 c0                	xor    %eax,%eax
    dcf2:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    dcf7:	75 28                	jne    dd21 <semcheck_mulop+0x5d>
    dcf9:	48 8d 05 e8 cf 00 00 	lea    0xcfe8(%rip),%rax        # 1ace8 <__PRETTY_FUNCTION__.3>
    dd00:	48 89 c1             	mov    %rax,%rcx
    dd03:	ba 30 01 00 00       	mov    $0x130,%edx
    dd08:	48 8d 05 d1 c6 00 00 	lea    0xc6d1(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    dd0f:	48 89 c6             	mov    %rax,%rsi
    dd12:	48 8d 05 3c c7 00 00 	lea    0xc73c(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    dd19:	48 89 c7             	mov    %rax,%rdi
    dd1c:	e8 2f 46 ff ff       	call   2350 <__assert_fail@plt>
    dd21:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    dd26:	75 28                	jne    dd50 <semcheck_mulop+0x8c>
    dd28:	48 8d 05 b9 cf 00 00 	lea    0xcfb9(%rip),%rax        # 1ace8 <__PRETTY_FUNCTION__.3>
    dd2f:	48 89 c1             	mov    %rax,%rcx
    dd32:	ba 31 01 00 00       	mov    $0x131,%edx
    dd37:	48 8d 05 a2 c6 00 00 	lea    0xc6a2(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    dd3e:	48 89 c6             	mov    %rax,%rsi
    dd41:	48 8d 05 1c c7 00 00 	lea    0xc71c(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    dd48:	48 89 c7             	mov    %rax,%rdi
    dd4b:	e8 00 46 ff ff       	call   2350 <__assert_fail@plt>
    dd50:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd54:	8b 40 04             	mov    0x4(%rax),%eax
    dd57:	83 f8 03             	cmp    $0x3,%eax
    dd5a:	74 28                	je     dd84 <semcheck_mulop+0xc0>
    dd5c:	48 8d 05 85 cf 00 00 	lea    0xcf85(%rip),%rax        # 1ace8 <__PRETTY_FUNCTION__.3>
    dd63:	48 89 c1             	mov    %rax,%rcx
    dd66:	ba 32 01 00 00       	mov    $0x132,%edx
    dd6b:	48 8d 05 6e c6 00 00 	lea    0xc66e(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    dd72:	48 89 c6             	mov    %rax,%rsi
    dd75:	48 8d 05 4a c9 00 00 	lea    0xc94a(%rip),%rax        # 1a6c6 <__PRETTY_FUNCTION__.0+0x306>
    dd7c:	48 89 c7             	mov    %rax,%rdi
    dd7f:	e8 cc 45 ff ff       	call   2350 <__assert_fail@plt>
    dd84:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    dd8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd8f:	48 8b 40 10          	mov    0x10(%rax),%rax
    dd93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dd97:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd9b:	48 8b 40 18          	mov    0x18(%rax),%rax
    dd9f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dda3:	8b 7d b0             	mov    -0x50(%rbp),%edi
    dda6:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    dda9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ddad:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    ddb1:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    ddb5:	41 89 f8             	mov    %edi,%r8d
    ddb8:	48 89 c7             	mov    %rax,%rdi
    ddbb:	e8 cc f7 ff ff       	call   d58c <semcheck_expr_main>
    ddc0:	01 45 e4             	add    %eax,-0x1c(%rbp)
    ddc3:	8b 7d b0             	mov    -0x50(%rbp),%edi
    ddc6:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    ddc9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ddcd:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    ddd1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ddd5:	41 89 f8             	mov    %edi,%r8d
    ddd8:	48 89 c7             	mov    %rax,%rdi
    dddb:	e8 ac f7 ff ff       	call   d58c <semcheck_expr_main>
    dde0:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dde3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    dde6:	8b 45 e0             	mov    -0x20(%rbp),%eax
    dde9:	39 c2                	cmp    %eax,%edx
    ddeb:	74 28                	je     de15 <semcheck_mulop+0x151>
    dded:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ddf1:	8b 10                	mov    (%rax),%edx
    ddf3:	48 8b 05 66 32 01 00 	mov    0x13266(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ddfa:	48 8d 0d df c8 00 00 	lea    0xc8df(%rip),%rcx        # 1a6e0 <__PRETTY_FUNCTION__.0+0x320>
    de01:	48 89 ce             	mov    %rcx,%rsi
    de04:	48 89 c7             	mov    %rax,%rdi
    de07:	b8 00 00 00 00       	mov    $0x0,%eax
    de0c:	e8 bf 45 ff ff       	call   23d0 <fprintf@plt>
    de11:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    de15:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    de19:	48 89 c7             	mov    %rax,%rdi
    de1c:	e8 29 f5 ff ff       	call   d34a <is_type_ir>
    de21:	85 c0                	test   %eax,%eax
    de23:	74 10                	je     de35 <semcheck_mulop+0x171>
    de25:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    de29:	48 89 c7             	mov    %rax,%rdi
    de2c:	e8 19 f5 ff ff       	call   d34a <is_type_ir>
    de31:	85 c0                	test   %eax,%eax
    de33:	75 28                	jne    de5d <semcheck_mulop+0x199>
    de35:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    de39:	8b 10                	mov    (%rax),%edx
    de3b:	48 8b 05 1e 32 01 00 	mov    0x1321e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    de42:	48 8d 0d c7 c8 00 00 	lea    0xc8c7(%rip),%rcx        # 1a710 <__PRETTY_FUNCTION__.0+0x350>
    de49:	48 89 ce             	mov    %rcx,%rsi
    de4c:	48 89 c7             	mov    %rax,%rdi
    de4f:	b8 00 00 00 00       	mov    $0x0,%eax
    de54:	e8 77 45 ff ff       	call   23d0 <fprintf@plt>
    de59:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    de5d:	8b 55 dc             	mov    -0x24(%rbp),%edx
    de60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    de64:	89 10                	mov    %edx,(%rax)
    de66:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    de69:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de6d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    de74:	00 00
    de76:	74 05                	je     de7d <semcheck_mulop+0x1b9>
    de78:	e8 b3 44 ff ff       	call   2330 <__stack_chk_fail@plt>
    de7d:	c9                   	leave
    de7e:	c3                   	ret

000000000000de7f <semcheck_varid>:
    de7f:	f3 0f 1e fa          	endbr64
    de83:	55                   	push   %rbp
    de84:	48 89 e5             	mov    %rsp,%rbp
    de87:	48 83 ec 40          	sub    $0x40,%rsp
    de8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    de8f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    de93:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    de97:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
    de9a:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
    de9e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dea5:	00 00
    dea7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    deab:	31 c0                	xor    %eax,%eax
    dead:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    deb2:	75 28                	jne    dedc <semcheck_varid+0x5d>
    deb4:	48 8d 05 3d ce 00 00 	lea    0xce3d(%rip),%rax        # 1acf8 <__PRETTY_FUNCTION__.2>
    debb:	48 89 c1             	mov    %rax,%rcx
    debe:	ba 54 01 00 00       	mov    $0x154,%edx
    dec3:	48 8d 05 16 c5 00 00 	lea    0xc516(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    deca:	48 89 c6             	mov    %rax,%rsi
    decd:	48 8d 05 81 c5 00 00 	lea    0xc581(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    ded4:	48 89 c7             	mov    %rax,%rdi
    ded7:	e8 74 44 ff ff       	call   2350 <__assert_fail@plt>
    dedc:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    dee1:	75 28                	jne    df0b <semcheck_varid+0x8c>
    dee3:	48 8d 05 0e ce 00 00 	lea    0xce0e(%rip),%rax        # 1acf8 <__PRETTY_FUNCTION__.2>
    deea:	48 89 c1             	mov    %rax,%rcx
    deed:	ba 55 01 00 00       	mov    $0x155,%edx
    def2:	48 8d 05 e7 c4 00 00 	lea    0xc4e7(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    def9:	48 89 c6             	mov    %rax,%rsi
    defc:	48 8d 05 61 c5 00 00 	lea    0xc561(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    df03:	48 89 c7             	mov    %rax,%rdi
    df06:	e8 45 44 ff ff       	call   2350 <__assert_fail@plt>
    df0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df0f:	8b 40 04             	mov    0x4(%rax),%eax
    df12:	83 f8 04             	cmp    $0x4,%eax
    df15:	74 28                	je     df3f <semcheck_varid+0xc0>
    df17:	48 8d 05 da cd 00 00 	lea    0xcdda(%rip),%rax        # 1acf8 <__PRETTY_FUNCTION__.2>
    df1e:	48 89 c1             	mov    %rax,%rcx
    df21:	ba 56 01 00 00       	mov    $0x156,%edx
    df26:	48 8d 05 b3 c4 00 00 	lea    0xc4b3(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    df2d:	48 89 c6             	mov    %rax,%rsi
    df30:	48 8d 05 17 c8 00 00 	lea    0xc817(%rip),%rax        # 1a74e <__PRETTY_FUNCTION__.0+0x38e>
    df37:	48 89 c7             	mov    %rax,%rdi
    df3a:	e8 11 44 ff ff       	call   2350 <__assert_fail@plt>
    df3f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    df46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df4a:	48 8b 40 08          	mov    0x8(%rax),%rax
    df4e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    df52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    df56:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    df5a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    df5e:	48 89 ce             	mov    %rcx,%rsi
    df61:	48 89 c7             	mov    %rax,%rdi
    df64:	e8 dc d9 ff ff       	call   b945 <FindIdent>
    df69:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    df6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df70:	8b 55 c0             	mov    -0x40(%rbp),%edx
    df73:	89 d6                	mov    %edx,%esi
    df75:	48 89 c7             	mov    %rax,%rdi
    df78:	e8 66 f3 ff ff       	call   d2e3 <set_hash_meta>
    df7d:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
    df81:	75 38                	jne    dfbb <semcheck_varid+0x13c>
    df83:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df87:	8b 10                	mov    (%rax),%edx
    df89:	48 8b 05 d0 30 01 00 	mov    0x130d0(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    df90:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    df94:	48 8d 35 cd c7 00 00 	lea    0xc7cd(%rip),%rsi        # 1a768 <__PRETTY_FUNCTION__.0+0x3a8>
    df9b:	48 89 c7             	mov    %rax,%rdi
    df9e:	b8 00 00 00 00       	mov    $0x0,%eax
    dfa3:	e8 28 44 ff ff       	call   23d0 <fprintf@plt>
    dfa8:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    dfac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dfb0:	c7 00 38 01 00 00    	movl   $0x138,(%rax)
    dfb6:	e9 a7 00 00 00       	jmp    e062 <semcheck_varid+0x1e3>
    dfbb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    dfbe:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    dfc1:	7e 4c                	jle    e00f <semcheck_varid+0x190>
    dfc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dfc7:	8b 10                	mov    (%rax),%edx
    dfc9:	48 8b 05 90 30 01 00 	mov    0x13090(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    dfd0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dfd4:	48 8d 35 bd c7 00 00 	lea    0xc7bd(%rip),%rsi        # 1a798 <__PRETTY_FUNCTION__.0+0x3d8>
    dfdb:	48 89 c7             	mov    %rax,%rdi
    dfde:	b8 00 00 00 00       	mov    $0x0,%eax
    dfe3:	e8 e8 43 ff ff       	call   23d0 <fprintf@plt>
    dfe8:	48 8b 05 71 30 01 00 	mov    0x13071(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    dfef:	48 89 c1             	mov    %rax,%rcx
    dff2:	ba 30 00 00 00       	mov    $0x30,%edx
    dff7:	be 01 00 00 00       	mov    $0x1,%esi
    dffc:	48 8d 05 cd c7 00 00 	lea    0xc7cd(%rip),%rax        # 1a7d0 <__PRETTY_FUNCTION__.0+0x410>
    e003:	48 89 c7             	mov    %rax,%rdi
    e006:	e8 85 44 ff ff       	call   2490 <fwrite@plt>
    e00b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e00f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e013:	8b 40 08             	mov    0x8(%rax),%eax
    e016:	85 c0                	test   %eax,%eax
    e018:	74 35                	je     e04f <semcheck_varid+0x1d0>
    e01a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e01e:	8b 40 08             	mov    0x8(%rax),%eax
    e021:	83 f8 04             	cmp    $0x4,%eax
    e024:	74 29                	je     e04f <semcheck_varid+0x1d0>
    e026:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e02a:	8b 10                	mov    (%rax),%edx
    e02c:	48 8b 05 2d 30 01 00 	mov    0x1302d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e033:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e037:	48 8d 35 ca c7 00 00 	lea    0xc7ca(%rip),%rsi        # 1a808 <__PRETTY_FUNCTION__.0+0x448>
    e03e:	48 89 c7             	mov    %rax,%rdi
    e041:	b8 00 00 00 00       	mov    $0x0,%eax
    e046:	e8 85 43 ff ff       	call   23d0 <fprintf@plt>
    e04b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e04f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e053:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e057:	48 89 d6             	mov    %rdx,%rsi
    e05a:	48 89 c7             	mov    %rax,%rdi
    e05d:	e8 b6 f3 ff ff       	call   d418 <set_type_from_hashtype>
    e062:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e065:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e069:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e070:	00 00
    e072:	74 05                	je     e079 <semcheck_varid+0x1fa>
    e074:	e8 b7 42 ff ff       	call   2330 <__stack_chk_fail@plt>
    e079:	c9                   	leave
    e07a:	c3                   	ret

000000000000e07b <semcheck_arrayaccess>:
    e07b:	f3 0f 1e fa          	endbr64
    e07f:	55                   	push   %rbp
    e080:	48 89 e5             	mov    %rsp,%rbp
    e083:	48 83 ec 50          	sub    $0x50,%rsp
    e087:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e08b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e08f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e093:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e096:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e09a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e0a1:	00 00
    e0a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e0a7:	31 c0                	xor    %eax,%eax
    e0a9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e0ae:	75 28                	jne    e0d8 <semcheck_arrayaccess+0x5d>
    e0b0:	48 8d 05 59 cc 00 00 	lea    0xcc59(%rip),%rax        # 1ad10 <__PRETTY_FUNCTION__.1>
    e0b7:	48 89 c1             	mov    %rax,%rcx
    e0ba:	ba 84 01 00 00       	mov    $0x184,%edx
    e0bf:	48 8d 05 1a c3 00 00 	lea    0xc31a(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e0c6:	48 89 c6             	mov    %rax,%rsi
    e0c9:	48 8d 05 85 c3 00 00 	lea    0xc385(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    e0d0:	48 89 c7             	mov    %rax,%rdi
    e0d3:	e8 78 42 ff ff       	call   2350 <__assert_fail@plt>
    e0d8:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e0dd:	75 28                	jne    e107 <semcheck_arrayaccess+0x8c>
    e0df:	48 8d 05 2a cc 00 00 	lea    0xcc2a(%rip),%rax        # 1ad10 <__PRETTY_FUNCTION__.1>
    e0e6:	48 89 c1             	mov    %rax,%rcx
    e0e9:	ba 85 01 00 00       	mov    $0x185,%edx
    e0ee:	48 8d 05 eb c2 00 00 	lea    0xc2eb(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e0f5:	48 89 c6             	mov    %rax,%rsi
    e0f8:	48 8d 05 65 c3 00 00 	lea    0xc365(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    e0ff:	48 89 c7             	mov    %rax,%rdi
    e102:	e8 49 42 ff ff       	call   2350 <__assert_fail@plt>
    e107:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e10b:	8b 40 04             	mov    0x4(%rax),%eax
    e10e:	83 f8 05             	cmp    $0x5,%eax
    e111:	74 28                	je     e13b <semcheck_arrayaccess+0xc0>
    e113:	48 8d 05 f6 cb 00 00 	lea    0xcbf6(%rip),%rax        # 1ad10 <__PRETTY_FUNCTION__.1>
    e11a:	48 89 c1             	mov    %rax,%rcx
    e11d:	ba 86 01 00 00       	mov    $0x186,%edx
    e122:	48 8d 05 b7 c2 00 00 	lea    0xc2b7(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e129:	48 89 c6             	mov    %rax,%rsi
    e12c:	48 8d 05 1d c7 00 00 	lea    0xc71d(%rip),%rax        # 1a850 <__PRETTY_FUNCTION__.0+0x490>
    e133:	48 89 c7             	mov    %rax,%rdi
    e136:	e8 15 42 ff ff       	call   2350 <__assert_fail@plt>
    e13b:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    e142:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e146:	48 8b 40 08          	mov    0x8(%rax),%rax
    e14a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e14e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e152:	48 8b 40 10          	mov    0x10(%rax),%rax
    e156:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e15a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e15e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    e162:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e166:	48 89 ce             	mov    %rcx,%rsi
    e169:	48 89 c7             	mov    %rax,%rdi
    e16c:	e8 d4 d7 ff ff       	call   b945 <FindIdent>
    e171:	89 45 dc             	mov    %eax,-0x24(%rbp)
    e174:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e178:	8b 55 b0             	mov    -0x50(%rbp),%edx
    e17b:	89 d6                	mov    %edx,%esi
    e17d:	48 89 c7             	mov    %rax,%rdi
    e180:	e8 5e f1 ff ff       	call   d2e3 <set_hash_meta>
    e185:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
    e189:	75 38                	jne    e1c3 <semcheck_arrayaccess+0x148>
    e18b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e18f:	8b 10                	mov    (%rax),%edx
    e191:	48 8b 05 c8 2e 01 00 	mov    0x12ec8(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e198:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e19c:	48 8d 35 c5 c5 00 00 	lea    0xc5c5(%rip),%rsi        # 1a768 <__PRETTY_FUNCTION__.0+0x3a8>
    e1a3:	48 89 c7             	mov    %rax,%rdi
    e1a6:	b8 00 00 00 00       	mov    $0x0,%eax
    e1ab:	e8 20 42 ff ff       	call   23d0 <fprintf@plt>
    e1b0:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    e1b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e1b8:	c7 00 38 01 00 00    	movl   $0x138,(%rax)
    e1be:	e9 9c 00 00 00       	jmp    e25f <semcheck_arrayaccess+0x1e4>
    e1c3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e1c6:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    e1c9:	7e 4c                	jle    e217 <semcheck_arrayaccess+0x19c>
    e1cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e1cf:	8b 10                	mov    (%rax),%edx
    e1d1:	48 8b 05 88 2e 01 00 	mov    0x12e88(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e1d8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e1dc:	48 8d 35 b5 c5 00 00 	lea    0xc5b5(%rip),%rsi        # 1a798 <__PRETTY_FUNCTION__.0+0x3d8>
    e1e3:	48 89 c7             	mov    %rax,%rdi
    e1e6:	b8 00 00 00 00       	mov    $0x0,%eax
    e1eb:	e8 e0 41 ff ff       	call   23d0 <fprintf@plt>
    e1f0:	48 8b 05 69 2e 01 00 	mov    0x12e69(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e1f7:	48 89 c1             	mov    %rax,%rcx
    e1fa:	ba 30 00 00 00       	mov    $0x30,%edx
    e1ff:	be 01 00 00 00       	mov    $0x1,%esi
    e204:	48 8d 05 c5 c5 00 00 	lea    0xc5c5(%rip),%rax        # 1a7d0 <__PRETTY_FUNCTION__.0+0x410>
    e20b:	48 89 c7             	mov    %rax,%rdi
    e20e:	e8 7d 42 ff ff       	call   2490 <fwrite@plt>
    e213:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    e217:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e21b:	8b 40 08             	mov    0x8(%rax),%eax
    e21e:	83 f8 01             	cmp    $0x1,%eax
    e221:	74 29                	je     e24c <semcheck_arrayaccess+0x1d1>
    e223:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e227:	8b 10                	mov    (%rax),%edx
    e229:	48 8b 05 30 2e 01 00 	mov    0x12e30(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e230:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e234:	48 8d 35 35 c6 00 00 	lea    0xc635(%rip),%rsi        # 1a870 <__PRETTY_FUNCTION__.0+0x4b0>
    e23b:	48 89 c7             	mov    %rax,%rdi
    e23e:	b8 00 00 00 00       	mov    $0x0,%eax
    e243:	e8 88 41 ff ff       	call   23d0 <fprintf@plt>
    e248:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    e24c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e250:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e254:	48 89 d6             	mov    %rdx,%rsi
    e257:	48 89 c7             	mov    %rax,%rdi
    e25a:	e8 b9 f1 ff ff       	call   d418 <set_type_from_hashtype>
    e25f:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e262:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e266:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e26a:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    e26e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    e274:	48 89 c7             	mov    %rax,%rdi
    e277:	e8 10 f3 ff ff       	call   d58c <semcheck_expr_main>
    e27c:	01 45 d8             	add    %eax,-0x28(%rbp)
    e27f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e282:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    e287:	74 28                	je     e2b1 <semcheck_arrayaccess+0x236>
    e289:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e28d:	8b 10                	mov    (%rax),%edx
    e28f:	48 8b 05 ca 2d 01 00 	mov    0x12dca(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e296:	48 8d 0d 0b c6 00 00 	lea    0xc60b(%rip),%rcx        # 1a8a8 <__PRETTY_FUNCTION__.0+0x4e8>
    e29d:	48 89 ce             	mov    %rcx,%rsi
    e2a0:	48 89 c7             	mov    %rax,%rdi
    e2a3:	b8 00 00 00 00       	mov    $0x0,%eax
    e2a8:	e8 23 41 ff ff       	call   23d0 <fprintf@plt>
    e2ad:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    e2b1:	8b 45 d8             	mov    -0x28(%rbp),%eax
    e2b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e2b8:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e2bf:	00 00
    e2c1:	74 05                	je     e2c8 <semcheck_arrayaccess+0x24d>
    e2c3:	e8 68 40 ff ff       	call   2330 <__stack_chk_fail@plt>
    e2c8:	c9                   	leave
    e2c9:	c3                   	ret

000000000000e2ca <semcheck_funccall>:
    e2ca:	f3 0f 1e fa          	endbr64
    e2ce:	55                   	push   %rbp
    e2cf:	48 89 e5             	mov    %rsp,%rbp
    e2d2:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e2d6:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    e2da:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    e2de:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    e2e2:	89 4d 84             	mov    %ecx,-0x7c(%rbp)
    e2e5:	44 89 45 80          	mov    %r8d,-0x80(%rbp)
    e2e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e2f0:	00 00
    e2f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e2f6:	31 c0                	xor    %eax,%eax
    e2f8:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    e2ff:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    e306:	00
    e307:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e30e:	00
    e30f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    e314:	75 28                	jne    e33e <semcheck_funccall+0x74>
    e316:	48 8d 05 13 ca 00 00 	lea    0xca13(%rip),%rax        # 1ad30 <__PRETTY_FUNCTION__.0>
    e31d:	48 89 c1             	mov    %rax,%rcx
    e320:	ba c2 01 00 00       	mov    $0x1c2,%edx
    e325:	48 8d 05 b4 c0 00 00 	lea    0xc0b4(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e32c:	48 89 c6             	mov    %rax,%rsi
    e32f:	48 8d 05 1f c1 00 00 	lea    0xc11f(%rip),%rax        # 1a455 <__PRETTY_FUNCTION__.0+0x95>
    e336:	48 89 c7             	mov    %rax,%rdi
    e339:	e8 12 40 ff ff       	call   2350 <__assert_fail@plt>
    e33e:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    e343:	75 28                	jne    e36d <semcheck_funccall+0xa3>
    e345:	48 8d 05 e4 c9 00 00 	lea    0xc9e4(%rip),%rax        # 1ad30 <__PRETTY_FUNCTION__.0>
    e34c:	48 89 c1             	mov    %rax,%rcx
    e34f:	ba c3 01 00 00       	mov    $0x1c3,%edx
    e354:	48 8d 05 85 c0 00 00 	lea    0xc085(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e35b:	48 89 c6             	mov    %rax,%rsi
    e35e:	48 8d 05 ff c0 00 00 	lea    0xc0ff(%rip),%rax        # 1a464 <__PRETTY_FUNCTION__.0+0xa4>
    e365:	48 89 c7             	mov    %rax,%rdi
    e368:	e8 e3 3f ff ff       	call   2350 <__assert_fail@plt>
    e36d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e371:	8b 40 04             	mov    0x4(%rax),%eax
    e374:	83 f8 06             	cmp    $0x6,%eax
    e377:	74 28                	je     e3a1 <semcheck_funccall+0xd7>
    e379:	48 8d 05 b0 c9 00 00 	lea    0xc9b0(%rip),%rax        # 1ad30 <__PRETTY_FUNCTION__.0>
    e380:	48 89 c1             	mov    %rax,%rcx
    e383:	ba c4 01 00 00       	mov    $0x1c4,%edx
    e388:	48 8d 05 51 c0 00 00 	lea    0xc051(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e38f:	48 89 c6             	mov    %rax,%rsi
    e392:	48 8d 05 4f c5 00 00 	lea    0xc54f(%rip),%rax        # 1a8e8 <__PRETTY_FUNCTION__.0+0x528>
    e399:	48 89 c7             	mov    %rax,%rdi
    e39c:	e8 af 3f ff ff       	call   2350 <__assert_fail@plt>
    e3a1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e3a5:	48 8b 40 08          	mov    0x8(%rax),%rax
    e3a9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e3ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e3b1:	48 8b 40 10          	mov    0x10(%rax),%rax
    e3b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e3b9:	48 8b 05 a0 2c 01 00 	mov    0x12ca0(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e3c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3c4:	48 8d 0d 45 c5 00 00 	lea    0xc545(%rip),%rcx        # 1a910 <__PRETTY_FUNCTION__.0+0x550>
    e3cb:	48 89 ce             	mov    %rcx,%rsi
    e3ce:	48 89 c7             	mov    %rax,%rdi
    e3d1:	b8 00 00 00 00       	mov    $0x0,%eax
    e3d6:	e8 f5 3f ff ff       	call   23d0 <fprintf@plt>
    e3db:	48 8b 05 7e 2c 01 00 	mov    0x12c7e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e3e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3e6:	48 8d 0d 53 c5 00 00 	lea    0xc553(%rip),%rcx        # 1a940 <__PRETTY_FUNCTION__.0+0x580>
    e3ed:	48 89 ce             	mov    %rcx,%rsi
    e3f0:	48 89 c7             	mov    %rax,%rdi
    e3f3:	b8 00 00 00 00       	mov    $0x0,%eax
    e3f8:	e8 d3 3f ff ff       	call   23d0 <fprintf@plt>
    e3fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e401:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    e405:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e409:	48 89 ce             	mov    %rcx,%rsi
    e40c:	48 89 c7             	mov    %rax,%rdi
    e40f:	e8 31 d5 ff ff       	call   b945 <FindIdent>
    e414:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    e417:	48 8b 05 42 2c 01 00 	mov    0x12c42(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e41e:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    e421:	48 8d 0d 42 c5 00 00 	lea    0xc542(%rip),%rcx        # 1a96a <__PRETTY_FUNCTION__.0+0x5aa>
    e428:	48 89 ce             	mov    %rcx,%rsi
    e42b:	48 89 c7             	mov    %rax,%rdi
    e42e:	b8 00 00 00 00       	mov    $0x0,%eax
    e433:	e8 98 3f ff ff       	call   23d0 <fprintf@plt>
    e438:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
    e43c:	74 20                	je     e45e <semcheck_funccall+0x194>
    e43e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e442:	8b 40 08             	mov    0x8(%rax),%eax
    e445:	83 f8 03             	cmp    $0x3,%eax
    e448:	0f 84 aa 00 00 00    	je     e4f8 <semcheck_funccall+0x22e>
    e44e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e452:	8b 40 08             	mov    0x8(%rax),%eax
    e455:	83 f8 04             	cmp    $0x4,%eax
    e458:	0f 84 9a 00 00 00    	je     e4f8 <semcheck_funccall+0x22e>
    e45e:	48 8b 05 fb 2b 01 00 	mov    0x12bfb(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e465:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e469:	48 8d 0d 18 c5 00 00 	lea    0xc518(%rip),%rcx        # 1a988 <__PRETTY_FUNCTION__.0+0x5c8>
    e470:	48 89 ce             	mov    %rcx,%rsi
    e473:	48 89 c7             	mov    %rax,%rdi
    e476:	b8 00 00 00 00       	mov    $0x0,%eax
    e47b:	e8 50 3f ff ff       	call   23d0 <fprintf@plt>
    e480:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
    e483:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    e487:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    e48b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e48f:	48 89 c7             	mov    %rax,%rdi
    e492:	e8 a9 dd ff ff       	call   c240 <MangleFunctionNameFromCallSite>
    e497:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e49b:	48 8b 05 be 2b 01 00 	mov    0x12bbe(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e4a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e4a6:	48 8d 0d 03 c5 00 00 	lea    0xc503(%rip),%rcx        # 1a9b0 <__PRETTY_FUNCTION__.0+0x5f0>
    e4ad:	48 89 ce             	mov    %rcx,%rsi
    e4b0:	48 89 c7             	mov    %rax,%rdi
    e4b3:	b8 00 00 00 00       	mov    $0x0,%eax
    e4b8:	e8 13 3f ff ff       	call   23d0 <fprintf@plt>
    e4bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e4c1:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    e4c5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e4c9:	48 89 ce             	mov    %rcx,%rsi
    e4cc:	48 89 c7             	mov    %rax,%rdi
    e4cf:	e8 71 d4 ff ff       	call   b945 <FindIdent>
    e4d4:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    e4d7:	48 8b 05 82 2b 01 00 	mov    0x12b82(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e4de:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    e4e1:	48 8d 0d e8 c4 00 00 	lea    0xc4e8(%rip),%rcx        # 1a9d0 <__PRETTY_FUNCTION__.0+0x610>
    e4e8:	48 89 ce             	mov    %rcx,%rsi
    e4eb:	48 89 c7             	mov    %rax,%rdi
    e4ee:	b8 00 00 00 00       	mov    $0x0,%eax
    e4f3:	e8 d8 3e ff ff       	call   23d0 <fprintf@plt>
    e4f8:	83 7d b4 ff          	cmpl   $0xffffffff,-0x4c(%rbp)
    e4fc:	75 4b                	jne    e549 <semcheck_funccall+0x27f>
    e4fe:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e502:	8b 10                	mov    (%rax),%edx
    e504:	48 8b 05 55 2b 01 00 	mov    0x12b55(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e50b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e50f:	48 8d 35 ea c4 00 00 	lea    0xc4ea(%rip),%rsi        # 1aa00 <__PRETTY_FUNCTION__.0+0x640>
    e516:	48 89 c7             	mov    %rax,%rdi
    e519:	b8 00 00 00 00       	mov    $0x0,%eax
    e51e:	e8 ad 3e ff ff       	call   23d0 <fprintf@plt>
    e523:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e528:	74 0c                	je     e536 <semcheck_funccall+0x26c>
    e52a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e52e:	48 89 c7             	mov    %rax,%rdi
    e531:	e8 5a 3d ff ff       	call   2290 <free@plt>
    e536:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    e53a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    e53e:	c7 00 38 01 00 00    	movl   $0x138,(%rax)
    e544:	e9 ee 02 00 00       	jmp    e837 <semcheck_funccall+0x56d>
    e549:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e54d:	48 8b 10             	mov    (%rax),%rdx
    e550:	48 8b 05 09 2b 01 00 	mov    0x12b09(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e557:	48 8d 0d fd c4 00 00 	lea    0xc4fd(%rip),%rcx        # 1aa5b <__PRETTY_FUNCTION__.0+0x69b>
    e55e:	48 89 ce             	mov    %rcx,%rsi
    e561:	48 89 c7             	mov    %rax,%rdi
    e564:	b8 00 00 00 00       	mov    $0x0,%eax
    e569:	e8 62 3e ff ff       	call   23d0 <fprintf@plt>
    e56e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e573:	74 3f                	je     e5b4 <semcheck_funccall+0x2ea>
    e575:	48 8b 05 e4 2a 01 00 	mov    0x12ae4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e57c:	48 89 c1             	mov    %rax,%rcx
    e57f:	ba 2d 00 00 00       	mov    $0x2d,%edx
    e584:	be 01 00 00 00       	mov    $0x1,%esi
    e589:	48 8d 05 e8 c4 00 00 	lea    0xc4e8(%rip),%rax        # 1aa78 <__PRETTY_FUNCTION__.0+0x6b8>
    e590:	48 89 c7             	mov    %rax,%rdi
    e593:	e8 f8 3e ff ff       	call   2490 <fwrite@plt>
    e598:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e59c:	48 8b 40 08          	mov    0x8(%rax),%rax
    e5a0:	48 89 c7             	mov    %rax,%rdi
    e5a3:	e8 e8 3c ff ff       	call   2290 <free@plt>
    e5a8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e5ac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e5b0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e5b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e5b8:	8b 55 80             	mov    -0x80(%rbp),%edx
    e5bb:	89 d6                	mov    %edx,%esi
    e5bd:	48 89 c7             	mov    %rax,%rdi
    e5c0:	e8 1e ed ff ff       	call   d2e3 <set_hash_meta>
    e5c5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    e5c8:	3b 45 84             	cmp    -0x7c(%rbp),%eax
    e5cb:	7e 2d                	jle    e5fa <semcheck_funccall+0x330>
    e5cd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e5d1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e5d5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e5d9:	8b 10                	mov    (%rax),%edx
    e5db:	48 8b 05 7e 2a 01 00 	mov    0x12a7e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e5e2:	48 8d 35 bf c4 00 00 	lea    0xc4bf(%rip),%rsi        # 1aaa8 <__PRETTY_FUNCTION__.0+0x6e8>
    e5e9:	48 89 c7             	mov    %rax,%rdi
    e5ec:	b8 00 00 00 00       	mov    $0x0,%eax
    e5f1:	e8 da 3d ff ff       	call   23d0 <fprintf@plt>
    e5f6:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    e5fa:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e5fe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    e602:	48 89 d6             	mov    %rdx,%rsi
    e605:	48 89 c7             	mov    %rax,%rdi
    e608:	e8 0b ee ff ff       	call   d418 <set_type_from_hashtype>
    e60d:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    e614:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e618:	48 8b 40 10          	mov    0x10(%rax),%rax
    e61c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e620:	e9 88 01 00 00       	jmp    e7ad <semcheck_funccall+0x4e3>
    e625:	83 45 b8 01          	addl   $0x1,-0x48(%rbp)
    e629:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e62d:	8b 00                	mov    (%rax),%eax
    e62f:	83 f8 02             	cmp    $0x2,%eax
    e632:	74 28                	je     e65c <semcheck_funccall+0x392>
    e634:	48 8d 05 f5 c6 00 00 	lea    0xc6f5(%rip),%rax        # 1ad30 <__PRETTY_FUNCTION__.0>
    e63b:	48 89 c1             	mov    %rax,%rcx
    e63e:	ba fe 01 00 00       	mov    $0x1fe,%edx
    e643:	48 8d 05 96 bd 00 00 	lea    0xbd96(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e64a:	48 89 c6             	mov    %rax,%rsi
    e64d:	48 8d 05 92 c4 00 00 	lea    0xc492(%rip),%rax        # 1aae6 <__PRETTY_FUNCTION__.0+0x726>
    e654:	48 89 c7             	mov    %rax,%rdi
    e657:	e8 f4 3c ff ff       	call   2350 <__assert_fail@plt>
    e65c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e660:	8b 00                	mov    (%rax),%eax
    e662:	85 c0                	test   %eax,%eax
    e664:	74 28                	je     e68e <semcheck_funccall+0x3c4>
    e666:	48 8d 05 c3 c6 00 00 	lea    0xc6c3(%rip),%rax        # 1ad30 <__PRETTY_FUNCTION__.0>
    e66d:	48 89 c1             	mov    %rax,%rcx
    e670:	ba ff 01 00 00       	mov    $0x1ff,%edx
    e675:	48 8d 05 64 bd 00 00 	lea    0xbd64(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e67c:	48 89 c6             	mov    %rax,%rsi
    e67f:	48 8d 05 7e c4 00 00 	lea    0xc47e(%rip),%rax        # 1ab04 <__PRETTY_FUNCTION__.0+0x744>
    e686:	48 89 c7             	mov    %rax,%rdi
    e689:	e8 c2 3c ff ff       	call   2350 <__assert_fail@plt>
    e68e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e692:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e696:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
    e699:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    e69d:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
    e6a1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    e6a7:	48 89 c7             	mov    %rax,%rdi
    e6aa:	e8 dd ee ff ff       	call   d58c <semcheck_expr_main>
    e6af:	01 45 b0             	add    %eax,-0x50(%rbp)
    e6b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6b6:	48 8b 40 08          	mov    0x8(%rax),%rax
    e6ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e6be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e6c2:	8b 40 04             	mov    0x4(%rax),%eax
    e6c5:	83 f8 02             	cmp    $0x2,%eax
    e6c8:	74 28                	je     e6f2 <semcheck_funccall+0x428>
    e6ca:	48 8d 05 5f c6 00 00 	lea    0xc65f(%rip),%rax        # 1ad30 <__PRETTY_FUNCTION__.0>
    e6d1:	48 89 c1             	mov    %rax,%rcx
    e6d4:	ba 03 02 00 00       	mov    $0x203,%edx
    e6d9:	48 8d 05 00 bd 00 00 	lea    0xbd00(%rip),%rax        # 1a3e0 <__PRETTY_FUNCTION__.0+0x20>
    e6e0:	48 89 c6             	mov    %rax,%rsi
    e6e3:	48 8d 05 3e c4 00 00 	lea    0xc43e(%rip),%rax        # 1ab28 <__PRETTY_FUNCTION__.0+0x768>
    e6ea:	48 89 c7             	mov    %rax,%rdi
    e6ed:	e8 5e 3c ff ff       	call   2350 <__assert_fail@plt>
    e6f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e6f6:	48 8b 40 08          	mov    0x8(%rax),%rax
    e6fa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e6fe:	e9 8c 00 00 00       	jmp    e78f <semcheck_funccall+0x4c5>
    e703:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e707:	8b 40 10             	mov    0x10(%rax),%eax
    e70a:	89 45 bc             	mov    %eax,-0x44(%rbp)
    e70d:	8b 45 ac             	mov    -0x54(%rbp),%eax
    e710:	39 45 bc             	cmp    %eax,-0x44(%rbp)
    e713:	74 62                	je     e777 <semcheck_funccall+0x4ad>
    e715:	81 7d bc 36 01 00 00 	cmpl   $0x136,-0x44(%rbp)
    e71c:	74 59                	je     e777 <semcheck_funccall+0x4ad>
    e71e:	8b 45 ac             	mov    -0x54(%rbp),%eax
    e721:	3d 0a 01 00 00       	cmp    $0x10a,%eax
    e726:	75 09                	jne    e731 <semcheck_funccall+0x467>
    e728:	81 7d bc 0c 01 00 00 	cmpl   $0x10c,-0x44(%rbp)
    e72f:	74 46                	je     e777 <semcheck_funccall+0x4ad>
    e731:	8b 45 ac             	mov    -0x54(%rbp),%eax
    e734:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    e739:	75 09                	jne    e744 <semcheck_funccall+0x47a>
    e73b:	81 7d bc 0a 01 00 00 	cmpl   $0x10a,-0x44(%rbp)
    e742:	74 33                	je     e777 <semcheck_funccall+0x4ad>
    e744:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e748:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e74c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e750:	8b 10                	mov    (%rax),%edx
    e752:	48 8b 05 07 29 01 00 	mov    0x12907(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e759:	8b 75 b8             	mov    -0x48(%rbp),%esi
    e75c:	41 89 f0             	mov    %esi,%r8d
    e75f:	48 8d 35 e2 c3 00 00 	lea    0xc3e2(%rip),%rsi        # 1ab48 <__PRETTY_FUNCTION__.0+0x788>
    e766:	48 89 c7             	mov    %rax,%rdi
    e769:	b8 00 00 00 00       	mov    $0x0,%eax
    e76e:	e8 5d 3c ff ff       	call   23d0 <fprintf@plt>
    e773:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    e777:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e77b:	48 8b 40 10          	mov    0x10(%rax),%rax
    e77f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e783:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e787:	48 8b 40 10          	mov    0x10(%rax),%rax
    e78b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e78f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e794:	74 0b                	je     e7a1 <semcheck_funccall+0x4d7>
    e796:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e79b:	0f 85 62 ff ff ff    	jne    e703 <semcheck_funccall+0x439>
    e7a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e7a5:	48 8b 40 10          	mov    0x10(%rax),%rax
    e7a9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e7ad:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e7b2:	74 0b                	je     e7bf <semcheck_funccall+0x4f5>
    e7b4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e7b9:	0f 85 66 fe ff ff    	jne    e625 <semcheck_funccall+0x35b>
    e7bf:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e7c4:	75 36                	jne    e7fc <semcheck_funccall+0x532>
    e7c6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e7cb:	74 2f                	je     e7fc <semcheck_funccall+0x532>
    e7cd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e7d1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e7d5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e7d9:	8b 10                	mov    (%rax),%edx
    e7db:	48 8b 05 7e 28 01 00 	mov    0x1287e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e7e2:	48 8d 35 a7 c3 00 00 	lea    0xc3a7(%rip),%rsi        # 1ab90 <__PRETTY_FUNCTION__.0+0x7d0>
    e7e9:	48 89 c7             	mov    %rax,%rdi
    e7ec:	b8 00 00 00 00       	mov    $0x0,%eax
    e7f1:	e8 da 3b ff ff       	call   23d0 <fprintf@plt>
    e7f6:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    e7fa:	eb 3b                	jmp    e837 <semcheck_funccall+0x56d>
    e7fc:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e801:	74 34                	je     e837 <semcheck_funccall+0x56d>
    e803:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e808:	75 2d                	jne    e837 <semcheck_funccall+0x56d>
    e80a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e80e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e812:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e816:	8b 10                	mov    (%rax),%edx
    e818:	48 8b 05 41 28 01 00 	mov    0x12841(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e81f:	48 8d 35 b2 c3 00 00 	lea    0xc3b2(%rip),%rsi        # 1abd8 <__PRETTY_FUNCTION__.0+0x818>
    e826:	48 89 c7             	mov    %rax,%rdi
    e829:	b8 00 00 00 00       	mov    $0x0,%eax
    e82e:	e8 9d 3b ff ff       	call   23d0 <fprintf@plt>
    e833:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    e837:	48 8b 05 22 28 01 00 	mov    0x12822(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    e83e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e842:	48 8d 0d d7 c3 00 00 	lea    0xc3d7(%rip),%rcx        # 1ac20 <__PRETTY_FUNCTION__.0+0x860>
    e849:	48 89 ce             	mov    %rcx,%rsi
    e84c:	48 89 c7             	mov    %rax,%rdi
    e84f:	b8 00 00 00 00       	mov    $0x0,%eax
    e854:	e8 77 3b ff ff       	call   23d0 <fprintf@plt>
    e859:	8b 45 b0             	mov    -0x50(%rbp),%eax
    e85c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e860:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e867:	00 00
    e869:	74 05                	je     e870 <semcheck_funccall+0x5a6>
    e86b:	e8 c0 3a ff ff       	call   2330 <__stack_chk_fail@plt>
    e870:	c9                   	leave
    e871:	c3                   	ret

000000000000e872 <gen_label>:
    e872:	f3 0f 1e fa          	endbr64
    e876:	55                   	push   %rbp
    e877:	48 89 e5             	mov    %rsp,%rbp
    e87a:	48 83 ec 10          	sub    $0x10,%rsp
    e87e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e882:	89 75 f4             	mov    %esi,-0xc(%rbp)
    e885:	8b 05 85 27 01 00    	mov    0x12785(%rip),%eax        # 21010 <label_counter>
    e88b:	83 c0 01             	add    $0x1,%eax
    e88e:	89 05 7c 27 01 00    	mov    %eax,0x1277c(%rip)        # 21010 <label_counter>
    e894:	8b 15 76 27 01 00    	mov    0x12776(%rip),%edx        # 21010 <label_counter>
    e89a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    e89d:	48 63 f0             	movslq %eax,%rsi
    e8a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8a4:	89 d1                	mov    %edx,%ecx
    e8a6:	48 8d 15 a3 c4 00 00 	lea    0xc4a3(%rip),%rdx        # 1ad50 <__PRETTY_FUNCTION__.0+0x20>
    e8ad:	48 89 c7             	mov    %rax,%rdi
    e8b0:	b8 00 00 00 00       	mov    $0x0,%eax
    e8b5:	e8 86 3a ff ff       	call   2340 <snprintf@plt>
    e8ba:	90                   	nop
    e8bb:	c9                   	leave
    e8bc:	c3                   	ret

000000000000e8bd <add_inst>:
    e8bd:	f3 0f 1e fa          	endbr64
    e8c1:	55                   	push   %rbp
    e8c2:	48 89 e5             	mov    %rsp,%rbp
    e8c5:	48 83 ec 20          	sub    $0x20,%rsp
    e8c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e8cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e8d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e8d5:	48 89 c7             	mov    %rax,%rdi
    e8d8:	e8 c3 3b ff ff       	call   24a0 <strdup@plt>
    e8dd:	be 03 00 00 00       	mov    $0x3,%esi
    e8e2:	48 89 c7             	mov    %rax,%rdi
    e8e5:	e8 5d 91 ff ff       	call   7a47 <CreateListNode>
    e8ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e8ee:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e8f3:	75 0a                	jne    e8ff <add_inst+0x42>
    e8f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e8fd:	eb 13                	jmp    e912 <add_inst+0x55>
    e8ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e903:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e907:	48 89 d6             	mov    %rdx,%rsi
    e90a:	48 89 c7             	mov    %rax,%rdi
    e90d:	e8 01 92 ff ff       	call   7b13 <PushListNodeBack>
    e912:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e916:	c9                   	leave
    e917:	c3                   	ret

000000000000e918 <free_inst_list>:
    e918:	f3 0f 1e fa          	endbr64
    e91c:	55                   	push   %rbp
    e91d:	48 89 e5             	mov    %rsp,%rbp
    e920:	48 83 ec 20          	sub    $0x20,%rsp
    e924:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e92c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e930:	eb 1c                	jmp    e94e <free_inst_list+0x36>
    e932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e936:	48 8b 40 08          	mov    0x8(%rax),%rax
    e93a:	48 89 c7             	mov    %rax,%rdi
    e93d:	e8 4e 39 ff ff       	call   2290 <free@plt>
    e942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e946:	48 8b 40 10          	mov    0x10(%rax),%rax
    e94a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e94e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e953:	75 dd                	jne    e932 <free_inst_list+0x1a>
    e955:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e959:	48 89 c7             	mov    %rax,%rdi
    e95c:	e8 81 93 ff ff       	call   7ce2 <DestroyList>
    e961:	90                   	nop
    e962:	c9                   	leave
    e963:	c3                   	ret

000000000000e964 <gencode_jmp>:
    e964:	f3 0f 1e fa          	endbr64
    e968:	55                   	push   %rbp
    e969:	48 89 e5             	mov    %rsp,%rbp
    e96c:	48 83 ec 60          	sub    $0x60,%rsp
    e970:	89 7d bc             	mov    %edi,-0x44(%rbp)
    e973:	89 75 b8             	mov    %esi,-0x48(%rbp)
    e976:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    e97a:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    e97e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e985:	00 00
    e987:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e98b:	31 c0                	xor    %eax,%eax
    e98d:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    e991:	0f 84 0e 02 00 00    	je     eba5 <gencode_jmp+0x241>
    e997:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    e99b:	0f 8c 23 02 00 00    	jl     ebc4 <gencode_jmp+0x260>
    e9a1:	81 7d bc 2a 01 00 00 	cmpl   $0x12a,-0x44(%rbp)
    e9a8:	0f 8f 16 02 00 00    	jg     ebc4 <gencode_jmp+0x260>
    e9ae:	81 7d bc 25 01 00 00 	cmpl   $0x125,-0x44(%rbp)
    e9b5:	0f 8c 09 02 00 00    	jl     ebc4 <gencode_jmp+0x260>
    e9bb:	8b 45 bc             	mov    -0x44(%rbp),%eax
    e9be:	2d 25 01 00 00       	sub    $0x125,%eax
    e9c3:	83 f8 05             	cmp    $0x5,%eax
    e9c6:	0f 87 f8 01 00 00    	ja     ebc4 <gencode_jmp+0x260>
    e9cc:	89 c0                	mov    %eax,%eax
    e9ce:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    e9d5:	00
    e9d6:	48 8d 05 cf c3 00 00 	lea    0xc3cf(%rip),%rax        # 1adac <__PRETTY_FUNCTION__.0+0x7c>
    e9dd:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    e9e0:	48 98                	cltq
    e9e2:	48 8d 15 c3 c3 00 00 	lea    0xc3c3(%rip),%rdx        # 1adac <__PRETTY_FUNCTION__.0+0x7c>
    e9e9:	48 01 d0             	add    %rdx,%rax
    e9ec:	3e ff e0             	notrack jmp *%rax
    e9ef:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    e9f3:	7e 22                	jle    ea17 <gencode_jmp+0xb3>
    e9f5:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    e9f9:	48 8d 15 55 c3 00 00 	lea    0xc355(%rip),%rdx        # 1ad55 <__PRETTY_FUNCTION__.0+0x25>
    ea00:	be 06 00 00 00       	mov    $0x6,%esi
    ea05:	48 89 c7             	mov    %rax,%rdi
    ea08:	b8 00 00 00 00       	mov    $0x0,%eax
    ea0d:	e8 2e 39 ff ff       	call   2340 <snprintf@plt>
    ea12:	e9 da 01 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    ea17:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    ea1b:	48 8d 15 37 c3 00 00 	lea    0xc337(%rip),%rdx        # 1ad59 <__PRETTY_FUNCTION__.0+0x29>
    ea22:	be 06 00 00 00       	mov    $0x6,%esi
    ea27:	48 89 c7             	mov    %rax,%rdi
    ea2a:	b8 00 00 00 00       	mov    $0x0,%eax
    ea2f:	e8 0c 39 ff ff       	call   2340 <snprintf@plt>
    ea34:	e9 b8 01 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    ea39:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    ea3d:	7e 22                	jle    ea61 <gencode_jmp+0xfd>
    ea3f:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    ea43:	48 8d 15 0f c3 00 00 	lea    0xc30f(%rip),%rdx        # 1ad59 <__PRETTY_FUNCTION__.0+0x29>
    ea4a:	be 06 00 00 00       	mov    $0x6,%esi
    ea4f:	48 89 c7             	mov    %rax,%rdi
    ea52:	b8 00 00 00 00       	mov    $0x0,%eax
    ea57:	e8 e4 38 ff ff       	call   2340 <snprintf@plt>
    ea5c:	e9 90 01 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    ea61:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    ea65:	48 8d 15 e9 c2 00 00 	lea    0xc2e9(%rip),%rdx        # 1ad55 <__PRETTY_FUNCTION__.0+0x25>
    ea6c:	be 06 00 00 00       	mov    $0x6,%esi
    ea71:	48 89 c7             	mov    %rax,%rdi
    ea74:	b8 00 00 00 00       	mov    $0x0,%eax
    ea79:	e8 c2 38 ff ff       	call   2340 <snprintf@plt>
    ea7e:	e9 6e 01 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    ea83:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    ea87:	7e 22                	jle    eaab <gencode_jmp+0x147>
    ea89:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    ea8d:	48 8d 15 c8 c2 00 00 	lea    0xc2c8(%rip),%rdx        # 1ad5c <__PRETTY_FUNCTION__.0+0x2c>
    ea94:	be 06 00 00 00       	mov    $0x6,%esi
    ea99:	48 89 c7             	mov    %rax,%rdi
    ea9c:	b8 00 00 00 00       	mov    $0x0,%eax
    eaa1:	e8 9a 38 ff ff       	call   2340 <snprintf@plt>
    eaa6:	e9 46 01 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    eaab:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eaaf:	48 8d 15 aa c2 00 00 	lea    0xc2aa(%rip),%rdx        # 1ad60 <__PRETTY_FUNCTION__.0+0x30>
    eab6:	be 06 00 00 00       	mov    $0x6,%esi
    eabb:	48 89 c7             	mov    %rax,%rdi
    eabe:	b8 00 00 00 00       	mov    $0x0,%eax
    eac3:	e8 78 38 ff ff       	call   2340 <snprintf@plt>
    eac8:	e9 24 01 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    eacd:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    ead1:	7e 22                	jle    eaf5 <gencode_jmp+0x191>
    ead3:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    ead7:	48 8d 15 85 c2 00 00 	lea    0xc285(%rip),%rdx        # 1ad63 <__PRETTY_FUNCTION__.0+0x33>
    eade:	be 06 00 00 00       	mov    $0x6,%esi
    eae3:	48 89 c7             	mov    %rax,%rdi
    eae6:	b8 00 00 00 00       	mov    $0x0,%eax
    eaeb:	e8 50 38 ff ff       	call   2340 <snprintf@plt>
    eaf0:	e9 fc 00 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    eaf5:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eaf9:	48 8d 15 66 c2 00 00 	lea    0xc266(%rip),%rdx        # 1ad66 <__PRETTY_FUNCTION__.0+0x36>
    eb00:	be 06 00 00 00       	mov    $0x6,%esi
    eb05:	48 89 c7             	mov    %rax,%rdi
    eb08:	b8 00 00 00 00       	mov    $0x0,%eax
    eb0d:	e8 2e 38 ff ff       	call   2340 <snprintf@plt>
    eb12:	e9 da 00 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    eb17:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    eb1b:	7e 22                	jle    eb3f <gencode_jmp+0x1db>
    eb1d:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eb21:	48 8d 15 3e c2 00 00 	lea    0xc23e(%rip),%rdx        # 1ad66 <__PRETTY_FUNCTION__.0+0x36>
    eb28:	be 06 00 00 00       	mov    $0x6,%esi
    eb2d:	48 89 c7             	mov    %rax,%rdi
    eb30:	b8 00 00 00 00       	mov    $0x0,%eax
    eb35:	e8 06 38 ff ff       	call   2340 <snprintf@plt>
    eb3a:	e9 b2 00 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    eb3f:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eb43:	48 8d 15 19 c2 00 00 	lea    0xc219(%rip),%rdx        # 1ad63 <__PRETTY_FUNCTION__.0+0x33>
    eb4a:	be 06 00 00 00       	mov    $0x6,%esi
    eb4f:	48 89 c7             	mov    %rax,%rdi
    eb52:	b8 00 00 00 00       	mov    $0x0,%eax
    eb57:	e8 e4 37 ff ff       	call   2340 <snprintf@plt>
    eb5c:	e9 90 00 00 00       	jmp    ebf1 <gencode_jmp+0x28d>
    eb61:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    eb65:	7e 1f                	jle    eb86 <gencode_jmp+0x222>
    eb67:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eb6b:	48 8d 15 ee c1 00 00 	lea    0xc1ee(%rip),%rdx        # 1ad60 <__PRETTY_FUNCTION__.0+0x30>
    eb72:	be 06 00 00 00       	mov    $0x6,%esi
    eb77:	48 89 c7             	mov    %rax,%rdi
    eb7a:	b8 00 00 00 00       	mov    $0x0,%eax
    eb7f:	e8 bc 37 ff ff       	call   2340 <snprintf@plt>
    eb84:	eb 6b                	jmp    ebf1 <gencode_jmp+0x28d>
    eb86:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eb8a:	48 8d 15 cb c1 00 00 	lea    0xc1cb(%rip),%rdx        # 1ad5c <__PRETTY_FUNCTION__.0+0x2c>
    eb91:	be 06 00 00 00       	mov    $0x6,%esi
    eb96:	48 89 c7             	mov    %rax,%rdi
    eb99:	b8 00 00 00 00       	mov    $0x0,%eax
    eb9e:	e8 9d 37 ff ff       	call   2340 <snprintf@plt>
    eba3:	eb 4c                	jmp    ebf1 <gencode_jmp+0x28d>
    eba5:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    eba9:	48 8d 15 ba c1 00 00 	lea    0xc1ba(%rip),%rdx        # 1ad6a <__PRETTY_FUNCTION__.0+0x3a>
    ebb0:	be 06 00 00 00       	mov    $0x6,%esi
    ebb5:	48 89 c7             	mov    %rax,%rdi
    ebb8:	b8 00 00 00 00       	mov    $0x0,%eax
    ebbd:	e8 7e 37 ff ff       	call   2340 <snprintf@plt>
    ebc2:	eb 2d                	jmp    ebf1 <gencode_jmp+0x28d>
    ebc4:	48 8b 05 95 24 01 00 	mov    0x12495(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ebcb:	48 89 c1             	mov    %rax,%rcx
    ebce:	ba 32 00 00 00       	mov    $0x32,%edx
    ebd3:	be 01 00 00 00       	mov    $0x1,%esi
    ebd8:	48 8d 05 91 c1 00 00 	lea    0xc191(%rip),%rax        # 1ad70 <__PRETTY_FUNCTION__.0+0x40>
    ebdf:	48 89 c7             	mov    %rax,%rdi
    ebe2:	e8 a9 38 ff ff       	call   2490 <fwrite@plt>
    ebe7:	bf 01 00 00 00       	mov    $0x1,%edi
    ebec:	e8 8f 38 ff ff       	call   2480 <exit@plt>
    ebf1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    ebf5:	48 8d 55 ca          	lea    -0x36(%rbp),%rdx
    ebf9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ebfd:	49 89 c8             	mov    %rcx,%r8
    ec00:	48 89 d1             	mov    %rdx,%rcx
    ec03:	48 8d 15 99 c1 00 00 	lea    0xc199(%rip),%rdx        # 1ada3 <__PRETTY_FUNCTION__.0+0x73>
    ec0a:	be 1e 00 00 00       	mov    $0x1e,%esi
    ec0f:	48 89 c7             	mov    %rax,%rdi
    ec12:	b8 00 00 00 00       	mov    $0x0,%eax
    ec17:	e8 24 37 ff ff       	call   2340 <snprintf@plt>
    ec1c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ec20:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ec24:	48 89 d6             	mov    %rdx,%rsi
    ec27:	48 89 c7             	mov    %rax,%rdi
    ec2a:	e8 8e fc ff ff       	call   e8bd <add_inst>
    ec2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ec33:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ec3a:	00 00
    ec3c:	74 05                	je     ec43 <gencode_jmp+0x2df>
    ec3e:	e8 ed 36 ff ff       	call   2330 <__stack_chk_fail@plt>
    ec43:	c9                   	leave
    ec44:	c3                   	ret

000000000000ec45 <codegen_function_header>:
    ec45:	f3 0f 1e fa          	endbr64
    ec49:	55                   	push   %rbp
    ec4a:	48 89 e5             	mov    %rsp,%rbp
    ec4d:	48 83 ec 10          	sub    $0x10,%rsp
    ec51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ec5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec61:	48 8d 0d 5c c1 00 00 	lea    0xc15c(%rip),%rcx        # 1adc4 <__PRETTY_FUNCTION__.0+0x94>
    ec68:	48 89 ce             	mov    %rcx,%rsi
    ec6b:	48 89 c7             	mov    %rax,%rdi
    ec6e:	b8 00 00 00 00       	mov    $0x0,%eax
    ec73:	e8 58 37 ff ff       	call   23d0 <fprintf@plt>
    ec78:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ec7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec80:	48 8d 0d 49 c1 00 00 	lea    0xc149(%rip),%rcx        # 1add0 <__PRETTY_FUNCTION__.0+0xa0>
    ec87:	48 89 ce             	mov    %rcx,%rsi
    ec8a:	48 89 c7             	mov    %rax,%rdi
    ec8d:	b8 00 00 00 00       	mov    $0x0,%eax
    ec92:	e8 39 37 ff ff       	call   23d0 <fprintf@plt>
    ec97:	90                   	nop
    ec98:	c9                   	leave
    ec99:	c3                   	ret

000000000000ec9a <codegen_function_footer>:
    ec9a:	f3 0f 1e fa          	endbr64
    ec9e:	55                   	push   %rbp
    ec9f:	48 89 e5             	mov    %rsp,%rbp
    eca2:	48 83 ec 10          	sub    $0x10,%rsp
    eca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ecae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ecb2:	48 89 c1             	mov    %rax,%rcx
    ecb5:	ba 11 00 00 00       	mov    $0x11,%edx
    ecba:	be 01 00 00 00       	mov    $0x1,%esi
    ecbf:	48 8d 05 2f c1 00 00 	lea    0xc12f(%rip),%rax        # 1adf5 <__PRETTY_FUNCTION__.0+0xc5>
    ecc6:	48 89 c7             	mov    %rax,%rdi
    ecc9:	e8 c2 37 ff ff       	call   2490 <fwrite@plt>
    ecce:	90                   	nop
    eccf:	c9                   	leave
    ecd0:	c3                   	ret

000000000000ecd1 <codegen>:
    ecd1:	f3 0f 1e fa          	endbr64
    ecd5:	55                   	push   %rbp
    ecd6:	48 89 e5             	mov    %rsp,%rbp
    ecd9:	48 83 ec 30          	sub    $0x30,%rsp
    ecdd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ece1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ece5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ece9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eced:	48 8d 15 13 c1 00 00 	lea    0xc113(%rip),%rdx        # 1ae07 <__PRETTY_FUNCTION__.0+0xd7>
    ecf4:	48 89 d6             	mov    %rdx,%rsi
    ecf7:	48 89 c7             	mov    %rax,%rdi
    ecfa:	e8 41 37 ff ff       	call   2440 <fopen@plt>
    ecff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ed03:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ed08:	75 2c                	jne    ed36 <codegen+0x65>
    ed0a:	48 8b 05 4f 23 01 00 	mov    0x1234f(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    ed11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ed15:	48 8d 0d f4 c0 00 00 	lea    0xc0f4(%rip),%rcx        # 1ae10 <__PRETTY_FUNCTION__.0+0xe0>
    ed1c:	48 89 ce             	mov    %rcx,%rsi
    ed1f:	48 89 c7             	mov    %rax,%rdi
    ed22:	b8 00 00 00 00       	mov    $0x0,%eax
    ed27:	e8 a4 36 ff ff       	call   23d0 <fprintf@plt>
    ed2c:	bf 01 00 00 00       	mov    $0x1,%edi
    ed31:	e8 4a 37 ff ff       	call   2480 <exit@plt>
    ed36:	c7 05 d0 22 01 00 01 	movl   $0x1,0x122d0(%rip)        # 21010 <label_counter>
    ed3d:	00 00 00
    ed40:	b8 00 00 00 00       	mov    $0x0,%eax
    ed45:	e8 dc 34 00 00       	call   12226 <init_stackmng>
    ed4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ed4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ed52:	48 89 d6             	mov    %rdx,%rsi
    ed55:	48 89 c7             	mov    %rax,%rdi
    ed58:	e8 57 00 00 00       	call   edb4 <codegen_program_header>
    ed5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ed61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed65:	48 89 d6             	mov    %rdx,%rsi
    ed68:	48 89 c7             	mov    %rax,%rdi
    ed6b:	e8 ae 02 00 00       	call   f01e <codegen_program>
    ed70:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ed74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ed78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed7c:	48 89 d6             	mov    %rdx,%rsi
    ed7f:	48 89 c7             	mov    %rax,%rdi
    ed82:	e8 b2 00 00 00       	call   ee39 <codegen_main>
    ed87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed8b:	48 89 c7             	mov    %rax,%rdi
    ed8e:	e8 97 00 00 00       	call   ee2a <codegen_program_footer>
    ed93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed97:	48 89 c7             	mov    %rax,%rdi
    ed9a:	e8 71 35 ff ff       	call   2310 <fclose@plt>
    ed9f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    eda6:	00
    eda7:	b8 00 00 00 00       	mov    $0x0,%eax
    edac:	e8 ec 3c 00 00       	call   12a9d <free_stackmng>
    edb1:	90                   	nop
    edb2:	c9                   	leave
    edb3:	c3                   	ret

000000000000edb4 <codegen_program_header>:
    edb4:	f3 0f 1e fa          	endbr64
    edb8:	55                   	push   %rbp
    edb9:	48 89 e5             	mov    %rsp,%rbp
    edbc:	48 83 ec 10          	sub    $0x10,%rsp
    edc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    edc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    edc8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    edcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edd0:	48 8d 0d 60 c0 00 00 	lea    0xc060(%rip),%rcx        # 1ae37 <__PRETTY_FUNCTION__.0+0x107>
    edd7:	48 89 ce             	mov    %rcx,%rsi
    edda:	48 89 c7             	mov    %rax,%rdi
    eddd:	b8 00 00 00 00       	mov    $0x0,%eax
    ede2:	e8 e9 35 ff ff       	call   23d0 <fprintf@plt>
    ede7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edeb:	48 89 c1             	mov    %rax,%rcx
    edee:	ba 12 00 00 00       	mov    $0x12,%edx
    edf3:	be 01 00 00 00       	mov    $0x1,%esi
    edf8:	48 8d 05 45 c0 00 00 	lea    0xc045(%rip),%rax        # 1ae44 <__PRETTY_FUNCTION__.0+0x114>
    edff:	48 89 c7             	mov    %rax,%rdi
    ee02:	e8 89 36 ff ff       	call   2490 <fwrite@plt>
    ee07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee0b:	48 89 c1             	mov    %rax,%rcx
    ee0e:	ba 07 00 00 00       	mov    $0x7,%edx
    ee13:	be 01 00 00 00       	mov    $0x1,%esi
    ee18:	48 8d 05 38 c0 00 00 	lea    0xc038(%rip),%rax        # 1ae57 <__PRETTY_FUNCTION__.0+0x127>
    ee1f:	48 89 c7             	mov    %rax,%rdi
    ee22:	e8 69 36 ff ff       	call   2490 <fwrite@plt>
    ee27:	90                   	nop
    ee28:	c9                   	leave
    ee29:	c3                   	ret

000000000000ee2a <codegen_program_footer>:
    ee2a:	f3 0f 1e fa          	endbr64
    ee2e:	55                   	push   %rbp
    ee2f:	48 89 e5             	mov    %rsp,%rbp
    ee32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee36:	90                   	nop
    ee37:	5d                   	pop    %rbp
    ee38:	c3                   	ret

000000000000ee39 <codegen_main>:
    ee39:	f3 0f 1e fa          	endbr64
    ee3d:	55                   	push   %rbp
    ee3e:	48 89 e5             	mov    %rsp,%rbp
    ee41:	48 83 ec 10          	sub    $0x10,%rsp
    ee45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee51:	48 89 c1             	mov    %rax,%rcx
    ee54:	ba 10 00 00 00       	mov    $0x10,%edx
    ee59:	be 01 00 00 00       	mov    $0x1,%esi
    ee5e:	48 8d 05 fa bf 00 00 	lea    0xbffa(%rip),%rax        # 1ae5f <__PRETTY_FUNCTION__.0+0x12f>
    ee65:	48 89 c7             	mov    %rax,%rdi
    ee68:	e8 23 36 ff ff       	call   2490 <fwrite@plt>
    ee6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee71:	48 89 c1             	mov    %rax,%rcx
    ee74:	ba 0d 00 00 00       	mov    $0xd,%edx
    ee79:	be 01 00 00 00       	mov    $0x1,%esi
    ee7e:	48 8d 05 eb bf 00 00 	lea    0xbfeb(%rip),%rax        # 1ae70 <__PRETTY_FUNCTION__.0+0x140>
    ee85:	48 89 c7             	mov    %rax,%rdi
    ee88:	e8 03 36 ff ff       	call   2490 <fwrite@plt>
    ee8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee91:	48 89 c6             	mov    %rax,%rsi
    ee94:	48 8d 05 e3 bf 00 00 	lea    0xbfe3(%rip),%rax        # 1ae7e <__PRETTY_FUNCTION__.0+0x14e>
    ee9b:	48 89 c7             	mov    %rax,%rdi
    ee9e:	e8 a2 fd ff ff       	call   ec45 <codegen_function_header>
    eea3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eea7:	48 8d 15 d5 bf 00 00 	lea    0xbfd5(%rip),%rdx        # 1ae83 <__PRETTY_FUNCTION__.0+0x153>
    eeae:	48 89 d6             	mov    %rdx,%rsi
    eeb1:	48 89 c7             	mov    %rax,%rdi
    eeb4:	b8 00 00 00 00       	mov    $0x0,%eax
    eeb9:	e8 12 35 ff ff       	call   23d0 <fprintf@plt>
    eebe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eec2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eec6:	48 8d 0d c8 bf 00 00 	lea    0xbfc8(%rip),%rcx        # 1ae95 <__PRETTY_FUNCTION__.0+0x165>
    eecd:	48 89 ce             	mov    %rcx,%rsi
    eed0:	48 89 c7             	mov    %rax,%rdi
    eed3:	b8 00 00 00 00       	mov    $0x0,%eax
    eed8:	e8 f3 34 ff ff       	call   23d0 <fprintf@plt>
    eedd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eee1:	48 8d 15 b7 bf 00 00 	lea    0xbfb7(%rip),%rdx        # 1ae9f <__PRETTY_FUNCTION__.0+0x16f>
    eee8:	48 89 d6             	mov    %rdx,%rsi
    eeeb:	48 89 c7             	mov    %rax,%rdi
    eeee:	b8 00 00 00 00       	mov    $0x0,%eax
    eef3:	e8 d8 34 ff ff       	call   23d0 <fprintf@plt>
    eef8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eefc:	48 89 c1             	mov    %rax,%rcx
    eeff:	ba 0b 00 00 00       	mov    $0xb,%edx
    ef04:	be 01 00 00 00       	mov    $0x1,%esi
    ef09:	48 8d 05 a2 bf 00 00 	lea    0xbfa2(%rip),%rax        # 1aeb2 <__PRETTY_FUNCTION__.0+0x182>
    ef10:	48 89 c7             	mov    %rax,%rdi
    ef13:	e8 78 35 ff ff       	call   2490 <fwrite@plt>
    ef18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef1c:	48 89 c6             	mov    %rax,%rsi
    ef1f:	48 8d 05 58 bf 00 00 	lea    0xbf58(%rip),%rax        # 1ae7e <__PRETTY_FUNCTION__.0+0x14e>
    ef26:	48 89 c7             	mov    %rax,%rdi
    ef29:	e8 6c fd ff ff       	call   ec9a <codegen_function_footer>
    ef2e:	90                   	nop
    ef2f:	c9                   	leave
    ef30:	c3                   	ret

000000000000ef31 <codegen_stack_space>:
    ef31:	f3 0f 1e fa          	endbr64
    ef35:	55                   	push   %rbp
    ef36:	48 89 e5             	mov    %rsp,%rbp
    ef39:	48 83 ec 20          	sub    $0x20,%rsp
    ef3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ef41:	b8 00 00 00 00       	mov    $0x0,%eax
    ef46:	e8 75 33 00 00       	call   122c0 <get_full_stack_offset>
    ef4b:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ef4e:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    ef52:	79 28                	jns    ef7c <codegen_stack_space+0x4b>
    ef54:	48 8d 05 65 cc 00 00 	lea    0xcc65(%rip),%rax        # 1bbc0 <__PRETTY_FUNCTION__.16>
    ef5b:	48 89 c1             	mov    %rax,%rcx
    ef5e:	ba fd 00 00 00       	mov    $0xfd,%edx
    ef63:	48 8d 05 56 bf 00 00 	lea    0xbf56(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    ef6a:	48 89 c6             	mov    %rax,%rsi
    ef6d:	48 8d 05 71 bf 00 00 	lea    0xbf71(%rip),%rax        # 1aee5 <__PRETTY_FUNCTION__.0+0x1b5>
    ef74:	48 89 c7             	mov    %rax,%rdi
    ef77:	e8 d4 33 ff ff       	call   2350 <__assert_fail@plt>
    ef7c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    ef80:	74 1e                	je     efa0 <codegen_stack_space+0x6f>
    ef82:	8b 55 fc             	mov    -0x4(%rbp),%edx
    ef85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef89:	48 8d 0d 67 bf 00 00 	lea    0xbf67(%rip),%rcx        # 1aef7 <__PRETTY_FUNCTION__.0+0x1c7>
    ef90:	48 89 ce             	mov    %rcx,%rsi
    ef93:	48 89 c7             	mov    %rax,%rdi
    ef96:	b8 00 00 00 00       	mov    $0x0,%eax
    ef9b:	e8 30 34 ff ff       	call   23d0 <fprintf@plt>
    efa0:	90                   	nop
    efa1:	c9                   	leave
    efa2:	c3                   	ret

000000000000efa3 <codegen_inst_list>:
    efa3:	f3 0f 1e fa          	endbr64
    efa7:	55                   	push   %rbp
    efa8:	48 89 e5             	mov    %rsp,%rbp
    efab:	48 83 ec 20          	sub    $0x20,%rsp
    efaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    efb3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    efb7:	eb 5a                	jmp    f013 <codegen_inst_list+0x70>
    efb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efbd:	48 8b 40 08          	mov    0x8(%rax),%rax
    efc1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    efc5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    efca:	75 28                	jne    eff4 <codegen_inst_list+0x51>
    efcc:	48 8d 05 0d cc 00 00 	lea    0xcc0d(%rip),%rax        # 1bbe0 <__PRETTY_FUNCTION__.15>
    efd3:	48 89 c1             	mov    %rax,%rcx
    efd6:	ba 0f 01 00 00       	mov    $0x10f,%edx
    efdb:	48 8d 05 de be 00 00 	lea    0xbede(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    efe2:	48 89 c6             	mov    %rax,%rsi
    efe5:	48 8d 05 1d bf 00 00 	lea    0xbf1d(%rip),%rax        # 1af09 <__PRETTY_FUNCTION__.0+0x1d9>
    efec:	48 89 c7             	mov    %rax,%rdi
    efef:	e8 5c 33 ff ff       	call   2350 <__assert_fail@plt>
    eff4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    eff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    effc:	48 89 d6             	mov    %rdx,%rsi
    efff:	48 89 c7             	mov    %rax,%rdi
    f002:	e8 59 33 ff ff       	call   2360 <fputs@plt>
    f007:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f00b:	48 8b 40 10          	mov    0x10(%rax),%rax
    f00f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f013:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f018:	75 9f                	jne    efb9 <codegen_inst_list+0x16>
    f01a:	90                   	nop
    f01b:	90                   	nop
    f01c:	c9                   	leave
    f01d:	c3                   	ret

000000000000f01e <codegen_program>:
    f01e:	f3 0f 1e fa          	endbr64
    f022:	55                   	push   %rbp
    f023:	48 89 e5             	mov    %rsp,%rbp
    f026:	48 83 ec 30          	sub    $0x30,%rsp
    f02a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f02e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f032:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f036:	8b 40 04             	mov    0x4(%rax),%eax
    f039:	85 c0                	test   %eax,%eax
    f03b:	74 28                	je     f065 <codegen_program+0x47>
    f03d:	48 8d 05 bc cb 00 00 	lea    0xcbbc(%rip),%rax        # 1bc00 <__PRETTY_FUNCTION__.14>
    f044:	48 89 c1             	mov    %rax,%rcx
    f047:	ba 1e 01 00 00       	mov    $0x11e,%edx
    f04c:	48 8d 05 6d be 00 00 	lea    0xbe6d(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f053:	48 89 c6             	mov    %rax,%rsi
    f056:	48 8d 05 bb be 00 00 	lea    0xbebb(%rip),%rax        # 1af18 <__PRETTY_FUNCTION__.0+0x1e8>
    f05d:	48 89 c7             	mov    %rax,%rdi
    f060:	e8 eb 32 ff ff       	call   2350 <__assert_fail@plt>
    f065:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f069:	48 83 c0 08          	add    $0x8,%rax
    f06d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f075:	48 8b 00             	mov    (%rax),%rax
    f078:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f07c:	b8 00 00 00 00       	mov    $0x0,%eax
    f081:	e8 12 33 00 00       	call   12398 <push_stackscope>
    f086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f08a:	48 8b 40 10          	mov    0x10(%rax),%rax
    f08e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f092:	48 89 d6             	mov    %rdx,%rsi
    f095:	48 89 c7             	mov    %rax,%rdi
    f098:	e8 9f 00 00 00       	call   f13c <codegen_function_locals>
    f09d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f0a1:	48 8b 40 20          	mov    0x20(%rax),%rax
    f0a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f0a9:	48 89 d6             	mov    %rdx,%rsi
    f0ac:	48 89 c7             	mov    %rax,%rdi
    f0af:	e8 02 02 00 00       	call   f2b6 <codegen_subprograms>
    f0b4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f0bb:	00
    f0bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f0c0:	48 8b 40 28          	mov    0x28(%rax),%rax
    f0c4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f0c8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f0cc:	48 89 ce             	mov    %rcx,%rsi
    f0cf:	48 89 c7             	mov    %rax,%rdi
    f0d2:	e8 33 1d 00 00       	call   10e0a <codegen_stmt>
    f0d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f0db:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f0df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0e3:	48 89 d6             	mov    %rdx,%rsi
    f0e6:	48 89 c7             	mov    %rax,%rdi
    f0e9:	e8 57 fb ff ff       	call   ec45 <codegen_function_header>
    f0ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f0f2:	48 89 c7             	mov    %rax,%rdi
    f0f5:	e8 37 fe ff ff       	call   ef31 <codegen_stack_space>
    f0fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f0fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f102:	48 89 d6             	mov    %rdx,%rsi
    f105:	48 89 c7             	mov    %rax,%rdi
    f108:	e8 96 fe ff ff       	call   efa3 <codegen_inst_list>
    f10d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f111:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f115:	48 89 d6             	mov    %rdx,%rsi
    f118:	48 89 c7             	mov    %rax,%rdi
    f11b:	e8 7a fb ff ff       	call   ec9a <codegen_function_footer>
    f120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f124:	48 89 c7             	mov    %rax,%rdi
    f127:	e8 ec f7 ff ff       	call   e918 <free_inst_list>
    f12c:	b8 00 00 00 00       	mov    $0x0,%eax
    f131:	e8 d3 32 00 00       	call   12409 <pop_stackscope>
    f136:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f13a:	c9                   	leave
    f13b:	c3                   	ret

000000000000f13c <codegen_function_locals>:
    f13c:	f3 0f 1e fa          	endbr64
    f140:	55                   	push   %rbp
    f141:	48 89 e5             	mov    %rsp,%rbp
    f144:	48 83 ec 30          	sub    $0x30,%rsp
    f148:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f14c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f150:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f154:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f158:	e9 dd 00 00 00       	jmp    f23a <codegen_function_locals+0xfe>
    f15d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f161:	48 8b 40 08          	mov    0x8(%rax),%rax
    f165:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f169:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f16e:	75 28                	jne    f198 <codegen_function_locals+0x5c>
    f170:	48 8d 05 99 ca 00 00 	lea    0xca99(%rip),%rax        # 1bc10 <__PRETTY_FUNCTION__.13>
    f177:	48 89 c1             	mov    %rax,%rcx
    f17a:	ba 45 01 00 00       	mov    $0x145,%edx
    f17f:	48 8d 05 3a bd 00 00 	lea    0xbd3a(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f186:	48 89 c6             	mov    %rax,%rsi
    f189:	48 8d 05 a8 bd 00 00 	lea    0xbda8(%rip),%rax        # 1af38 <__PRETTY_FUNCTION__.0+0x208>
    f190:	48 89 c7             	mov    %rax,%rdi
    f193:	e8 b8 31 ff ff       	call   2350 <__assert_fail@plt>
    f198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f19c:	8b 40 04             	mov    0x4(%rax),%eax
    f19f:	83 f8 02             	cmp    $0x2,%eax
    f1a2:	74 28                	je     f1cc <codegen_function_locals+0x90>
    f1a4:	48 8d 05 65 ca 00 00 	lea    0xca65(%rip),%rax        # 1bc10 <__PRETTY_FUNCTION__.13>
    f1ab:	48 89 c1             	mov    %rax,%rcx
    f1ae:	ba 46 01 00 00       	mov    $0x146,%edx
    f1b3:	48 8d 05 06 bd 00 00 	lea    0xbd06(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f1ba:	48 89 c6             	mov    %rax,%rsi
    f1bd:	48 8d 05 81 bd 00 00 	lea    0xbd81(%rip),%rax        # 1af45 <__PRETTY_FUNCTION__.0+0x215>
    f1c4:	48 89 c7             	mov    %rax,%rdi
    f1c7:	e8 84 31 ff ff       	call   2350 <__assert_fail@plt>
    f1cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1d0:	48 8b 40 08          	mov    0x8(%rax),%rax
    f1d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1dc:	8b 40 10             	mov    0x10(%rax),%eax
    f1df:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    f1e4:	75 41                	jne    f227 <codegen_function_locals+0xeb>
    f1e6:	48 8b 05 73 1e 01 00 	mov    0x11e73(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f1ed:	48 89 c1             	mov    %rax,%rcx
    f1f0:	ba 37 00 00 00       	mov    $0x37,%edx
    f1f5:	be 01 00 00 00       	mov    $0x1,%esi
    f1fa:	48 8d 05 67 bd 00 00 	lea    0xbd67(%rip),%rax        # 1af68 <__PRETTY_FUNCTION__.0+0x238>
    f201:	48 89 c7             	mov    %rax,%rdi
    f204:	e8 87 32 ff ff       	call   2490 <fwrite@plt>
    f209:	eb 1c                	jmp    f227 <codegen_function_locals+0xeb>
    f20b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f20f:	48 8b 40 08          	mov    0x8(%rax),%rax
    f213:	48 89 c7             	mov    %rax,%rdi
    f216:	e8 d5 33 00 00       	call   125f0 <add_l_x>
    f21b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f21f:	48 8b 40 10          	mov    0x10(%rax),%rax
    f223:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f227:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f22c:	75 dd                	jne    f20b <codegen_function_locals+0xcf>
    f22e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f232:	48 8b 40 10          	mov    0x10(%rax),%rax
    f236:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f23a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f23f:	0f 85 18 ff ff ff    	jne    f15d <codegen_function_locals+0x21>
    f245:	90                   	nop
    f246:	90                   	nop
    f247:	c9                   	leave
    f248:	c3                   	ret

000000000000f249 <codegen_vect_reg>:
    f249:	f3 0f 1e fa          	endbr64
    f24d:	55                   	push   %rbp
    f24e:	48 89 e5             	mov    %rsp,%rbp
    f251:	48 83 ec 50          	sub    $0x50,%rsp
    f255:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    f259:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    f25c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f263:	00 00
    f265:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f269:	31 c0                	xor    %eax,%eax
    f26b:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    f26e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f272:	89 d1                	mov    %edx,%ecx
    f274:	48 8d 15 25 bd 00 00 	lea    0xbd25(%rip),%rdx        # 1afa0 <__PRETTY_FUNCTION__.0+0x270>
    f27b:	be 32 00 00 00       	mov    $0x32,%esi
    f280:	48 89 c7             	mov    %rax,%rdi
    f283:	b8 00 00 00 00       	mov    $0x0,%eax
    f288:	e8 b3 30 ff ff       	call   2340 <snprintf@plt>
    f28d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f291:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f295:	48 89 d6             	mov    %rdx,%rsi
    f298:	48 89 c7             	mov    %rax,%rdi
    f29b:	e8 1d f6 ff ff       	call   e8bd <add_inst>
    f2a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f2a4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f2ab:	00 00
    f2ad:	74 05                	je     f2b4 <codegen_vect_reg+0x6b>
    f2af:	e8 7c 30 ff ff       	call   2330 <__stack_chk_fail@plt>
    f2b4:	c9                   	leave
    f2b5:	c3                   	ret

000000000000f2b6 <codegen_subprograms>:
    f2b6:	f3 0f 1e fa          	endbr64
    f2ba:	55                   	push   %rbp
    f2bb:	48 89 e5             	mov    %rsp,%rbp
    f2be:	48 83 ec 20          	sub    $0x20,%rsp
    f2c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f2c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f2ca:	e9 db 00 00 00       	jmp    f3aa <codegen_subprograms+0xf4>
    f2cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2d3:	48 8b 40 08          	mov    0x8(%rax),%rax
    f2d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f2db:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f2e0:	75 28                	jne    f30a <codegen_subprograms+0x54>
    f2e2:	48 8d 05 47 c9 00 00 	lea    0xc947(%rip),%rax        # 1bc30 <__PRETTY_FUNCTION__.12>
    f2e9:	48 89 c1             	mov    %rax,%rcx
    f2ec:	ba 6b 01 00 00       	mov    $0x16b,%edx
    f2f1:	48 8d 05 c8 bb 00 00 	lea    0xbbc8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f2f8:	48 89 c6             	mov    %rax,%rsi
    f2fb:	48 8d 05 b0 bc 00 00 	lea    0xbcb0(%rip),%rax        # 1afb2 <__PRETTY_FUNCTION__.0+0x282>
    f302:	48 89 c7             	mov    %rax,%rdi
    f305:	e8 46 30 ff ff       	call   2350 <__assert_fail@plt>
    f30a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f30e:	8b 40 04             	mov    0x4(%rax),%eax
    f311:	83 f8 01             	cmp    $0x1,%eax
    f314:	74 28                	je     f33e <codegen_subprograms+0x88>
    f316:	48 8d 05 13 c9 00 00 	lea    0xc913(%rip),%rax        # 1bc30 <__PRETTY_FUNCTION__.12>
    f31d:	48 89 c1             	mov    %rax,%rcx
    f320:	ba 6c 01 00 00       	mov    $0x16c,%edx
    f325:	48 8d 05 94 bb 00 00 	lea    0xbb94(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f32c:	48 89 c6             	mov    %rax,%rsi
    f32f:	48 8d 05 88 bc 00 00 	lea    0xbc88(%rip),%rax        # 1afbe <__PRETTY_FUNCTION__.0+0x28e>
    f336:	48 89 c7             	mov    %rax,%rdi
    f339:	e8 12 30 ff ff       	call   2350 <__assert_fail@plt>
    f33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f342:	8b 40 08             	mov    0x8(%rax),%eax
    f345:	83 f8 05             	cmp    $0x5,%eax
    f348:	74 07                	je     f351 <codegen_subprograms+0x9b>
    f34a:	83 f8 06             	cmp    $0x6,%eax
    f34d:	74 17                	je     f366 <codegen_subprograms+0xb0>
    f34f:	eb 2a                	jmp    f37b <codegen_subprograms+0xc5>
    f351:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f359:	48 89 d6             	mov    %rdx,%rsi
    f35c:	48 89 c7             	mov    %rax,%rdi
    f35f:	e8 55 00 00 00       	call   f3b9 <codegen_procedure>
    f364:	eb 38                	jmp    f39e <codegen_subprograms+0xe8>
    f366:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f36a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f36e:	48 89 d6             	mov    %rdx,%rsi
    f371:	48 89 c7             	mov    %rax,%rdi
    f374:	e8 02 02 00 00       	call   f57b <codegen_function>
    f379:	eb 23                	jmp    f39e <codegen_subprograms+0xe8>
    f37b:	48 8b 05 de 1c 01 00 	mov    0x11cde(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f382:	48 89 c1             	mov    %rax,%rcx
    f385:	ba 30 00 00 00       	mov    $0x30,%edx
    f38a:	be 01 00 00 00       	mov    $0x1,%esi
    f38f:	48 8d 05 4a bc 00 00 	lea    0xbc4a(%rip),%rax        # 1afe0 <__PRETTY_FUNCTION__.0+0x2b0>
    f396:	48 89 c7             	mov    %rax,%rdi
    f399:	e8 f2 30 ff ff       	call   2490 <fwrite@plt>
    f39e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3a2:	48 8b 40 10          	mov    0x10(%rax),%rax
    f3a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f3aa:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f3af:	0f 85 1a ff ff ff    	jne    f2cf <codegen_subprograms+0x19>
    f3b5:	90                   	nop
    f3b6:	90                   	nop
    f3b7:	c9                   	leave
    f3b8:	c3                   	ret

000000000000f3b9 <codegen_procedure>:
    f3b9:	f3 0f 1e fa          	endbr64
    f3bd:	55                   	push   %rbp
    f3be:	48 89 e5             	mov    %rsp,%rbp
    f3c1:	48 83 ec 70          	sub    $0x70,%rsp
    f3c5:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    f3c9:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    f3cd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f3d4:	00 00
    f3d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3da:	31 c0                	xor    %eax,%eax
    f3dc:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    f3e1:	75 28                	jne    f40b <codegen_procedure+0x52>
    f3e3:	48 8d 05 66 c8 00 00 	lea    0xc866(%rip),%rax        # 1bc50 <__PRETTY_FUNCTION__.11>
    f3ea:	48 89 c1             	mov    %rax,%rcx
    f3ed:	ba 84 01 00 00       	mov    $0x184,%edx
    f3f2:	48 8d 05 c7 ba 00 00 	lea    0xbac7(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f3f9:	48 89 c6             	mov    %rax,%rsi
    f3fc:	48 8d 05 0e bc 00 00 	lea    0xbc0e(%rip),%rax        # 1b011 <__PRETTY_FUNCTION__.0+0x2e1>
    f403:	48 89 c7             	mov    %rax,%rdi
    f406:	e8 45 2f ff ff       	call   2350 <__assert_fail@plt>
    f40b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f40f:	8b 40 04             	mov    0x4(%rax),%eax
    f412:	83 f8 01             	cmp    $0x1,%eax
    f415:	74 28                	je     f43f <codegen_procedure+0x86>
    f417:	48 8d 05 32 c8 00 00 	lea    0xc832(%rip),%rax        # 1bc50 <__PRETTY_FUNCTION__.11>
    f41e:	48 89 c1             	mov    %rax,%rcx
    f421:	ba 85 01 00 00       	mov    $0x185,%edx
    f426:	48 8d 05 93 ba 00 00 	lea    0xba93(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f42d:	48 89 c6             	mov    %rax,%rsi
    f430:	48 8d 05 f1 bb 00 00 	lea    0xbbf1(%rip),%rax        # 1b028 <__PRETTY_FUNCTION__.0+0x2f8>
    f437:	48 89 c7             	mov    %rax,%rdi
    f43a:	e8 11 2f ff ff       	call   2350 <__assert_fail@plt>
    f43f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f443:	8b 40 08             	mov    0x8(%rax),%eax
    f446:	83 f8 05             	cmp    $0x5,%eax
    f449:	74 28                	je     f473 <codegen_procedure+0xba>
    f44b:	48 8d 05 fe c7 00 00 	lea    0xc7fe(%rip),%rax        # 1bc50 <__PRETTY_FUNCTION__.11>
    f452:	48 89 c1             	mov    %rax,%rcx
    f455:	ba 86 01 00 00       	mov    $0x186,%edx
    f45a:	48 8d 05 5f ba 00 00 	lea    0xba5f(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f461:	48 89 c6             	mov    %rax,%rsi
    f464:	48 8d 05 e5 bb 00 00 	lea    0xbbe5(%rip),%rax        # 1b050 <__PRETTY_FUNCTION__.0+0x320>
    f46b:	48 89 c7             	mov    %rax,%rdi
    f46e:	e8 dd 2e ff ff       	call   2350 <__assert_fail@plt>
    f473:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f477:	48 83 c0 08          	add    $0x8,%rax
    f47b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f47f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f483:	48 8b 40 08          	mov    0x8(%rax),%rax
    f487:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f48b:	b8 00 00 00 00       	mov    $0x0,%eax
    f490:	e8 03 2f 00 00       	call   12398 <push_stackscope>
    f495:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    f49c:	00
    f49d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4a1:	48 8b 40 10          	mov    0x10(%rax),%rax
    f4a5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f4a9:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    f4ad:	48 89 ce             	mov    %rcx,%rsi
    f4b0:	48 89 c7             	mov    %rax,%rdi
    f4b3:	e8 d8 02 00 00       	call   f790 <codegen_subprogram_arguments>
    f4b8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f4bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4c0:	48 8b 40 30          	mov    0x30(%rax),%rax
    f4c4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f4c8:	48 89 d6             	mov    %rdx,%rsi
    f4cb:	48 89 c7             	mov    %rax,%rdi
    f4ce:	e8 69 fc ff ff       	call   f13c <codegen_function_locals>
    f4d3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4d7:	48 8b 40 38          	mov    0x38(%rax),%rax
    f4db:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f4df:	48 89 d6             	mov    %rdx,%rsi
    f4e2:	48 89 c7             	mov    %rax,%rdi
    f4e5:	e8 cc fd ff ff       	call   f2b6 <codegen_subprograms>
    f4ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4ee:	48 8b 40 40          	mov    0x40(%rax),%rax
    f4f2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f4f6:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    f4fa:	48 89 ce             	mov    %rcx,%rsi
    f4fd:	48 89 c7             	mov    %rax,%rdi
    f500:	e8 05 19 00 00       	call   10e0a <codegen_stmt>
    f505:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f509:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f50d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f511:	48 89 d6             	mov    %rdx,%rsi
    f514:	48 89 c7             	mov    %rax,%rdi
    f517:	e8 29 f7 ff ff       	call   ec45 <codegen_function_header>
    f51c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f520:	48 89 c7             	mov    %rax,%rdi
    f523:	e8 09 fa ff ff       	call   ef31 <codegen_stack_space>
    f528:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f52c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f530:	48 89 d6             	mov    %rdx,%rsi
    f533:	48 89 c7             	mov    %rax,%rdi
    f536:	e8 68 fa ff ff       	call   efa3 <codegen_inst_list>
    f53b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f53f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f543:	48 89 d6             	mov    %rdx,%rsi
    f546:	48 89 c7             	mov    %rax,%rdi
    f549:	e8 4c f7 ff ff       	call   ec9a <codegen_function_footer>
    f54e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f552:	48 89 c7             	mov    %rax,%rdi
    f555:	e8 be f3 ff ff       	call   e918 <free_inst_list>
    f55a:	b8 00 00 00 00       	mov    $0x0,%eax
    f55f:	e8 a5 2e 00 00       	call   12409 <pop_stackscope>
    f564:	90                   	nop
    f565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f569:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    f570:	00 00
    f572:	74 05                	je     f579 <codegen_procedure+0x1c0>
    f574:	e8 b7 2d ff ff       	call   2330 <__stack_chk_fail@plt>
    f579:	c9                   	leave
    f57a:	c3                   	ret

000000000000f57b <codegen_function>:
    f57b:	f3 0f 1e fa          	endbr64
    f57f:	55                   	push   %rbp
    f580:	48 89 e5             	mov    %rsp,%rbp
    f583:	48 83 ec 70          	sub    $0x70,%rsp
    f587:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    f58b:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    f58f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f596:	00 00
    f598:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f59c:	31 c0                	xor    %eax,%eax
    f59e:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    f5a3:	75 28                	jne    f5cd <codegen_function+0x52>
    f5a5:	48 8d 05 c4 c6 00 00 	lea    0xc6c4(%rip),%rax        # 1bc70 <__PRETTY_FUNCTION__.10>
    f5ac:	48 89 c1             	mov    %rax,%rcx
    f5af:	ba a6 01 00 00       	mov    $0x1a6,%edx
    f5b4:	48 8d 05 05 b9 00 00 	lea    0xb905(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f5bb:	48 89 c6             	mov    %rax,%rsi
    f5be:	48 8d 05 d1 ba 00 00 	lea    0xbad1(%rip),%rax        # 1b096 <__PRETTY_FUNCTION__.0+0x366>
    f5c5:	48 89 c7             	mov    %rax,%rdi
    f5c8:	e8 83 2d ff ff       	call   2350 <__assert_fail@plt>
    f5cd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f5d1:	8b 40 04             	mov    0x4(%rax),%eax
    f5d4:	83 f8 01             	cmp    $0x1,%eax
    f5d7:	74 28                	je     f601 <codegen_function+0x86>
    f5d9:	48 8d 05 90 c6 00 00 	lea    0xc690(%rip),%rax        # 1bc70 <__PRETTY_FUNCTION__.10>
    f5e0:	48 89 c1             	mov    %rax,%rcx
    f5e3:	ba a7 01 00 00       	mov    $0x1a7,%edx
    f5e8:	48 8d 05 d1 b8 00 00 	lea    0xb8d1(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f5ef:	48 89 c6             	mov    %rax,%rsi
    f5f2:	48 8d 05 af ba 00 00 	lea    0xbaaf(%rip),%rax        # 1b0a8 <__PRETTY_FUNCTION__.0+0x378>
    f5f9:	48 89 c7             	mov    %rax,%rdi
    f5fc:	e8 4f 2d ff ff       	call   2350 <__assert_fail@plt>
    f601:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f605:	8b 40 08             	mov    0x8(%rax),%eax
    f608:	83 f8 06             	cmp    $0x6,%eax
    f60b:	74 28                	je     f635 <codegen_function+0xba>
    f60d:	48 8d 05 5c c6 00 00 	lea    0xc65c(%rip),%rax        # 1bc70 <__PRETTY_FUNCTION__.10>
    f614:	48 89 c1             	mov    %rax,%rcx
    f617:	ba a8 01 00 00       	mov    $0x1a8,%edx
    f61c:	48 8d 05 9d b8 00 00 	lea    0xb89d(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f623:	48 89 c6             	mov    %rax,%rsi
    f626:	48 8d 05 a3 ba 00 00 	lea    0xbaa3(%rip),%rax        # 1b0d0 <__PRETTY_FUNCTION__.0+0x3a0>
    f62d:	48 89 c7             	mov    %rax,%rdi
    f630:	e8 1b 2d ff ff       	call   2350 <__assert_fail@plt>
    f635:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f639:	48 83 c0 08          	add    $0x8,%rax
    f63d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f641:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f645:	48 8b 40 08          	mov    0x8(%rax),%rax
    f649:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f64d:	b8 00 00 00 00       	mov    $0x0,%eax
    f652:	e8 41 2d 00 00       	call   12398 <push_stackscope>
    f657:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    f65e:	00
    f65f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f663:	48 8b 40 10          	mov    0x10(%rax),%rax
    f667:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f66b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    f66f:	48 89 ce             	mov    %rcx,%rsi
    f672:	48 89 c7             	mov    %rax,%rdi
    f675:	e8 16 01 00 00       	call   f790 <codegen_subprogram_arguments>
    f67a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f67e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f682:	48 89 c7             	mov    %rax,%rdi
    f685:	e8 66 2f 00 00       	call   125f0 <add_l_x>
    f68a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f68e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f692:	48 8b 40 30          	mov    0x30(%rax),%rax
    f696:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f69a:	48 89 d6             	mov    %rdx,%rsi
    f69d:	48 89 c7             	mov    %rax,%rdi
    f6a0:	e8 97 fa ff ff       	call   f13c <codegen_function_locals>
    f6a5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f6a9:	48 8b 40 38          	mov    0x38(%rax),%rax
    f6ad:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f6b1:	48 89 d6             	mov    %rdx,%rsi
    f6b4:	48 89 c7             	mov    %rax,%rdi
    f6b7:	e8 fa fb ff ff       	call   f2b6 <codegen_subprograms>
    f6bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f6c0:	48 8b 40 40          	mov    0x40(%rax),%rax
    f6c4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f6c8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    f6cc:	48 89 ce             	mov    %rcx,%rsi
    f6cf:	48 89 c7             	mov    %rax,%rdi
    f6d2:	e8 33 17 00 00       	call   10e0a <codegen_stmt>
    f6d7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f6db:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6df:	8b 10                	mov    (%rax),%edx
    f6e1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f6e5:	4c 8d 05 2a ba 00 00 	lea    0xba2a(%rip),%r8        # 1b116 <__PRETTY_FUNCTION__.0+0x3e6>
    f6ec:	89 d1                	mov    %edx,%ecx
    f6ee:	48 8d 15 26 ba 00 00 	lea    0xba26(%rip),%rdx        # 1b11b <__PRETTY_FUNCTION__.0+0x3eb>
    f6f5:	be 32 00 00 00       	mov    $0x32,%esi
    f6fa:	48 89 c7             	mov    %rax,%rdi
    f6fd:	b8 00 00 00 00       	mov    $0x0,%eax
    f702:	e8 39 2c ff ff       	call   2340 <snprintf@plt>
    f707:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f70b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f70f:	48 89 d6             	mov    %rdx,%rsi
    f712:	48 89 c7             	mov    %rax,%rdi
    f715:	e8 a3 f1 ff ff       	call   e8bd <add_inst>
    f71a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f71e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f722:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f726:	48 89 d6             	mov    %rdx,%rsi
    f729:	48 89 c7             	mov    %rax,%rdi
    f72c:	e8 14 f5 ff ff       	call   ec45 <codegen_function_header>
    f731:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f735:	48 89 c7             	mov    %rax,%rdi
    f738:	e8 f4 f7 ff ff       	call   ef31 <codegen_stack_space>
    f73d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f741:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f745:	48 89 d6             	mov    %rdx,%rsi
    f748:	48 89 c7             	mov    %rax,%rdi
    f74b:	e8 53 f8 ff ff       	call   efa3 <codegen_inst_list>
    f750:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    f754:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f758:	48 89 d6             	mov    %rdx,%rsi
    f75b:	48 89 c7             	mov    %rax,%rdi
    f75e:	e8 37 f5 ff ff       	call   ec9a <codegen_function_footer>
    f763:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f767:	48 89 c7             	mov    %rax,%rdi
    f76a:	e8 a9 f1 ff ff       	call   e918 <free_inst_list>
    f76f:	b8 00 00 00 00       	mov    $0x0,%eax
    f774:	e8 90 2c 00 00       	call   12409 <pop_stackscope>
    f779:	90                   	nop
    f77a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f77e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    f785:	00 00
    f787:	74 05                	je     f78e <codegen_function+0x213>
    f789:	e8 a2 2b ff ff       	call   2330 <__stack_chk_fail@plt>
    f78e:	c9                   	leave
    f78f:	c3                   	ret

000000000000f790 <codegen_subprogram_arguments>:
    f790:	f3 0f 1e fa          	endbr64
    f794:	55                   	push   %rbp
    f795:	48 89 e5             	mov    %rsp,%rbp
    f798:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    f79f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    f7a3:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    f7a7:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    f7ae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f7b5:	00 00
    f7b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f7bb:	31 c0                	xor    %eax,%eax
    f7bd:	e9 91 01 00 00       	jmp    f953 <codegen_subprogram_arguments+0x1c3>
    f7c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f7c6:	48 8b 40 08          	mov    0x8(%rax),%rax
    f7ca:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f7ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7d2:	8b 40 04             	mov    0x4(%rax),%eax
    f7d5:	83 f8 02             	cmp    $0x2,%eax
    f7d8:	74 0e                	je     f7e8 <codegen_subprogram_arguments+0x58>
    f7da:	83 f8 03             	cmp    $0x3,%eax
    f7dd:	0f 84 0a 01 00 00    	je     f8ed <codegen_subprogram_arguments+0x15d>
    f7e3:	e9 32 01 00 00       	jmp    f91a <codegen_subprogram_arguments+0x18a>
    f7e8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7ec:	48 8b 40 08          	mov    0x8(%rax),%rax
    f7f0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f7f4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7f8:	8b 40 10             	mov    0x10(%rax),%eax
    f7fb:	89 45 9c             	mov    %eax,-0x64(%rbp)
    f7fe:	81 7d 9c 0b 01 00 00 	cmpl   $0x10b,-0x64(%rbp)
    f805:	75 23                	jne    f82a <codegen_subprogram_arguments+0x9a>
    f807:	48 8b 05 52 18 01 00 	mov    0x11852(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f80e:	48 89 c1             	mov    %rax,%rcx
    f811:	ba 26 00 00 00       	mov    $0x26,%edx
    f816:	be 01 00 00 00       	mov    $0x1,%esi
    f81b:	48 8d 05 16 b9 00 00 	lea    0xb916(%rip),%rax        # 1b138 <__PRETTY_FUNCTION__.0+0x408>
    f822:	48 89 c7             	mov    %rax,%rdi
    f825:	e8 66 2c ff ff       	call   2490 <fwrite@plt>
    f82a:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    f831:	e9 aa 00 00 00       	jmp    f8e0 <codegen_subprogram_arguments+0x150>
    f836:	8b 45 98             	mov    -0x68(%rbp),%eax
    f839:	89 c7                	mov    %eax,%edi
    f83b:	e8 98 29 00 00       	call   121d8 <get_arg_reg32_num>
    f840:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f844:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    f849:	75 2d                	jne    f878 <codegen_subprogram_arguments+0xe8>
    f84b:	48 8b 05 0e 18 01 00 	mov    0x1180e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f852:	ba 04 00 00 00       	mov    $0x4,%edx
    f857:	48 8d 0d 02 b9 00 00 	lea    0xb902(%rip),%rcx        # 1b160 <__PRETTY_FUNCTION__.0+0x430>
    f85e:	48 89 ce             	mov    %rcx,%rsi
    f861:	48 89 c7             	mov    %rax,%rdi
    f864:	b8 00 00 00 00       	mov    $0x0,%eax
    f869:	e8 62 2b ff ff       	call   23d0 <fprintf@plt>
    f86e:	bf 01 00 00 00       	mov    $0x1,%edi
    f873:	e8 08 2c ff ff       	call   2480 <exit@plt>
    f878:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f87c:	48 8b 40 08          	mov    0x8(%rax),%rax
    f880:	48 89 c7             	mov    %rax,%rdi
    f883:	e8 b5 2e 00 00       	call   1273d <add_l_z>
    f888:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f88c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f890:	8b 08                	mov    (%rax),%ecx
    f892:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    f896:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f89a:	41 89 c8             	mov    %ecx,%r8d
    f89d:	48 89 d1             	mov    %rdx,%rcx
    f8a0:	48 8d 15 d8 b8 00 00 	lea    0xb8d8(%rip),%rdx        # 1b17f <__PRETTY_FUNCTION__.0+0x44f>
    f8a7:	be 32 00 00 00       	mov    $0x32,%esi
    f8ac:	48 89 c7             	mov    %rax,%rdi
    f8af:	b8 00 00 00 00       	mov    $0x0,%eax
    f8b4:	e8 87 2a ff ff       	call   2340 <snprintf@plt>
    f8b9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f8bd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f8c1:	48 89 d6             	mov    %rdx,%rsi
    f8c4:	48 89 c7             	mov    %rax,%rdi
    f8c7:	e8 f1 ef ff ff       	call   e8bd <add_inst>
    f8cc:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    f8d0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f8d4:	48 8b 40 10          	mov    0x10(%rax),%rax
    f8d8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f8dc:	83 45 98 01          	addl   $0x1,-0x68(%rbp)
    f8e0:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    f8e5:	0f 85 4b ff ff ff    	jne    f836 <codegen_subprogram_arguments+0xa6>
    f8eb:	eb 5a                	jmp    f947 <codegen_subprogram_arguments+0x1b7>
    f8ed:	48 8b 05 6c 17 01 00 	mov    0x1176c(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f8f4:	48 89 c1             	mov    %rax,%rcx
    f8f7:	ba 34 00 00 00       	mov    $0x34,%edx
    f8fc:	be 01 00 00 00       	mov    $0x1,%esi
    f901:	48 8d 05 90 b8 00 00 	lea    0xb890(%rip),%rax        # 1b198 <__PRETTY_FUNCTION__.0+0x468>
    f908:	48 89 c7             	mov    %rax,%rdi
    f90b:	e8 80 2b ff ff       	call   2490 <fwrite@plt>
    f910:	bf 01 00 00 00       	mov    $0x1,%edi
    f915:	e8 66 2b ff ff       	call   2480 <exit@plt>
    f91a:	48 8b 05 3f 17 01 00 	mov    0x1173f(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f921:	48 89 c1             	mov    %rax,%rcx
    f924:	ba 1e 00 00 00       	mov    $0x1e,%edx
    f929:	be 01 00 00 00       	mov    $0x1,%esi
    f92e:	48 8d 05 9b b8 00 00 	lea    0xb89b(%rip),%rax        # 1b1d0 <__PRETTY_FUNCTION__.0+0x4a0>
    f935:	48 89 c7             	mov    %rax,%rdi
    f938:	e8 53 2b ff ff       	call   2490 <fwrite@plt>
    f93d:	bf 01 00 00 00       	mov    $0x1,%edi
    f942:	e8 39 2b ff ff       	call   2480 <exit@plt>
    f947:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f94b:	48 8b 40 10          	mov    0x10(%rax),%rax
    f94f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    f953:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    f958:	0f 85 64 fe ff ff    	jne    f7c2 <codegen_subprogram_arguments+0x32>
    f95e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f962:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f966:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f96d:	00 00
    f96f:	74 05                	je     f976 <codegen_subprogram_arguments+0x1e6>
    f971:	e8 ba 29 ff ff       	call   2330 <__stack_chk_fail@plt>
    f976:	c9                   	leave
    f977:	c3                   	ret

000000000000f978 <codegen_expr>:
    f978:	f3 0f 1e fa          	endbr64
    f97c:	55                   	push   %rbp
    f97d:	48 89 e5             	mov    %rsp,%rbp
    f980:	48 83 ec 30          	sub    $0x30,%rsp
    f984:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f988:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f98c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f990:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f995:	75 28                	jne    f9bf <codegen_expr+0x47>
    f997:	48 8d 05 ea c2 00 00 	lea    0xc2ea(%rip),%rax        # 1bc88 <__PRETTY_FUNCTION__.9>
    f99e:	48 89 c1             	mov    %rax,%rcx
    f9a1:	ba 11 02 00 00       	mov    $0x211,%edx
    f9a6:	48 8d 05 13 b5 00 00 	lea    0xb513(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
    f9ad:	48 89 c6             	mov    %rax,%rsi
    f9b0:	48 8d 05 38 b8 00 00 	lea    0xb838(%rip),%rax        # 1b1ef <__PRETTY_FUNCTION__.0+0x4bf>
    f9b7:	48 89 c7             	mov    %rax,%rdi
    f9ba:	e8 91 29 ff ff       	call   2350 <__assert_fail@plt>
    f9bf:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f9c6:	00
    f9c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9cb:	8b 50 04             	mov    0x4(%rax),%edx
    f9ce:	48 8b 05 8b 16 01 00 	mov    0x1168b(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    f9d5:	48 8d 0d 24 b8 00 00 	lea    0xb824(%rip),%rcx        # 1b200 <__PRETTY_FUNCTION__.0+0x4d0>
    f9dc:	48 89 ce             	mov    %rcx,%rsi
    f9df:	48 89 c7             	mov    %rax,%rdi
    f9e2:	b8 00 00 00 00       	mov    $0x0,%eax
    f9e7:	e8 e4 29 ff ff       	call   23d0 <fprintf@plt>
    f9ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9f0:	8b 40 04             	mov    0x4(%rax),%eax
    f9f3:	83 f8 07             	cmp    $0x7,%eax
    f9f6:	0f 87 11 02 00 00    	ja     fc0d <codegen_expr+0x295>
    f9fc:	89 c0                	mov    %eax,%eax
    f9fe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    fa05:	00
    fa06:	48 8d 05 33 b9 00 00 	lea    0xb933(%rip),%rax        # 1b340 <__PRETTY_FUNCTION__.0+0x610>
    fa0d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    fa10:	48 98                	cltq
    fa12:	48 8d 15 27 b9 00 00 	lea    0xb927(%rip),%rdx        # 1b340 <__PRETTY_FUNCTION__.0+0x610>
    fa19:	48 01 d0             	add    %rdx,%rax
    fa1c:	3e ff e0             	notrack jmp *%rax
    fa1f:	48 8b 05 3a 16 01 00 	mov    0x1163a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fa26:	48 89 c1             	mov    %rax,%rcx
    fa29:	ba 29 00 00 00       	mov    $0x29,%edx
    fa2e:	be 01 00 00 00       	mov    $0x1,%esi
    fa33:	48 8d 05 f6 b7 00 00 	lea    0xb7f6(%rip),%rax        # 1b230 <__PRETTY_FUNCTION__.0+0x500>
    fa3a:	48 89 c7             	mov    %rax,%rdi
    fa3d:	e8 4e 2a ff ff       	call   2490 <fwrite@plt>
    fa42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa46:	48 89 c7             	mov    %rax,%rdi
    fa49:	e8 22 3c 00 00       	call   13670 <build_expr_tree>
    fa4e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fa52:	b8 00 00 00 00       	mov    $0x0,%eax
    fa57:	e8 1e 2e 00 00       	call   1287a <get_reg_stack>
    fa5c:	48 89 c1             	mov    %rax,%rcx
    fa5f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fa63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa67:	48 89 ce             	mov    %rcx,%rsi
    fa6a:	48 89 c7             	mov    %rax,%rdi
    fa6d:	e8 d7 3e 00 00       	call   13949 <gencode_expr_tree>
    fa72:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fa76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa7a:	48 89 c7             	mov    %rax,%rdi
    fa7d:	e8 fc 42 00 00       	call   13d7e <free_expr_tree>
    fa82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fa86:	e9 b1 01 00 00       	jmp    fc3c <codegen_expr+0x2c4>
    fa8b:	48 8b 05 ce 15 01 00 	mov    0x115ce(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fa92:	48 89 c1             	mov    %rax,%rcx
    fa95:	ba 2e 00 00 00       	mov    $0x2e,%edx
    fa9a:	be 01 00 00 00       	mov    $0x1,%esi
    fa9f:	48 8d 05 ba b7 00 00 	lea    0xb7ba(%rip),%rax        # 1b260 <__PRETTY_FUNCTION__.0+0x530>
    faa6:	48 89 c7             	mov    %rax,%rdi
    faa9:	e8 e2 29 ff ff       	call   2490 <fwrite@plt>
    faae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fab2:	48 89 c7             	mov    %rax,%rdi
    fab5:	e8 b6 3b 00 00       	call   13670 <build_expr_tree>
    faba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fabe:	b8 00 00 00 00       	mov    $0x0,%eax
    fac3:	e8 b2 2d 00 00       	call   1287a <get_reg_stack>
    fac8:	48 89 c1             	mov    %rax,%rcx
    facb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    facf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fad3:	48 89 ce             	mov    %rcx,%rsi
    fad6:	48 89 c7             	mov    %rax,%rdi
    fad9:	e8 6b 3e 00 00       	call   13949 <gencode_expr_tree>
    fade:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fae6:	48 89 c7             	mov    %rax,%rdi
    fae9:	e8 90 42 00 00       	call   13d7e <free_expr_tree>
    faee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    faf2:	e9 45 01 00 00       	jmp    fc3c <codegen_expr+0x2c4>
    faf7:	48 8b 05 62 15 01 00 	mov    0x11562(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fafe:	48 89 c1             	mov    %rax,%rcx
    fb01:	ba 31 00 00 00       	mov    $0x31,%edx
    fb06:	be 01 00 00 00       	mov    $0x1,%esi
    fb0b:	48 8d 05 7e b7 00 00 	lea    0xb77e(%rip),%rax        # 1b290 <__PRETTY_FUNCTION__.0+0x560>
    fb12:	48 89 c7             	mov    %rax,%rdi
    fb15:	e8 76 29 ff ff       	call   2490 <fwrite@plt>
    fb1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fb1e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    fb22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb26:	b9 00 00 00 00       	mov    $0x0,%ecx
    fb2b:	48 89 c7             	mov    %rax,%rdi
    fb2e:	e8 9d 0f 00 00       	call   10ad0 <codegen_simple_relop>
    fb33:	e9 04 01 00 00       	jmp    fc3c <codegen_expr+0x2c4>
    fb38:	48 8b 05 21 15 01 00 	mov    0x11521(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fb3f:	48 89 c1             	mov    %rax,%rcx
    fb42:	ba 23 00 00 00       	mov    $0x23,%edx
    fb47:	be 01 00 00 00       	mov    $0x1,%esi
    fb4c:	48 8d 05 75 b7 00 00 	lea    0xb775(%rip),%rax        # 1b2c8 <__PRETTY_FUNCTION__.0+0x598>
    fb53:	48 89 c7             	mov    %rax,%rdi
    fb56:	e8 35 29 ff ff       	call   2490 <fwrite@plt>
    fb5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb5f:	48 89 c7             	mov    %rax,%rdi
    fb62:	e8 09 3b 00 00       	call   13670 <build_expr_tree>
    fb67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fb6b:	b8 00 00 00 00       	mov    $0x0,%eax
    fb70:	e8 05 2d 00 00       	call   1287a <get_reg_stack>
    fb75:	48 89 c1             	mov    %rax,%rcx
    fb78:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fb7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb80:	48 89 ce             	mov    %rcx,%rsi
    fb83:	48 89 c7             	mov    %rax,%rdi
    fb86:	e8 be 3d 00 00       	call   13949 <gencode_expr_tree>
    fb8b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fb8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb93:	48 89 c7             	mov    %rax,%rdi
    fb96:	e8 e3 41 00 00       	call   13d7e <free_expr_tree>
    fb9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fb9f:	e9 98 00 00 00       	jmp    fc3c <codegen_expr+0x2c4>
    fba4:	48 8b 05 b5 14 01 00 	mov    0x114b5(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fbab:	48 89 c1             	mov    %rax,%rcx
    fbae:	ba 27 00 00 00       	mov    $0x27,%edx
    fbb3:	be 01 00 00 00       	mov    $0x1,%esi
    fbb8:	48 8d 05 31 b7 00 00 	lea    0xb731(%rip),%rax        # 1b2f0 <__PRETTY_FUNCTION__.0+0x5c0>
    fbbf:	48 89 c7             	mov    %rax,%rdi
    fbc2:	e8 c9 28 ff ff       	call   2490 <fwrite@plt>
    fbc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fbcb:	48 89 c7             	mov    %rax,%rdi
    fbce:	e8 9d 3a 00 00       	call   13670 <build_expr_tree>
    fbd3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fbd7:	b8 00 00 00 00       	mov    $0x0,%eax
    fbdc:	e8 99 2c 00 00       	call   1287a <get_reg_stack>
    fbe1:	48 89 c1             	mov    %rax,%rcx
    fbe4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fbe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbec:	48 89 ce             	mov    %rcx,%rsi
    fbef:	48 89 c7             	mov    %rax,%rdi
    fbf2:	e8 52 3d 00 00       	call   13949 <gencode_expr_tree>
    fbf7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fbfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbff:	48 89 c7             	mov    %rax,%rdi
    fc02:	e8 77 41 00 00       	call   13d7e <free_expr_tree>
    fc07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fc0b:	eb 2f                	jmp    fc3c <codegen_expr+0x2c4>
    fc0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc11:	8b 50 04             	mov    0x4(%rax),%edx
    fc14:	48 8b 05 45 14 01 00 	mov    0x11445(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fc1b:	48 8d 0d f6 b6 00 00 	lea    0xb6f6(%rip),%rcx        # 1b318 <__PRETTY_FUNCTION__.0+0x5e8>
    fc22:	48 89 ce             	mov    %rcx,%rsi
    fc25:	48 89 c7             	mov    %rax,%rdi
    fc28:	b8 00 00 00 00       	mov    $0x0,%eax
    fc2d:	e8 9e 27 ff ff       	call   23d0 <fprintf@plt>
    fc32:	bf 01 00 00 00       	mov    $0x1,%edi
    fc37:	e8 44 28 ff ff       	call   2480 <exit@plt>
    fc3c:	c9                   	leave
    fc3d:	c3                   	ret

000000000000fc3e <codegen_builtin_write>:
    fc3e:	f3 0f 1e fa          	endbr64
    fc42:	55                   	push   %rbp
    fc43:	48 89 e5             	mov    %rsp,%rbp
    fc46:	48 81 ec 80 02 00 00 	sub    $0x280,%rsp
    fc4d:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
    fc54:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
    fc5b:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
    fc62:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fc69:	00 00
    fc6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fc6f:	31 c0                	xor    %eax,%eax
    fc71:	8b 05 b9 13 01 00    	mov    0x113b9(%rip),%eax        # 21030 <write_label_counter>
    fc77:	8d 50 01             	lea    0x1(%rax),%edx
    fc7a:	89 15 b0 13 01 00    	mov    %edx,0x113b0(%rip)        # 21030 <write_label_counter>
    fc80:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%rbp)
    fc86:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    fc8d:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
    fc94:	c7 85 ac fd ff ff 00 	movl   $0x0,-0x254(%rbp)
    fc9b:	00 00 00
    fc9e:	48 c7 85 60 fe ff ff 	movq   $0x0,-0x1a0(%rbp)
    fca5:	00 00 00 00
    fca9:	48 c7 85 68 fe ff ff 	movq   $0x0,-0x198(%rbp)
    fcb0:	00 00 00 00
    fcb4:	48 c7 85 70 fe ff ff 	movq   $0x0,-0x190(%rbp)
    fcbb:	00 00 00 00
    fcbf:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    fcc6:	00 00 00 00
    fcca:	48 c7 85 80 fe ff ff 	movq   $0x0,-0x180(%rbp)
    fcd1:	00 00 00 00
    fcd5:	48 c7 85 88 fe ff ff 	movq   $0x0,-0x178(%rbp)
    fcdc:	00 00 00 00
    fce0:	48 c7 85 90 fe ff ff 	movq   $0x0,-0x170(%rbp)
    fce7:	00 00 00 00
    fceb:	48 c7 85 98 fe ff ff 	movq   $0x0,-0x168(%rbp)
    fcf2:	00 00 00 00
    fcf6:	48 c7 85 a0 fe ff ff 	movq   $0x0,-0x160(%rbp)
    fcfd:	00 00 00 00
    fd01:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    fd08:	00 00 00 00
    fd0c:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    fd13:	00 00 00 00
    fd17:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    fd1e:	00 00 00 00
    fd22:	48 c7 85 c0 fe ff ff 	movq   $0x0,-0x140(%rbp)
    fd29:	00 00 00 00
    fd2d:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
    fd34:	00 00 00 00
    fd38:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
    fd3f:	00 00 00 00
    fd43:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
    fd4a:	00 00 00 00
    fd4e:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
    fd55:	00 00 00 00
    fd59:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
    fd60:	00 00 00 00
    fd64:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
    fd6b:	00 00 00 00
    fd6f:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    fd76:	00 00 00 00
    fd7a:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
    fd81:	00 00 00 00
    fd85:	48 c7 85 08 ff ff ff 	movq   $0x0,-0xf8(%rbp)
    fd8c:	00 00 00 00
    fd90:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
    fd97:	00 00 00 00
    fd9b:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
    fda2:	00 00 00 00
    fda6:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
    fdad:	00 00 00 00
    fdb1:	48 83 bd 98 fd ff ff 	cmpq   $0x0,-0x268(%rbp)
    fdb8:	00
    fdb9:	74 13                	je     fdce <codegen_builtin_write+0x190>
    fdbb:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    fdc2:	48 89 c7             	mov    %rax,%rdi
    fdc5:	e8 19 80 ff ff       	call   7de3 <ListLength>
    fdca:	89 c2                	mov    %eax,%edx
    fdcc:	eb 05                	jmp    fdd3 <codegen_builtin_write+0x195>
    fdce:	ba 00 00 00 00       	mov    $0x0,%edx
    fdd3:	48 8b 05 86 12 01 00 	mov    0x11286(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fdda:	48 8d 0d 7f b5 00 00 	lea    0xb57f(%rip),%rcx        # 1b360 <__PRETTY_FUNCTION__.0+0x630>
    fde1:	48 89 ce             	mov    %rcx,%rsi
    fde4:	48 89 c7             	mov    %rax,%rdi
    fde7:	b8 00 00 00 00       	mov    $0x0,%eax
    fdec:	e8 df 25 ff ff       	call   23d0 <fprintf@plt>
    fdf1:	48 8b 05 68 12 01 00 	mov    0x11268(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
    fdf8:	48 8d 95 60 fe ff ff 	lea    -0x1a0(%rbp),%rdx
    fdff:	48 8d 0d 82 b5 00 00 	lea    0xb582(%rip),%rcx        # 1b388 <__PRETTY_FUNCTION__.0+0x658>
    fe06:	48 89 ce             	mov    %rcx,%rsi
    fe09:	48 89 c7             	mov    %rax,%rdi
    fe0c:	b8 00 00 00 00       	mov    $0x0,%eax
    fe11:	e8 ba 25 ff ff       	call   23d0 <fprintf@plt>
    fe16:	e9 37 03 00 00       	jmp    10152 <codegen_builtin_write+0x514>
    fe1b:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
    fe22:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe26:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
    fe2d:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    fe34:	8b 40 04             	mov    0x4(%rax),%eax
    fe37:	83 f8 09             	cmp    $0x9,%eax
    fe3a:	0f 85 18 01 00 00    	jne    ff58 <codegen_builtin_write+0x31a>
    fe40:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
    fe47:	48 89 c7             	mov    %rax,%rdi
    fe4a:	e8 d1 24 ff ff       	call   2320 <strlen@plt>
    fe4f:	48 89 c2             	mov    %rax,%rdx
    fe52:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
    fe59:	48 01 d0             	add    %rdx,%rax
    fe5c:	66 c7 00 25 73       	movw   $0x7325,(%rax)
    fe61:	c6 40 02 00          	movb   $0x0,0x2(%rax)
    fe65:	8b 95 a8 fd ff ff    	mov    -0x258(%rbp),%edx
    fe6b:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    fe72:	89 d1                	mov    %edx,%ecx
    fe74:	48 8d 15 3b b5 00 00 	lea    0xb53b(%rip),%rdx        # 1b3b6 <__PRETTY_FUNCTION__.0+0x686>
    fe7b:	be 64 00 00 00       	mov    $0x64,%esi
    fe80:	48 89 c7             	mov    %rax,%rdi
    fe83:	b8 00 00 00 00       	mov    $0x0,%eax
    fe88:	e8 b3 24 ff ff       	call   2340 <snprintf@plt>
    fe8d:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    fe94:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
    fe9b:	48 89 d6             	mov    %rdx,%rsi
    fe9e:	48 89 c7             	mov    %rax,%rdi
    fea1:	e8 17 ea ff ff       	call   e8bd <add_inst>
    fea6:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
    fead:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    feb4:	48 8d 15 16 b5 00 00 	lea    0xb516(%rip),%rdx        # 1b3d1 <__PRETTY_FUNCTION__.0+0x6a1>
    febb:	be 64 00 00 00       	mov    $0x64,%esi
    fec0:	48 89 c7             	mov    %rax,%rdi
    fec3:	b8 00 00 00 00       	mov    $0x0,%eax
    fec8:	e8 73 24 ff ff       	call   2340 <snprintf@plt>
    fecd:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    fed4:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
    fedb:	48 89 d6             	mov    %rdx,%rsi
    fede:	48 89 c7             	mov    %rax,%rdi
    fee1:	e8 d7 e9 ff ff       	call   e8bd <add_inst>
    fee6:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
    feed:	83 85 ac fd ff ff 01 	addl   $0x1,-0x254(%rbp)
    fef4:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    fefb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    feff:	8b 85 a8 fd ff ff    	mov    -0x258(%rbp),%eax
    ff05:	8d 50 01             	lea    0x1(%rax),%edx
    ff08:	89 95 a8 fd ff ff    	mov    %edx,-0x258(%rbp)
    ff0e:	48 8d bd f0 fd ff ff 	lea    -0x210(%rbp),%rdi
    ff15:	49 89 c8             	mov    %rcx,%r8
    ff18:	89 c1                	mov    %eax,%ecx
    ff1a:	48 8d 05 bf b4 00 00 	lea    0xb4bf(%rip),%rax        # 1b3e0 <__PRETTY_FUNCTION__.0+0x6b0>
    ff21:	48 89 c2             	mov    %rax,%rdx
    ff24:	be 64 00 00 00       	mov    $0x64,%esi
    ff29:	b8 00 00 00 00       	mov    $0x0,%eax
    ff2e:	e8 0d 24 ff ff       	call   2340 <snprintf@plt>
    ff33:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    ff3a:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
    ff41:	48 89 d6             	mov    %rdx,%rsi
    ff44:	48 89 c7             	mov    %rax,%rdi
    ff47:	e8 71 e9 ff ff       	call   e8bd <add_inst>
    ff4c:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
    ff53:	e9 e8 01 00 00       	jmp    10140 <codegen_builtin_write+0x502>
    ff58:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    ff5f:	8b 40 04             	mov    0x4(%rax),%eax
    ff62:	83 f8 07             	cmp    $0x7,%eax
    ff65:	0f 85 ed 00 00 00    	jne    10058 <codegen_builtin_write+0x41a>
    ff6b:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
    ff72:	48 89 c7             	mov    %rax,%rdi
    ff75:	e8 a6 23 ff ff       	call   2320 <strlen@plt>
    ff7a:	48 89 c2             	mov    %rax,%rdx
    ff7d:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
    ff84:	48 01 d0             	add    %rdx,%rax
    ff87:	66 c7 00 25 64       	movw   $0x6425,(%rax)
    ff8c:	c6 40 02 00          	movb   $0x0,0x2(%rax)
    ff90:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    ff97:	48 89 c7             	mov    %rax,%rdi
    ff9a:	e8 d1 36 00 00       	call   13670 <build_expr_tree>
    ff9f:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
    ffa6:	b8 00 00 00 00       	mov    $0x0,%eax
    ffab:	e8 ca 28 00 00       	call   1287a <get_reg_stack>
    ffb0:	48 89 c1             	mov    %rax,%rcx
    ffb3:	48 8b 95 90 fd ff ff 	mov    -0x270(%rbp),%rdx
    ffba:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
    ffc1:	48 89 ce             	mov    %rcx,%rsi
    ffc4:	48 89 c7             	mov    %rax,%rdi
    ffc7:	e8 7d 39 00 00       	call   13949 <gencode_expr_tree>
    ffcc:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
    ffd3:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
    ffda:	48 89 c7             	mov    %rax,%rdi
    ffdd:	e8 9c 3d 00 00       	call   13d7e <free_expr_tree>
    ffe2:	b8 00 00 00 00       	mov    $0x0,%eax
    ffe7:	e8 8e 28 00 00       	call   1287a <get_reg_stack>
    ffec:	48 89 c7             	mov    %rax,%rdi
    ffef:	e8 9e 30 00 00       	call   13092 <front_reg_stack>
    fff4:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
    fffb:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
   10002:	48 8b 00             	mov    (%rax),%rax
   10005:	48 8d 50 01          	lea    0x1(%rax),%rdx
   10009:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   10010:	48 89 d1             	mov    %rdx,%rcx
   10013:	48 8d 15 f5 b3 00 00 	lea    0xb3f5(%rip),%rdx        # 1b40f <__PRETTY_FUNCTION__.0+0x6df>
   1001a:	be 64 00 00 00       	mov    $0x64,%esi
   1001f:	48 89 c7             	mov    %rax,%rdi
   10022:	b8 00 00 00 00       	mov    $0x0,%eax
   10027:	e8 14 23 ff ff       	call   2340 <snprintf@plt>
   1002c:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   10033:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   1003a:	48 89 d6             	mov    %rdx,%rsi
   1003d:	48 89 c7             	mov    %rax,%rdi
   10040:	e8 78 e8 ff ff       	call   e8bd <add_inst>
   10045:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   1004c:	83 85 ac fd ff ff 01 	addl   $0x1,-0x254(%rbp)
   10053:	e9 e8 00 00 00       	jmp    10140 <codegen_builtin_write+0x502>
   10058:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   1005f:	48 89 c7             	mov    %rax,%rdi
   10062:	e8 b9 22 ff ff       	call   2320 <strlen@plt>
   10067:	48 89 c2             	mov    %rax,%rdx
   1006a:	48 8d 85 60 fe ff ff 	lea    -0x1a0(%rbp),%rax
   10071:	48 01 d0             	add    %rdx,%rax
   10074:	66 c7 00 25 64       	movw   $0x6425,(%rax)
   10079:	c6 40 02 00          	movb   $0x0,0x2(%rax)
   1007d:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   10084:	48 89 c7             	mov    %rax,%rdi
   10087:	e8 e4 35 00 00       	call   13670 <build_expr_tree>
   1008c:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   10093:	b8 00 00 00 00       	mov    $0x0,%eax
   10098:	e8 dd 27 00 00       	call   1287a <get_reg_stack>
   1009d:	48 89 c1             	mov    %rax,%rcx
   100a0:	48 8b 95 90 fd ff ff 	mov    -0x270(%rbp),%rdx
   100a7:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   100ae:	48 89 ce             	mov    %rcx,%rsi
   100b1:	48 89 c7             	mov    %rax,%rdi
   100b4:	e8 90 38 00 00       	call   13949 <gencode_expr_tree>
   100b9:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   100c0:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   100c7:	48 89 c7             	mov    %rax,%rdi
   100ca:	e8 af 3c 00 00       	call   13d7e <free_expr_tree>
   100cf:	b8 00 00 00 00       	mov    $0x0,%eax
   100d4:	e8 a1 27 00 00       	call   1287a <get_reg_stack>
   100d9:	48 89 c7             	mov    %rax,%rdi
   100dc:	e8 b1 2f 00 00       	call   13092 <front_reg_stack>
   100e1:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   100e8:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   100ef:	48 8b 00             	mov    (%rax),%rax
   100f2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   100f6:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   100fd:	48 89 d1             	mov    %rdx,%rcx
   10100:	48 8d 15 08 b3 00 00 	lea    0xb308(%rip),%rdx        # 1b40f <__PRETTY_FUNCTION__.0+0x6df>
   10107:	be 64 00 00 00       	mov    $0x64,%esi
   1010c:	48 89 c7             	mov    %rax,%rdi
   1010f:	b8 00 00 00 00       	mov    $0x0,%eax
   10114:	e8 27 22 ff ff       	call   2340 <snprintf@plt>
   10119:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   10120:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   10127:	48 89 d6             	mov    %rdx,%rsi
   1012a:	48 89 c7             	mov    %rax,%rdi
   1012d:	e8 8b e7 ff ff       	call   e8bd <add_inst>
   10132:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   10139:	83 85 ac fd ff ff 01 	addl   $0x1,-0x254(%rbp)
   10140:	48 8b 85 b8 fd ff ff 	mov    -0x248(%rbp),%rax
   10147:	48 8b 40 10          	mov    0x10(%rax),%rax
   1014b:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
   10152:	48 83 bd b8 fd ff ff 	cmpq   $0x0,-0x248(%rbp)
   10159:	00
   1015a:	0f 85 bb fc ff ff    	jne    fe1b <codegen_builtin_write+0x1dd>
   10160:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
   10167:	00 00 00 00
   1016b:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   10172:	00 00 00 00
   10176:	48 c7 85 40 ff ff ff 	movq   $0x0,-0xc0(%rbp)
   1017d:	00 00 00 00
   10181:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
   10188:	00 00 00 00
   1018c:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
   10193:	00 00 00 00
   10197:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
   1019e:	00 00 00 00
   101a2:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
   101a9:	00 00 00 00
   101ad:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   101b4:	00 00 00 00
   101b8:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
   101bf:	00 00 00 00
   101c3:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
   101ca:	00 00 00 00
   101ce:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   101d5:	00
   101d6:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
   101dd:	00
   101de:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   101e5:	00
   101e6:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   101ed:	00
   101ee:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
   101f5:	00
   101f6:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   101fd:	00
   101fe:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   10205:	00
   10206:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   1020d:	00
   1020e:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   10215:	00
   10216:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   1021d:	00
   1021e:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   10225:	00
   10226:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1022d:	00
   1022e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   10235:	00
   10236:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1023d:	00
   1023e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   10245:	00
   10246:	c7 85 b0 fd ff ff 00 	movl   $0x0,-0x250(%rbp)
   1024d:	00 00 00
   10250:	e9 a7 00 00 00       	jmp    102fc <codegen_builtin_write+0x6be>
   10255:	8b 85 b0 fd ff ff    	mov    -0x250(%rbp),%eax
   1025b:	48 98                	cltq
   1025d:	0f b6 84 05 60 fe ff 	movzbl -0x1a0(%rbp,%rax,1),%eax
   10264:	ff
   10265:	3c 0a                	cmp    $0xa,%al
   10267:	75 27                	jne    10290 <codegen_builtin_write+0x652>
   10269:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   10270:	48 89 c7             	mov    %rax,%rdi
   10273:	e8 a8 20 ff ff       	call   2320 <strlen@plt>
   10278:	48 89 c2             	mov    %rax,%rdx
   1027b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   10282:	48 01 d0             	add    %rdx,%rax
   10285:	66 c7 00 5c 6e       	movw   $0x6e5c,(%rax)
   1028a:	c6 40 02 00          	movb   $0x0,0x2(%rax)
   1028e:	eb 65                	jmp    102f5 <codegen_builtin_write+0x6b7>
   10290:	8b 85 b0 fd ff ff    	mov    -0x250(%rbp),%eax
   10296:	48 98                	cltq
   10298:	0f b6 84 05 60 fe ff 	movzbl -0x1a0(%rbp,%rax,1),%eax
   1029f:	ff
   102a0:	3c 22                	cmp    $0x22,%al
   102a2:	75 27                	jne    102cb <codegen_builtin_write+0x68d>
   102a4:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   102ab:	48 89 c7             	mov    %rax,%rdi
   102ae:	e8 6d 20 ff ff       	call   2320 <strlen@plt>
   102b3:	48 89 c2             	mov    %rax,%rdx
   102b6:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   102bd:	48 01 d0             	add    %rdx,%rax
   102c0:	66 c7 00 5c 22       	movw   $0x225c,(%rax)
   102c5:	c6 40 02 00          	movb   $0x0,0x2(%rax)
   102c9:	eb 2a                	jmp    102f5 <codegen_builtin_write+0x6b7>
   102cb:	48 8d 95 60 fe ff ff 	lea    -0x1a0(%rbp),%rdx
   102d2:	8b 85 b0 fd ff ff    	mov    -0x250(%rbp),%eax
   102d8:	48 98                	cltq
   102da:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   102de:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   102e5:	ba 01 00 00 00       	mov    $0x1,%edx
   102ea:	48 89 ce             	mov    %rcx,%rsi
   102ed:	48 89 c7             	mov    %rax,%rdi
   102f0:	e8 8b 20 ff ff       	call   2380 <strncat@plt>
   102f5:	83 85 b0 fd ff ff 01 	addl   $0x1,-0x250(%rbp)
   102fc:	8b 85 b0 fd ff ff    	mov    -0x250(%rbp),%eax
   10302:	48 98                	cltq
   10304:	0f b6 84 05 60 fe ff 	movzbl -0x1a0(%rbp,%rax,1),%eax
   1030b:	ff
   1030c:	84 c0                	test   %al,%al
   1030e:	0f 85 41 ff ff ff    	jne    10255 <codegen_builtin_write+0x617>
   10314:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1031b:	48 89 c7             	mov    %rax,%rdi
   1031e:	e8 fd 1f ff ff       	call   2320 <strlen@plt>
   10323:	48 83 e8 01          	sub    $0x1,%rax
   10327:	0f b6 84 05 30 ff ff 	movzbl -0xd0(%rbp,%rax,1),%eax
   1032e:	ff
   1032f:	3c 0a                	cmp    $0xa,%al
   10331:	74 4a                	je     1037d <codegen_builtin_write+0x73f>
   10333:	48 8b 05 26 0d 01 00 	mov    0x10d26(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1033a:	48 89 c1             	mov    %rax,%rcx
   1033d:	ba 27 00 00 00       	mov    $0x27,%edx
   10342:	be 01 00 00 00       	mov    $0x1,%esi
   10347:	48 8d 05 d2 b0 00 00 	lea    0xb0d2(%rip),%rax        # 1b420 <__PRETTY_FUNCTION__.0+0x6f0>
   1034e:	48 89 c7             	mov    %rax,%rdi
   10351:	e8 3a 21 ff ff       	call   2490 <fwrite@plt>
   10356:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1035d:	48 89 c7             	mov    %rax,%rdi
   10360:	e8 bb 1f ff ff       	call   2320 <strlen@plt>
   10365:	48 89 c2             	mov    %rax,%rdx
   10368:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1036f:	48 01 d0             	add    %rdx,%rax
   10372:	66 c7 00 5c 6e       	movw   $0x6e5c,(%rax)
   10377:	c6 40 02 00          	movb   $0x0,0x2(%rax)
   1037b:	eb 23                	jmp    103a0 <codegen_builtin_write+0x762>
   1037d:	48 8b 05 dc 0c 01 00 	mov    0x10cdc(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10384:	48 89 c1             	mov    %rax,%rcx
   10387:	ba 2f 00 00 00       	mov    $0x2f,%edx
   1038c:	be 01 00 00 00       	mov    $0x1,%esi
   10391:	48 8d 05 b0 b0 00 00 	lea    0xb0b0(%rip),%rax        # 1b448 <__PRETTY_FUNCTION__.0+0x718>
   10398:	48 89 c7             	mov    %rax,%rdi
   1039b:	e8 f0 20 ff ff       	call   2490 <fwrite@plt>
   103a0:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
   103a7:	8b 95 a8 fd ff ff    	mov    -0x258(%rbp),%edx
   103ad:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   103b4:	49 89 c8             	mov    %rcx,%r8
   103b7:	89 d1                	mov    %edx,%ecx
   103b9:	48 8d 15 b8 b0 00 00 	lea    0xb0b8(%rip),%rdx        # 1b478 <__PRETTY_FUNCTION__.0+0x748>
   103c0:	be 64 00 00 00       	mov    $0x64,%esi
   103c5:	48 89 c7             	mov    %rax,%rdi
   103c8:	b8 00 00 00 00       	mov    $0x0,%eax
   103cd:	e8 6e 1f ff ff       	call   2340 <snprintf@plt>
   103d2:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   103d9:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   103e0:	48 89 d6             	mov    %rdx,%rsi
   103e3:	48 89 c7             	mov    %rax,%rdi
   103e6:	e8 d2 e4 ff ff       	call   e8bd <add_inst>
   103eb:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   103f2:	8b 95 a8 fd ff ff    	mov    -0x258(%rbp),%edx
   103f8:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   103ff:	89 d1                	mov    %edx,%ecx
   10401:	48 8d 15 a1 b0 00 00 	lea    0xb0a1(%rip),%rdx        # 1b4a9 <__PRETTY_FUNCTION__.0+0x779>
   10408:	be 64 00 00 00       	mov    $0x64,%esi
   1040d:	48 89 c7             	mov    %rax,%rdi
   10410:	b8 00 00 00 00       	mov    $0x0,%eax
   10415:	e8 26 1f ff ff       	call   2340 <snprintf@plt>
   1041a:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   10421:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   10428:	48 89 d6             	mov    %rdx,%rsi
   1042b:	48 89 c7             	mov    %rax,%rdi
   1042e:	e8 8a e4 ff ff       	call   e8bd <add_inst>
   10433:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   1043a:	8b 85 ac fd ff ff    	mov    -0x254(%rbp),%eax
   10440:	89 85 b4 fd ff ff    	mov    %eax,-0x24c(%rbp)
   10446:	e9 e5 00 00 00       	jmp    10530 <codegen_builtin_write+0x8f2>
   1044b:	48 8b 05 0e 0c 01 00 	mov    0x10c0e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10452:	8b 95 b4 fd ff ff    	mov    -0x24c(%rbp),%edx
   10458:	48 8d 0d 69 b0 00 00 	lea    0xb069(%rip),%rcx        # 1b4c8 <__PRETTY_FUNCTION__.0+0x798>
   1045f:	48 89 ce             	mov    %rcx,%rsi
   10462:	48 89 c7             	mov    %rax,%rdi
   10465:	b8 00 00 00 00       	mov    $0x0,%eax
   1046a:	e8 61 1f ff ff       	call   23d0 <fprintf@plt>
   1046f:	83 bd b4 fd ff ff 01 	cmpl   $0x1,-0x24c(%rbp)
   10476:	74 2d                	je     104a5 <codegen_builtin_write+0x867>
   10478:	83 bd b4 fd ff ff 02 	cmpl   $0x2,-0x24c(%rbp)
   1047f:	74 1b                	je     1049c <codegen_builtin_write+0x85e>
   10481:	83 bd b4 fd ff ff 03 	cmpl   $0x3,-0x24c(%rbp)
   10488:	75 09                	jne    10493 <codegen_builtin_write+0x855>
   1048a:	48 8d 05 56 b0 00 00 	lea    0xb056(%rip),%rax        # 1b4e7 <__PRETTY_FUNCTION__.0+0x7b7>
   10491:	eb 19                	jmp    104ac <codegen_builtin_write+0x86e>
   10493:	48 8d 05 53 b0 00 00 	lea    0xb053(%rip),%rax        # 1b4ed <__PRETTY_FUNCTION__.0+0x7bd>
   1049a:	eb 10                	jmp    104ac <codegen_builtin_write+0x86e>
   1049c:	48 8d 05 50 b0 00 00 	lea    0xb050(%rip),%rax        # 1b4f3 <__PRETTY_FUNCTION__.0+0x7c3>
   104a3:	eb 07                	jmp    104ac <codegen_builtin_write+0x86e>
   104a5:	48 8d 05 4d b0 00 00 	lea    0xb04d(%rip),%rax        # 1b4f9 <__PRETTY_FUNCTION__.0+0x7c9>
   104ac:	48 89 85 c0 fd ff ff 	mov    %rax,-0x240(%rbp)
   104b3:	48 8b 05 a6 0b 01 00 	mov    0x10ba6(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   104ba:	8b 8d b4 fd ff ff    	mov    -0x24c(%rbp),%ecx
   104c0:	48 8b 95 c0 fd ff ff 	mov    -0x240(%rbp),%rdx
   104c7:	48 8d 35 32 b0 00 00 	lea    0xb032(%rip),%rsi        # 1b500 <__PRETTY_FUNCTION__.0+0x7d0>
   104ce:	48 89 c7             	mov    %rax,%rdi
   104d1:	b8 00 00 00 00       	mov    $0x0,%eax
   104d6:	e8 f5 1e ff ff       	call   23d0 <fprintf@plt>
   104db:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
   104e2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   104e6:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   104ed:	48 89 d1             	mov    %rdx,%rcx
   104f0:	48 8d 15 33 b0 00 00 	lea    0xb033(%rip),%rdx        # 1b52a <__PRETTY_FUNCTION__.0+0x7fa>
   104f7:	be 64 00 00 00       	mov    $0x64,%esi
   104fc:	48 89 c7             	mov    %rax,%rdi
   104ff:	b8 00 00 00 00       	mov    $0x0,%eax
   10504:	e8 37 1e ff ff       	call   2340 <snprintf@plt>
   10509:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   10510:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   10517:	48 89 d6             	mov    %rdx,%rsi
   1051a:	48 89 c7             	mov    %rax,%rdi
   1051d:	e8 9b e3 ff ff       	call   e8bd <add_inst>
   10522:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   10529:	83 ad b4 fd ff ff 01 	subl   $0x1,-0x24c(%rbp)
   10530:	83 bd b4 fd ff ff 00 	cmpl   $0x0,-0x24c(%rbp)
   10537:	0f 8f 0e ff ff ff    	jg     1044b <codegen_builtin_write+0x80d>
   1053d:	48 8b 05 1c 0b 01 00 	mov    0x10b1c(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10544:	48 89 c1             	mov    %rax,%rcx
   10547:	ba 1f 00 00 00       	mov    $0x1f,%edx
   1054c:	be 01 00 00 00       	mov    $0x1,%esi
   10551:	48 8d 05 e0 af 00 00 	lea    0xafe0(%rip),%rax        # 1b538 <__PRETTY_FUNCTION__.0+0x808>
   10558:	48 89 c7             	mov    %rax,%rdi
   1055b:	e8 30 1f ff ff       	call   2490 <fwrite@plt>
   10560:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   10567:	48 8d 15 15 a9 00 00 	lea    0xa915(%rip),%rdx        # 1ae83 <__PRETTY_FUNCTION__.0+0x153>
   1056e:	be 64 00 00 00       	mov    $0x64,%esi
   10573:	48 89 c7             	mov    %rax,%rdi
   10576:	b8 00 00 00 00       	mov    $0x0,%eax
   1057b:	e8 c0 1d ff ff       	call   2340 <snprintf@plt>
   10580:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   10587:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   1058e:	48 89 d6             	mov    %rdx,%rsi
   10591:	48 89 c7             	mov    %rax,%rdi
   10594:	e8 24 e3 ff ff       	call   e8bd <add_inst>
   10599:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   105a0:	48 8b 05 b9 0a 01 00 	mov    0x10ab9(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   105a7:	48 89 c1             	mov    %rax,%rcx
   105aa:	ba 16 00 00 00       	mov    $0x16,%edx
   105af:	be 01 00 00 00       	mov    $0x1,%esi
   105b4:	48 8d 05 9d af 00 00 	lea    0xaf9d(%rip),%rax        # 1b558 <__PRETTY_FUNCTION__.0+0x828>
   105bb:	48 89 c7             	mov    %rax,%rdi
   105be:	e8 cd 1e ff ff       	call   2490 <fwrite@plt>
   105c3:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   105ca:	48 8d 15 9e af 00 00 	lea    0xaf9e(%rip),%rdx        # 1b56f <__PRETTY_FUNCTION__.0+0x83f>
   105d1:	be 64 00 00 00       	mov    $0x64,%esi
   105d6:	48 89 c7             	mov    %rax,%rdi
   105d9:	b8 00 00 00 00       	mov    $0x0,%eax
   105de:	e8 5d 1d ff ff       	call   2340 <snprintf@plt>
   105e3:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   105ea:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   105f1:	48 89 d6             	mov    %rdx,%rsi
   105f4:	48 89 c7             	mov    %rax,%rdi
   105f7:	e8 c1 e2 ff ff       	call   e8bd <add_inst>
   105fc:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   10603:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   1060a:	48 8d 15 6f af 00 00 	lea    0xaf6f(%rip),%rdx        # 1b580 <__PRETTY_FUNCTION__.0+0x850>
   10611:	be 64 00 00 00       	mov    $0x64,%esi
   10616:	48 89 c7             	mov    %rax,%rdi
   10619:	b8 00 00 00 00       	mov    $0x0,%eax
   1061e:	e8 1d 1d ff ff       	call   2340 <snprintf@plt>
   10623:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   1062a:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   10631:	48 89 d6             	mov    %rdx,%rsi
   10634:	48 89 c7             	mov    %rax,%rdi
   10637:	e8 81 e2 ff ff       	call   e8bd <add_inst>
   1063c:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   10643:	48 8b 05 16 0a 01 00 	mov    0x10a16(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1064a:	48 89 c1             	mov    %rax,%rcx
   1064d:	ba 20 00 00 00       	mov    $0x20,%edx
   10652:	be 01 00 00 00       	mov    $0x1,%esi
   10657:	48 8d 05 32 af 00 00 	lea    0xaf32(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.0+0x860>
   1065e:	48 89 c7             	mov    %rax,%rdi
   10661:	e8 2a 1e ff ff       	call   2490 <fwrite@plt>
   10666:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   1066d:	48 8d 15 3d af 00 00 	lea    0xaf3d(%rip),%rdx        # 1b5b1 <__PRETTY_FUNCTION__.0+0x881>
   10674:	be 64 00 00 00       	mov    $0x64,%esi
   10679:	48 89 c7             	mov    %rax,%rdi
   1067c:	b8 00 00 00 00       	mov    $0x0,%eax
   10681:	e8 ba 1c ff ff       	call   2340 <snprintf@plt>
   10686:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   1068d:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   10694:	48 89 d6             	mov    %rdx,%rsi
   10697:	48 89 c7             	mov    %rax,%rdi
   1069a:	e8 1e e2 ff ff       	call   e8bd <add_inst>
   1069f:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
   106a6:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
   106ad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   106b1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   106b8:	00 00
   106ba:	74 05                	je     106c1 <codegen_builtin_write+0xa83>
   106bc:	e8 6f 1c ff ff       	call   2330 <__stack_chk_fail@plt>
   106c1:	c9                   	leave
   106c2:	c3                   	ret

00000000000106c3 <codegen_builtin_writeln>:
   106c3:	f3 0f 1e fa          	endbr64
   106c7:	55                   	push   %rbp
   106c8:	48 89 e5             	mov    %rsp,%rbp
   106cb:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
   106d2:	48 89 bd d8 fb ff ff 	mov    %rdi,-0x428(%rbp)
   106d9:	48 89 b5 d0 fb ff ff 	mov    %rsi,-0x430(%rbp)
   106e0:	48 89 95 c8 fb ff ff 	mov    %rdx,-0x438(%rbp)
   106e7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   106ee:	00 00
   106f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   106f4:	31 c0                	xor    %eax,%eax
   106f6:	48 83 bd d8 fb ff ff 	cmpq   $0x0,-0x428(%rbp)
   106fd:	00
   106fe:	0f 84 08 01 00 00    	je     1080c <codegen_builtin_writeln+0x149>
   10704:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
   1070b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1070f:	8b 40 04             	mov    0x4(%rax),%eax
   10712:	83 f8 09             	cmp    $0x9,%eax
   10715:	0f 85 f1 00 00 00    	jne    1080c <codegen_builtin_writeln+0x149>
   1071b:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
   10722:	48 8b 40 08          	mov    0x8(%rax),%rax
   10726:	48 8b 40 08          	mov    0x8(%rax),%rax
   1072a:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
   10731:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
   10738:	48 89 c7             	mov    %rax,%rdi
   1073b:	e8 e0 1b ff ff       	call   2320 <strlen@plt>
   10740:	89 85 e0 fb ff ff    	mov    %eax,-0x420(%rbp)
   10746:	48 8b 8d e8 fb ff ff 	mov    -0x418(%rbp),%rcx
   1074d:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   10754:	ba 00 02 00 00       	mov    $0x200,%edx
   10759:	48 89 ce             	mov    %rcx,%rsi
   1075c:	48 89 c7             	mov    %rax,%rdi
   1075f:	e8 8d 18 00 00       	call   11ff1 <escape_string>
   10764:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   1076b:	48 89 c7             	mov    %rax,%rdi
   1076e:	e8 ad 1b ff ff       	call   2320 <strlen@plt>
   10773:	83 c0 01             	add    $0x1,%eax
   10776:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
   1077c:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   10783:	48 89 c7             	mov    %rax,%rdi
   10786:	e8 95 1b ff ff       	call   2320 <strlen@plt>
   1078b:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1078f:	8b 3d 9b 08 01 00    	mov    0x1089b(%rip),%edi        # 21030 <write_label_counter>
   10795:	8b 15 95 08 01 00    	mov    0x10895(%rip),%edx        # 21030 <write_label_counter>
   1079b:	48 8d b5 f0 fb ff ff 	lea    -0x410(%rbp),%rsi
   107a2:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   107a9:	48 83 ec 08          	sub    $0x8,%rsp
   107ad:	51                   	push   %rcx
   107ae:	41 89 f9             	mov    %edi,%r9d
   107b1:	49 89 f0             	mov    %rsi,%r8
   107b4:	89 d1                	mov    %edx,%ecx
   107b6:	48 8d 15 0b ae 00 00 	lea    0xae0b(%rip),%rdx        # 1b5c8 <__PRETTY_FUNCTION__.0+0x898>
   107bd:	be 00 02 00 00       	mov    $0x200,%esi
   107c2:	48 89 c7             	mov    %rax,%rdi
   107c5:	b8 00 00 00 00       	mov    $0x0,%eax
   107ca:	e8 71 1b ff ff       	call   2340 <snprintf@plt>
   107cf:	48 83 c4 10          	add    $0x10,%rsp
   107d3:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   107da:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
   107e1:	48 89 d6             	mov    %rdx,%rsi
   107e4:	48 89 c7             	mov    %rax,%rdi
   107e7:	e8 d1 e0 ff ff       	call   e8bd <add_inst>
   107ec:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
   107f3:	8b 05 37 08 01 00    	mov    0x10837(%rip),%eax        # 21030 <write_label_counter>
   107f9:	83 c0 01             	add    $0x1,%eax
   107fc:	89 05 2e 08 01 00    	mov    %eax,0x1082e(%rip)        # 21030 <write_label_counter>
   10802:	90                   	nop
   10803:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
   1080a:	eb 20                	jmp    1082c <codegen_builtin_writeln+0x169>
   1080c:	48 8b 95 c8 fb ff ff 	mov    -0x438(%rbp),%rdx
   10813:	48 8b 8d d0 fb ff ff 	mov    -0x430(%rbp),%rcx
   1081a:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
   10821:	48 89 ce             	mov    %rcx,%rsi
   10824:	48 89 c7             	mov    %rax,%rdi
   10827:	e8 12 f4 ff ff       	call   fc3e <codegen_builtin_write>
   1082c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10830:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10837:	00 00
   10839:	74 05                	je     10840 <codegen_builtin_writeln+0x17d>
   1083b:	e8 f0 1a ff ff       	call   2330 <__stack_chk_fail@plt>
   10840:	c9                   	leave
   10841:	c3                   	ret

0000000000010842 <codegen_builtin_read>:
   10842:	f3 0f 1e fa          	endbr64
   10846:	55                   	push   %rbp
   10847:	48 89 e5             	mov    %rsp,%rbp
   1084a:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   10851:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   10858:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   1085f:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   10866:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1086d:	00 00
   1086f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10873:	31 c0                	xor    %eax,%eax
   10875:	48 8b 05 e4 07 01 00 	mov    0x107e4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1087c:	48 89 c1             	mov    %rax,%rcx
   1087f:	ba 1f 00 00 00       	mov    $0x1f,%edx
   10884:	be 01 00 00 00       	mov    $0x1,%esi
   10889:	48 8d 05 c0 ad 00 00 	lea    0xadc0(%rip),%rax        # 1b650 <__PRETTY_FUNCTION__.0+0x920>
   10890:	48 89 c7             	mov    %rax,%rdi
   10893:	e8 f8 1b ff ff       	call   2490 <fwrite@plt>
   10898:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1089f:	00
   108a0:	0f 84 ea 01 00 00    	je     10a90 <codegen_builtin_read+0x24e>
   108a6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   108ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   108b1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   108b8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   108bf:	8b 40 04             	mov    0x4(%rax),%eax
   108c2:	83 f8 04             	cmp    $0x4,%eax
   108c5:	74 28                	je     108ef <codegen_builtin_read+0xad>
   108c7:	48 8d 05 d2 b3 00 00 	lea    0xb3d2(%rip),%rax        # 1bca0 <__PRETTY_FUNCTION__.8>
   108ce:	48 89 c1             	mov    %rax,%rcx
   108d1:	ba 16 03 00 00       	mov    $0x316,%edx
   108d6:	48 8d 05 e3 a5 00 00 	lea    0xa5e3(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   108dd:	48 89 c6             	mov    %rax,%rsi
   108e0:	48 8d 05 89 ad 00 00 	lea    0xad89(%rip),%rax        # 1b670 <__PRETTY_FUNCTION__.0+0x940>
   108e7:	48 89 c7             	mov    %rax,%rdi
   108ea:	e8 61 1a ff ff       	call   2350 <__assert_fail@plt>
   108ef:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   108f6:	48 8b 40 08          	mov    0x8(%rax),%rax
   108fa:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   108fe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10902:	48 89 c7             	mov    %rax,%rdi
   10905:	e8 97 20 00 00       	call   129a1 <find_label>
   1090a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1090e:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   10913:	75 2c                	jne    10941 <codegen_builtin_read+0xff>
   10915:	48 8b 05 44 07 01 00 	mov    0x10744(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1091c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   10920:	48 8d 0d 69 ad 00 00 	lea    0xad69(%rip),%rcx        # 1b690 <__PRETTY_FUNCTION__.0+0x960>
   10927:	48 89 ce             	mov    %rcx,%rsi
   1092a:	48 89 c7             	mov    %rax,%rdi
   1092d:	b8 00 00 00 00       	mov    $0x0,%eax
   10932:	e8 99 1a ff ff       	call   23d0 <fprintf@plt>
   10937:	bf 01 00 00 00       	mov    $0x1,%edi
   1093c:	e8 3f 1b ff ff       	call   2480 <exit@plt>
   10941:	8b 05 e9 06 01 00    	mov    0x106e9(%rip),%eax        # 21030 <write_label_counter>
   10947:	8d 50 01             	lea    0x1(%rax),%edx
   1094a:	89 15 e0 06 01 00    	mov    %edx,0x106e0(%rip)        # 21030 <write_label_counter>
   10950:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   10956:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
   1095c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10960:	89 d1                	mov    %edx,%ecx
   10962:	48 8d 15 57 ad 00 00 	lea    0xad57(%rip),%rdx        # 1b6c0 <__PRETTY_FUNCTION__.0+0x990>
   10969:	be 64 00 00 00       	mov    $0x64,%esi
   1096e:	48 89 c7             	mov    %rax,%rdi
   10971:	b8 00 00 00 00       	mov    $0x0,%eax
   10976:	e8 c5 19 ff ff       	call   2340 <snprintf@plt>
   1097b:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   1097f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10986:	48 89 d6             	mov    %rdx,%rsi
   10989:	48 89 c7             	mov    %rax,%rdi
   1098c:	e8 2c df ff ff       	call   e8bd <add_inst>
   10991:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   10998:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
   1099e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   109a2:	89 d1                	mov    %edx,%ecx
   109a4:	48 8d 15 fe aa 00 00 	lea    0xaafe(%rip),%rdx        # 1b4a9 <__PRETTY_FUNCTION__.0+0x779>
   109ab:	be 64 00 00 00       	mov    $0x64,%esi
   109b0:	48 89 c7             	mov    %rax,%rdi
   109b3:	b8 00 00 00 00       	mov    $0x0,%eax
   109b8:	e8 83 19 ff ff       	call   2340 <snprintf@plt>
   109bd:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   109c1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   109c8:	48 89 d6             	mov    %rdx,%rsi
   109cb:	48 89 c7             	mov    %rax,%rdi
   109ce:	e8 ea de ff ff       	call   e8bd <add_inst>
   109d3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   109da:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   109de:	8b 10                	mov    (%rax),%edx
   109e0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   109e4:	89 d1                	mov    %edx,%ecx
   109e6:	48 8d 15 03 ad 00 00 	lea    0xad03(%rip),%rdx        # 1b6f0 <__PRETTY_FUNCTION__.0+0x9c0>
   109ed:	be 64 00 00 00       	mov    $0x64,%esi
   109f2:	48 89 c7             	mov    %rax,%rdi
   109f5:	b8 00 00 00 00       	mov    $0x0,%eax
   109fa:	e8 41 19 ff ff       	call   2340 <snprintf@plt>
   109ff:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10a03:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10a0a:	48 89 d6             	mov    %rdx,%rsi
   10a0d:	48 89 c7             	mov    %rax,%rdi
   10a10:	e8 a8 de ff ff       	call   e8bd <add_inst>
   10a15:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   10a1c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10a20:	48 8d 15 48 ab 00 00 	lea    0xab48(%rip),%rdx        # 1b56f <__PRETTY_FUNCTION__.0+0x83f>
   10a27:	be 64 00 00 00       	mov    $0x64,%esi
   10a2c:	48 89 c7             	mov    %rax,%rdi
   10a2f:	b8 00 00 00 00       	mov    $0x0,%eax
   10a34:	e8 07 19 ff ff       	call   2340 <snprintf@plt>
   10a39:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10a3d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10a44:	48 89 d6             	mov    %rdx,%rsi
   10a47:	48 89 c7             	mov    %rax,%rdi
   10a4a:	e8 6e de ff ff       	call   e8bd <add_inst>
   10a4f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   10a56:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10a5a:	48 8d 15 a8 ac 00 00 	lea    0xaca8(%rip),%rdx        # 1b709 <__PRETTY_FUNCTION__.0+0x9d9>
   10a61:	be 64 00 00 00       	mov    $0x64,%esi
   10a66:	48 89 c7             	mov    %rax,%rdi
   10a69:	b8 00 00 00 00       	mov    $0x0,%eax
   10a6e:	e8 cd 18 ff ff       	call   2340 <snprintf@plt>
   10a73:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10a77:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10a7e:	48 89 d6             	mov    %rdx,%rsi
   10a81:	48 89 c7             	mov    %rax,%rdi
   10a84:	e8 34 de ff ff       	call   e8bd <add_inst>
   10a89:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   10a90:	48 8b 05 c9 05 01 00 	mov    0x105c9(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10a97:	48 89 c1             	mov    %rax,%rcx
   10a9a:	ba 1e 00 00 00       	mov    $0x1e,%edx
   10a9f:	be 01 00 00 00       	mov    $0x1,%esi
   10aa4:	48 8d 05 7d ac 00 00 	lea    0xac7d(%rip),%rax        # 1b728 <__PRETTY_FUNCTION__.0+0x9f8>
   10aab:	48 89 c7             	mov    %rax,%rdi
   10aae:	e8 dd 19 ff ff       	call   2490 <fwrite@plt>
   10ab3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10aba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10abe:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10ac5:	00 00
   10ac7:	74 05                	je     10ace <codegen_builtin_read+0x28c>
   10ac9:	e8 62 18 ff ff       	call   2330 <__stack_chk_fail@plt>
   10ace:	c9                   	leave
   10acf:	c3                   	ret

0000000000010ad0 <codegen_simple_relop>:
   10ad0:	f3 0f 1e fa          	endbr64
   10ad4:	55                   	push   %rbp
   10ad5:	48 89 e5             	mov    %rsp,%rbp
   10ad8:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   10adf:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   10ae6:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   10aed:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   10af4:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   10afb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b02:	00 00
   10b04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b08:	31 c0                	xor    %eax,%eax
   10b0a:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   10b11:	00
   10b12:	75 28                	jne    10b3c <codegen_simple_relop+0x6c>
   10b14:	48 8d 05 a5 b1 00 00 	lea    0xb1a5(%rip),%rax        # 1bcc0 <__PRETTY_FUNCTION__.7>
   10b1b:	48 89 c1             	mov    %rax,%rcx
   10b1e:	ba 38 03 00 00       	mov    $0x338,%edx
   10b23:	48 8d 05 96 a3 00 00 	lea    0xa396(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   10b2a:	48 89 c6             	mov    %rax,%rsi
   10b2d:	48 8d 05 bb a6 00 00 	lea    0xa6bb(%rip),%rax        # 1b1ef <__PRETTY_FUNCTION__.0+0x4bf>
   10b34:	48 89 c7             	mov    %rax,%rdi
   10b37:	e8 14 18 ff ff       	call   2350 <__assert_fail@plt>
   10b3c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10b43:	8b 40 04             	mov    0x4(%rax),%eax
   10b46:	85 c0                	test   %eax,%eax
   10b48:	74 28                	je     10b72 <codegen_simple_relop+0xa2>
   10b4a:	48 8d 05 6f b1 00 00 	lea    0xb16f(%rip),%rax        # 1bcc0 <__PRETTY_FUNCTION__.7>
   10b51:	48 89 c1             	mov    %rax,%rcx
   10b54:	ba 39 03 00 00       	mov    $0x339,%edx
   10b59:	48 8d 05 60 a3 00 00 	lea    0xa360(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   10b60:	48 89 c6             	mov    %rax,%rsi
   10b63:	48 8d 05 dd ab 00 00 	lea    0xabdd(%rip),%rax        # 1b747 <__PRETTY_FUNCTION__.0+0xa17>
   10b6a:	48 89 c7             	mov    %rax,%rdi
   10b6d:	e8 de 17 ff ff       	call   2350 <__assert_fail@plt>
   10b72:	48 8b 05 e7 04 01 00 	mov    0x104e7(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10b79:	48 89 c1             	mov    %rax,%rcx
   10b7c:	ba 1f 00 00 00       	mov    $0x1f,%edx
   10b81:	be 01 00 00 00       	mov    $0x1,%esi
   10b86:	48 8d 05 d3 ab 00 00 	lea    0xabd3(%rip),%rax        # 1b760 <__PRETTY_FUNCTION__.0+0xa30>
   10b8d:	48 89 c7             	mov    %rax,%rdi
   10b90:	e8 fb 18 ff ff       	call   2490 <fwrite@plt>
   10b95:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10b9c:	8b 50 08             	mov    0x8(%rax),%edx
   10b9f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10ba6:	89 10                	mov    %edx,(%rax)
   10ba8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10baf:	48 8b 40 10          	mov    0x10(%rax),%rax
   10bb3:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   10bba:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   10bc1:	48 89 ce             	mov    %rcx,%rsi
   10bc4:	48 89 c7             	mov    %rax,%rdi
   10bc7:	e8 ac ed ff ff       	call   f978 <codegen_expr>
   10bcc:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   10bd3:	b8 00 00 00 00       	mov    $0x0,%eax
   10bd8:	e8 9d 1c 00 00       	call   1287a <get_reg_stack>
   10bdd:	48 89 c7             	mov    %rax,%rdi
   10be0:	e8 f9 24 00 00       	call   130de <pop_reg_stack>
   10be5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   10be9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10bf0:	48 8b 40 18          	mov    0x18(%rax),%rax
   10bf4:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   10bfb:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   10c02:	48 89 ce             	mov    %rcx,%rsi
   10c05:	48 89 c7             	mov    %rax,%rdi
   10c08:	e8 6b ed ff ff       	call   f978 <codegen_expr>
   10c0d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   10c14:	b8 00 00 00 00       	mov    $0x0,%eax
   10c19:	e8 5c 1c 00 00       	call   1287a <get_reg_stack>
   10c1e:	48 89 c7             	mov    %rax,%rdi
   10c21:	e8 6c 24 00 00       	call   13092 <front_reg_stack>
   10c26:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   10c2a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10c2e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10c32:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10c36:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10c3a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10c3e:	49 89 c8             	mov    %rcx,%r8
   10c41:	48 89 d1             	mov    %rdx,%rcx
   10c44:	48 8d 15 35 ab 00 00 	lea    0xab35(%rip),%rdx        # 1b780 <__PRETTY_FUNCTION__.0+0xa50>
   10c4b:	be 64 00 00 00       	mov    $0x64,%esi
   10c50:	48 89 c7             	mov    %rax,%rdi
   10c53:	b8 00 00 00 00       	mov    $0x0,%eax
   10c58:	e8 e3 16 ff ff       	call   2340 <snprintf@plt>
   10c5d:	b8 00 00 00 00       	mov    $0x0,%eax
   10c62:	e8 13 1c 00 00       	call   1287a <get_reg_stack>
   10c67:	48 89 c2             	mov    %rax,%rdx
   10c6a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10c6e:	48 89 c6             	mov    %rax,%rsi
   10c71:	48 89 d7             	mov    %rdx,%rdi
   10c74:	e8 54 22 00 00       	call   12ecd <push_reg_stack>
   10c79:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10c7d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10c84:	48 89 d6             	mov    %rdx,%rsi
   10c87:	48 89 c7             	mov    %rax,%rdi
   10c8a:	e8 2e dc ff ff       	call   e8bd <add_inst>
   10c8f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   10c96:	48 8b 05 c3 03 01 00 	mov    0x103c3(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10c9d:	48 89 c1             	mov    %rax,%rcx
   10ca0:	ba 1e 00 00 00       	mov    $0x1e,%edx
   10ca5:	be 01 00 00 00       	mov    $0x1,%esi
   10caa:	48 8d 05 df aa 00 00 	lea    0xaadf(%rip),%rax        # 1b790 <__PRETTY_FUNCTION__.0+0xa60>
   10cb1:	48 89 c7             	mov    %rax,%rdi
   10cb4:	e8 d7 17 ff ff       	call   2490 <fwrite@plt>
   10cb9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10cc0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10cc4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10ccb:	00 00
   10ccd:	74 05                	je     10cd4 <codegen_simple_relop+0x204>
   10ccf:	e8 5c 16 ff ff       	call   2330 <__stack_chk_fail@plt>
   10cd4:	c9                   	leave
   10cd5:	c3                   	ret

0000000000010cd6 <codegen_get_nonlocal>:
   10cd6:	f3 0f 1e fa          	endbr64
   10cda:	55                   	push   %rbp
   10cdb:	48 89 e5             	mov    %rsp,%rbp
   10cde:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   10ce5:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   10cec:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   10cf3:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   10cfa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10d01:	00 00
   10d03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10d07:	31 c0                	xor    %eax,%eax
   10d09:	48 8b 05 50 03 01 00 	mov    0x10350(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10d10:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   10d17:	48 8d 0d 92 aa 00 00 	lea    0xaa92(%rip),%rcx        # 1b7b0 <__PRETTY_FUNCTION__.0+0xa80>
   10d1e:	48 89 ce             	mov    %rcx,%rsi
   10d21:	48 89 c7             	mov    %rax,%rdi
   10d24:	b8 00 00 00 00       	mov    $0x0,%eax
   10d29:	e8 a2 16 ff ff       	call   23d0 <fprintf@plt>
   10d2e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d35:	48 89 c7             	mov    %rax,%rdi
   10d38:	e8 64 1c 00 00       	call   129a1 <find_label>
   10d3d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   10d41:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   10d46:	75 2f                	jne    10d77 <codegen_get_nonlocal+0xa1>
   10d48:	48 8b 05 11 03 01 00 	mov    0x10311(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10d4f:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   10d56:	48 8d 0d 83 aa 00 00 	lea    0xaa83(%rip),%rcx        # 1b7e0 <__PRETTY_FUNCTION__.0+0xab0>
   10d5d:	48 89 ce             	mov    %rcx,%rsi
   10d60:	48 89 c7             	mov    %rax,%rdi
   10d63:	b8 00 00 00 00       	mov    $0x0,%eax
   10d68:	e8 63 16 ff ff       	call   23d0 <fprintf@plt>
   10d6d:	bf 01 00 00 00       	mov    $0x1,%edi
   10d72:	e8 09 17 ff ff       	call   2480 <exit@plt>
   10d77:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10d7b:	8b 10                	mov    (%rax),%edx
   10d7d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10d84:	89 10                	mov    %edx,(%rax)
   10d86:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10d8a:	48 8d 15 7c aa 00 00 	lea    0xaa7c(%rip),%rdx        # 1b80d <__PRETTY_FUNCTION__.0+0xadd>
   10d91:	48 89 d1             	mov    %rdx,%rcx
   10d94:	48 8d 15 77 aa 00 00 	lea    0xaa77(%rip),%rdx        # 1b812 <__PRETTY_FUNCTION__.0+0xae2>
   10d9b:	be 64 00 00 00       	mov    $0x64,%esi
   10da0:	48 89 c7             	mov    %rax,%rdi
   10da3:	b8 00 00 00 00       	mov    $0x0,%eax
   10da8:	e8 93 15 ff ff       	call   2340 <snprintf@plt>
   10dad:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10db1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10db8:	48 89 d6             	mov    %rdx,%rsi
   10dbb:	48 89 c7             	mov    %rax,%rdi
   10dbe:	e8 fa da ff ff       	call   e8bd <add_inst>
   10dc3:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   10dca:	48 8b 05 8f 02 01 00 	mov    0x1028f(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10dd1:	48 89 c1             	mov    %rax,%rcx
   10dd4:	ba 22 00 00 00       	mov    $0x22,%edx
   10dd9:	be 01 00 00 00       	mov    $0x1,%esi
   10dde:	48 8d 05 43 aa 00 00 	lea    0xaa43(%rip),%rax        # 1b828 <__PRETTY_FUNCTION__.0+0xaf8>
   10de5:	48 89 c7             	mov    %rax,%rdi
   10de8:	e8 a3 16 ff ff       	call   2490 <fwrite@plt>
   10ded:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10df4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10df8:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10dff:	00 00
   10e01:	74 05                	je     10e08 <codegen_get_nonlocal+0x132>
   10e03:	e8 28 15 ff ff       	call   2330 <__stack_chk_fail@plt>
   10e08:	c9                   	leave
   10e09:	c3                   	ret

0000000000010e0a <codegen_stmt>:
   10e0a:	f3 0f 1e fa          	endbr64
   10e0e:	55                   	push   %rbp
   10e0f:	48 89 e5             	mov    %rsp,%rbp
   10e12:	48 83 ec 20          	sub    $0x20,%rsp
   10e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10e1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   10e22:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10e27:	75 28                	jne    10e51 <codegen_stmt+0x47>
   10e29:	48 8d 05 a8 ae 00 00 	lea    0xaea8(%rip),%rax        # 1bcd8 <__PRETTY_FUNCTION__.6>
   10e30:	48 89 c1             	mov    %rax,%rcx
   10e33:	ba 65 03 00 00       	mov    $0x365,%edx
   10e38:	48 8d 05 81 a0 00 00 	lea    0xa081(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   10e3f:	48 89 c6             	mov    %rax,%rsi
   10e42:	48 8d 05 02 aa 00 00 	lea    0xaa02(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   10e49:	48 89 c7             	mov    %rax,%rdi
   10e4c:	e8 ff 14 ff ff       	call   2350 <__assert_fail@plt>
   10e51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e55:	8b 40 04             	mov    0x4(%rax),%eax
   10e58:	83 f8 08             	cmp    $0x8,%eax
   10e5b:	0f 87 fa 00 00 00    	ja     10f5b <codegen_stmt+0x151>
   10e61:	89 c0                	mov    %eax,%eax
   10e63:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   10e6a:	00
   10e6b:	48 8d 05 1e aa 00 00 	lea    0xaa1e(%rip),%rax        # 1b890 <__PRETTY_FUNCTION__.0+0xb60>
   10e72:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   10e75:	48 98                	cltq
   10e77:	48 8d 15 12 aa 00 00 	lea    0xaa12(%rip),%rdx        # 1b890 <__PRETTY_FUNCTION__.0+0xb60>
   10e7e:	48 01 d0             	add    %rdx,%rax
   10e81:	3e ff e0             	notrack jmp *%rax
   10e84:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10e88:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e90:	48 89 ce             	mov    %rcx,%rsi
   10e93:	48 89 c7             	mov    %rax,%rdi
   10e96:	e8 bc 01 00 00       	call   11057 <codegen_var_assignment>
   10e9b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10e9f:	e9 e4 00 00 00       	jmp    10f88 <codegen_stmt+0x17e>
   10ea4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ea8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eb0:	48 89 ce             	mov    %rcx,%rsi
   10eb3:	48 89 c7             	mov    %rax,%rdi
   10eb6:	e8 d9 03 00 00       	call   11294 <codegen_proc_call>
   10ebb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10ebf:	e9 c4 00 00 00       	jmp    10f88 <codegen_stmt+0x17e>
   10ec4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ec8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ed0:	48 89 ce             	mov    %rcx,%rsi
   10ed3:	48 89 c7             	mov    %rax,%rdi
   10ed6:	e8 b3 00 00 00       	call   10f8e <codegen_compound_stmt>
   10edb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10edf:	e9 a4 00 00 00       	jmp    10f88 <codegen_stmt+0x17e>
   10ee4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ee8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ef0:	48 89 ce             	mov    %rcx,%rsi
   10ef3:	48 89 c7             	mov    %rax,%rdi
   10ef6:	e8 7b 06 00 00       	call   11576 <codegen_if_then>
   10efb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10eff:	e9 84 00 00 00       	jmp    10f88 <codegen_stmt+0x17e>
   10f04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10f08:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f10:	48 89 ce             	mov    %rcx,%rsi
   10f13:	48 89 c7             	mov    %rax,%rdi
   10f16:	e8 14 09 00 00       	call   1182f <codegen_while>
   10f1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10f1f:	eb 67                	jmp    10f88 <codegen_stmt+0x17e>
   10f21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10f25:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10f29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f2d:	48 89 ce             	mov    %rcx,%rsi
   10f30:	48 89 c7             	mov    %rax,%rdi
   10f33:	e8 27 0b 00 00       	call   11a5f <codegen_for>
   10f38:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10f3c:	eb 4a                	jmp    10f88 <codegen_stmt+0x17e>
   10f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f42:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10f46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10f4a:	48 89 d6             	mov    %rdx,%rsi
   10f4d:	48 89 c7             	mov    %rax,%rdi
   10f50:	e8 68 d9 ff ff       	call   e8bd <add_inst>
   10f55:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10f59:	eb 2d                	jmp    10f88 <codegen_stmt+0x17e>
   10f5b:	48 8b 05 fe 00 01 00 	mov    0x100fe(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   10f62:	48 89 c1             	mov    %rax,%rcx
   10f65:	ba 37 00 00 00       	mov    $0x37,%edx
   10f6a:	be 01 00 00 00       	mov    $0x1,%esi
   10f6f:	48 8d 05 e2 a8 00 00 	lea    0xa8e2(%rip),%rax        # 1b858 <__PRETTY_FUNCTION__.0+0xb28>
   10f76:	48 89 c7             	mov    %rax,%rdi
   10f79:	e8 12 15 ff ff       	call   2490 <fwrite@plt>
   10f7e:	bf 01 00 00 00       	mov    $0x1,%edi
   10f83:	e8 f8 14 ff ff       	call   2480 <exit@plt>
   10f88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10f8c:	c9                   	leave
   10f8d:	c3                   	ret

0000000000010f8e <codegen_compound_stmt>:
   10f8e:	f3 0f 1e fa          	endbr64
   10f92:	55                   	push   %rbp
   10f93:	48 89 e5             	mov    %rsp,%rbp
   10f96:	48 83 ec 30          	sub    $0x30,%rsp
   10f9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10f9e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10fa2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10fa6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   10fab:	75 28                	jne    10fd5 <codegen_compound_stmt+0x47>
   10fad:	48 8d 05 3c ad 00 00 	lea    0xad3c(%rip),%rax        # 1bcf0 <__PRETTY_FUNCTION__.5>
   10fb4:	48 89 c1             	mov    %rax,%rcx
   10fb7:	ba 93 03 00 00       	mov    $0x393,%edx
   10fbc:	48 8d 05 fd 9e 00 00 	lea    0x9efd(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   10fc3:	48 89 c6             	mov    %rax,%rsi
   10fc6:	48 8d 05 7e a8 00 00 	lea    0xa87e(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   10fcd:	48 89 c7             	mov    %rax,%rdi
   10fd0:	e8 7b 13 ff ff       	call   2350 <__assert_fail@plt>
   10fd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fd9:	8b 40 04             	mov    0x4(%rax),%eax
   10fdc:	83 f8 02             	cmp    $0x2,%eax
   10fdf:	74 28                	je     11009 <codegen_compound_stmt+0x7b>
   10fe1:	48 8d 05 08 ad 00 00 	lea    0xad08(%rip),%rax        # 1bcf0 <__PRETTY_FUNCTION__.5>
   10fe8:	48 89 c1             	mov    %rax,%rcx
   10feb:	ba 94 03 00 00       	mov    $0x394,%edx
   10ff0:	48 8d 05 c9 9e 00 00 	lea    0x9ec9(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   10ff7:	48 89 c6             	mov    %rax,%rsi
   10ffa:	48 8d 05 b7 a8 00 00 	lea    0xa8b7(%rip),%rax        # 1b8b8 <__PRETTY_FUNCTION__.0+0xb88>
   11001:	48 89 c7             	mov    %rax,%rdi
   11004:	e8 47 13 ff ff       	call   2350 <__assert_fail@plt>
   11009:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1100d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11011:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11015:	eb 33                	jmp    1104a <codegen_compound_stmt+0xbc>
   11017:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1101b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1101f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11023:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11027:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1102b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1102f:	48 89 ce             	mov    %rcx,%rsi
   11032:	48 89 c7             	mov    %rax,%rdi
   11035:	e8 d0 fd ff ff       	call   10e0a <codegen_stmt>
   1103a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1103e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11042:	48 8b 40 10          	mov    0x10(%rax),%rax
   11046:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1104a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1104f:	75 c6                	jne    11017 <codegen_compound_stmt+0x89>
   11051:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11055:	c9                   	leave
   11056:	c3                   	ret

0000000000011057 <codegen_var_assignment>:
   11057:	f3 0f 1e fa          	endbr64
   1105b:	55                   	push   %rbp
   1105c:	48 89 e5             	mov    %rsp,%rbp
   1105f:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   11066:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1106a:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   1106e:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   11075:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1107c:	00 00
   1107e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11082:	31 c0                	xor    %eax,%eax
   11084:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   11089:	75 28                	jne    110b3 <codegen_var_assignment+0x5c>
   1108b:	48 8d 05 7e ac 00 00 	lea    0xac7e(%rip),%rax        # 1bd10 <__PRETTY_FUNCTION__.4>
   11092:	48 89 c1             	mov    %rax,%rcx
   11095:	ba ab 03 00 00       	mov    $0x3ab,%edx
   1109a:	48 8d 05 1f 9e 00 00 	lea    0x9e1f(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   110a1:	48 89 c6             	mov    %rax,%rsi
   110a4:	48 8d 05 a0 a7 00 00 	lea    0xa7a0(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   110ab:	48 89 c7             	mov    %rax,%rdi
   110ae:	e8 9d 12 ff ff       	call   2350 <__assert_fail@plt>
   110b3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   110b7:	8b 40 04             	mov    0x4(%rax),%eax
   110ba:	85 c0                	test   %eax,%eax
   110bc:	74 28                	je     110e6 <codegen_var_assignment+0x8f>
   110be:	48 8d 05 4b ac 00 00 	lea    0xac4b(%rip),%rax        # 1bd10 <__PRETTY_FUNCTION__.4>
   110c5:	48 89 c1             	mov    %rax,%rcx
   110c8:	ba ac 03 00 00       	mov    $0x3ac,%edx
   110cd:	48 8d 05 ec 9d 00 00 	lea    0x9dec(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   110d4:	48 89 c6             	mov    %rax,%rsi
   110d7:	48 8d 05 00 a8 00 00 	lea    0xa800(%rip),%rax        # 1b8de <__PRETTY_FUNCTION__.0+0xbae>
   110de:	48 89 c7             	mov    %rax,%rdi
   110e1:	e8 6a 12 ff ff       	call   2350 <__assert_fail@plt>
   110e6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   110ea:	48 8b 40 08          	mov    0x8(%rax),%rax
   110ee:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   110f2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   110f6:	48 8b 40 10          	mov    0x10(%rax),%rax
   110fa:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   110fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11102:	8b 40 04             	mov    0x4(%rax),%eax
   11105:	83 f8 04             	cmp    $0x4,%eax
   11108:	74 28                	je     11132 <codegen_var_assignment+0xdb>
   1110a:	48 8d 05 ff ab 00 00 	lea    0xabff(%rip),%rax        # 1bd10 <__PRETTY_FUNCTION__.4>
   11111:	48 89 c1             	mov    %rax,%rcx
   11114:	ba b8 03 00 00       	mov    $0x3b8,%edx
   11119:	48 8d 05 a0 9d 00 00 	lea    0x9da0(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   11120:	48 89 c6             	mov    %rax,%rsi
   11123:	48 8d 05 d2 a7 00 00 	lea    0xa7d2(%rip),%rax        # 1b8fc <__PRETTY_FUNCTION__.0+0xbcc>
   1112a:	48 89 c7             	mov    %rax,%rdi
   1112d:	e8 1e 12 ff ff       	call   2350 <__assert_fail@plt>
   11132:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11136:	48 8b 40 08          	mov    0x8(%rax),%rax
   1113a:	48 89 c7             	mov    %rax,%rdi
   1113d:	e8 5f 18 00 00       	call   129a1 <find_label>
   11142:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   11146:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1114d:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   11151:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11155:	48 89 ce             	mov    %rcx,%rsi
   11158:	48 89 c7             	mov    %rax,%rdi
   1115b:	e8 18 e8 ff ff       	call   f978 <codegen_expr>
   11160:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   11164:	b8 00 00 00 00       	mov    $0x0,%eax
   11169:	e8 0c 17 00 00       	call   1287a <get_reg_stack>
   1116e:	48 89 c7             	mov    %rax,%rdi
   11171:	e8 1c 1f 00 00       	call   13092 <front_reg_stack>
   11176:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1117a:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1117f:	74 36                	je     111b7 <codegen_var_assignment+0x160>
   11181:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11185:	8b 08                	mov    (%rax),%ecx
   11187:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1118b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1118f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11193:	41 89 c8             	mov    %ecx,%r8d
   11196:	48 89 d1             	mov    %rdx,%rcx
   11199:	48 8d 15 df 9f 00 00 	lea    0x9fdf(%rip),%rdx        # 1b17f <__PRETTY_FUNCTION__.0+0x44f>
   111a0:	be 32 00 00 00       	mov    $0x32,%esi
   111a5:	48 89 c7             	mov    %rax,%rdi
   111a8:	b8 00 00 00 00       	mov    $0x0,%eax
   111ad:	e8 8e 11 ff ff       	call   2340 <snprintf@plt>
   111b2:	e9 b4 00 00 00       	jmp    1126b <codegen_var_assignment+0x214>
   111b7:	b8 00 00 00 00       	mov    $0x0,%eax
   111bc:	e8 f9 17 ff ff       	call   29ba <nonlocal_flag>
   111c1:	83 f8 01             	cmp    $0x1,%eax
   111c4:	75 55                	jne    1121b <codegen_var_assignment+0x1c4>
   111c6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   111ca:	48 8b 48 08          	mov    0x8(%rax),%rcx
   111ce:	48 8d 55 9c          	lea    -0x64(%rbp),%rdx
   111d2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   111d6:	48 89 ce             	mov    %rcx,%rsi
   111d9:	48 89 c7             	mov    %rax,%rdi
   111dc:	e8 f5 fa ff ff       	call   10cd6 <codegen_get_nonlocal>
   111e1:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   111e5:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
   111e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   111ec:	48 8b 10             	mov    (%rax),%rdx
   111ef:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   111f3:	4c 8d 0d 13 a6 00 00 	lea    0xa613(%rip),%r9        # 1b80d <__PRETTY_FUNCTION__.0+0xadd>
   111fa:	41 89 c8             	mov    %ecx,%r8d
   111fd:	48 89 d1             	mov    %rdx,%rcx
   11200:	48 8d 15 13 a7 00 00 	lea    0xa713(%rip),%rdx        # 1b91a <__PRETTY_FUNCTION__.0+0xbea>
   11207:	be 32 00 00 00       	mov    $0x32,%esi
   1120c:	48 89 c7             	mov    %rax,%rdi
   1120f:	b8 00 00 00 00       	mov    $0x0,%eax
   11214:	e8 27 11 ff ff       	call   2340 <snprintf@plt>
   11219:	eb 50                	jmp    1126b <codegen_var_assignment+0x214>
   1121b:	48 8b 05 3e fe 00 00 	mov    0xfe3e(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   11222:	48 89 c1             	mov    %rax,%rcx
   11225:	ba 33 00 00 00       	mov    $0x33,%edx
   1122a:	be 01 00 00 00       	mov    $0x1,%esi
   1122f:	48 8d 05 fa a6 00 00 	lea    0xa6fa(%rip),%rax        # 1b930 <__PRETTY_FUNCTION__.0+0xc00>
   11236:	48 89 c7             	mov    %rax,%rdi
   11239:	e8 52 12 ff ff       	call   2490 <fwrite@plt>
   1123e:	48 8b 05 1b fe 00 00 	mov    0xfe1b(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   11245:	48 89 c1             	mov    %rax,%rcx
   11248:	ba 33 00 00 00       	mov    $0x33,%edx
   1124d:	be 01 00 00 00       	mov    $0x1,%esi
   11252:	48 8d 05 0f a7 00 00 	lea    0xa70f(%rip),%rax        # 1b968 <__PRETTY_FUNCTION__.0+0xc38>
   11259:	48 89 c7             	mov    %rax,%rdi
   1125c:	e8 2f 12 ff ff       	call   2490 <fwrite@plt>
   11261:	bf 01 00 00 00       	mov    $0x1,%edi
   11266:	e8 15 12 ff ff       	call   2480 <exit@plt>
   1126b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1126f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11273:	48 89 d6             	mov    %rdx,%rsi
   11276:	48 89 c7             	mov    %rax,%rdi
   11279:	e8 3f d6 ff ff       	call   e8bd <add_inst>
   1127e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11282:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11289:	00 00
   1128b:	74 05                	je     11292 <codegen_var_assignment+0x23b>
   1128d:	e8 9e 10 ff ff       	call   2330 <__stack_chk_fail@plt>
   11292:	c9                   	leave
   11293:	c3                   	ret

0000000000011294 <codegen_proc_call>:
   11294:	f3 0f 1e fa          	endbr64
   11298:	55                   	push   %rbp
   11299:	48 89 e5             	mov    %rsp,%rbp
   1129c:	48 83 ec 70          	sub    $0x70,%rsp
   112a0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   112a4:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   112a8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   112ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   112b3:	00 00
   112b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   112b9:	31 c0                	xor    %eax,%eax
   112bb:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   112c0:	75 28                	jne    112ea <codegen_proc_call+0x56>
   112c2:	48 8d 05 67 aa 00 00 	lea    0xaa67(%rip),%rax        # 1bd30 <__PRETTY_FUNCTION__.3>
   112c9:	48 89 c1             	mov    %rax,%rcx
   112cc:	ba d8 03 00 00       	mov    $0x3d8,%edx
   112d1:	48 8d 05 e8 9b 00 00 	lea    0x9be8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   112d8:	48 89 c6             	mov    %rax,%rsi
   112db:	48 8d 05 69 a5 00 00 	lea    0xa569(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   112e2:	48 89 c7             	mov    %rax,%rdi
   112e5:	e8 66 10 ff ff       	call   2350 <__assert_fail@plt>
   112ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   112ee:	8b 40 04             	mov    0x4(%rax),%eax
   112f1:	83 f8 01             	cmp    $0x1,%eax
   112f4:	74 28                	je     1131e <codegen_proc_call+0x8a>
   112f6:	48 8d 05 33 aa 00 00 	lea    0xaa33(%rip),%rax        # 1bd30 <__PRETTY_FUNCTION__.3>
   112fd:	48 89 c1             	mov    %rax,%rcx
   11300:	ba d9 03 00 00       	mov    $0x3d9,%edx
   11305:	48 8d 05 b4 9b 00 00 	lea    0x9bb4(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   1130c:	48 89 c6             	mov    %rax,%rsi
   1130f:	48 8d 05 8a a6 00 00 	lea    0xa68a(%rip),%rax        # 1b9a0 <__PRETTY_FUNCTION__.0+0xc70>
   11316:	48 89 c7             	mov    %rax,%rdi
   11319:	e8 32 10 ff ff       	call   2350 <__assert_fail@plt>
   1131e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11322:	48 8b 40 08          	mov    0x8(%rax),%rax
   11326:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1132a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1132e:	48 8b 40 10          	mov    0x10(%rax),%rax
   11332:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11336:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1133a:	48 89 c6             	mov    %rax,%rsi
   1133d:	48 8d 05 7e a6 00 00 	lea    0xa67e(%rip),%rax        # 1b9c2 <__PRETTY_FUNCTION__.0+0xc92>
   11344:	48 89 c7             	mov    %rax,%rdi
   11347:	e8 74 10 ff ff       	call   23c0 <strcmp@plt>
   1134c:	85 c0                	test   %eax,%eax
   1134e:	75 66                	jne    113b6 <codegen_proc_call+0x122>
   11350:	48 8b 05 09 fd 00 00 	mov    0xfd09(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   11357:	48 89 c1             	mov    %rax,%rcx
   1135a:	ba 2b 00 00 00       	mov    $0x2b,%edx
   1135f:	be 01 00 00 00       	mov    $0x1,%esi
   11364:	48 8d 05 5d a6 00 00 	lea    0xa65d(%rip),%rax        # 1b9c8 <__PRETTY_FUNCTION__.0+0xc98>
   1136b:	48 89 c7             	mov    %rax,%rdi
   1136e:	e8 1d 11 ff ff       	call   2490 <fwrite@plt>
   11373:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   11377:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1137b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1137f:	48 89 ce             	mov    %rcx,%rsi
   11382:	48 89 c7             	mov    %rax,%rdi
   11385:	e8 b4 e8 ff ff       	call   fc3e <codegen_builtin_write>
   1138a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1138e:	48 8b 05 cb fc 00 00 	mov    0xfccb(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   11395:	48 89 c1             	mov    %rax,%rcx
   11398:	ba 2c 00 00 00       	mov    $0x2c,%edx
   1139d:	be 01 00 00 00       	mov    $0x1,%esi
   113a2:	48 8d 05 4f a6 00 00 	lea    0xa64f(%rip),%rax        # 1b9f8 <__PRETTY_FUNCTION__.0+0xcc8>
   113a9:	48 89 c7             	mov    %rax,%rdi
   113ac:	e8 df 10 ff ff       	call   2490 <fwrite@plt>
   113b1:	e9 a6 01 00 00       	jmp    1155c <codegen_proc_call+0x2c8>
   113b6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   113ba:	48 89 c6             	mov    %rax,%rsi
   113bd:	48 8d 05 61 a6 00 00 	lea    0xa661(%rip),%rax        # 1ba25 <__PRETTY_FUNCTION__.0+0xcf5>
   113c4:	48 89 c7             	mov    %rax,%rdi
   113c7:	e8 f4 0f ff ff       	call   23c0 <strcmp@plt>
   113cc:	85 c0                	test   %eax,%eax
   113ce:	74 1a                	je     113ea <codegen_proc_call+0x156>
   113d0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   113d4:	48 89 c6             	mov    %rax,%rsi
   113d7:	48 8d 05 4f a6 00 00 	lea    0xa64f(%rip),%rax        # 1ba2d <__PRETTY_FUNCTION__.0+0xcfd>
   113de:	48 89 c7             	mov    %rax,%rdi
   113e1:	e8 da 0f ff ff       	call   23c0 <strcmp@plt>
   113e6:	85 c0                	test   %eax,%eax
   113e8:	75 66                	jne    11450 <codegen_proc_call+0x1bc>
   113ea:	48 8b 05 6f fc 00 00 	mov    0xfc6f(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   113f1:	48 89 c1             	mov    %rax,%rcx
   113f4:	ba 2d 00 00 00       	mov    $0x2d,%edx
   113f9:	be 01 00 00 00       	mov    $0x1,%esi
   113fe:	48 8d 05 33 a6 00 00 	lea    0xa633(%rip),%rax        # 1ba38 <__PRETTY_FUNCTION__.0+0xd08>
   11405:	48 89 c7             	mov    %rax,%rdi
   11408:	e8 83 10 ff ff       	call   2490 <fwrite@plt>
   1140d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   11411:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   11415:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11419:	48 89 ce             	mov    %rcx,%rsi
   1141c:	48 89 c7             	mov    %rax,%rdi
   1141f:	e8 9f f2 ff ff       	call   106c3 <codegen_builtin_writeln>
   11424:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11428:	48 8b 05 31 fc 00 00 	mov    0xfc31(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1142f:	48 89 c1             	mov    %rax,%rcx
   11432:	ba 2e 00 00 00       	mov    $0x2e,%edx
   11437:	be 01 00 00 00       	mov    $0x1,%esi
   1143c:	48 8d 05 25 a6 00 00 	lea    0xa625(%rip),%rax        # 1ba68 <__PRETTY_FUNCTION__.0+0xd38>
   11443:	48 89 c7             	mov    %rax,%rdi
   11446:	e8 45 10 ff ff       	call   2490 <fwrite@plt>
   1144b:	e9 0c 01 00 00       	jmp    1155c <codegen_proc_call+0x2c8>
   11450:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11454:	48 89 c6             	mov    %rax,%rsi
   11457:	48 8d 05 39 a6 00 00 	lea    0xa639(%rip),%rax        # 1ba97 <__PRETTY_FUNCTION__.0+0xd67>
   1145e:	48 89 c7             	mov    %rax,%rdi
   11461:	e8 5a 0f ff ff       	call   23c0 <strcmp@plt>
   11466:	85 c0                	test   %eax,%eax
   11468:	74 1a                	je     11484 <codegen_proc_call+0x1f0>
   1146a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1146e:	48 89 c6             	mov    %rax,%rsi
   11471:	48 8d 05 24 a6 00 00 	lea    0xa624(%rip),%rax        # 1ba9c <__PRETTY_FUNCTION__.0+0xd6c>
   11478:	48 89 c7             	mov    %rax,%rdi
   1147b:	e8 40 0f ff ff       	call   23c0 <strcmp@plt>
   11480:	85 c0                	test   %eax,%eax
   11482:	75 63                	jne    114e7 <codegen_proc_call+0x253>
   11484:	48 8b 05 d5 fb 00 00 	mov    0xfbd5(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1148b:	48 89 c1             	mov    %rax,%rcx
   1148e:	ba 2a 00 00 00       	mov    $0x2a,%edx
   11493:	be 01 00 00 00       	mov    $0x1,%esi
   11498:	48 8d 05 09 a6 00 00 	lea    0xa609(%rip),%rax        # 1baa8 <__PRETTY_FUNCTION__.0+0xd78>
   1149f:	48 89 c7             	mov    %rax,%rdi
   114a2:	e8 e9 0f ff ff       	call   2490 <fwrite@plt>
   114a7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   114ab:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   114af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   114b3:	48 89 ce             	mov    %rcx,%rsi
   114b6:	48 89 c7             	mov    %rax,%rdi
   114b9:	e8 84 f3 ff ff       	call   10842 <codegen_builtin_read>
   114be:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   114c2:	48 8b 05 97 fb 00 00 	mov    0xfb97(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   114c9:	48 89 c1             	mov    %rax,%rcx
   114cc:	ba 2b 00 00 00       	mov    $0x2b,%edx
   114d1:	be 01 00 00 00       	mov    $0x1,%esi
   114d6:	48 8d 05 fb a5 00 00 	lea    0xa5fb(%rip),%rax        # 1bad8 <__PRETTY_FUNCTION__.0+0xda8>
   114dd:	48 89 c7             	mov    %rax,%rdi
   114e0:	e8 ab 0f ff ff       	call   2490 <fwrite@plt>
   114e5:	eb 75                	jmp    1155c <codegen_proc_call+0x2c8>
   114e7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   114eb:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   114ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   114f3:	48 89 ce             	mov    %rcx,%rsi
   114f6:	48 89 c7             	mov    %rax,%rdi
   114f9:	e8 29 09 00 00       	call   11e27 <codegen_pass_arguments>
   114fe:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11502:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11506:	be 00 00 00 00       	mov    $0x0,%esi
   1150b:	48 89 c7             	mov    %rax,%rdi
   1150e:	e8 36 dd ff ff       	call   f249 <codegen_vect_reg>
   11513:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11517:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1151b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1151f:	48 89 d1             	mov    %rdx,%rcx
   11522:	48 8d 15 6c 99 00 00 	lea    0x996c(%rip),%rdx        # 1ae95 <__PRETTY_FUNCTION__.0+0x165>
   11529:	be 32 00 00 00       	mov    $0x32,%esi
   1152e:	48 89 c7             	mov    %rax,%rdi
   11531:	b8 00 00 00 00       	mov    $0x0,%eax
   11536:	e8 05 0e ff ff       	call   2340 <snprintf@plt>
   1153b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1153f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11543:	48 89 d6             	mov    %rdx,%rsi
   11546:	48 89 c7             	mov    %rax,%rdi
   11549:	e8 6f d3 ff ff       	call   e8bd <add_inst>
   1154e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11552:	b8 00 00 00 00       	mov    $0x0,%eax
   11557:	e8 19 0c 00 00       	call   12175 <free_arg_regs>
   1155c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11560:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11564:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1156b:	00 00
   1156d:	74 05                	je     11574 <codegen_proc_call+0x2e0>
   1156f:	e8 bc 0d ff ff       	call   2330 <__stack_chk_fail@plt>
   11574:	c9                   	leave
   11575:	c3                   	ret

0000000000011576 <codegen_if_then>:
   11576:	f3 0f 1e fa          	endbr64
   1157a:	55                   	push   %rbp
   1157b:	48 89 e5             	mov    %rsp,%rbp
   1157e:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   11585:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   1158c:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   11593:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   1159a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   115a1:	00 00
   115a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   115a7:	31 c0                	xor    %eax,%eax
   115a9:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   115b0:	00
   115b1:	75 28                	jne    115db <codegen_if_then+0x65>
   115b3:	48 8d 05 96 a7 00 00 	lea    0xa796(%rip),%rax        # 1bd50 <__PRETTY_FUNCTION__.2>
   115ba:	48 89 c1             	mov    %rax,%rcx
   115bd:	ba 07 04 00 00       	mov    $0x407,%edx
   115c2:	48 8d 05 f7 98 00 00 	lea    0x98f7(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   115c9:	48 89 c6             	mov    %rax,%rsi
   115cc:	48 8d 05 78 a2 00 00 	lea    0xa278(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   115d3:	48 89 c7             	mov    %rax,%rdi
   115d6:	e8 75 0d ff ff       	call   2350 <__assert_fail@plt>
   115db:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   115e2:	8b 40 04             	mov    0x4(%rax),%eax
   115e5:	83 f8 03             	cmp    $0x3,%eax
   115e8:	74 28                	je     11612 <codegen_if_then+0x9c>
   115ea:	48 8d 05 5f a7 00 00 	lea    0xa75f(%rip),%rax        # 1bd50 <__PRETTY_FUNCTION__.2>
   115f1:	48 89 c1             	mov    %rax,%rcx
   115f4:	ba 08 04 00 00       	mov    $0x408,%edx
   115f9:	48 8d 05 c0 98 00 00 	lea    0x98c0(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   11600:	48 89 c6             	mov    %rax,%rsi
   11603:	48 8d 05 fa a4 00 00 	lea    0xa4fa(%rip),%rax        # 1bb04 <__PRETTY_FUNCTION__.0+0xdd4>
   1160a:	48 89 c7             	mov    %rax,%rdi
   1160d:	e8 3e 0d ff ff       	call   2350 <__assert_fail@plt>
   11612:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11619:	48 8b 40 08          	mov    0x8(%rax),%rax
   1161d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   11624:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
   1162b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11632:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   11639:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11640:	48 89 c7             	mov    %rax,%rdi
   11643:	e8 88 f4 ff ff       	call   10ad0 <codegen_simple_relop>
   11648:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1164f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11653:	be 12 00 00 00       	mov    $0x12,%esi
   11658:	48 89 c7             	mov    %rax,%rdi
   1165b:	e8 12 d2 ff ff       	call   e872 <gen_label>
   11660:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11664:	be 12 00 00 00       	mov    $0x12,%esi
   11669:	48 89 c7             	mov    %rax,%rdi
   1166c:	e8 01 d2 ff ff       	call   e872 <gen_label>
   11671:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11678:	48 8b 40 10          	mov    0x10(%rax),%rax
   1167c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11683:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1168a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1168e:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11695:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
   1169c:	00 00 00
   1169f:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   116a5:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   116ac:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   116b0:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
   116b6:	89 c7                	mov    %eax,%edi
   116b8:	e8 a7 d2 ff ff       	call   e964 <gencode_jmp>
   116bd:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   116c4:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   116cb:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   116d2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   116d9:	48 89 ce             	mov    %rcx,%rsi
   116dc:	48 89 c7             	mov    %rax,%rdi
   116df:	e8 26 f7 ff ff       	call   10e0a <codegen_stmt>
   116e4:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   116eb:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   116f2:	00
   116f3:	75 46                	jne    1173b <codegen_if_then+0x1c5>
   116f5:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   116f9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   116fd:	48 89 d1             	mov    %rdx,%rcx
   11700:	48 8d 15 18 a4 00 00 	lea    0xa418(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   11707:	be 32 00 00 00       	mov    $0x32,%esi
   1170c:	48 89 c7             	mov    %rax,%rdi
   1170f:	b8 00 00 00 00       	mov    $0x0,%eax
   11714:	e8 27 0c ff ff       	call   2340 <snprintf@plt>
   11719:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1171d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11724:	48 89 d6             	mov    %rdx,%rsi
   11727:	48 89 c7             	mov    %rax,%rdi
   1172a:	e8 8e d1 ff ff       	call   e8bd <add_inst>
   1172f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11736:	e9 d7 00 00 00       	jmp    11812 <codegen_if_then+0x29c>
   1173b:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   11742:	00 00 00
   11745:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1174c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11750:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
   11756:	89 c6                	mov    %eax,%esi
   11758:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1175d:	e8 02 d2 ff ff       	call   e964 <gencode_jmp>
   11762:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11769:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   1176d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11771:	48 89 d1             	mov    %rdx,%rcx
   11774:	48 8d 15 a4 a3 00 00 	lea    0xa3a4(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   1177b:	be 32 00 00 00       	mov    $0x32,%esi
   11780:	48 89 c7             	mov    %rax,%rdi
   11783:	b8 00 00 00 00       	mov    $0x0,%eax
   11788:	e8 b3 0b ff ff       	call   2340 <snprintf@plt>
   1178d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11791:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11798:	48 89 d6             	mov    %rdx,%rsi
   1179b:	48 89 c7             	mov    %rax,%rdi
   1179e:	e8 1a d1 ff ff       	call   e8bd <add_inst>
   117a3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   117aa:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   117b1:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   117b8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   117bf:	48 89 ce             	mov    %rcx,%rsi
   117c2:	48 89 c7             	mov    %rax,%rdi
   117c5:	e8 40 f6 ff ff       	call   10e0a <codegen_stmt>
   117ca:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   117d1:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   117d5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   117d9:	48 89 d1             	mov    %rdx,%rcx
   117dc:	48 8d 15 3c a3 00 00 	lea    0xa33c(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   117e3:	be 32 00 00 00       	mov    $0x32,%esi
   117e8:	48 89 c7             	mov    %rax,%rdi
   117eb:	b8 00 00 00 00       	mov    $0x0,%eax
   117f0:	e8 4b 0b ff ff       	call   2340 <snprintf@plt>
   117f5:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   117f9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11800:	48 89 d6             	mov    %rdx,%rsi
   11803:	48 89 c7             	mov    %rax,%rdi
   11806:	e8 b2 d0 ff ff       	call   e8bd <add_inst>
   1180b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11812:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11819:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1181d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11824:	00 00
   11826:	74 05                	je     1182d <codegen_if_then+0x2b7>
   11828:	e8 03 0b ff ff       	call   2330 <__stack_chk_fail@plt>
   1182d:	c9                   	leave
   1182e:	c3                   	ret

000000000001182f <codegen_while>:
   1182f:	f3 0f 1e fa          	endbr64
   11833:	55                   	push   %rbp
   11834:	48 89 e5             	mov    %rsp,%rbp
   11837:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1183e:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   11845:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   1184c:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   11853:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1185a:	00 00
   1185c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11860:	31 c0                	xor    %eax,%eax
   11862:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   11869:	00
   1186a:	75 28                	jne    11894 <codegen_while+0x65>
   1186c:	48 8d 05 ed a4 00 00 	lea    0xa4ed(%rip),%rax        # 1bd60 <__PRETTY_FUNCTION__.1>
   11873:	48 89 c1             	mov    %rax,%rcx
   11876:	ba 39 04 00 00       	mov    $0x439,%edx
   1187b:	48 8d 05 3e 96 00 00 	lea    0x963e(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   11882:	48 89 c6             	mov    %rax,%rsi
   11885:	48 8d 05 bf 9f 00 00 	lea    0x9fbf(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   1188c:	48 89 c7             	mov    %rax,%rdi
   1188f:	e8 bc 0a ff ff       	call   2350 <__assert_fail@plt>
   11894:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1189b:	8b 40 04             	mov    0x4(%rax),%eax
   1189e:	83 f8 04             	cmp    $0x4,%eax
   118a1:	74 28                	je     118cb <codegen_while+0x9c>
   118a3:	48 8d 05 b6 a4 00 00 	lea    0xa4b6(%rip),%rax        # 1bd60 <__PRETTY_FUNCTION__.1>
   118aa:	48 89 c1             	mov    %rax,%rcx
   118ad:	ba 3a 04 00 00       	mov    $0x43a,%edx
   118b2:	48 8d 05 07 96 00 00 	lea    0x9607(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   118b9:	48 89 c6             	mov    %rax,%rsi
   118bc:	48 8d 05 61 a2 00 00 	lea    0xa261(%rip),%rax        # 1bb24 <__PRETTY_FUNCTION__.0+0xdf4>
   118c3:	48 89 c7             	mov    %rax,%rdi
   118c6:	e8 85 0a ff ff       	call   2350 <__assert_fail@plt>
   118cb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   118cf:	be 12 00 00 00       	mov    $0x12,%esi
   118d4:	48 89 c7             	mov    %rax,%rdi
   118d7:	e8 96 cf ff ff       	call   e872 <gen_label>
   118dc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   118e0:	be 12 00 00 00       	mov    $0x12,%esi
   118e5:	48 89 c7             	mov    %rax,%rdi
   118e8:	e8 85 cf ff ff       	call   e872 <gen_label>
   118ed:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   118f4:	48 8b 40 10          	mov    0x10(%rax),%rax
   118f8:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   118ff:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11906:	48 8b 40 08          	mov    0x8(%rax),%rax
   1190a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11911:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   11918:	00 00 00
   1191b:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   11922:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11926:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   1192c:	89 c6                	mov    %eax,%esi
   1192e:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11933:	e8 2c d0 ff ff       	call   e964 <gencode_jmp>
   11938:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1193f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11943:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11947:	48 89 d1             	mov    %rdx,%rcx
   1194a:	48 8d 15 ce a1 00 00 	lea    0xa1ce(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   11951:	be 32 00 00 00       	mov    $0x32,%esi
   11956:	48 89 c7             	mov    %rax,%rdi
   11959:	b8 00 00 00 00       	mov    $0x0,%eax
   1195e:	e8 dd 09 ff ff       	call   2340 <snprintf@plt>
   11963:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11967:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1196e:	48 89 d6             	mov    %rdx,%rsi
   11971:	48 89 c7             	mov    %rax,%rdi
   11974:	e8 44 cf ff ff       	call   e8bd <add_inst>
   11979:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11980:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11987:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1198e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11995:	48 89 ce             	mov    %rcx,%rsi
   11998:	48 89 c7             	mov    %rax,%rdi
   1199b:	e8 6a f4 ff ff       	call   10e0a <codegen_stmt>
   119a0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   119a7:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   119ab:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   119af:	48 89 d1             	mov    %rdx,%rcx
   119b2:	48 8d 15 66 a1 00 00 	lea    0xa166(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   119b9:	be 32 00 00 00       	mov    $0x32,%esi
   119be:	48 89 c7             	mov    %rax,%rdi
   119c1:	b8 00 00 00 00       	mov    $0x0,%eax
   119c6:	e8 75 09 ff ff       	call   2340 <snprintf@plt>
   119cb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   119cf:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   119d6:	48 89 d6             	mov    %rdx,%rsi
   119d9:	48 89 c7             	mov    %rax,%rdi
   119dc:	e8 dc ce ff ff       	call   e8bd <add_inst>
   119e1:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   119e8:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   119ef:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   119f6:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   119fd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11a04:	48 89 c7             	mov    %rax,%rdi
   11a07:	e8 c4 f0 ff ff       	call   10ad0 <codegen_simple_relop>
   11a0c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11a13:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   11a1a:	00 00 00
   11a1d:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   11a23:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   11a2a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11a2e:	8b b5 6c ff ff ff    	mov    -0x94(%rbp),%esi
   11a34:	89 c7                	mov    %eax,%edi
   11a36:	e8 29 cf ff ff       	call   e964 <gencode_jmp>
   11a3b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11a42:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11a49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11a4d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11a54:	00 00
   11a56:	74 05                	je     11a5d <codegen_while+0x22e>
   11a58:	e8 d3 08 ff ff       	call   2330 <__stack_chk_fail@plt>
   11a5d:	c9                   	leave
   11a5e:	c3                   	ret

0000000000011a5f <codegen_for>:
   11a5f:	f3 0f 1e fa          	endbr64
   11a63:	55                   	push   %rbp
   11a64:	48 89 e5             	mov    %rsp,%rbp
   11a67:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   11a6e:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   11a75:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   11a7c:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   11a83:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11a8a:	00 00
   11a8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a90:	31 c0                	xor    %eax,%eax
   11a92:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   11a99:	00
   11a9a:	75 28                	jne    11ac4 <codegen_for+0x65>
   11a9c:	48 8d 05 cd a2 00 00 	lea    0xa2cd(%rip),%rax        # 1bd70 <__PRETTY_FUNCTION__.0>
   11aa3:	48 89 c1             	mov    %rax,%rcx
   11aa6:	ba 5f 04 00 00       	mov    $0x45f,%edx
   11aab:	48 8d 05 0e 94 00 00 	lea    0x940e(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   11ab2:	48 89 c6             	mov    %rax,%rsi
   11ab5:	48 8d 05 8f 9d 00 00 	lea    0x9d8f(%rip),%rax        # 1b84b <__PRETTY_FUNCTION__.0+0xb1b>
   11abc:	48 89 c7             	mov    %rax,%rdi
   11abf:	e8 8c 08 ff ff       	call   2350 <__assert_fail@plt>
   11ac4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11acb:	8b 40 04             	mov    0x4(%rax),%eax
   11ace:	83 f8 05             	cmp    $0x5,%eax
   11ad1:	74 28                	je     11afb <codegen_for+0x9c>
   11ad3:	48 8d 05 96 a2 00 00 	lea    0xa296(%rip),%rax        # 1bd70 <__PRETTY_FUNCTION__.0>
   11ada:	48 89 c1             	mov    %rax,%rcx
   11add:	ba 60 04 00 00       	mov    $0x460,%edx
   11ae2:	48 8d 05 d7 93 00 00 	lea    0x93d7(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   11ae9:	48 89 c6             	mov    %rax,%rsi
   11aec:	48 8d 05 4a a0 00 00 	lea    0xa04a(%rip),%rax        # 1bb3d <__PRETTY_FUNCTION__.0+0xe0d>
   11af3:	48 89 c7             	mov    %rax,%rdi
   11af6:	e8 55 08 ff ff       	call   2350 <__assert_fail@plt>
   11afb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11aff:	be 12 00 00 00       	mov    $0x12,%esi
   11b04:	48 89 c7             	mov    %rax,%rdi
   11b07:	e8 66 cd ff ff       	call   e872 <gen_label>
   11b0c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11b10:	be 12 00 00 00       	mov    $0x12,%esi
   11b15:	48 89 c7             	mov    %rax,%rdi
   11b18:	e8 55 cd ff ff       	call   e872 <gen_label>
   11b1d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11b24:	48 8b 40 18          	mov    0x18(%rax),%rax
   11b28:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   11b2f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11b36:	48 8b 40 10          	mov    0x10(%rax),%rax
   11b3a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11b41:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11b48:	8b 40 08             	mov    0x8(%rax),%eax
   11b4b:	83 f8 07             	cmp    $0x7,%eax
   11b4e:	75 51                	jne    11ba1 <codegen_for+0x142>
   11b50:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11b57:	48 8b 40 20          	mov    0x20(%rax),%rax
   11b5b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   11b62:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   11b69:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11b70:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11b77:	48 89 ce             	mov    %rcx,%rsi
   11b7a:	48 89 c7             	mov    %rax,%rdi
   11b7d:	e8 d5 f4 ff ff       	call   11057 <codegen_var_assignment>
   11b82:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11b89:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11b90:	48 8b 40 20          	mov    0x20(%rax),%rax
   11b94:	48 8b 40 08          	mov    0x8(%rax),%rax
   11b98:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   11b9f:	eb 12                	jmp    11bb3 <codegen_for+0x154>
   11ba1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11ba8:	48 8b 40 20          	mov    0x20(%rax),%rax
   11bac:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   11bb3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11bba:	8b 40 04             	mov    0x4(%rax),%eax
   11bbd:	83 f8 04             	cmp    $0x4,%eax
   11bc0:	74 28                	je     11bea <codegen_for+0x18b>
   11bc2:	48 8d 05 a7 a1 00 00 	lea    0xa1a7(%rip),%rax        # 1bd70 <__PRETTY_FUNCTION__.0>
   11bc9:	48 89 c1             	mov    %rax,%rcx
   11bcc:	ba 79 04 00 00       	mov    $0x479,%edx
   11bd1:	48 8d 05 e8 92 00 00 	lea    0x92e8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x190>
   11bd8:	48 89 c6             	mov    %rax,%rsi
   11bdb:	48 8d 05 72 9f 00 00 	lea    0x9f72(%rip),%rax        # 1bb54 <__PRETTY_FUNCTION__.0+0xe24>
   11be2:	48 89 c7             	mov    %rax,%rdi
   11be5:	e8 66 07 ff ff       	call   2350 <__assert_fail@plt>
   11bea:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   11bf1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11bf8:	48 89 d1             	mov    %rdx,%rcx
   11bfb:	48 89 c2             	mov    %rax,%rdx
   11bfe:	be 27 01 00 00       	mov    $0x127,%esi
   11c03:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11c08:	e8 11 7f ff ff       	call   9b1e <mk_relop>
   11c0d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   11c14:	be 01 00 00 00       	mov    $0x1,%esi
   11c19:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11c1e:	e8 63 81 ff ff       	call   9d86 <mk_inum>
   11c23:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   11c2a:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11c31:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11c38:	48 89 d1             	mov    %rdx,%rcx
   11c3b:	48 89 c2             	mov    %rax,%rdx
   11c3e:	be 2c 01 00 00       	mov    $0x12c,%esi
   11c43:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11c48:	e8 7c 7f ff ff       	call   9bc9 <mk_addop>
   11c4d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11c54:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11c5b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11c62:	48 89 c6             	mov    %rax,%rsi
   11c65:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11c6a:	e8 d1 7b ff ff       	call   9840 <mk_varassign>
   11c6f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11c76:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   11c7d:	00 00 00
   11c80:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11c87:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11c8b:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   11c91:	89 c6                	mov    %eax,%esi
   11c93:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11c98:	e8 c7 cc ff ff       	call   e964 <gencode_jmp>
   11c9d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11ca4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11ca8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11cac:	48 89 d1             	mov    %rdx,%rcx
   11caf:	48 8d 15 69 9e 00 00 	lea    0x9e69(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   11cb6:	be 32 00 00 00       	mov    $0x32,%esi
   11cbb:	48 89 c7             	mov    %rax,%rdi
   11cbe:	b8 00 00 00 00       	mov    $0x0,%eax
   11cc3:	e8 78 06 ff ff       	call   2340 <snprintf@plt>
   11cc8:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11ccc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11cd3:	48 89 d6             	mov    %rdx,%rsi
   11cd6:	48 89 c7             	mov    %rax,%rdi
   11cd9:	e8 df cb ff ff       	call   e8bd <add_inst>
   11cde:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11ce5:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   11cec:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11cf3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   11cfa:	48 89 ce             	mov    %rcx,%rsi
   11cfd:	48 89 c7             	mov    %rax,%rdi
   11d00:	e8 05 f1 ff ff       	call   10e0a <codegen_stmt>
   11d05:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11d0c:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   11d13:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11d1a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d21:	48 89 ce             	mov    %rcx,%rsi
   11d24:	48 89 c7             	mov    %rax,%rdi
   11d27:	e8 de f0 ff ff       	call   10e0a <codegen_stmt>
   11d2c:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11d33:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11d37:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11d3b:	48 89 d1             	mov    %rdx,%rcx
   11d3e:	48 8d 15 da 9d 00 00 	lea    0x9dda(%rip),%rdx        # 1bb1f <__PRETTY_FUNCTION__.0+0xdef>
   11d45:	be 32 00 00 00       	mov    $0x32,%esi
   11d4a:	48 89 c7             	mov    %rax,%rdi
   11d4d:	b8 00 00 00 00       	mov    $0x0,%eax
   11d52:	e8 e9 05 ff ff       	call   2340 <snprintf@plt>
   11d57:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11d5b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11d62:	48 89 d6             	mov    %rdx,%rsi
   11d65:	48 89 c7             	mov    %rax,%rdi
   11d68:	e8 50 cb ff ff       	call   e8bd <add_inst>
   11d6d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11d74:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   11d7b:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   11d82:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   11d89:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   11d90:	48 89 c7             	mov    %rax,%rdi
   11d93:	e8 38 ed ff ff       	call   10ad0 <codegen_simple_relop>
   11d98:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11d9f:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   11da6:	00 00 00
   11da9:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   11daf:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11db6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11dba:	8b b5 3c ff ff ff    	mov    -0xc4(%rbp),%esi
   11dc0:	89 c7                	mov    %eax,%edi
   11dc2:	e8 9d cb ff ff       	call   e964 <gencode_jmp>
   11dc7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11dce:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   11dd5:	48 89 c7             	mov    %rax,%rdi
   11dd8:	e8 b3 04 ff ff       	call   2290 <free@plt>
   11ddd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11de4:	48 89 c7             	mov    %rax,%rdi
   11de7:	e8 a4 04 ff ff       	call   2290 <free@plt>
   11dec:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11df3:	48 89 c7             	mov    %rax,%rdi
   11df6:	e8 95 04 ff ff       	call   2290 <free@plt>
   11dfb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11e02:	48 89 c7             	mov    %rax,%rdi
   11e05:	e8 86 04 ff ff       	call   2290 <free@plt>
   11e0a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11e11:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11e15:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11e1c:	00 00
   11e1e:	74 05                	je     11e25 <codegen_for+0x3c6>
   11e20:	e8 0b 05 ff ff       	call   2330 <__stack_chk_fail@plt>
   11e25:	c9                   	leave
   11e26:	c3                   	ret

0000000000011e27 <codegen_pass_arguments>:
   11e27:	f3 0f 1e fa          	endbr64
   11e2b:	55                   	push   %rbp
   11e2c:	48 89 e5             	mov    %rsp,%rbp
   11e2f:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   11e33:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   11e37:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   11e3b:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   11e3f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11e46:	00 00
   11e48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11e4c:	31 c0                	xor    %eax,%eax
   11e4e:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
   11e55:	e9 ef 00 00 00       	jmp    11f49 <codegen_pass_arguments+0x122>
   11e5a:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   11e5d:	89 c7                	mov    %eax,%edi
   11e5f:	e8 26 03 00 00       	call   1218a <get_arg_reg64_num>
   11e64:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   11e68:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   11e6d:	75 2b                	jne    11e9a <codegen_pass_arguments+0x73>
   11e6f:	48 8b 05 ea f1 00 00 	mov    0xf1ea(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   11e76:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   11e79:	48 8d 0d f8 9c 00 00 	lea    0x9cf8(%rip),%rcx        # 1bb78 <__PRETTY_FUNCTION__.0+0xe48>
   11e80:	48 89 ce             	mov    %rcx,%rsi
   11e83:	48 89 c7             	mov    %rax,%rdi
   11e86:	b8 00 00 00 00       	mov    $0x0,%eax
   11e8b:	e8 40 05 ff ff       	call   23d0 <fprintf@plt>
   11e90:	bf 01 00 00 00       	mov    $0x1,%edi
   11e95:	e8 e6 05 ff ff       	call   2480 <exit@plt>
   11e9a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11e9e:	48 8b 40 08          	mov    0x8(%rax),%rax
   11ea2:	48 89 c7             	mov    %rax,%rdi
   11ea5:	e8 c6 17 00 00       	call   13670 <build_expr_tree>
   11eaa:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   11eae:	b8 00 00 00 00       	mov    $0x0,%eax
   11eb3:	e8 c2 09 00 00       	call   1287a <get_reg_stack>
   11eb8:	48 89 c1             	mov    %rax,%rcx
   11ebb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   11ebf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ec3:	48 89 ce             	mov    %rcx,%rsi
   11ec6:	48 89 c7             	mov    %rax,%rdi
   11ec9:	e8 7b 1a 00 00       	call   13949 <gencode_expr_tree>
   11ece:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   11ed2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ed6:	48 89 c7             	mov    %rax,%rdi
   11ed9:	e8 a0 1e 00 00       	call   13d7e <free_expr_tree>
   11ede:	b8 00 00 00 00       	mov    $0x0,%eax
   11ee3:	e8 92 09 00 00       	call   1287a <get_reg_stack>
   11ee8:	48 89 c7             	mov    %rax,%rdi
   11eeb:	e8 a2 11 00 00       	call   13092 <front_reg_stack>
   11ef0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11ef4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ef8:	48 8b 10             	mov    (%rax),%rdx
   11efb:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   11eff:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11f03:	49 89 c8             	mov    %rcx,%r8
   11f06:	48 89 d1             	mov    %rdx,%rcx
   11f09:	48 8d 15 8f 9c 00 00 	lea    0x9c8f(%rip),%rdx        # 1bb9f <__PRETTY_FUNCTION__.0+0xe6f>
   11f10:	be 32 00 00 00       	mov    $0x32,%esi
   11f15:	48 89 c7             	mov    %rax,%rdi
   11f18:	b8 00 00 00 00       	mov    $0x0,%eax
   11f1d:	e8 1e 04 ff ff       	call   2340 <snprintf@plt>
   11f22:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11f26:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11f2a:	48 89 d6             	mov    %rdx,%rsi
   11f2d:	48 89 c7             	mov    %rax,%rdi
   11f30:	e8 88 c9 ff ff       	call   e8bd <add_inst>
   11f35:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   11f39:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11f3d:	48 8b 40 10          	mov    0x10(%rax),%rax
   11f41:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   11f45:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
   11f49:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   11f4e:	0f 85 06 ff ff ff    	jne    11e5a <codegen_pass_arguments+0x33>
   11f54:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11f58:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f5c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11f63:	00 00
   11f65:	74 05                	je     11f6c <codegen_pass_arguments+0x145>
   11f67:	e8 c4 03 ff ff       	call   2330 <__stack_chk_fail@plt>
   11f6c:	c9                   	leave
   11f6d:	c3                   	ret

0000000000011f6e <codegen_goto_prev_scope>:
   11f6e:	f3 0f 1e fa          	endbr64
   11f72:	55                   	push   %rbp
   11f73:	48 89 e5             	mov    %rsp,%rbp
   11f76:	48 83 ec 60          	sub    $0x60,%rsp
   11f7a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11f7e:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   11f82:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   11f86:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11f8d:	00 00
   11f8f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11f93:	31 c0                	xor    %eax,%eax
   11f95:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   11f99:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11f9d:	4c 8d 05 69 98 00 00 	lea    0x9869(%rip),%r8        # 1b80d <__PRETTY_FUNCTION__.0+0xadd>
   11fa4:	48 89 d1             	mov    %rdx,%rcx
   11fa7:	48 8d 15 ff 9b 00 00 	lea    0x9bff(%rip),%rdx        # 1bbad <__PRETTY_FUNCTION__.0+0xe7d>
   11fae:	be 32 00 00 00       	mov    $0x32,%esi
   11fb3:	48 89 c7             	mov    %rax,%rdi
   11fb6:	b8 00 00 00 00       	mov    $0x0,%eax
   11fbb:	e8 80 03 ff ff       	call   2340 <snprintf@plt>
   11fc0:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11fc4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fc8:	48 89 d6             	mov    %rdx,%rsi
   11fcb:	48 89 c7             	mov    %rax,%rdi
   11fce:	e8 ea c8 ff ff       	call   e8bd <add_inst>
   11fd3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11fd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fdb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11fdf:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11fe6:	00 00
   11fe8:	74 05                	je     11fef <codegen_goto_prev_scope+0x81>
   11fea:	e8 41 03 ff ff       	call   2330 <__stack_chk_fail@plt>
   11fef:	c9                   	leave
   11ff0:	c3                   	ret

0000000000011ff1 <escape_string>:
   11ff1:	f3 0f 1e fa          	endbr64
   11ff5:	55                   	push   %rbp
   11ff6:	48 89 e5             	mov    %rsp,%rbp
   11ff9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ffd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12001:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12005:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1200c:	00
   1200d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   12014:	00
   12015:	e9 26 01 00 00       	jmp    12140 <escape_string+0x14f>
   1201a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1201e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12022:	48 01 d0             	add    %rdx,%rax
   12025:	0f b6 00             	movzbl (%rax),%eax
   12028:	0f be c0             	movsbl %al,%eax
   1202b:	83 f8 5c             	cmp    $0x5c,%eax
   1202e:	0f 84 b5 00 00 00    	je     120e9 <escape_string+0xf8>
   12034:	83 f8 5c             	cmp    $0x5c,%eax
   12037:	0f 8f da 00 00 00    	jg     12117 <escape_string+0x126>
   1203d:	83 f8 22             	cmp    $0x22,%eax
   12040:	74 79                	je     120bb <escape_string+0xca>
   12042:	83 f8 22             	cmp    $0x22,%eax
   12045:	0f 8f cc 00 00 00    	jg     12117 <escape_string+0x126>
   1204b:	83 f8 09             	cmp    $0x9,%eax
   1204e:	74 3a                	je     1208a <escape_string+0x99>
   12050:	83 f8 0a             	cmp    $0xa,%eax
   12053:	0f 85 be 00 00 00    	jne    12117 <escape_string+0x126>
   12059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1205d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12061:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   12065:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12069:	48 01 d0             	add    %rdx,%rax
   1206c:	c6 00 5c             	movb   $0x5c,(%rax)
   1206f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12073:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12077:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1207b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1207f:	48 01 d0             	add    %rdx,%rax
   12082:	c6 00 6e             	movb   $0x6e,(%rax)
   12085:	e9 b1 00 00 00       	jmp    1213b <escape_string+0x14a>
   1208a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1208e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12092:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   12096:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1209a:	48 01 d0             	add    %rdx,%rax
   1209d:	c6 00 5c             	movb   $0x5c,(%rax)
   120a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120a4:	48 8d 50 01          	lea    0x1(%rax),%rdx
   120a8:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   120ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120b0:	48 01 d0             	add    %rdx,%rax
   120b3:	c6 00 74             	movb   $0x74,(%rax)
   120b6:	e9 80 00 00 00       	jmp    1213b <escape_string+0x14a>
   120bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120bf:	48 8d 50 01          	lea    0x1(%rax),%rdx
   120c3:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   120c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120cb:	48 01 d0             	add    %rdx,%rax
   120ce:	c6 00 5c             	movb   $0x5c,(%rax)
   120d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120d5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   120d9:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   120dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120e1:	48 01 d0             	add    %rdx,%rax
   120e4:	c6 00 22             	movb   $0x22,(%rax)
   120e7:	eb 52                	jmp    1213b <escape_string+0x14a>
   120e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120ed:	48 8d 50 01          	lea    0x1(%rax),%rdx
   120f1:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   120f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120f9:	48 01 d0             	add    %rdx,%rax
   120fc:	c6 00 5c             	movb   $0x5c,(%rax)
   120ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12103:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12107:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1210b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1210f:	48 01 d0             	add    %rdx,%rax
   12112:	c6 00 5c             	movb   $0x5c,(%rax)
   12115:	eb 24                	jmp    1213b <escape_string+0x14a>
   12117:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1211b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1211f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12127:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1212b:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1212f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12133:	48 01 c2             	add    %rax,%rdx
   12136:	0f b6 01             	movzbl (%rcx),%eax
   12139:	88 02                	mov    %al,(%rdx)
   1213b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   12140:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12144:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12148:	48 01 d0             	add    %rdx,%rax
   1214b:	0f b6 00             	movzbl (%rax),%eax
   1214e:	84 c0                	test   %al,%al
   12150:	74 12                	je     12164 <escape_string+0x173>
   12152:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12156:	48 83 e8 01          	sub    $0x1,%rax
   1215a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1215e:	0f 82 b6 fe ff ff    	jb     1201a <escape_string+0x29>
   12164:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216c:	48 01 d0             	add    %rdx,%rax
   1216f:	c6 00 00             	movb   $0x0,(%rax)
   12172:	90                   	nop
   12173:	5d                   	pop    %rbp
   12174:	c3                   	ret

0000000000012175 <free_arg_regs>:
   12175:	f3 0f 1e fa          	endbr64
   12179:	55                   	push   %rbp
   1217a:	48 89 e5             	mov    %rsp,%rbp
   1217d:	c7 05 f1 ee 00 00 00 	movl   $0x0,0xeef1(%rip)        # 21078 <num_args_alloced>
   12184:	00 00 00
   12187:	90                   	nop
   12188:	5d                   	pop    %rbp
   12189:	c3                   	ret

000000000001218a <get_arg_reg64_num>:
   1218a:	f3 0f 1e fa          	endbr64
   1218e:	55                   	push   %rbp
   1218f:	48 89 e5             	mov    %rsp,%rbp
   12192:	89 7d fc             	mov    %edi,-0x4(%rbp)
   12195:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   12199:	75 09                	jne    121a4 <get_arg_reg64_num+0x1a>
   1219b:	48 8d 05 de 9b 00 00 	lea    0x9bde(%rip),%rax        # 1bd80 <__PRETTY_FUNCTION__.0+0x10>
   121a2:	eb 32                	jmp    121d6 <get_arg_reg64_num+0x4c>
   121a4:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   121a8:	75 09                	jne    121b3 <get_arg_reg64_num+0x29>
   121aa:	48 8d 05 d4 9b 00 00 	lea    0x9bd4(%rip),%rax        # 1bd85 <__PRETTY_FUNCTION__.0+0x15>
   121b1:	eb 23                	jmp    121d6 <get_arg_reg64_num+0x4c>
   121b3:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   121b7:	75 09                	jne    121c2 <get_arg_reg64_num+0x38>
   121b9:	48 8d 05 ca 9b 00 00 	lea    0x9bca(%rip),%rax        # 1bd8a <__PRETTY_FUNCTION__.0+0x1a>
   121c0:	eb 14                	jmp    121d6 <get_arg_reg64_num+0x4c>
   121c2:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
   121c6:	75 09                	jne    121d1 <get_arg_reg64_num+0x47>
   121c8:	48 8d 05 c0 9b 00 00 	lea    0x9bc0(%rip),%rax        # 1bd8f <__PRETTY_FUNCTION__.0+0x1f>
   121cf:	eb 05                	jmp    121d6 <get_arg_reg64_num+0x4c>
   121d1:	b8 00 00 00 00       	mov    $0x0,%eax
   121d6:	5d                   	pop    %rbp
   121d7:	c3                   	ret

00000000000121d8 <get_arg_reg32_num>:
   121d8:	f3 0f 1e fa          	endbr64
   121dc:	55                   	push   %rbp
   121dd:	48 89 e5             	mov    %rsp,%rbp
   121e0:	89 7d fc             	mov    %edi,-0x4(%rbp)
   121e3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   121e7:	75 09                	jne    121f2 <get_arg_reg32_num+0x1a>
   121e9:	48 8d 05 a4 9b 00 00 	lea    0x9ba4(%rip),%rax        # 1bd94 <__PRETTY_FUNCTION__.0+0x24>
   121f0:	eb 32                	jmp    12224 <get_arg_reg32_num+0x4c>
   121f2:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   121f6:	75 09                	jne    12201 <get_arg_reg32_num+0x29>
   121f8:	48 8d 05 9a 9b 00 00 	lea    0x9b9a(%rip),%rax        # 1bd99 <__PRETTY_FUNCTION__.0+0x29>
   121ff:	eb 23                	jmp    12224 <get_arg_reg32_num+0x4c>
   12201:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   12205:	75 09                	jne    12210 <get_arg_reg32_num+0x38>
   12207:	48 8d 05 90 9b 00 00 	lea    0x9b90(%rip),%rax        # 1bd9e <__PRETTY_FUNCTION__.0+0x2e>
   1220e:	eb 14                	jmp    12224 <get_arg_reg32_num+0x4c>
   12210:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
   12214:	75 09                	jne    1221f <get_arg_reg32_num+0x47>
   12216:	48 8d 05 86 9b 00 00 	lea    0x9b86(%rip),%rax        # 1bda3 <__PRETTY_FUNCTION__.0+0x33>
   1221d:	eb 05                	jmp    12224 <get_arg_reg32_num+0x4c>
   1221f:	b8 00 00 00 00       	mov    $0x0,%eax
   12224:	5d                   	pop    %rbp
   12225:	c3                   	ret

0000000000012226 <init_stackmng>:
   12226:	f3 0f 1e fa          	endbr64
   1222a:	55                   	push   %rbp
   1222b:	48 89 e5             	mov    %rsp,%rbp
   1222e:	53                   	push   %rbx
   1222f:	48 83 ec 08          	sub    $0x8,%rsp
   12233:	48 8b 05 de f4 00 00 	mov    0xf4de(%rip),%rax        # 21718 <global_stackmng>
   1223a:	48 85 c0             	test   %rax,%rax
   1223d:	74 28                	je     12267 <init_stackmng+0x41>
   1223f:	48 8d 05 c2 9d 00 00 	lea    0x9dc2(%rip),%rax        # 1c008 <__PRETTY_FUNCTION__.19>
   12246:	48 89 c1             	mov    %rax,%rcx
   12249:	ba 48 00 00 00       	mov    $0x48,%edx
   1224e:	48 8d 05 53 9b 00 00 	lea    0x9b53(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12255:	48 89 c6             	mov    %rax,%rsi
   12258:	48 8d 05 78 9b 00 00 	lea    0x9b78(%rip),%rax        # 1bdd7 <__PRETTY_FUNCTION__.0+0x67>
   1225f:	48 89 c7             	mov    %rax,%rdi
   12262:	e8 e9 00 ff ff       	call   2350 <__assert_fail@plt>
   12267:	c7 05 07 ee 00 00 00 	movl   $0x0,0xee07(%rip)        # 21078 <num_args_alloced>
   1226e:	00 00 00
   12271:	bf 10 00 00 00       	mov    $0x10,%edi
   12276:	e8 95 01 ff ff       	call   2410 <malloc@plt>
   1227b:	48 89 05 96 f4 00 00 	mov    %rax,0xf496(%rip)        # 21718 <global_stackmng>
   12282:	48 8b 05 8f f4 00 00 	mov    0xf48f(%rip),%rax        # 21718 <global_stackmng>
   12289:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12290:	48 8b 1d 81 f4 00 00 	mov    0xf481(%rip),%rbx        # 21718 <global_stackmng>
   12297:	b8 00 00 00 00       	mov    $0x0,%eax
   1229c:	e8 7a 08 00 00       	call   12b1b <init_reg_stack>
   122a1:	48 89 43 08          	mov    %rax,0x8(%rbx)
   122a5:	90                   	nop
   122a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   122aa:	c9                   	leave
   122ab:	c3                   	ret

00000000000122ac <get_cur_scope>:
   122ac:	f3 0f 1e fa          	endbr64
   122b0:	55                   	push   %rbp
   122b1:	48 89 e5             	mov    %rsp,%rbp
   122b4:	48 8b 05 5d f4 00 00 	mov    0xf45d(%rip),%rax        # 21718 <global_stackmng>
   122bb:	48 8b 00             	mov    (%rax),%rax
   122be:	5d                   	pop    %rbp
   122bf:	c3                   	ret

00000000000122c0 <get_full_stack_offset>:
   122c0:	f3 0f 1e fa          	endbr64
   122c4:	55                   	push   %rbp
   122c5:	48 89 e5             	mov    %rsp,%rbp
   122c8:	48 83 ec 20          	sub    $0x20,%rsp
   122cc:	48 8b 05 45 f4 00 00 	mov    0xf445(%rip),%rax        # 21718 <global_stackmng>
   122d3:	48 85 c0             	test   %rax,%rax
   122d6:	75 28                	jne    12300 <get_full_stack_offset+0x40>
   122d8:	48 8d 05 41 9d 00 00 	lea    0x9d41(%rip),%rax        # 1c020 <__PRETTY_FUNCTION__.18>
   122df:	48 89 c1             	mov    %rax,%rcx
   122e2:	ba 59 00 00 00       	mov    $0x59,%edx
   122e7:	48 8d 05 ba 9a 00 00 	lea    0x9aba(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   122ee:	48 89 c6             	mov    %rax,%rsi
   122f1:	48 8d 05 f7 9a 00 00 	lea    0x9af7(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   122f8:	48 89 c7             	mov    %rax,%rdi
   122fb:	e8 50 00 ff ff       	call   2350 <__assert_fail@plt>
   12300:	48 8b 05 11 f4 00 00 	mov    0xf411(%rip),%rax        # 21718 <global_stackmng>
   12307:	48 8b 00             	mov    (%rax),%rax
   1230a:	48 85 c0             	test   %rax,%rax
   1230d:	75 28                	jne    12337 <get_full_stack_offset+0x77>
   1230f:	48 8d 05 0a 9d 00 00 	lea    0x9d0a(%rip),%rax        # 1c020 <__PRETTY_FUNCTION__.18>
   12316:	48 89 c1             	mov    %rax,%rcx
   12319:	ba 5a 00 00 00       	mov    $0x5a,%edx
   1231e:	48 8d 05 83 9a 00 00 	lea    0x9a83(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12325:	48 89 c6             	mov    %rax,%rsi
   12328:	48 8d 05 d9 9a 00 00 	lea    0x9ad9(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   1232f:	48 89 c7             	mov    %rax,%rdi
   12332:	e8 19 00 ff ff       	call   2350 <__assert_fail@plt>
   12337:	48 8b 05 da f3 00 00 	mov    0xf3da(%rip),%rax        # 21718 <global_stackmng>
   1233e:	48 8b 00             	mov    (%rax),%rax
   12341:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12349:	8b 10                	mov    (%rax),%edx
   1234b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1234f:	8b 40 04             	mov    0x4(%rax),%eax
   12352:	01 c2                	add    %eax,%edx
   12354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12358:	8b 40 08             	mov    0x8(%rax),%eax
   1235b:	01 d0                	add    %edx,%eax
   1235d:	89 45 f0             	mov    %eax,-0x10(%rbp)
   12360:	8b 45 f0             	mov    -0x10(%rbp),%eax
   12363:	8d 50 0f             	lea    0xf(%rax),%edx
   12366:	85 c0                	test   %eax,%eax
   12368:	0f 48 c2             	cmovs  %edx,%eax
   1236b:	c1 f8 04             	sar    $0x4,%eax
   1236e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12371:	8b 55 f0             	mov    -0x10(%rbp),%edx
   12374:	89 d0                	mov    %edx,%eax
   12376:	c1 f8 1f             	sar    $0x1f,%eax
   12379:	c1 e8 1c             	shr    $0x1c,%eax
   1237c:	01 c2                	add    %eax,%edx
   1237e:	83 e2 0f             	and    $0xf,%edx
   12381:	29 c2                	sub    %eax,%edx
   12383:	89 55 f4             	mov    %edx,-0xc(%rbp)
   12386:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   1238a:	7e 04                	jle    12390 <get_full_stack_offset+0xd0>
   1238c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   12390:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12393:	c1 e0 04             	shl    $0x4,%eax
   12396:	c9                   	leave
   12397:	c3                   	ret

0000000000012398 <push_stackscope>:
   12398:	f3 0f 1e fa          	endbr64
   1239c:	55                   	push   %rbp
   1239d:	48 89 e5             	mov    %rsp,%rbp
   123a0:	48 83 ec 10          	sub    $0x10,%rsp
   123a4:	48 8b 05 6d f3 00 00 	mov    0xf36d(%rip),%rax        # 21718 <global_stackmng>
   123ab:	48 85 c0             	test   %rax,%rax
   123ae:	75 28                	jne    123d8 <push_stackscope+0x40>
   123b0:	48 8d 05 89 9c 00 00 	lea    0x9c89(%rip),%rax        # 1c040 <__PRETTY_FUNCTION__.17>
   123b7:	48 89 c1             	mov    %rax,%rcx
   123ba:	ba 70 00 00 00       	mov    $0x70,%edx
   123bf:	48 8d 05 e2 99 00 00 	lea    0x99e2(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   123c6:	48 89 c6             	mov    %rax,%rsi
   123c9:	48 8d 05 1f 9a 00 00 	lea    0x9a1f(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   123d0:	48 89 c7             	mov    %rax,%rdi
   123d3:	e8 78 ff fe ff       	call   2350 <__assert_fail@plt>
   123d8:	b8 00 00 00 00       	mov    $0x0,%eax
   123dd:	e8 a7 0e 00 00       	call   13289 <init_stackscope>
   123e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   123e6:	48 8b 05 2b f3 00 00 	mov    0xf32b(%rip),%rax        # 21718 <global_stackmng>
   123ed:	48 8b 10             	mov    (%rax),%rdx
   123f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123f4:	48 89 50 28          	mov    %rdx,0x28(%rax)
   123f8:	48 8b 05 19 f3 00 00 	mov    0xf319(%rip),%rax        # 21718 <global_stackmng>
   123ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12403:	48 89 10             	mov    %rdx,(%rax)
   12406:	90                   	nop
   12407:	c9                   	leave
   12408:	c3                   	ret

0000000000012409 <pop_stackscope>:
   12409:	f3 0f 1e fa          	endbr64
   1240d:	55                   	push   %rbp
   1240e:	48 89 e5             	mov    %rsp,%rbp
   12411:	53                   	push   %rbx
   12412:	48 83 ec 08          	sub    $0x8,%rsp
   12416:	48 8b 05 fb f2 00 00 	mov    0xf2fb(%rip),%rax        # 21718 <global_stackmng>
   1241d:	48 85 c0             	test   %rax,%rax
   12420:	75 28                	jne    1244a <pop_stackscope+0x41>
   12422:	48 8d 05 27 9c 00 00 	lea    0x9c27(%rip),%rax        # 1c050 <__PRETTY_FUNCTION__.16>
   12429:	48 89 c1             	mov    %rax,%rcx
   1242c:	ba 7b 00 00 00       	mov    $0x7b,%edx
   12431:	48 8d 05 70 99 00 00 	lea    0x9970(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12438:	48 89 c6             	mov    %rax,%rsi
   1243b:	48 8d 05 ad 99 00 00 	lea    0x99ad(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   12442:	48 89 c7             	mov    %rax,%rdi
   12445:	e8 06 ff fe ff       	call   2350 <__assert_fail@plt>
   1244a:	48 8b 05 c7 f2 00 00 	mov    0xf2c7(%rip),%rax        # 21718 <global_stackmng>
   12451:	48 8b 00             	mov    (%rax),%rax
   12454:	48 85 c0             	test   %rax,%rax
   12457:	75 28                	jne    12481 <pop_stackscope+0x78>
   12459:	48 8d 05 f0 9b 00 00 	lea    0x9bf0(%rip),%rax        # 1c050 <__PRETTY_FUNCTION__.16>
   12460:	48 89 c1             	mov    %rax,%rcx
   12463:	ba 7c 00 00 00       	mov    $0x7c,%edx
   12468:	48 8d 05 39 99 00 00 	lea    0x9939(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1246f:	48 89 c6             	mov    %rax,%rsi
   12472:	48 8d 05 8f 99 00 00 	lea    0x998f(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   12479:	48 89 c7             	mov    %rax,%rdi
   1247c:	e8 cf fe fe ff       	call   2350 <__assert_fail@plt>
   12481:	48 8b 05 90 f2 00 00 	mov    0xf290(%rip),%rax        # 21718 <global_stackmng>
   12488:	48 8b 00             	mov    (%rax),%rax
   1248b:	48 8b 1d 86 f2 00 00 	mov    0xf286(%rip),%rbx        # 21718 <global_stackmng>
   12492:	48 89 c7             	mov    %rax,%rdi
   12495:	e8 9a 0f 00 00       	call   13434 <free_stackscope>
   1249a:	48 89 03             	mov    %rax,(%rbx)
   1249d:	90                   	nop
   1249e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   124a2:	c9                   	leave
   124a3:	c3                   	ret

00000000000124a4 <add_l_t>:
   124a4:	f3 0f 1e fa          	endbr64
   124a8:	55                   	push   %rbp
   124a9:	48 89 e5             	mov    %rsp,%rbp
   124ac:	48 83 ec 30          	sub    $0x30,%rsp
   124b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   124b4:	48 8b 05 5d f2 00 00 	mov    0xf25d(%rip),%rax        # 21718 <global_stackmng>
   124bb:	48 85 c0             	test   %rax,%rax
   124be:	75 28                	jne    124e8 <add_l_t+0x44>
   124c0:	48 8d 05 99 9b 00 00 	lea    0x9b99(%rip),%rax        # 1c060 <__PRETTY_FUNCTION__.15>
   124c7:	48 89 c1             	mov    %rax,%rcx
   124ca:	ba 84 00 00 00       	mov    $0x84,%edx
   124cf:	48 8d 05 d2 98 00 00 	lea    0x98d2(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   124d6:	48 89 c6             	mov    %rax,%rsi
   124d9:	48 8d 05 0f 99 00 00 	lea    0x990f(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   124e0:	48 89 c7             	mov    %rax,%rdi
   124e3:	e8 68 fe fe ff       	call   2350 <__assert_fail@plt>
   124e8:	48 8b 05 29 f2 00 00 	mov    0xf229(%rip),%rax        # 21718 <global_stackmng>
   124ef:	48 8b 00             	mov    (%rax),%rax
   124f2:	48 85 c0             	test   %rax,%rax
   124f5:	75 28                	jne    1251f <add_l_t+0x7b>
   124f7:	48 8d 05 62 9b 00 00 	lea    0x9b62(%rip),%rax        # 1c060 <__PRETTY_FUNCTION__.15>
   124fe:	48 89 c1             	mov    %rax,%rcx
   12501:	ba 85 00 00 00       	mov    $0x85,%edx
   12506:	48 8d 05 9b 98 00 00 	lea    0x989b(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1250d:	48 89 c6             	mov    %rax,%rsi
   12510:	48 8d 05 f1 98 00 00 	lea    0x98f1(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   12517:	48 89 c7             	mov    %rax,%rdi
   1251a:	e8 31 fe fe ff       	call   2350 <__assert_fail@plt>
   1251f:	48 8b 05 f2 f1 00 00 	mov    0xf1f2(%rip),%rax        # 21718 <global_stackmng>
   12526:	48 8b 00             	mov    (%rax),%rax
   12529:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1252d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12531:	8b 00                	mov    (%rax),%eax
   12533:	8d 50 04             	lea    0x4(%rax),%edx
   12536:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1253a:	89 10                	mov    %edx,(%rax)
   1253c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12540:	8b 50 08             	mov    0x8(%rax),%edx
   12543:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12547:	8b 40 04             	mov    0x4(%rax),%eax
   1254a:	01 c2                	add    %eax,%edx
   1254c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12550:	8b 00                	mov    (%rax),%eax
   12552:	01 d0                	add    %edx,%eax
   12554:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12557:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1255b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1255e:	ba 04 00 00 00       	mov    $0x4,%edx
   12563:	48 89 ce             	mov    %rcx,%rsi
   12566:	89 c7                	mov    %eax,%edi
   12568:	e8 ed 0f 00 00       	call   1355a <init_stack_node>
   1256d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12571:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12575:	48 8b 40 10          	mov    0x10(%rax),%rax
   12579:	48 85 c0             	test   %rax,%rax
   1257c:	75 1b                	jne    12599 <add_l_t+0xf5>
   1257e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12582:	be 04 00 00 00       	mov    $0x4,%esi
   12587:	48 89 c7             	mov    %rax,%rdi
   1258a:	e8 b8 54 ff ff       	call   7a47 <CreateListNode>
   1258f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12593:	48 89 42 10          	mov    %rax,0x10(%rdx)
   12597:	eb 2f                	jmp    125c8 <add_l_t+0x124>
   12599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1259d:	be 04 00 00 00       	mov    $0x4,%esi
   125a2:	48 89 c7             	mov    %rax,%rdi
   125a5:	e8 9d 54 ff ff       	call   7a47 <CreateListNode>
   125aa:	48 89 c2             	mov    %rax,%rdx
   125ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   125b1:	48 8b 40 10          	mov    0x10(%rax),%rax
   125b5:	48 89 d6             	mov    %rdx,%rsi
   125b8:	48 89 c7             	mov    %rax,%rdi
   125bb:	e8 53 55 ff ff       	call   7b13 <PushListNodeBack>
   125c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   125c4:	48 89 42 10          	mov    %rax,0x10(%rdx)
   125c8:	48 8b 05 91 ea 00 00 	mov    0xea91(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   125cf:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   125d2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   125d6:	48 8d 35 53 98 00 00 	lea    0x9853(%rip),%rsi        # 1be30 <__PRETTY_FUNCTION__.0+0xc0>
   125dd:	48 89 c7             	mov    %rax,%rdi
   125e0:	b8 00 00 00 00       	mov    $0x0,%eax
   125e5:	e8 e6 fd fe ff       	call   23d0 <fprintf@plt>
   125ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125ee:	c9                   	leave
   125ef:	c3                   	ret

00000000000125f0 <add_l_x>:
   125f0:	f3 0f 1e fa          	endbr64
   125f4:	55                   	push   %rbp
   125f5:	48 89 e5             	mov    %rsp,%rbp
   125f8:	48 83 ec 30          	sub    $0x30,%rsp
   125fc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12600:	48 8b 05 11 f1 00 00 	mov    0xf111(%rip),%rax        # 21718 <global_stackmng>
   12607:	48 85 c0             	test   %rax,%rax
   1260a:	75 28                	jne    12634 <add_l_x+0x44>
   1260c:	48 8d 05 55 9a 00 00 	lea    0x9a55(%rip),%rax        # 1c068 <__PRETTY_FUNCTION__.14>
   12613:	48 89 c1             	mov    %rax,%rcx
   12616:	ba a8 00 00 00       	mov    $0xa8,%edx
   1261b:	48 8d 05 86 97 00 00 	lea    0x9786(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12622:	48 89 c6             	mov    %rax,%rsi
   12625:	48 8d 05 c3 97 00 00 	lea    0x97c3(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   1262c:	48 89 c7             	mov    %rax,%rdi
   1262f:	e8 1c fd fe ff       	call   2350 <__assert_fail@plt>
   12634:	48 8b 05 dd f0 00 00 	mov    0xf0dd(%rip),%rax        # 21718 <global_stackmng>
   1263b:	48 8b 00             	mov    (%rax),%rax
   1263e:	48 85 c0             	test   %rax,%rax
   12641:	75 28                	jne    1266b <add_l_x+0x7b>
   12643:	48 8d 05 1e 9a 00 00 	lea    0x9a1e(%rip),%rax        # 1c068 <__PRETTY_FUNCTION__.14>
   1264a:	48 89 c1             	mov    %rax,%rcx
   1264d:	ba a9 00 00 00       	mov    $0xa9,%edx
   12652:	48 8d 05 4f 97 00 00 	lea    0x974f(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12659:	48 89 c6             	mov    %rax,%rsi
   1265c:	48 8d 05 a5 97 00 00 	lea    0x97a5(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   12663:	48 89 c7             	mov    %rax,%rdi
   12666:	e8 e5 fc fe ff       	call   2350 <__assert_fail@plt>
   1266b:	48 8b 05 a6 f0 00 00 	mov    0xf0a6(%rip),%rax        # 21718 <global_stackmng>
   12672:	48 8b 00             	mov    (%rax),%rax
   12675:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12679:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1267d:	8b 40 04             	mov    0x4(%rax),%eax
   12680:	8d 50 04             	lea    0x4(%rax),%edx
   12683:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12687:	89 50 04             	mov    %edx,0x4(%rax)
   1268a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1268e:	8b 50 08             	mov    0x8(%rax),%edx
   12691:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12695:	8b 40 04             	mov    0x4(%rax),%eax
   12698:	01 d0                	add    %edx,%eax
   1269a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1269d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   126a1:	8b 45 ec             	mov    -0x14(%rbp),%eax
   126a4:	ba 04 00 00 00       	mov    $0x4,%edx
   126a9:	48 89 ce             	mov    %rcx,%rsi
   126ac:	89 c7                	mov    %eax,%edi
   126ae:	e8 a7 0e 00 00       	call   1355a <init_stack_node>
   126b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   126b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126bb:	48 8b 40 18          	mov    0x18(%rax),%rax
   126bf:	48 85 c0             	test   %rax,%rax
   126c2:	75 1b                	jne    126df <add_l_x+0xef>
   126c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126c8:	be 04 00 00 00       	mov    $0x4,%esi
   126cd:	48 89 c7             	mov    %rax,%rdi
   126d0:	e8 72 53 ff ff       	call   7a47 <CreateListNode>
   126d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126d9:	48 89 42 18          	mov    %rax,0x18(%rdx)
   126dd:	eb 2f                	jmp    1270e <add_l_x+0x11e>
   126df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126e3:	be 04 00 00 00       	mov    $0x4,%esi
   126e8:	48 89 c7             	mov    %rax,%rdi
   126eb:	e8 57 53 ff ff       	call   7a47 <CreateListNode>
   126f0:	48 89 c2             	mov    %rax,%rdx
   126f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126f7:	48 8b 40 18          	mov    0x18(%rax),%rax
   126fb:	48 89 d6             	mov    %rdx,%rsi
   126fe:	48 89 c7             	mov    %rax,%rdi
   12701:	e8 0d 54 ff ff       	call   7b13 <PushListNodeBack>
   12706:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1270a:	48 89 42 18          	mov    %rax,0x18(%rdx)
   1270e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12712:	8b 08                	mov    (%rax),%ecx
   12714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12718:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1271c:	48 8b 05 3d e9 00 00 	mov    0xe93d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   12723:	48 8d 35 26 97 00 00 	lea    0x9726(%rip),%rsi        # 1be50 <__PRETTY_FUNCTION__.0+0xe0>
   1272a:	48 89 c7             	mov    %rax,%rdi
   1272d:	b8 00 00 00 00       	mov    $0x0,%eax
   12732:	e8 99 fc fe ff       	call   23d0 <fprintf@plt>
   12737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1273b:	c9                   	leave
   1273c:	c3                   	ret

000000000001273d <add_l_z>:
   1273d:	f3 0f 1e fa          	endbr64
   12741:	55                   	push   %rbp
   12742:	48 89 e5             	mov    %rsp,%rbp
   12745:	48 83 ec 30          	sub    $0x30,%rsp
   12749:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1274d:	48 8b 05 c4 ef 00 00 	mov    0xefc4(%rip),%rax        # 21718 <global_stackmng>
   12754:	48 85 c0             	test   %rax,%rax
   12757:	75 28                	jne    12781 <add_l_z+0x44>
   12759:	48 8d 05 10 99 00 00 	lea    0x9910(%rip),%rax        # 1c070 <__PRETTY_FUNCTION__.13>
   12760:	48 89 c1             	mov    %rax,%rcx
   12763:	ba cc 00 00 00       	mov    $0xcc,%edx
   12768:	48 8d 05 39 96 00 00 	lea    0x9639(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1276f:	48 89 c6             	mov    %rax,%rsi
   12772:	48 8d 05 76 96 00 00 	lea    0x9676(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   12779:	48 89 c7             	mov    %rax,%rdi
   1277c:	e8 cf fb fe ff       	call   2350 <__assert_fail@plt>
   12781:	48 8b 05 90 ef 00 00 	mov    0xef90(%rip),%rax        # 21718 <global_stackmng>
   12788:	48 8b 00             	mov    (%rax),%rax
   1278b:	48 85 c0             	test   %rax,%rax
   1278e:	75 28                	jne    127b8 <add_l_z+0x7b>
   12790:	48 8d 05 d9 98 00 00 	lea    0x98d9(%rip),%rax        # 1c070 <__PRETTY_FUNCTION__.13>
   12797:	48 89 c1             	mov    %rax,%rcx
   1279a:	ba cd 00 00 00       	mov    $0xcd,%edx
   1279f:	48 8d 05 02 96 00 00 	lea    0x9602(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   127a6:	48 89 c6             	mov    %rax,%rsi
   127a9:	48 8d 05 58 96 00 00 	lea    0x9658(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   127b0:	48 89 c7             	mov    %rax,%rdi
   127b3:	e8 98 fb fe ff       	call   2350 <__assert_fail@plt>
   127b8:	48 8b 05 59 ef 00 00 	mov    0xef59(%rip),%rax        # 21718 <global_stackmng>
   127bf:	48 8b 00             	mov    (%rax),%rax
   127c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   127c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127ca:	8b 40 08             	mov    0x8(%rax),%eax
   127cd:	8d 50 04             	lea    0x4(%rax),%edx
   127d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127d4:	89 50 08             	mov    %edx,0x8(%rax)
   127d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127db:	8b 40 08             	mov    0x8(%rax),%eax
   127de:	89 45 ec             	mov    %eax,-0x14(%rbp)
   127e1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   127e5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   127e8:	ba 04 00 00 00       	mov    $0x4,%edx
   127ed:	48 89 ce             	mov    %rcx,%rsi
   127f0:	89 c7                	mov    %eax,%edi
   127f2:	e8 63 0d 00 00       	call   1355a <init_stack_node>
   127f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   127fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127ff:	48 8b 40 20          	mov    0x20(%rax),%rax
   12803:	48 85 c0             	test   %rax,%rax
   12806:	75 1b                	jne    12823 <add_l_z+0xe6>
   12808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1280c:	be 04 00 00 00       	mov    $0x4,%esi
   12811:	48 89 c7             	mov    %rax,%rdi
   12814:	e8 2e 52 ff ff       	call   7a47 <CreateListNode>
   12819:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1281d:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12821:	eb 2f                	jmp    12852 <add_l_z+0x115>
   12823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12827:	be 04 00 00 00       	mov    $0x4,%esi
   1282c:	48 89 c7             	mov    %rax,%rdi
   1282f:	e8 13 52 ff ff       	call   7a47 <CreateListNode>
   12834:	48 89 c2             	mov    %rax,%rdx
   12837:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1283b:	48 8b 40 20          	mov    0x20(%rax),%rax
   1283f:	48 89 d6             	mov    %rdx,%rsi
   12842:	48 89 c7             	mov    %rax,%rdi
   12845:	e8 c9 52 ff ff       	call   7b13 <PushListNodeBack>
   1284a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1284e:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12852:	48 8b 05 07 e8 00 00 	mov    0xe807(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   12859:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   1285c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12860:	48 8d 35 09 96 00 00 	lea    0x9609(%rip),%rsi        # 1be70 <__PRETTY_FUNCTION__.0+0x100>
   12867:	48 89 c7             	mov    %rax,%rdi
   1286a:	b8 00 00 00 00       	mov    $0x0,%eax
   1286f:	e8 5c fb fe ff       	call   23d0 <fprintf@plt>
   12874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12878:	c9                   	leave
   12879:	c3                   	ret

000000000001287a <get_reg_stack>:
   1287a:	f3 0f 1e fa          	endbr64
   1287e:	55                   	push   %rbp
   1287f:	48 89 e5             	mov    %rsp,%rbp
   12882:	48 8b 05 8f ee 00 00 	mov    0xee8f(%rip),%rax        # 21718 <global_stackmng>
   12889:	48 85 c0             	test   %rax,%rax
   1288c:	75 28                	jne    128b6 <get_reg_stack+0x3c>
   1288e:	48 8d 05 e3 97 00 00 	lea    0x97e3(%rip),%rax        # 1c078 <__PRETTY_FUNCTION__.12>
   12895:	48 89 c1             	mov    %rax,%rcx
   12898:	ba ef 00 00 00       	mov    $0xef,%edx
   1289d:	48 8d 05 04 95 00 00 	lea    0x9504(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   128a4:	48 89 c6             	mov    %rax,%rsi
   128a7:	48 8d 05 41 95 00 00 	lea    0x9541(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   128ae:	48 89 c7             	mov    %rax,%rdi
   128b1:	e8 9a fa fe ff       	call   2350 <__assert_fail@plt>
   128b6:	48 8b 05 5b ee 00 00 	mov    0xee5b(%rip),%rax        # 21718 <global_stackmng>
   128bd:	48 8b 40 08          	mov    0x8(%rax),%rax
   128c1:	48 85 c0             	test   %rax,%rax
   128c4:	75 28                	jne    128ee <get_reg_stack+0x74>
   128c6:	48 8d 05 ab 97 00 00 	lea    0x97ab(%rip),%rax        # 1c078 <__PRETTY_FUNCTION__.12>
   128cd:	48 89 c1             	mov    %rax,%rcx
   128d0:	ba f0 00 00 00       	mov    $0xf0,%edx
   128d5:	48 8d 05 cc 94 00 00 	lea    0x94cc(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   128dc:	48 89 c6             	mov    %rax,%rsi
   128df:	48 8d 05 aa 95 00 00 	lea    0x95aa(%rip),%rax        # 1be90 <__PRETTY_FUNCTION__.0+0x120>
   128e6:	48 89 c7             	mov    %rax,%rdi
   128e9:	e8 62 fa fe ff       	call   2350 <__assert_fail@plt>
   128ee:	48 8b 05 23 ee 00 00 	mov    0xee23(%rip),%rax        # 21718 <global_stackmng>
   128f5:	48 8b 40 08          	mov    0x8(%rax),%rax
   128f9:	5d                   	pop    %rbp
   128fa:	c3                   	ret

00000000000128fb <find_in_temp>:
   128fb:	f3 0f 1e fa          	endbr64
   128ff:	55                   	push   %rbp
   12900:	48 89 e5             	mov    %rsp,%rbp
   12903:	48 83 ec 20          	sub    $0x20,%rsp
   12907:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1290b:	48 8b 05 06 ee 00 00 	mov    0xee06(%rip),%rax        # 21718 <global_stackmng>
   12912:	48 85 c0             	test   %rax,%rax
   12915:	75 28                	jne    1293f <find_in_temp+0x44>
   12917:	48 8d 05 6a 97 00 00 	lea    0x976a(%rip),%rax        # 1c088 <__PRETTY_FUNCTION__.11>
   1291e:	48 89 c1             	mov    %rax,%rcx
   12921:	ba f9 00 00 00       	mov    $0xf9,%edx
   12926:	48 8d 05 7b 94 00 00 	lea    0x947b(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1292d:	48 89 c6             	mov    %rax,%rsi
   12930:	48 8d 05 b8 94 00 00 	lea    0x94b8(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   12937:	48 89 c7             	mov    %rax,%rdi
   1293a:	e8 11 fa fe ff       	call   2350 <__assert_fail@plt>
   1293f:	48 8b 05 d2 ed 00 00 	mov    0xedd2(%rip),%rax        # 21718 <global_stackmng>
   12946:	48 8b 00             	mov    (%rax),%rax
   12949:	48 85 c0             	test   %rax,%rax
   1294c:	75 28                	jne    12976 <find_in_temp+0x7b>
   1294e:	48 8d 05 33 97 00 00 	lea    0x9733(%rip),%rax        # 1c088 <__PRETTY_FUNCTION__.11>
   12955:	48 89 c1             	mov    %rax,%rcx
   12958:	ba fa 00 00 00       	mov    $0xfa,%edx
   1295d:	48 8d 05 44 94 00 00 	lea    0x9444(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12964:	48 89 c6             	mov    %rax,%rsi
   12967:	48 8d 05 9a 94 00 00 	lea    0x949a(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   1296e:	48 89 c7             	mov    %rax,%rdi
   12971:	e8 da f9 fe ff       	call   2350 <__assert_fail@plt>
   12976:	48 8b 05 9b ed 00 00 	mov    0xed9b(%rip),%rax        # 21718 <global_stackmng>
   1297d:	48 8b 00             	mov    (%rax),%rax
   12980:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12984:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12988:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1298c:	48 89 d6             	mov    %rdx,%rsi
   1298f:	48 89 c7             	mov    %rax,%rdi
   12992:	e8 62 09 00 00       	call   132f9 <stackscope_find_t>
   12997:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1299b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1299f:	c9                   	leave
   129a0:	c3                   	ret

00000000000129a1 <find_label>:
   129a1:	f3 0f 1e fa          	endbr64
   129a5:	55                   	push   %rbp
   129a6:	48 89 e5             	mov    %rsp,%rbp
   129a9:	48 83 ec 20          	sub    $0x20,%rsp
   129ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129b1:	48 8b 05 60 ed 00 00 	mov    0xed60(%rip),%rax        # 21718 <global_stackmng>
   129b8:	48 85 c0             	test   %rax,%rax
   129bb:	75 28                	jne    129e5 <find_label+0x44>
   129bd:	48 8d 05 d4 96 00 00 	lea    0x96d4(%rip),%rax        # 1c098 <__PRETTY_FUNCTION__.10>
   129c4:	48 89 c1             	mov    %rax,%rcx
   129c7:	ba 08 01 00 00       	mov    $0x108,%edx
   129cc:	48 8d 05 d5 93 00 00 	lea    0x93d5(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   129d3:	48 89 c6             	mov    %rax,%rsi
   129d6:	48 8d 05 12 94 00 00 	lea    0x9412(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   129dd:	48 89 c7             	mov    %rax,%rdi
   129e0:	e8 6b f9 fe ff       	call   2350 <__assert_fail@plt>
   129e5:	48 8b 05 2c ed 00 00 	mov    0xed2c(%rip),%rax        # 21718 <global_stackmng>
   129ec:	48 8b 00             	mov    (%rax),%rax
   129ef:	48 85 c0             	test   %rax,%rax
   129f2:	75 28                	jne    12a1c <find_label+0x7b>
   129f4:	48 8d 05 9d 96 00 00 	lea    0x969d(%rip),%rax        # 1c098 <__PRETTY_FUNCTION__.10>
   129fb:	48 89 c1             	mov    %rax,%rcx
   129fe:	ba 09 01 00 00       	mov    $0x109,%edx
   12a03:	48 8d 05 9e 93 00 00 	lea    0x939e(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12a0a:	48 89 c6             	mov    %rax,%rsi
   12a0d:	48 8d 05 f4 93 00 00 	lea    0x93f4(%rip),%rax        # 1be08 <__PRETTY_FUNCTION__.0+0x98>
   12a14:	48 89 c7             	mov    %rax,%rdi
   12a17:	e8 34 f9 fe ff       	call   2350 <__assert_fail@plt>
   12a1c:	48 8b 05 f5 ec 00 00 	mov    0xecf5(%rip),%rax        # 21718 <global_stackmng>
   12a23:	48 8b 00             	mov    (%rax),%rax
   12a26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12a2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a32:	48 89 d6             	mov    %rdx,%rsi
   12a35:	48 89 c7             	mov    %rax,%rdi
   12a38:	e8 8e 09 00 00       	call   133cb <stackscope_find_z>
   12a3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12a41:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12a46:	74 06                	je     12a4e <find_label+0xad>
   12a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a4c:	eb 4d                	jmp    12a9b <find_label+0xfa>
   12a4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a56:	48 89 d6             	mov    %rdx,%rsi
   12a59:	48 89 c7             	mov    %rax,%rdi
   12a5c:	e8 01 09 00 00       	call   13362 <stackscope_find_x>
   12a61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12a65:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12a6a:	74 06                	je     12a72 <find_label+0xd1>
   12a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a70:	eb 29                	jmp    12a9b <find_label+0xfa>
   12a72:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a7a:	48 89 d6             	mov    %rdx,%rsi
   12a7d:	48 89 c7             	mov    %rax,%rdi
   12a80:	e8 74 08 00 00       	call   132f9 <stackscope_find_t>
   12a85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12a89:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12a8e:	74 06                	je     12a96 <find_label+0xf5>
   12a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a94:	eb 05                	jmp    12a9b <find_label+0xfa>
   12a96:	b8 00 00 00 00       	mov    $0x0,%eax
   12a9b:	c9                   	leave
   12a9c:	c3                   	ret

0000000000012a9d <free_stackmng>:
   12a9d:	f3 0f 1e fa          	endbr64
   12aa1:	55                   	push   %rbp
   12aa2:	48 89 e5             	mov    %rsp,%rbp
   12aa5:	48 8b 05 6c ec 00 00 	mov    0xec6c(%rip),%rax        # 21718 <global_stackmng>
   12aac:	48 85 c0             	test   %rax,%rax
   12aaf:	75 28                	jne    12ad9 <free_stackmng+0x3c>
   12ab1:	48 8d 05 f0 95 00 00 	lea    0x95f0(%rip),%rax        # 1c0a8 <__PRETTY_FUNCTION__.9>
   12ab8:	48 89 c1             	mov    %rax,%rcx
   12abb:	ba 27 01 00 00       	mov    $0x127,%edx
   12ac0:	48 8d 05 e1 92 00 00 	lea    0x92e1(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12ac7:	48 89 c6             	mov    %rax,%rsi
   12aca:	48 8d 05 1e 93 00 00 	lea    0x931e(%rip),%rax        # 1bdef <__PRETTY_FUNCTION__.0+0x7f>
   12ad1:	48 89 c7             	mov    %rax,%rdi
   12ad4:	e8 77 f8 fe ff       	call   2350 <__assert_fail@plt>
   12ad9:	48 8b 05 38 ec 00 00 	mov    0xec38(%rip),%rax        # 21718 <global_stackmng>
   12ae0:	48 8b 00             	mov    (%rax),%rax
   12ae3:	48 89 c7             	mov    %rax,%rdi
   12ae6:	e8 b6 09 00 00       	call   134a1 <free_all_stackscopes>
   12aeb:	48 8b 05 26 ec 00 00 	mov    0xec26(%rip),%rax        # 21718 <global_stackmng>
   12af2:	48 8b 40 08          	mov    0x8(%rax),%rax
   12af6:	48 89 c7             	mov    %rax,%rdi
   12af9:	e8 9e 06 00 00       	call   1319c <free_reg_stack>
   12afe:	48 8b 05 13 ec 00 00 	mov    0xec13(%rip),%rax        # 21718 <global_stackmng>
   12b05:	48 89 c7             	mov    %rax,%rdi
   12b08:	e8 83 f7 fe ff       	call   2290 <free@plt>
   12b0d:	48 c7 05 00 ec 00 00 	movq   $0x0,0xec00(%rip)        # 21718 <global_stackmng>
   12b14:	00 00 00 00
   12b18:	90                   	nop
   12b19:	5d                   	pop    %rbp
   12b1a:	c3                   	ret

0000000000012b1b <init_reg_stack>:
   12b1b:	f3 0f 1e fa          	endbr64
   12b1f:	55                   	push   %rbp
   12b20:	48 89 e5             	mov    %rsp,%rbp
   12b23:	48 83 ec 20          	sub    $0x20,%rsp
   12b27:	bf 10 00 00 00       	mov    $0x10,%edi
   12b2c:	e8 df f8 fe ff       	call   2410 <malloc@plt>
   12b31:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12b35:	bf 10 00 00 00       	mov    $0x10,%edi
   12b3a:	e8 d1 f8 fe ff       	call   2410 <malloc@plt>
   12b3f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12b43:	48 8d 05 69 93 00 00 	lea    0x9369(%rip),%rax        # 1beb3 <__PRETTY_FUNCTION__.0+0x143>
   12b4a:	48 89 c7             	mov    %rax,%rdi
   12b4d:	e8 4e f9 fe ff       	call   24a0 <strdup@plt>
   12b52:	48 89 c2             	mov    %rax,%rdx
   12b55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b59:	48 89 10             	mov    %rdx,(%rax)
   12b5c:	48 8d 05 55 93 00 00 	lea    0x9355(%rip),%rax        # 1beb8 <__PRETTY_FUNCTION__.0+0x148>
   12b63:	48 89 c7             	mov    %rax,%rdi
   12b66:	e8 35 f9 fe ff       	call   24a0 <strdup@plt>
   12b6b:	48 89 c2             	mov    %rax,%rdx
   12b6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b72:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12b76:	bf 10 00 00 00       	mov    $0x10,%edi
   12b7b:	e8 90 f8 fe ff       	call   2410 <malloc@plt>
   12b80:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12b84:	48 8d 05 f5 91 00 00 	lea    0x91f5(%rip),%rax        # 1bd80 <__PRETTY_FUNCTION__.0+0x10>
   12b8b:	48 89 c7             	mov    %rax,%rdi
   12b8e:	e8 0d f9 fe ff       	call   24a0 <strdup@plt>
   12b93:	48 89 c2             	mov    %rax,%rdx
   12b96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b9a:	48 89 10             	mov    %rdx,(%rax)
   12b9d:	48 8d 05 f0 91 00 00 	lea    0x91f0(%rip),%rax        # 1bd94 <__PRETTY_FUNCTION__.0+0x24>
   12ba4:	48 89 c7             	mov    %rax,%rdi
   12ba7:	e8 f4 f8 fe ff       	call   24a0 <strdup@plt>
   12bac:	48 89 c2             	mov    %rax,%rdx
   12baf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12bb3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12bb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bbb:	be 04 00 00 00       	mov    $0x4,%esi
   12bc0:	48 89 c7             	mov    %rax,%rdi
   12bc3:	e8 7f 4e ff ff       	call   7a47 <CreateListNode>
   12bc8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12bcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12bd0:	be 04 00 00 00       	mov    $0x4,%esi
   12bd5:	48 89 c7             	mov    %rax,%rdi
   12bd8:	e8 6a 4e ff ff       	call   7a47 <CreateListNode>
   12bdd:	48 89 c2             	mov    %rax,%rdx
   12be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be4:	48 89 d6             	mov    %rdx,%rsi
   12be7:	48 89 c7             	mov    %rax,%rdi
   12bea:	e8 24 4f ff ff       	call   7b13 <PushListNodeBack>
   12bef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12bf3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12bf7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   12bfe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c06:	48 89 10             	mov    %rdx,(%rax)
   12c09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c0d:	c7 40 0c 02 00 00 00 	movl   $0x2,0xc(%rax)
   12c14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c18:	c9                   	leave
   12c19:	c3                   	ret

0000000000012c1a <get_register_64bit>:
   12c1a:	f3 0f 1e fa          	endbr64
   12c1e:	55                   	push   %rbp
   12c1f:	48 89 e5             	mov    %rsp,%rbp
   12c22:	48 83 ec 40          	sub    $0x40,%rsp
   12c26:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12c2a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12c2e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12c32:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12c37:	75 28                	jne    12c61 <get_register_64bit+0x47>
   12c39:	48 8d 05 80 94 00 00 	lea    0x9480(%rip),%rax        # 1c0c0 <__PRETTY_FUNCTION__.8>
   12c40:	48 89 c1             	mov    %rax,%rcx
   12c43:	ba 63 01 00 00       	mov    $0x163,%edx
   12c48:	48 8d 05 59 91 00 00 	lea    0x9159(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12c4f:	48 89 c6             	mov    %rax,%rsi
   12c52:	48 8d 05 64 92 00 00 	lea    0x9264(%rip),%rax        # 1bebd <__PRETTY_FUNCTION__.0+0x14d>
   12c59:	48 89 c7             	mov    %rax,%rdi
   12c5c:	e8 ef f6 fe ff       	call   2350 <__assert_fail@plt>
   12c61:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12c66:	75 28                	jne    12c90 <get_register_64bit+0x76>
   12c68:	48 8d 05 51 94 00 00 	lea    0x9451(%rip),%rax        # 1c0c0 <__PRETTY_FUNCTION__.8>
   12c6f:	48 89 c1             	mov    %rax,%rcx
   12c72:	ba 64 01 00 00       	mov    $0x164,%edx
   12c77:	48 8d 05 2a 91 00 00 	lea    0x912a(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12c7e:	48 89 c6             	mov    %rax,%rsi
   12c81:	48 8d 05 46 92 00 00 	lea    0x9246(%rip),%rax        # 1bece <__PRETTY_FUNCTION__.0+0x15e>
   12c88:	48 89 c7             	mov    %rax,%rdi
   12c8b:	e8 c0 f6 fe ff       	call   2350 <__assert_fail@plt>
   12c90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c94:	48 8b 00             	mov    (%rax),%rax
   12c97:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12c9b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12ca2:	00
   12ca3:	e9 91 00 00 00       	jmp    12d39 <get_register_64bit+0x11f>
   12ca8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cac:	48 8b 40 08          	mov    0x8(%rax),%rax
   12cb0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cb8:	48 8b 00             	mov    (%rax),%rax
   12cbb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12cbf:	48 89 d6             	mov    %rdx,%rsi
   12cc2:	48 89 c7             	mov    %rax,%rdi
   12cc5:	e8 f6 f6 fe ff       	call   23c0 <strcmp@plt>
   12cca:	85 c0                	test   %eax,%eax
   12ccc:	75 57                	jne    12d25 <get_register_64bit+0x10b>
   12cce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cd2:	8b 40 08             	mov    0x8(%rax),%eax
   12cd5:	8d 50 01             	lea    0x1(%rax),%edx
   12cd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cdc:	89 50 08             	mov    %edx,0x8(%rax)
   12cdf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12ce4:	75 11                	jne    12cf7 <get_register_64bit+0xdd>
   12ce6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cea:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cf2:	48 89 10             	mov    %rdx,(%rax)
   12cf5:	eb 10                	jmp    12d07 <get_register_64bit+0xed>
   12cf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cfb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12cff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12d03:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12d07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d0b:	48 89 c7             	mov    %rax,%rdi
   12d0e:	e8 7d f5 fe ff       	call   2290 <free@plt>
   12d13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d17:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d1b:	48 89 10             	mov    %rdx,(%rax)
   12d1e:	b8 00 00 00 00       	mov    $0x0,%eax
   12d23:	eb 4c                	jmp    12d71 <get_register_64bit+0x157>
   12d25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12d2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d31:	48 8b 40 10          	mov    0x10(%rax),%rax
   12d35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12d39:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12d3e:	0f 85 64 ff ff ff    	jne    12ca8 <get_register_64bit+0x8e>
   12d44:	48 8b 05 15 e3 00 00 	mov    0xe315(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   12d4b:	48 89 c1             	mov    %rax,%rcx
   12d4e:	ba 40 00 00 00       	mov    $0x40,%edx
   12d53:	be 01 00 00 00       	mov    $0x1,%esi
   12d58:	48 8d 05 81 91 00 00 	lea    0x9181(%rip),%rax        # 1bee0 <__PRETTY_FUNCTION__.0+0x170>
   12d5f:	48 89 c7             	mov    %rax,%rdi
   12d62:	e8 29 f7 fe ff       	call   2490 <fwrite@plt>
   12d67:	bf 01 00 00 00       	mov    $0x1,%edi
   12d6c:	e8 0f f7 fe ff       	call   2480 <exit@plt>
   12d71:	c9                   	leave
   12d72:	c3                   	ret

0000000000012d73 <get_register_32bit>:
   12d73:	f3 0f 1e fa          	endbr64
   12d77:	55                   	push   %rbp
   12d78:	48 89 e5             	mov    %rsp,%rbp
   12d7b:	48 83 ec 40          	sub    $0x40,%rsp
   12d7f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12d83:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12d87:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12d8b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12d90:	75 28                	jne    12dba <get_register_32bit+0x47>
   12d92:	48 8d 05 47 93 00 00 	lea    0x9347(%rip),%rax        # 1c0e0 <__PRETTY_FUNCTION__.7>
   12d99:	48 89 c1             	mov    %rax,%rcx
   12d9c:	ba 8a 01 00 00       	mov    $0x18a,%edx
   12da1:	48 8d 05 00 90 00 00 	lea    0x9000(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12da8:	48 89 c6             	mov    %rax,%rsi
   12dab:	48 8d 05 0b 91 00 00 	lea    0x910b(%rip),%rax        # 1bebd <__PRETTY_FUNCTION__.0+0x14d>
   12db2:	48 89 c7             	mov    %rax,%rdi
   12db5:	e8 96 f5 fe ff       	call   2350 <__assert_fail@plt>
   12dba:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12dbf:	75 28                	jne    12de9 <get_register_32bit+0x76>
   12dc1:	48 8d 05 18 93 00 00 	lea    0x9318(%rip),%rax        # 1c0e0 <__PRETTY_FUNCTION__.7>
   12dc8:	48 89 c1             	mov    %rax,%rcx
   12dcb:	ba 8b 01 00 00       	mov    $0x18b,%edx
   12dd0:	48 8d 05 d1 8f 00 00 	lea    0x8fd1(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12dd7:	48 89 c6             	mov    %rax,%rsi
   12dda:	48 8d 05 40 91 00 00 	lea    0x9140(%rip),%rax        # 1bf21 <__PRETTY_FUNCTION__.0+0x1b1>
   12de1:	48 89 c7             	mov    %rax,%rdi
   12de4:	e8 67 f5 fe ff       	call   2350 <__assert_fail@plt>
   12de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ded:	48 8b 00             	mov    (%rax),%rax
   12df0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12df4:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12dfb:	00
   12dfc:	e9 92 00 00 00       	jmp    12e93 <get_register_32bit+0x120>
   12e01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e05:	48 8b 40 08          	mov    0x8(%rax),%rax
   12e09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12e0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e11:	48 8b 40 08          	mov    0x8(%rax),%rax
   12e15:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12e19:	48 89 d6             	mov    %rdx,%rsi
   12e1c:	48 89 c7             	mov    %rax,%rdi
   12e1f:	e8 9c f5 fe ff       	call   23c0 <strcmp@plt>
   12e24:	85 c0                	test   %eax,%eax
   12e26:	75 57                	jne    12e7f <get_register_32bit+0x10c>
   12e28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e2c:	8b 40 08             	mov    0x8(%rax),%eax
   12e2f:	8d 50 01             	lea    0x1(%rax),%edx
   12e32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e36:	89 50 08             	mov    %edx,0x8(%rax)
   12e39:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12e3e:	75 11                	jne    12e51 <get_register_32bit+0xde>
   12e40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e44:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e4c:	48 89 10             	mov    %rdx,(%rax)
   12e4f:	eb 10                	jmp    12e61 <get_register_32bit+0xee>
   12e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e55:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e5d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12e61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e65:	48 89 c7             	mov    %rax,%rdi
   12e68:	e8 23 f4 fe ff       	call   2290 <free@plt>
   12e6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12e71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e75:	48 89 10             	mov    %rdx,(%rax)
   12e78:	b8 00 00 00 00       	mov    $0x0,%eax
   12e7d:	eb 4c                	jmp    12ecb <get_register_32bit+0x158>
   12e7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e83:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12e87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e8b:	48 8b 40 10          	mov    0x10(%rax),%rax
   12e8f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12e93:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12e98:	0f 85 63 ff ff ff    	jne    12e01 <get_register_32bit+0x8e>
   12e9e:	48 8b 05 bb e1 00 00 	mov    0xe1bb(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   12ea5:	48 89 c1             	mov    %rax,%rcx
   12ea8:	ba 40 00 00 00       	mov    $0x40,%edx
   12ead:	be 01 00 00 00       	mov    $0x1,%esi
   12eb2:	48 8d 05 27 90 00 00 	lea    0x9027(%rip),%rax        # 1bee0 <__PRETTY_FUNCTION__.0+0x170>
   12eb9:	48 89 c7             	mov    %rax,%rdi
   12ebc:	e8 cf f5 fe ff       	call   2490 <fwrite@plt>
   12ec1:	bf 01 00 00 00       	mov    $0x1,%edi
   12ec6:	e8 b5 f5 fe ff       	call   2480 <exit@plt>
   12ecb:	c9                   	leave
   12ecc:	c3                   	ret

0000000000012ecd <push_reg_stack>:
   12ecd:	f3 0f 1e fa          	endbr64
   12ed1:	55                   	push   %rbp
   12ed2:	48 89 e5             	mov    %rsp,%rbp
   12ed5:	48 83 ec 10          	sub    $0x10,%rsp
   12ed9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12edd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12ee1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12ee6:	75 28                	jne    12f10 <push_reg_stack+0x43>
   12ee8:	48 8d 05 09 92 00 00 	lea    0x9209(%rip),%rax        # 1c0f8 <__PRETTY_FUNCTION__.6>
   12eef:	48 89 c1             	mov    %rax,%rcx
   12ef2:	ba ae 01 00 00       	mov    $0x1ae,%edx
   12ef7:	48 8d 05 aa 8e 00 00 	lea    0x8eaa(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12efe:	48 89 c6             	mov    %rax,%rsi
   12f01:	48 8d 05 28 90 00 00 	lea    0x9028(%rip),%rax        # 1bf30 <__PRETTY_FUNCTION__.0+0x1c0>
   12f08:	48 89 c7             	mov    %rax,%rdi
   12f0b:	e8 40 f4 fe ff       	call   2350 <__assert_fail@plt>
   12f10:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12f15:	75 28                	jne    12f3f <push_reg_stack+0x72>
   12f17:	48 8d 05 da 91 00 00 	lea    0x91da(%rip),%rax        # 1c0f8 <__PRETTY_FUNCTION__.6>
   12f1e:	48 89 c1             	mov    %rax,%rcx
   12f21:	ba af 01 00 00       	mov    $0x1af,%edx
   12f26:	48 8d 05 7b 8e 00 00 	lea    0x8e7b(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12f2d:	48 89 c6             	mov    %rax,%rsi
   12f30:	48 8d 05 0b 90 00 00 	lea    0x900b(%rip),%rax        # 1bf42 <__PRETTY_FUNCTION__.0+0x1d2>
   12f37:	48 89 c7             	mov    %rax,%rdi
   12f3a:	e8 11 f4 fe ff       	call   2350 <__assert_fail@plt>
   12f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f43:	8b 40 08             	mov    0x8(%rax),%eax
   12f46:	8d 50 ff             	lea    -0x1(%rax),%edx
   12f49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f4d:	89 50 08             	mov    %edx,0x8(%rax)
   12f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f54:	48 8b 00             	mov    (%rax),%rax
   12f57:	48 85 c0             	test   %rax,%rax
   12f5a:	75 1a                	jne    12f76 <push_reg_stack+0xa9>
   12f5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f60:	be 04 00 00 00       	mov    $0x4,%esi
   12f65:	48 89 c7             	mov    %rax,%rdi
   12f68:	e8 da 4a ff ff       	call   7a47 <CreateListNode>
   12f6d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f71:	48 89 02             	mov    %rax,(%rdx)
   12f74:	eb 2d                	jmp    12fa3 <push_reg_stack+0xd6>
   12f76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f7a:	be 04 00 00 00       	mov    $0x4,%esi
   12f7f:	48 89 c7             	mov    %rax,%rdi
   12f82:	e8 c0 4a ff ff       	call   7a47 <CreateListNode>
   12f87:	48 89 c2             	mov    %rax,%rdx
   12f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f8e:	48 8b 00             	mov    (%rax),%rax
   12f91:	48 89 d6             	mov    %rdx,%rsi
   12f94:	48 89 c7             	mov    %rax,%rdi
   12f97:	e8 f3 4a ff ff       	call   7a8f <PushListNodeFront>
   12f9c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12fa0:	48 89 02             	mov    %rax,(%rdx)
   12fa3:	90                   	nop
   12fa4:	c9                   	leave
   12fa5:	c3                   	ret

0000000000012fa6 <swap_reg_stack>:
   12fa6:	f3 0f 1e fa          	endbr64
   12faa:	55                   	push   %rbp
   12fab:	48 89 e5             	mov    %rsp,%rbp
   12fae:	48 83 ec 20          	sub    $0x20,%rsp
   12fb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12fb6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12fbb:	75 28                	jne    12fe5 <swap_reg_stack+0x3f>
   12fbd:	48 8d 05 44 91 00 00 	lea    0x9144(%rip),%rax        # 1c108 <__PRETTY_FUNCTION__.5>
   12fc4:	48 89 c1             	mov    %rax,%rcx
   12fc7:	ba c2 01 00 00       	mov    $0x1c2,%edx
   12fcc:	48 8d 05 d5 8d 00 00 	lea    0x8dd5(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   12fd3:	48 89 c6             	mov    %rax,%rsi
   12fd6:	48 8d 05 53 8f 00 00 	lea    0x8f53(%rip),%rax        # 1bf30 <__PRETTY_FUNCTION__.0+0x1c0>
   12fdd:	48 89 c7             	mov    %rax,%rdi
   12fe0:	e8 6b f3 fe ff       	call   2350 <__assert_fail@plt>
   12fe5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fe9:	48 8b 00             	mov    (%rax),%rax
   12fec:	48 85 c0             	test   %rax,%rax
   12fef:	75 28                	jne    13019 <swap_reg_stack+0x73>
   12ff1:	48 8d 05 10 91 00 00 	lea    0x9110(%rip),%rax        # 1c108 <__PRETTY_FUNCTION__.5>
   12ff8:	48 89 c1             	mov    %rax,%rcx
   12ffb:	ba c3 01 00 00       	mov    $0x1c3,%edx
   13000:	48 8d 05 a1 8d 00 00 	lea    0x8da1(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   13007:	48 89 c6             	mov    %rax,%rsi
   1300a:	48 8d 05 3f 8f 00 00 	lea    0x8f3f(%rip),%rax        # 1bf50 <__PRETTY_FUNCTION__.0+0x1e0>
   13011:	48 89 c7             	mov    %rax,%rdi
   13014:	e8 37 f3 fe ff       	call   2350 <__assert_fail@plt>
   13019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1301d:	48 8b 00             	mov    (%rax),%rax
   13020:	48 8b 40 10          	mov    0x10(%rax),%rax
   13024:	48 85 c0             	test   %rax,%rax
   13027:	75 28                	jne    13051 <swap_reg_stack+0xab>
   13029:	48 8d 05 d8 90 00 00 	lea    0x90d8(%rip),%rax        # 1c108 <__PRETTY_FUNCTION__.5>
   13030:	48 89 c1             	mov    %rax,%rcx
   13033:	ba c4 01 00 00       	mov    $0x1c4,%edx
   13038:	48 8d 05 69 8d 00 00 	lea    0x8d69(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1303f:	48 89 c6             	mov    %rax,%rsi
   13042:	48 8d 05 2f 8f 00 00 	lea    0x8f2f(%rip),%rax        # 1bf78 <__PRETTY_FUNCTION__.0+0x208>
   13049:	48 89 c7             	mov    %rax,%rdi
   1304c:	e8 ff f2 fe ff       	call   2350 <__assert_fail@plt>
   13051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13055:	48 8b 00             	mov    (%rax),%rax
   13058:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1305c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13060:	48 8b 40 10          	mov    0x10(%rax),%rax
   13064:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1306c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13070:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13074:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1307c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13080:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13088:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1308c:	48 89 10             	mov    %rdx,(%rax)
   1308f:	90                   	nop
   13090:	c9                   	leave
   13091:	c3                   	ret

0000000000013092 <front_reg_stack>:
   13092:	f3 0f 1e fa          	endbr64
   13096:	55                   	push   %rbp
   13097:	48 89 e5             	mov    %rsp,%rbp
   1309a:	48 83 ec 10          	sub    $0x10,%rsp
   1309e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130a2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   130a7:	75 28                	jne    130d1 <front_reg_stack+0x3f>
   130a9:	48 8d 05 70 90 00 00 	lea    0x9070(%rip),%rax        # 1c120 <__PRETTY_FUNCTION__.4>
   130b0:	48 89 c1             	mov    %rax,%rcx
   130b3:	ba d1 01 00 00       	mov    $0x1d1,%edx
   130b8:	48 8d 05 e9 8c 00 00 	lea    0x8ce9(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   130bf:	48 89 c6             	mov    %rax,%rsi
   130c2:	48 8d 05 67 8e 00 00 	lea    0x8e67(%rip),%rax        # 1bf30 <__PRETTY_FUNCTION__.0+0x1c0>
   130c9:	48 89 c7             	mov    %rax,%rdi
   130cc:	e8 7f f2 fe ff       	call   2350 <__assert_fail@plt>
   130d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130d5:	48 8b 00             	mov    (%rax),%rax
   130d8:	48 8b 40 08          	mov    0x8(%rax),%rax
   130dc:	c9                   	leave
   130dd:	c3                   	ret

00000000000130de <pop_reg_stack>:
   130de:	f3 0f 1e fa          	endbr64
   130e2:	55                   	push   %rbp
   130e3:	48 89 e5             	mov    %rsp,%rbp
   130e6:	48 83 ec 20          	sub    $0x20,%rsp
   130ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   130ee:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   130f3:	75 28                	jne    1311d <pop_reg_stack+0x3f>
   130f5:	48 8d 05 34 90 00 00 	lea    0x9034(%rip),%rax        # 1c130 <__PRETTY_FUNCTION__.3>
   130fc:	48 89 c1             	mov    %rax,%rcx
   130ff:	ba d8 01 00 00       	mov    $0x1d8,%edx
   13104:	48 8d 05 9d 8c 00 00 	lea    0x8c9d(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1310b:	48 89 c6             	mov    %rax,%rsi
   1310e:	48 8d 05 1b 8e 00 00 	lea    0x8e1b(%rip),%rax        # 1bf30 <__PRETTY_FUNCTION__.0+0x1c0>
   13115:	48 89 c7             	mov    %rax,%rdi
   13118:	e8 33 f2 fe ff       	call   2350 <__assert_fail@plt>
   1311d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13121:	48 8b 00             	mov    (%rax),%rax
   13124:	48 85 c0             	test   %rax,%rax
   13127:	74 4c                	je     13175 <pop_reg_stack+0x97>
   13129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1312d:	8b 40 08             	mov    0x8(%rax),%eax
   13130:	8d 50 01             	lea    0x1(%rax),%edx
   13133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13137:	89 50 08             	mov    %edx,0x8(%rax)
   1313a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1313e:	48 8b 00             	mov    (%rax),%rax
   13141:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13145:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13149:	48 8b 00             	mov    (%rax),%rax
   1314c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13154:	48 89 10             	mov    %rdx,(%rax)
   13157:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1315b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1315f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13163:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13167:	48 89 c7             	mov    %rax,%rdi
   1316a:	e8 21 f1 fe ff       	call   2290 <free@plt>
   1316f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13173:	eb 05                	jmp    1317a <pop_reg_stack+0x9c>
   13175:	b8 00 00 00 00       	mov    $0x0,%eax
   1317a:	c9                   	leave
   1317b:	c3                   	ret

000000000001317c <get_num_registers>:
   1317c:	f3 0f 1e fa          	endbr64
   13180:	55                   	push   %rbp
   13181:	48 89 e5             	mov    %rsp,%rbp
   13184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1318c:	8b 50 0c             	mov    0xc(%rax),%edx
   1318f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13193:	8b 40 08             	mov    0x8(%rax),%eax
   13196:	29 c2                	sub    %eax,%edx
   13198:	89 d0                	mov    %edx,%eax
   1319a:	5d                   	pop    %rbp
   1319b:	c3                   	ret

000000000001319c <free_reg_stack>:
   1319c:	f3 0f 1e fa          	endbr64
   131a0:	55                   	push   %rbp
   131a1:	48 89 e5             	mov    %rsp,%rbp
   131a4:	48 83 ec 20          	sub    $0x20,%rsp
   131a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   131ac:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   131b1:	75 28                	jne    131db <free_reg_stack+0x3f>
   131b3:	48 8d 05 86 8f 00 00 	lea    0x8f86(%rip),%rax        # 1c140 <__PRETTY_FUNCTION__.2>
   131ba:	48 89 c1             	mov    %rax,%rcx
   131bd:	ba f4 01 00 00       	mov    $0x1f4,%edx
   131c2:	48 8d 05 df 8b 00 00 	lea    0x8bdf(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   131c9:	48 89 c6             	mov    %rax,%rsi
   131cc:	48 8d 05 5d 8d 00 00 	lea    0x8d5d(%rip),%rax        # 1bf30 <__PRETTY_FUNCTION__.0+0x1c0>
   131d3:	48 89 c7             	mov    %rax,%rdi
   131d6:	e8 75 f1 fe ff       	call   2350 <__assert_fail@plt>
   131db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131df:	8b 40 08             	mov    0x8(%rax),%eax
   131e2:	85 c0                	test   %eax,%eax
   131e4:	0f 84 84 00 00 00    	je     1326e <free_reg_stack+0xd2>
   131ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131ee:	8b 50 08             	mov    0x8(%rax),%edx
   131f1:	48 8b 05 68 de 00 00 	mov    0xde68(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   131f8:	48 8d 0d a1 8d 00 00 	lea    0x8da1(%rip),%rcx        # 1bfa0 <__PRETTY_FUNCTION__.0+0x230>
   131ff:	48 89 ce             	mov    %rcx,%rsi
   13202:	48 89 c7             	mov    %rax,%rdi
   13205:	b8 00 00 00 00       	mov    $0x0,%eax
   1320a:	e8 c1 f1 fe ff       	call   23d0 <fprintf@plt>
   1320f:	eb 5d                	jmp    1326e <free_reg_stack+0xd2>
   13211:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13215:	48 8b 00             	mov    (%rax),%rax
   13218:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1321c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13220:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13224:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13228:	48 89 10             	mov    %rdx,(%rax)
   1322b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1322f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13233:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1323b:	48 8b 00             	mov    (%rax),%rax
   1323e:	48 89 c7             	mov    %rax,%rdi
   13241:	e8 4a f0 fe ff       	call   2290 <free@plt>
   13246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1324a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1324e:	48 89 c7             	mov    %rax,%rdi
   13251:	e8 3a f0 fe ff       	call   2290 <free@plt>
   13256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1325a:	48 89 c7             	mov    %rax,%rdi
   1325d:	e8 2e f0 fe ff       	call   2290 <free@plt>
   13262:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13266:	48 89 c7             	mov    %rax,%rdi
   13269:	e8 22 f0 fe ff       	call   2290 <free@plt>
   1326e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13272:	48 8b 00             	mov    (%rax),%rax
   13275:	48 85 c0             	test   %rax,%rax
   13278:	75 97                	jne    13211 <free_reg_stack+0x75>
   1327a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1327e:	48 89 c7             	mov    %rax,%rdi
   13281:	e8 0a f0 fe ff       	call   2290 <free@plt>
   13286:	90                   	nop
   13287:	c9                   	leave
   13288:	c3                   	ret

0000000000013289 <init_stackscope>:
   13289:	f3 0f 1e fa          	endbr64
   1328d:	55                   	push   %rbp
   1328e:	48 89 e5             	mov    %rsp,%rbp
   13291:	48 83 ec 10          	sub    $0x10,%rsp
   13295:	bf 30 00 00 00       	mov    $0x30,%edi
   1329a:	e8 71 f1 fe ff       	call   2410 <malloc@plt>
   1329f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   132a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132a7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   132ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132b1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   132b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132bc:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   132c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132c7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   132ce:	00
   132cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132d3:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   132da:	00
   132db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132df:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   132e6:	00
   132e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132eb:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   132f2:	00
   132f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132f7:	c9                   	leave
   132f8:	c3                   	ret

00000000000132f9 <stackscope_find_t>:
   132f9:	f3 0f 1e fa          	endbr64
   132fd:	55                   	push   %rbp
   132fe:	48 89 e5             	mov    %rsp,%rbp
   13301:	48 83 ec 20          	sub    $0x20,%rsp
   13305:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13309:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1330d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13311:	48 8b 40 10          	mov    0x10(%rax),%rax
   13315:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13319:	eb 39                	jmp    13354 <stackscope_find_t+0x5b>
   1331b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1331f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13323:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1332b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1332f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13333:	48 89 d6             	mov    %rdx,%rsi
   13336:	48 89 c7             	mov    %rax,%rdi
   13339:	e8 82 f0 fe ff       	call   23c0 <strcmp@plt>
   1333e:	85 c0                	test   %eax,%eax
   13340:	75 06                	jne    13348 <stackscope_find_t+0x4f>
   13342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13346:	eb 18                	jmp    13360 <stackscope_find_t+0x67>
   13348:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1334c:	48 8b 40 10          	mov    0x10(%rax),%rax
   13350:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13354:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13359:	75 c0                	jne    1331b <stackscope_find_t+0x22>
   1335b:	b8 00 00 00 00       	mov    $0x0,%eax
   13360:	c9                   	leave
   13361:	c3                   	ret

0000000000013362 <stackscope_find_x>:
   13362:	f3 0f 1e fa          	endbr64
   13366:	55                   	push   %rbp
   13367:	48 89 e5             	mov    %rsp,%rbp
   1336a:	48 83 ec 20          	sub    $0x20,%rsp
   1336e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13372:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13376:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1337a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1337e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13382:	eb 39                	jmp    133bd <stackscope_find_x+0x5b>
   13384:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13388:	48 8b 40 08          	mov    0x8(%rax),%rax
   1338c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13394:	48 8b 40 08          	mov    0x8(%rax),%rax
   13398:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1339c:	48 89 d6             	mov    %rdx,%rsi
   1339f:	48 89 c7             	mov    %rax,%rdi
   133a2:	e8 19 f0 fe ff       	call   23c0 <strcmp@plt>
   133a7:	85 c0                	test   %eax,%eax
   133a9:	75 06                	jne    133b1 <stackscope_find_x+0x4f>
   133ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133af:	eb 18                	jmp    133c9 <stackscope_find_x+0x67>
   133b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133b5:	48 8b 40 10          	mov    0x10(%rax),%rax
   133b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   133bd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   133c2:	75 c0                	jne    13384 <stackscope_find_x+0x22>
   133c4:	b8 00 00 00 00       	mov    $0x0,%eax
   133c9:	c9                   	leave
   133ca:	c3                   	ret

00000000000133cb <stackscope_find_z>:
   133cb:	f3 0f 1e fa          	endbr64
   133cf:	55                   	push   %rbp
   133d0:	48 89 e5             	mov    %rsp,%rbp
   133d3:	48 83 ec 20          	sub    $0x20,%rsp
   133d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   133db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   133df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133e3:	48 8b 40 20          	mov    0x20(%rax),%rax
   133e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   133eb:	eb 39                	jmp    13426 <stackscope_find_z+0x5b>
   133ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133f1:	48 8b 40 08          	mov    0x8(%rax),%rax
   133f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   133f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133fd:	48 8b 40 08          	mov    0x8(%rax),%rax
   13401:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13405:	48 89 d6             	mov    %rdx,%rsi
   13408:	48 89 c7             	mov    %rax,%rdi
   1340b:	e8 b0 ef fe ff       	call   23c0 <strcmp@plt>
   13410:	85 c0                	test   %eax,%eax
   13412:	75 06                	jne    1341a <stackscope_find_z+0x4f>
   13414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13418:	eb 18                	jmp    13432 <stackscope_find_z+0x67>
   1341a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1341e:	48 8b 40 10          	mov    0x10(%rax),%rax
   13422:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13426:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1342b:	75 c0                	jne    133ed <stackscope_find_z+0x22>
   1342d:	b8 00 00 00 00       	mov    $0x0,%eax
   13432:	c9                   	leave
   13433:	c3                   	ret

0000000000013434 <free_stackscope>:
   13434:	f3 0f 1e fa          	endbr64
   13438:	55                   	push   %rbp
   13439:	48 89 e5             	mov    %rsp,%rbp
   1343c:	48 83 ec 20          	sub    $0x20,%rsp
   13440:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13444:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1344b:	00
   1344c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13451:	74 48                	je     1349b <free_stackscope+0x67>
   13453:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13457:	48 8b 40 28          	mov    0x28(%rax),%rax
   1345b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1345f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13463:	48 8b 40 10          	mov    0x10(%rax),%rax
   13467:	48 89 c7             	mov    %rax,%rdi
   1346a:	e8 9f 00 00 00       	call   1350e <free_stackscope_list>
   1346f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13473:	48 8b 40 18          	mov    0x18(%rax),%rax
   13477:	48 89 c7             	mov    %rax,%rdi
   1347a:	e8 8f 00 00 00       	call   1350e <free_stackscope_list>
   1347f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13483:	48 8b 40 20          	mov    0x20(%rax),%rax
   13487:	48 89 c7             	mov    %rax,%rdi
   1348a:	e8 7f 00 00 00       	call   1350e <free_stackscope_list>
   1348f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13493:	48 89 c7             	mov    %rax,%rdi
   13496:	e8 f5 ed fe ff       	call   2290 <free@plt>
   1349b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1349f:	c9                   	leave
   134a0:	c3                   	ret

00000000000134a1 <free_all_stackscopes>:
   134a1:	f3 0f 1e fa          	endbr64
   134a5:	55                   	push   %rbp
   134a6:	48 89 e5             	mov    %rsp,%rbp
   134a9:	48 83 ec 20          	sub    $0x20,%rsp
   134ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   134b1:	eb 50                	jmp    13503 <free_all_stackscopes+0x62>
   134b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134b7:	48 8b 40 28          	mov    0x28(%rax),%rax
   134bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   134bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134c3:	48 8b 40 10          	mov    0x10(%rax),%rax
   134c7:	48 89 c7             	mov    %rax,%rdi
   134ca:	e8 3f 00 00 00       	call   1350e <free_stackscope_list>
   134cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134d3:	48 8b 40 18          	mov    0x18(%rax),%rax
   134d7:	48 89 c7             	mov    %rax,%rdi
   134da:	e8 2f 00 00 00       	call   1350e <free_stackscope_list>
   134df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134e3:	48 8b 40 20          	mov    0x20(%rax),%rax
   134e7:	48 89 c7             	mov    %rax,%rdi
   134ea:	e8 1f 00 00 00       	call   1350e <free_stackscope_list>
   134ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134f3:	48 89 c7             	mov    %rax,%rdi
   134f6:	e8 95 ed fe ff       	call   2290 <free@plt>
   134fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13503:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13508:	75 a9                	jne    134b3 <free_all_stackscopes+0x12>
   1350a:	90                   	nop
   1350b:	90                   	nop
   1350c:	c9                   	leave
   1350d:	c3                   	ret

000000000001350e <free_stackscope_list>:
   1350e:	f3 0f 1e fa          	endbr64
   13512:	55                   	push   %rbp
   13513:	48 89 e5             	mov    %rsp,%rbp
   13516:	48 83 ec 20          	sub    $0x20,%rsp
   1351a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1351e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13522:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13526:	eb 1c                	jmp    13544 <free_stackscope_list+0x36>
   13528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1352c:	48 8b 40 08          	mov    0x8(%rax),%rax
   13530:	48 89 c7             	mov    %rax,%rdi
   13533:	e8 a5 00 00 00       	call   135dd <destroy_stack_node>
   13538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1353c:	48 8b 40 10          	mov    0x10(%rax),%rax
   13540:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13544:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13549:	75 dd                	jne    13528 <free_stackscope_list+0x1a>
   1354b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1354f:	48 89 c7             	mov    %rax,%rdi
   13552:	e8 8b 47 ff ff       	call   7ce2 <DestroyList>
   13557:	90                   	nop
   13558:	c9                   	leave
   13559:	c3                   	ret

000000000001355a <init_stack_node>:
   1355a:	f3 0f 1e fa          	endbr64
   1355e:	55                   	push   %rbp
   1355f:	48 89 e5             	mov    %rsp,%rbp
   13562:	48 83 ec 20          	sub    $0x20,%rsp
   13566:	89 7d ec             	mov    %edi,-0x14(%rbp)
   13569:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1356d:	89 55 e8             	mov    %edx,-0x18(%rbp)
   13570:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   13575:	75 28                	jne    1359f <init_stack_node+0x45>
   13577:	48 8d 05 d2 8b 00 00 	lea    0x8bd2(%rip),%rax        # 1c150 <__PRETTY_FUNCTION__.1>
   1357e:	48 89 c1             	mov    %rax,%rcx
   13581:	ba 94 02 00 00       	mov    $0x294,%edx
   13586:	48 8d 05 1b 88 00 00 	lea    0x881b(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1358d:	48 89 c6             	mov    %rax,%rsi
   13590:	48 8d 05 40 8a 00 00 	lea    0x8a40(%rip),%rax        # 1bfd7 <__PRETTY_FUNCTION__.0+0x267>
   13597:	48 89 c7             	mov    %rax,%rdi
   1359a:	e8 b1 ed fe ff       	call   2350 <__assert_fail@plt>
   1359f:	bf 18 00 00 00       	mov    $0x18,%edi
   135a4:	e8 67 ee fe ff       	call   2410 <malloc@plt>
   135a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   135ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b1:	8b 55 ec             	mov    -0x14(%rbp),%edx
   135b4:	89 10                	mov    %edx,(%rax)
   135b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   135ba:	48 89 c7             	mov    %rax,%rdi
   135bd:	e8 de ee fe ff       	call   24a0 <strdup@plt>
   135c2:	48 89 c2             	mov    %rax,%rdx
   135c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   135cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135d1:	8b 55 e8             	mov    -0x18(%rbp),%edx
   135d4:	89 50 10             	mov    %edx,0x10(%rax)
   135d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135db:	c9                   	leave
   135dc:	c3                   	ret

00000000000135dd <destroy_stack_node>:
   135dd:	f3 0f 1e fa          	endbr64
   135e1:	55                   	push   %rbp
   135e2:	48 89 e5             	mov    %rsp,%rbp
   135e5:	48 83 ec 10          	sub    $0x10,%rsp
   135e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135ed:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   135f2:	75 28                	jne    1361c <destroy_stack_node+0x3f>
   135f4:	48 8d 05 65 8b 00 00 	lea    0x8b65(%rip),%rax        # 1c160 <__PRETTY_FUNCTION__.0>
   135fb:	48 89 c1             	mov    %rax,%rcx
   135fe:	ba a2 02 00 00       	mov    $0x2a2,%edx
   13603:	48 8d 05 9e 87 00 00 	lea    0x879e(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1360a:	48 89 c6             	mov    %rax,%rsi
   1360d:	48 8d 05 d1 89 00 00 	lea    0x89d1(%rip),%rax        # 1bfe5 <__PRETTY_FUNCTION__.0+0x275>
   13614:	48 89 c7             	mov    %rax,%rdi
   13617:	e8 34 ed fe ff       	call   2350 <__assert_fail@plt>
   1361c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13620:	48 8b 40 08          	mov    0x8(%rax),%rax
   13624:	48 85 c0             	test   %rax,%rax
   13627:	75 28                	jne    13651 <destroy_stack_node+0x74>
   13629:	48 8d 05 30 8b 00 00 	lea    0x8b30(%rip),%rax        # 1c160 <__PRETTY_FUNCTION__.0>
   13630:	48 89 c1             	mov    %rax,%rcx
   13633:	ba a3 02 00 00       	mov    $0x2a3,%edx
   13638:	48 8d 05 69 87 00 00 	lea    0x8769(%rip),%rax        # 1bda8 <__PRETTY_FUNCTION__.0+0x38>
   1363f:	48 89 c6             	mov    %rax,%rsi
   13642:	48 8d 05 a9 89 00 00 	lea    0x89a9(%rip),%rax        # 1bff2 <__PRETTY_FUNCTION__.0+0x282>
   13649:	48 89 c7             	mov    %rax,%rdi
   1364c:	e8 ff ec fe ff       	call   2350 <__assert_fail@plt>
   13651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13655:	48 8b 40 08          	mov    0x8(%rax),%rax
   13659:	48 89 c7             	mov    %rax,%rdi
   1365c:	e8 2f ec fe ff       	call   2290 <free@plt>
   13661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13665:	48 89 c7             	mov    %rax,%rdi
   13668:	e8 23 ec fe ff       	call   2290 <free@plt>
   1366d:	90                   	nop
   1366e:	c9                   	leave
   1366f:	c3                   	ret

0000000000013670 <build_expr_tree>:
   13670:	f3 0f 1e fa          	endbr64
   13674:	55                   	push   %rbp
   13675:	48 89 e5             	mov    %rsp,%rbp
   13678:	48 83 ec 20          	sub    $0x20,%rsp
   1367c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13680:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13685:	75 28                	jne    136af <build_expr_tree+0x3f>
   13687:	48 8d 05 42 8f 00 00 	lea    0x8f42(%rip),%rax        # 1c5d0 <__PRETTY_FUNCTION__.11>
   1368e:	48 89 c1             	mov    %rax,%rcx
   13691:	ba 2b 00 00 00       	mov    $0x2b,%edx
   13696:	48 8d 05 e3 8a 00 00 	lea    0x8ae3(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   1369d:	48 89 c6             	mov    %rax,%rsi
   136a0:	48 8d 05 0a 8b 00 00 	lea    0x8b0a(%rip),%rax        # 1c1b1 <__PRETTY_FUNCTION__.0+0x51>
   136a7:	48 89 c7             	mov    %rax,%rdi
   136aa:	e8 a1 ec fe ff       	call   2350 <__assert_fail@plt>
   136af:	bf 20 00 00 00       	mov    $0x20,%edi
   136b4:	e8 57 ed fe ff       	call   2410 <malloc@plt>
   136b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   136bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   136c5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   136c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136cd:	8b 40 04             	mov    0x4(%rax),%eax
   136d0:	83 f8 09             	cmp    $0x9,%eax
   136d3:	0f 87 3a 01 00 00    	ja     13813 <build_expr_tree+0x1a3>
   136d9:	89 c0                	mov    %eax,%eax
   136db:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   136e2:	00
   136e3:	48 8d 05 2e 8b 00 00 	lea    0x8b2e(%rip),%rax        # 1c218 <__PRETTY_FUNCTION__.0+0xb8>
   136ea:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   136ed:	48 98                	cltq
   136ef:	48 8d 15 22 8b 00 00 	lea    0x8b22(%rip),%rdx        # 1c218 <__PRETTY_FUNCTION__.0+0xb8>
   136f6:	48 01 d0             	add    %rdx,%rax
   136f9:	3e ff e0             	notrack jmp *%rax
   136fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13700:	48 8b 40 10          	mov    0x10(%rax),%rax
   13704:	48 89 c7             	mov    %rax,%rdi
   13707:	e8 64 ff ff ff       	call   13670 <build_expr_tree>
   1370c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13710:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13718:	48 8b 40 18          	mov    0x18(%rax),%rax
   1371c:	48 89 c7             	mov    %rax,%rdi
   1371f:	e8 4c ff ff ff       	call   13670 <build_expr_tree>
   13724:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13728:	48 89 42 10          	mov    %rax,0x10(%rdx)
   1372c:	e9 11 01 00 00       	jmp    13842 <build_expr_tree+0x1d2>
   13731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13735:	48 8b 40 10          	mov    0x10(%rax),%rax
   13739:	48 89 c7             	mov    %rax,%rdi
   1373c:	e8 2f ff ff ff       	call   13670 <build_expr_tree>
   13741:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13745:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1374d:	48 8b 40 18          	mov    0x18(%rax),%rax
   13751:	48 89 c7             	mov    %rax,%rdi
   13754:	e8 17 ff ff ff       	call   13670 <build_expr_tree>
   13759:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1375d:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13761:	e9 dc 00 00 00       	jmp    13842 <build_expr_tree+0x1d2>
   13766:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1376a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1376e:	48 89 c7             	mov    %rax,%rdi
   13771:	e8 fa fe ff ff       	call   13670 <build_expr_tree>
   13776:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1377a:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1377e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13782:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13789:	00
   1378a:	e9 b3 00 00 00       	jmp    13842 <build_expr_tree+0x1d2>
   1378f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13793:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1379a:	00
   1379b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1379f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   137a6:	00
   137a7:	e9 96 00 00 00       	jmp    13842 <build_expr_tree+0x1d2>
   137ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137b0:	48 8b 40 10          	mov    0x10(%rax),%rax
   137b4:	48 89 c7             	mov    %rax,%rdi
   137b7:	e8 b4 fe ff ff       	call   13670 <build_expr_tree>
   137bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   137c0:	48 89 42 08          	mov    %rax,0x8(%rdx)
   137c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137c8:	48 8b 40 18          	mov    0x18(%rax),%rax
   137cc:	48 85 c0             	test   %rax,%rax
   137cf:	75 28                	jne    137f9 <build_expr_tree+0x189>
   137d1:	48 8d 05 f8 8d 00 00 	lea    0x8df8(%rip),%rax        # 1c5d0 <__PRETTY_FUNCTION__.11>
   137d8:	48 89 c1             	mov    %rax,%rcx
   137db:	ba 4d 00 00 00       	mov    $0x4d,%edx
   137e0:	48 8d 05 99 89 00 00 	lea    0x8999(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   137e7:	48 89 c6             	mov    %rax,%rsi
   137ea:	48 8d 05 cf 89 00 00 	lea    0x89cf(%rip),%rax        # 1c1c0 <__PRETTY_FUNCTION__.0+0x60>
   137f1:	48 89 c7             	mov    %rax,%rdi
   137f4:	e8 57 eb fe ff       	call   2350 <__assert_fail@plt>
   137f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137fd:	48 8b 40 18          	mov    0x18(%rax),%rax
   13801:	48 89 c7             	mov    %rax,%rdi
   13804:	e8 67 fe ff ff       	call   13670 <build_expr_tree>
   13809:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1380d:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13811:	eb 2f                	jmp    13842 <build_expr_tree+0x1d2>
   13813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13817:	8b 50 04             	mov    0x4(%rax),%edx
   1381a:	48 8b 05 3f d8 00 00 	mov    0xd83f(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   13821:	48 8d 0d c8 89 00 00 	lea    0x89c8(%rip),%rcx        # 1c1f0 <__PRETTY_FUNCTION__.0+0x90>
   13828:	48 89 ce             	mov    %rcx,%rsi
   1382b:	48 89 c7             	mov    %rax,%rdi
   1382e:	b8 00 00 00 00       	mov    $0x0,%eax
   13833:	e8 98 eb fe ff       	call   23d0 <fprintf@plt>
   13838:	bf 01 00 00 00       	mov    $0x1,%edi
   1383d:	e8 3e ec fe ff       	call   2480 <exit@plt>
   13842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13846:	48 8b 40 08          	mov    0x8(%rax),%rax
   1384a:	48 85 c0             	test   %rax,%rax
   1384d:	74 23                	je     13872 <build_expr_tree+0x202>
   1384f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13853:	48 8b 40 08          	mov    0x8(%rax),%rax
   13857:	48 89 c7             	mov    %rax,%rdi
   1385a:	e8 e0 02 00 00       	call   13b3f <expr_tree_is_leaf>
   1385f:	83 f8 01             	cmp    $0x1,%eax
   13862:	75 0e                	jne    13872 <build_expr_tree+0x202>
   13864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13868:	48 8b 40 08          	mov    0x8(%rax),%rax
   1386c:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   13872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13876:	48 8b 40 08          	mov    0x8(%rax),%rax
   1387a:	48 85 c0             	test   %rax,%rax
   1387d:	75 1c                	jne    1389b <build_expr_tree+0x22b>
   1387f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13883:	48 8b 40 10          	mov    0x10(%rax),%rax
   13887:	48 85 c0             	test   %rax,%rax
   1388a:	75 0f                	jne    1389b <build_expr_tree+0x22b>
   1388c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13890:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   13896:	e9 a8 00 00 00       	jmp    13943 <build_expr_tree+0x2d3>
   1389b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1389f:	48 8b 40 08          	mov    0x8(%rax),%rax
   138a3:	48 85 c0             	test   %rax,%rax
   138a6:	75 15                	jne    138bd <build_expr_tree+0x24d>
   138a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ac:	48 8b 40 10          	mov    0x10(%rax),%rax
   138b0:	8b 10                	mov    (%rax),%edx
   138b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138b6:	89 10                	mov    %edx,(%rax)
   138b8:	e9 86 00 00 00       	jmp    13943 <build_expr_tree+0x2d3>
   138bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138c1:	48 8b 40 10          	mov    0x10(%rax),%rax
   138c5:	48 85 c0             	test   %rax,%rax
   138c8:	75 12                	jne    138dc <build_expr_tree+0x26c>
   138ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ce:	48 8b 40 08          	mov    0x8(%rax),%rax
   138d2:	8b 10                	mov    (%rax),%edx
   138d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138d8:	89 10                	mov    %edx,(%rax)
   138da:	eb 67                	jmp    13943 <build_expr_tree+0x2d3>
   138dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138e0:	48 8b 40 08          	mov    0x8(%rax),%rax
   138e4:	8b 10                	mov    (%rax),%edx
   138e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ea:	48 8b 40 10          	mov    0x10(%rax),%rax
   138ee:	8b 00                	mov    (%rax),%eax
   138f0:	39 c2                	cmp    %eax,%edx
   138f2:	7e 12                	jle    13906 <build_expr_tree+0x296>
   138f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138f8:	48 8b 40 08          	mov    0x8(%rax),%rax
   138fc:	8b 10                	mov    (%rax),%edx
   138fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13902:	89 10                	mov    %edx,(%rax)
   13904:	eb 3d                	jmp    13943 <build_expr_tree+0x2d3>
   13906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1390a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1390e:	8b 10                	mov    (%rax),%edx
   13910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13914:	48 8b 40 10          	mov    0x10(%rax),%rax
   13918:	8b 00                	mov    (%rax),%eax
   1391a:	39 c2                	cmp    %eax,%edx
   1391c:	7d 12                	jge    13930 <build_expr_tree+0x2c0>
   1391e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13922:	48 8b 40 10          	mov    0x10(%rax),%rax
   13926:	8b 10                	mov    (%rax),%edx
   13928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1392c:	89 10                	mov    %edx,(%rax)
   1392e:	eb 13                	jmp    13943 <build_expr_tree+0x2d3>
   13930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13934:	48 8b 40 08          	mov    0x8(%rax),%rax
   13938:	8b 00                	mov    (%rax),%eax
   1393a:	8d 50 01             	lea    0x1(%rax),%edx
   1393d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13941:	89 10                	mov    %edx,(%rax)
   13943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13947:	c9                   	leave
   13948:	c3                   	ret

0000000000013949 <gencode_expr_tree>:
   13949:	f3 0f 1e fa          	endbr64
   1394d:	55                   	push   %rbp
   1394e:	48 89 e5             	mov    %rsp,%rbp
   13951:	53                   	push   %rbx
   13952:	48 83 ec 28          	sub    $0x28,%rsp
   13956:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1395a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1395e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13962:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13967:	75 28                	jne    13991 <gencode_expr_tree+0x48>
   13969:	48 8d 05 70 8c 00 00 	lea    0x8c70(%rip),%rax        # 1c5e0 <__PRETTY_FUNCTION__.10>
   13970:	48 89 c1             	mov    %rax,%rcx
   13973:	ba 7e 00 00 00       	mov    $0x7e,%edx
   13978:	48 8d 05 01 88 00 00 	lea    0x8801(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   1397f:	48 89 c6             	mov    %rax,%rsi
   13982:	48 8d 05 b7 88 00 00 	lea    0x88b7(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   13989:	48 89 c7             	mov    %rax,%rdi
   1398c:	e8 bf e9 fe ff       	call   2350 <__assert_fail@plt>
   13991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13995:	48 8b 40 18          	mov    0x18(%rax),%rax
   13999:	48 85 c0             	test   %rax,%rax
   1399c:	75 28                	jne    139c6 <gencode_expr_tree+0x7d>
   1399e:	48 8d 05 3b 8c 00 00 	lea    0x8c3b(%rip),%rax        # 1c5e0 <__PRETTY_FUNCTION__.10>
   139a5:	48 89 c1             	mov    %rax,%rcx
   139a8:	ba 7f 00 00 00       	mov    $0x7f,%edx
   139ad:	48 8d 05 cc 87 00 00 	lea    0x87cc(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   139b4:	48 89 c6             	mov    %rax,%rsi
   139b7:	48 8d 05 8f 88 00 00 	lea    0x888f(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   139be:	48 89 c7             	mov    %rax,%rdi
   139c1:	e8 8a e9 fe ff       	call   2350 <__assert_fail@plt>
   139c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139ca:	8b 18                	mov    (%rax),%ebx
   139cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   139d0:	48 89 c7             	mov    %rax,%rdi
   139d3:	e8 a4 f7 ff ff       	call   1317c <get_num_registers>
   139d8:	39 c3                	cmp    %eax,%ebx
   139da:	7e 2d                	jle    13a09 <gencode_expr_tree+0xc0>
   139dc:	48 8b 05 7d d6 00 00 	mov    0xd67d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   139e3:	48 89 c1             	mov    %rax,%rcx
   139e6:	ba 45 00 00 00       	mov    $0x45,%edx
   139eb:	be 01 00 00 00       	mov    $0x1,%esi
   139f0:	48 8d 05 69 88 00 00 	lea    0x8869(%rip),%rax        # 1c260 <__PRETTY_FUNCTION__.0+0x100>
   139f7:	48 89 c7             	mov    %rax,%rdi
   139fa:	e8 91 ea fe ff       	call   2490 <fwrite@plt>
   139ff:	bf 01 00 00 00       	mov    $0x1,%edi
   13a04:	e8 77 ea fe ff       	call   2480 <exit@plt>
   13a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a0d:	48 8b 40 18          	mov    0x18(%rax),%rax
   13a11:	8b 40 04             	mov    0x4(%rax),%eax
   13a14:	83 f8 01             	cmp    $0x1,%eax
   13a17:	75 20                	jne    13a39 <gencode_expr_tree+0xf0>
   13a19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13a1d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a25:	48 89 ce             	mov    %rcx,%rsi
   13a28:	48 89 c7             	mov    %rax,%rdi
   13a2b:	e8 94 03 00 00       	call   13dc4 <gencode_sign_term>
   13a30:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13a34:	e9 fc 00 00 00       	jmp    13b35 <gencode_expr_tree+0x1ec>
   13a39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a3d:	48 89 c7             	mov    %rax,%rdi
   13a40:	e8 fa 00 00 00       	call   13b3f <expr_tree_is_leaf>
   13a45:	83 f8 01             	cmp    $0x1,%eax
   13a48:	75 20                	jne    13a6a <gencode_expr_tree+0x121>
   13a4a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13a4e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13a52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a56:	48 89 ce             	mov    %rcx,%rsi
   13a59:	48 89 c7             	mov    %rax,%rdi
   13a5c:	e8 ae 04 00 00       	call   13f0f <gencode_case0>
   13a61:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13a65:	e9 cb 00 00 00       	jmp    13b35 <gencode_expr_tree+0x1ec>
   13a6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a6e:	48 8b 40 10          	mov    0x10(%rax),%rax
   13a72:	48 89 c7             	mov    %rax,%rdi
   13a75:	e8 c5 00 00 00       	call   13b3f <expr_tree_is_leaf>
   13a7a:	85 c0                	test   %eax,%eax
   13a7c:	74 20                	je     13a9e <gencode_expr_tree+0x155>
   13a7e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13a82:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13a86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a8a:	48 89 ce             	mov    %rcx,%rsi
   13a8d:	48 89 c7             	mov    %rax,%rdi
   13a90:	e8 03 08 00 00       	call   14298 <gencode_case1>
   13a95:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13a99:	e9 97 00 00 00       	jmp    13b35 <gencode_expr_tree+0x1ec>
   13a9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13aa2:	48 8b 40 08          	mov    0x8(%rax),%rax
   13aa6:	8b 10                	mov    (%rax),%edx
   13aa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13aac:	48 8b 40 10          	mov    0x10(%rax),%rax
   13ab0:	8b 00                	mov    (%rax),%eax
   13ab2:	39 c2                	cmp    %eax,%edx
   13ab4:	7d 1d                	jge    13ad3 <gencode_expr_tree+0x18a>
   13ab6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13aba:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ac2:	48 89 ce             	mov    %rcx,%rsi
   13ac5:	48 89 c7             	mov    %rax,%rdi
   13ac8:	e8 95 09 00 00       	call   14462 <gencode_case2>
   13acd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13ad1:	eb 62                	jmp    13b35 <gencode_expr_tree+0x1ec>
   13ad3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ad7:	48 8b 40 08          	mov    0x8(%rax),%rax
   13adb:	8b 10                	mov    (%rax),%edx
   13add:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ae1:	48 8b 40 10          	mov    0x10(%rax),%rax
   13ae5:	8b 00                	mov    (%rax),%eax
   13ae7:	39 c2                	cmp    %eax,%edx
   13ae9:	7c 1d                	jl     13b08 <gencode_expr_tree+0x1bf>
   13aeb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13aef:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13af3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13af7:	48 89 ce             	mov    %rcx,%rsi
   13afa:	48 89 c7             	mov    %rax,%rdi
   13afd:	e8 b6 0a 00 00       	call   145b8 <gencode_case3>
   13b02:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   13b06:	eb 2d                	jmp    13b35 <gencode_expr_tree+0x1ec>
   13b08:	48 8b 05 51 d5 00 00 	mov    0xd551(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   13b0f:	48 89 c1             	mov    %rax,%rcx
   13b12:	ba 24 00 00 00       	mov    $0x24,%edx
   13b17:	be 01 00 00 00       	mov    $0x1,%esi
   13b1c:	48 8d 05 85 87 00 00 	lea    0x8785(%rip),%rax        # 1c2a8 <__PRETTY_FUNCTION__.0+0x148>
   13b23:	48 89 c7             	mov    %rax,%rdi
   13b26:	e8 65 e9 fe ff       	call   2490 <fwrite@plt>
   13b2b:	bf 01 00 00 00       	mov    $0x1,%edi
   13b30:	e8 4b e9 fe ff       	call   2480 <exit@plt>
   13b35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13b39:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13b3d:	c9                   	leave
   13b3e:	c3                   	ret

0000000000013b3f <expr_tree_is_leaf>:
   13b3f:	f3 0f 1e fa          	endbr64
   13b43:	55                   	push   %rbp
   13b44:	48 89 e5             	mov    %rsp,%rbp
   13b47:	48 83 ec 10          	sub    $0x10,%rsp
   13b4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b4f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13b54:	75 28                	jne    13b7e <expr_tree_is_leaf+0x3f>
   13b56:	48 8d 05 a3 8a 00 00 	lea    0x8aa3(%rip),%rax        # 1c600 <__PRETTY_FUNCTION__.9>
   13b5d:	48 89 c1             	mov    %rax,%rcx
   13b60:	ba ad 00 00 00       	mov    $0xad,%edx
   13b65:	48 8d 05 14 86 00 00 	lea    0x8614(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13b6c:	48 89 c6             	mov    %rax,%rsi
   13b6f:	48 8d 05 ca 86 00 00 	lea    0x86ca(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   13b76:	48 89 c7             	mov    %rax,%rdi
   13b79:	e8 d2 e7 fe ff       	call   2350 <__assert_fail@plt>
   13b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b82:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b86:	48 85 c0             	test   %rax,%rax
   13b89:	75 14                	jne    13b9f <expr_tree_is_leaf+0x60>
   13b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b8f:	48 8b 40 10          	mov    0x10(%rax),%rax
   13b93:	48 85 c0             	test   %rax,%rax
   13b96:	75 07                	jne    13b9f <expr_tree_is_leaf+0x60>
   13b98:	b8 01 00 00 00       	mov    $0x1,%eax
   13b9d:	eb 05                	jmp    13ba4 <expr_tree_is_leaf+0x65>
   13b9f:	b8 00 00 00 00       	mov    $0x0,%eax
   13ba4:	c9                   	leave
   13ba5:	c3                   	ret

0000000000013ba6 <print_expr_tree>:
   13ba6:	f3 0f 1e fa          	endbr64
   13baa:	55                   	push   %rbp
   13bab:	48 89 e5             	mov    %rsp,%rbp
   13bae:	48 83 ec 30          	sub    $0x30,%rsp
   13bb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13bb6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   13bb9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13bbd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13bc2:	75 28                	jne    13bec <print_expr_tree+0x46>
   13bc4:	48 8d 05 55 8a 00 00 	lea    0x8a55(%rip),%rax        # 1c620 <__PRETTY_FUNCTION__.8>
   13bcb:	48 89 c1             	mov    %rax,%rcx
   13bce:	ba b8 00 00 00       	mov    $0xb8,%edx
   13bd3:	48 8d 05 a6 85 00 00 	lea    0x85a6(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13bda:	48 89 c6             	mov    %rax,%rsi
   13bdd:	48 8d 05 5c 86 00 00 	lea    0x865c(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   13be4:	48 89 c7             	mov    %rax,%rdi
   13be7:	e8 64 e7 fe ff       	call   2350 <__assert_fail@plt>
   13bec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bf0:	48 8b 40 18          	mov    0x18(%rax),%rax
   13bf4:	48 85 c0             	test   %rax,%rax
   13bf7:	75 28                	jne    13c21 <print_expr_tree+0x7b>
   13bf9:	48 8d 05 20 8a 00 00 	lea    0x8a20(%rip),%rax        # 1c620 <__PRETTY_FUNCTION__.8>
   13c00:	48 89 c1             	mov    %rax,%rcx
   13c03:	ba b9 00 00 00       	mov    $0xb9,%edx
   13c08:	48 8d 05 71 85 00 00 	lea    0x8571(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13c0f:	48 89 c6             	mov    %rax,%rsi
   13c12:	48 8d 05 34 86 00 00 	lea    0x8634(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   13c19:	48 89 c7             	mov    %rax,%rdi
   13c1c:	e8 2f e7 fe ff       	call   2350 <__assert_fail@plt>
   13c21:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   13c28:	eb 24                	jmp    13c4e <print_expr_tree+0xa8>
   13c2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c2e:	48 89 c1             	mov    %rax,%rcx
   13c31:	ba 02 00 00 00       	mov    $0x2,%edx
   13c36:	be 01 00 00 00       	mov    $0x1,%esi
   13c3b:	48 8d 05 8b 86 00 00 	lea    0x868b(%rip),%rax        # 1c2cd <__PRETTY_FUNCTION__.0+0x16d>
   13c42:	48 89 c7             	mov    %rax,%rdi
   13c45:	e8 46 e8 fe ff       	call   2490 <fwrite@plt>
   13c4a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   13c4e:	8b 45 fc             	mov    -0x4(%rbp),%eax
   13c51:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   13c54:	7c d4                	jl     13c2a <print_expr_tree+0x84>
   13c56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c5a:	8b 08                	mov    (%rax),%ecx
   13c5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c60:	48 8b 40 18          	mov    0x18(%rax),%rax
   13c64:	8b 50 04             	mov    0x4(%rax),%edx
   13c67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c6b:	48 8d 35 5e 86 00 00 	lea    0x865e(%rip),%rsi        # 1c2d0 <__PRETTY_FUNCTION__.0+0x170>
   13c72:	48 89 c7             	mov    %rax,%rdi
   13c75:	b8 00 00 00 00       	mov    $0x0,%eax
   13c7a:	e8 51 e7 fe ff       	call   23d0 <fprintf@plt>
   13c7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c83:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c87:	48 85 c0             	test   %rax,%rax
   13c8a:	74 71                	je     13cfd <print_expr_tree+0x157>
   13c8c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   13c93:	eb 24                	jmp    13cb9 <print_expr_tree+0x113>
   13c95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c99:	48 89 c1             	mov    %rax,%rcx
   13c9c:	ba 02 00 00 00       	mov    $0x2,%edx
   13ca1:	be 01 00 00 00       	mov    $0x1,%esi
   13ca6:	48 8d 05 20 86 00 00 	lea    0x8620(%rip),%rax        # 1c2cd <__PRETTY_FUNCTION__.0+0x16d>
   13cad:	48 89 c7             	mov    %rax,%rdi
   13cb0:	e8 db e7 fe ff       	call   2490 <fwrite@plt>
   13cb5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   13cb9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   13cbc:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   13cbf:	7c d4                	jl     13c95 <print_expr_tree+0xef>
   13cc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13cc5:	48 89 c1             	mov    %rax,%rcx
   13cc8:	ba 07 00 00 00       	mov    $0x7,%edx
   13ccd:	be 01 00 00 00       	mov    $0x1,%esi
   13cd2:	48 8d 05 08 86 00 00 	lea    0x8608(%rip),%rax        # 1c2e1 <__PRETTY_FUNCTION__.0+0x181>
   13cd9:	48 89 c7             	mov    %rax,%rdi
   13cdc:	e8 af e7 fe ff       	call   2490 <fwrite@plt>
   13ce1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   13ce4:	8d 48 01             	lea    0x1(%rax),%ecx
   13ce7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ceb:	48 8b 40 08          	mov    0x8(%rax),%rax
   13cef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13cf3:	89 ce                	mov    %ecx,%esi
   13cf5:	48 89 c7             	mov    %rax,%rdi
   13cf8:	e8 a9 fe ff ff       	call   13ba6 <print_expr_tree>
   13cfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d01:	48 8b 40 10          	mov    0x10(%rax),%rax
   13d05:	48 85 c0             	test   %rax,%rax
   13d08:	74 71                	je     13d7b <print_expr_tree+0x1d5>
   13d0a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   13d11:	eb 24                	jmp    13d37 <print_expr_tree+0x191>
   13d13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d17:	48 89 c1             	mov    %rax,%rcx
   13d1a:	ba 02 00 00 00       	mov    $0x2,%edx
   13d1f:	be 01 00 00 00       	mov    $0x1,%esi
   13d24:	48 8d 05 a2 85 00 00 	lea    0x85a2(%rip),%rax        # 1c2cd <__PRETTY_FUNCTION__.0+0x16d>
   13d2b:	48 89 c7             	mov    %rax,%rdi
   13d2e:	e8 5d e7 fe ff       	call   2490 <fwrite@plt>
   13d33:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   13d37:	8b 45 fc             	mov    -0x4(%rbp),%eax
   13d3a:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   13d3d:	7c d4                	jl     13d13 <print_expr_tree+0x16d>
   13d3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d43:	48 89 c1             	mov    %rax,%rcx
   13d46:	ba 08 00 00 00       	mov    $0x8,%edx
   13d4b:	be 01 00 00 00       	mov    $0x1,%esi
   13d50:	48 8d 05 92 85 00 00 	lea    0x8592(%rip),%rax        # 1c2e9 <__PRETTY_FUNCTION__.0+0x189>
   13d57:	48 89 c7             	mov    %rax,%rdi
   13d5a:	e8 31 e7 fe ff       	call   2490 <fwrite@plt>
   13d5f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   13d62:	8d 48 01             	lea    0x1(%rax),%ecx
   13d65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d69:	48 8b 40 10          	mov    0x10(%rax),%rax
   13d6d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13d71:	89 ce                	mov    %ecx,%esi
   13d73:	48 89 c7             	mov    %rax,%rdi
   13d76:	e8 2b fe ff ff       	call   13ba6 <print_expr_tree>
   13d7b:	90                   	nop
   13d7c:	c9                   	leave
   13d7d:	c3                   	ret

0000000000013d7e <free_expr_tree>:
   13d7e:	f3 0f 1e fa          	endbr64
   13d82:	55                   	push   %rbp
   13d83:	48 89 e5             	mov    %rsp,%rbp
   13d86:	48 83 ec 10          	sub    $0x10,%rsp
   13d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d8e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13d93:	74 2c                	je     13dc1 <free_expr_tree+0x43>
   13d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d99:	48 8b 40 08          	mov    0x8(%rax),%rax
   13d9d:	48 89 c7             	mov    %rax,%rdi
   13da0:	e8 d9 ff ff ff       	call   13d7e <free_expr_tree>
   13da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13da9:	48 8b 40 10          	mov    0x10(%rax),%rax
   13dad:	48 89 c7             	mov    %rax,%rdi
   13db0:	e8 c9 ff ff ff       	call   13d7e <free_expr_tree>
   13db5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13db9:	48 89 c7             	mov    %rax,%rdi
   13dbc:	e8 cf e4 fe ff       	call   2290 <free@plt>
   13dc1:	90                   	nop
   13dc2:	c9                   	leave
   13dc3:	c3                   	ret

0000000000013dc4 <gencode_sign_term>:
   13dc4:	f3 0f 1e fa          	endbr64
   13dc8:	55                   	push   %rbp
   13dc9:	48 89 e5             	mov    %rsp,%rbp
   13dcc:	48 83 ec 70          	sub    $0x70,%rsp
   13dd0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   13dd4:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   13dd8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   13ddc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13de3:	00 00
   13de5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13de9:	31 c0                	xor    %eax,%eax
   13deb:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   13df0:	75 28                	jne    13e1a <gencode_sign_term+0x56>
   13df2:	48 8d 05 37 88 00 00 	lea    0x8837(%rip),%rax        # 1c630 <__PRETTY_FUNCTION__.7>
   13df9:	48 89 c1             	mov    %rax,%rcx
   13dfc:	ba e0 00 00 00       	mov    $0xe0,%edx
   13e01:	48 8d 05 78 83 00 00 	lea    0x8378(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13e08:	48 89 c6             	mov    %rax,%rsi
   13e0b:	48 8d 05 2e 84 00 00 	lea    0x842e(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   13e12:	48 89 c7             	mov    %rax,%rdi
   13e15:	e8 36 e5 fe ff       	call   2350 <__assert_fail@plt>
   13e1a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13e1e:	48 8b 40 18          	mov    0x18(%rax),%rax
   13e22:	48 85 c0             	test   %rax,%rax
   13e25:	75 28                	jne    13e4f <gencode_sign_term+0x8b>
   13e27:	48 8d 05 02 88 00 00 	lea    0x8802(%rip),%rax        # 1c630 <__PRETTY_FUNCTION__.7>
   13e2e:	48 89 c1             	mov    %rax,%rcx
   13e31:	ba e1 00 00 00       	mov    $0xe1,%edx
   13e36:	48 8d 05 43 83 00 00 	lea    0x8343(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13e3d:	48 89 c6             	mov    %rax,%rsi
   13e40:	48 8d 05 06 84 00 00 	lea    0x8406(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   13e47:	48 89 c7             	mov    %rax,%rdi
   13e4a:	e8 01 e5 fe ff       	call   2350 <__assert_fail@plt>
   13e4f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13e53:	48 8b 40 18          	mov    0x18(%rax),%rax
   13e57:	8b 40 04             	mov    0x4(%rax),%eax
   13e5a:	83 f8 01             	cmp    $0x1,%eax
   13e5d:	74 28                	je     13e87 <gencode_sign_term+0xc3>
   13e5f:	48 8d 05 ca 87 00 00 	lea    0x87ca(%rip),%rax        # 1c630 <__PRETTY_FUNCTION__.7>
   13e66:	48 89 c1             	mov    %rax,%rcx
   13e69:	ba e2 00 00 00       	mov    $0xe2,%edx
   13e6e:	48 8d 05 0b 83 00 00 	lea    0x830b(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13e75:	48 89 c6             	mov    %rax,%rsi
   13e78:	48 8d 05 79 84 00 00 	lea    0x8479(%rip),%rax        # 1c2f8 <__PRETTY_FUNCTION__.0+0x198>
   13e7f:	48 89 c7             	mov    %rax,%rdi
   13e82:	e8 c9 e4 fe ff       	call   2350 <__assert_fail@plt>
   13e87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13e8b:	48 8b 40 08          	mov    0x8(%rax),%rax
   13e8f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   13e93:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13e97:	48 89 ce             	mov    %rcx,%rsi
   13e9a:	48 89 c7             	mov    %rax,%rdi
   13e9d:	e8 a7 fa ff ff       	call   13949 <gencode_expr_tree>
   13ea2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13ea6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13eaa:	48 89 c7             	mov    %rax,%rdi
   13ead:	e8 e0 f1 ff ff       	call   13092 <front_reg_stack>
   13eb2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   13eb6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13eba:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13ebe:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13ec2:	48 89 d1             	mov    %rdx,%rcx
   13ec5:	48 8d 15 4f 84 00 00 	lea    0x844f(%rip),%rdx        # 1c31b <__PRETTY_FUNCTION__.0+0x1bb>
   13ecc:	be 32 00 00 00       	mov    $0x32,%esi
   13ed1:	48 89 c7             	mov    %rax,%rdi
   13ed4:	b8 00 00 00 00       	mov    $0x0,%eax
   13ed9:	e8 62 e4 fe ff       	call   2340 <snprintf@plt>
   13ede:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13ee2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13ee6:	48 89 d6             	mov    %rdx,%rsi
   13ee9:	48 89 c7             	mov    %rax,%rdi
   13eec:	e8 cc a9 ff ff       	call   e8bd <add_inst>
   13ef1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13ef5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13ef9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13efd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   13f04:	00 00
   13f06:	74 05                	je     13f0d <gencode_sign_term+0x149>
   13f08:	e8 23 e4 fe ff       	call   2330 <__stack_chk_fail@plt>
   13f0d:	c9                   	leave
   13f0e:	c3                   	ret

0000000000013f0f <gencode_case0>:
   13f0f:	f3 0f 1e fa          	endbr64
   13f13:	55                   	push   %rbp
   13f14:	48 89 e5             	mov    %rsp,%rbp
   13f17:	48 81 ec a0 04 00 00 	sub    $0x4a0,%rsp
   13f1e:	48 89 bd 78 fb ff ff 	mov    %rdi,-0x488(%rbp)
   13f25:	48 89 b5 70 fb ff ff 	mov    %rsi,-0x490(%rbp)
   13f2c:	48 89 95 68 fb ff ff 	mov    %rdx,-0x498(%rbp)
   13f33:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13f3a:	00 00
   13f3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13f40:	31 c0                	xor    %eax,%eax
   13f42:	48 83 bd 78 fb ff ff 	cmpq   $0x0,-0x488(%rbp)
   13f49:	00
   13f4a:	75 28                	jne    13f74 <gencode_case0+0x65>
   13f4c:	48 8d 05 f5 86 00 00 	lea    0x86f5(%rip),%rax        # 1c648 <__PRETTY_FUNCTION__.6>
   13f53:	48 89 c1             	mov    %rax,%rcx
   13f56:	ba f3 00 00 00       	mov    $0xf3,%edx
   13f5b:	48 8d 05 1e 82 00 00 	lea    0x821e(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13f62:	48 89 c6             	mov    %rax,%rsi
   13f65:	48 8d 05 d4 82 00 00 	lea    0x82d4(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   13f6c:	48 89 c7             	mov    %rax,%rdi
   13f6f:	e8 dc e3 fe ff       	call   2350 <__assert_fail@plt>
   13f74:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
   13f7b:	48 8b 40 18          	mov    0x18(%rax),%rax
   13f7f:	48 85 c0             	test   %rax,%rax
   13f82:	75 28                	jne    13fac <gencode_case0+0x9d>
   13f84:	48 8d 05 bd 86 00 00 	lea    0x86bd(%rip),%rax        # 1c648 <__PRETTY_FUNCTION__.6>
   13f8b:	48 89 c1             	mov    %rax,%rcx
   13f8e:	ba f4 00 00 00       	mov    $0xf4,%edx
   13f93:	48 8d 05 e6 81 00 00 	lea    0x81e6(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13f9a:	48 89 c6             	mov    %rax,%rsi
   13f9d:	48 8d 05 a9 82 00 00 	lea    0x82a9(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   13fa4:	48 89 c7             	mov    %rax,%rdi
   13fa7:	e8 a4 e3 fe ff       	call   2350 <__assert_fail@plt>
   13fac:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
   13fb3:	48 8b 40 18          	mov    0x18(%rax),%rax
   13fb7:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
   13fbe:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   13fc5:	48 89 c7             	mov    %rax,%rdi
   13fc8:	e8 c5 f0 ff ff       	call   13092 <front_reg_stack>
   13fcd:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
   13fd4:	48 83 bd 88 fb ff ff 	cmpq   $0x0,-0x478(%rbp)
   13fdb:	00
   13fdc:	75 28                	jne    14006 <gencode_case0+0xf7>
   13fde:	48 8d 05 63 86 00 00 	lea    0x8663(%rip),%rax        # 1c648 <__PRETTY_FUNCTION__.6>
   13fe5:	48 89 c1             	mov    %rax,%rcx
   13fe8:	ba fd 00 00 00       	mov    $0xfd,%edx
   13fed:	48 8d 05 8c 81 00 00 	lea    0x818c(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   13ff4:	48 89 c6             	mov    %rax,%rsi
   13ff7:	48 8d 05 27 83 00 00 	lea    0x8327(%rip),%rax        # 1c325 <__PRETTY_FUNCTION__.0+0x1c5>
   13ffe:	48 89 c7             	mov    %rax,%rdi
   14001:	e8 4a e3 fe ff       	call   2350 <__assert_fail@plt>
   14006:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
   1400d:	8b 40 04             	mov    0x4(%rax),%eax
   14010:	83 f8 06             	cmp    $0x6,%eax
   14013:	0f 85 d1 00 00 00    	jne    140ea <gencode_case0+0x1db>
   14019:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
   14020:	48 8b 40 10          	mov    0x10(%rax),%rax
   14024:	48 8b 8d 68 fb ff ff 	mov    -0x498(%rbp),%rcx
   1402b:	ba 00 00 00 00       	mov    $0x0,%edx
   14030:	48 89 ce             	mov    %rcx,%rsi
   14033:	48 89 c7             	mov    %rax,%rdi
   14036:	e8 ec dd ff ff       	call   11e27 <codegen_pass_arguments>
   1403b:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
   14042:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
   14049:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1404d:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   14054:	48 89 d1             	mov    %rdx,%rcx
   14057:	48 8d 15 d3 82 00 00 	lea    0x82d3(%rip),%rdx        # 1c331 <__PRETTY_FUNCTION__.0+0x1d1>
   1405e:	be 32 00 00 00       	mov    $0x32,%esi
   14063:	48 89 c7             	mov    %rax,%rdi
   14066:	b8 00 00 00 00       	mov    $0x0,%eax
   1406b:	e8 d0 e2 fe ff       	call   2340 <snprintf@plt>
   14070:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14077:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   1407e:	48 89 d6             	mov    %rdx,%rsi
   14081:	48 89 c7             	mov    %rax,%rdi
   14084:	e8 34 a8 ff ff       	call   e8bd <add_inst>
   14089:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
   14090:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   14097:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1409b:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   140a2:	48 89 d1             	mov    %rdx,%rcx
   140a5:	48 8d 15 8f 82 00 00 	lea    0x828f(%rip),%rdx        # 1c33b <__PRETTY_FUNCTION__.0+0x1db>
   140ac:	be 32 00 00 00       	mov    $0x32,%esi
   140b1:	48 89 c7             	mov    %rax,%rdi
   140b4:	b8 00 00 00 00       	mov    $0x0,%eax
   140b9:	e8 82 e2 fe ff       	call   2340 <snprintf@plt>
   140be:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   140c5:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   140cc:	48 89 d6             	mov    %rdx,%rsi
   140cf:	48 89 c7             	mov    %rax,%rdi
   140d2:	e8 e6 a7 ff ff       	call   e8bd <add_inst>
   140d7:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
   140de:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   140e5:	e9 98 01 00 00       	jmp    14282 <gencode_case0+0x373>
   140ea:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
   140f1:	8b 40 04             	mov    0x4(%rax),%eax
   140f4:	83 f8 09             	cmp    $0x9,%eax
   140f7:	0f 85 de 00 00 00    	jne    141db <gencode_case0+0x2cc>
   140fd:	8b 05 2d cf 00 00    	mov    0xcf2d(%rip),%eax        # 21030 <write_label_counter>
   14103:	8d 50 01             	lea    0x1(%rax),%edx
   14106:	89 15 24 cf 00 00    	mov    %edx,0xcf24(%rip)        # 21030 <write_label_counter>
   1410c:	48 8d bd 90 fb ff ff 	lea    -0x470(%rbp),%rdi
   14113:	89 c1                	mov    %eax,%ecx
   14115:	48 8d 05 30 82 00 00 	lea    0x8230(%rip),%rax        # 1c34c <__PRETTY_FUNCTION__.0+0x1ec>
   1411c:	48 89 c2             	mov    %rax,%rdx
   1411f:	be 14 00 00 00       	mov    $0x14,%esi
   14124:	b8 00 00 00 00       	mov    $0x0,%eax
   14129:	e8 12 e2 fe ff       	call   2340 <snprintf@plt>
   1412e:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
   14135:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14139:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
   14140:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   14147:	49 89 c8             	mov    %rcx,%r8
   1414a:	48 89 d1             	mov    %rdx,%rcx
   1414d:	48 8d 15 04 82 00 00 	lea    0x8204(%rip),%rdx        # 1c358 <__PRETTY_FUNCTION__.0+0x1f8>
   14154:	be 00 04 00 00       	mov    $0x400,%esi
   14159:	48 89 c7             	mov    %rax,%rdi
   1415c:	b8 00 00 00 00       	mov    $0x0,%eax
   14161:	e8 da e1 fe ff       	call   2340 <snprintf@plt>
   14166:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   1416d:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   14174:	48 89 d6             	mov    %rdx,%rsi
   14177:	48 89 c7             	mov    %rax,%rdi
   1417a:	e8 3e a7 ff ff       	call   e8bd <add_inst>
   1417f:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
   14186:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   1418d:	48 8b 08             	mov    (%rax),%rcx
   14190:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
   14197:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   1419e:	49 89 c8             	mov    %rcx,%r8
   141a1:	48 89 d1             	mov    %rdx,%rcx
   141a4:	48 8d 15 d9 81 00 00 	lea    0x81d9(%rip),%rdx        # 1c384 <__PRETTY_FUNCTION__.0+0x224>
   141ab:	be 32 00 00 00       	mov    $0x32,%esi
   141b0:	48 89 c7             	mov    %rax,%rdi
   141b3:	b8 00 00 00 00       	mov    $0x0,%eax
   141b8:	e8 83 e1 fe ff       	call   2340 <snprintf@plt>
   141bd:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   141c4:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   141cb:	48 89 d6             	mov    %rdx,%rsi
   141ce:	48 89 c7             	mov    %rax,%rdi
   141d1:	e8 e7 a6 ff ff       	call   e8bd <add_inst>
   141d6:	e9 a7 00 00 00       	jmp    14282 <gencode_case0+0x373>
   141db:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   141e2:	48 8b b5 68 fb ff ff 	mov    -0x498(%rbp),%rsi
   141e9:	48 8b 85 80 fb ff ff 	mov    -0x480(%rbp),%rax
   141f0:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   141f5:	48 89 c7             	mov    %rax,%rdi
   141f8:	e8 f9 04 00 00       	call   146f6 <gencode_leaf_var>
   141fd:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
   14204:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   1420b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1420f:	48 8b 05 4a ce 00 00 	mov    0xce4a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14216:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   1421d:	48 8d 35 7c 81 00 00 	lea    0x817c(%rip),%rsi        # 1c3a0 <__PRETTY_FUNCTION__.0+0x240>
   14224:	48 89 c7             	mov    %rax,%rdi
   14227:	b8 00 00 00 00       	mov    $0x0,%eax
   1422c:	e8 9f e1 fe ff       	call   23d0 <fprintf@plt>
   14231:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   14238:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1423c:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   14243:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   1424a:	49 89 c8             	mov    %rcx,%r8
   1424d:	48 89 d1             	mov    %rdx,%rcx
   14250:	48 8d 15 73 81 00 00 	lea    0x8173(%rip),%rdx        # 1c3ca <__PRETTY_FUNCTION__.0+0x26a>
   14257:	be 32 00 00 00       	mov    $0x32,%esi
   1425c:	48 89 c7             	mov    %rax,%rdi
   1425f:	b8 00 00 00 00       	mov    $0x0,%eax
   14264:	e8 d7 e0 fe ff       	call   2340 <snprintf@plt>
   14269:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14270:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   14277:	48 89 d6             	mov    %rdx,%rsi
   1427a:	48 89 c7             	mov    %rax,%rdi
   1427d:	e8 3b a6 ff ff       	call   e8bd <add_inst>
   14282:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14286:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1428d:	00 00
   1428f:	74 05                	je     14296 <gencode_case0+0x387>
   14291:	e8 9a e0 fe ff       	call   2330 <__stack_chk_fail@plt>
   14296:	c9                   	leave
   14297:	c3                   	ret

0000000000014298 <gencode_case1>:
   14298:	f3 0f 1e fa          	endbr64
   1429c:	55                   	push   %rbp
   1429d:	48 89 e5             	mov    %rsp,%rbp
   142a0:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   142a4:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   142a8:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   142ac:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   142b0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   142b7:	00 00
   142b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   142bd:	31 c0                	xor    %eax,%eax
   142bf:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   142c4:	75 28                	jne    142ee <gencode_case1+0x56>
   142c6:	48 8d 05 8b 83 00 00 	lea    0x838b(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.5>
   142cd:	48 89 c1             	mov    %rax,%rcx
   142d0:	ba 22 01 00 00       	mov    $0x122,%edx
   142d5:	48 8d 05 a4 7e 00 00 	lea    0x7ea4(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   142dc:	48 89 c6             	mov    %rax,%rsi
   142df:	48 8d 05 5a 7f 00 00 	lea    0x7f5a(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   142e6:	48 89 c7             	mov    %rax,%rdi
   142e9:	e8 62 e0 fe ff       	call   2350 <__assert_fail@plt>
   142ee:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   142f2:	48 8b 40 18          	mov    0x18(%rax),%rax
   142f6:	48 85 c0             	test   %rax,%rax
   142f9:	75 28                	jne    14323 <gencode_case1+0x8b>
   142fb:	48 8d 05 56 83 00 00 	lea    0x8356(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.5>
   14302:	48 89 c1             	mov    %rax,%rcx
   14305:	ba 23 01 00 00       	mov    $0x123,%edx
   1430a:	48 8d 05 6f 7e 00 00 	lea    0x7e6f(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14311:	48 89 c6             	mov    %rax,%rsi
   14314:	48 8d 05 32 7f 00 00 	lea    0x7f32(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   1431b:	48 89 c7             	mov    %rax,%rdi
   1431e:	e8 2d e0 fe ff       	call   2350 <__assert_fail@plt>
   14323:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14327:	48 8b 40 10          	mov    0x10(%rax),%rax
   1432b:	48 85 c0             	test   %rax,%rax
   1432e:	75 28                	jne    14358 <gencode_case1+0xc0>
   14330:	48 8d 05 21 83 00 00 	lea    0x8321(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.5>
   14337:	48 89 c1             	mov    %rax,%rcx
   1433a:	ba 24 01 00 00       	mov    $0x124,%edx
   1433f:	48 8d 05 3a 7e 00 00 	lea    0x7e3a(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14346:	48 89 c6             	mov    %rax,%rsi
   14349:	48 8d 05 88 80 00 00 	lea    0x8088(%rip),%rax        # 1c3d8 <__PRETTY_FUNCTION__.0+0x278>
   14350:	48 89 c7             	mov    %rax,%rdi
   14353:	e8 f8 df fe ff       	call   2350 <__assert_fail@plt>
   14358:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1435c:	48 8b 40 10          	mov    0x10(%rax),%rax
   14360:	48 8b 40 18          	mov    0x18(%rax),%rax
   14364:	48 85 c0             	test   %rax,%rax
   14367:	75 28                	jne    14391 <gencode_case1+0xf9>
   14369:	48 8d 05 e8 82 00 00 	lea    0x82e8(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.5>
   14370:	48 89 c1             	mov    %rax,%rcx
   14373:	ba 25 01 00 00       	mov    $0x125,%edx
   14378:	48 8d 05 01 7e 00 00 	lea    0x7e01(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   1437f:	48 89 c6             	mov    %rax,%rsi
   14382:	48 8d 05 6f 80 00 00 	lea    0x806f(%rip),%rax        # 1c3f8 <__PRETTY_FUNCTION__.0+0x298>
   14389:	48 89 c7             	mov    %rax,%rdi
   1438c:	e8 bf df fe ff       	call   2350 <__assert_fail@plt>
   14391:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14395:	48 8b 40 08          	mov    0x8(%rax),%rax
   14399:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1439d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   143a1:	48 89 ce             	mov    %rcx,%rsi
   143a4:	48 89 c7             	mov    %rax,%rdi
   143a7:	e8 9d f5 ff ff       	call   13949 <gencode_expr_tree>
   143ac:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   143b0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   143b4:	48 8b 40 18          	mov    0x18(%rax),%rax
   143b8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   143bc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   143c0:	48 8b 40 10          	mov    0x10(%rax),%rax
   143c4:	48 8b 40 18          	mov    0x18(%rax),%rax
   143c8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   143cc:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   143d1:	75 28                	jne    143fb <gencode_case1+0x163>
   143d3:	48 8d 05 7e 82 00 00 	lea    0x827e(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.5>
   143da:	48 89 c1             	mov    %rax,%rcx
   143dd:	ba 30 01 00 00       	mov    $0x130,%edx
   143e2:	48 8d 05 97 7d 00 00 	lea    0x7d97(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   143e9:	48 89 c6             	mov    %rax,%rsi
   143ec:	48 8d 05 24 80 00 00 	lea    0x8024(%rip),%rax        # 1c417 <__PRETTY_FUNCTION__.0+0x2b7>
   143f3:	48 89 c7             	mov    %rax,%rdi
   143f6:	e8 55 df fe ff       	call   2350 <__assert_fail@plt>
   143fb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   143ff:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
   14403:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14407:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   1440c:	48 89 c7             	mov    %rax,%rdi
   1440f:	e8 e2 02 00 00       	call   146f6 <gencode_leaf_var>
   14414:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   14418:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1441c:	48 89 c7             	mov    %rax,%rdi
   1441f:	e8 6e ec ff ff       	call   13092 <front_reg_stack>
   14424:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   14428:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1442c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14430:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   14434:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
   14438:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1443c:	48 89 c7             	mov    %rax,%rdi
   1443f:	e8 88 04 00 00       	call   148cc <gencode_op>
   14444:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   14448:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1444c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14450:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14457:	00 00
   14459:	74 05                	je     14460 <gencode_case1+0x1c8>
   1445b:	e8 d0 de fe ff       	call   2330 <__stack_chk_fail@plt>
   14460:	c9                   	leave
   14461:	c3                   	ret

0000000000014462 <gencode_case2>:
   14462:	f3 0f 1e fa          	endbr64
   14466:	55                   	push   %rbp
   14467:	48 89 e5             	mov    %rsp,%rbp
   1446a:	48 83 ec 70          	sub    $0x70,%rsp
   1446e:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14472:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14476:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1447a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14481:	00 00
   14483:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14487:	31 c0                	xor    %eax,%eax
   14489:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1448e:	75 28                	jne    144b8 <gencode_case2+0x56>
   14490:	48 8d 05 d1 81 00 00 	lea    0x81d1(%rip),%rax        # 1c668 <__PRETTY_FUNCTION__.4>
   14497:	48 89 c1             	mov    %rax,%rcx
   1449a:	ba 3c 01 00 00       	mov    $0x13c,%edx
   1449f:	48 8d 05 da 7c 00 00 	lea    0x7cda(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   144a6:	48 89 c6             	mov    %rax,%rsi
   144a9:	48 8d 05 90 7d 00 00 	lea    0x7d90(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   144b0:	48 89 c7             	mov    %rax,%rdi
   144b3:	e8 98 de fe ff       	call   2350 <__assert_fail@plt>
   144b8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   144bc:	48 8b 40 18          	mov    0x18(%rax),%rax
   144c0:	48 85 c0             	test   %rax,%rax
   144c3:	75 28                	jne    144ed <gencode_case2+0x8b>
   144c5:	48 8d 05 9c 81 00 00 	lea    0x819c(%rip),%rax        # 1c668 <__PRETTY_FUNCTION__.4>
   144cc:	48 89 c1             	mov    %rax,%rcx
   144cf:	ba 3d 01 00 00       	mov    $0x13d,%edx
   144d4:	48 8d 05 a5 7c 00 00 	lea    0x7ca5(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   144db:	48 89 c6             	mov    %rax,%rsi
   144de:	48 8d 05 68 7d 00 00 	lea    0x7d68(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   144e5:	48 89 c7             	mov    %rax,%rdi
   144e8:	e8 63 de fe ff       	call   2350 <__assert_fail@plt>
   144ed:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   144f1:	48 89 c7             	mov    %rax,%rdi
   144f4:	e8 ad ea ff ff       	call   12fa6 <swap_reg_stack>
   144f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   144fd:	48 8b 40 10          	mov    0x10(%rax),%rax
   14501:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   14505:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14509:	48 89 ce             	mov    %rcx,%rsi
   1450c:	48 89 c7             	mov    %rax,%rdi
   1450f:	e8 35 f4 ff ff       	call   13949 <gencode_expr_tree>
   14514:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14518:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1451c:	48 89 c7             	mov    %rax,%rdi
   1451f:	e8 ba eb ff ff       	call   130de <pop_reg_stack>
   14524:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14528:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1452c:	48 8b 40 08          	mov    0x8(%rax),%rax
   14530:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   14534:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14538:	48 89 ce             	mov    %rcx,%rsi
   1453b:	48 89 c7             	mov    %rax,%rdi
   1453e:	e8 06 f4 ff ff       	call   13949 <gencode_expr_tree>
   14543:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14547:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1454b:	48 89 c7             	mov    %rax,%rdi
   1454e:	e8 3f eb ff ff       	call   13092 <front_reg_stack>
   14553:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   14557:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1455b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1455f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14563:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14567:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1456b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1456f:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   14573:	48 89 c7             	mov    %rax,%rdi
   14576:	e8 51 03 00 00       	call   148cc <gencode_op>
   1457b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1457f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14583:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14587:	48 89 d6             	mov    %rdx,%rsi
   1458a:	48 89 c7             	mov    %rax,%rdi
   1458d:	e8 3b e9 ff ff       	call   12ecd <push_reg_stack>
   14592:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14596:	48 89 c7             	mov    %rax,%rdi
   14599:	e8 08 ea ff ff       	call   12fa6 <swap_reg_stack>
   1459e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   145a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   145a6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   145ad:	00 00
   145af:	74 05                	je     145b6 <gencode_case2+0x154>
   145b1:	e8 7a dd fe ff       	call   2330 <__stack_chk_fail@plt>
   145b6:	c9                   	leave
   145b7:	c3                   	ret

00000000000145b8 <gencode_case3>:
   145b8:	f3 0f 1e fa          	endbr64
   145bc:	55                   	push   %rbp
   145bd:	48 89 e5             	mov    %rsp,%rbp
   145c0:	48 83 ec 70          	sub    $0x70,%rsp
   145c4:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   145c8:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   145cc:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   145d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   145d7:	00 00
   145d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   145dd:	31 c0                	xor    %eax,%eax
   145df:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   145e4:	75 28                	jne    1460e <gencode_case3+0x56>
   145e6:	48 8d 05 8b 80 00 00 	lea    0x808b(%rip),%rax        # 1c678 <__PRETTY_FUNCTION__.3>
   145ed:	48 89 c1             	mov    %rax,%rcx
   145f0:	ba 53 01 00 00       	mov    $0x153,%edx
   145f5:	48 8d 05 84 7b 00 00 	lea    0x7b84(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   145fc:	48 89 c6             	mov    %rax,%rsi
   145ff:	48 8d 05 3a 7c 00 00 	lea    0x7c3a(%rip),%rax        # 1c240 <__PRETTY_FUNCTION__.0+0xe0>
   14606:	48 89 c7             	mov    %rax,%rdi
   14609:	e8 42 dd fe ff       	call   2350 <__assert_fail@plt>
   1460e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14612:	48 8b 40 18          	mov    0x18(%rax),%rax
   14616:	48 85 c0             	test   %rax,%rax
   14619:	75 28                	jne    14643 <gencode_case3+0x8b>
   1461b:	48 8d 05 56 80 00 00 	lea    0x8056(%rip),%rax        # 1c678 <__PRETTY_FUNCTION__.3>
   14622:	48 89 c1             	mov    %rax,%rcx
   14625:	ba 54 01 00 00       	mov    $0x154,%edx
   1462a:	48 8d 05 4f 7b 00 00 	lea    0x7b4f(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14631:	48 89 c6             	mov    %rax,%rsi
   14634:	48 8d 05 12 7c 00 00 	lea    0x7c12(%rip),%rax        # 1c24d <__PRETTY_FUNCTION__.0+0xed>
   1463b:	48 89 c7             	mov    %rax,%rdi
   1463e:	e8 0d dd fe ff       	call   2350 <__assert_fail@plt>
   14643:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14647:	48 8b 40 08          	mov    0x8(%rax),%rax
   1464b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1464f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14653:	48 89 ce             	mov    %rcx,%rsi
   14656:	48 89 c7             	mov    %rax,%rdi
   14659:	e8 eb f2 ff ff       	call   13949 <gencode_expr_tree>
   1465e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14662:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14666:	48 89 c7             	mov    %rax,%rdi
   14669:	e8 70 ea ff ff       	call   130de <pop_reg_stack>
   1466e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14672:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14676:	48 8b 40 10          	mov    0x10(%rax),%rax
   1467a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1467e:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14682:	48 89 ce             	mov    %rcx,%rsi
   14685:	48 89 c7             	mov    %rax,%rdi
   14688:	e8 bc f2 ff ff       	call   13949 <gencode_expr_tree>
   1468d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14691:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14695:	48 89 c7             	mov    %rax,%rdi
   14698:	e8 f5 e9 ff ff       	call   13092 <front_reg_stack>
   1469d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   146a1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   146a5:	48 8b 50 08          	mov    0x8(%rax),%rdx
   146a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   146ad:	48 8b 70 08          	mov    0x8(%rax),%rsi
   146b1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   146b5:	48 8b 40 18          	mov    0x18(%rax),%rax
   146b9:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   146bd:	48 89 c7             	mov    %rax,%rdi
   146c0:	e8 07 02 00 00       	call   148cc <gencode_op>
   146c5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   146c9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   146cd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   146d1:	48 89 d6             	mov    %rdx,%rsi
   146d4:	48 89 c7             	mov    %rax,%rdi
   146d7:	e8 f1 e7 ff ff       	call   12ecd <push_reg_stack>
   146dc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   146e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   146e4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   146eb:	00 00
   146ed:	74 05                	je     146f4 <gencode_case3+0x13c>
   146ef:	e8 3c dc fe ff       	call   2330 <__stack_chk_fail@plt>
   146f4:	c9                   	leave
   146f5:	c3                   	ret

00000000000146f6 <gencode_leaf_var>:
   146f6:	f3 0f 1e fa          	endbr64
   146fa:	55                   	push   %rbp
   146fb:	48 89 e5             	mov    %rsp,%rbp
   146fe:	48 83 ec 40          	sub    $0x40,%rsp
   14702:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14706:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1470a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1470e:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
   14711:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14718:	00 00
   1471a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1471e:	31 c0                	xor    %eax,%eax
   14720:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   14725:	75 28                	jne    1474f <gencode_leaf_var+0x59>
   14727:	48 8d 05 62 7f 00 00 	lea    0x7f62(%rip),%rax        # 1c690 <__PRETTY_FUNCTION__.2>
   1472e:	48 89 c1             	mov    %rax,%rcx
   14731:	ba 6b 01 00 00       	mov    $0x16b,%edx
   14736:	48 8d 05 43 7a 00 00 	lea    0x7a43(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   1473d:	48 89 c6             	mov    %rax,%rsi
   14740:	48 8d 05 6a 7a 00 00 	lea    0x7a6a(%rip),%rax        # 1c1b1 <__PRETTY_FUNCTION__.0+0x51>
   14747:	48 89 c7             	mov    %rax,%rdi
   1474a:	e8 01 dc fe ff       	call   2350 <__assert_fail@plt>
   1474f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14753:	8b 40 04             	mov    0x4(%rax),%eax
   14756:	83 f8 04             	cmp    $0x4,%eax
   14759:	74 0e                	je     14769 <gencode_leaf_var+0x73>
   1475b:	83 f8 07             	cmp    $0x7,%eax
   1475e:	0f 84 f8 00 00 00    	je     1485c <gencode_leaf_var+0x166>
   14764:	e9 1c 01 00 00       	jmp    14885 <gencode_leaf_var+0x18f>
   14769:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1476d:	48 8b 40 08          	mov    0x8(%rax),%rax
   14771:	48 89 c7             	mov    %rax,%rdi
   14774:	e8 28 e2 ff ff       	call   129a1 <find_label>
   14779:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1477d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14782:	74 2b                	je     147af <gencode_leaf_var+0xb9>
   14784:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14788:	8b 10                	mov    (%rax),%edx
   1478a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1478d:	48 63 f0             	movslq %eax,%rsi
   14790:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14794:	89 d1                	mov    %edx,%ecx
   14796:	48 8d 15 8d 7c 00 00 	lea    0x7c8d(%rip),%rdx        # 1c42a <__PRETTY_FUNCTION__.0+0x2ca>
   1479d:	48 89 c7             	mov    %rax,%rdi
   147a0:	b8 00 00 00 00       	mov    $0x0,%eax
   147a5:	e8 96 db fe ff       	call   2340 <snprintf@plt>
   147aa:	e9 03 01 00 00       	jmp    148b2 <gencode_leaf_var+0x1bc>
   147af:	b8 00 00 00 00       	mov    $0x0,%eax
   147b4:	e8 01 e2 fe ff       	call   29ba <nonlocal_flag>
   147b9:	83 f8 01             	cmp    $0x1,%eax
   147bc:	75 4e                	jne    1480c <gencode_leaf_var+0x116>
   147be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   147c2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   147c6:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   147ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   147ce:	48 89 ce             	mov    %rcx,%rsi
   147d1:	48 89 c7             	mov    %rax,%rdi
   147d4:	e8 fd c4 ff ff       	call   10cd6 <codegen_get_nonlocal>
   147d9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   147dd:	8b 55 ec             	mov    -0x14(%rbp),%edx
   147e0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   147e3:	48 63 f0             	movslq %eax,%rsi
   147e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147ea:	4c 8d 05 44 7c 00 00 	lea    0x7c44(%rip),%r8        # 1c435 <__PRETTY_FUNCTION__.0+0x2d5>
   147f1:	89 d1                	mov    %edx,%ecx
   147f3:	48 8d 15 40 7c 00 00 	lea    0x7c40(%rip),%rdx        # 1c43a <__PRETTY_FUNCTION__.0+0x2da>
   147fa:	48 89 c7             	mov    %rax,%rdi
   147fd:	b8 00 00 00 00       	mov    $0x0,%eax
   14802:	e8 39 db fe ff       	call   2340 <snprintf@plt>
   14807:	e9 a6 00 00 00       	jmp    148b2 <gencode_leaf_var+0x1bc>
   1480c:	48 8b 05 4d c8 00 00 	mov    0xc84d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14813:	48 89 c1             	mov    %rax,%rcx
   14816:	ba 33 00 00 00       	mov    $0x33,%edx
   1481b:	be 01 00 00 00       	mov    $0x1,%esi
   14820:	48 8d 05 21 7c 00 00 	lea    0x7c21(%rip),%rax        # 1c448 <__PRETTY_FUNCTION__.0+0x2e8>
   14827:	48 89 c7             	mov    %rax,%rdi
   1482a:	e8 61 dc fe ff       	call   2490 <fwrite@plt>
   1482f:	48 8b 05 2a c8 00 00 	mov    0xc82a(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14836:	48 89 c1             	mov    %rax,%rcx
   14839:	ba 33 00 00 00       	mov    $0x33,%edx
   1483e:	be 01 00 00 00       	mov    $0x1,%esi
   14843:	48 8d 05 36 7c 00 00 	lea    0x7c36(%rip),%rax        # 1c480 <__PRETTY_FUNCTION__.0+0x320>
   1484a:	48 89 c7             	mov    %rax,%rdi
   1484d:	e8 3e dc fe ff       	call   2490 <fwrite@plt>
   14852:	bf 01 00 00 00       	mov    $0x1,%edi
   14857:	e8 24 dc fe ff       	call   2480 <exit@plt>
   1485c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14860:	8b 50 08             	mov    0x8(%rax),%edx
   14863:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14866:	48 63 f0             	movslq %eax,%rsi
   14869:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1486d:	89 d1                	mov    %edx,%ecx
   1486f:	48 8d 15 3e 7c 00 00 	lea    0x7c3e(%rip),%rdx        # 1c4b4 <__PRETTY_FUNCTION__.0+0x354>
   14876:	48 89 c7             	mov    %rax,%rdi
   14879:	b8 00 00 00 00       	mov    $0x0,%eax
   1487e:	e8 bd da fe ff       	call   2340 <snprintf@plt>
   14883:	eb 2d                	jmp    148b2 <gencode_leaf_var+0x1bc>
   14885:	48 8b 05 d4 c7 00 00 	mov    0xc7d4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1488c:	48 89 c1             	mov    %rax,%rcx
   1488f:	ba 29 00 00 00       	mov    $0x29,%edx
   14894:	be 01 00 00 00       	mov    $0x1,%esi
   14899:	48 8d 05 18 7c 00 00 	lea    0x7c18(%rip),%rax        # 1c4b8 <__PRETTY_FUNCTION__.0+0x358>
   148a0:	48 89 c7             	mov    %rax,%rdi
   148a3:	e8 e8 db fe ff       	call   2490 <fwrite@plt>
   148a8:	bf 01 00 00 00       	mov    $0x1,%edi
   148ad:	e8 ce db fe ff       	call   2480 <exit@plt>
   148b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   148ba:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   148c1:	00 00
   148c3:	74 05                	je     148ca <gencode_leaf_var+0x1d4>
   148c5:	e8 66 da fe ff       	call   2330 <__stack_chk_fail@plt>
   148ca:	c9                   	leave
   148cb:	c3                   	ret

00000000000148cc <gencode_op>:
   148cc:	f3 0f 1e fa          	endbr64
   148d0:	55                   	push   %rbp
   148d1:	48 89 e5             	mov    %rsp,%rbp
   148d4:	48 83 ec 70          	sub    $0x70,%rsp
   148d8:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   148dc:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   148e0:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   148e4:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   148e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   148ef:	00 00
   148f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   148f5:	31 c0                	xor    %eax,%eax
   148f7:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   148fc:	75 28                	jne    14926 <gencode_op+0x5a>
   148fe:	48 8d 05 a3 7d 00 00 	lea    0x7da3(%rip),%rax        # 1c6a8 <__PRETTY_FUNCTION__.1>
   14905:	48 89 c1             	mov    %rax,%rcx
   14908:	ba 97 01 00 00       	mov    $0x197,%edx
   1490d:	48 8d 05 6c 78 00 00 	lea    0x786c(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14914:	48 89 c6             	mov    %rax,%rsi
   14917:	48 8d 05 93 78 00 00 	lea    0x7893(%rip),%rax        # 1c1b1 <__PRETTY_FUNCTION__.0+0x51>
   1491e:	48 89 c7             	mov    %rax,%rdi
   14921:	e8 2a da fe ff       	call   2350 <__assert_fail@plt>
   14926:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1492b:	75 28                	jne    14955 <gencode_op+0x89>
   1492d:	48 8d 05 74 7d 00 00 	lea    0x7d74(%rip),%rax        # 1c6a8 <__PRETTY_FUNCTION__.1>
   14934:	48 89 c1             	mov    %rax,%rcx
   14937:	ba 98 01 00 00       	mov    $0x198,%edx
   1493c:	48 8d 05 3d 78 00 00 	lea    0x783d(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14943:	48 89 c6             	mov    %rax,%rsi
   14946:	48 8d 05 95 7b 00 00 	lea    0x7b95(%rip),%rax        # 1c4e2 <__PRETTY_FUNCTION__.0+0x382>
   1494d:	48 89 c7             	mov    %rax,%rdi
   14950:	e8 fb d9 fe ff       	call   2350 <__assert_fail@plt>
   14955:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   1495a:	75 28                	jne    14984 <gencode_op+0xb8>
   1495c:	48 8d 05 45 7d 00 00 	lea    0x7d45(%rip),%rax        # 1c6a8 <__PRETTY_FUNCTION__.1>
   14963:	48 89 c1             	mov    %rax,%rcx
   14966:	ba 99 01 00 00       	mov    $0x199,%edx
   1496b:	48 8d 05 0e 78 00 00 	lea    0x780e(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14972:	48 89 c6             	mov    %rax,%rsi
   14975:	48 8d 05 73 7b 00 00 	lea    0x7b73(%rip),%rax        # 1c4ef <__PRETTY_FUNCTION__.0+0x38f>
   1497c:	48 89 c7             	mov    %rax,%rdi
   1497f:	e8 cc d9 fe ff       	call   2350 <__assert_fail@plt>
   14984:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14988:	8b 40 04             	mov    0x4(%rax),%eax
   1498b:	83 f8 03             	cmp    $0x3,%eax
   1498e:	0f 84 f1 00 00 00    	je     14a85 <gencode_op+0x1b9>
   14994:	83 f8 03             	cmp    $0x3,%eax
   14997:	0f 87 07 02 00 00    	ja     14ba4 <gencode_op+0x2d8>
   1499d:	85 c0                	test   %eax,%eax
   1499f:	0f 84 bb 01 00 00    	je     14b60 <gencode_op+0x294>
   149a5:	83 f8 02             	cmp    $0x2,%eax
   149a8:	0f 85 f6 01 00 00    	jne    14ba4 <gencode_op+0x2d8>
   149ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   149b2:	8b 40 08             	mov    0x8(%rax),%eax
   149b5:	89 45 bc             	mov    %eax,-0x44(%rbp)
   149b8:	81 7d bc 2c 01 00 00 	cmpl   $0x12c,-0x44(%rbp)
   149bf:	75 47                	jne    14a08 <gencode_op+0x13c>
   149c1:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   149c5:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   149c9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   149cd:	49 89 c8             	mov    %rcx,%r8
   149d0:	48 89 d1             	mov    %rdx,%rcx
   149d3:	48 8d 15 23 7b 00 00 	lea    0x7b23(%rip),%rdx        # 1c4fd <__PRETTY_FUNCTION__.0+0x39d>
   149da:	be 32 00 00 00       	mov    $0x32,%esi
   149df:	48 89 c7             	mov    %rax,%rdi
   149e2:	b8 00 00 00 00       	mov    $0x0,%eax
   149e7:	e8 54 d9 fe ff       	call   2340 <snprintf@plt>
   149ec:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   149f0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   149f4:	48 89 d6             	mov    %rdx,%rsi
   149f7:	48 89 c7             	mov    %rax,%rdi
   149fa:	e8 be 9e ff ff       	call   e8bd <add_inst>
   149ff:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14a03:	e9 c9 01 00 00       	jmp    14bd1 <gencode_op+0x305>
   14a08:	81 7d bc 2d 01 00 00 	cmpl   $0x12d,-0x44(%rbp)
   14a0f:	75 47                	jne    14a58 <gencode_op+0x18c>
   14a11:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   14a15:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14a19:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14a1d:	49 89 c8             	mov    %rcx,%r8
   14a20:	48 89 d1             	mov    %rdx,%rcx
   14a23:	48 8d 15 e1 7a 00 00 	lea    0x7ae1(%rip),%rdx        # 1c50b <__PRETTY_FUNCTION__.0+0x3ab>
   14a2a:	be 32 00 00 00       	mov    $0x32,%esi
   14a2f:	48 89 c7             	mov    %rax,%rdi
   14a32:	b8 00 00 00 00       	mov    $0x0,%eax
   14a37:	e8 04 d9 fe ff       	call   2340 <snprintf@plt>
   14a3c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14a40:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14a44:	48 89 d6             	mov    %rdx,%rsi
   14a47:	48 89 c7             	mov    %rax,%rdi
   14a4a:	e8 6e 9e ff ff       	call   e8bd <add_inst>
   14a4f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14a53:	e9 79 01 00 00       	jmp    14bd1 <gencode_op+0x305>
   14a58:	48 8b 05 01 c6 00 00 	mov    0xc601(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14a5f:	48 89 c1             	mov    %rax,%rcx
   14a62:	ba 17 00 00 00       	mov    $0x17,%edx
   14a67:	be 01 00 00 00       	mov    $0x1,%esi
   14a6c:	48 8d 05 a6 7a 00 00 	lea    0x7aa6(%rip),%rax        # 1c519 <__PRETTY_FUNCTION__.0+0x3b9>
   14a73:	48 89 c7             	mov    %rax,%rdi
   14a76:	e8 15 da fe ff       	call   2490 <fwrite@plt>
   14a7b:	bf 01 00 00 00       	mov    $0x1,%edi
   14a80:	e8 fb d9 fe ff       	call   2480 <exit@plt>
   14a85:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14a89:	8b 40 08             	mov    0x8(%rax),%eax
   14a8c:	89 45 bc             	mov    %eax,-0x44(%rbp)
   14a8f:	81 7d bc 30 01 00 00 	cmpl   $0x130,-0x44(%rbp)
   14a96:	75 47                	jne    14adf <gencode_op+0x213>
   14a98:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   14a9c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14aa0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14aa4:	49 89 c8             	mov    %rcx,%r8
   14aa7:	48 89 d1             	mov    %rdx,%rcx
   14aaa:	48 8d 15 80 7a 00 00 	lea    0x7a80(%rip),%rdx        # 1c531 <__PRETTY_FUNCTION__.0+0x3d1>
   14ab1:	be 32 00 00 00       	mov    $0x32,%esi
   14ab6:	48 89 c7             	mov    %rax,%rdi
   14ab9:	b8 00 00 00 00       	mov    $0x0,%eax
   14abe:	e8 7d d8 fe ff       	call   2340 <snprintf@plt>
   14ac3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14ac7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14acb:	48 89 d6             	mov    %rdx,%rsi
   14ace:	48 89 c7             	mov    %rax,%rdi
   14ad1:	e8 e7 9d ff ff       	call   e8bd <add_inst>
   14ad6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14ada:	e9 f2 00 00 00       	jmp    14bd1 <gencode_op+0x305>
   14adf:	81 7d bc 31 01 00 00 	cmpl   $0x131,-0x44(%rbp)
   14ae6:	75 4b                	jne    14b33 <gencode_op+0x267>
   14ae8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14aec:	0f b6 00             	movzbl (%rax),%eax
   14aef:	3c 24                	cmp    $0x24,%al
   14af1:	75 20                	jne    14b13 <gencode_op+0x247>
   14af3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   14af7:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   14afb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14aff:	48 89 ce             	mov    %rcx,%rsi
   14b02:	48 89 c7             	mov    %rax,%rdi
   14b05:	e8 e1 00 00 00       	call   14beb <gencode_divide_const_no_optimize>
   14b0a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14b0e:	e9 be 00 00 00       	jmp    14bd1 <gencode_op+0x305>
   14b13:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   14b17:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   14b1b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14b1f:	48 89 ce             	mov    %rcx,%rsi
   14b22:	48 89 c7             	mov    %rax,%rdi
   14b25:	e8 59 02 00 00       	call   14d83 <gencode_divide_no_const>
   14b2a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14b2e:	e9 9e 00 00 00       	jmp    14bd1 <gencode_op+0x305>
   14b33:	48 8b 05 26 c5 00 00 	mov    0xc526(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14b3a:	48 89 c1             	mov    %rax,%rcx
   14b3d:	ba 17 00 00 00       	mov    $0x17,%edx
   14b42:	be 01 00 00 00       	mov    $0x1,%esi
   14b47:	48 8d 05 f2 79 00 00 	lea    0x79f2(%rip),%rax        # 1c540 <__PRETTY_FUNCTION__.0+0x3e0>
   14b4e:	48 89 c7             	mov    %rax,%rdi
   14b51:	e8 3a d9 fe ff       	call   2490 <fwrite@plt>
   14b56:	bf 01 00 00 00       	mov    $0x1,%edi
   14b5b:	e8 20 d9 fe ff       	call   2480 <exit@plt>
   14b60:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   14b64:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14b68:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14b6c:	49 89 c8             	mov    %rcx,%r8
   14b6f:	48 89 d1             	mov    %rdx,%rcx
   14b72:	48 8d 15 df 79 00 00 	lea    0x79df(%rip),%rdx        # 1c558 <__PRETTY_FUNCTION__.0+0x3f8>
   14b79:	be 32 00 00 00       	mov    $0x32,%esi
   14b7e:	48 89 c7             	mov    %rax,%rdi
   14b81:	b8 00 00 00 00       	mov    $0x0,%eax
   14b86:	e8 b5 d7 fe ff       	call   2340 <snprintf@plt>
   14b8b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14b8f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14b93:	48 89 d6             	mov    %rdx,%rsi
   14b96:	48 89 c7             	mov    %rax,%rdi
   14b99:	e8 1f 9d ff ff       	call   e8bd <add_inst>
   14b9e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14ba2:	eb 2d                	jmp    14bd1 <gencode_op+0x305>
   14ba4:	48 8b 05 b5 c4 00 00 	mov    0xc4b5(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14bab:	48 89 c1             	mov    %rax,%rcx
   14bae:	ba 29 00 00 00       	mov    $0x29,%edx
   14bb3:	be 01 00 00 00       	mov    $0x1,%esi
   14bb8:	48 8d 05 f9 78 00 00 	lea    0x78f9(%rip),%rax        # 1c4b8 <__PRETTY_FUNCTION__.0+0x358>
   14bbf:	48 89 c7             	mov    %rax,%rdi
   14bc2:	e8 c9 d8 fe ff       	call   2490 <fwrite@plt>
   14bc7:	bf 01 00 00 00       	mov    $0x1,%edi
   14bcc:	e8 af d8 fe ff       	call   2480 <exit@plt>
   14bd1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14bd5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14bd9:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14be0:	00 00
   14be2:	74 05                	je     14be9 <gencode_op+0x31d>
   14be4:	e8 47 d7 fe ff       	call   2330 <__stack_chk_fail@plt>
   14be9:	c9                   	leave
   14bea:	c3                   	ret

0000000000014beb <gencode_divide_const_no_optimize>:
   14beb:	f3 0f 1e fa          	endbr64
   14bef:	55                   	push   %rbp
   14bf0:	48 89 e5             	mov    %rsp,%rbp
   14bf3:	48 83 ec 70          	sub    $0x70,%rsp
   14bf7:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14bfb:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14bff:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   14c03:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14c0a:	00 00
   14c0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14c10:	31 c0                	xor    %eax,%eax
   14c12:	48 8d 05 4d 79 00 00 	lea    0x794d(%rip),%rax        # 1c566 <__PRETTY_FUNCTION__.0+0x406>
   14c19:	48 89 c7             	mov    %rax,%rdi
   14c1c:	e8 da dc ff ff       	call   128fb <find_in_temp>
   14c21:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   14c25:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14c2a:	75 13                	jne    14c3f <gencode_divide_const_no_optimize+0x54>
   14c2c:	48 8d 05 33 79 00 00 	lea    0x7933(%rip),%rax        # 1c566 <__PRETTY_FUNCTION__.0+0x406>
   14c33:	48 89 c7             	mov    %rax,%rdi
   14c36:	e8 69 d8 ff ff       	call   124a4 <add_l_t>
   14c3b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   14c3f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14c43:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14c47:	48 89 d1             	mov    %rdx,%rcx
   14c4a:	48 8d 15 1e 79 00 00 	lea    0x791e(%rip),%rdx        # 1c56f <__PRETTY_FUNCTION__.0+0x40f>
   14c51:	be 32 00 00 00       	mov    $0x32,%esi
   14c56:	48 89 c7             	mov    %rax,%rdi
   14c59:	b8 00 00 00 00       	mov    $0x0,%eax
   14c5e:	e8 dd d6 fe ff       	call   2340 <snprintf@plt>
   14c63:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14c67:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14c6b:	48 89 d6             	mov    %rdx,%rsi
   14c6e:	48 89 c7             	mov    %rax,%rdi
   14c71:	e8 47 9c ff ff       	call   e8bd <add_inst>
   14c76:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14c7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14c7e:	8b 08                	mov    (%rax),%ecx
   14c80:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14c84:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14c88:	41 89 c8             	mov    %ecx,%r8d
   14c8b:	48 89 d1             	mov    %rdx,%rcx
   14c8e:	48 8d 15 eb 78 00 00 	lea    0x78eb(%rip),%rdx        # 1c580 <__PRETTY_FUNCTION__.0+0x420>
   14c95:	be 32 00 00 00       	mov    $0x32,%esi
   14c9a:	48 89 c7             	mov    %rax,%rdi
   14c9d:	b8 00 00 00 00       	mov    $0x0,%eax
   14ca2:	e8 99 d6 fe ff       	call   2340 <snprintf@plt>
   14ca7:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14cab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14caf:	48 89 d6             	mov    %rdx,%rsi
   14cb2:	48 89 c7             	mov    %rax,%rdi
   14cb5:	e8 03 9c ff ff       	call   e8bd <add_inst>
   14cba:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14cbe:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14cc2:	48 8d 15 cd 78 00 00 	lea    0x78cd(%rip),%rdx        # 1c596 <__PRETTY_FUNCTION__.0+0x436>
   14cc9:	be 32 00 00 00       	mov    $0x32,%esi
   14cce:	48 89 c7             	mov    %rax,%rdi
   14cd1:	b8 00 00 00 00       	mov    $0x0,%eax
   14cd6:	e8 65 d6 fe ff       	call   2340 <snprintf@plt>
   14cdb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14cdf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14ce3:	48 89 d6             	mov    %rdx,%rsi
   14ce6:	48 89 c7             	mov    %rax,%rdi
   14ce9:	e8 cf 9b ff ff       	call   e8bd <add_inst>
   14cee:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14cf2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14cf6:	8b 10                	mov    (%rax),%edx
   14cf8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14cfc:	89 d1                	mov    %edx,%ecx
   14cfe:	48 8d 15 98 78 00 00 	lea    0x7898(%rip),%rdx        # 1c59d <__PRETTY_FUNCTION__.0+0x43d>
   14d05:	be 32 00 00 00       	mov    $0x32,%esi
   14d0a:	48 89 c7             	mov    %rax,%rdi
   14d0d:	b8 00 00 00 00       	mov    $0x0,%eax
   14d12:	e8 29 d6 fe ff       	call   2340 <snprintf@plt>
   14d17:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14d1b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14d1f:	48 89 d6             	mov    %rdx,%rsi
   14d22:	48 89 c7             	mov    %rax,%rdi
   14d25:	e8 93 9b ff ff       	call   e8bd <add_inst>
   14d2a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14d2e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   14d32:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14d36:	48 89 d1             	mov    %rdx,%rcx
   14d39:	48 8d 15 fb 75 00 00 	lea    0x75fb(%rip),%rdx        # 1c33b <__PRETTY_FUNCTION__.0+0x1db>
   14d40:	be 32 00 00 00       	mov    $0x32,%esi
   14d45:	48 89 c7             	mov    %rax,%rdi
   14d48:	b8 00 00 00 00       	mov    $0x0,%eax
   14d4d:	e8 ee d5 fe ff       	call   2340 <snprintf@plt>
   14d52:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14d56:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14d5a:	48 89 d6             	mov    %rdx,%rsi
   14d5d:	48 89 c7             	mov    %rax,%rdi
   14d60:	e8 58 9b ff ff       	call   e8bd <add_inst>
   14d65:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14d69:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14d6d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d71:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14d78:	00 00
   14d7a:	74 05                	je     14d81 <gencode_divide_const_no_optimize+0x196>
   14d7c:	e8 af d5 fe ff       	call   2330 <__stack_chk_fail@plt>
   14d81:	c9                   	leave
   14d82:	c3                   	ret

0000000000014d83 <gencode_divide_no_const>:
   14d83:	f3 0f 1e fa          	endbr64
   14d87:	55                   	push   %rbp
   14d88:	48 89 e5             	mov    %rsp,%rbp
   14d8b:	48 83 ec 60          	sub    $0x60,%rsp
   14d8f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   14d93:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   14d97:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   14d9b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14da2:	00 00
   14da4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14da8:	31 c0                	xor    %eax,%eax
   14daa:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14dae:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14db2:	48 89 d1             	mov    %rdx,%rcx
   14db5:	48 8d 15 b3 77 00 00 	lea    0x77b3(%rip),%rdx        # 1c56f <__PRETTY_FUNCTION__.0+0x40f>
   14dbc:	be 32 00 00 00       	mov    $0x32,%esi
   14dc1:	48 89 c7             	mov    %rax,%rdi
   14dc4:	b8 00 00 00 00       	mov    $0x0,%eax
   14dc9:	e8 72 d5 fe ff       	call   2340 <snprintf@plt>
   14dce:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14dd2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14dd6:	48 89 d6             	mov    %rdx,%rsi
   14dd9:	48 89 c7             	mov    %rax,%rdi
   14ddc:	e8 dc 9a ff ff       	call   e8bd <add_inst>
   14de1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14de5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14de9:	48 8d 15 a6 77 00 00 	lea    0x77a6(%rip),%rdx        # 1c596 <__PRETTY_FUNCTION__.0+0x436>
   14df0:	be 32 00 00 00       	mov    $0x32,%esi
   14df5:	48 89 c7             	mov    %rax,%rdi
   14df8:	b8 00 00 00 00       	mov    $0x0,%eax
   14dfd:	e8 3e d5 fe ff       	call   2340 <snprintf@plt>
   14e02:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14e06:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e0a:	48 89 d6             	mov    %rdx,%rsi
   14e0d:	48 89 c7             	mov    %rax,%rdi
   14e10:	e8 a8 9a ff ff       	call   e8bd <add_inst>
   14e15:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14e19:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14e1d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14e21:	48 89 d1             	mov    %rdx,%rcx
   14e24:	48 8d 15 85 77 00 00 	lea    0x7785(%rip),%rdx        # 1c5b0 <__PRETTY_FUNCTION__.0+0x450>
   14e2b:	be 32 00 00 00       	mov    $0x32,%esi
   14e30:	48 89 c7             	mov    %rax,%rdi
   14e33:	b8 00 00 00 00       	mov    $0x0,%eax
   14e38:	e8 03 d5 fe ff       	call   2340 <snprintf@plt>
   14e3d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14e41:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e45:	48 89 d6             	mov    %rdx,%rsi
   14e48:	48 89 c7             	mov    %rax,%rdi
   14e4b:	e8 6d 9a ff ff       	call   e8bd <add_inst>
   14e50:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14e54:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14e58:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14e5c:	48 89 d1             	mov    %rdx,%rcx
   14e5f:	48 8d 15 d5 74 00 00 	lea    0x74d5(%rip),%rdx        # 1c33b <__PRETTY_FUNCTION__.0+0x1db>
   14e66:	be 32 00 00 00       	mov    $0x32,%esi
   14e6b:	48 89 c7             	mov    %rax,%rdi
   14e6e:	b8 00 00 00 00       	mov    $0x0,%eax
   14e73:	e8 c8 d4 fe ff       	call   2340 <snprintf@plt>
   14e78:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14e7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e80:	48 89 d6             	mov    %rdx,%rsi
   14e83:	48 89 c7             	mov    %rax,%rdi
   14e86:	e8 32 9a ff ff       	call   e8bd <add_inst>
   14e8b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14e8f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14e97:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14e9e:	00 00
   14ea0:	74 05                	je     14ea7 <gencode_divide_no_const+0x124>
   14ea2:	e8 89 d4 fe ff       	call   2330 <__stack_chk_fail@plt>
   14ea7:	c9                   	leave
   14ea8:	c3                   	ret

0000000000014ea9 <gencode_op_deprecated>:
   14ea9:	f3 0f 1e fa          	endbr64
   14ead:	55                   	push   %rbp
   14eae:	48 89 e5             	mov    %rsp,%rbp
   14eb1:	48 83 ec 30          	sub    $0x30,%rsp
   14eb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14eb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14ebd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14ec1:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   14ec4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14ec9:	75 28                	jne    14ef3 <gencode_op_deprecated+0x4a>
   14ecb:	48 8d 05 ee 77 00 00 	lea    0x77ee(%rip),%rax        # 1c6c0 <__PRETTY_FUNCTION__.0>
   14ed2:	48 89 c1             	mov    %rax,%rcx
   14ed5:	ba 16 02 00 00       	mov    $0x216,%edx
   14eda:	48 8d 05 9f 72 00 00 	lea    0x729f(%rip),%rax        # 1c180 <__PRETTY_FUNCTION__.0+0x20>
   14ee1:	48 89 c6             	mov    %rax,%rsi
   14ee4:	48 8d 05 c6 72 00 00 	lea    0x72c6(%rip),%rax        # 1c1b1 <__PRETTY_FUNCTION__.0+0x51>
   14eeb:	48 89 c7             	mov    %rax,%rdi
   14eee:	e8 5d d4 fe ff       	call   2350 <__assert_fail@plt>
   14ef3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ef7:	8b 40 04             	mov    0x4(%rax),%eax
   14efa:	83 f8 02             	cmp    $0x2,%eax
   14efd:	74 0e                	je     14f0d <gencode_op_deprecated+0x64>
   14eff:	83 f8 03             	cmp    $0x3,%eax
   14f02:	0f 84 9a 00 00 00    	je     14fa2 <gencode_op_deprecated+0xf9>
   14f08:	e9 f8 00 00 00       	jmp    15005 <gencode_op_deprecated+0x15c>
   14f0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f11:	8b 40 08             	mov    0x8(%rax),%eax
   14f14:	89 45 fc             	mov    %eax,-0x4(%rbp)
   14f17:	81 7d fc 2c 01 00 00 	cmpl   $0x12c,-0x4(%rbp)
   14f1e:	75 26                	jne    14f46 <gencode_op_deprecated+0x9d>
   14f20:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   14f23:	48 63 c8             	movslq %eax,%rcx
   14f26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f2a:	48 8d 15 8a 76 00 00 	lea    0x768a(%rip),%rdx        # 1c5bb <__PRETTY_FUNCTION__.0+0x45b>
   14f31:	48 89 ce             	mov    %rcx,%rsi
   14f34:	48 89 c7             	mov    %rax,%rdi
   14f37:	b8 00 00 00 00       	mov    $0x0,%eax
   14f3c:	e8 ff d3 fe ff       	call   2340 <snprintf@plt>
   14f41:	e9 ec 00 00 00       	jmp    15032 <gencode_op_deprecated+0x189>
   14f46:	81 7d fc 2d 01 00 00 	cmpl   $0x12d,-0x4(%rbp)
   14f4d:	75 26                	jne    14f75 <gencode_op_deprecated+0xcc>
   14f4f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   14f52:	48 63 c8             	movslq %eax,%rcx
   14f55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f59:	48 8d 15 60 76 00 00 	lea    0x7660(%rip),%rdx        # 1c5c0 <__PRETTY_FUNCTION__.0+0x460>
   14f60:	48 89 ce             	mov    %rcx,%rsi
   14f63:	48 89 c7             	mov    %rax,%rdi
   14f66:	b8 00 00 00 00       	mov    $0x0,%eax
   14f6b:	e8 d0 d3 fe ff       	call   2340 <snprintf@plt>
   14f70:	e9 bd 00 00 00       	jmp    15032 <gencode_op_deprecated+0x189>
   14f75:	48 8b 05 e4 c0 00 00 	mov    0xc0e4(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14f7c:	48 89 c1             	mov    %rax,%rcx
   14f7f:	ba 17 00 00 00       	mov    $0x17,%edx
   14f84:	be 01 00 00 00       	mov    $0x1,%esi
   14f89:	48 8d 05 89 75 00 00 	lea    0x7589(%rip),%rax        # 1c519 <__PRETTY_FUNCTION__.0+0x3b9>
   14f90:	48 89 c7             	mov    %rax,%rdi
   14f93:	e8 f8 d4 fe ff       	call   2490 <fwrite@plt>
   14f98:	bf 01 00 00 00       	mov    $0x1,%edi
   14f9d:	e8 de d4 fe ff       	call   2480 <exit@plt>
   14fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fa6:	8b 40 08             	mov    0x8(%rax),%eax
   14fa9:	89 45 fc             	mov    %eax,-0x4(%rbp)
   14fac:	81 7d fc 30 01 00 00 	cmpl   $0x130,-0x4(%rbp)
   14fb3:	75 23                	jne    14fd8 <gencode_op_deprecated+0x12f>
   14fb5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   14fb8:	48 63 c8             	movslq %eax,%rcx
   14fbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14fbf:	48 8d 15 ff 75 00 00 	lea    0x75ff(%rip),%rdx        # 1c5c5 <__PRETTY_FUNCTION__.0+0x465>
   14fc6:	48 89 ce             	mov    %rcx,%rsi
   14fc9:	48 89 c7             	mov    %rax,%rdi
   14fcc:	b8 00 00 00 00       	mov    $0x0,%eax
   14fd1:	e8 6a d3 fe ff       	call   2340 <snprintf@plt>
   14fd6:	eb 5a                	jmp    15032 <gencode_op_deprecated+0x189>
   14fd8:	48 8b 05 81 c0 00 00 	mov    0xc081(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   14fdf:	48 89 c1             	mov    %rax,%rcx
   14fe2:	ba 17 00 00 00       	mov    $0x17,%edx
   14fe7:	be 01 00 00 00       	mov    $0x1,%esi
   14fec:	48 8d 05 4d 75 00 00 	lea    0x754d(%rip),%rax        # 1c540 <__PRETTY_FUNCTION__.0+0x3e0>
   14ff3:	48 89 c7             	mov    %rax,%rdi
   14ff6:	e8 95 d4 fe ff       	call   2490 <fwrite@plt>
   14ffb:	bf 01 00 00 00       	mov    $0x1,%edi
   15000:	e8 7b d4 fe ff       	call   2480 <exit@plt>
   15005:	48 8b 05 54 c0 00 00 	mov    0xc054(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1500c:	48 89 c1             	mov    %rax,%rcx
   1500f:	ba 29 00 00 00       	mov    $0x29,%edx
   15014:	be 01 00 00 00       	mov    $0x1,%esi
   15019:	48 8d 05 98 74 00 00 	lea    0x7498(%rip),%rax        # 1c4b8 <__PRETTY_FUNCTION__.0+0x358>
   15020:	48 89 c7             	mov    %rax,%rdi
   15023:	e8 68 d4 fe ff       	call   2490 <fwrite@plt>
   15028:	bf 01 00 00 00       	mov    $0x1,%edi
   1502d:	e8 4e d4 fe ff       	call   2480 <exit@plt>
   15032:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15036:	c9                   	leave
   15037:	c3                   	ret

0000000000015038 <optimize>:
   15038:	f3 0f 1e fa          	endbr64
   1503c:	55                   	push   %rbp
   1503d:	48 89 e5             	mov    %rsp,%rbp
   15040:	48 83 ec 10          	sub    $0x10,%rsp
   15044:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15048:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1504c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15051:	75 28                	jne    1507b <optimize+0x43>
   15053:	48 8d 05 86 7a 00 00 	lea    0x7a86(%rip),%rax        # 1cae0 <__PRETTY_FUNCTION__.12>
   1505a:	48 89 c1             	mov    %rax,%rcx
   1505d:	ba 32 00 00 00       	mov    $0x32,%edx
   15062:	48 8d 05 77 76 00 00 	lea    0x7677(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15069:	48 89 c6             	mov    %rax,%rsi
   1506c:	48 8d 05 83 76 00 00 	lea    0x7683(%rip),%rax        # 1c6f6 <__PRETTY_FUNCTION__.0+0x36>
   15073:	48 89 c7             	mov    %rax,%rdi
   15076:	e8 d5 d2 fe ff       	call   2350 <__assert_fail@plt>
   1507b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15080:	75 28                	jne    150aa <optimize+0x72>
   15082:	48 8d 05 57 7a 00 00 	lea    0x7a57(%rip),%rax        # 1cae0 <__PRETTY_FUNCTION__.12>
   15089:	48 89 c1             	mov    %rax,%rcx
   1508c:	ba 33 00 00 00       	mov    $0x33,%edx
   15091:	48 8d 05 48 76 00 00 	lea    0x7648(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15098:	48 89 c6             	mov    %rax,%rsi
   1509b:	48 8d 05 63 76 00 00 	lea    0x7663(%rip),%rax        # 1c705 <__PRETTY_FUNCTION__.0+0x45>
   150a2:	48 89 c7             	mov    %rax,%rdi
   150a5:	e8 a6 d2 fe ff       	call   2350 <__assert_fail@plt>
   150aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   150ae:	8b 40 04             	mov    0x4(%rax),%eax
   150b1:	85 c0                	test   %eax,%eax
   150b3:	74 07                	je     150bc <optimize+0x84>
   150b5:	83 f8 01             	cmp    $0x1,%eax
   150b8:	74 17                	je     150d1 <optimize+0x99>
   150ba:	eb 2a                	jmp    150e6 <optimize+0xae>
   150bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c4:	48 89 d6             	mov    %rdx,%rsi
   150c7:	48 89 c7             	mov    %rax,%rdi
   150ca:	e8 3d 00 00 00       	call   1510c <optimize_prog>
   150cf:	eb 39                	jmp    1510a <optimize+0xd2>
   150d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150d9:	48 89 d6             	mov    %rdx,%rsi
   150dc:	48 89 c7             	mov    %rax,%rdi
   150df:	e8 73 02 00 00       	call   15357 <optimize_subprog>
   150e4:	eb 24                	jmp    1510a <optimize+0xd2>
   150e6:	48 8b 05 73 bf 00 00 	mov    0xbf73(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   150ed:	48 89 c1             	mov    %rax,%rcx
   150f0:	ba 3e 00 00 00       	mov    $0x3e,%edx
   150f5:	be 01 00 00 00       	mov    $0x1,%esi
   150fa:	48 8d 05 17 76 00 00 	lea    0x7617(%rip),%rax        # 1c718 <__PRETTY_FUNCTION__.0+0x58>
   15101:	48 89 c7             	mov    %rax,%rdi
   15104:	e8 87 d3 fe ff       	call   2490 <fwrite@plt>
   15109:	90                   	nop
   1510a:	c9                   	leave
   1510b:	c3                   	ret

000000000001510c <optimize_prog>:
   1510c:	f3 0f 1e fa          	endbr64
   15110:	55                   	push   %rbp
   15111:	48 89 e5             	mov    %rsp,%rbp
   15114:	48 83 ec 40          	sub    $0x40,%rsp
   15118:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1511c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15120:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15127:	00 00
   15129:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1512d:	31 c0                	xor    %eax,%eax
   1512f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   15134:	75 28                	jne    1515e <optimize_prog+0x52>
   15136:	48 8d 05 b3 79 00 00 	lea    0x79b3(%rip),%rax        # 1caf0 <__PRETTY_FUNCTION__.11>
   1513d:	48 89 c1             	mov    %rax,%rcx
   15140:	ba 48 00 00 00       	mov    $0x48,%edx
   15145:	48 8d 05 94 75 00 00 	lea    0x7594(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   1514c:	48 89 c6             	mov    %rax,%rsi
   1514f:	48 8d 05 a0 75 00 00 	lea    0x75a0(%rip),%rax        # 1c6f6 <__PRETTY_FUNCTION__.0+0x36>
   15156:	48 89 c7             	mov    %rax,%rdi
   15159:	e8 f2 d1 fe ff       	call   2350 <__assert_fail@plt>
   1515e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15163:	75 28                	jne    1518d <optimize_prog+0x81>
   15165:	48 8d 05 84 79 00 00 	lea    0x7984(%rip),%rax        # 1caf0 <__PRETTY_FUNCTION__.11>
   1516c:	48 89 c1             	mov    %rax,%rcx
   1516f:	ba 49 00 00 00       	mov    $0x49,%edx
   15174:	48 8d 05 65 75 00 00 	lea    0x7565(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   1517b:	48 89 c6             	mov    %rax,%rsi
   1517e:	48 8d 05 d2 75 00 00 	lea    0x75d2(%rip),%rax        # 1c757 <__PRETTY_FUNCTION__.0+0x97>
   15185:	48 89 c7             	mov    %rax,%rdi
   15188:	e8 c3 d1 fe ff       	call   2350 <__assert_fail@plt>
   1518d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15191:	8b 40 04             	mov    0x4(%rax),%eax
   15194:	85 c0                	test   %eax,%eax
   15196:	74 28                	je     151c0 <optimize_prog+0xb4>
   15198:	48 8d 05 51 79 00 00 	lea    0x7951(%rip),%rax        # 1caf0 <__PRETTY_FUNCTION__.11>
   1519f:	48 89 c1             	mov    %rax,%rcx
   151a2:	ba 4a 00 00 00       	mov    $0x4a,%edx
   151a7:	48 8d 05 32 75 00 00 	lea    0x7532(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   151ae:	48 89 c6             	mov    %rax,%rsi
   151b1:	48 8d 05 b0 75 00 00 	lea    0x75b0(%rip),%rax        # 1c768 <__PRETTY_FUNCTION__.0+0xa8>
   151b8:	48 89 c7             	mov    %rax,%rdi
   151bb:	e8 90 d1 fe ff       	call   2350 <__assert_fail@plt>
   151c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   151c4:	48 83 c0 08          	add    $0x8,%rax
   151c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   151cc:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   151d3:	00
   151d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   151d8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   151dc:	b8 00 00 00 00       	mov    $0x0,%eax
   151e1:	e8 e4 d7 fe ff       	call   29ca <optimize_flag>
   151e6:	83 f8 01             	cmp    $0x1,%eax
   151e9:	0f 8e 33 01 00 00    	jle    15322 <optimize_prog+0x216>
   151ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151f3:	48 8b 50 28          	mov    0x28(%rax),%rdx
   151f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   151fb:	48 89 d6             	mov    %rdx,%rsi
   151fe:	48 89 c7             	mov    %rax,%rdi
   15201:	e8 9d 03 00 00       	call   155a3 <decrement_self_references>
   15206:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1520a:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1520e:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15212:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15216:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1521a:	48 89 c7             	mov    %rax,%rdi
   1521d:	e8 ee 11 00 00       	call   16410 <set_vars_lists>
   15222:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15226:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1522a:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15231:	8b 45 d0             	mov    -0x30(%rbp),%eax
   15234:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15237:	e9 c3 00 00 00       	jmp    152ff <optimize_prog+0x1f3>
   1523c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15240:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15244:	48 8b 05 15 be 00 00 	mov    0xbe15(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1524b:	48 8d 0d 36 75 00 00 	lea    0x7536(%rip),%rcx        # 1c788 <__PRETTY_FUNCTION__.0+0xc8>
   15252:	48 89 ce             	mov    %rcx,%rsi
   15255:	48 89 c7             	mov    %rax,%rdi
   15258:	b8 00 00 00 00       	mov    $0x0,%eax
   1525d:	e8 6e d1 fe ff       	call   23d0 <fprintf@plt>
   15262:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15266:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1526a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1526e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15272:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15276:	48 89 ce             	mov    %rcx,%rsi
   15279:	48 89 c7             	mov    %rax,%rdi
   1527c:	e8 a5 05 00 00       	call   15826 <remove_mutation_statement>
   15281:	01 45 d0             	add    %eax,-0x30(%rbp)
   15284:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15288:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1528c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15290:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15294:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15298:	48 89 ce             	mov    %rcx,%rsi
   1529b:	48 89 c7             	mov    %rax,%rdi
   1529e:	e8 67 04 00 00       	call   1570a <remove_var_decls>
   152a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152a7:	48 8b 40 10          	mov    0x10(%rax),%rax
   152ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   152af:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   152b4:	75 49                	jne    152ff <optimize_prog+0x1f3>
   152b6:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   152ba:	7e 43                	jle    152ff <optimize_prog+0x1f3>
   152bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152c0:	48 89 c7             	mov    %rax,%rdi
   152c3:	e8 1a 2a ff ff       	call   7ce2 <DestroyList>
   152c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   152cc:	48 89 c7             	mov    %rax,%rdi
   152cf:	e8 0e 2a ff ff       	call   7ce2 <DestroyList>
   152d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   152d8:	48 8b 70 10          	mov    0x10(%rax),%rsi
   152dc:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   152e0:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   152e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   152e8:	48 89 c7             	mov    %rax,%rdi
   152eb:	e8 20 11 00 00       	call   16410 <set_vars_lists>
   152f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   152f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   152f8:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   152ff:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15304:	0f 85 32 ff ff ff    	jne    1523c <optimize_prog+0x130>
   1530a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1530e:	48 89 c7             	mov    %rax,%rdi
   15311:	e8 cc 29 ff ff       	call   7ce2 <DestroyList>
   15316:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1531a:	48 89 c7             	mov    %rax,%rdi
   1531d:	e8 c0 29 ff ff       	call   7ce2 <DestroyList>
   15322:	b8 00 00 00 00       	mov    $0x0,%eax
   15327:	e8 9e d6 fe ff       	call   29ca <optimize_flag>
   1532c:	85 c0                	test   %eax,%eax
   1532e:	7e 10                	jle    15340 <optimize_prog+0x234>
   15330:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15334:	48 8b 40 28          	mov    0x28(%rax),%rax
   15338:	48 89 c7             	mov    %rax,%rdi
   1533b:	e8 c0 08 00 00       	call   15c00 <simplify_stmt_expr>
   15340:	90                   	nop
   15341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15345:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   1534c:	00 00
   1534e:	74 05                	je     15355 <optimize_prog+0x249>
   15350:	e8 db cf fe ff       	call   2330 <__stack_chk_fail@plt>
   15355:	c9                   	leave
   15356:	c3                   	ret

0000000000015357 <optimize_subprog>:
   15357:	f3 0f 1e fa          	endbr64
   1535b:	55                   	push   %rbp
   1535c:	48 89 e5             	mov    %rsp,%rbp
   1535f:	48 83 ec 40          	sub    $0x40,%rsp
   15363:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15367:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1536b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15372:	00 00
   15374:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15378:	31 c0                	xor    %eax,%eax
   1537a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1537f:	75 28                	jne    153a9 <optimize_subprog+0x52>
   15381:	48 8d 05 78 77 00 00 	lea    0x7778(%rip),%rax        # 1cb00 <__PRETTY_FUNCTION__.10>
   15388:	48 89 c1             	mov    %rax,%rcx
   1538b:	ba 7e 00 00 00       	mov    $0x7e,%edx
   15390:	48 8d 05 49 73 00 00 	lea    0x7349(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15397:	48 89 c6             	mov    %rax,%rsi
   1539a:	48 8d 05 55 73 00 00 	lea    0x7355(%rip),%rax        # 1c6f6 <__PRETTY_FUNCTION__.0+0x36>
   153a1:	48 89 c7             	mov    %rax,%rdi
   153a4:	e8 a7 cf fe ff       	call   2350 <__assert_fail@plt>
   153a9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   153ae:	75 28                	jne    153d8 <optimize_subprog+0x81>
   153b0:	48 8d 05 49 77 00 00 	lea    0x7749(%rip),%rax        # 1cb00 <__PRETTY_FUNCTION__.10>
   153b7:	48 89 c1             	mov    %rax,%rcx
   153ba:	ba 7f 00 00 00       	mov    $0x7f,%edx
   153bf:	48 8d 05 1a 73 00 00 	lea    0x731a(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   153c6:	48 89 c6             	mov    %rax,%rsi
   153c9:	48 8d 05 e6 73 00 00 	lea    0x73e6(%rip),%rax        # 1c7b6 <__PRETTY_FUNCTION__.0+0xf6>
   153d0:	48 89 c7             	mov    %rax,%rdi
   153d3:	e8 78 cf fe ff       	call   2350 <__assert_fail@plt>
   153d8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   153dc:	8b 40 04             	mov    0x4(%rax),%eax
   153df:	83 f8 01             	cmp    $0x1,%eax
   153e2:	74 28                	je     1540c <optimize_subprog+0xb5>
   153e4:	48 8d 05 15 77 00 00 	lea    0x7715(%rip),%rax        # 1cb00 <__PRETTY_FUNCTION__.10>
   153eb:	48 89 c1             	mov    %rax,%rcx
   153ee:	ba 80 00 00 00       	mov    $0x80,%edx
   153f3:	48 8d 05 e6 72 00 00 	lea    0x72e6(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   153fa:	48 89 c6             	mov    %rax,%rsi
   153fd:	48 8d 05 be 73 00 00 	lea    0x73be(%rip),%rax        # 1c7c2 <__PRETTY_FUNCTION__.0+0x102>
   15404:	48 89 c7             	mov    %rax,%rdi
   15407:	e8 44 cf fe ff       	call   2350 <__assert_fail@plt>
   1540c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15410:	48 83 c0 08          	add    $0x8,%rax
   15414:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15418:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1541f:	00
   15420:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15424:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15428:	b8 00 00 00 00       	mov    $0x0,%eax
   1542d:	e8 98 d5 fe ff       	call   29ca <optimize_flag>
   15432:	83 f8 01             	cmp    $0x1,%eax
   15435:	0f 8e 33 01 00 00    	jle    1556e <optimize_subprog+0x217>
   1543b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1543f:	48 8b 50 40          	mov    0x40(%rax),%rdx
   15443:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15447:	48 89 d6             	mov    %rdx,%rsi
   1544a:	48 89 c7             	mov    %rax,%rdi
   1544d:	e8 51 01 00 00       	call   155a3 <decrement_self_references>
   15452:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15456:	48 8b 70 30          	mov    0x30(%rax),%rsi
   1545a:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   1545e:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15462:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15466:	48 89 c7             	mov    %rax,%rdi
   15469:	e8 a2 0f 00 00       	call   16410 <set_vars_lists>
   1546e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15472:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15476:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   1547d:	8b 45 d0             	mov    -0x30(%rbp),%eax
   15480:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15483:	e9 c3 00 00 00       	jmp    1554b <optimize_subprog+0x1f4>
   15488:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1548c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15490:	48 8b 05 c9 bb 00 00 	mov    0xbbc9(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   15497:	48 8d 0d ea 72 00 00 	lea    0x72ea(%rip),%rcx        # 1c788 <__PRETTY_FUNCTION__.0+0xc8>
   1549e:	48 89 ce             	mov    %rcx,%rsi
   154a1:	48 89 c7             	mov    %rax,%rdi
   154a4:	b8 00 00 00 00       	mov    $0x0,%eax
   154a9:	e8 22 cf fe ff       	call   23d0 <fprintf@plt>
   154ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154b2:	48 8b 50 40          	mov    0x40(%rax),%rdx
   154b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154ba:	48 8b 48 08          	mov    0x8(%rax),%rcx
   154be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154c2:	48 89 ce             	mov    %rcx,%rsi
   154c5:	48 89 c7             	mov    %rax,%rdi
   154c8:	e8 59 03 00 00       	call   15826 <remove_mutation_statement>
   154cd:	01 45 d0             	add    %eax,-0x30(%rbp)
   154d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154d4:	48 8b 50 30          	mov    0x30(%rax),%rdx
   154d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154dc:	48 8b 48 08          	mov    0x8(%rax),%rcx
   154e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154e4:	48 89 ce             	mov    %rcx,%rsi
   154e7:	48 89 c7             	mov    %rax,%rdi
   154ea:	e8 1b 02 00 00       	call   1570a <remove_var_decls>
   154ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154f3:	48 8b 40 10          	mov    0x10(%rax),%rax
   154f7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   154fb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15500:	75 49                	jne    1554b <optimize_subprog+0x1f4>
   15502:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   15506:	7e 43                	jle    1554b <optimize_subprog+0x1f4>
   15508:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1550c:	48 89 c7             	mov    %rax,%rdi
   1550f:	e8 ce 27 ff ff       	call   7ce2 <DestroyList>
   15514:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15518:	48 89 c7             	mov    %rax,%rdi
   1551b:	e8 c2 27 ff ff       	call   7ce2 <DestroyList>
   15520:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15524:	48 8b 70 30          	mov    0x30(%rax),%rsi
   15528:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   1552c:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15530:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15534:	48 89 c7             	mov    %rax,%rdi
   15537:	e8 d4 0e 00 00       	call   16410 <set_vars_lists>
   1553c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15540:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15544:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   1554b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15550:	0f 85 32 ff ff ff    	jne    15488 <optimize_subprog+0x131>
   15556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1555a:	48 89 c7             	mov    %rax,%rdi
   1555d:	e8 80 27 ff ff       	call   7ce2 <DestroyList>
   15562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15566:	48 89 c7             	mov    %rax,%rdi
   15569:	e8 74 27 ff ff       	call   7ce2 <DestroyList>
   1556e:	b8 00 00 00 00       	mov    $0x0,%eax
   15573:	e8 52 d4 fe ff       	call   29ca <optimize_flag>
   15578:	85 c0                	test   %eax,%eax
   1557a:	7e 10                	jle    1558c <optimize_subprog+0x235>
   1557c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15580:	48 8b 40 40          	mov    0x40(%rax),%rax
   15584:	48 89 c7             	mov    %rax,%rdi
   15587:	e8 74 06 00 00       	call   15c00 <simplify_stmt_expr>
   1558c:	90                   	nop
   1558d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15591:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   15598:	00 00
   1559a:	74 05                	je     155a1 <optimize_subprog+0x24a>
   1559c:	e8 8f cd fe ff       	call   2330 <__stack_chk_fail@plt>
   155a1:	c9                   	leave
   155a2:	c3                   	ret

00000000000155a3 <decrement_self_references>:
   155a3:	f3 0f 1e fa          	endbr64
   155a7:	55                   	push   %rbp
   155a8:	48 89 e5             	mov    %rsp,%rbp
   155ab:	48 83 ec 30          	sub    $0x30,%rsp
   155af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   155b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   155b7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   155bc:	75 28                	jne    155e6 <decrement_self_references+0x43>
   155be:	48 8d 05 5b 75 00 00 	lea    0x755b(%rip),%rax        # 1cb20 <__PRETTY_FUNCTION__.9>
   155c5:	48 89 c1             	mov    %rax,%rcx
   155c8:	ba b5 00 00 00       	mov    $0xb5,%edx
   155cd:	48 8d 05 0c 71 00 00 	lea    0x710c(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   155d4:	48 89 c6             	mov    %rax,%rsi
   155d7:	48 8d 05 18 71 00 00 	lea    0x7118(%rip),%rax        # 1c6f6 <__PRETTY_FUNCTION__.0+0x36>
   155de:	48 89 c7             	mov    %rax,%rdi
   155e1:	e8 6a cd fe ff       	call   2350 <__assert_fail@plt>
   155e6:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   155eb:	75 28                	jne    15615 <decrement_self_references+0x72>
   155ed:	48 8d 05 2c 75 00 00 	lea    0x752c(%rip),%rax        # 1cb20 <__PRETTY_FUNCTION__.9>
   155f4:	48 89 c1             	mov    %rax,%rcx
   155f7:	ba b6 00 00 00       	mov    $0xb6,%edx
   155fc:	48 8d 05 dd 70 00 00 	lea    0x70dd(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15603:	48 89 c6             	mov    %rax,%rsi
   15606:	48 8d 05 d2 71 00 00 	lea    0x71d2(%rip),%rax        # 1c7df <__PRETTY_FUNCTION__.0+0x11f>
   1560d:	48 89 c7             	mov    %rax,%rdi
   15610:	e8 3b cd fe ff       	call   2350 <__assert_fail@plt>
   15615:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15619:	8b 40 04             	mov    0x4(%rax),%eax
   1561c:	85 c0                	test   %eax,%eax
   1561e:	74 0e                	je     1562e <decrement_self_references+0x8b>
   15620:	83 f8 02             	cmp    $0x2,%eax
   15623:	0f 84 a5 00 00 00    	je     156ce <decrement_self_references+0x12b>
   15629:	e9 d9 00 00 00       	jmp    15707 <decrement_self_references+0x164>
   1562e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15632:	48 8b 40 08          	mov    0x8(%rax),%rax
   15636:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1563a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1563f:	75 28                	jne    15669 <decrement_self_references+0xc6>
   15641:	48 8d 05 d8 74 00 00 	lea    0x74d8(%rip),%rax        # 1cb20 <__PRETTY_FUNCTION__.9>
   15648:	48 89 c1             	mov    %rax,%rcx
   1564b:	ba c1 00 00 00       	mov    $0xc1,%edx
   15650:	48 8d 05 89 70 00 00 	lea    0x7089(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15657:	48 89 c6             	mov    %rax,%rsi
   1565a:	48 8d 05 8b 71 00 00 	lea    0x718b(%rip),%rax        # 1c7ec <__PRETTY_FUNCTION__.0+0x12c>
   15661:	48 89 c7             	mov    %rax,%rdi
   15664:	e8 e7 cc fe ff       	call   2350 <__assert_fail@plt>
   15669:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1566d:	8b 40 04             	mov    0x4(%rax),%eax
   15670:	83 f8 04             	cmp    $0x4,%eax
   15673:	74 28                	je     1569d <decrement_self_references+0xfa>
   15675:	48 8d 05 a4 74 00 00 	lea    0x74a4(%rip),%rax        # 1cb20 <__PRETTY_FUNCTION__.9>
   1567c:	48 89 c1             	mov    %rax,%rcx
   1567f:	ba c2 00 00 00       	mov    $0xc2,%edx
   15684:	48 8d 05 55 70 00 00 	lea    0x7055(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   1568b:	48 89 c6             	mov    %rax,%rsi
   1568e:	48 8d 05 64 71 00 00 	lea    0x7164(%rip),%rax        # 1c7f9 <__PRETTY_FUNCTION__.0+0x139>
   15695:	48 89 c7             	mov    %rax,%rdi
   15698:	e8 b3 cc fe ff       	call   2350 <__assert_fail@plt>
   1569d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   156a1:	48 8b 40 08          	mov    0x8(%rax),%rax
   156a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   156a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   156ad:	48 8b 40 10          	mov    0x10(%rax),%rax
   156b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   156b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   156b9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   156bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   156c1:	48 89 ce             	mov    %rcx,%rsi
   156c4:	48 89 c7             	mov    %rax,%rdi
   156c7:	e8 01 09 00 00       	call   15fcd <decrement_reference_id_expr>
   156cc:	eb 39                	jmp    15707 <decrement_self_references+0x164>
   156ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   156d2:	48 8b 40 08          	mov    0x8(%rax),%rax
   156d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   156da:	eb 23                	jmp    156ff <decrement_self_references+0x15c>
   156dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156e0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   156e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   156e8:	48 89 d6             	mov    %rdx,%rsi
   156eb:	48 89 c7             	mov    %rax,%rdi
   156ee:	e8 b0 fe ff ff       	call   155a3 <decrement_self_references>
   156f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156f7:	48 8b 40 10          	mov    0x10(%rax),%rax
   156fb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   156ff:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15704:	75 d6                	jne    156dc <decrement_self_references+0x139>
   15706:	90                   	nop
   15707:	90                   	nop
   15708:	c9                   	leave
   15709:	c3                   	ret

000000000001570a <remove_var_decls>:
   1570a:	f3 0f 1e fa          	endbr64
   1570e:	55                   	push   %rbp
   1570f:	48 89 e5             	mov    %rsp,%rbp
   15712:	48 83 ec 40          	sub    $0x40,%rsp
   15716:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1571a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1571e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15722:	e9 f2 00 00 00       	jmp    15819 <remove_var_decls+0x10f>
   15727:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1572b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1572f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15733:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15737:	8b 40 04             	mov    0x4(%rax),%eax
   1573a:	83 f8 02             	cmp    $0x2,%eax
   1573d:	74 28                	je     15767 <remove_var_decls+0x5d>
   1573f:	48 8d 05 fa 73 00 00 	lea    0x73fa(%rip),%rax        # 1cb40 <__PRETTY_FUNCTION__.8>
   15746:	48 89 c1             	mov    %rax,%rcx
   15749:	ba e2 00 00 00       	mov    $0xe2,%edx
   1574e:	48 8d 05 8b 6f 00 00 	lea    0x6f8b(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15755:	48 89 c6             	mov    %rax,%rsi
   15758:	48 8d 05 b9 70 00 00 	lea    0x70b9(%rip),%rax        # 1c818 <__PRETTY_FUNCTION__.0+0x158>
   1575f:	48 89 c7             	mov    %rax,%rdi
   15762:	e8 e9 cb fe ff       	call   2350 <__assert_fail@plt>
   15767:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1576b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1576f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15773:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1577a:	00
   1577b:	e9 82 00 00 00       	jmp    15802 <remove_var_decls+0xf8>
   15780:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15784:	48 8b 40 08          	mov    0x8(%rax),%rax
   15788:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1578c:	48 89 d6             	mov    %rdx,%rsi
   1578f:	48 89 c7             	mov    %rax,%rdi
   15792:	e8 29 cc fe ff       	call   23c0 <strcmp@plt>
   15797:	85 c0                	test   %eax,%eax
   15799:	75 53                	jne    157ee <remove_var_decls+0xe4>
   1579b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1579f:	48 8b 40 08          	mov    0x8(%rax),%rax
   157a3:	48 89 c7             	mov    %rax,%rdi
   157a6:	e8 e5 ca fe ff       	call   2290 <free@plt>
   157ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157af:	48 8b 40 10          	mov    0x10(%rax),%rax
   157b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   157b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157bb:	48 89 c7             	mov    %rax,%rdi
   157be:	e8 cd ca fe ff       	call   2290 <free@plt>
   157c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   157cb:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   157d0:	75 0e                	jne    157e0 <remove_var_decls+0xd6>
   157d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157da:	48 89 50 08          	mov    %rdx,0x8(%rax)
   157de:	eb 44                	jmp    15824 <remove_var_decls+0x11a>
   157e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   157e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157e8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   157ec:	eb 36                	jmp    15824 <remove_var_decls+0x11a>
   157ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   157f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157fa:	48 8b 40 10          	mov    0x10(%rax),%rax
   157fe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15802:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15807:	0f 85 73 ff ff ff    	jne    15780 <remove_var_decls+0x76>
   1580d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15811:	48 8b 40 10          	mov    0x10(%rax),%rax
   15815:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   15819:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1581e:	0f 85 03 ff ff ff    	jne    15727 <remove_var_decls+0x1d>
   15824:	c9                   	leave
   15825:	c3                   	ret

0000000000015826 <remove_mutation_statement>:
   15826:	f3 0f 1e fa          	endbr64
   1582a:	55                   	push   %rbp
   1582b:	48 89 e5             	mov    %rsp,%rbp
   1582e:	48 83 ec 20          	sub    $0x20,%rsp
   15832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1583a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1583e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15843:	75 28                	jne    1586d <remove_mutation_statement+0x47>
   15845:	48 8d 05 14 73 00 00 	lea    0x7314(%rip),%rax        # 1cb60 <__PRETTY_FUNCTION__.7>
   1584c:	48 89 c1             	mov    %rax,%rcx
   1584f:	ba 06 01 00 00       	mov    $0x106,%edx
   15854:	48 8d 05 85 6e 00 00 	lea    0x6e85(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   1585b:	48 89 c6             	mov    %rax,%rsi
   1585e:	48 8d 05 91 6e 00 00 	lea    0x6e91(%rip),%rax        # 1c6f6 <__PRETTY_FUNCTION__.0+0x36>
   15865:	48 89 c7             	mov    %rax,%rdi
   15868:	e8 e3 ca fe ff       	call   2350 <__assert_fail@plt>
   1586d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15872:	75 28                	jne    1589c <remove_mutation_statement+0x76>
   15874:	48 8d 05 e5 72 00 00 	lea    0x72e5(%rip),%rax        # 1cb60 <__PRETTY_FUNCTION__.7>
   1587b:	48 89 c1             	mov    %rax,%rcx
   1587e:	ba 07 01 00 00       	mov    $0x107,%edx
   15883:	48 8d 05 56 6e 00 00 	lea    0x6e56(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   1588a:	48 89 c6             	mov    %rax,%rsi
   1588d:	48 8d 05 4b 6f 00 00 	lea    0x6f4b(%rip),%rax        # 1c7df <__PRETTY_FUNCTION__.0+0x11f>
   15894:	48 89 c7             	mov    %rax,%rdi
   15897:	e8 b4 ca fe ff       	call   2350 <__assert_fail@plt>
   1589c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   158a1:	75 28                	jne    158cb <remove_mutation_statement+0xa5>
   158a3:	48 8d 05 b6 72 00 00 	lea    0x72b6(%rip),%rax        # 1cb60 <__PRETTY_FUNCTION__.7>
   158aa:	48 89 c1             	mov    %rax,%rcx
   158ad:	ba 08 01 00 00       	mov    $0x108,%edx
   158b2:	48 8d 05 27 6e 00 00 	lea    0x6e27(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   158b9:	48 89 c6             	mov    %rax,%rsi
   158bc:	48 8d 05 75 6f 00 00 	lea    0x6f75(%rip),%rax        # 1c838 <__PRETTY_FUNCTION__.0+0x178>
   158c3:	48 89 c7             	mov    %rax,%rdi
   158c6:	e8 85 ca fe ff       	call   2350 <__assert_fail@plt>
   158cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158cf:	8b 40 04             	mov    0x4(%rax),%eax
   158d2:	83 f8 02             	cmp    $0x2,%eax
   158d5:	74 29                	je     15900 <remove_mutation_statement+0xda>
   158d7:	83 f8 02             	cmp    $0x2,%eax
   158da:	77 44                	ja     15920 <remove_mutation_statement+0xfa>
   158dc:	85 c0                	test   %eax,%eax
   158de:	74 07                	je     158e7 <remove_mutation_statement+0xc1>
   158e0:	83 f8 01             	cmp    $0x1,%eax
   158e3:	74 34                	je     15919 <remove_mutation_statement+0xf3>
   158e5:	eb 39                	jmp    15920 <remove_mutation_statement+0xfa>
   158e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   158eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   158ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158f3:	48 89 ce             	mov    %rcx,%rsi
   158f6:	48 89 c7             	mov    %rax,%rdi
   158f9:	e8 4d 00 00 00       	call   1594b <remove_mutation_var_assign>
   158fe:	eb 49                	jmp    15949 <remove_mutation_statement+0x123>
   15900:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15904:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1590c:	48 89 ce             	mov    %rcx,%rsi
   1590f:	48 89 c7             	mov    %rax,%rdi
   15912:	e8 8d 01 00 00       	call   15aa4 <remove_mutation_compound_statement>
   15917:	eb 30                	jmp    15949 <remove_mutation_statement+0x123>
   15919:	b8 00 00 00 00       	mov    $0x0,%eax
   1591e:	eb 29                	jmp    15949 <remove_mutation_statement+0x123>
   15920:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15924:	8b 10                	mov    (%rax),%edx
   15926:	48 8b 05 33 b7 00 00 	mov    0xb733(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1592d:	48 8d 0d 14 6f 00 00 	lea    0x6f14(%rip),%rcx        # 1c848 <__PRETTY_FUNCTION__.0+0x188>
   15934:	48 89 ce             	mov    %rcx,%rsi
   15937:	48 89 c7             	mov    %rax,%rdi
   1593a:	b8 00 00 00 00       	mov    $0x0,%eax
   1593f:	e8 8c ca fe ff       	call   23d0 <fprintf@plt>
   15944:	b8 00 00 00 00       	mov    $0x0,%eax
   15949:	c9                   	leave
   1594a:	c3                   	ret

000000000001594b <remove_mutation_var_assign>:
   1594b:	f3 0f 1e fa          	endbr64
   1594f:	55                   	push   %rbp
   15950:	48 89 e5             	mov    %rsp,%rbp
   15953:	48 83 ec 30          	sub    $0x30,%rsp
   15957:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1595b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1595f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15963:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   15968:	75 28                	jne    15992 <remove_mutation_var_assign+0x47>
   1596a:	48 8d 05 0f 72 00 00 	lea    0x720f(%rip),%rax        # 1cb80 <__PRETTY_FUNCTION__.6>
   15971:	48 89 c1             	mov    %rax,%rcx
   15974:	ba 21 01 00 00       	mov    $0x121,%edx
   15979:	48 8d 05 60 6d 00 00 	lea    0x6d60(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15980:	48 89 c6             	mov    %rax,%rsi
   15983:	48 8d 05 eb 6e 00 00 	lea    0x6eeb(%rip),%rax        # 1c875 <__PRETTY_FUNCTION__.0+0x1b5>
   1598a:	48 89 c7             	mov    %rax,%rdi
   1598d:	e8 be c9 fe ff       	call   2350 <__assert_fail@plt>
   15992:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15996:	8b 40 04             	mov    0x4(%rax),%eax
   15999:	85 c0                	test   %eax,%eax
   1599b:	74 28                	je     159c5 <remove_mutation_var_assign+0x7a>
   1599d:	48 8d 05 dc 71 00 00 	lea    0x71dc(%rip),%rax        # 1cb80 <__PRETTY_FUNCTION__.6>
   159a4:	48 89 c1             	mov    %rax,%rcx
   159a7:	ba 22 01 00 00       	mov    $0x122,%edx
   159ac:	48 8d 05 2d 6d 00 00 	lea    0x6d2d(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   159b3:	48 89 c6             	mov    %rax,%rsi
   159b6:	48 8d 05 cb 6e 00 00 	lea    0x6ecb(%rip),%rax        # 1c888 <__PRETTY_FUNCTION__.0+0x1c8>
   159bd:	48 89 c7             	mov    %rax,%rdi
   159c0:	e8 8b c9 fe ff       	call   2350 <__assert_fail@plt>
   159c5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   159ca:	75 28                	jne    159f4 <remove_mutation_var_assign+0xa9>
   159cc:	48 8d 05 ad 71 00 00 	lea    0x71ad(%rip),%rax        # 1cb80 <__PRETTY_FUNCTION__.6>
   159d3:	48 89 c1             	mov    %rax,%rcx
   159d6:	ba 23 01 00 00       	mov    $0x123,%edx
   159db:	48 8d 05 fe 6c 00 00 	lea    0x6cfe(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   159e2:	48 89 c6             	mov    %rax,%rsi
   159e5:	48 8d 05 4c 6e 00 00 	lea    0x6e4c(%rip),%rax        # 1c838 <__PRETTY_FUNCTION__.0+0x178>
   159ec:	48 89 c7             	mov    %rax,%rdi
   159ef:	e8 5c c9 fe ff       	call   2350 <__assert_fail@plt>
   159f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   159f8:	48 8b 40 08          	mov    0x8(%rax),%rax
   159fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a04:	8b 40 04             	mov    0x4(%rax),%eax
   15a07:	83 f8 04             	cmp    $0x4,%eax
   15a0a:	74 28                	je     15a34 <remove_mutation_var_assign+0xe9>
   15a0c:	48 8d 05 6d 71 00 00 	lea    0x716d(%rip),%rax        # 1cb80 <__PRETTY_FUNCTION__.6>
   15a13:	48 89 c1             	mov    %rax,%rcx
   15a16:	ba 28 01 00 00       	mov    $0x128,%edx
   15a1b:	48 8d 05 be 6c 00 00 	lea    0x6cbe(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15a22:	48 89 c6             	mov    %rax,%rsi
   15a25:	48 8d 05 80 6e 00 00 	lea    0x6e80(%rip),%rax        # 1c8ac <__PRETTY_FUNCTION__.0+0x1ec>
   15a2c:	48 89 c7             	mov    %rax,%rdi
   15a2f:	e8 1c c9 fe ff       	call   2350 <__assert_fail@plt>
   15a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a38:	48 8b 40 08          	mov    0x8(%rax),%rax
   15a3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15a40:	48 89 d6             	mov    %rdx,%rsi
   15a43:	48 89 c7             	mov    %rax,%rdi
   15a46:	e8 75 c9 fe ff       	call   23c0 <strcmp@plt>
   15a4b:	85 c0                	test   %eax,%eax
   15a4d:	75 4e                	jne    15a9d <remove_mutation_var_assign+0x152>
   15a4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a53:	8b 10                	mov    (%rax),%edx
   15a55:	48 8b 05 04 b6 00 00 	mov    0xb604(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   15a5c:	48 8d 0d 65 6e 00 00 	lea    0x6e65(%rip),%rcx        # 1c8c8 <__PRETTY_FUNCTION__.0+0x208>
   15a63:	48 89 ce             	mov    %rcx,%rsi
   15a66:	48 89 c7             	mov    %rax,%rdi
   15a69:	b8 00 00 00 00       	mov    $0x0,%eax
   15a6e:	e8 5d c9 fe ff       	call   23d0 <fprintf@plt>
   15a73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a77:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15a7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a7f:	48 89 d6             	mov    %rdx,%rsi
   15a82:	48 89 c7             	mov    %rax,%rdi
   15a85:	e8 84 07 00 00       	call   1620e <decrement_reference_expr>
   15a8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a8e:	48 89 c7             	mov    %rax,%rdi
   15a91:	e8 39 37 ff ff       	call   91cf <destroy_stmt>
   15a96:	b8 01 00 00 00       	mov    $0x1,%eax
   15a9b:	eb 05                	jmp    15aa2 <remove_mutation_var_assign+0x157>
   15a9d:	b8 00 00 00 00       	mov    $0x0,%eax
   15aa2:	c9                   	leave
   15aa3:	c3                   	ret

0000000000015aa4 <remove_mutation_compound_statement>:
   15aa4:	f3 0f 1e fa          	endbr64
   15aa8:	55                   	push   %rbp
   15aa9:	48 89 e5             	mov    %rsp,%rbp
   15aac:	48 83 ec 50          	sub    $0x50,%rsp
   15ab0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15ab4:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15ab8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   15abc:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   15ac1:	75 28                	jne    15aeb <remove_mutation_compound_statement+0x47>
   15ac3:	48 8d 05 d6 70 00 00 	lea    0x70d6(%rip),%rax        # 1cba0 <__PRETTY_FUNCTION__.5>
   15aca:	48 89 c1             	mov    %rax,%rcx
   15acd:	ba 3b 01 00 00       	mov    $0x13b,%edx
   15ad2:	48 8d 05 07 6c 00 00 	lea    0x6c07(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15ad9:	48 89 c6             	mov    %rax,%rsi
   15adc:	48 8d 05 10 6e 00 00 	lea    0x6e10(%rip),%rax        # 1c8f3 <__PRETTY_FUNCTION__.0+0x233>
   15ae3:	48 89 c7             	mov    %rax,%rdi
   15ae6:	e8 65 c8 fe ff       	call   2350 <__assert_fail@plt>
   15aeb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15aef:	8b 40 04             	mov    0x4(%rax),%eax
   15af2:	83 f8 02             	cmp    $0x2,%eax
   15af5:	74 28                	je     15b1f <remove_mutation_compound_statement+0x7b>
   15af7:	48 8d 05 a2 70 00 00 	lea    0x70a2(%rip),%rax        # 1cba0 <__PRETTY_FUNCTION__.5>
   15afe:	48 89 c1             	mov    %rax,%rcx
   15b01:	ba 3c 01 00 00       	mov    $0x13c,%edx
   15b06:	48 8d 05 d3 6b 00 00 	lea    0x6bd3(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15b0d:	48 89 c6             	mov    %rax,%rsi
   15b10:	48 8d 05 f9 6d 00 00 	lea    0x6df9(%rip),%rax        # 1c910 <__PRETTY_FUNCTION__.0+0x250>
   15b17:	48 89 c7             	mov    %rax,%rdi
   15b1a:	e8 31 c8 fe ff       	call   2350 <__assert_fail@plt>
   15b1f:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15b24:	75 28                	jne    15b4e <remove_mutation_compound_statement+0xaa>
   15b26:	48 8d 05 73 70 00 00 	lea    0x7073(%rip),%rax        # 1cba0 <__PRETTY_FUNCTION__.5>
   15b2d:	48 89 c1             	mov    %rax,%rcx
   15b30:	ba 3d 01 00 00       	mov    $0x13d,%edx
   15b35:	48 8d 05 a4 6b 00 00 	lea    0x6ba4(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15b3c:	48 89 c6             	mov    %rax,%rsi
   15b3f:	48 8d 05 f2 6c 00 00 	lea    0x6cf2(%rip),%rax        # 1c838 <__PRETTY_FUNCTION__.0+0x178>
   15b46:	48 89 c7             	mov    %rax,%rdi
   15b49:	e8 02 c8 fe ff       	call   2350 <__assert_fail@plt>
   15b4e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15b52:	48 8b 40 08          	mov    0x8(%rax),%rax
   15b56:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15b5a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   15b61:	00
   15b62:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   15b69:	e9 82 00 00 00       	jmp    15bf0 <remove_mutation_compound_statement+0x14c>
   15b6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b72:	48 8b 40 08          	mov    0x8(%rax),%rax
   15b76:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15b7a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15b7e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15b82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b86:	48 89 ce             	mov    %rcx,%rsi
   15b89:	48 89 c7             	mov    %rax,%rdi
   15b8c:	e8 95 fc ff ff       	call   15826 <remove_mutation_statement>
   15b91:	85 c0                	test   %eax,%eax
   15b93:	7e 47                	jle    15bdc <remove_mutation_compound_statement+0x138>
   15b95:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   15b99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b9d:	48 8b 40 10          	mov    0x10(%rax),%rax
   15ba1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15ba5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15ba9:	48 89 c7             	mov    %rax,%rdi
   15bac:	e8 df c6 fe ff       	call   2290 <free@plt>
   15bb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bb5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15bb9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15bbe:	75 0e                	jne    15bce <remove_mutation_compound_statement+0x12a>
   15bc0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15bc4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15bc8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15bcc:	eb 22                	jmp    15bf0 <remove_mutation_compound_statement+0x14c>
   15bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bd2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15bd6:	48 89 50 10          	mov    %rdx,0x10(%rax)
   15bda:	eb 14                	jmp    15bf0 <remove_mutation_compound_statement+0x14c>
   15bdc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15be0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15be4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15be8:	48 8b 40 10          	mov    0x10(%rax),%rax
   15bec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15bf0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15bf5:	0f 85 73 ff ff ff    	jne    15b6e <remove_mutation_compound_statement+0xca>
   15bfb:	8b 45 dc             	mov    -0x24(%rbp),%eax
   15bfe:	c9                   	leave
   15bff:	c3                   	ret

0000000000015c00 <simplify_stmt_expr>:
   15c00:	f3 0f 1e fa          	endbr64
   15c04:	55                   	push   %rbp
   15c05:	48 89 e5             	mov    %rsp,%rbp
   15c08:	48 83 ec 20          	sub    $0x20,%rsp
   15c0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15c10:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15c15:	75 28                	jne    15c3f <simplify_stmt_expr+0x3f>
   15c17:	48 8d 05 b2 6f 00 00 	lea    0x6fb2(%rip),%rax        # 1cbd0 <__PRETTY_FUNCTION__.4>
   15c1e:	48 89 c1             	mov    %rax,%rcx
   15c21:	ba 67 01 00 00       	mov    $0x167,%edx
   15c26:	48 8d 05 b3 6a 00 00 	lea    0x6ab3(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15c2d:	48 89 c6             	mov    %rax,%rsi
   15c30:	48 8d 05 a8 6b 00 00 	lea    0x6ba8(%rip),%rax        # 1c7df <__PRETTY_FUNCTION__.0+0x11f>
   15c37:	48 89 c7             	mov    %rax,%rdi
   15c3a:	e8 11 c7 fe ff       	call   2350 <__assert_fail@plt>
   15c3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c43:	8b 40 04             	mov    0x4(%rax),%eax
   15c46:	85 c0                	test   %eax,%eax
   15c48:	74 07                	je     15c51 <simplify_stmt_expr+0x51>
   15c4a:	83 f8 02             	cmp    $0x2,%eax
   15c4d:	74 14                	je     15c63 <simplify_stmt_expr+0x63>
   15c4f:	eb 44                	jmp    15c95 <simplify_stmt_expr+0x95>
   15c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c55:	48 83 c0 10          	add    $0x10,%rax
   15c59:	48 89 c7             	mov    %rax,%rdi
   15c5c:	e8 37 00 00 00       	call   15c98 <simplify_expr>
   15c61:	eb 32                	jmp    15c95 <simplify_stmt_expr+0x95>
   15c63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c67:	48 8b 40 08          	mov    0x8(%rax),%rax
   15c6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15c6f:	eb 1c                	jmp    15c8d <simplify_stmt_expr+0x8d>
   15c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c75:	48 8b 40 08          	mov    0x8(%rax),%rax
   15c79:	48 89 c7             	mov    %rax,%rdi
   15c7c:	e8 7f ff ff ff       	call   15c00 <simplify_stmt_expr>
   15c81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c85:	48 8b 40 10          	mov    0x10(%rax),%rax
   15c89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15c8d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15c92:	75 dd                	jne    15c71 <simplify_stmt_expr+0x71>
   15c94:	90                   	nop
   15c95:	90                   	nop
   15c96:	c9                   	leave
   15c97:	c3                   	ret

0000000000015c98 <simplify_expr>:
   15c98:	f3 0f 1e fa          	endbr64
   15c9c:	55                   	push   %rbp
   15c9d:	48 89 e5             	mov    %rsp,%rbp
   15ca0:	48 83 ec 30          	sub    $0x30,%rsp
   15ca4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15ca8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15cac:	48 8b 00             	mov    (%rax),%rax
   15caf:	8b 40 04             	mov    0x4(%rax),%eax
   15cb2:	83 f8 08             	cmp    $0x8,%eax
   15cb5:	0f 87 0b 03 00 00    	ja     15fc6 <simplify_expr+0x32e>
   15cbb:	83 f8 07             	cmp    $0x7,%eax
   15cbe:	73 25                	jae    15ce5 <simplify_expr+0x4d>
   15cc0:	83 f8 03             	cmp    $0x3,%eax
   15cc3:	0f 84 fe 01 00 00    	je     15ec7 <simplify_expr+0x22f>
   15cc9:	83 f8 03             	cmp    $0x3,%eax
   15ccc:	0f 87 f4 02 00 00    	ja     15fc6 <simplify_expr+0x32e>
   15cd2:	83 f8 01             	cmp    $0x1,%eax
   15cd5:	74 18                	je     15cef <simplify_expr+0x57>
   15cd7:	83 f8 02             	cmp    $0x2,%eax
   15cda:	0f 84 e4 00 00 00    	je     15dc4 <simplify_expr+0x12c>
   15ce0:	e9 e1 02 00 00       	jmp    15fc6 <simplify_expr+0x32e>
   15ce5:	b8 01 00 00 00       	mov    $0x1,%eax
   15cea:	e9 dc 02 00 00       	jmp    15fcb <simplify_expr+0x333>
   15cef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15cf3:	48 8b 00             	mov    (%rax),%rax
   15cf6:	48 83 c0 08          	add    $0x8,%rax
   15cfa:	48 89 c7             	mov    %rax,%rdi
   15cfd:	e8 96 ff ff ff       	call   15c98 <simplify_expr>
   15d02:	89 45 f0             	mov    %eax,-0x10(%rbp)
   15d05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d09:	48 8b 00             	mov    (%rax),%rax
   15d0c:	48 8b 40 08          	mov    0x8(%rax),%rax
   15d10:	48 85 c0             	test   %rax,%rax
   15d13:	75 28                	jne    15d3d <simplify_expr+0xa5>
   15d15:	48 8d 05 cc 6e 00 00 	lea    0x6ecc(%rip),%rax        # 1cbe8 <__PRETTY_FUNCTION__.3>
   15d1c:	48 89 c1             	mov    %rax,%rcx
   15d1f:	ba 92 01 00 00       	mov    $0x192,%edx
   15d24:	48 8d 05 b5 69 00 00 	lea    0x69b5(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   15d2b:	48 89 c6             	mov    %rax,%rsi
   15d2e:	48 8d 05 0b 6c 00 00 	lea    0x6c0b(%rip),%rax        # 1c940 <__PRETTY_FUNCTION__.0+0x280>
   15d35:	48 89 c7             	mov    %rax,%rdi
   15d38:	e8 13 c6 fe ff       	call   2350 <__assert_fail@plt>
   15d3d:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   15d41:	75 77                	jne    15dba <simplify_expr+0x122>
   15d43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d47:	48 8b 00             	mov    (%rax),%rax
   15d4a:	8b 10                	mov    (%rax),%edx
   15d4c:	48 8b 05 0d b3 00 00 	mov    0xb30d(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   15d53:	48 8d 0d 0e 6c 00 00 	lea    0x6c0e(%rip),%rcx        # 1c968 <__PRETTY_FUNCTION__.0+0x2a8>
   15d5a:	48 89 ce             	mov    %rcx,%rsi
   15d5d:	48 89 c7             	mov    %rax,%rdi
   15d60:	b8 00 00 00 00       	mov    $0x0,%eax
   15d65:	e8 66 c6 fe ff       	call   23d0 <fprintf@plt>
   15d6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d6e:	48 8b 00             	mov    (%rax),%rax
   15d71:	48 8b 40 08          	mov    0x8(%rax),%rax
   15d75:	8b 40 08             	mov    0x8(%rax),%eax
   15d78:	f7 d8                	neg    %eax
   15d7a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15d7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d81:	48 8b 00             	mov    (%rax),%rax
   15d84:	8b 00                	mov    (%rax),%eax
   15d86:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15d89:	89 d6                	mov    %edx,%esi
   15d8b:	89 c7                	mov    %eax,%edi
   15d8d:	e8 f4 3f ff ff       	call   9d86 <mk_inum>
   15d92:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15d96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d9a:	48 8b 00             	mov    (%rax),%rax
   15d9d:	48 89 c7             	mov    %rax,%rdi
   15da0:	e8 0c 36 ff ff       	call   93b1 <destroy_expr>
   15da5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15da9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15dad:	48 89 10             	mov    %rdx,(%rax)
   15db0:	b8 01 00 00 00       	mov    $0x1,%eax
   15db5:	e9 11 02 00 00       	jmp    15fcb <simplify_expr+0x333>
   15dba:	b8 00 00 00 00       	mov    $0x0,%eax
   15dbf:	e9 07 02 00 00       	jmp    15fcb <simplify_expr+0x333>
   15dc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15dc8:	48 8b 00             	mov    (%rax),%rax
   15dcb:	48 83 c0 10          	add    $0x10,%rax
   15dcf:	48 89 c7             	mov    %rax,%rdi
   15dd2:	e8 c1 fe ff ff       	call   15c98 <simplify_expr>
   15dd7:	89 45 f0             	mov    %eax,-0x10(%rbp)
   15dda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15dde:	48 8b 00             	mov    (%rax),%rax
   15de1:	48 83 c0 18          	add    $0x18,%rax
   15de5:	48 89 c7             	mov    %rax,%rdi
   15de8:	e8 ab fe ff ff       	call   15c98 <simplify_expr>
   15ded:	89 45 f4             	mov    %eax,-0xc(%rbp)
   15df0:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   15df4:	0f 85 c3 00 00 00    	jne    15ebd <simplify_expr+0x225>
   15dfa:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   15dfe:	0f 85 b9 00 00 00    	jne    15ebd <simplify_expr+0x225>
   15e04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e08:	48 8b 00             	mov    (%rax),%rax
   15e0b:	8b 10                	mov    (%rax),%edx
   15e0d:	48 8b 05 4c b2 00 00 	mov    0xb24c(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   15e14:	48 8d 0d 85 6b 00 00 	lea    0x6b85(%rip),%rcx        # 1c9a0 <__PRETTY_FUNCTION__.0+0x2e0>
   15e1b:	48 89 ce             	mov    %rcx,%rsi
   15e1e:	48 89 c7             	mov    %rax,%rdi
   15e21:	b8 00 00 00 00       	mov    $0x0,%eax
   15e26:	e8 a5 c5 fe ff       	call   23d0 <fprintf@plt>
   15e2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e2f:	48 8b 00             	mov    (%rax),%rax
   15e32:	8b 40 08             	mov    0x8(%rax),%eax
   15e35:	3d 2c 01 00 00       	cmp    $0x12c,%eax
   15e3a:	75 23                	jne    15e5f <simplify_expr+0x1c7>
   15e3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e40:	48 8b 00             	mov    (%rax),%rax
   15e43:	48 8b 40 10          	mov    0x10(%rax),%rax
   15e47:	8b 50 08             	mov    0x8(%rax),%edx
   15e4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e4e:	48 8b 00             	mov    (%rax),%rax
   15e51:	48 8b 40 18          	mov    0x18(%rax),%rax
   15e55:	8b 40 08             	mov    0x8(%rax),%eax
   15e58:	01 d0                	add    %edx,%eax
   15e5a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15e5d:	eb 21                	jmp    15e80 <simplify_expr+0x1e8>
   15e5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e63:	48 8b 00             	mov    (%rax),%rax
   15e66:	48 8b 40 10          	mov    0x10(%rax),%rax
   15e6a:	8b 50 08             	mov    0x8(%rax),%edx
   15e6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e71:	48 8b 00             	mov    (%rax),%rax
   15e74:	48 8b 40 18          	mov    0x18(%rax),%rax
   15e78:	8b 40 08             	mov    0x8(%rax),%eax
   15e7b:	29 c2                	sub    %eax,%edx
   15e7d:	89 55 ec             	mov    %edx,-0x14(%rbp)
   15e80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e84:	48 8b 00             	mov    (%rax),%rax
   15e87:	8b 00                	mov    (%rax),%eax
   15e89:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15e8c:	89 d6                	mov    %edx,%esi
   15e8e:	89 c7                	mov    %eax,%edi
   15e90:	e8 f1 3e ff ff       	call   9d86 <mk_inum>
   15e95:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15e99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e9d:	48 8b 00             	mov    (%rax),%rax
   15ea0:	48 89 c7             	mov    %rax,%rdi
   15ea3:	e8 09 35 ff ff       	call   93b1 <destroy_expr>
   15ea8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15eac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15eb0:	48 89 10             	mov    %rdx,(%rax)
   15eb3:	b8 01 00 00 00       	mov    $0x1,%eax
   15eb8:	e9 0e 01 00 00       	jmp    15fcb <simplify_expr+0x333>
   15ebd:	b8 00 00 00 00       	mov    $0x0,%eax
   15ec2:	e9 04 01 00 00       	jmp    15fcb <simplify_expr+0x333>
   15ec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ecb:	48 8b 00             	mov    (%rax),%rax
   15ece:	48 83 c0 10          	add    $0x10,%rax
   15ed2:	48 89 c7             	mov    %rax,%rdi
   15ed5:	e8 be fd ff ff       	call   15c98 <simplify_expr>
   15eda:	89 45 f0             	mov    %eax,-0x10(%rbp)
   15edd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ee1:	48 8b 00             	mov    (%rax),%rax
   15ee4:	48 83 c0 18          	add    $0x18,%rax
   15ee8:	48 89 c7             	mov    %rax,%rdi
   15eeb:	e8 a8 fd ff ff       	call   15c98 <simplify_expr>
   15ef0:	89 45 f4             	mov    %eax,-0xc(%rbp)
   15ef3:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   15ef7:	0f 85 c2 00 00 00    	jne    15fbf <simplify_expr+0x327>
   15efd:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   15f01:	0f 85 b8 00 00 00    	jne    15fbf <simplify_expr+0x327>
   15f07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f0b:	48 8b 00             	mov    (%rax),%rax
   15f0e:	8b 10                	mov    (%rax),%edx
   15f10:	48 8b 05 49 b1 00 00 	mov    0xb149(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   15f17:	48 8d 0d ba 6a 00 00 	lea    0x6aba(%rip),%rcx        # 1c9d8 <__PRETTY_FUNCTION__.0+0x318>
   15f1e:	48 89 ce             	mov    %rcx,%rsi
   15f21:	48 89 c7             	mov    %rax,%rdi
   15f24:	b8 00 00 00 00       	mov    $0x0,%eax
   15f29:	e8 a2 c4 fe ff       	call   23d0 <fprintf@plt>
   15f2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f32:	48 8b 00             	mov    (%rax),%rax
   15f35:	8b 40 08             	mov    0x8(%rax),%eax
   15f38:	3d 30 01 00 00       	cmp    $0x130,%eax
   15f3d:	75 24                	jne    15f63 <simplify_expr+0x2cb>
   15f3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f43:	48 8b 00             	mov    (%rax),%rax
   15f46:	48 8b 40 10          	mov    0x10(%rax),%rax
   15f4a:	8b 50 08             	mov    0x8(%rax),%edx
   15f4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f51:	48 8b 00             	mov    (%rax),%rax
   15f54:	48 8b 40 18          	mov    0x18(%rax),%rax
   15f58:	8b 40 08             	mov    0x8(%rax),%eax
   15f5b:	0f af c2             	imul   %edx,%eax
   15f5e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15f61:	eb 22                	jmp    15f85 <simplify_expr+0x2ed>
   15f63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f67:	48 8b 00             	mov    (%rax),%rax
   15f6a:	48 8b 40 10          	mov    0x10(%rax),%rax
   15f6e:	8b 40 08             	mov    0x8(%rax),%eax
   15f71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15f75:	48 8b 12             	mov    (%rdx),%rdx
   15f78:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   15f7c:	8b 4a 08             	mov    0x8(%rdx),%ecx
   15f7f:	99                   	cltd
   15f80:	f7 f9                	idiv   %ecx
   15f82:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15f85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f89:	48 8b 00             	mov    (%rax),%rax
   15f8c:	8b 00                	mov    (%rax),%eax
   15f8e:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15f91:	89 d6                	mov    %edx,%esi
   15f93:	89 c7                	mov    %eax,%edi
   15f95:	e8 ec 3d ff ff       	call   9d86 <mk_inum>
   15f9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15f9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15fa2:	48 8b 00             	mov    (%rax),%rax
   15fa5:	48 89 c7             	mov    %rax,%rdi
   15fa8:	e8 04 34 ff ff       	call   93b1 <destroy_expr>
   15fad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15fb1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15fb5:	48 89 10             	mov    %rdx,(%rax)
   15fb8:	b8 01 00 00 00       	mov    $0x1,%eax
   15fbd:	eb 0c                	jmp    15fcb <simplify_expr+0x333>
   15fbf:	b8 00 00 00 00       	mov    $0x0,%eax
   15fc4:	eb 05                	jmp    15fcb <simplify_expr+0x333>
   15fc6:	b8 00 00 00 00       	mov    $0x0,%eax
   15fcb:	c9                   	leave
   15fcc:	c3                   	ret

0000000000015fcd <decrement_reference_id_expr>:
   15fcd:	f3 0f 1e fa          	endbr64
   15fd1:	55                   	push   %rbp
   15fd2:	48 89 e5             	mov    %rsp,%rbp
   15fd5:	48 83 ec 30          	sub    $0x30,%rsp
   15fd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15fdd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15fe1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15fe5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15fec:	00 00
   15fee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15ff2:	31 c0                	xor    %eax,%eax
   15ff4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   15ff9:	75 28                	jne    16023 <decrement_reference_id_expr+0x56>
   15ffb:	48 8d 05 fe 6b 00 00 	lea    0x6bfe(%rip),%rax        # 1cc00 <__PRETTY_FUNCTION__.2>
   16002:	48 89 c1             	mov    %rax,%rcx
   16005:	ba ee 01 00 00       	mov    $0x1ee,%edx
   1600a:	48 8d 05 cf 66 00 00 	lea    0x66cf(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   16011:	48 89 c6             	mov    %rax,%rsi
   16014:	48 8d 05 d1 67 00 00 	lea    0x67d1(%rip),%rax        # 1c7ec <__PRETTY_FUNCTION__.0+0x12c>
   1601b:	48 89 c7             	mov    %rax,%rdi
   1601e:	e8 2d c3 fe ff       	call   2350 <__assert_fail@plt>
   16023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16027:	8b 40 04             	mov    0x4(%rax),%eax
   1602a:	83 f8 04             	cmp    $0x4,%eax
   1602d:	0f 87 c3 01 00 00    	ja     161f6 <decrement_reference_id_expr+0x229>
   16033:	89 c0                	mov    %eax,%eax
   16035:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1603c:	00
   1603d:	48 8d 05 44 6a 00 00 	lea    0x6a44(%rip),%rax        # 1ca88 <__PRETTY_FUNCTION__.0+0x3c8>
   16044:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   16047:	48 98                	cltq
   16049:	48 8d 15 38 6a 00 00 	lea    0x6a38(%rip),%rdx        # 1ca88 <__PRETTY_FUNCTION__.0+0x3c8>
   16050:	48 01 d0             	add    %rdx,%rax
   16053:	3e ff e0             	notrack jmp *%rax
   16056:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1605a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1605e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16062:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16066:	48 89 ce             	mov    %rcx,%rsi
   16069:	48 89 c7             	mov    %rax,%rdi
   1606c:	e8 5c ff ff ff       	call   15fcd <decrement_reference_id_expr>
   16071:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16075:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16079:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1607d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16081:	48 89 ce             	mov    %rcx,%rsi
   16084:	48 89 c7             	mov    %rax,%rdi
   16087:	e8 41 ff ff ff       	call   15fcd <decrement_reference_id_expr>
   1608c:	e9 66 01 00 00       	jmp    161f7 <decrement_reference_id_expr+0x22a>
   16091:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16095:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16099:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1609d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160a1:	48 89 ce             	mov    %rcx,%rsi
   160a4:	48 89 c7             	mov    %rax,%rdi
   160a7:	e8 21 ff ff ff       	call   15fcd <decrement_reference_id_expr>
   160ac:	e9 46 01 00 00       	jmp    161f7 <decrement_reference_id_expr+0x22a>
   160b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160b5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   160b9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   160bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160c1:	48 89 ce             	mov    %rcx,%rsi
   160c4:	48 89 c7             	mov    %rax,%rdi
   160c7:	e8 01 ff ff ff       	call   15fcd <decrement_reference_id_expr>
   160cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160d0:	48 8b 50 18          	mov    0x18(%rax),%rdx
   160d4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   160d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160dc:	48 89 ce             	mov    %rcx,%rsi
   160df:	48 89 c7             	mov    %rax,%rdi
   160e2:	e8 e6 fe ff ff       	call   15fcd <decrement_reference_id_expr>
   160e7:	e9 0b 01 00 00       	jmp    161f7 <decrement_reference_id_expr+0x22a>
   160ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   160f4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   160f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160fc:	48 89 ce             	mov    %rcx,%rsi
   160ff:	48 89 c7             	mov    %rax,%rdi
   16102:	e8 c6 fe ff ff       	call   15fcd <decrement_reference_id_expr>
   16107:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1610b:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1610f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16117:	48 89 ce             	mov    %rcx,%rsi
   1611a:	48 89 c7             	mov    %rax,%rdi
   1611d:	e8 ab fe ff ff       	call   15fcd <decrement_reference_id_expr>
   16122:	e9 d0 00 00 00       	jmp    161f7 <decrement_reference_id_expr+0x22a>
   16127:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1612b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1612f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16133:	48 89 d6             	mov    %rdx,%rsi
   16136:	48 89 c7             	mov    %rax,%rdi
   16139:	e8 82 c2 fe ff       	call   23c0 <strcmp@plt>
   1613e:	85 c0                	test   %eax,%eax
   16140:	0f 85 b0 00 00 00    	jne    161f6 <decrement_reference_id_expr+0x229>
   16146:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1614a:	8b 08                	mov    (%rax),%ecx
   1614c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16150:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16154:	48 8b 05 05 af 00 00 	mov    0xaf05(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1615b:	48 8d 35 ae 68 00 00 	lea    0x68ae(%rip),%rsi        # 1ca10 <__PRETTY_FUNCTION__.0+0x350>
   16162:	48 89 c7             	mov    %rax,%rdi
   16165:	b8 00 00 00 00       	mov    $0x0,%eax
   1616a:	e8 61 c2 fe ff       	call   23d0 <fprintf@plt>
   1616f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16173:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16177:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1617b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1617f:	48 89 ce             	mov    %rcx,%rsi
   16182:	48 89 c7             	mov    %rax,%rdi
   16185:	e8 bb 57 ff ff       	call   b945 <FindIdent>
   1618a:	85 c0                	test   %eax,%eax
   1618c:	74 28                	je     161b6 <decrement_reference_id_expr+0x1e9>
   1618e:	48 8d 05 6b 6a 00 00 	lea    0x6a6b(%rip),%rax        # 1cc00 <__PRETTY_FUNCTION__.2>
   16195:	48 89 c1             	mov    %rax,%rcx
   16198:	ba 0f 02 00 00       	mov    $0x20f,%edx
   1619d:	48 8d 05 3c 65 00 00 	lea    0x653c(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   161a4:	48 89 c6             	mov    %rax,%rsi
   161a7:	48 8d 05 9a 68 00 00 	lea    0x689a(%rip),%rax        # 1ca48 <__PRETTY_FUNCTION__.0+0x388>
   161ae:	48 89 c7             	mov    %rax,%rdi
   161b1:	e8 9a c1 fe ff       	call   2350 <__assert_fail@plt>
   161b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161ba:	48 85 c0             	test   %rax,%rax
   161bd:	75 28                	jne    161e7 <decrement_reference_id_expr+0x21a>
   161bf:	48 8d 05 3a 6a 00 00 	lea    0x6a3a(%rip),%rax        # 1cc00 <__PRETTY_FUNCTION__.2>
   161c6:	48 89 c1             	mov    %rax,%rcx
   161c9:	ba 10 02 00 00       	mov    $0x210,%edx
   161ce:	48 8d 05 0b 65 00 00 	lea    0x650b(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   161d5:	48 89 c6             	mov    %rax,%rsi
   161d8:	48 8d 05 9b 68 00 00 	lea    0x689b(%rip),%rax        # 1ca7a <__PRETTY_FUNCTION__.0+0x3ba>
   161df:	48 89 c7             	mov    %rax,%rdi
   161e2:	e8 69 c1 fe ff       	call   2350 <__assert_fail@plt>
   161e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161eb:	8b 50 18             	mov    0x18(%rax),%edx
   161ee:	83 ea 01             	sub    $0x1,%edx
   161f1:	89 50 18             	mov    %edx,0x18(%rax)
   161f4:	eb 01                	jmp    161f7 <decrement_reference_id_expr+0x22a>
   161f6:	90                   	nop
   161f7:	90                   	nop
   161f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161fc:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16203:	00 00
   16205:	74 05                	je     1620c <decrement_reference_id_expr+0x23f>
   16207:	e8 24 c1 fe ff       	call   2330 <__stack_chk_fail@plt>
   1620c:	c9                   	leave
   1620d:	c3                   	ret

000000000001620e <decrement_reference_expr>:
   1620e:	f3 0f 1e fa          	endbr64
   16212:	55                   	push   %rbp
   16213:	48 89 e5             	mov    %rsp,%rbp
   16216:	48 83 ec 20          	sub    $0x20,%rsp
   1621a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1621e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16222:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16229:	00 00
   1622b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1622f:	31 c0                	xor    %eax,%eax
   16231:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16236:	75 28                	jne    16260 <decrement_reference_expr+0x52>
   16238:	48 8d 05 e1 69 00 00 	lea    0x69e1(%rip),%rax        # 1cc20 <__PRETTY_FUNCTION__.1>
   1623f:	48 89 c1             	mov    %rax,%rcx
   16242:	ba 20 02 00 00       	mov    $0x220,%edx
   16247:	48 8d 05 92 64 00 00 	lea    0x6492(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   1624e:	48 89 c6             	mov    %rax,%rsi
   16251:	48 8d 05 94 65 00 00 	lea    0x6594(%rip),%rax        # 1c7ec <__PRETTY_FUNCTION__.0+0x12c>
   16258:	48 89 c7             	mov    %rax,%rdi
   1625b:	e8 f0 c0 fe ff       	call   2350 <__assert_fail@plt>
   16260:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16264:	8b 40 04             	mov    0x4(%rax),%eax
   16267:	83 f8 04             	cmp    $0x4,%eax
   1626a:	0f 87 88 01 00 00    	ja     163f8 <decrement_reference_expr+0x1ea>
   16270:	89 c0                	mov    %eax,%eax
   16272:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16279:	00
   1627a:	48 8d 05 1b 68 00 00 	lea    0x681b(%rip),%rax        # 1ca9c <__PRETTY_FUNCTION__.0+0x3dc>
   16281:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   16284:	48 98                	cltq
   16286:	48 8d 15 0f 68 00 00 	lea    0x680f(%rip),%rdx        # 1ca9c <__PRETTY_FUNCTION__.0+0x3dc>
   1628d:	48 01 d0             	add    %rdx,%rax
   16290:	3e ff e0             	notrack jmp *%rax
   16293:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16297:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1629b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1629f:	48 89 d6             	mov    %rdx,%rsi
   162a2:	48 89 c7             	mov    %rax,%rdi
   162a5:	e8 64 ff ff ff       	call   1620e <decrement_reference_expr>
   162aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162ae:	48 8b 50 18          	mov    0x18(%rax),%rdx
   162b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162b6:	48 89 d6             	mov    %rdx,%rsi
   162b9:	48 89 c7             	mov    %rax,%rdi
   162bc:	e8 4d ff ff ff       	call   1620e <decrement_reference_expr>
   162c1:	e9 33 01 00 00       	jmp    163f9 <decrement_reference_expr+0x1eb>
   162c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
   162ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162d2:	48 89 d6             	mov    %rdx,%rsi
   162d5:	48 89 c7             	mov    %rax,%rdi
   162d8:	e8 31 ff ff ff       	call   1620e <decrement_reference_expr>
   162dd:	e9 17 01 00 00       	jmp    163f9 <decrement_reference_expr+0x1eb>
   162e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162e6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   162ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162ee:	48 89 d6             	mov    %rdx,%rsi
   162f1:	48 89 c7             	mov    %rax,%rdi
   162f4:	e8 15 ff ff ff       	call   1620e <decrement_reference_expr>
   162f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162fd:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16305:	48 89 d6             	mov    %rdx,%rsi
   16308:	48 89 c7             	mov    %rax,%rdi
   1630b:	e8 fe fe ff ff       	call   1620e <decrement_reference_expr>
   16310:	e9 e4 00 00 00       	jmp    163f9 <decrement_reference_expr+0x1eb>
   16315:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16319:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1631d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16321:	48 89 d6             	mov    %rdx,%rsi
   16324:	48 89 c7             	mov    %rax,%rdi
   16327:	e8 e2 fe ff ff       	call   1620e <decrement_reference_expr>
   1632c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16330:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16334:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16338:	48 89 d6             	mov    %rdx,%rsi
   1633b:	48 89 c7             	mov    %rax,%rdi
   1633e:	e8 cb fe ff ff       	call   1620e <decrement_reference_expr>
   16343:	e9 b1 00 00 00       	jmp    163f9 <decrement_reference_expr+0x1eb>
   16348:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1634c:	8b 08                	mov    (%rax),%ecx
   1634e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16352:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16356:	48 8b 05 03 ad 00 00 	mov    0xad03(%rip),%rax        # 21060 <stderr@GLIBC_2.2.5>
   1635d:	48 8d 35 ac 66 00 00 	lea    0x66ac(%rip),%rsi        # 1ca10 <__PRETTY_FUNCTION__.0+0x350>
   16364:	48 89 c7             	mov    %rax,%rdi
   16367:	b8 00 00 00 00       	mov    $0x0,%eax
   1636c:	e8 5f c0 fe ff       	call   23d0 <fprintf@plt>
   16371:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16375:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16379:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1637d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   16381:	48 89 ce             	mov    %rcx,%rsi
   16384:	48 89 c7             	mov    %rax,%rdi
   16387:	e8 b9 55 ff ff       	call   b945 <FindIdent>
   1638c:	85 c0                	test   %eax,%eax
   1638e:	74 28                	je     163b8 <decrement_reference_expr+0x1aa>
   16390:	48 8d 05 89 68 00 00 	lea    0x6889(%rip),%rax        # 1cc20 <__PRETTY_FUNCTION__.1>
   16397:	48 89 c1             	mov    %rax,%rcx
   1639a:	ba 3f 02 00 00       	mov    $0x23f,%edx
   1639f:	48 8d 05 3a 63 00 00 	lea    0x633a(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   163a6:	48 89 c6             	mov    %rax,%rsi
   163a9:	48 8d 05 98 66 00 00 	lea    0x6698(%rip),%rax        # 1ca48 <__PRETTY_FUNCTION__.0+0x388>
   163b0:	48 89 c7             	mov    %rax,%rdi
   163b3:	e8 98 bf fe ff       	call   2350 <__assert_fail@plt>
   163b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   163bc:	48 85 c0             	test   %rax,%rax
   163bf:	75 28                	jne    163e9 <decrement_reference_expr+0x1db>
   163c1:	48 8d 05 58 68 00 00 	lea    0x6858(%rip),%rax        # 1cc20 <__PRETTY_FUNCTION__.1>
   163c8:	48 89 c1             	mov    %rax,%rcx
   163cb:	ba 40 02 00 00       	mov    $0x240,%edx
   163d0:	48 8d 05 09 63 00 00 	lea    0x6309(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   163d7:	48 89 c6             	mov    %rax,%rsi
   163da:	48 8d 05 99 66 00 00 	lea    0x6699(%rip),%rax        # 1ca7a <__PRETTY_FUNCTION__.0+0x3ba>
   163e1:	48 89 c7             	mov    %rax,%rdi
   163e4:	e8 67 bf fe ff       	call   2350 <__assert_fail@plt>
   163e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   163ed:	8b 50 18             	mov    0x18(%rax),%edx
   163f0:	83 ea 01             	sub    $0x1,%edx
   163f3:	89 50 18             	mov    %edx,0x18(%rax)
   163f6:	eb 01                	jmp    163f9 <decrement_reference_expr+0x1eb>
   163f8:	90                   	nop
   163f9:	90                   	nop
   163fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163fe:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16405:	00 00
   16407:	74 05                	je     1640e <decrement_reference_expr+0x200>
   16409:	e8 22 bf fe ff       	call   2330 <__stack_chk_fail@plt>
   1640e:	c9                   	leave
   1640f:	c3                   	ret

0000000000016410 <set_vars_lists>:
   16410:	f3 0f 1e fa          	endbr64
   16414:	55                   	push   %rbp
   16415:	48 89 e5             	mov    %rsp,%rbp
   16418:	48 83 ec 40          	sub    $0x40,%rsp
   1641c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16420:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16424:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16428:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1642c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16433:	00 00
   16435:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16439:	31 c0                	xor    %eax,%eax
   1643b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1643f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16446:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1644a:	48 8b 10             	mov    (%rax),%rdx
   1644d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16451:	48 89 10             	mov    %rdx,(%rax)
   16454:	e9 4f 01 00 00       	jmp    165a8 <set_vars_lists+0x198>
   16459:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1645d:	48 8b 40 08          	mov    0x8(%rax),%rax
   16461:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16465:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16469:	8b 40 04             	mov    0x4(%rax),%eax
   1646c:	83 f8 03             	cmp    $0x3,%eax
   1646f:	0f 84 27 01 00 00    	je     1659c <set_vars_lists+0x18c>
   16475:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16479:	8b 40 04             	mov    0x4(%rax),%eax
   1647c:	83 f8 02             	cmp    $0x2,%eax
   1647f:	74 28                	je     164a9 <set_vars_lists+0x99>
   16481:	48 8d 05 b8 67 00 00 	lea    0x67b8(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0>
   16488:	48 89 c1             	mov    %rax,%rcx
   1648b:	ba 5d 02 00 00       	mov    $0x25d,%edx
   16490:	48 8d 05 49 62 00 00 	lea    0x6249(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   16497:	48 89 c6             	mov    %rax,%rsi
   1649a:	48 8d 05 77 63 00 00 	lea    0x6377(%rip),%rax        # 1c818 <__PRETTY_FUNCTION__.0+0x158>
   164a1:	48 89 c7             	mov    %rax,%rdi
   164a4:	e8 a7 be fe ff       	call   2350 <__assert_fail@plt>
   164a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   164ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   164b1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   164b5:	e9 d7 00 00 00       	jmp    16591 <set_vars_lists+0x181>
   164ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164be:	48 8b 50 08          	mov    0x8(%rax),%rdx
   164c2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   164c6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   164ca:	48 89 ce             	mov    %rcx,%rsi
   164cd:	48 89 c7             	mov    %rax,%rdi
   164d0:	e8 70 54 ff ff       	call   b945 <FindIdent>
   164d5:	85 c0                	test   %eax,%eax
   164d7:	74 28                	je     16501 <set_vars_lists+0xf1>
   164d9:	48 8d 05 60 67 00 00 	lea    0x6760(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0>
   164e0:	48 89 c1             	mov    %rax,%rcx
   164e3:	ba 62 02 00 00       	mov    $0x262,%edx
   164e8:	48 8d 05 f1 61 00 00 	lea    0x61f1(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   164ef:	48 89 c6             	mov    %rax,%rsi
   164f2:	48 8d 05 b7 65 00 00 	lea    0x65b7(%rip),%rax        # 1cab0 <__PRETTY_FUNCTION__.0+0x3f0>
   164f9:	48 89 c7             	mov    %rax,%rdi
   164fc:	e8 4f be fe ff       	call   2350 <__assert_fail@plt>
   16501:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16505:	48 85 c0             	test   %rax,%rax
   16508:	75 28                	jne    16532 <set_vars_lists+0x122>
   1650a:	48 8d 05 2f 67 00 00 	lea    0x672f(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0>
   16511:	48 89 c1             	mov    %rax,%rcx
   16514:	ba 63 02 00 00       	mov    $0x263,%edx
   16519:	48 8d 05 c0 61 00 00 	lea    0x61c0(%rip),%rax        # 1c6e0 <__PRETTY_FUNCTION__.0+0x20>
   16520:	48 89 c6             	mov    %rax,%rsi
   16523:	48 8d 05 50 65 00 00 	lea    0x6550(%rip),%rax        # 1ca7a <__PRETTY_FUNCTION__.0+0x3ba>
   1652a:	48 89 c7             	mov    %rax,%rdi
   1652d:	e8 1e be fe ff       	call   2350 <__assert_fail@plt>
   16532:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16536:	8b 40 18             	mov    0x18(%rax),%eax
   16539:	85 c0                	test   %eax,%eax
   1653b:	75 25                	jne    16562 <set_vars_lists+0x152>
   1653d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16541:	8b 40 08             	mov    0x8(%rax),%eax
   16544:	83 f8 04             	cmp    $0x4,%eax
   16547:	74 19                	je     16562 <set_vars_lists+0x152>
   16549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1654d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16551:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16555:	48 89 d6             	mov    %rdx,%rsi
   16558:	48 89 c7             	mov    %rax,%rdi
   1655b:	e8 6a 00 00 00       	call   165ca <add_to_list>
   16560:	eb 23                	jmp    16585 <set_vars_lists+0x175>
   16562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16566:	8b 40 08             	mov    0x8(%rax),%eax
   16569:	83 f8 04             	cmp    $0x4,%eax
   1656c:	74 17                	je     16585 <set_vars_lists+0x175>
   1656e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16572:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16576:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1657a:	48 89 d6             	mov    %rdx,%rsi
   1657d:	48 89 c7             	mov    %rax,%rdi
   16580:	e8 45 00 00 00       	call   165ca <add_to_list>
   16585:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16589:	48 8b 40 10          	mov    0x10(%rax),%rax
   1658d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16591:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   16596:	0f 85 1e ff ff ff    	jne    164ba <set_vars_lists+0xaa>
   1659c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   165a0:	48 8b 40 10          	mov    0x10(%rax),%rax
   165a4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   165a8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   165ad:	0f 85 a6 fe ff ff    	jne    16459 <set_vars_lists+0x49>
   165b3:	90                   	nop
   165b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165b8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   165bf:	00 00
   165c1:	74 05                	je     165c8 <set_vars_lists+0x1b8>
   165c3:	e8 68 bd fe ff       	call   2330 <__stack_chk_fail@plt>
   165c8:	c9                   	leave
   165c9:	c3                   	ret

00000000000165ca <add_to_list>:
   165ca:	f3 0f 1e fa          	endbr64
   165ce:	55                   	push   %rbp
   165cf:	48 89 e5             	mov    %rsp,%rbp
   165d2:	48 83 ec 10          	sub    $0x10,%rsp
   165d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165e2:	48 8b 00             	mov    (%rax),%rax
   165e5:	48 85 c0             	test   %rax,%rax
   165e8:	75 1a                	jne    16604 <add_to_list+0x3a>
   165ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   165ee:	be 04 00 00 00       	mov    $0x4,%esi
   165f3:	48 89 c7             	mov    %rax,%rdi
   165f6:	e8 4c 14 ff ff       	call   7a47 <CreateListNode>
   165fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   165ff:	48 89 02             	mov    %rax,(%rdx)
   16602:	eb 2d                	jmp    16631 <add_to_list+0x67>
   16604:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16608:	be 04 00 00 00       	mov    $0x4,%esi
   1660d:	48 89 c7             	mov    %rax,%rdi
   16610:	e8 32 14 ff ff       	call   7a47 <CreateListNode>
   16615:	48 89 c2             	mov    %rax,%rdx
   16618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1661c:	48 8b 00             	mov    (%rax),%rax
   1661f:	48 89 d6             	mov    %rdx,%rsi
   16622:	48 89 c7             	mov    %rax,%rdi
   16625:	e8 e9 14 ff ff       	call   7b13 <PushListNodeBack>
   1662a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1662e:	48 89 02             	mov    %rax,(%rdx)
   16631:	90                   	nop
   16632:	c9                   	leave
   16633:	c3                   	ret

Disassembly of section .fini:

0000000000016634 <_fini>:
   16634:	f3 0f 1e fa          	endbr64
   16638:	48 83 ec 08          	sub    $0x8,%rsp
   1663c:	48 83 c4 08          	add    $0x8,%rsp
   16640:	c3                   	ret
