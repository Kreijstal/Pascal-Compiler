
builddir/GPC/gpc:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 c1 ff 01 00 	mov    0x1ffc1(%rip),%rax        # 21fd0 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 32 fe 01 00    	push   0x1fe32(%rip)        # 21e58 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 34 fe 01 00    	jmp    *0x1fe34(%rip)        # 21e60 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)
    2030:	f3 0f 1e fa          	endbr64
    2034:	68 00 00 00 00       	push   $0x0
    2039:	e9 e2 ff ff ff       	jmp    2020 <_init+0x20>
    203e:	66 90                	xchg   %ax,%ax
    2040:	f3 0f 1e fa          	endbr64
    2044:	68 01 00 00 00       	push   $0x1
    2049:	e9 d2 ff ff ff       	jmp    2020 <_init+0x20>
    204e:	66 90                	xchg   %ax,%ax
    2050:	f3 0f 1e fa          	endbr64
    2054:	68 02 00 00 00       	push   $0x2
    2059:	e9 c2 ff ff ff       	jmp    2020 <_init+0x20>
    205e:	66 90                	xchg   %ax,%ax
    2060:	f3 0f 1e fa          	endbr64
    2064:	68 03 00 00 00       	push   $0x3
    2069:	e9 b2 ff ff ff       	jmp    2020 <_init+0x20>
    206e:	66 90                	xchg   %ax,%ax
    2070:	f3 0f 1e fa          	endbr64
    2074:	68 04 00 00 00       	push   $0x4
    2079:	e9 a2 ff ff ff       	jmp    2020 <_init+0x20>
    207e:	66 90                	xchg   %ax,%ax
    2080:	f3 0f 1e fa          	endbr64
    2084:	68 05 00 00 00       	push   $0x5
    2089:	e9 92 ff ff ff       	jmp    2020 <_init+0x20>
    208e:	66 90                	xchg   %ax,%ax
    2090:	f3 0f 1e fa          	endbr64
    2094:	68 06 00 00 00       	push   $0x6
    2099:	e9 82 ff ff ff       	jmp    2020 <_init+0x20>
    209e:	66 90                	xchg   %ax,%ax
    20a0:	f3 0f 1e fa          	endbr64
    20a4:	68 07 00 00 00       	push   $0x7
    20a9:	e9 72 ff ff ff       	jmp    2020 <_init+0x20>
    20ae:	66 90                	xchg   %ax,%ax
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	68 08 00 00 00       	push   $0x8
    20b9:	e9 62 ff ff ff       	jmp    2020 <_init+0x20>
    20be:	66 90                	xchg   %ax,%ax
    20c0:	f3 0f 1e fa          	endbr64
    20c4:	68 09 00 00 00       	push   $0x9
    20c9:	e9 52 ff ff ff       	jmp    2020 <_init+0x20>
    20ce:	66 90                	xchg   %ax,%ax
    20d0:	f3 0f 1e fa          	endbr64
    20d4:	68 0a 00 00 00       	push   $0xa
    20d9:	e9 42 ff ff ff       	jmp    2020 <_init+0x20>
    20de:	66 90                	xchg   %ax,%ax
    20e0:	f3 0f 1e fa          	endbr64
    20e4:	68 0b 00 00 00       	push   $0xb
    20e9:	e9 32 ff ff ff       	jmp    2020 <_init+0x20>
    20ee:	66 90                	xchg   %ax,%ax
    20f0:	f3 0f 1e fa          	endbr64
    20f4:	68 0c 00 00 00       	push   $0xc
    20f9:	e9 22 ff ff ff       	jmp    2020 <_init+0x20>
    20fe:	66 90                	xchg   %ax,%ax
    2100:	f3 0f 1e fa          	endbr64
    2104:	68 0d 00 00 00       	push   $0xd
    2109:	e9 12 ff ff ff       	jmp    2020 <_init+0x20>
    210e:	66 90                	xchg   %ax,%ax
    2110:	f3 0f 1e fa          	endbr64
    2114:	68 0e 00 00 00       	push   $0xe
    2119:	e9 02 ff ff ff       	jmp    2020 <_init+0x20>
    211e:	66 90                	xchg   %ax,%ax
    2120:	f3 0f 1e fa          	endbr64
    2124:	68 0f 00 00 00       	push   $0xf
    2129:	e9 f2 fe ff ff       	jmp    2020 <_init+0x20>
    212e:	66 90                	xchg   %ax,%ax
    2130:	f3 0f 1e fa          	endbr64
    2134:	68 10 00 00 00       	push   $0x10
    2139:	e9 e2 fe ff ff       	jmp    2020 <_init+0x20>
    213e:	66 90                	xchg   %ax,%ax
    2140:	f3 0f 1e fa          	endbr64
    2144:	68 11 00 00 00       	push   $0x11
    2149:	e9 d2 fe ff ff       	jmp    2020 <_init+0x20>
    214e:	66 90                	xchg   %ax,%ax
    2150:	f3 0f 1e fa          	endbr64
    2154:	68 12 00 00 00       	push   $0x12
    2159:	e9 c2 fe ff ff       	jmp    2020 <_init+0x20>
    215e:	66 90                	xchg   %ax,%ax
    2160:	f3 0f 1e fa          	endbr64
    2164:	68 13 00 00 00       	push   $0x13
    2169:	e9 b2 fe ff ff       	jmp    2020 <_init+0x20>
    216e:	66 90                	xchg   %ax,%ax
    2170:	f3 0f 1e fa          	endbr64
    2174:	68 14 00 00 00       	push   $0x14
    2179:	e9 a2 fe ff ff       	jmp    2020 <_init+0x20>
    217e:	66 90                	xchg   %ax,%ax
    2180:	f3 0f 1e fa          	endbr64
    2184:	68 15 00 00 00       	push   $0x15
    2189:	e9 92 fe ff ff       	jmp    2020 <_init+0x20>
    218e:	66 90                	xchg   %ax,%ax
    2190:	f3 0f 1e fa          	endbr64
    2194:	68 16 00 00 00       	push   $0x16
    2199:	e9 82 fe ff ff       	jmp    2020 <_init+0x20>
    219e:	66 90                	xchg   %ax,%ax
    21a0:	f3 0f 1e fa          	endbr64
    21a4:	68 17 00 00 00       	push   $0x17
    21a9:	e9 72 fe ff ff       	jmp    2020 <_init+0x20>
    21ae:	66 90                	xchg   %ax,%ax
    21b0:	f3 0f 1e fa          	endbr64
    21b4:	68 18 00 00 00       	push   $0x18
    21b9:	e9 62 fe ff ff       	jmp    2020 <_init+0x20>
    21be:	66 90                	xchg   %ax,%ax
    21c0:	f3 0f 1e fa          	endbr64
    21c4:	68 19 00 00 00       	push   $0x19
    21c9:	e9 52 fe ff ff       	jmp    2020 <_init+0x20>
    21ce:	66 90                	xchg   %ax,%ax
    21d0:	f3 0f 1e fa          	endbr64
    21d4:	68 1a 00 00 00       	push   $0x1a
    21d9:	e9 42 fe ff ff       	jmp    2020 <_init+0x20>
    21de:	66 90                	xchg   %ax,%ax
    21e0:	f3 0f 1e fa          	endbr64
    21e4:	68 1b 00 00 00       	push   $0x1b
    21e9:	e9 32 fe ff ff       	jmp    2020 <_init+0x20>
    21ee:	66 90                	xchg   %ax,%ax
    21f0:	f3 0f 1e fa          	endbr64
    21f4:	68 1c 00 00 00       	push   $0x1c
    21f9:	e9 22 fe ff ff       	jmp    2020 <_init+0x20>
    21fe:	66 90                	xchg   %ax,%ax
    2200:	f3 0f 1e fa          	endbr64
    2204:	68 1d 00 00 00       	push   $0x1d
    2209:	e9 12 fe ff ff       	jmp    2020 <_init+0x20>
    220e:	66 90                	xchg   %ax,%ax
    2210:	f3 0f 1e fa          	endbr64
    2214:	68 1e 00 00 00       	push   $0x1e
    2219:	e9 02 fe ff ff       	jmp    2020 <_init+0x20>
    221e:	66 90                	xchg   %ax,%ax
    2220:	f3 0f 1e fa          	endbr64
    2224:	68 1f 00 00 00       	push   $0x1f
    2229:	e9 f2 fd ff ff       	jmp    2020 <_init+0x20>
    222e:	66 90                	xchg   %ax,%ax
    2230:	f3 0f 1e fa          	endbr64
    2234:	68 20 00 00 00       	push   $0x20
    2239:	e9 e2 fd ff ff       	jmp    2020 <_init+0x20>
    223e:	66 90                	xchg   %ax,%ax
    2240:	f3 0f 1e fa          	endbr64
    2244:	68 21 00 00 00       	push   $0x21
    2249:	e9 d2 fd ff ff       	jmp    2020 <_init+0x20>
    224e:	66 90                	xchg   %ax,%ax
    2250:	f3 0f 1e fa          	endbr64
    2254:	68 22 00 00 00       	push   $0x22
    2259:	e9 c2 fd ff ff       	jmp    2020 <_init+0x20>
    225e:	66 90                	xchg   %ax,%ax
    2260:	f3 0f 1e fa          	endbr64
    2264:	68 23 00 00 00       	push   $0x23
    2269:	e9 b2 fd ff ff       	jmp    2020 <_init+0x20>
    226e:	66 90                	xchg   %ax,%ax
    2270:	f3 0f 1e fa          	endbr64
    2274:	68 24 00 00 00       	push   $0x24
    2279:	e9 a2 fd ff ff       	jmp    2020 <_init+0x20>
    227e:	66 90                	xchg   %ax,%ax
    2280:	f3 0f 1e fa          	endbr64
    2284:	68 25 00 00 00       	push   $0x25
    2289:	e9 92 fd ff ff       	jmp    2020 <_init+0x20>
    228e:	66 90                	xchg   %ax,%ax
    2290:	f3 0f 1e fa          	endbr64
    2294:	68 26 00 00 00       	push   $0x26
    2299:	e9 82 fd ff ff       	jmp    2020 <_init+0x20>
    229e:	66 90                	xchg   %ax,%ax
    22a0:	f3 0f 1e fa          	endbr64
    22a4:	68 27 00 00 00       	push   $0x27
    22a9:	e9 72 fd ff ff       	jmp    2020 <_init+0x20>
    22ae:	66 90                	xchg   %ax,%ax
    22b0:	f3 0f 1e fa          	endbr64
    22b4:	68 28 00 00 00       	push   $0x28
    22b9:	e9 62 fd ff ff       	jmp    2020 <_init+0x20>
    22be:	66 90                	xchg   %ax,%ax
    22c0:	f3 0f 1e fa          	endbr64
    22c4:	68 29 00 00 00       	push   $0x29
    22c9:	e9 52 fd ff ff       	jmp    2020 <_init+0x20>
    22ce:	66 90                	xchg   %ax,%ax
    22d0:	f3 0f 1e fa          	endbr64
    22d4:	68 2a 00 00 00       	push   $0x2a
    22d9:	e9 42 fd ff ff       	jmp    2020 <_init+0x20>
    22de:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

00000000000022e0 <__cxa_finalize@plt>:
    22e0:	f3 0f 1e fa          	endbr64
    22e4:	ff 25 f6 fc 01 00    	jmp    *0x1fcf6(%rip)        # 21fe0 <__cxa_finalize@GLIBC_2.2.5>
    22ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000022f0 <free@plt>:
    22f0:	f3 0f 1e fa          	endbr64
    22f4:	ff 25 6e fb 01 00    	jmp    *0x1fb6e(%rip)        # 21e68 <free@GLIBC_2.2.5>
    22fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002300 <__errno_location@plt>:
    2300:	f3 0f 1e fa          	endbr64
    2304:	ff 25 66 fb 01 00    	jmp    *0x1fb66(%rip)        # 21e70 <__errno_location@GLIBC_2.2.5>
    230a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002310 <strncpy@plt>:
    2310:	f3 0f 1e fa          	endbr64
    2314:	ff 25 5e fb 01 00    	jmp    *0x1fb5e(%rip)        # 21e78 <strncpy@GLIBC_2.2.5>
    231a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002320 <strcpy@plt>:
    2320:	f3 0f 1e fa          	endbr64
    2324:	ff 25 56 fb 01 00    	jmp    *0x1fb56(%rip)        # 21e80 <strcpy@GLIBC_2.2.5>
    232a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002330 <ferror@plt>:
    2330:	f3 0f 1e fa          	endbr64
    2334:	ff 25 4e fb 01 00    	jmp    *0x1fb4e(%rip)        # 21e88 <ferror@GLIBC_2.2.5>
    233a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002340 <isatty@plt>:
    2340:	f3 0f 1e fa          	endbr64
    2344:	ff 25 46 fb 01 00    	jmp    *0x1fb46(%rip)        # 21e90 <isatty@GLIBC_2.2.5>
    234a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002350 <sigaction@plt>:
    2350:	f3 0f 1e fa          	endbr64
    2354:	ff 25 3e fb 01 00    	jmp    *0x1fb3e(%rip)        # 21e98 <sigaction@GLIBC_2.2.5>
    235a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002360 <fread@plt>:
    2360:	f3 0f 1e fa          	endbr64
    2364:	ff 25 36 fb 01 00    	jmp    *0x1fb36(%rip)        # 21ea0 <fread@GLIBC_2.2.5>
    236a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002370 <atof@plt>:
    2370:	f3 0f 1e fa          	endbr64
    2374:	ff 25 2e fb 01 00    	jmp    *0x1fb2e(%rip)        # 21ea8 <atof@GLIBC_2.2.5>
    237a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002380 <fclose@plt>:
    2380:	f3 0f 1e fa          	endbr64
    2384:	ff 25 26 fb 01 00    	jmp    *0x1fb26(%rip)        # 21eb0 <fclose@GLIBC_2.2.5>
    238a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002390 <strlen@plt>:
    2390:	f3 0f 1e fa          	endbr64
    2394:	ff 25 1e fb 01 00    	jmp    *0x1fb1e(%rip)        # 21eb8 <strlen@GLIBC_2.2.5>
    239a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023a0 <__stack_chk_fail@plt>:
    23a0:	f3 0f 1e fa          	endbr64
    23a4:	ff 25 16 fb 01 00    	jmp    *0x1fb16(%rip)        # 21ec0 <__stack_chk_fail@GLIBC_2.4>
    23aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023b0 <snprintf@plt>:
    23b0:	f3 0f 1e fa          	endbr64
    23b4:	ff 25 0e fb 01 00    	jmp    *0x1fb0e(%rip)        # 21ec8 <snprintf@GLIBC_2.2.5>
    23ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023c0 <_Ux86_64_getcontext@plt>:
    23c0:	f3 0f 1e fa          	endbr64
    23c4:	ff 25 06 fb 01 00    	jmp    *0x1fb06(%rip)        # 21ed0 <_Ux86_64_getcontext@Base>
    23ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023d0 <__assert_fail@plt>:
    23d0:	f3 0f 1e fa          	endbr64
    23d4:	ff 25 fe fa 01 00    	jmp    *0x1fafe(%rip)        # 21ed8 <__assert_fail@GLIBC_2.2.5>
    23da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023e0 <fputs@plt>:
    23e0:	f3 0f 1e fa          	endbr64
    23e4:	ff 25 f6 fa 01 00    	jmp    *0x1faf6(%rip)        # 21ee0 <fputs@GLIBC_2.2.5>
    23ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023f0 <memset@plt>:
    23f0:	f3 0f 1e fa          	endbr64
    23f4:	ff 25 ee fa 01 00    	jmp    *0x1faee(%rip)        # 21ee8 <memset@GLIBC_2.2.5>
    23fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002400 <_Ux86_64_init_local@plt>:
    2400:	f3 0f 1e fa          	endbr64
    2404:	ff 25 e6 fa 01 00    	jmp    *0x1fae6(%rip)        # 21ef0 <_Ux86_64_init_local@Base>
    240a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002410 <_Ux86_64_get_reg@plt>:
    2410:	f3 0f 1e fa          	endbr64
    2414:	ff 25 de fa 01 00    	jmp    *0x1fade(%rip)        # 21ef8 <_Ux86_64_get_reg@Base>
    241a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002420 <fputc@plt>:
    2420:	f3 0f 1e fa          	endbr64
    2424:	ff 25 d6 fa 01 00    	jmp    *0x1fad6(%rip)        # 21f00 <fputc@GLIBC_2.2.5>
    242a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002430 <strcspn@plt>:
    2430:	f3 0f 1e fa          	endbr64
    2434:	ff 25 ce fa 01 00    	jmp    *0x1face(%rip)        # 21f08 <strcspn@GLIBC_2.2.5>
    243a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002440 <fgets@plt>:
    2440:	f3 0f 1e fa          	endbr64
    2444:	ff 25 c6 fa 01 00    	jmp    *0x1fac6(%rip)        # 21f10 <fgets@GLIBC_2.2.5>
    244a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002450 <strcmp@plt>:
    2450:	f3 0f 1e fa          	endbr64
    2454:	ff 25 be fa 01 00    	jmp    *0x1fabe(%rip)        # 21f18 <strcmp@GLIBC_2.2.5>
    245a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002460 <_Ux86_64_step@plt>:
    2460:	f3 0f 1e fa          	endbr64
    2464:	ff 25 b6 fa 01 00    	jmp    *0x1fab6(%rip)        # 21f20 <_Ux86_64_step@Base>
    246a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002470 <fprintf@plt>:
    2470:	f3 0f 1e fa          	endbr64
    2474:	ff 25 ae fa 01 00    	jmp    *0x1faae(%rip)        # 21f28 <fprintf@GLIBC_2.2.5>
    247a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002480 <sigemptyset@plt>:
    2480:	f3 0f 1e fa          	endbr64
    2484:	ff 25 a6 fa 01 00    	jmp    *0x1faa6(%rip)        # 21f30 <sigemptyset@GLIBC_2.2.5>
    248a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002490 <fopen64@plt>:
    2490:	f3 0f 1e fa          	endbr64
    2494:	ff 25 9e fa 01 00    	jmp    *0x1fa9e(%rip)        # 21f38 <fopen64@GLIBC_2.2.5>
    249a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024a0 <clearerr@plt>:
    24a0:	f3 0f 1e fa          	endbr64
    24a4:	ff 25 96 fa 01 00    	jmp    *0x1fa96(%rip)        # 21f40 <clearerr@GLIBC_2.2.5>
    24aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024b0 <memcpy@plt>:
    24b0:	f3 0f 1e fa          	endbr64
    24b4:	ff 25 8e fa 01 00    	jmp    *0x1fa8e(%rip)        # 21f48 <memcpy@GLIBC_2.14>
    24ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024c0 <fileno@plt>:
    24c0:	f3 0f 1e fa          	endbr64
    24c4:	ff 25 86 fa 01 00    	jmp    *0x1fa86(%rip)        # 21f50 <fileno@GLIBC_2.2.5>
    24ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024d0 <malloc@plt>:
    24d0:	f3 0f 1e fa          	endbr64
    24d4:	ff 25 7e fa 01 00    	jmp    *0x1fa7e(%rip)        # 21f58 <malloc@GLIBC_2.2.5>
    24da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024e0 <__isoc99_sscanf@plt>:
    24e0:	f3 0f 1e fa          	endbr64
    24e4:	ff 25 76 fa 01 00    	jmp    *0x1fa76(%rip)        # 21f60 <__isoc99_sscanf@GLIBC_2.7>
    24ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024f0 <realloc@plt>:
    24f0:	f3 0f 1e fa          	endbr64
    24f4:	ff 25 6e fa 01 00    	jmp    *0x1fa6e(%rip)        # 21f68 <realloc@GLIBC_2.2.5>
    24fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002500 <_Ux86_64_get_proc_name@plt>:
    2500:	f3 0f 1e fa          	endbr64
    2504:	ff 25 66 fa 01 00    	jmp    *0x1fa66(%rip)        # 21f70 <_Ux86_64_get_proc_name@Base>
    250a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002510 <atoi@plt>:
    2510:	f3 0f 1e fa          	endbr64
    2514:	ff 25 5e fa 01 00    	jmp    *0x1fa5e(%rip)        # 21f78 <atoi@GLIBC_2.2.5>
    251a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002520 <strcat@plt>:
    2520:	f3 0f 1e fa          	endbr64
    2524:	ff 25 56 fa 01 00    	jmp    *0x1fa56(%rip)        # 21f80 <strcat@GLIBC_2.2.5>
    252a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002530 <sprintf@plt>:
    2530:	f3 0f 1e fa          	endbr64
    2534:	ff 25 4e fa 01 00    	jmp    *0x1fa4e(%rip)        # 21f88 <sprintf@GLIBC_2.2.5>
    253a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002540 <exit@plt>:
    2540:	f3 0f 1e fa          	endbr64
    2544:	ff 25 46 fa 01 00    	jmp    *0x1fa46(%rip)        # 21f90 <exit@GLIBC_2.2.5>
    254a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002550 <fwrite@plt>:
    2550:	f3 0f 1e fa          	endbr64
    2554:	ff 25 3e fa 01 00    	jmp    *0x1fa3e(%rip)        # 21f98 <fwrite@GLIBC_2.2.5>
    255a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002560 <strdup@plt>:
    2560:	f3 0f 1e fa          	endbr64
    2564:	ff 25 36 fa 01 00    	jmp    *0x1fa36(%rip)        # 21fa0 <strdup@GLIBC_2.2.5>
    256a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002570 <getc@plt>:
    2570:	f3 0f 1e fa          	endbr64
    2574:	ff 25 2e fa 01 00    	jmp    *0x1fa2e(%rip)        # 21fa8 <getc@GLIBC_2.2.5>
    257a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002580 <strstr@plt>:
    2580:	f3 0f 1e fa          	endbr64
    2584:	ff 25 26 fa 01 00    	jmp    *0x1fa26(%rip)        # 21fb0 <strstr@GLIBC_2.2.5>
    258a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002590 <__ctype_b_loc@plt>:
    2590:	f3 0f 1e fa          	endbr64
    2594:	ff 25 1e fa 01 00    	jmp    *0x1fa1e(%rip)        # 21fb8 <__ctype_b_loc@GLIBC_2.3>
    259a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000025a0 <_start>:
    25a0:	f3 0f 1e fa          	endbr64
    25a4:	31 ed                	xor    %ebp,%ebp
    25a6:	49 89 d1             	mov    %rdx,%r9
    25a9:	5e                   	pop    %rsi
    25aa:	48 89 e2             	mov    %rsp,%rdx
    25ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    25b1:	50                   	push   %rax
    25b2:	54                   	push   %rsp
    25b3:	45 31 c0             	xor    %r8d,%r8d
    25b6:	31 c9                	xor    %ecx,%ecx
    25b8:	48 8d 3d be 55 00 00 	lea    0x55be(%rip),%rdi        # 7b7d <main>
    25bf:	ff 15 fb f9 01 00    	call   *0x1f9fb(%rip)        # 21fc0 <__libc_start_main@GLIBC_2.34>
    25c5:	f4                   	hlt
    25c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25cd:	00 00 00

00000000000025d0 <deregister_tm_clones>:
    25d0:	48 8d 3d 61 fa 01 00 	lea    0x1fa61(%rip),%rdi        # 22038 <__TMC_END__>
    25d7:	48 8d 05 5a fa 01 00 	lea    0x1fa5a(%rip),%rax        # 22038 <__TMC_END__>
    25de:	48 39 f8             	cmp    %rdi,%rax
    25e1:	74 15                	je     25f8 <deregister_tm_clones+0x28>
    25e3:	48 8b 05 de f9 01 00 	mov    0x1f9de(%rip),%rax        # 21fc8 <_ITM_deregisterTMCloneTable@Base>
    25ea:	48 85 c0             	test   %rax,%rax
    25ed:	74 09                	je     25f8 <deregister_tm_clones+0x28>
    25ef:	ff e0                	jmp    *%rax
    25f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    25f8:	c3                   	ret
    25f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002600 <register_tm_clones>:
    2600:	48 8d 3d 31 fa 01 00 	lea    0x1fa31(%rip),%rdi        # 22038 <__TMC_END__>
    2607:	48 8d 35 2a fa 01 00 	lea    0x1fa2a(%rip),%rsi        # 22038 <__TMC_END__>
    260e:	48 29 fe             	sub    %rdi,%rsi
    2611:	48 89 f0             	mov    %rsi,%rax
    2614:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2618:	48 c1 f8 03          	sar    $0x3,%rax
    261c:	48 01 c6             	add    %rax,%rsi
    261f:	48 d1 fe             	sar    $1,%rsi
    2622:	74 14                	je     2638 <register_tm_clones+0x38>
    2624:	48 8b 05 ad f9 01 00 	mov    0x1f9ad(%rip),%rax        # 21fd8 <_ITM_registerTMCloneTable@Base>
    262b:	48 85 c0             	test   %rax,%rax
    262e:	74 08                	je     2638 <register_tm_clones+0x38>
    2630:	ff e0                	jmp    *%rax
    2632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2638:	c3                   	ret
    2639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002640 <__do_global_dtors_aux>:
    2640:	f3 0f 1e fa          	endbr64
    2644:	80 3d 1d fa 01 00 00 	cmpb   $0x0,0x1fa1d(%rip)        # 22068 <completed.0>
    264b:	75 2b                	jne    2678 <__do_global_dtors_aux+0x38>
    264d:	55                   	push   %rbp
    264e:	48 83 3d 8a f9 01 00 	cmpq   $0x0,0x1f98a(%rip)        # 21fe0 <__cxa_finalize@GLIBC_2.2.5>
    2655:	00
    2656:	48 89 e5             	mov    %rsp,%rbp
    2659:	74 0c                	je     2667 <__do_global_dtors_aux+0x27>
    265b:	48 8b 3d a6 f9 01 00 	mov    0x1f9a6(%rip),%rdi        # 22008 <__dso_handle>
    2662:	e8 79 fc ff ff       	call   22e0 <__cxa_finalize@plt>
    2667:	e8 64 ff ff ff       	call   25d0 <deregister_tm_clones>
    266c:	c6 05 f5 f9 01 00 01 	movb   $0x1,0x1f9f5(%rip)        # 22068 <completed.0>
    2673:	5d                   	pop    %rbp
    2674:	c3                   	ret
    2675:	0f 1f 00             	nopl   (%rax)
    2678:	c3                   	ret
    2679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002680 <frame_dummy>:
    2680:	f3 0f 1e fa          	endbr64
    2684:	e9 77 ff ff ff       	jmp    2600 <register_tm_clones>

0000000000002689 <yysymbol_name>:
    2689:	f3 0f 1e fa          	endbr64
    268d:	55                   	push   %rbp
    268e:	48 89 e5             	mov    %rsp,%rbp
    2691:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2694:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2697:	48 98                	cltq
    2699:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    26a0:	00
    26a1:	48 8d 05 f8 f1 01 00 	lea    0x1f1f8(%rip),%rax        # 218a0 <yytname>
    26a8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    26ac:	5d                   	pop    %rbp
    26ad:	c3                   	ret

00000000000026ae <yypcontext_expected_tokens>:
    26ae:	f3 0f 1e fa          	endbr64
    26b2:	55                   	push   %rbp
    26b3:	48 89 e5             	mov    %rsp,%rbp
    26b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    26ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    26be:	89 55 cc             	mov    %edx,-0x34(%rbp)
    26c1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    26c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26cc:	48 8b 00             	mov    (%rax),%rax
    26cf:	0f b6 00             	movzbl (%rax),%eax
    26d2:	0f b6 c0             	movzbl %al,%eax
    26d5:	48 98                	cltq
    26d7:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    26db:	48 8d 05 9e 5e 01 00 	lea    0x15e9e(%rip),%rax        # 18580 <yypact>
    26e2:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    26e6:	98                   	cwtl
    26e7:	89 45 f0             	mov    %eax,-0x10(%rbp)
    26ea:	83 7d f0 a2          	cmpl   $0xffffffa2,-0x10(%rbp)
    26ee:	0f 84 a4 00 00 00    	je     2798 <yypcontext_expected_tokens+0xea>
    26f4:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    26f8:	79 07                	jns    2701 <yypcontext_expected_tokens+0x53>
    26fa:	8b 45 f0             	mov    -0x10(%rbp),%eax
    26fd:	f7 d8                	neg    %eax
    26ff:	eb 05                	jmp    2706 <yypcontext_expected_tokens+0x58>
    2701:	b8 00 00 00 00       	mov    $0x0,%eax
    2706:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2709:	b8 ca 00 00 00       	mov    $0xca,%eax
    270e:	2b 45 f0             	sub    -0x10(%rbp),%eax
    2711:	89 45 f8             	mov    %eax,-0x8(%rbp)
    2714:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2717:	ba 46 00 00 00       	mov    $0x46,%edx
    271c:	39 d0                	cmp    %edx,%eax
    271e:	0f 4f c2             	cmovg  %edx,%eax
    2721:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2724:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2727:	89 45 ec             	mov    %eax,-0x14(%rbp)
    272a:	eb 64                	jmp    2790 <yypcontext_expected_tokens+0xe2>
    272c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    272f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2732:	01 d0                	add    %edx,%eax
    2734:	48 98                	cltq
    2736:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    273a:	48 8d 05 ff 62 01 00 	lea    0x162ff(%rip),%rax        # 18a40 <yycheck>
    2741:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2745:	98                   	cwtl
    2746:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2749:	75 41                	jne    278c <yypcontext_expected_tokens+0xde>
    274b:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    274f:	74 3b                	je     278c <yypcontext_expected_tokens+0xde>
    2751:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    2756:	75 06                	jne    275e <yypcontext_expected_tokens+0xb0>
    2758:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    275c:	eb 2e                	jmp    278c <yypcontext_expected_tokens+0xde>
    275e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2761:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    2764:	75 07                	jne    276d <yypcontext_expected_tokens+0xbf>
    2766:	b8 00 00 00 00       	mov    $0x0,%eax
    276b:	eb 4b                	jmp    27b8 <yypcontext_expected_tokens+0x10a>
    276d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2770:	8d 50 01             	lea    0x1(%rax),%edx
    2773:	89 55 e8             	mov    %edx,-0x18(%rbp)
    2776:	48 98                	cltq
    2778:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    277f:	00
    2780:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2784:	48 01 c2             	add    %rax,%rdx
    2787:	8b 45 ec             	mov    -0x14(%rbp),%eax
    278a:	89 02                	mov    %eax,(%rdx)
    278c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2790:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2793:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    2796:	7c 94                	jl     272c <yypcontext_expected_tokens+0x7e>
    2798:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    279d:	74 16                	je     27b5 <yypcontext_expected_tokens+0x107>
    279f:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
    27a3:	75 10                	jne    27b5 <yypcontext_expected_tokens+0x107>
    27a5:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    27a9:	7e 0a                	jle    27b5 <yypcontext_expected_tokens+0x107>
    27ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    27af:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%rax)
    27b5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    27b8:	5d                   	pop    %rbp
    27b9:	c3                   	ret

00000000000027ba <yystpcpy>:
    27ba:	f3 0f 1e fa          	endbr64
    27be:	55                   	push   %rbp
    27bf:	48 89 e5             	mov    %rsp,%rbp
    27c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    27c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    27ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    27ce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    27d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    27d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    27da:	eb 01                	jmp    27dd <yystpcpy+0x23>
    27dc:	90                   	nop
    27dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    27e1:	48 8d 42 01          	lea    0x1(%rdx),%rax
    27e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    27e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    27ed:	48 8d 48 01          	lea    0x1(%rax),%rcx
    27f1:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    27f5:	0f b6 12             	movzbl (%rdx),%edx
    27f8:	88 10                	mov    %dl,(%rax)
    27fa:	0f b6 00             	movzbl (%rax),%eax
    27fd:	84 c0                	test   %al,%al
    27ff:	75 db                	jne    27dc <yystpcpy+0x22>
    2801:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2805:	48 83 e8 01          	sub    $0x1,%rax
    2809:	5d                   	pop    %rbp
    280a:	c3                   	ret

000000000000280b <yytnamerr>:
    280b:	f3 0f 1e fa          	endbr64
    280f:	55                   	push   %rbp
    2810:	48 89 e5             	mov    %rsp,%rbp
    2813:	48 83 ec 20          	sub    $0x20,%rsp
    2817:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    281b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    281f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2823:	0f b6 00             	movzbl (%rax),%eax
    2826:	3c 22                	cmp    $0x22,%al
    2828:	0f 85 93 00 00 00    	jne    28c1 <yytnamerr+0xb6>
    282e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2835:	00
    2836:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    283a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    283e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    2843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2847:	0f b6 00             	movzbl (%rax),%eax
    284a:	0f be c0             	movsbl %al,%eax
    284d:	83 f8 5c             	cmp    $0x5c,%eax
    2850:	74 1b                	je     286d <yytnamerr+0x62>
    2852:	83 f8 5c             	cmp    $0x5c,%eax
    2855:	7f 27                	jg     287e <yytnamerr+0x73>
    2857:	83 f8 2c             	cmp    $0x2c,%eax
    285a:	74 61                	je     28bd <yytnamerr+0xb2>
    285c:	83 f8 2c             	cmp    $0x2c,%eax
    285f:	7f 1d                	jg     287e <yytnamerr+0x73>
    2861:	83 f8 22             	cmp    $0x22,%eax
    2864:	74 3a                	je     28a0 <yytnamerr+0x95>
    2866:	83 f8 27             	cmp    $0x27,%eax
    2869:	75 13                	jne    287e <yytnamerr+0x73>
    286b:	eb 50                	jmp    28bd <yytnamerr+0xb2>
    286d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    2872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2876:	0f b6 00             	movzbl (%rax),%eax
    2879:	3c 5c                	cmp    $0x5c,%al
    287b:	75 43                	jne    28c0 <yytnamerr+0xb5>
    287d:	90                   	nop
    287e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2883:	74 14                	je     2899 <yytnamerr+0x8e>
    2885:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2889:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    288d:	48 01 c2             	add    %rax,%rdx
    2890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2894:	0f b6 00             	movzbl (%rax),%eax
    2897:	88 02                	mov    %al,(%rdx)
    2899:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    289e:	eb 1b                	jmp    28bb <yytnamerr+0xb0>
    28a0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    28a5:	74 0e                	je     28b5 <yytnamerr+0xaa>
    28a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    28ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28af:	48 01 d0             	add    %rdx,%rax
    28b2:	c6 00 00             	movb   $0x0,(%rax)
    28b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28b9:	eb 32                	jmp    28ed <yytnamerr+0xe2>
    28bb:	eb 81                	jmp    283e <yytnamerr+0x33>
    28bd:	90                   	nop
    28be:	eb 01                	jmp    28c1 <yytnamerr+0xb6>
    28c0:	90                   	nop
    28c1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    28c6:	74 19                	je     28e1 <yytnamerr+0xd6>
    28c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    28cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28d0:	48 89 d6             	mov    %rdx,%rsi
    28d3:	48 89 c7             	mov    %rax,%rdi
    28d6:	e8 df fe ff ff       	call   27ba <yystpcpy>
    28db:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    28df:	eb 0c                	jmp    28ed <yytnamerr+0xe2>
    28e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    28e5:	48 89 c7             	mov    %rax,%rdi
    28e8:	e8 a3 fa ff ff       	call   2390 <strlen@plt>
    28ed:	c9                   	leave
    28ee:	c3                   	ret

00000000000028ef <yy_syntax_error_arguments>:
    28ef:	f3 0f 1e fa          	endbr64
    28f3:	55                   	push   %rbp
    28f4:	48 89 e5             	mov    %rsp,%rbp
    28f7:	48 83 ec 28          	sub    $0x28,%rsp
    28fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    28ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2903:	89 55 dc             	mov    %edx,-0x24(%rbp)
    2906:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    290d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2911:	8b 40 08             	mov    0x8(%rax),%eax
    2914:	83 f8 fe             	cmp    $0xfffffffe,%eax
    2917:	74 68                	je     2981 <yy_syntax_error_arguments+0x92>
    2919:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    291e:	74 1d                	je     293d <yy_syntax_error_arguments+0x4e>
    2920:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2923:	48 98                	cltq
    2925:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    292c:	00
    292d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2931:	48 01 c2             	add    %rax,%rdx
    2934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2938:	8b 40 08             	mov    0x8(%rax),%eax
    293b:	89 02                	mov    %eax,(%rdx)
    293d:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    2941:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2944:	8d 50 ff             	lea    -0x1(%rax),%edx
    2947:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    294c:	74 0a                	je     2958 <yy_syntax_error_arguments+0x69>
    294e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2952:	48 83 c0 04          	add    $0x4,%rax
    2956:	eb 04                	jmp    295c <yy_syntax_error_arguments+0x6d>
    2958:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    295c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2960:	48 89 c6             	mov    %rax,%rsi
    2963:	48 89 cf             	mov    %rcx,%rdi
    2966:	e8 43 fd ff ff       	call   26ae <yypcontext_expected_tokens>
    296b:	89 45 fc             	mov    %eax,-0x4(%rbp)
    296e:	83 7d fc fe          	cmpl   $0xfffffffe,-0x4(%rbp)
    2972:	75 07                	jne    297b <yy_syntax_error_arguments+0x8c>
    2974:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    2979:	eb 09                	jmp    2984 <yy_syntax_error_arguments+0x95>
    297b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    297e:	01 45 f8             	add    %eax,-0x8(%rbp)
    2981:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2984:	c9                   	leave
    2985:	c3                   	ret

0000000000002986 <yysyntax_error>:
    2986:	f3 0f 1e fa          	endbr64
    298a:	55                   	push   %rbp
    298b:	48 89 e5             	mov    %rsp,%rbp
    298e:	48 83 ec 70          	sub    $0x70,%rsp
    2992:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    2996:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    299a:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    299e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    29a5:	00 00
    29a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    29ab:	31 c0                	xor    %eax,%eax
    29ad:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    29b4:	00
    29b5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    29bc:	00
    29bd:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    29c1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    29c5:	ba 05 00 00 00       	mov    $0x5,%edx
    29ca:	48 89 ce             	mov    %rcx,%rsi
    29cd:	48 89 c7             	mov    %rax,%rdi
    29d0:	e8 1a ff ff ff       	call   28ef <yy_syntax_error_arguments>
    29d5:	89 45 bc             	mov    %eax,-0x44(%rbp)
    29d8:	83 7d bc fe          	cmpl   $0xfffffffe,-0x44(%rbp)
    29dc:	75 0a                	jne    29e8 <yysyntax_error+0x62>
    29de:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    29e3:	e9 e3 01 00 00       	jmp    2bcb <yysyntax_error+0x245>
    29e8:	83 7d bc 05          	cmpl   $0x5,-0x44(%rbp)
    29ec:	77 24                	ja     2a12 <yysyntax_error+0x8c>
    29ee:	8b 45 bc             	mov    -0x44(%rbp),%eax
    29f1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    29f8:	00
    29f9:	48 8d 05 a4 64 01 00 	lea    0x164a4(%rip),%rax        # 18ea4 <yyr2+0x164>
    2a00:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    2a03:	48 98                	cltq
    2a05:	48 8d 15 98 64 01 00 	lea    0x16498(%rip),%rdx        # 18ea4 <yyr2+0x164>
    2a0c:	48 01 d0             	add    %rdx,%rax
    2a0f:	3e ff e0             	notrack jmp *%rax
    2a12:	48 8d 05 88 63 01 00 	lea    0x16388(%rip),%rax        # 18da1 <yyr2+0x61>
    2a19:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a1d:	eb 3f                	jmp    2a5e <yysyntax_error+0xd8>
    2a1f:	48 8d 05 88 63 01 00 	lea    0x16388(%rip),%rax        # 18dae <yyr2+0x6e>
    2a26:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a2a:	eb 32                	jmp    2a5e <yysyntax_error+0xd8>
    2a2c:	48 8d 05 9d 63 01 00 	lea    0x1639d(%rip),%rax        # 18dd0 <yyr2+0x90>
    2a33:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a37:	eb 25                	jmp    2a5e <yysyntax_error+0xd8>
    2a39:	48 8d 05 c0 63 01 00 	lea    0x163c0(%rip),%rax        # 18e00 <yyr2+0xc0>
    2a40:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a44:	eb 18                	jmp    2a5e <yysyntax_error+0xd8>
    2a46:	48 8d 05 e3 63 01 00 	lea    0x163e3(%rip),%rax        # 18e30 <yyr2+0xf0>
    2a4d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a51:	eb 0b                	jmp    2a5e <yysyntax_error+0xd8>
    2a53:	48 8d 05 0e 64 01 00 	lea    0x1640e(%rip),%rax        # 18e68 <yyr2+0x128>
    2a5a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2a62:	48 89 c7             	mov    %rax,%rdi
    2a65:	e8 26 f9 ff ff       	call   2390 <strlen@plt>
    2a6a:	48 89 c2             	mov    %rax,%rdx
    2a6d:	8b 45 bc             	mov    -0x44(%rbp),%eax
    2a70:	01 c0                	add    %eax,%eax
    2a72:	48 98                	cltq
    2a74:	48 29 c2             	sub    %rax,%rdx
    2a77:	48 8d 42 01          	lea    0x1(%rdx),%rax
    2a7b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2a7f:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    2a86:	eb 58                	jmp    2ae0 <yysyntax_error+0x15a>
    2a88:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    2a8b:	48 98                	cltq
    2a8d:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    2a91:	48 98                	cltq
    2a93:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a9a:	00
    2a9b:	48 8d 05 fe ed 01 00 	lea    0x1edfe(%rip),%rax        # 218a0 <yytname>
    2aa2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    2aa6:	48 89 c6             	mov    %rax,%rsi
    2aa9:	bf 00 00 00 00       	mov    $0x0,%edi
    2aae:	e8 58 fd ff ff       	call   280b <yytnamerr>
    2ab3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2ab7:	48 01 d0             	add    %rdx,%rax
    2aba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2abe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ac2:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    2ac6:	7f 0a                	jg     2ad2 <yysyntax_error+0x14c>
    2ac8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2acc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2ad0:	eb 0a                	jmp    2adc <yysyntax_error+0x156>
    2ad2:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    2ad7:	e9 ef 00 00 00       	jmp    2bcb <yysyntax_error+0x245>
    2adc:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    2ae0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    2ae3:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    2ae6:	7c a0                	jl     2a88 <yysyntax_error+0x102>
    2ae8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2aec:	48 8b 00             	mov    (%rax),%rax
    2aef:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    2af3:	7e 37                	jle    2b2c <yysyntax_error+0x1a6>
    2af5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2af9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2afd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2b01:	48 89 10             	mov    %rdx,(%rax)
    2b04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2b08:	48 8b 00             	mov    (%rax),%rax
    2b0b:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    2b0f:	7e 11                	jle    2b22 <yysyntax_error+0x19c>
    2b11:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2b15:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
    2b1c:	ff ff 7f
    2b1f:	48 89 08             	mov    %rcx,(%rax)
    2b22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2b27:	e9 9f 00 00 00       	jmp    2bcb <yysyntax_error+0x245>
    2b2c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2b30:	48 8b 00             	mov    (%rax),%rax
    2b33:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2b37:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    2b3e:	eb 6a                	jmp    2baa <yysyntax_error+0x224>
    2b40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b44:	0f b6 00             	movzbl (%rax),%eax
    2b47:	3c 25                	cmp    $0x25,%al
    2b49:	75 55                	jne    2ba0 <yysyntax_error+0x21a>
    2b4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2b4f:	48 83 c0 01          	add    $0x1,%rax
    2b53:	0f b6 00             	movzbl (%rax),%eax
    2b56:	3c 73                	cmp    $0x73,%al
    2b58:	75 46                	jne    2ba0 <yysyntax_error+0x21a>
    2b5a:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2b5d:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    2b60:	7d 3e                	jge    2ba0 <yysyntax_error+0x21a>
    2b62:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2b65:	8d 50 01             	lea    0x1(%rax),%edx
    2b68:	89 55 b8             	mov    %edx,-0x48(%rbp)
    2b6b:	48 98                	cltq
    2b6d:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    2b71:	48 98                	cltq
    2b73:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2b7a:	00
    2b7b:	48 8d 05 1e ed 01 00 	lea    0x1ed1e(%rip),%rax        # 218a0 <yytname>
    2b82:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
    2b86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b8a:	48 89 d6             	mov    %rdx,%rsi
    2b8d:	48 89 c7             	mov    %rax,%rdi
    2b90:	e8 76 fc ff ff       	call   280b <yytnamerr>
    2b95:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    2b99:	48 83 45 c0 02       	addq   $0x2,-0x40(%rbp)
    2b9e:	eb 0a                	jmp    2baa <yysyntax_error+0x224>
    2ba0:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    2ba5:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    2baa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2bae:	0f b6 10             	movzbl (%rax),%edx
    2bb1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2bb5:	88 10                	mov    %dl,(%rax)
    2bb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2bbb:	0f b6 00             	movzbl (%rax),%eax
    2bbe:	84 c0                	test   %al,%al
    2bc0:	0f 85 7a ff ff ff    	jne    2b40 <yysyntax_error+0x1ba>
    2bc6:	b8 00 00 00 00       	mov    $0x0,%eax
    2bcb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2bcf:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    2bd6:	00 00
    2bd8:	74 05                	je     2bdf <yysyntax_error+0x259>
    2bda:	e8 c1 f7 ff ff       	call   23a0 <__stack_chk_fail@plt>
    2bdf:	c9                   	leave
    2be0:	c3                   	ret

0000000000002be1 <yydestruct>:
    2be1:	f3 0f 1e fa          	endbr64
    2be5:	55                   	push   %rbp
    2be6:	48 89 e5             	mov    %rsp,%rbp
    2be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2bed:	89 75 f4             	mov    %esi,-0xc(%rbp)
    2bf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    2bf4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2bf9:	75 0b                	jne    2c06 <yydestruct+0x25>
    2bfb:	48 8d 05 ba 62 01 00 	lea    0x162ba(%rip),%rax        # 18ebc <yyr2+0x17c>
    2c02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c06:	90                   	nop
    2c07:	5d                   	pop    %rbp
    2c08:	c3                   	ret

0000000000002c09 <yyparse>:
    2c09:	f3 0f 1e fa          	endbr64
    2c0d:	55                   	push   %rbp
    2c0e:	48 89 e5             	mov    %rsp,%rbp
    2c11:	53                   	push   %rbx
    2c12:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    2c19:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    2c1e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    2c25:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    2c2a:	48 81 ec c8 07 00 00 	sub    $0x7c8,%rsp
    2c31:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c38:	00 00
    2c3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2c3e:	31 c0                	xor    %eax,%eax
    2c40:	c7 85 34 d8 ff ff 00 	movl   $0x0,-0x27cc(%rbp)
    2c47:	00 00 00
    2c4a:	c7 85 38 d8 ff ff 00 	movl   $0x0,-0x27c8(%rbp)
    2c51:	00 00 00
    2c54:	48 c7 85 68 d8 ff ff 	movq   $0xc8,-0x2798(%rbp)
    2c5b:	c8 00 00 00
    2c5f:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    2c66:	48 89 85 70 d8 ff ff 	mov    %rax,-0x2790(%rbp)
    2c6d:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2c74:	48 89 85 78 d8 ff ff 	mov    %rax,-0x2788(%rbp)
    2c7b:	48 8d 85 20 d9 ff ff 	lea    -0x26e0(%rbp),%rax
    2c82:	48 89 85 80 d8 ff ff 	mov    %rax,-0x2780(%rbp)
    2c89:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    2c90:	48 89 85 88 d8 ff ff 	mov    %rax,-0x2778(%rbp)
    2c97:	c7 85 44 d8 ff ff fe 	movl   $0xfffffffe,-0x27bc(%rbp)
    2c9e:	ff ff ff
    2ca1:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    2ca8:	48 89 85 58 d8 ff ff 	mov    %rax,-0x27a8(%rbp)
    2caf:	48 c7 85 60 d8 ff ff 	movq   $0x80,-0x27a0(%rbp)
    2cb6:	80 00 00 00
    2cba:	c7 85 48 d8 ff ff 00 	movl   $0x0,-0x27b8(%rbp)
    2cc1:	00 00 00
    2cc4:	c7 05 b2 f3 01 00 fe 	movl   $0xfffffffe,0x1f3b2(%rip)        # 22080 <yychar>
    2ccb:	ff ff ff
    2cce:	eb 08                	jmp    2cd8 <yyparse+0xcf>
    2cd0:	48 83 85 78 d8 ff ff 	addq   $0x1,-0x2788(%rbp)
    2cd7:	01
    2cd8:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    2cde:	89 c2                	mov    %eax,%edx
    2ce0:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    2ce7:	88 10                	mov    %dl,(%rax)
    2ce9:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    2cf0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2cf4:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2cfb:	48 01 d0             	add    %rdx,%rax
    2cfe:	48 39 85 78 d8 ff ff 	cmp    %rax,-0x2788(%rbp)
    2d05:	0f 82 2d 02 00 00    	jb     2f38 <yyparse+0x32f>
    2d0b:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    2d12:	48 2b 85 70 d8 ff ff 	sub    -0x2790(%rbp),%rax
    2d19:	48 83 c0 01          	add    $0x1,%rax
    2d1d:	48 89 85 b8 d8 ff ff 	mov    %rax,-0x2748(%rbp)
    2d24:	48 81 bd 68 d8 ff ff 	cmpq   $0x270f,-0x2798(%rbp)
    2d2b:	0f 27 00 00
    2d2f:	0f 8f 31 20 00 00    	jg     4d66 <yyparse+0x215d>
    2d35:	48 d1 a5 68 d8 ff ff 	shlq   $1,-0x2798(%rbp)
    2d3c:	48 81 bd 68 d8 ff ff 	cmpq   $0x2710,-0x2798(%rbp)
    2d43:	10 27 00 00
    2d47:	7e 0b                	jle    2d54 <yyparse+0x14b>
    2d49:	48 c7 85 68 d8 ff ff 	movq   $0x2710,-0x2798(%rbp)
    2d50:	10 27 00 00
    2d54:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2d5b:	48 89 85 c0 d8 ff ff 	mov    %rax,-0x2740(%rbp)
    2d62:	48 8b 95 68 d8 ff ff 	mov    -0x2798(%rbp),%rdx
    2d69:	48 89 d0             	mov    %rdx,%rax
    2d6c:	48 01 c0             	add    %rax,%rax
    2d6f:	48 01 d0             	add    %rdx,%rax
    2d72:	48 c1 e0 04          	shl    $0x4,%rax
    2d76:	48 01 d0             	add    %rdx,%rax
    2d79:	48 83 c0 2f          	add    $0x2f,%rax
    2d7d:	48 89 c7             	mov    %rax,%rdi
    2d80:	e8 4b f7 ff ff       	call   24d0 <malloc@plt>
    2d85:	48 89 85 c8 d8 ff ff 	mov    %rax,-0x2738(%rbp)
    2d8c:	48 83 bd c8 d8 ff ff 	cmpq   $0x0,-0x2738(%rbp)
    2d93:	00
    2d94:	0f 84 cf 1f 00 00    	je     4d69 <yyparse+0x2160>
    2d9a:	48 8b 85 b8 d8 ff ff 	mov    -0x2748(%rbp),%rax
    2da1:	48 8b 8d c8 d8 ff ff 	mov    -0x2738(%rbp),%rcx
    2da8:	48 8b 95 70 d8 ff ff 	mov    -0x2790(%rbp),%rdx
    2daf:	48 89 d6             	mov    %rdx,%rsi
    2db2:	48 89 c2             	mov    %rax,%rdx
    2db5:	48 89 cf             	mov    %rcx,%rdi
    2db8:	e8 f3 f6 ff ff       	call   24b0 <memcpy@plt>
    2dbd:	48 8b 85 c8 d8 ff ff 	mov    -0x2738(%rbp),%rax
    2dc4:	48 89 85 70 d8 ff ff 	mov    %rax,-0x2790(%rbp)
    2dcb:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    2dd2:	48 83 c0 2f          	add    $0x2f,%rax
    2dd6:	48 89 85 d0 d8 ff ff 	mov    %rax,-0x2730(%rbp)
    2ddd:	48 8b 8d d0 d8 ff ff 	mov    -0x2730(%rbp),%rcx
    2de4:	48 ba ab aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaab,%rdx
    2deb:	aa aa 2a
    2dee:	48 89 c8             	mov    %rcx,%rax
    2df1:	48 f7 ea             	imul   %rdx
    2df4:	48 c1 fa 03          	sar    $0x3,%rdx
    2df8:	48 89 c8             	mov    %rcx,%rax
    2dfb:	48 c1 f8 3f          	sar    $0x3f,%rax
    2dff:	48 29 c2             	sub    %rax,%rdx
    2e02:	48 89 d0             	mov    %rdx,%rax
    2e05:	48 01 c0             	add    %rax,%rax
    2e08:	48 01 d0             	add    %rdx,%rax
    2e0b:	48 c1 e0 04          	shl    $0x4,%rax
    2e0f:	48 01 85 c8 d8 ff ff 	add    %rax,-0x2738(%rbp)
    2e16:	48 8b 95 b8 d8 ff ff 	mov    -0x2748(%rbp),%rdx
    2e1d:	48 89 d0             	mov    %rdx,%rax
    2e20:	48 01 c0             	add    %rax,%rax
    2e23:	48 01 d0             	add    %rdx,%rax
    2e26:	48 c1 e0 04          	shl    $0x4,%rax
    2e2a:	48 89 c6             	mov    %rax,%rsi
    2e2d:	48 8b 95 c8 d8 ff ff 	mov    -0x2738(%rbp),%rdx
    2e34:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    2e3b:	48 89 d1             	mov    %rdx,%rcx
    2e3e:	48 89 f2             	mov    %rsi,%rdx
    2e41:	48 89 c6             	mov    %rax,%rsi
    2e44:	48 89 cf             	mov    %rcx,%rdi
    2e47:	e8 64 f6 ff ff       	call   24b0 <memcpy@plt>
    2e4c:	48 8b 85 c8 d8 ff ff 	mov    -0x2738(%rbp),%rax
    2e53:	48 89 85 80 d8 ff ff 	mov    %rax,-0x2780(%rbp)
    2e5a:	48 8b 95 68 d8 ff ff 	mov    -0x2798(%rbp),%rdx
    2e61:	48 89 d0             	mov    %rdx,%rax
    2e64:	48 01 c0             	add    %rax,%rax
    2e67:	48 01 d0             	add    %rdx,%rax
    2e6a:	48 c1 e0 04          	shl    $0x4,%rax
    2e6e:	48 83 c0 2f          	add    $0x2f,%rax
    2e72:	48 89 85 d8 d8 ff ff 	mov    %rax,-0x2728(%rbp)
    2e79:	48 8b 8d d8 d8 ff ff 	mov    -0x2728(%rbp),%rcx
    2e80:	48 ba ab aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaab,%rdx
    2e87:	aa aa 2a
    2e8a:	48 89 c8             	mov    %rcx,%rax
    2e8d:	48 f7 ea             	imul   %rdx
    2e90:	48 c1 fa 03          	sar    $0x3,%rdx
    2e94:	48 89 c8             	mov    %rcx,%rax
    2e97:	48 c1 f8 3f          	sar    $0x3f,%rax
    2e9b:	48 29 c2             	sub    %rax,%rdx
    2e9e:	48 89 d0             	mov    %rdx,%rax
    2ea1:	48 01 c0             	add    %rax,%rax
    2ea4:	48 01 d0             	add    %rdx,%rax
    2ea7:	48 c1 e0 04          	shl    $0x4,%rax
    2eab:	48 01 85 c8 d8 ff ff 	add    %rax,-0x2738(%rbp)
    2eb2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    2eb9:	48 39 85 c0 d8 ff ff 	cmp    %rax,-0x2740(%rbp)
    2ec0:	74 0f                	je     2ed1 <yyparse+0x2c8>
    2ec2:	48 8b 85 c0 d8 ff ff 	mov    -0x2740(%rbp),%rax
    2ec9:	48 89 c7             	mov    %rax,%rdi
    2ecc:	e8 1f f4 ff ff       	call   22f0 <free@plt>
    2ed1:	48 8b 85 b8 d8 ff ff 	mov    -0x2748(%rbp),%rax
    2ed8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2edc:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2ee3:	48 01 d0             	add    %rdx,%rax
    2ee6:	48 89 85 78 d8 ff ff 	mov    %rax,-0x2788(%rbp)
    2eed:	48 8b 95 b8 d8 ff ff 	mov    -0x2748(%rbp),%rdx
    2ef4:	48 89 d0             	mov    %rdx,%rax
    2ef7:	48 01 c0             	add    %rax,%rax
    2efa:	48 01 d0             	add    %rdx,%rax
    2efd:	48 c1 e0 04          	shl    $0x4,%rax
    2f01:	48 8d 50 d0          	lea    -0x30(%rax),%rdx
    2f05:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    2f0c:	48 01 d0             	add    %rdx,%rax
    2f0f:	48 89 85 88 d8 ff ff 	mov    %rax,-0x2778(%rbp)
    2f16:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    2f1d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2f21:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2f28:	48 01 d0             	add    %rdx,%rax
    2f2b:	48 39 85 78 d8 ff ff 	cmp    %rax,-0x2788(%rbp)
    2f32:	0f 83 1e 1e 00 00    	jae    4d56 <yyparse+0x214d>
    2f38:	83 bd 34 d8 ff ff 05 	cmpl   $0x5,-0x27cc(%rbp)
    2f3f:	0f 84 04 1e 00 00    	je     4d49 <yyparse+0x2140>
    2f45:	90                   	nop
    2f46:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    2f4c:	48 98                	cltq
    2f4e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2f52:	48 8d 05 27 56 01 00 	lea    0x15627(%rip),%rax        # 18580 <yypact>
    2f59:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2f5d:	98                   	cwtl
    2f5e:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    2f64:	83 bd 3c d8 ff ff a2 	cmpl   $0xffffffa2,-0x27c4(%rbp)
    2f6b:	0f 84 90 01 00 00    	je     3101 <yyparse+0x4f8>
    2f71:	8b 05 09 f1 01 00    	mov    0x1f109(%rip),%eax        # 22080 <yychar>
    2f77:	83 f8 fe             	cmp    $0xfffffffe,%eax
    2f7a:	75 0b                	jne    2f87 <yyparse+0x37e>
    2f7c:	e8 33 24 00 00       	call   53b4 <yylex>
    2f81:	89 05 f9 f0 01 00    	mov    %eax,0x1f0f9(%rip)        # 22080 <yychar>
    2f87:	8b 05 f3 f0 01 00    	mov    0x1f0f3(%rip),%eax        # 22080 <yychar>
    2f8d:	85 c0                	test   %eax,%eax
    2f8f:	7f 16                	jg     2fa7 <yyparse+0x39e>
    2f91:	c7 05 e5 f0 01 00 00 	movl   $0x0,0x1f0e5(%rip)        # 22080 <yychar>
    2f98:	00 00 00
    2f9b:	c7 85 44 d8 ff ff 00 	movl   $0x0,-0x27bc(%rbp)
    2fa2:	00 00 00
    2fa5:	eb 60                	jmp    3007 <yyparse+0x3fe>
    2fa7:	8b 05 d3 f0 01 00    	mov    0x1f0d3(%rip),%eax        # 22080 <yychar>
    2fad:	3d 00 01 00 00       	cmp    $0x100,%eax
    2fb2:	75 19                	jne    2fcd <yyparse+0x3c4>
    2fb4:	c7 05 c2 f0 01 00 01 	movl   $0x101,0x1f0c2(%rip)        # 22080 <yychar>
    2fbb:	01 00 00
    2fbe:	c7 85 44 d8 ff ff 01 	movl   $0x1,-0x27bc(%rbp)
    2fc5:	00 00 00
    2fc8:	e9 1f 1c 00 00       	jmp    4bec <yyparse+0x1fe3>
    2fcd:	8b 05 ad f0 01 00    	mov    0x1f0ad(%rip),%eax        # 22080 <yychar>
    2fd3:	85 c0                	test   %eax,%eax
    2fd5:	78 25                	js     2ffc <yyparse+0x3f3>
    2fd7:	8b 05 a3 f0 01 00    	mov    0x1f0a3(%rip),%eax        # 22080 <yychar>
    2fdd:	3d 3c 01 00 00       	cmp    $0x13c,%eax
    2fe2:	7f 18                	jg     2ffc <yyparse+0x3f3>
    2fe4:	8b 05 96 f0 01 00    	mov    0x1f096(%rip),%eax        # 22080 <yychar>
    2fea:	48 98                	cltq
    2fec:	48 8d 15 2d 50 01 00 	lea    0x1502d(%rip),%rdx        # 18020 <yytranslate>
    2ff3:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    2ff7:	0f be c0             	movsbl %al,%eax
    2ffa:	eb 05                	jmp    3001 <yyparse+0x3f8>
    2ffc:	b8 02 00 00 00       	mov    $0x2,%eax
    3001:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    3007:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    300d:	01 85 3c d8 ff ff    	add    %eax,-0x27c4(%rbp)
    3013:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    301a:	0f 88 e4 00 00 00    	js     3104 <yyparse+0x4fb>
    3020:	81 bd 3c d8 ff ff c9 	cmpl   $0xc9,-0x27c4(%rbp)
    3027:	00 00 00
    302a:	0f 8f d4 00 00 00    	jg     3104 <yyparse+0x4fb>
    3030:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    3036:	48 98                	cltq
    3038:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    303c:	48 8d 05 fd 59 01 00 	lea    0x159fd(%rip),%rax        # 18a40 <yycheck>
    3043:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    3047:	98                   	cwtl
    3048:	39 85 44 d8 ff ff    	cmp    %eax,-0x27bc(%rbp)
    304e:	0f 85 b0 00 00 00    	jne    3104 <yyparse+0x4fb>
    3054:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    305a:	48 98                	cltq
    305c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    3060:	48 8d 05 39 58 01 00 	lea    0x15839(%rip),%rax        # 188a0 <yytable>
    3067:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    306b:	98                   	cwtl
    306c:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    3072:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    3079:	7f 0b                	jg     3086 <yyparse+0x47d>
    307b:	f7 9d 3c d8 ff ff    	negl   -0x27c4(%rbp)
    3081:	e9 a9 00 00 00       	jmp    312f <yyparse+0x526>
    3086:	83 bd 38 d8 ff ff 00 	cmpl   $0x0,-0x27c8(%rbp)
    308d:	74 07                	je     3096 <yyparse+0x48d>
    308f:	83 ad 38 d8 ff ff 01 	subl   $0x1,-0x27c8(%rbp)
    3096:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    309c:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    30a2:	48 83 85 88 d8 ff ff 	addq   $0x30,-0x2778(%rbp)
    30a9:	30
    30aa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    30b1:	48 8b 0d e8 ef 01 00 	mov    0x1efe8(%rip),%rcx        # 220a0 <yylval>
    30b8:	48 8b 1d e9 ef 01 00 	mov    0x1efe9(%rip),%rbx        # 220a8 <yylval+0x8>
    30bf:	48 89 08             	mov    %rcx,(%rax)
    30c2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    30c6:	48 8b 0d e3 ef 01 00 	mov    0x1efe3(%rip),%rcx        # 220b0 <yylval+0x10>
    30cd:	48 8b 1d e4 ef 01 00 	mov    0x1efe4(%rip),%rbx        # 220b8 <yylval+0x18>
    30d4:	48 89 48 10          	mov    %rcx,0x10(%rax)
    30d8:	48 89 58 18          	mov    %rbx,0x18(%rax)
    30dc:	48 8b 0d dd ef 01 00 	mov    0x1efdd(%rip),%rcx        # 220c0 <yylval+0x20>
    30e3:	48 8b 1d de ef 01 00 	mov    0x1efde(%rip),%rbx        # 220c8 <yylval+0x28>
    30ea:	48 89 48 20          	mov    %rcx,0x20(%rax)
    30ee:	48 89 58 28          	mov    %rbx,0x28(%rax)
    30f2:	c7 05 84 ef 01 00 fe 	movl   $0xfffffffe,0x1ef84(%rip)        # 22080 <yychar>
    30f9:	ff ff ff
    30fc:	e9 cf fb ff ff       	jmp    2cd0 <yyparse+0xc7>
    3101:	90                   	nop
    3102:	eb 01                	jmp    3105 <yyparse+0x4fc>
    3104:	90                   	nop
    3105:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    310b:	48 98                	cltq
    310d:	48 8d 15 0c 56 01 00 	lea    0x1560c(%rip),%rdx        # 18720 <yydefact>
    3114:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    3118:	0f be c0             	movsbl %al,%eax
    311b:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    3121:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    3128:	0f 84 da 18 00 00    	je     4a08 <yyparse+0x1dff>
    312e:	90                   	nop
    312f:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    3135:	48 98                	cltq
    3137:	48 8d 15 02 5c 01 00 	lea    0x15c02(%rip),%rdx        # 18d40 <yyr2>
    313e:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    3142:	0f be c0             	movsbl %al,%eax
    3145:	89 85 48 d8 ff ff    	mov    %eax,-0x27b8(%rbp)
    314b:	b8 01 00 00 00       	mov    $0x1,%eax
    3150:	2b 85 48 d8 ff ff    	sub    -0x27b8(%rbp),%eax
    3156:	48 63 d0             	movslq %eax,%rdx
    3159:	48 89 d0             	mov    %rdx,%rax
    315c:	48 01 c0             	add    %rax,%rax
    315f:	48 01 d0             	add    %rdx,%rax
    3162:	48 c1 e0 04          	shl    $0x4,%rax
    3166:	48 89 c2             	mov    %rax,%rdx
    3169:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3170:	48 01 d0             	add    %rdx,%rax
    3173:	48 8b 08             	mov    (%rax),%rcx
    3176:	48 8b 58 08          	mov    0x8(%rax),%rbx
    317a:	48 89 8d f0 d8 ff ff 	mov    %rcx,-0x2710(%rbp)
    3181:	48 89 9d f8 d8 ff ff 	mov    %rbx,-0x2708(%rbp)
    3188:	48 8b 48 10          	mov    0x10(%rax),%rcx
    318c:	48 8b 58 18          	mov    0x18(%rax),%rbx
    3190:	48 89 8d 00 d9 ff ff 	mov    %rcx,-0x2700(%rbp)
    3197:	48 89 9d 08 d9 ff ff 	mov    %rbx,-0x26f8(%rbp)
    319e:	48 8b 50 28          	mov    0x28(%rax),%rdx
    31a2:	48 8b 40 20          	mov    0x20(%rax),%rax
    31a6:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    31ad:	48 89 95 18 d9 ff ff 	mov    %rdx,-0x26e8(%rbp)
    31b4:	83 bd 3c d8 ff ff 60 	cmpl   $0x60,-0x27c4(%rbp)
    31bb:	0f 87 f1 16 00 00    	ja     48b2 <yyparse+0x1ca9>
    31c1:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    31c7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    31ce:	00
    31cf:	48 8d 05 76 5d 01 00 	lea    0x15d76(%rip),%rax        # 18f4c <yyr2+0x20c>
    31d6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    31d9:	48 98                	cltq
    31db:	48 8d 15 6a 5d 01 00 	lea    0x15d6a(%rip),%rdx        # 18f4c <yyr2+0x20c>
    31e2:	48 01 d0             	add    %rdx,%rax
    31e5:	3e ff e0             	notrack jmp *%rax
    31e8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    31ef:	48 83 e8 30          	sub    $0x30,%rax
    31f3:	48 8b 00             	mov    (%rax),%rax
    31f6:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    31fd:	e9 b1 16 00 00       	jmp    48b3 <yyparse+0x1caa>
    3202:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    3209:	00 00 00 00
    320d:	e9 a1 16 00 00       	jmp    48b3 <yyparse+0x1caa>
    3212:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3219:	48 83 e8 60          	sub    $0x60,%rax
    321d:	48 8b 38             	mov    (%rax),%rdi
    3220:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3227:	48 2d 90 00 00 00    	sub    $0x90,%rax
    322d:	4c 8b 08             	mov    (%rax),%r9
    3230:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3237:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    323d:	4c 8b 00             	mov    (%rax),%r8
    3240:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3247:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    324d:	48 8b 08             	mov    (%rax),%rcx
    3250:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3257:	48 2d 50 01 00 00    	sub    $0x150,%rax
    325d:	48 8b 10             	mov    (%rax),%rdx
    3260:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3267:	48 2d 80 01 00 00    	sub    $0x180,%rax
    326d:	48 8b 30             	mov    (%rax),%rsi
    3270:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3277:	48 2d 80 01 00 00    	sub    $0x180,%rax
    327d:	8b 40 08             	mov    0x8(%rax),%eax
    3280:	48 83 ec 08          	sub    $0x8,%rsp
    3284:	57                   	push   %rdi
    3285:	89 c7                	mov    %eax,%edi
    3287:	e8 65 6a 00 00       	call   9cf1 <mk_program>
    328c:	48 83 c4 10          	add    $0x10,%rsp
    3290:	48 89 05 61 f4 01 00 	mov    %rax,0x1f461(%rip)        # 226f8 <parse_tree>
    3297:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    329c:	e9 19 1c 00 00       	jmp    4eba <yyparse+0x22b1>
    32a1:	48 8b 05 f8 ed 01 00 	mov    0x1edf8(%rip),%rax        # 220a0 <yylval>
    32a8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    32af:	8b 05 7b ed 01 00    	mov    0x1ed7b(%rip),%eax        # 22030 <line_num>
    32b5:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    32bb:	e9 f3 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32c0:	8b 05 da ed 01 00    	mov    0x1edda(%rip),%eax        # 220a0 <yylval>
    32c6:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    32cc:	e9 e2 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32d1:	f3 0f 10 05 c7 ed 01 	movss  0x1edc7(%rip),%xmm0        # 220a0 <yylval>
    32d8:	00
    32d9:	f3 0f 11 85 f0 d8 ff 	movss  %xmm0,-0x2710(%rbp)
    32e0:	ff
    32e1:	e9 cd 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32e6:	48 8b 05 b3 ed 01 00 	mov    0x1edb3(%rip),%rax        # 220a0 <yylval>
    32ed:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    32f4:	e9 ba 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32f9:	8b 05 a1 ed 01 00    	mov    0x1eda1(%rip),%eax        # 220a0 <yylval>
    32ff:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3305:	e9 a9 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    330a:	8b 05 90 ed 01 00    	mov    0x1ed90(%rip),%eax        # 220a0 <yylval>
    3310:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3316:	e9 98 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    331b:	8b 05 7f ed 01 00    	mov    0x1ed7f(%rip),%eax        # 220a0 <yylval>
    3321:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3327:	e9 87 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    332c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3333:	48 8b 00             	mov    (%rax),%rax
    3336:	be 03 00 00 00       	mov    $0x3,%esi
    333b:	48 89 c7             	mov    %rax,%rdi
    333e:	e8 b8 4e 00 00       	call   81fb <CreateListNode>
    3343:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    334a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3351:	8b 40 08             	mov    0x8(%rax),%eax
    3354:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    335a:	e9 54 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    335f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3366:	48 8b 00             	mov    (%rax),%rax
    3369:	be 03 00 00 00       	mov    $0x3,%esi
    336e:	48 89 c7             	mov    %rax,%rdi
    3371:	e8 85 4e 00 00       	call   81fb <CreateListNode>
    3376:	48 89 c2             	mov    %rax,%rdx
    3379:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3380:	48 83 e8 60          	sub    $0x60,%rax
    3384:	48 8b 00             	mov    (%rax),%rax
    3387:	48 89 d6             	mov    %rdx,%rsi
    338a:	48 89 c7             	mov    %rax,%rdi
    338d:	e8 35 4f 00 00       	call   82c7 <PushListNodeBack>
    3392:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3399:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33a0:	48 83 e8 60          	sub    $0x60,%rax
    33a4:	8b 40 08             	mov    0x8(%rax),%eax
    33a7:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    33ad:	e9 01 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    33b2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33b9:	48 8b 00             	mov    (%rax),%rax
    33bc:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    33c3:	e9 eb 14 00 00       	jmp    48b3 <yyparse+0x1caa>
    33c8:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    33cf:	00 00 00 00
    33d3:	e9 db 14 00 00       	jmp    48b3 <yyparse+0x1caa>
    33d8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33df:	48 83 e8 30          	sub    $0x30,%rax
    33e3:	8b 00                	mov    (%rax),%eax
    33e5:	3d 13 01 00 00       	cmp    $0x113,%eax
    33ea:	75 5d                	jne    3449 <yyparse+0x840>
    33ec:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33f3:	48 83 e8 30          	sub    $0x30,%rax
    33f7:	8b 78 14             	mov    0x14(%rax),%edi
    33fa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3401:	48 83 e8 30          	sub    $0x30,%rax
    3405:	8b 48 10             	mov    0x10(%rax),%ecx
    3408:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    340f:	48 83 e8 30          	sub    $0x30,%rax
    3413:	8b 50 04             	mov    0x4(%rax),%edx
    3416:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    341d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3423:	48 8b 30             	mov    (%rax),%rsi
    3426:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    342d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3433:	8b 40 08             	mov    0x8(%rax),%eax
    3436:	41 89 f8             	mov    %edi,%r8d
    3439:	89 c7                	mov    %eax,%edi
    343b:	e8 a8 6b 00 00       	call   9fe8 <mk_arraydecl>
    3440:	48 89 85 90 d8 ff ff 	mov    %rax,-0x2770(%rbp)
    3447:	eb 51                	jmp    349a <yyparse+0x891>
    3449:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3450:	48 83 e8 30          	sub    $0x30,%rax
    3454:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3458:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    345f:	48 83 e8 30          	sub    $0x30,%rax
    3463:	8b 50 04             	mov    0x4(%rax),%edx
    3466:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    346d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3473:	48 8b 30             	mov    (%rax),%rsi
    3476:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    347d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3483:	8b 40 08             	mov    0x8(%rax),%eax
    3486:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    348c:	89 c7                	mov    %eax,%edi
    348e:	e8 e3 6a 00 00       	call   9f76 <mk_vardecl>
    3493:	48 89 85 90 d8 ff ff 	mov    %rax,-0x2770(%rbp)
    349a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    34a1:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    34a7:	48 8b 00             	mov    (%rax),%rax
    34aa:	48 85 c0             	test   %rax,%rax
    34ad:	75 20                	jne    34cf <yyparse+0x8c6>
    34af:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    34b6:	be 00 00 00 00       	mov    $0x0,%esi
    34bb:	48 89 c7             	mov    %rax,%rdi
    34be:	e8 38 4d 00 00       	call   81fb <CreateListNode>
    34c3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    34ca:	e9 e4 13 00 00       	jmp    48b3 <yyparse+0x1caa>
    34cf:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    34d6:	be 00 00 00 00       	mov    $0x0,%esi
    34db:	48 89 c7             	mov    %rax,%rdi
    34de:	e8 18 4d 00 00       	call   81fb <CreateListNode>
    34e3:	48 89 c2             	mov    %rax,%rdx
    34e6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    34ed:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    34f3:	48 8b 00             	mov    (%rax),%rax
    34f6:	48 89 d6             	mov    %rdx,%rsi
    34f9:	48 89 c7             	mov    %rax,%rdi
    34fc:	e8 c6 4d 00 00       	call   82c7 <PushListNodeBack>
    3501:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3508:	e9 a6 13 00 00       	jmp    48b3 <yyparse+0x1caa>
    350d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3514:	48 83 e8 30          	sub    $0x30,%rax
    3518:	8b 00                	mov    (%rax),%eax
    351a:	3d 13 01 00 00       	cmp    $0x113,%eax
    351f:	75 5d                	jne    357e <yyparse+0x975>
    3521:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3528:	48 83 e8 30          	sub    $0x30,%rax
    352c:	8b 78 14             	mov    0x14(%rax),%edi
    352f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3536:	48 83 e8 30          	sub    $0x30,%rax
    353a:	8b 48 10             	mov    0x10(%rax),%ecx
    353d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3544:	48 83 e8 30          	sub    $0x30,%rax
    3548:	8b 50 04             	mov    0x4(%rax),%edx
    354b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3552:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3558:	48 8b 30             	mov    (%rax),%rsi
    355b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3562:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3568:	8b 40 08             	mov    0x8(%rax),%eax
    356b:	41 89 f8             	mov    %edi,%r8d
    356e:	89 c7                	mov    %eax,%edi
    3570:	e8 73 6a 00 00       	call   9fe8 <mk_arraydecl>
    3575:	48 89 85 98 d8 ff ff 	mov    %rax,-0x2768(%rbp)
    357c:	eb 51                	jmp    35cf <yyparse+0x9c6>
    357e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3585:	48 83 e8 30          	sub    $0x30,%rax
    3589:	48 8b 48 08          	mov    0x8(%rax),%rcx
    358d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3594:	48 83 e8 30          	sub    $0x30,%rax
    3598:	8b 50 04             	mov    0x4(%rax),%edx
    359b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    35a2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    35a8:	48 8b 30             	mov    (%rax),%rsi
    35ab:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    35b2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    35b8:	8b 40 08             	mov    0x8(%rax),%eax
    35bb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    35c1:	89 c7                	mov    %eax,%edi
    35c3:	e8 ae 69 00 00       	call   9f76 <mk_vardecl>
    35c8:	48 89 85 98 d8 ff ff 	mov    %rax,-0x2768(%rbp)
    35cf:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    35d6:	be 00 00 00 00       	mov    $0x0,%esi
    35db:	48 89 c7             	mov    %rax,%rdi
    35de:	e8 18 4c 00 00       	call   81fb <CreateListNode>
    35e3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    35ea:	e9 c4 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    35ef:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    35f6:	48 8b 00             	mov    (%rax),%rax
    35f9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3600:	e9 ae 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3605:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    360c:	00 00 00 00
    3610:	e9 9e 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3615:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    361c:	48 8b 00             	mov    (%rax),%rax
    361f:	be 00 00 00 00       	mov    $0x0,%esi
    3624:	48 89 c7             	mov    %rax,%rdi
    3627:	e8 cf 4b 00 00       	call   81fb <CreateListNode>
    362c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3633:	e9 7b 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3638:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    363f:	48 8b 00             	mov    (%rax),%rax
    3642:	be 00 00 00 00       	mov    $0x0,%esi
    3647:	48 89 c7             	mov    %rax,%rdi
    364a:	e8 ac 4b 00 00       	call   81fb <CreateListNode>
    364f:	48 89 c2             	mov    %rax,%rdx
    3652:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3659:	48 83 e8 30          	sub    $0x30,%rax
    365d:	48 8b 00             	mov    (%rax),%rax
    3660:	48 89 d6             	mov    %rdx,%rsi
    3663:	48 89 c7             	mov    %rax,%rdi
    3666:	e8 5c 4c 00 00       	call   82c7 <PushListNodeBack>
    366b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3672:	e9 3c 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3677:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    367e:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3684:	8b 00                	mov    (%rax),%eax
    3686:	3d 27 01 00 00       	cmp    $0x127,%eax
    368b:	74 0f                	je     369c <yyparse+0xa93>
    368d:	48 8d 05 34 58 01 00 	lea    0x15834(%rip),%rax        # 18ec8 <yyr2+0x188>
    3694:	48 89 c7             	mov    %rax,%rdi
    3697:	e8 38 18 00 00       	call   4ed4 <yyerror>
    369c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36a3:	48 83 e8 30          	sub    $0x30,%rax
    36a7:	8b 08                	mov    (%rax),%ecx
    36a9:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36b0:	48 2d 90 00 00 00    	sub    $0x90,%rax
    36b6:	8b 10                	mov    (%rax),%edx
    36b8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36bf:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    36c5:	48 8b 30             	mov    (%rax),%rsi
    36c8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36cf:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    36d5:	8b 40 08             	mov    0x8(%rax),%eax
    36d8:	89 c7                	mov    %eax,%edi
    36da:	e8 a5 66 00 00       	call   9d84 <mk_typedecl>
    36df:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    36e6:	e9 c8 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    36eb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36f2:	8b 00                	mov    (%rax),%eax
    36f4:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    36fa:	e9 b4 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    36ff:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3706:	48 83 e8 30          	sub    $0x30,%rax
    370a:	8b 00                	mov    (%rax),%eax
    370c:	3d 2f 01 00 00       	cmp    $0x12f,%eax
    3711:	75 16                	jne    3729 <yyparse+0xb20>
    3713:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    371a:	8b 00                	mov    (%rax),%eax
    371c:	f7 d8                	neg    %eax
    371e:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3724:	e9 8a 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    3729:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3730:	8b 00                	mov    (%rax),%eax
    3732:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3738:	e9 76 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    373d:	c7 85 f0 d8 ff ff 18 	movl   $0x118,-0x2710(%rbp)
    3744:	01 00 00
    3747:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    374e:	8b 00                	mov    (%rax),%eax
    3750:	89 85 f4 d8 ff ff    	mov    %eax,-0x270c(%rbp)
    3756:	48 c7 85 f8 d8 ff ff 	movq   $0x0,-0x2708(%rbp)
    375d:	00 00 00 00
    3761:	e9 4d 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    3766:	c7 85 f0 d8 ff ff 13 	movl   $0x113,-0x2710(%rbp)
    376d:	01 00 00
    3770:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3777:	8b 00                	mov    (%rax),%eax
    3779:	89 85 f4 d8 ff ff    	mov    %eax,-0x270c(%rbp)
    377f:	48 c7 85 f8 d8 ff ff 	movq   $0x0,-0x2708(%rbp)
    3786:	00 00 00 00
    378a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3791:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3797:	8b 00                	mov    (%rax),%eax
    3799:	89 85 00 d9 ff ff    	mov    %eax,-0x2700(%rbp)
    379f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    37a6:	48 2d 90 00 00 00    	sub    $0x90,%rax
    37ac:	8b 00                	mov    (%rax),%eax
    37ae:	89 85 04 d9 ff ff    	mov    %eax,-0x26fc(%rbp)
    37b4:	e9 fa 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    37b9:	c7 85 f0 d8 ff ff 11 	movl   $0x111,-0x2710(%rbp)
    37c0:	01 00 00
    37c3:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    37ca:	48 8b 00             	mov    (%rax),%rax
    37cd:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    37d4:	c7 85 f4 d8 ff ff ff 	movl   $0xffffffff,-0x270c(%rbp)
    37db:	ff ff ff
    37de:	e9 d0 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    37e3:	c7 85 f0 d8 ff ff 0b 	movl   $0x10b,-0x2710(%rbp)
    37ea:	01 00 00
    37ed:	e9 c1 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    37f2:	c7 85 f0 d8 ff ff 0c 	movl   $0x10c,-0x2710(%rbp)
    37f9:	01 00 00
    37fc:	e9 b2 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    3801:	c7 85 f0 d8 ff ff 0d 	movl   $0x10d,-0x2710(%rbp)
    3808:	01 00 00
    380b:	e9 a3 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    3810:	c7 85 f0 d8 ff ff 0e 	movl   $0x10e,-0x2710(%rbp)
    3817:	01 00 00
    381a:	e9 94 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    381f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3826:	48 83 e8 60          	sub    $0x60,%rax
    382a:	48 8b 00             	mov    (%rax),%rax
    382d:	48 85 c0             	test   %rax,%rax
    3830:	75 27                	jne    3859 <yyparse+0xc50>
    3832:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3839:	48 83 e8 30          	sub    $0x30,%rax
    383d:	48 8b 00             	mov    (%rax),%rax
    3840:	be 00 00 00 00       	mov    $0x0,%esi
    3845:	48 89 c7             	mov    %rax,%rdi
    3848:	e8 ae 49 00 00       	call   81fb <CreateListNode>
    384d:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3854:	e9 5a 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    3859:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3860:	48 83 e8 30          	sub    $0x30,%rax
    3864:	48 8b 00             	mov    (%rax),%rax
    3867:	be 00 00 00 00       	mov    $0x0,%esi
    386c:	48 89 c7             	mov    %rax,%rdi
    386f:	e8 87 49 00 00       	call   81fb <CreateListNode>
    3874:	48 89 c2             	mov    %rax,%rdx
    3877:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    387e:	48 83 e8 60          	sub    $0x60,%rax
    3882:	48 8b 00             	mov    (%rax),%rax
    3885:	48 89 d6             	mov    %rdx,%rsi
    3888:	48 89 c7             	mov    %rax,%rdi
    388b:	e8 37 4a 00 00       	call   82c7 <PushListNodeBack>
    3890:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3897:	e9 17 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    389c:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    38a3:	00 00 00 00
    38a7:	e9 07 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    38ac:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38b3:	48 2d 90 00 00 00    	sub    $0x90,%rax
    38b9:	8b 00                	mov    (%rax),%eax
    38bb:	3d 04 01 00 00       	cmp    $0x104,%eax
    38c0:	0f 85 96 00 00 00    	jne    395c <yyparse+0xd53>
    38c6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38cd:	48 2d 90 00 00 00    	sub    $0x90,%rax
    38d3:	44 8b 40 2c          	mov    0x2c(%rax),%r8d
    38d7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38de:	48 2d 90 00 00 00    	sub    $0x90,%rax
    38e4:	8b 78 28             	mov    0x28(%rax),%edi
    38e7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38ee:	4c 8b 08             	mov    (%rax),%r9
    38f1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38f8:	48 83 e8 30          	sub    $0x30,%rax
    38fc:	4c 8b 10             	mov    (%rax),%r10
    38ff:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3906:	48 83 e8 60          	sub    $0x60,%rax
    390a:	48 8b 08             	mov    (%rax),%rcx
    390d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3914:	48 2d 90 00 00 00    	sub    $0x90,%rax
    391a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    391e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3925:	48 2d 90 00 00 00    	sub    $0x90,%rax
    392b:	48 8b 70 08          	mov    0x8(%rax),%rsi
    392f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3936:	48 2d 90 00 00 00    	sub    $0x90,%rax
    393c:	8b 40 18             	mov    0x18(%rax),%eax
    393f:	41 50                	push   %r8
    3941:	57                   	push   %rdi
    3942:	4d 89 d0             	mov    %r10,%r8
    3945:	89 c7                	mov    %eax,%edi
    3947:	e8 99 64 00 00       	call   9de5 <mk_procedure>
    394c:	48 83 c4 10          	add    $0x10,%rsp
    3950:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3957:	e9 57 0f 00 00       	jmp    48b3 <yyparse+0x1caa>
    395c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3963:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3969:	44 8b 50 2c          	mov    0x2c(%rax),%r10d
    396d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3974:	48 2d 90 00 00 00    	sub    $0x90,%rax
    397a:	44 8b 48 28          	mov    0x28(%rax),%r9d
    397e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3985:	48 2d 90 00 00 00    	sub    $0x90,%rax
    398b:	4c 8b 40 20          	mov    0x20(%rax),%r8
    398f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3996:	48 2d 90 00 00 00    	sub    $0x90,%rax
    399c:	8b 78 1c             	mov    0x1c(%rax),%edi
    399f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39a6:	48 8b 18             	mov    (%rax),%rbx
    39a9:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39b0:	48 83 e8 30          	sub    $0x30,%rax
    39b4:	4c 8b 18             	mov    (%rax),%r11
    39b7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39be:	48 83 e8 60          	sub    $0x60,%rax
    39c2:	48 8b 08             	mov    (%rax),%rcx
    39c5:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39cc:	48 2d 90 00 00 00    	sub    $0x90,%rax
    39d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    39d6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39dd:	48 2d 90 00 00 00    	sub    $0x90,%rax
    39e3:	48 8b 70 08          	mov    0x8(%rax),%rsi
    39e7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39ee:	48 2d 90 00 00 00    	sub    $0x90,%rax
    39f4:	8b 40 18             	mov    0x18(%rax),%eax
    39f7:	41 52                	push   %r10
    39f9:	41 51                	push   %r9
    39fb:	41 50                	push   %r8
    39fd:	57                   	push   %rdi
    39fe:	49 89 d9             	mov    %rbx,%r9
    3a01:	4d 89 d8             	mov    %r11,%r8
    3a04:	89 c7                	mov    %eax,%edi
    3a06:	e8 a3 64 00 00       	call   9eae <mk_function>
    3a0b:	48 83 c4 20          	add    $0x20,%rsp
    3a0f:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3a16:	e9 98 0e 00 00       	jmp    48b3 <yyparse+0x1caa>
    3a1b:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3a22:	01 00 00
    3a25:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a2c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3a32:	48 8b 00             	mov    (%rax),%rax
    3a35:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3a3c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a43:	48 83 e8 30          	sub    $0x30,%rax
    3a47:	8b 00                	mov    (%rax),%eax
    3a49:	3d 11 01 00 00       	cmp    $0x111,%eax
    3a4e:	75 22                	jne    3a72 <yyparse+0xe69>
    3a50:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3a57:	ff ff ff
    3a5a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a61:	48 83 e8 30          	sub    $0x30,%rax
    3a65:	48 8b 40 08          	mov    0x8(%rax),%rax
    3a69:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3a70:	eb 1f                	jmp    3a91 <yyparse+0xe88>
    3a72:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a79:	48 83 e8 30          	sub    $0x30,%rax
    3a7d:	8b 40 04             	mov    0x4(%rax),%eax
    3a80:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3a86:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3a8d:	00 00 00 00
    3a91:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a98:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3a9e:	48 8b 00             	mov    (%rax),%rax
    3aa1:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3aa8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3aaf:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3ab5:	8b 40 08             	mov    0x8(%rax),%eax
    3ab8:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3abe:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3ac5:	00 00 00
    3ac8:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3acf:	00 00 00
    3ad2:	e9 dc 0d 00 00       	jmp    48b3 <yyparse+0x1caa>
    3ad7:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3ade:	01 00 00
    3ae1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ae8:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3aee:	48 8b 00             	mov    (%rax),%rax
    3af1:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3af8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3aff:	48 83 e8 60          	sub    $0x60,%rax
    3b03:	8b 00                	mov    (%rax),%eax
    3b05:	3d 11 01 00 00       	cmp    $0x111,%eax
    3b0a:	75 22                	jne    3b2e <yyparse+0xf25>
    3b0c:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3b13:	ff ff ff
    3b16:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b1d:	48 83 e8 60          	sub    $0x60,%rax
    3b21:	48 8b 40 08          	mov    0x8(%rax),%rax
    3b25:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3b2c:	eb 1f                	jmp    3b4d <yyparse+0xf44>
    3b2e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b35:	48 83 e8 60          	sub    $0x60,%rax
    3b39:	8b 40 04             	mov    0x4(%rax),%eax
    3b3c:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3b42:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3b49:	00 00 00 00
    3b4d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b54:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3b5a:	48 8b 00             	mov    (%rax),%rax
    3b5d:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3b64:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b6b:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3b71:	8b 40 08             	mov    0x8(%rax),%eax
    3b74:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3b7a:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3b81:	00 00 00
    3b84:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3b8b:	00 00 00
    3b8e:	e9 20 0d 00 00       	jmp    48b3 <yyparse+0x1caa>
    3b93:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3b9a:	01 00 00
    3b9d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ba4:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3baa:	48 8b 00             	mov    (%rax),%rax
    3bad:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3bb4:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3bbb:	48 83 e8 60          	sub    $0x60,%rax
    3bbf:	8b 00                	mov    (%rax),%eax
    3bc1:	3d 11 01 00 00       	cmp    $0x111,%eax
    3bc6:	75 22                	jne    3bea <yyparse+0xfe1>
    3bc8:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3bcf:	ff ff ff
    3bd2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3bd9:	48 83 e8 60          	sub    $0x60,%rax
    3bdd:	48 8b 40 08          	mov    0x8(%rax),%rax
    3be1:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3be8:	eb 1f                	jmp    3c09 <yyparse+0x1000>
    3bea:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3bf1:	48 83 e8 60          	sub    $0x60,%rax
    3bf5:	8b 40 04             	mov    0x4(%rax),%eax
    3bf8:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3bfe:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3c05:	00 00 00 00
    3c09:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c10:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3c16:	48 8b 00             	mov    (%rax),%rax
    3c19:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3c20:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c27:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3c2d:	8b 40 08             	mov    0x8(%rax),%eax
    3c30:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3c36:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3c3d:	00 00 00
    3c40:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3c47:	00 00 00
    3c4a:	e9 64 0c 00 00       	jmp    48b3 <yyparse+0x1caa>
    3c4f:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3c56:	01 00 00
    3c59:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c60:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3c66:	48 8b 00             	mov    (%rax),%rax
    3c69:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3c70:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c77:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3c7d:	8b 00                	mov    (%rax),%eax
    3c7f:	3d 11 01 00 00       	cmp    $0x111,%eax
    3c84:	75 24                	jne    3caa <yyparse+0x10a1>
    3c86:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3c8d:	ff ff ff
    3c90:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c97:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3c9d:	48 8b 40 08          	mov    0x8(%rax),%rax
    3ca1:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3ca8:	eb 21                	jmp    3ccb <yyparse+0x10c2>
    3caa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3cb1:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3cb7:	8b 40 04             	mov    0x4(%rax),%eax
    3cba:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3cc0:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3cc7:	00 00 00 00
    3ccb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3cd2:	48 2d 20 01 00 00    	sub    $0x120,%rax
    3cd8:	48 8b 00             	mov    (%rax),%rax
    3cdb:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3ce2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ce9:	48 2d 20 01 00 00    	sub    $0x120,%rax
    3cef:	8b 40 08             	mov    0x8(%rax),%eax
    3cf2:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3cf8:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3cff:	00 00 00
    3d02:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3d09:	00 00 00
    3d0c:	e9 a2 0b 00 00       	jmp    48b3 <yyparse+0x1caa>
    3d11:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3d18:	01 00 00
    3d1b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d22:	48 83 e8 30          	sub    $0x30,%rax
    3d26:	48 8b 00             	mov    (%rax),%rax
    3d29:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3d30:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3d37:	ff ff ff
    3d3a:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3d41:	00 00 00 00
    3d45:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d4c:	48 83 e8 60          	sub    $0x60,%rax
    3d50:	48 8b 00             	mov    (%rax),%rax
    3d53:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3d5a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d61:	48 83 e8 60          	sub    $0x60,%rax
    3d65:	8b 40 08             	mov    0x8(%rax),%eax
    3d68:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3d6e:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3d75:	00 00 00
    3d78:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3d7f:	00 00 00
    3d82:	e9 2c 0b 00 00       	jmp    48b3 <yyparse+0x1caa>
    3d87:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3d8e:	01 00 00
    3d91:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d98:	48 83 e8 60          	sub    $0x60,%rax
    3d9c:	48 8b 00             	mov    (%rax),%rax
    3d9f:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3da6:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3dad:	ff ff ff
    3db0:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3db7:	00 00 00 00
    3dbb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3dc2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3dc8:	48 8b 00             	mov    (%rax),%rax
    3dcb:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3dd2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3dd9:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3ddf:	8b 40 08             	mov    0x8(%rax),%eax
    3de2:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3de8:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3def:	00 00 00
    3df2:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3df9:	00 00 00
    3dfc:	e9 b2 0a 00 00       	jmp    48b3 <yyparse+0x1caa>
    3e01:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3e08:	01 00 00
    3e0b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e12:	48 83 e8 60          	sub    $0x60,%rax
    3e16:	48 8b 00             	mov    (%rax),%rax
    3e19:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3e20:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3e27:	ff ff ff
    3e2a:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3e31:	00 00 00 00
    3e35:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e3c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3e42:	48 8b 00             	mov    (%rax),%rax
    3e45:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3e4c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e53:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3e59:	8b 40 08             	mov    0x8(%rax),%eax
    3e5c:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3e62:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3e69:	00 00 00
    3e6c:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3e73:	00 00 00
    3e76:	e9 38 0a 00 00       	jmp    48b3 <yyparse+0x1caa>
    3e7b:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3e82:	01 00 00
    3e85:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e8c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3e92:	48 8b 00             	mov    (%rax),%rax
    3e95:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3e9c:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3ea3:	ff ff ff
    3ea6:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3ead:	00 00 00 00
    3eb1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3eb8:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3ebe:	48 8b 00             	mov    (%rax),%rax
    3ec1:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3ec8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ecf:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3ed5:	8b 40 08             	mov    0x8(%rax),%eax
    3ed8:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3ede:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3ee5:	00 00 00
    3ee8:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3eef:	00 00 00
    3ef2:	e9 bc 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3ef7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3efe:	48 83 e8 30          	sub    $0x30,%rax
    3f02:	48 8b 00             	mov    (%rax),%rax
    3f05:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3f0c:	e9 a2 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f11:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    3f18:	00 00 00 00
    3f1c:	e9 92 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f21:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f28:	48 8b 00             	mov    (%rax),%rax
    3f2b:	be 00 00 00 00       	mov    $0x0,%esi
    3f30:	48 89 c7             	mov    %rax,%rdi
    3f33:	e8 c3 42 00 00       	call   81fb <CreateListNode>
    3f38:	48 89 c2             	mov    %rax,%rdx
    3f3b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f42:	48 83 e8 60          	sub    $0x60,%rax
    3f46:	48 8b 00             	mov    (%rax),%rax
    3f49:	48 89 d6             	mov    %rdx,%rsi
    3f4c:	48 89 c7             	mov    %rax,%rdi
    3f4f:	e8 73 43 00 00       	call   82c7 <PushListNodeBack>
    3f54:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3f5b:	e9 53 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f60:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f67:	48 8b 00             	mov    (%rax),%rax
    3f6a:	be 00 00 00 00       	mov    $0x0,%esi
    3f6f:	48 89 c7             	mov    %rax,%rdi
    3f72:	e8 84 42 00 00       	call   81fb <CreateListNode>
    3f77:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3f7e:	e9 30 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f83:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f8a:	8b 00                	mov    (%rax),%eax
    3f8c:	3d 13 01 00 00       	cmp    $0x113,%eax
    3f91:	75 4d                	jne    3fe0 <yyparse+0x13d7>
    3f93:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f9a:	8b 78 14             	mov    0x14(%rax),%edi
    3f9d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fa4:	8b 48 10             	mov    0x10(%rax),%ecx
    3fa7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fae:	8b 50 04             	mov    0x4(%rax),%edx
    3fb1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fb8:	48 83 e8 60          	sub    $0x60,%rax
    3fbc:	48 8b 30             	mov    (%rax),%rsi
    3fbf:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fc6:	48 83 e8 60          	sub    $0x60,%rax
    3fca:	8b 40 08             	mov    0x8(%rax),%eax
    3fcd:	41 89 f8             	mov    %edi,%r8d
    3fd0:	89 c7                	mov    %eax,%edi
    3fd2:	e8 11 60 00 00       	call   9fe8 <mk_arraydecl>
    3fd7:	48 89 85 a0 d8 ff ff 	mov    %rax,-0x2760(%rbp)
    3fde:	eb 45                	jmp    4025 <yyparse+0x141c>
    3fe0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fe7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3feb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ff2:	8b 50 04             	mov    0x4(%rax),%edx
    3ff5:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ffc:	48 83 e8 60          	sub    $0x60,%rax
    4000:	48 8b 30             	mov    (%rax),%rsi
    4003:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    400a:	48 83 e8 60          	sub    $0x60,%rax
    400e:	8b 40 08             	mov    0x8(%rax),%eax
    4011:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    4017:	89 c7                	mov    %eax,%edi
    4019:	e8 58 5f 00 00       	call   9f76 <mk_vardecl>
    401e:	48 89 85 a0 d8 ff ff 	mov    %rax,-0x2760(%rbp)
    4025:	48 8b 85 a0 d8 ff ff 	mov    -0x2760(%rbp),%rax
    402c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4033:	e9 7b 08 00 00       	jmp    48b3 <yyparse+0x1caa>
    4038:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    403f:	8b 00                	mov    (%rax),%eax
    4041:	3d 13 01 00 00       	cmp    $0x113,%eax
    4046:	75 4d                	jne    4095 <yyparse+0x148c>
    4048:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    404f:	8b 78 14             	mov    0x14(%rax),%edi
    4052:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4059:	8b 48 10             	mov    0x10(%rax),%ecx
    405c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4063:	8b 50 04             	mov    0x4(%rax),%edx
    4066:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    406d:	48 83 e8 60          	sub    $0x60,%rax
    4071:	48 8b 30             	mov    (%rax),%rsi
    4074:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    407b:	48 83 e8 60          	sub    $0x60,%rax
    407f:	8b 40 08             	mov    0x8(%rax),%eax
    4082:	41 89 f8             	mov    %edi,%r8d
    4085:	89 c7                	mov    %eax,%edi
    4087:	e8 5c 5f 00 00       	call   9fe8 <mk_arraydecl>
    408c:	48 89 85 a8 d8 ff ff 	mov    %rax,-0x2758(%rbp)
    4093:	eb 45                	jmp    40da <yyparse+0x14d1>
    4095:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    409c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    40a0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40a7:	8b 50 04             	mov    0x4(%rax),%edx
    40aa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40b1:	48 83 e8 60          	sub    $0x60,%rax
    40b5:	48 8b 30             	mov    (%rax),%rsi
    40b8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40bf:	48 83 e8 60          	sub    $0x60,%rax
    40c3:	8b 40 08             	mov    0x8(%rax),%eax
    40c6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    40cc:	89 c7                	mov    %eax,%edi
    40ce:	e8 a3 5e 00 00       	call   9f76 <mk_vardecl>
    40d3:	48 89 85 a8 d8 ff ff 	mov    %rax,-0x2758(%rbp)
    40da:	48 8b 85 a8 d8 ff ff 	mov    -0x2758(%rbp),%rax
    40e1:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    40e8:	e9 c6 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    40ed:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40f4:	48 83 e8 30          	sub    $0x30,%rax
    40f8:	48 8b 10             	mov    (%rax),%rdx
    40fb:	8b 05 2f df 01 00    	mov    0x1df2f(%rip),%eax        # 22030 <line_num>
    4101:	48 89 d6             	mov    %rdx,%rsi
    4104:	89 c7                	mov    %eax,%edi
    4106:	e8 fa 5f 00 00       	call   a105 <mk_compoundstatement>
    410b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4112:	e9 9c 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    4117:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    411e:	48 8b 10             	mov    (%rax),%rdx
    4121:	8b 05 09 df 01 00    	mov    0x1df09(%rip),%eax        # 22030 <line_num>
    4127:	48 89 d6             	mov    %rdx,%rsi
    412a:	89 c7                	mov    %eax,%edi
    412c:	e8 bd 61 00 00       	call   a2ee <mk_asmblock>
    4131:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4138:	e9 76 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    413d:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    4144:	00 00 00 00
    4148:	e9 66 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    414d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4154:	48 8b 00             	mov    (%rax),%rax
    4157:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    415e:	e9 50 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    4163:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    416a:	48 83 e8 30          	sub    $0x30,%rax
    416e:	48 8b 00             	mov    (%rax),%rax
    4171:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4178:	e9 36 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    417d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4184:	48 8b 00             	mov    (%rax),%rax
    4187:	be 01 00 00 00       	mov    $0x1,%esi
    418c:	48 89 c7             	mov    %rax,%rdi
    418f:	e8 67 40 00 00       	call   81fb <CreateListNode>
    4194:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    419b:	e9 13 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    41a0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41a7:	48 8b 00             	mov    (%rax),%rax
    41aa:	be 01 00 00 00       	mov    $0x1,%esi
    41af:	48 89 c7             	mov    %rax,%rdi
    41b2:	e8 44 40 00 00       	call   81fb <CreateListNode>
    41b7:	48 89 c2             	mov    %rax,%rdx
    41ba:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41c1:	48 83 e8 60          	sub    $0x60,%rax
    41c5:	48 8b 00             	mov    (%rax),%rax
    41c8:	48 89 d6             	mov    %rdx,%rsi
    41cb:	48 89 c7             	mov    %rax,%rdi
    41ce:	e8 f4 40 00 00       	call   82c7 <PushListNodeBack>
    41d3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    41da:	e9 d4 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    41df:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41e6:	48 8b 00             	mov    (%rax),%rax
    41e9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    41f0:	e9 be 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    41f5:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41fc:	48 8b 00             	mov    (%rax),%rax
    41ff:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4206:	e9 a8 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    420b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4212:	48 8b 00             	mov    (%rax),%rax
    4215:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    421c:	e9 92 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    4221:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4228:	48 8b 00             	mov    (%rax),%rax
    422b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4232:	e9 7c 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    4237:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    423e:	48 8b 10             	mov    (%rax),%rdx
    4241:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4248:	48 83 e8 60          	sub    $0x60,%rax
    424c:	48 8b 08             	mov    (%rax),%rcx
    424f:	8b 05 db dd 01 00    	mov    0x1dddb(%rip),%eax        # 22030 <line_num>
    4255:	48 89 ce             	mov    %rcx,%rsi
    4258:	89 c7                	mov    %eax,%edi
    425a:	e8 54 5f 00 00       	call   a1b3 <mk_while>
    425f:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4266:	e9 48 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    426b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4272:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    4278:	8b 00                	mov    (%rax),%eax
    427a:	3d 38 01 00 00       	cmp    $0x138,%eax
    427f:	75 42                	jne    42c3 <yyparse+0x16ba>
    4281:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4288:	48 8b 08             	mov    (%rax),%rcx
    428b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4292:	48 83 e8 60          	sub    $0x60,%rax
    4296:	48 8b 10             	mov    (%rax),%rdx
    4299:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42a0:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    42a6:	48 8b 70 08          	mov    0x8(%rax),%rsi
    42aa:	8b 05 80 dd 01 00    	mov    0x1dd80(%rip),%eax        # 22030 <line_num>
    42b0:	89 c7                	mov    %eax,%edi
    42b2:	e8 53 5f 00 00       	call   a20a <mk_forassign>
    42b7:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    42be:	e9 f0 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    42c3:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42ca:	48 8b 08             	mov    (%rax),%rcx
    42cd:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42d4:	48 83 e8 60          	sub    $0x60,%rax
    42d8:	48 8b 10             	mov    (%rax),%rdx
    42db:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42e2:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    42e8:	48 8b 70 08          	mov    0x8(%rax),%rsi
    42ec:	8b 05 3e dd 01 00    	mov    0x1dd3e(%rip),%eax        # 22030 <line_num>
    42f2:	89 c7                	mov    %eax,%edi
    42f4:	e8 83 5f 00 00       	call   a27c <mk_forvar>
    42f9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4300:	e9 ae 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    4305:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    430c:	48 8b 10             	mov    (%rax),%rdx
    430f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4316:	48 83 e8 60          	sub    $0x60,%rax
    431a:	48 8b 30             	mov    (%rax),%rsi
    431d:	8b 05 0d dd 01 00    	mov    0x1dd0d(%rip),%eax        # 22030 <line_num>
    4323:	b9 00 00 00 00       	mov    $0x0,%ecx
    4328:	89 c7                	mov    %eax,%edi
    432a:	e8 1d 5e 00 00       	call   a14c <mk_ifthen>
    432f:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4336:	e9 78 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    433b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4342:	48 8b 08             	mov    (%rax),%rcx
    4345:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    434c:	48 83 e8 60          	sub    $0x60,%rax
    4350:	48 8b 10             	mov    (%rax),%rdx
    4353:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    435a:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    4360:	48 8b 30             	mov    (%rax),%rsi
    4363:	8b 05 c7 dc 01 00    	mov    0x1dcc7(%rip),%eax        # 22030 <line_num>
    4369:	89 c7                	mov    %eax,%edi
    436b:	e8 dc 5d 00 00       	call   a14c <mk_ifthen>
    4370:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4377:	e9 37 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    437c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4383:	48 8b 10             	mov    (%rax),%rdx
    4386:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    438d:	48 83 e8 60          	sub    $0x60,%rax
    4391:	48 8b 08             	mov    (%rax),%rcx
    4394:	8b 05 96 dc 01 00    	mov    0x1dc96(%rip),%eax        # 22030 <line_num>
    439a:	48 89 ce             	mov    %rcx,%rsi
    439d:	89 c7                	mov    %eax,%edi
    439f:	e8 b3 5c 00 00       	call   a057 <mk_varassign>
    43a4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    43ab:	e9 03 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    43b0:	c7 85 f0 d8 ff ff 38 	movl   $0x138,-0x2710(%rbp)
    43b7:	01 00 00
    43ba:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    43c1:	48 8b 00             	mov    (%rax),%rax
    43c4:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    43cb:	e9 e3 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    43d0:	c7 85 f0 d8 ff ff 39 	movl   $0x139,-0x2710(%rbp)
    43d7:	01 00 00
    43da:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    43e1:	48 8b 00             	mov    (%rax),%rax
    43e4:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    43eb:	e9 c3 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    43f0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    43f7:	48 8b 10             	mov    (%rax),%rdx
    43fa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4401:	8b 40 08             	mov    0x8(%rax),%eax
    4404:	48 89 d6             	mov    %rdx,%rsi
    4407:	89 c7                	mov    %eax,%edi
    4409:	e8 9a 60 00 00       	call   a4a8 <mk_varid>
    440e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4415:	e9 99 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    441a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4421:	48 83 e8 30          	sub    $0x30,%rax
    4425:	48 8b 10             	mov    (%rax),%rdx
    4428:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    442f:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4435:	48 8b 08             	mov    (%rax),%rcx
    4438:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    443f:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4445:	8b 40 08             	mov    0x8(%rax),%eax
    4448:	48 89 ce             	mov    %rcx,%rsi
    444b:	89 c7                	mov    %eax,%edi
    444d:	e8 9d 60 00 00       	call   a4ef <mk_arrayaccess>
    4452:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4459:	e9 55 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    445e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4465:	48 8b 08             	mov    (%rax),%rcx
    4468:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    446f:	8b 40 08             	mov    0x8(%rax),%eax
    4472:	ba 00 00 00 00       	mov    $0x0,%edx
    4477:	48 89 ce             	mov    %rcx,%rsi
    447a:	89 c7                	mov    %eax,%edi
    447c:	e8 2d 5c 00 00       	call   a0ae <mk_procedurecall>
    4481:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4488:	e9 26 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    448d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4494:	48 83 e8 30          	sub    $0x30,%rax
    4498:	48 8b 10             	mov    (%rax),%rdx
    449b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44a2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    44a8:	48 8b 08             	mov    (%rax),%rcx
    44ab:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44b2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    44b8:	8b 40 08             	mov    0x8(%rax),%eax
    44bb:	48 89 ce             	mov    %rcx,%rsi
    44be:	89 c7                	mov    %eax,%edi
    44c0:	e8 e9 5b 00 00       	call   a0ae <mk_procedurecall>
    44c5:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    44cc:	e9 e2 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    44d1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44d8:	48 8b 08             	mov    (%rax),%rcx
    44db:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44e2:	48 83 e8 60          	sub    $0x60,%rax
    44e6:	48 8b 10             	mov    (%rax),%rdx
    44e9:	8b 05 41 db 01 00    	mov    0x1db41(%rip),%eax        # 22030 <line_num>
    44ef:	be 30 01 00 00       	mov    $0x130,%esi
    44f4:	89 c7                	mov    %eax,%edi
    44f6:	e8 3a 5e 00 00       	call   a335 <mk_relop>
    44fb:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4502:	e9 ac 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4507:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    450e:	48 8b 00             	mov    (%rax),%rax
    4511:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4518:	e9 96 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    451d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4524:	48 8b 08             	mov    (%rax),%rcx
    4527:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    452e:	48 83 e8 60          	sub    $0x60,%rax
    4532:	48 8b 10             	mov    (%rax),%rdx
    4535:	8b 05 f5 da 01 00    	mov    0x1daf5(%rip),%eax        # 22030 <line_num>
    453b:	be 34 01 00 00       	mov    $0x134,%esi
    4540:	89 c7                	mov    %eax,%edi
    4542:	e8 ee 5d 00 00       	call   a335 <mk_relop>
    4547:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    454e:	e9 60 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4553:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    455a:	48 8b 00             	mov    (%rax),%rax
    455d:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4564:	e9 4a 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4569:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4570:	48 8b 10             	mov    (%rax),%rdx
    4573:	8b 05 b7 da 01 00    	mov    0x1dab7(%rip),%eax        # 22030 <line_num>
    4579:	b9 00 00 00 00       	mov    $0x0,%ecx
    457e:	be 20 01 00 00       	mov    $0x120,%esi
    4583:	89 c7                	mov    %eax,%edi
    4585:	e8 ab 5d 00 00       	call   a335 <mk_relop>
    458a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4591:	e9 1d 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4596:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    459d:	48 8b 00             	mov    (%rax),%rax
    45a0:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    45a7:	e9 07 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    45ac:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45b3:	48 83 e8 30          	sub    $0x30,%rax
    45b7:	48 8b 00             	mov    (%rax),%rax
    45ba:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    45c1:	e9 ed 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    45c6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45cd:	48 8b 00             	mov    (%rax),%rax
    45d0:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    45d7:	e9 d7 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    45dc:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45e3:	48 8b 08             	mov    (%rax),%rcx
    45e6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45ed:	48 83 e8 60          	sub    $0x60,%rax
    45f1:	48 8b 10             	mov    (%rax),%rdx
    45f4:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45fb:	48 83 e8 30          	sub    $0x30,%rax
    45ff:	8b 30                	mov    (%rax),%esi
    4601:	8b 05 29 da 01 00    	mov    0x1da29(%rip),%eax        # 22030 <line_num>
    4607:	89 c7                	mov    %eax,%edi
    4609:	e8 27 5d 00 00       	call   a335 <mk_relop>
    460e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4615:	e9 99 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    461a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4621:	48 8b 00             	mov    (%rax),%rax
    4624:	be 02 00 00 00       	mov    $0x2,%esi
    4629:	48 89 c7             	mov    %rax,%rdi
    462c:	e8 ca 3b 00 00       	call   81fb <CreateListNode>
    4631:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4638:	e9 76 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    463d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4644:	48 8b 00             	mov    (%rax),%rax
    4647:	be 02 00 00 00       	mov    $0x2,%esi
    464c:	48 89 c7             	mov    %rax,%rdi
    464f:	e8 a7 3b 00 00       	call   81fb <CreateListNode>
    4654:	48 89 c2             	mov    %rax,%rdx
    4657:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    465e:	48 83 e8 60          	sub    $0x60,%rax
    4662:	48 8b 00             	mov    (%rax),%rax
    4665:	48 89 d6             	mov    %rdx,%rsi
    4668:	48 89 c7             	mov    %rax,%rdi
    466b:	e8 57 3c 00 00       	call   82c7 <PushListNodeBack>
    4670:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4677:	e9 37 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    467c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4683:	48 8b 00             	mov    (%rax),%rax
    4686:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    468d:	e9 21 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    4692:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4699:	48 8b 08             	mov    (%rax),%rcx
    469c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46a3:	48 83 e8 60          	sub    $0x60,%rax
    46a7:	48 8b 10             	mov    (%rax),%rdx
    46aa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46b1:	48 83 e8 30          	sub    $0x30,%rax
    46b5:	8b 30                	mov    (%rax),%esi
    46b7:	8b 05 73 d9 01 00    	mov    0x1d973(%rip),%eax        # 22030 <line_num>
    46bd:	89 c7                	mov    %eax,%edi
    46bf:	e8 1c 5d 00 00       	call   a3e0 <mk_addop>
    46c4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    46cb:	e9 e3 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    46d0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46d7:	48 8b 00             	mov    (%rax),%rax
    46da:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    46e1:	e9 cd 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    46e6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46ed:	48 8b 08             	mov    (%rax),%rcx
    46f0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46f7:	48 83 e8 60          	sub    $0x60,%rax
    46fb:	48 8b 10             	mov    (%rax),%rdx
    46fe:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4705:	48 83 e8 30          	sub    $0x30,%rax
    4709:	8b 30                	mov    (%rax),%esi
    470b:	8b 05 1f d9 01 00    	mov    0x1d91f(%rip),%eax        # 22030 <line_num>
    4711:	89 c7                	mov    %eax,%edi
    4713:	e8 2c 5d 00 00       	call   a444 <mk_mulop>
    4718:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    471f:	e9 8f 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    4724:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    472b:	48 8b 10             	mov    (%rax),%rdx
    472e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4735:	8b 40 08             	mov    0x8(%rax),%eax
    4738:	48 89 d6             	mov    %rdx,%rsi
    473b:	89 c7                	mov    %eax,%edi
    473d:	e8 66 5d 00 00       	call   a4a8 <mk_varid>
    4742:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4749:	e9 65 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    474e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4755:	48 83 e8 30          	sub    $0x30,%rax
    4759:	48 8b 10             	mov    (%rax),%rdx
    475c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4763:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4769:	48 8b 08             	mov    (%rax),%rcx
    476c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4773:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4779:	8b 40 08             	mov    0x8(%rax),%eax
    477c:	48 89 ce             	mov    %rcx,%rsi
    477f:	89 c7                	mov    %eax,%edi
    4781:	e8 69 5d 00 00       	call   a4ef <mk_arrayaccess>
    4786:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    478d:	e9 21 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    4792:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4799:	48 83 e8 30          	sub    $0x30,%rax
    479d:	48 8b 10             	mov    (%rax),%rdx
    47a0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    47a7:	48 2d 90 00 00 00    	sub    $0x90,%rax
    47ad:	48 8b 08             	mov    (%rax),%rcx
    47b0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    47b7:	48 2d 90 00 00 00    	sub    $0x90,%rax
    47bd:	8b 40 08             	mov    0x8(%rax),%eax
    47c0:	48 89 ce             	mov    %rcx,%rsi
    47c3:	89 c7                	mov    %eax,%edi
    47c5:	e8 7c 5d 00 00       	call   a546 <mk_functioncall>
    47ca:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    47d1:	e9 dd 00 00 00       	jmp    48b3 <yyparse+0x1caa>
    47d6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    47dd:	8b 10                	mov    (%rax),%edx
    47df:	8b 05 4b d8 01 00    	mov    0x1d84b(%rip),%eax        # 22030 <line_num>
    47e5:	89 d6                	mov    %edx,%esi
    47e7:	89 c7                	mov    %eax,%edi
    47e9:	e8 af 5d 00 00       	call   a59d <mk_inum>
    47ee:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    47f5:	e9 b9 00 00 00       	jmp    48b3 <yyparse+0x1caa>
    47fa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4801:	8b 10                	mov    (%rax),%edx
    4803:	8b 05 27 d8 01 00    	mov    0x1d827(%rip),%eax        # 22030 <line_num>
    4809:	66 0f 6e c2          	movd   %edx,%xmm0
    480d:	89 c7                	mov    %eax,%edi
    480f:	e8 3f 5e 00 00       	call   a653 <mk_rnum>
    4814:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    481b:	e9 93 00 00 00       	jmp    48b3 <yyparse+0x1caa>
    4820:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4827:	48 8b 10             	mov    (%rax),%rdx
    482a:	8b 05 00 d8 01 00    	mov    0x1d800(%rip),%eax        # 22030 <line_num>
    4830:	48 89 d6             	mov    %rdx,%rsi
    4833:	89 c7                	mov    %eax,%edi
    4835:	e8 a7 5d 00 00       	call   a5e1 <mk_string>
    483a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4841:	eb 70                	jmp    48b3 <yyparse+0x1caa>
    4843:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    484a:	48 83 e8 30          	sub    $0x30,%rax
    484e:	8b 00                	mov    (%rax),%eax
    4850:	3d 2f 01 00 00       	cmp    $0x12f,%eax
    4855:	75 23                	jne    487a <yyparse+0x1c71>
    4857:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    485e:	48 8b 10             	mov    (%rax),%rdx
    4861:	8b 05 c9 d7 01 00    	mov    0x1d7c9(%rip),%eax        # 22030 <line_num>
    4867:	48 89 d6             	mov    %rdx,%rsi
    486a:	89 c7                	mov    %eax,%edi
    486c:	e8 28 5b 00 00       	call   a399 <mk_signterm>
    4871:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4878:	eb 39                	jmp    48b3 <yyparse+0x1caa>
    487a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4881:	48 8b 00             	mov    (%rax),%rax
    4884:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    488b:	eb 26                	jmp    48b3 <yyparse+0x1caa>
    488d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4894:	48 83 e8 30          	sub    $0x30,%rax
    4898:	48 8b 00             	mov    (%rax),%rax
    489b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    48a2:	eb 0f                	jmp    48b3 <yyparse+0x1caa>
    48a4:	8b 05 f6 d7 01 00    	mov    0x1d7f6(%rip),%eax        # 220a0 <yylval>
    48aa:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    48b0:	eb 01                	jmp    48b3 <yyparse+0x1caa>
    48b2:	90                   	nop
    48b3:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    48b9:	48 63 d0             	movslq %eax,%rdx
    48bc:	48 89 d0             	mov    %rdx,%rax
    48bf:	48 01 c0             	add    %rax,%rax
    48c2:	48 01 d0             	add    %rdx,%rax
    48c5:	48 c1 e0 04          	shl    $0x4,%rax
    48c9:	48 f7 d8             	neg    %rax
    48cc:	48 01 85 88 d8 ff ff 	add    %rax,-0x2778(%rbp)
    48d3:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    48d9:	48 98                	cltq
    48db:	48 f7 d8             	neg    %rax
    48de:	48 01 85 78 d8 ff ff 	add    %rax,-0x2788(%rbp)
    48e5:	c7 85 48 d8 ff ff 00 	movl   $0x0,-0x27b8(%rbp)
    48ec:	00 00 00
    48ef:	48 83 85 88 d8 ff ff 	addq   $0x30,-0x2778(%rbp)
    48f6:	30
    48f7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    48fe:	48 8b 8d f0 d8 ff ff 	mov    -0x2710(%rbp),%rcx
    4905:	48 8b 9d f8 d8 ff ff 	mov    -0x2708(%rbp),%rbx
    490c:	48 89 08             	mov    %rcx,(%rax)
    490f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    4913:	48 8b 8d 00 d9 ff ff 	mov    -0x2700(%rbp),%rcx
    491a:	48 8b 9d 08 d9 ff ff 	mov    -0x26f8(%rbp),%rbx
    4921:	48 89 48 10          	mov    %rcx,0x10(%rax)
    4925:	48 89 58 18          	mov    %rbx,0x18(%rax)
    4929:	48 8b 8d 10 d9 ff ff 	mov    -0x26f0(%rbp),%rcx
    4930:	48 8b 9d 18 d9 ff ff 	mov    -0x26e8(%rbp),%rbx
    4937:	48 89 48 20          	mov    %rcx,0x20(%rax)
    493b:	48 89 58 28          	mov    %rbx,0x28(%rax)
    493f:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4945:	48 98                	cltq
    4947:	48 8d 15 72 43 01 00 	lea    0x14372(%rip),%rdx        # 18cc0 <yyr1>
    494e:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4952:	0f be c0             	movsbl %al,%eax
    4955:	83 e8 46             	sub    $0x46,%eax
    4958:	89 85 50 d8 ff ff    	mov    %eax,-0x27b0(%rbp)
    495e:	8b 85 50 d8 ff ff    	mov    -0x27b0(%rbp),%eax
    4964:	48 98                	cltq
    4966:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    496a:	48 8d 05 8f 3e 01 00 	lea    0x13e8f(%rip),%rax        # 18800 <yypgoto>
    4971:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4975:	0f bf d0             	movswl %ax,%edx
    4978:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    497f:	0f b6 00             	movzbl (%rax),%eax
    4982:	0f b6 c0             	movzbl %al,%eax
    4985:	01 d0                	add    %edx,%eax
    4987:	89 85 54 d8 ff ff    	mov    %eax,-0x27ac(%rbp)
    498d:	83 bd 54 d8 ff ff 00 	cmpl   $0x0,-0x27ac(%rbp)
    4994:	78 51                	js     49e7 <yyparse+0x1dde>
    4996:	81 bd 54 d8 ff ff c9 	cmpl   $0xc9,-0x27ac(%rbp)
    499d:	00 00 00
    49a0:	7f 45                	jg     49e7 <yyparse+0x1dde>
    49a2:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    49a8:	48 98                	cltq
    49aa:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    49ae:	48 8d 05 8b 40 01 00 	lea    0x1408b(%rip),%rax        # 18a40 <yycheck>
    49b5:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    49b9:	0f bf d0             	movswl %ax,%edx
    49bc:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    49c3:	0f b6 00             	movzbl (%rax),%eax
    49c6:	0f b6 c0             	movzbl %al,%eax
    49c9:	39 c2                	cmp    %eax,%edx
    49cb:	75 1a                	jne    49e7 <yyparse+0x1dde>
    49cd:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    49d3:	48 98                	cltq
    49d5:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    49d9:	48 8d 05 c0 3e 01 00 	lea    0x13ec0(%rip),%rax        # 188a0 <yytable>
    49e0:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    49e4:	98                   	cwtl
    49e5:	eb 16                	jmp    49fd <yyparse+0x1df4>
    49e7:	8b 85 50 d8 ff ff    	mov    -0x27b0(%rbp),%eax
    49ed:	48 98                	cltq
    49ef:	48 8d 15 6a 3e 01 00 	lea    0x13e6a(%rip),%rdx        # 18860 <yydefgoto>
    49f6:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    49fa:	0f b6 c0             	movzbl %al,%eax
    49fd:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    4a03:	e9 c8 e2 ff ff       	jmp    2cd0 <yyparse+0xc7>
    4a08:	90                   	nop
    4a09:	8b 05 71 d6 01 00    	mov    0x1d671(%rip),%eax        # 22080 <yychar>
    4a0f:	83 f8 fe             	cmp    $0xfffffffe,%eax
    4a12:	74 36                	je     4a4a <yyparse+0x1e41>
    4a14:	8b 05 66 d6 01 00    	mov    0x1d666(%rip),%eax        # 22080 <yychar>
    4a1a:	85 c0                	test   %eax,%eax
    4a1c:	78 25                	js     4a43 <yyparse+0x1e3a>
    4a1e:	8b 05 5c d6 01 00    	mov    0x1d65c(%rip),%eax        # 22080 <yychar>
    4a24:	3d 3c 01 00 00       	cmp    $0x13c,%eax
    4a29:	7f 18                	jg     4a43 <yyparse+0x1e3a>
    4a2b:	8b 05 4f d6 01 00    	mov    0x1d64f(%rip),%eax        # 22080 <yychar>
    4a31:	48 98                	cltq
    4a33:	48 8d 15 e6 35 01 00 	lea    0x135e6(%rip),%rdx        # 18020 <yytranslate>
    4a3a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4a3e:	0f be c0             	movsbl %al,%eax
    4a41:	eb 0c                	jmp    4a4f <yyparse+0x1e46>
    4a43:	b8 02 00 00 00       	mov    $0x2,%eax
    4a48:	eb 05                	jmp    4a4f <yyparse+0x1e46>
    4a4a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    4a4f:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    4a55:	83 bd 38 d8 ff ff 00 	cmpl   $0x0,-0x27c8(%rbp)
    4a5c:	0f 85 3f 01 00 00    	jne    4ba1 <yyparse+0x1f98>
    4a62:	8b 05 68 d6 01 00    	mov    0x1d668(%rip),%eax        # 220d0 <yynerrs>
    4a68:	83 c0 01             	add    $0x1,%eax
    4a6b:	89 05 5f d6 01 00    	mov    %eax,0x1d65f(%rip)        # 220d0 <yynerrs>
    4a71:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4a78:	48 89 85 e0 d8 ff ff 	mov    %rax,-0x2720(%rbp)
    4a7f:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    4a85:	89 85 e8 d8 ff ff    	mov    %eax,-0x2718(%rbp)
    4a8b:	48 8d 05 0f 43 01 00 	lea    0x1430f(%rip),%rax        # 18da1 <yyr2+0x61>
    4a92:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    4a99:	48 8d 95 e0 d8 ff ff 	lea    -0x2720(%rbp),%rdx
    4aa0:	48 8d 8d 58 d8 ff ff 	lea    -0x27a8(%rbp),%rcx
    4aa7:	48 8d 85 60 d8 ff ff 	lea    -0x27a0(%rbp),%rax
    4aae:	48 89 ce             	mov    %rcx,%rsi
    4ab1:	48 89 c7             	mov    %rax,%rdi
    4ab4:	e8 cd de ff ff       	call   2986 <yysyntax_error>
    4ab9:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    4abf:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    4ac6:	75 13                	jne    4adb <yyparse+0x1ed2>
    4ac8:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4acf:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    4ad6:	e9 aa 00 00 00       	jmp    4b85 <yyparse+0x1f7c>
    4adb:	83 bd 4c d8 ff ff ff 	cmpl   $0xffffffff,-0x27b4(%rbp)
    4ae2:	0f 85 9d 00 00 00    	jne    4b85 <yyparse+0x1f7c>
    4ae8:	48 8b 95 58 d8 ff ff 	mov    -0x27a8(%rbp),%rdx
    4aef:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4af6:	48 39 c2             	cmp    %rax,%rdx
    4af9:	74 0f                	je     4b0a <yyparse+0x1f01>
    4afb:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4b02:	48 89 c7             	mov    %rax,%rdi
    4b05:	e8 e6 d7 ff ff       	call   22f0 <free@plt>
    4b0a:	48 8b 85 60 d8 ff ff 	mov    -0x27a0(%rbp),%rax
    4b11:	48 89 c7             	mov    %rax,%rdi
    4b14:	e8 b7 d9 ff ff       	call   24d0 <malloc@plt>
    4b19:	48 89 85 58 d8 ff ff 	mov    %rax,-0x27a8(%rbp)
    4b20:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4b27:	48 85 c0             	test   %rax,%rax
    4b2a:	74 36                	je     4b62 <yyparse+0x1f59>
    4b2c:	48 8d 95 e0 d8 ff ff 	lea    -0x2720(%rbp),%rdx
    4b33:	48 8d 8d 58 d8 ff ff 	lea    -0x27a8(%rbp),%rcx
    4b3a:	48 8d 85 60 d8 ff ff 	lea    -0x27a0(%rbp),%rax
    4b41:	48 89 ce             	mov    %rcx,%rsi
    4b44:	48 89 c7             	mov    %rax,%rdi
    4b47:	e8 3a de ff ff       	call   2986 <yysyntax_error>
    4b4c:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    4b52:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4b59:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    4b60:	eb 23                	jmp    4b85 <yyparse+0x1f7c>
    4b62:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4b69:	48 89 85 58 d8 ff ff 	mov    %rax,-0x27a8(%rbp)
    4b70:	48 c7 85 60 d8 ff ff 	movq   $0x80,-0x27a0(%rbp)
    4b77:	80 00 00 00
    4b7b:	c7 85 4c d8 ff ff fe 	movl   $0xfffffffe,-0x27b4(%rbp)
    4b82:	ff ff ff
    4b85:	48 8b 85 b0 d8 ff ff 	mov    -0x2750(%rbp),%rax
    4b8c:	48 89 c7             	mov    %rax,%rdi
    4b8f:	e8 40 03 00 00       	call   4ed4 <yyerror>
    4b94:	83 bd 4c d8 ff ff fe 	cmpl   $0xfffffffe,-0x27b4(%rbp)
    4b9b:	0f 84 cb 01 00 00    	je     4d6c <yyparse+0x2163>
    4ba1:	83 bd 38 d8 ff ff 03 	cmpl   $0x3,-0x27c8(%rbp)
    4ba8:	75 41                	jne    4beb <yyparse+0x1fe2>
    4baa:	8b 05 d0 d4 01 00    	mov    0x1d4d0(%rip),%eax        # 22080 <yychar>
    4bb0:	85 c0                	test   %eax,%eax
    4bb2:	7f 0f                	jg     4bc3 <yyparse+0x1fba>
    4bb4:	8b 05 c6 d4 01 00    	mov    0x1d4c6(%rip),%eax        # 22080 <yychar>
    4bba:	85 c0                	test   %eax,%eax
    4bbc:	75 2d                	jne    4beb <yyparse+0x1fe2>
    4bbe:	e9 97 01 00 00       	jmp    4d5a <yyparse+0x2151>
    4bc3:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    4bc9:	48 8d 15 d0 d4 01 00 	lea    0x1d4d0(%rip),%rdx        # 220a0 <yylval>
    4bd0:	89 c6                	mov    %eax,%esi
    4bd2:	48 8d 05 10 43 01 00 	lea    0x14310(%rip),%rax        # 18ee9 <yyr2+0x1a9>
    4bd9:	48 89 c7             	mov    %rax,%rdi
    4bdc:	e8 00 e0 ff ff       	call   2be1 <yydestruct>
    4be1:	c7 05 95 d4 01 00 fe 	movl   $0xfffffffe,0x1d495(%rip)        # 22080 <yychar>
    4be8:	ff ff ff
    4beb:	90                   	nop
    4bec:	c7 85 38 d8 ff ff 03 	movl   $0x3,-0x27c8(%rbp)
    4bf3:	00 00 00
    4bf6:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    4bfc:	48 98                	cltq
    4bfe:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4c02:	48 8d 05 77 39 01 00 	lea    0x13977(%rip),%rax        # 18580 <yypact>
    4c09:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4c0d:	98                   	cwtl
    4c0e:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    4c14:	83 bd 3c d8 ff ff a2 	cmpl   $0xffffffa2,-0x27c4(%rbp)
    4c1b:	74 60                	je     4c7d <yyparse+0x2074>
    4c1d:	83 85 3c d8 ff ff 01 	addl   $0x1,-0x27c4(%rbp)
    4c24:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    4c2b:	78 50                	js     4c7d <yyparse+0x2074>
    4c2d:	81 bd 3c d8 ff ff c9 	cmpl   $0xc9,-0x27c4(%rbp)
    4c34:	00 00 00
    4c37:	7f 44                	jg     4c7d <yyparse+0x2074>
    4c39:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4c3f:	48 98                	cltq
    4c41:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4c45:	48 8d 05 f4 3d 01 00 	lea    0x13df4(%rip),%rax        # 18a40 <yycheck>
    4c4c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4c50:	66 83 f8 01          	cmp    $0x1,%ax
    4c54:	75 27                	jne    4c7d <yyparse+0x2074>
    4c56:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4c5c:	48 98                	cltq
    4c5e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4c62:	48 8d 05 37 3c 01 00 	lea    0x13c37(%rip),%rax        # 188a0 <yytable>
    4c69:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4c6d:	98                   	cwtl
    4c6e:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    4c74:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    4c7b:	7f 6a                	jg     4ce7 <yyparse+0x20de>
    4c7d:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4c84:	48 3b 85 70 d8 ff ff 	cmp    -0x2790(%rbp),%rax
    4c8b:	0f 84 c8 00 00 00    	je     4d59 <yyparse+0x2150>
    4c91:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    4c97:	48 98                	cltq
    4c99:	48 8d 15 40 3f 01 00 	lea    0x13f40(%rip),%rdx        # 18be0 <yystos>
    4ca0:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4ca4:	0f be c0             	movsbl %al,%eax
    4ca7:	48 8b 95 88 d8 ff ff 	mov    -0x2778(%rbp),%rdx
    4cae:	89 c6                	mov    %eax,%esi
    4cb0:	48 8d 05 44 42 01 00 	lea    0x14244(%rip),%rax        # 18efb <yyr2+0x1bb>
    4cb7:	48 89 c7             	mov    %rax,%rdi
    4cba:	e8 22 df ff ff       	call   2be1 <yydestruct>
    4cbf:	48 83 ad 88 d8 ff ff 	subq   $0x30,-0x2778(%rbp)
    4cc6:	30
    4cc7:	48 83 ad 78 d8 ff ff 	subq   $0x1,-0x2788(%rbp)
    4cce:	01
    4ccf:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4cd6:	0f b6 00             	movzbl (%rax),%eax
    4cd9:	0f b6 c0             	movzbl %al,%eax
    4cdc:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    4ce2:	e9 0f ff ff ff       	jmp    4bf6 <yyparse+0x1fed>
    4ce7:	90                   	nop
    4ce8:	48 83 85 88 d8 ff ff 	addq   $0x30,-0x2778(%rbp)
    4cef:	30
    4cf0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4cf7:	48 8b 0d a2 d3 01 00 	mov    0x1d3a2(%rip),%rcx        # 220a0 <yylval>
    4cfe:	48 8b 1d a3 d3 01 00 	mov    0x1d3a3(%rip),%rbx        # 220a8 <yylval+0x8>
    4d05:	48 89 08             	mov    %rcx,(%rax)
    4d08:	48 89 58 08          	mov    %rbx,0x8(%rax)
    4d0c:	48 8b 0d 9d d3 01 00 	mov    0x1d39d(%rip),%rcx        # 220b0 <yylval+0x10>
    4d13:	48 8b 1d 9e d3 01 00 	mov    0x1d39e(%rip),%rbx        # 220b8 <yylval+0x18>
    4d1a:	48 89 48 10          	mov    %rcx,0x10(%rax)
    4d1e:	48 89 58 18          	mov    %rbx,0x18(%rax)
    4d22:	48 8b 0d 97 d3 01 00 	mov    0x1d397(%rip),%rcx        # 220c0 <yylval+0x20>
    4d29:	48 8b 1d 98 d3 01 00 	mov    0x1d398(%rip),%rbx        # 220c8 <yylval+0x28>
    4d30:	48 89 48 20          	mov    %rcx,0x20(%rax)
    4d34:	48 89 58 28          	mov    %rbx,0x28(%rax)
    4d38:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4d3e:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    4d44:	e9 87 df ff ff       	jmp    2cd0 <yyparse+0xc7>
    4d49:	90                   	nop
    4d4a:	c7 85 40 d8 ff ff 00 	movl   $0x0,-0x27c0(%rbp)
    4d51:	00 00 00
    4d54:	eb 31                	jmp    4d87 <yyparse+0x217e>
    4d56:	90                   	nop
    4d57:	eb 01                	jmp    4d5a <yyparse+0x2151>
    4d59:	90                   	nop
    4d5a:	c7 85 40 d8 ff ff 01 	movl   $0x1,-0x27c0(%rbp)
    4d61:	00 00 00
    4d64:	eb 21                	jmp    4d87 <yyparse+0x217e>
    4d66:	90                   	nop
    4d67:	eb 04                	jmp    4d6d <yyparse+0x2164>
    4d69:	90                   	nop
    4d6a:	eb 01                	jmp    4d6d <yyparse+0x2164>
    4d6c:	90                   	nop
    4d6d:	48 8d 05 96 41 01 00 	lea    0x14196(%rip),%rax        # 18f0a <yyr2+0x1ca>
    4d74:	48 89 c7             	mov    %rax,%rdi
    4d77:	e8 58 01 00 00       	call   4ed4 <yyerror>
    4d7c:	c7 85 40 d8 ff ff 02 	movl   $0x2,-0x27c0(%rbp)
    4d83:	00 00 00
    4d86:	90                   	nop
    4d87:	8b 05 f3 d2 01 00    	mov    0x1d2f3(%rip),%eax        # 22080 <yychar>
    4d8d:	83 f8 fe             	cmp    $0xfffffffe,%eax
    4d90:	74 58                	je     4dea <yyparse+0x21e1>
    4d92:	8b 05 e8 d2 01 00    	mov    0x1d2e8(%rip),%eax        # 22080 <yychar>
    4d98:	85 c0                	test   %eax,%eax
    4d9a:	78 25                	js     4dc1 <yyparse+0x21b8>
    4d9c:	8b 05 de d2 01 00    	mov    0x1d2de(%rip),%eax        # 22080 <yychar>
    4da2:	3d 3c 01 00 00       	cmp    $0x13c,%eax
    4da7:	7f 18                	jg     4dc1 <yyparse+0x21b8>
    4da9:	8b 05 d1 d2 01 00    	mov    0x1d2d1(%rip),%eax        # 22080 <yychar>
    4daf:	48 98                	cltq
    4db1:	48 8d 15 68 32 01 00 	lea    0x13268(%rip),%rdx        # 18020 <yytranslate>
    4db8:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4dbc:	0f be c0             	movsbl %al,%eax
    4dbf:	eb 05                	jmp    4dc6 <yyparse+0x21bd>
    4dc1:	b8 02 00 00 00       	mov    $0x2,%eax
    4dc6:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    4dcc:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    4dd2:	48 8d 15 c7 d2 01 00 	lea    0x1d2c7(%rip),%rdx        # 220a0 <yylval>
    4dd9:	89 c6                	mov    %eax,%esi
    4ddb:	48 8d 05 39 41 01 00 	lea    0x14139(%rip),%rax        # 18f1b <yyr2+0x1db>
    4de2:	48 89 c7             	mov    %rax,%rdi
    4de5:	e8 f7 dd ff ff       	call   2be1 <yydestruct>
    4dea:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    4df0:	48 63 d0             	movslq %eax,%rdx
    4df3:	48 89 d0             	mov    %rdx,%rax
    4df6:	48 01 c0             	add    %rax,%rax
    4df9:	48 01 d0             	add    %rdx,%rax
    4dfc:	48 c1 e0 04          	shl    $0x4,%rax
    4e00:	48 f7 d8             	neg    %rax
    4e03:	48 01 85 88 d8 ff ff 	add    %rax,-0x2778(%rbp)
    4e0a:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    4e10:	48 98                	cltq
    4e12:	48 f7 d8             	neg    %rax
    4e15:	48 01 85 78 d8 ff ff 	add    %rax,-0x2788(%rbp)
    4e1c:	eb 45                	jmp    4e63 <yyparse+0x225a>
    4e1e:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4e25:	0f b6 00             	movzbl (%rax),%eax
    4e28:	0f b6 c0             	movzbl %al,%eax
    4e2b:	48 98                	cltq
    4e2d:	48 8d 15 ac 3d 01 00 	lea    0x13dac(%rip),%rdx        # 18be0 <yystos>
    4e34:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4e38:	0f be c0             	movsbl %al,%eax
    4e3b:	48 8b 95 88 d8 ff ff 	mov    -0x2778(%rbp),%rdx
    4e42:	89 c6                	mov    %eax,%esi
    4e44:	48 8d 05 ee 40 01 00 	lea    0x140ee(%rip),%rax        # 18f39 <yyr2+0x1f9>
    4e4b:	48 89 c7             	mov    %rax,%rdi
    4e4e:	e8 8e dd ff ff       	call   2be1 <yydestruct>
    4e53:	48 83 ad 88 d8 ff ff 	subq   $0x30,-0x2778(%rbp)
    4e5a:	30
    4e5b:	48 83 ad 78 d8 ff ff 	subq   $0x1,-0x2788(%rbp)
    4e62:	01
    4e63:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4e6a:	48 3b 85 70 d8 ff ff 	cmp    -0x2790(%rbp),%rax
    4e71:	75 ab                	jne    4e1e <yyparse+0x2215>
    4e73:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    4e7a:	48 39 85 70 d8 ff ff 	cmp    %rax,-0x2790(%rbp)
    4e81:	74 0f                	je     4e92 <yyparse+0x2289>
    4e83:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    4e8a:	48 89 c7             	mov    %rax,%rdi
    4e8d:	e8 5e d4 ff ff       	call   22f0 <free@plt>
    4e92:	48 8b 95 58 d8 ff ff 	mov    -0x27a8(%rbp),%rdx
    4e99:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4ea0:	48 39 c2             	cmp    %rax,%rdx
    4ea3:	74 0f                	je     4eb4 <yyparse+0x22ab>
    4ea5:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4eac:	48 89 c7             	mov    %rax,%rdi
    4eaf:	e8 3c d4 ff ff       	call   22f0 <free@plt>
    4eb4:	8b 85 40 d8 ff ff    	mov    -0x27c0(%rbp),%eax
    4eba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4ebe:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    4ec5:	00 00
    4ec7:	74 05                	je     4ece <yyparse+0x22c5>
    4ec9:	e8 d2 d4 ff ff       	call   23a0 <__stack_chk_fail@plt>
    4ece:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ed2:	c9                   	leave
    4ed3:	c3                   	ret

0000000000004ed4 <yyerror>:
    4ed4:	f3 0f 1e fa          	endbr64
    4ed8:	55                   	push   %rbp
    4ed9:	48 89 e5             	mov    %rsp,%rbp
    4edc:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
    4ee3:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    4eea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4ef1:	00 00
    4ef3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ef7:	31 c0                	xor    %eax,%eax
    4ef9:	48 8b 05 08 d8 01 00 	mov    0x1d808(%rip),%rax        # 22708 <file_to_parse>
    4f00:	48 85 c0             	test   %rax,%rax
    4f03:	74 09                	je     4f0e <yyerror+0x3a>
    4f05:	48 8b 15 fc d7 01 00 	mov    0x1d7fc(%rip),%rdx        # 22708 <file_to_parse>
    4f0c:	eb 07                	jmp    4f15 <yyerror+0x41>
    4f0e:	48 8d 15 bb 41 01 00 	lea    0x141bb(%rip),%rdx        # 190d0 <yyr2+0x390>
    4f15:	8b 0d 19 d1 01 00    	mov    0x1d119(%rip),%ecx        # 22034 <col_num>
    4f1b:	44 8b 0d 0e d1 01 00 	mov    0x1d10e(%rip),%r9d        # 22030 <line_num>
    4f22:	44 8b 05 b7 d1 01 00 	mov    0x1d1b7(%rip),%r8d        # 220e0 <yyleng>
    4f29:	48 8b 05 d0 d1 01 00 	mov    0x1d1d0(%rip),%rax        # 22100 <yytext>
    4f30:	48 85 c0             	test   %rax,%rax
    4f33:	74 09                	je     4f3e <yyerror+0x6a>
    4f35:	48 8b 05 c4 d1 01 00 	mov    0x1d1c4(%rip),%rax        # 22100 <yytext>
    4f3c:	eb 07                	jmp    4f45 <yyerror+0x71>
    4f3e:	48 8d 05 8b 41 01 00 	lea    0x1418b(%rip),%rax        # 190d0 <yyr2+0x390>
    4f45:	48 8b 3d 14 d1 01 00 	mov    0x1d114(%rip),%rdi        # 22060 <stderr@GLIBC_2.2.5>
    4f4c:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
    4f53:	52                   	push   %rdx
    4f54:	51                   	push   %rcx
    4f55:	48 89 c1             	mov    %rax,%rcx
    4f58:	48 89 f2             	mov    %rsi,%rdx
    4f5b:	48 8d 05 76 41 01 00 	lea    0x14176(%rip),%rax        # 190d8 <yyr2+0x398>
    4f62:	48 89 c6             	mov    %rax,%rsi
    4f65:	b8 00 00 00 00       	mov    $0x0,%eax
    4f6a:	e8 01 d5 ff ff       	call   2470 <fprintf@plt>
    4f6f:	48 83 c4 10          	add    $0x10,%rsp
    4f73:	48 8b 05 e6 d0 01 00 	mov    0x1d0e6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    4f7a:	48 89 c1             	mov    %rax,%rcx
    4f7d:	ba 05 00 00 00       	mov    $0x5,%edx
    4f82:	be 01 00 00 00       	mov    $0x1,%esi
    4f87:	48 8d 05 b0 41 01 00 	lea    0x141b0(%rip),%rax        # 1913e <yyr2+0x3fe>
    4f8e:	48 89 c7             	mov    %rax,%rdi
    4f91:	e8 ba d5 ff ff       	call   2550 <fwrite@plt>
    4f96:	48 8b 05 6b d7 01 00 	mov    0x1d76b(%rip),%rax        # 22708 <file_to_parse>
    4f9d:	48 85 c0             	test   %rax,%rax
    4fa0:	74 33                	je     4fd5 <yyerror+0x101>
    4fa2:	48 8b 05 5f d7 01 00 	mov    0x1d75f(%rip),%rax        # 22708 <file_to_parse>
    4fa9:	0f b6 00             	movzbl (%rax),%eax
    4fac:	84 c0                	test   %al,%al
    4fae:	74 25                	je     4fd5 <yyerror+0x101>
    4fb0:	48 8b 15 51 d7 01 00 	mov    0x1d751(%rip),%rdx        # 22708 <file_to_parse>
    4fb7:	48 8b 05 a2 d0 01 00 	mov    0x1d0a2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    4fbe:	48 8d 0d 7f 41 01 00 	lea    0x1417f(%rip),%rcx        # 19144 <yyr2+0x404>
    4fc5:	48 89 ce             	mov    %rcx,%rsi
    4fc8:	48 89 c7             	mov    %rax,%rdi
    4fcb:	b8 00 00 00 00       	mov    $0x0,%eax
    4fd0:	e8 9b d4 ff ff       	call   2470 <fprintf@plt>
    4fd5:	48 8b 05 24 d1 01 00 	mov    0x1d124(%rip),%rax        # 22100 <yytext>
    4fdc:	48 85 c0             	test   %rax,%rax
    4fdf:	74 08                	je     4fe9 <yyerror+0x115>
    4fe1:	8b 05 f9 d0 01 00    	mov    0x1d0f9(%rip),%eax        # 220e0 <yyleng>
    4fe7:	eb 05                	jmp    4fee <yyerror+0x11a>
    4fe9:	b8 00 00 00 00       	mov    $0x0,%eax
    4fee:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
    4ff4:	8b 05 3a d0 01 00    	mov    0x1d03a(%rip),%eax        # 22034 <col_num>
    4ffa:	39 85 d8 fe ff ff    	cmp    %eax,-0x128(%rbp)
    5000:	7d 11                	jge    5013 <yyerror+0x13f>
    5002:	8b 05 2c d0 01 00    	mov    0x1d02c(%rip),%eax        # 22034 <col_num>
    5008:	2b 85 d8 fe ff ff    	sub    -0x128(%rbp),%eax
    500e:	83 c0 01             	add    $0x1,%eax
    5011:	eb 05                	jmp    5018 <yyerror+0x144>
    5013:	b8 01 00 00 00       	mov    $0x1,%eax
    5018:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
    501e:	8b 15 0c d0 01 00    	mov    0x1d00c(%rip),%edx        # 22030 <line_num>
    5024:	48 8b 05 35 d0 01 00 	mov    0x1d035(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    502b:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
    5031:	48 8d 35 15 41 01 00 	lea    0x14115(%rip),%rsi        # 1914d <yyr2+0x40d>
    5038:	48 89 c7             	mov    %rax,%rdi
    503b:	b8 00 00 00 00       	mov    $0x0,%eax
    5040:	e8 2b d4 ff ff       	call   2470 <fprintf@plt>
    5045:	48 8b 05 14 d0 01 00 	mov    0x1d014(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    504c:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    5053:	48 8d 0d 09 41 01 00 	lea    0x14109(%rip),%rcx        # 19163 <yyr2+0x423>
    505a:	48 89 ce             	mov    %rcx,%rsi
    505d:	48 89 c7             	mov    %rax,%rdi
    5060:	b8 00 00 00 00       	mov    $0x0,%eax
    5065:	e8 06 d4 ff ff       	call   2470 <fprintf@plt>
    506a:	48 8b 05 8f d0 01 00 	mov    0x1d08f(%rip),%rax        # 22100 <yytext>
    5071:	48 85 c0             	test   %rax,%rax
    5074:	0f 84 0e 01 00 00    	je     5188 <yyerror+0x2b4>
    507a:	48 8b 05 7f d0 01 00 	mov    0x1d07f(%rip),%rax        # 22100 <yytext>
    5081:	0f b6 00             	movzbl (%rax),%eax
    5084:	84 c0                	test   %al,%al
    5086:	0f 84 fc 00 00 00    	je     5188 <yyerror+0x2b4>
    508c:	48 8b 0d 6d d0 01 00 	mov    0x1d06d(%rip),%rcx        # 22100 <yytext>
    5093:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    509a:	ba 63 00 00 00       	mov    $0x63,%edx
    509f:	48 89 ce             	mov    %rcx,%rsi
    50a2:	48 89 c7             	mov    %rax,%rdi
    50a5:	e8 66 d2 ff ff       	call   2310 <strncpy@plt>
    50aa:	c6 85 53 ff ff ff 00 	movb   $0x0,-0xad(%rbp)
    50b1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    50b8:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    50bf:	eb 58                	jmp    5119 <yyerror+0x245>
    50c1:	e8 ca d4 ff ff       	call   2590 <__ctype_b_loc@plt>
    50c6:	48 8b 10             	mov    (%rax),%rdx
    50c9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    50d0:	0f b6 00             	movzbl (%rax),%eax
    50d3:	0f b6 c0             	movzbl %al,%eax
    50d6:	48 01 c0             	add    %rax,%rax
    50d9:	48 01 d0             	add    %rdx,%rax
    50dc:	0f b7 00             	movzwl (%rax),%eax
    50df:	0f b7 c0             	movzwl %ax,%eax
    50e2:	25 00 40 00 00       	and    $0x4000,%eax
    50e7:	85 c0                	test   %eax,%eax
    50e9:	75 26                	jne    5111 <yyerror+0x23d>
    50eb:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    50f2:	0f b6 00             	movzbl (%rax),%eax
    50f5:	3c 0a                	cmp    $0xa,%al
    50f7:	74 18                	je     5111 <yyerror+0x23d>
    50f9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5100:	0f b6 00             	movzbl (%rax),%eax
    5103:	3c 09                	cmp    $0x9,%al
    5105:	74 0a                	je     5111 <yyerror+0x23d>
    5107:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    510e:	c6 00 3f             	movb   $0x3f,(%rax)
    5111:	48 83 85 e0 fe ff ff 	addq   $0x1,-0x120(%rbp)
    5118:	01
    5119:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5120:	0f b6 00             	movzbl (%rax),%eax
    5123:	84 c0                	test   %al,%al
    5125:	75 9a                	jne    50c1 <yyerror+0x1ed>
    5127:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    512e:	48 8d 15 34 40 01 00 	lea    0x14034(%rip),%rdx        # 19169 <yyr2+0x429>
    5135:	48 89 d6             	mov    %rdx,%rsi
    5138:	48 89 c7             	mov    %rax,%rdi
    513b:	e8 40 d4 ff ff       	call   2580 <strstr@plt>
    5140:	48 85 c0             	test   %rax,%rax
    5143:	74 1e                	je     5163 <yyerror+0x28f>
    5145:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    514c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    5153:	48 89 d6             	mov    %rdx,%rsi
    5156:	48 89 c7             	mov    %rax,%rdi
    5159:	e8 22 d4 ff ff       	call   2580 <strstr@plt>
    515e:	48 85 c0             	test   %rax,%rax
    5161:	75 25                	jne    5188 <yyerror+0x2b4>
    5163:	48 8b 05 f6 ce 01 00 	mov    0x1cef6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    516a:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    5171:	48 8d 0d fc 3f 01 00 	lea    0x13ffc(%rip),%rcx        # 19174 <yyr2+0x434>
    5178:	48 89 ce             	mov    %rcx,%rsi
    517b:	48 89 c7             	mov    %rax,%rdi
    517e:	b8 00 00 00 00       	mov    $0x0,%eax
    5183:	e8 e8 d2 ff ff       	call   2470 <fprintf@plt>
    5188:	48 8b 05 79 d5 01 00 	mov    0x1d579(%rip),%rax        # 22708 <file_to_parse>
    518f:	48 85 c0             	test   %rax,%rax
    5192:	0f 84 7e 01 00 00    	je     5316 <yyerror+0x442>
    5198:	48 8b 05 69 d5 01 00 	mov    0x1d569(%rip),%rax        # 22708 <file_to_parse>
    519f:	48 8d 15 e8 3f 01 00 	lea    0x13fe8(%rip),%rdx        # 1918e <yyr2+0x44e>
    51a6:	48 89 d6             	mov    %rdx,%rsi
    51a9:	48 89 c7             	mov    %rax,%rdi
    51ac:	e8 df d2 ff ff       	call   2490 <fopen64@plt>
    51b1:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    51b8:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
    51bf:	00
    51c0:	0f 84 50 01 00 00    	je     5316 <yyerror+0x442>
    51c6:	c7 85 d0 fe ff ff 01 	movl   $0x1,-0x130(%rbp)
    51cd:	00 00 00
    51d0:	eb 07                	jmp    51d9 <yyerror+0x305>
    51d2:	83 85 d0 fe ff ff 01 	addl   $0x1,-0x130(%rbp)
    51d9:	8b 05 51 ce 01 00    	mov    0x1ce51(%rip),%eax        # 22030 <line_num>
    51df:	39 85 d0 fe ff ff    	cmp    %eax,-0x130(%rbp)
    51e5:	7d 20                	jge    5207 <yyerror+0x333>
    51e7:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    51ee:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    51f5:	be 00 01 00 00       	mov    $0x100,%esi
    51fa:	48 89 c7             	mov    %rax,%rdi
    51fd:	e8 3e d2 ff ff       	call   2440 <fgets@plt>
    5202:	48 85 c0             	test   %rax,%rax
    5205:	75 cb                	jne    51d2 <yyerror+0x2fe>
    5207:	8b 05 23 ce 01 00    	mov    0x1ce23(%rip),%eax        # 22030 <line_num>
    520d:	39 85 d0 fe ff ff    	cmp    %eax,-0x130(%rbp)
    5213:	0f 85 ee 00 00 00    	jne    5307 <yyerror+0x433>
    5219:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    5220:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5227:	be 00 01 00 00       	mov    $0x100,%esi
    522c:	48 89 c7             	mov    %rax,%rdi
    522f:	e8 0c d2 ff ff       	call   2440 <fgets@plt>
    5234:	48 85 c0             	test   %rax,%rax
    5237:	0f 84 ca 00 00 00    	je     5307 <yyerror+0x433>
    523d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5244:	48 8d 15 45 3f 01 00 	lea    0x13f45(%rip),%rdx        # 19190 <yyr2+0x450>
    524b:	48 89 d6             	mov    %rdx,%rsi
    524e:	48 89 c7             	mov    %rax,%rdi
    5251:	e8 da d1 ff ff       	call   2430 <strcspn@plt>
    5256:	c6 84 05 f0 fe ff ff 	movb   $0x0,-0x110(%rbp,%rax,1)
    525d:	00
    525e:	48 8b 05 fb cd 01 00 	mov    0x1cdfb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    5265:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    526c:	48 8d 0d 20 3f 01 00 	lea    0x13f20(%rip),%rcx        # 19193 <yyr2+0x453>
    5273:	48 89 ce             	mov    %rcx,%rsi
    5276:	48 89 c7             	mov    %rax,%rdi
    5279:	b8 00 00 00 00       	mov    $0x0,%eax
    527e:	e8 ed d1 ff ff       	call   2470 <fprintf@plt>
    5283:	83 bd dc fe ff ff 00 	cmpl   $0x0,-0x124(%rbp)
    528a:	7e 7b                	jle    5307 <yyerror+0x433>
    528c:	48 8b 05 cd cd 01 00 	mov    0x1cdcd(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    5293:	48 89 c1             	mov    %rax,%rcx
    5296:	ba 0b 00 00 00       	mov    $0xb,%edx
    529b:	be 01 00 00 00       	mov    $0x1,%esi
    52a0:	48 8d 05 fb 3e 01 00 	lea    0x13efb(%rip),%rax        # 191a2 <yyr2+0x462>
    52a7:	48 89 c7             	mov    %rax,%rdi
    52aa:	e8 a1 d2 ff ff       	call   2550 <fwrite@plt>
    52af:	c7 85 d4 fe ff ff 01 	movl   $0x1,-0x12c(%rbp)
    52b6:	00 00 00
    52b9:	eb 1b                	jmp    52d6 <yyerror+0x402>
    52bb:	48 8b 05 9e cd 01 00 	mov    0x1cd9e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    52c2:	48 89 c6             	mov    %rax,%rsi
    52c5:	bf 20 00 00 00       	mov    $0x20,%edi
    52ca:	e8 51 d1 ff ff       	call   2420 <fputc@plt>
    52cf:	83 85 d4 fe ff ff 01 	addl   $0x1,-0x12c(%rbp)
    52d6:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
    52dc:	3b 85 dc fe ff ff    	cmp    -0x124(%rbp),%eax
    52e2:	7c d7                	jl     52bb <yyerror+0x3e7>
    52e4:	48 8b 05 75 cd 01 00 	mov    0x1cd75(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    52eb:	48 89 c1             	mov    %rax,%rcx
    52ee:	ba 02 00 00 00       	mov    $0x2,%edx
    52f3:	be 01 00 00 00       	mov    $0x1,%esi
    52f8:	48 8d 05 af 3e 01 00 	lea    0x13eaf(%rip),%rax        # 191ae <yyr2+0x46e>
    52ff:	48 89 c7             	mov    %rax,%rdi
    5302:	e8 49 d2 ff ff       	call   2550 <fwrite@plt>
    5307:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    530e:	48 89 c7             	mov    %rax,%rdi
    5311:	e8 6a d0 ff ff       	call   2380 <fclose@plt>
    5316:	48 8b 05 43 cd 01 00 	mov    0x1cd43(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    531d:	48 89 c6             	mov    %rax,%rsi
    5320:	bf 0a 00 00 00       	mov    $0xa,%edi
    5325:	e8 f6 d0 ff ff       	call   2420 <fputc@plt>
    532a:	90                   	nop
    532b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5336:	00 00
    5338:	74 05                	je     533f <yyerror+0x46b>
    533a:	e8 61 d0 ff ff       	call   23a0 <__stack_chk_fail@plt>
    533f:	c9                   	leave
    5340:	c3                   	ret

0000000000005341 <is_defined>:
    5341:	f3 0f 1e fa          	endbr64
    5345:	55                   	push   %rbp
    5346:	48 89 e5             	mov    %rsp,%rbp
    5349:	48 83 ec 20          	sub    $0x20,%rsp
    534d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5351:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    5358:	eb 36                	jmp    5390 <is_defined+0x4f>
    535a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    535d:	48 98                	cltq
    535f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5366:	00
    5367:	48 8d 05 b2 cc 01 00 	lea    0x1ccb2(%rip),%rax        # 22020 <defined_symbols>
    536e:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    5372:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5376:	48 89 d6             	mov    %rdx,%rsi
    5379:	48 89 c7             	mov    %rax,%rdi
    537c:	e8 cf d0 ff ff       	call   2450 <strcmp@plt>
    5381:	85 c0                	test   %eax,%eax
    5383:	75 07                	jne    538c <is_defined+0x4b>
    5385:	b8 01 00 00 00       	mov    $0x1,%eax
    538a:	eb 26                	jmp    53b2 <is_defined+0x71>
    538c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    5390:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5393:	48 98                	cltq
    5395:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    539c:	00
    539d:	48 8d 05 7c cc 01 00 	lea    0x1cc7c(%rip),%rax        # 22020 <defined_symbols>
    53a4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    53a8:	48 85 c0             	test   %rax,%rax
    53ab:	75 ad                	jne    535a <is_defined+0x19>
    53ad:	b8 00 00 00 00       	mov    $0x0,%eax
    53b2:	c9                   	leave
    53b3:	c3                   	ret

00000000000053b4 <yylex>:
    53b4:	f3 0f 1e fa          	endbr64
    53b8:	55                   	push   %rbp
    53b9:	48 89 e5             	mov    %rsp,%rbp
    53bc:	53                   	push   %rbx
    53bd:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    53c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    53cb:	00 00
    53cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    53d1:	31 c0                	xor    %eax,%eax
    53d3:	8b 05 07 d3 01 00    	mov    0x1d307(%rip),%eax        # 226e0 <yy_init>
    53d9:	85 c0                	test   %eax,%eax
    53db:	0f 85 b2 00 00 00    	jne    5493 <yylex+0xdf>
    53e1:	c7 05 f5 d2 01 00 01 	movl   $0x1,0x1d2f5(%rip)        # 226e0 <yy_init>
    53e8:	00 00 00
    53eb:	8b 05 f3 d2 01 00    	mov    0x1d2f3(%rip),%eax        # 226e4 <yy_start>
    53f1:	85 c0                	test   %eax,%eax
    53f3:	75 0a                	jne    53ff <yylex+0x4b>
    53f5:	c7 05 e5 d2 01 00 01 	movl   $0x1,0x1d2e5(%rip)        # 226e4 <yy_start>
    53fc:	00 00 00
    53ff:	48 8b 05 e2 cc 01 00 	mov    0x1cce2(%rip),%rax        # 220e8 <yyin>
    5406:	48 85 c0             	test   %rax,%rax
    5409:	75 0e                	jne    5419 <yylex+0x65>
    540b:	48 8b 05 3e cc 01 00 	mov    0x1cc3e(%rip),%rax        # 22050 <stdin@GLIBC_2.2.5>
    5412:	48 89 05 cf cc 01 00 	mov    %rax,0x1cccf(%rip)        # 220e8 <yyin>
    5419:	48 8b 05 d0 cc 01 00 	mov    0x1ccd0(%rip),%rax        # 220f0 <yyout>
    5420:	48 85 c0             	test   %rax,%rax
    5423:	75 0e                	jne    5433 <yylex+0x7f>
    5425:	48 8b 05 14 cc 01 00 	mov    0x1cc14(%rip),%rax        # 22040 <stdout@GLIBC_2.2.5>
    542c:	48 89 05 bd cc 01 00 	mov    %rax,0x1ccbd(%rip)        # 220f0 <yyout>
    5433:	48 8b 05 8e d2 01 00 	mov    0x1d28e(%rip),%rax        # 226c8 <yy_buffer_stack>
    543a:	48 85 c0             	test   %rax,%rax
    543d:	74 1d                	je     545c <yylex+0xa8>
    543f:	48 8b 05 82 d2 01 00 	mov    0x1d282(%rip),%rax        # 226c8 <yy_buffer_stack>
    5446:	48 8b 15 6b d2 01 00 	mov    0x1d26b(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    544d:	48 c1 e2 03          	shl    $0x3,%rdx
    5451:	48 01 d0             	add    %rdx,%rax
    5454:	48 8b 00             	mov    (%rax),%rax
    5457:	48 85 c0             	test   %rax,%rax
    545a:	75 32                	jne    548e <yylex+0xda>
    545c:	e8 59 21 00 00       	call   75ba <yyensure_buffer_stack>
    5461:	48 8b 05 80 cc 01 00 	mov    0x1cc80(%rip),%rax        # 220e8 <yyin>
    5468:	48 8b 15 59 d2 01 00 	mov    0x1d259(%rip),%rdx        # 226c8 <yy_buffer_stack>
    546f:	48 8b 0d 42 d2 01 00 	mov    0x1d242(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    5476:	48 c1 e1 03          	shl    $0x3,%rcx
    547a:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
    547e:	be 00 40 00 00       	mov    $0x4000,%esi
    5483:	48 89 c7             	mov    %rax,%rdi
    5486:	e8 b1 1c 00 00       	call   713c <yy_create_buffer>
    548b:	48 89 03             	mov    %rax,(%rbx)
    548e:	e8 1a 1c 00 00       	call   70ad <yy_load_buffer_state>
    5493:	48 8b 05 3e d2 01 00 	mov    0x1d23e(%rip),%rax        # 226d8 <yy_c_buf_p>
    549a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    54a1:	0f b6 15 28 d2 01 00 	movzbl 0x1d228(%rip),%edx        # 226d0 <yy_hold_char>
    54a8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    54af:	88 10                	mov    %dl,(%rax)
    54b1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    54b8:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    54bf:	8b 05 1f d2 01 00    	mov    0x1d21f(%rip),%eax        # 226e4 <yy_start>
    54c5:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    54cb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    54d2:	0f b6 00             	movzbl (%rax),%eax
    54d5:	0f b6 c0             	movzbl %al,%eax
    54d8:	48 98                	cltq
    54da:	48 8d 15 bf 3e 01 00 	lea    0x13ebf(%rip),%rdx        # 193a0 <yy_ec>
    54e1:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    54e5:	88 85 43 ff ff ff    	mov    %al,-0xbd(%rbp)
    54eb:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    54f1:	48 98                	cltq
    54f3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    54f7:	48 8d 05 c2 3c 01 00 	lea    0x13cc2(%rip),%rax        # 191c0 <yy_accept>
    54fe:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5502:	66 85 c0             	test   %ax,%ax
    5505:	74 60                	je     5567 <yylex+0x1b3>
    5507:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    550d:	89 05 d9 d1 01 00    	mov    %eax,0x1d1d9(%rip)        # 226ec <yy_last_accepting_state>
    5513:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    551a:	48 89 05 cf d1 01 00 	mov    %rax,0x1d1cf(%rip)        # 226f0 <yy_last_accepting_cpos>
    5521:	eb 44                	jmp    5567 <yylex+0x1b3>
    5523:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    5529:	48 98                	cltq
    552b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    552f:	48 8d 05 aa 41 01 00 	lea    0x141aa(%rip),%rax        # 196e0 <yy_def>
    5536:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    553a:	98                   	cwtl
    553b:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    5541:	81 bd 44 ff ff ff e4 	cmpl   $0xe4,-0xbc(%rbp)
    5548:	00 00 00
    554b:	7e 1a                	jle    5567 <yylex+0x1b3>
    554d:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    5554:	48 98                	cltq
    5556:	48 8d 15 43 3f 01 00 	lea    0x13f43(%rip),%rdx        # 194a0 <yy_meta>
    555d:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    5561:	88 85 43 ff ff ff    	mov    %al,-0xbd(%rbp)
    5567:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    556d:	48 98                	cltq
    556f:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5573:	48 8d 05 66 3f 01 00 	lea    0x13f66(%rip),%rax        # 194e0 <yy_base>
    557a:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    557e:	0f bf d0             	movswl %ax,%edx
    5581:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    5588:	01 d0                	add    %edx,%eax
    558a:	48 98                	cltq
    558c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5590:	48 8d 05 e9 45 01 00 	lea    0x145e9(%rip),%rax        # 19b80 <yy_chk>
    5597:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    559b:	98                   	cwtl
    559c:	39 85 44 ff ff ff    	cmp    %eax,-0xbc(%rbp)
    55a2:	0f 85 7b ff ff ff    	jne    5523 <yylex+0x16f>
    55a8:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    55ae:	48 98                	cltq
    55b0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    55b4:	48 8d 05 25 3f 01 00 	lea    0x13f25(%rip),%rax        # 194e0 <yy_base>
    55bb:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    55bf:	0f bf d0             	movswl %ax,%edx
    55c2:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    55c9:	01 d0                	add    %edx,%eax
    55cb:	48 98                	cltq
    55cd:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    55d1:	48 8d 05 08 43 01 00 	lea    0x14308(%rip),%rax        # 198e0 <yy_nxt>
    55d8:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    55dc:	98                   	cwtl
    55dd:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    55e3:	48 83 85 58 ff ff ff 	addq   $0x1,-0xa8(%rbp)
    55ea:	01
    55eb:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    55f1:	48 98                	cltq
    55f3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    55f7:	48 8d 05 e2 3e 01 00 	lea    0x13ee2(%rip),%rax        # 194e0 <yy_base>
    55fe:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5602:	66 3d 20 01          	cmp    $0x120,%ax
    5606:	0f 85 bf fe ff ff    	jne    54cb <yylex+0x117>
    560c:	90                   	nop
    560d:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    5613:	48 98                	cltq
    5615:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5619:	48 8d 05 a0 3b 01 00 	lea    0x13ba0(%rip),%rax        # 191c0 <yy_accept>
    5620:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5624:	98                   	cwtl
    5625:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    562b:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
    5632:	75 38                	jne    566c <yylex+0x2b8>
    5634:	48 8b 05 b5 d0 01 00 	mov    0x1d0b5(%rip),%rax        # 226f0 <yy_last_accepting_cpos>
    563b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5642:	8b 05 a4 d0 01 00    	mov    0x1d0a4(%rip),%eax        # 226ec <yy_last_accepting_state>
    5648:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    564e:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    5654:	48 98                	cltq
    5656:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    565a:	48 8d 05 5f 3b 01 00 	lea    0x13b5f(%rip),%rax        # 191c0 <yy_accept>
    5661:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5665:	98                   	cwtl
    5666:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    566c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5673:	48 89 05 86 ca 01 00 	mov    %rax,0x1ca86(%rip)        # 22100 <yytext>
    567a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5681:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
    5688:	89 05 52 ca 01 00    	mov    %eax,0x1ca52(%rip)        # 220e0 <yyleng>
    568e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5695:	0f b6 00             	movzbl (%rax),%eax
    5698:	88 05 32 d0 01 00    	mov    %al,0x1d032(%rip)        # 226d0 <yy_hold_char>
    569e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    56a5:	c6 00 00             	movb   $0x0,(%rax)
    56a8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    56af:	48 89 05 22 d0 01 00 	mov    %rax,0x1d022(%rip)        # 226d8 <yy_c_buf_p>
    56b6:	83 bd 48 ff ff ff 45 	cmpl   $0x45,-0xb8(%rbp)
    56bd:	0f 87 69 0c 00 00    	ja     632c <yylex+0xf78>
    56c3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    56c9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    56d0:	00
    56d1:	48 8d 05 bc 47 01 00 	lea    0x147bc(%rip),%rax        # 19e94 <yy_chk+0x314>
    56d8:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    56db:	48 98                	cltq
    56dd:	48 8d 15 b0 47 01 00 	lea    0x147b0(%rip),%rdx        # 19e94 <yy_chk+0x314>
    56e4:	48 01 d0             	add    %rdx,%rax
    56e7:	3e ff e0             	notrack jmp *%rax
    56ea:	0f b6 15 df cf 01 00 	movzbl 0x1cfdf(%rip),%edx        # 226d0 <yy_hold_char>
    56f1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    56f8:	88 10                	mov    %dl,(%rax)
    56fa:	48 8b 05 ef cf 01 00 	mov    0x1cfef(%rip),%rax        # 226f0 <yy_last_accepting_cpos>
    5701:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5708:	8b 05 de cf 01 00    	mov    0x1cfde(%rip),%eax        # 226ec <yy_last_accepting_state>
    570e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    5714:	e9 f4 fe ff ff       	jmp    560d <yylex+0x259>
    5719:	0f b6 15 b0 cf 01 00 	movzbl 0x1cfb0(%rip),%edx        # 226d0 <yy_hold_char>
    5720:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5727:	88 10                	mov    %dl,(%rax)
    5729:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5730:	48 83 c0 01          	add    $0x1,%rax
    5734:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    573b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5742:	48 89 05 8f cf 01 00 	mov    %rax,0x1cf8f(%rip)        # 226d8 <yy_c_buf_p>
    5749:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5750:	48 89 05 a9 c9 01 00 	mov    %rax,0x1c9a9(%rip)        # 22100 <yytext>
    5757:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    575e:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
    5765:	89 05 75 c9 01 00    	mov    %eax,0x1c975(%rip)        # 220e0 <yyleng>
    576b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5772:	0f b6 00             	movzbl (%rax),%eax
    5775:	88 05 55 cf 01 00    	mov    %al,0x1cf55(%rip)        # 226d0 <yy_hold_char>
    577b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5782:	c6 00 00             	movb   $0x0,(%rax)
    5785:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    578c:	48 89 05 45 cf 01 00 	mov    %rax,0x1cf45(%rip)        # 226d8 <yy_c_buf_p>
    5793:	c7 05 47 cf 01 00 05 	movl   $0x5,0x1cf47(%rip)        # 226e4 <yy_start>
    579a:	00 00 00
    579d:	e9 ca 0b 00 00       	jmp    636c <yylex+0xfb8>
    57a2:	c7 05 38 cf 01 00 01 	movl   $0x1,0x1cf38(%rip)        # 226e4 <yy_start>
    57a9:	00 00 00
    57ac:	e9 bb 0b 00 00       	jmp    636c <yylex+0xfb8>
    57b1:	48 8b 05 48 c9 01 00 	mov    0x1c948(%rip),%rax        # 22100 <yytext>
    57b8:	0f b6 00             	movzbl (%rax),%eax
    57bb:	3c 0a                	cmp    $0xa,%al
    57bd:	0f 85 7e 0b 00 00    	jne    6341 <yylex+0xf8d>
    57c3:	8b 05 67 c8 01 00    	mov    0x1c867(%rip),%eax        # 22030 <line_num>
    57c9:	83 c0 01             	add    $0x1,%eax
    57cc:	89 05 5e c8 01 00    	mov    %eax,0x1c85e(%rip)        # 22030 <line_num>
    57d2:	e9 6a 0b 00 00       	jmp    6341 <yylex+0xf8d>
    57d7:	48 8b 05 22 c9 01 00 	mov    0x1c922(%rip),%rax        # 22100 <yytext>
    57de:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    57e2:	48 8d 0d 3f 46 01 00 	lea    0x1463f(%rip),%rcx        # 19e28 <yy_chk+0x2a8>
    57e9:	48 89 ce             	mov    %rcx,%rsi
    57ec:	48 89 c7             	mov    %rax,%rdi
    57ef:	b8 00 00 00 00       	mov    $0x0,%eax
    57f4:	e8 e7 cc ff ff       	call   24e0 <__isoc99_sscanf@plt>
    57f9:	8b 05 b1 ce 01 00    	mov    0x1ceb1(%rip),%eax        # 226b0 <if_stack_ptr>
    57ff:	85 c0                	test   %eax,%eax
    5801:	7e 4a                	jle    584d <yylex+0x499>
    5803:	8b 05 a7 ce 01 00    	mov    0x1cea7(%rip),%eax        # 226b0 <if_stack_ptr>
    5809:	83 e8 01             	sub    $0x1,%eax
    580c:	48 98                	cltq
    580e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5815:	00
    5816:	48 8d 05 03 cd 01 00 	lea    0x1cd03(%rip),%rax        # 22520 <if_stack>
    581d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5820:	85 c0                	test   %eax,%eax
    5822:	75 29                	jne    584d <yylex+0x499>
    5824:	8b 05 86 ce 01 00    	mov    0x1ce86(%rip),%eax        # 226b0 <if_stack_ptr>
    582a:	8d 50 01             	lea    0x1(%rax),%edx
    582d:	89 15 7d ce 01 00    	mov    %edx,0x1ce7d(%rip)        # 226b0 <if_stack_ptr>
    5833:	48 98                	cltq
    5835:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    583c:	00
    583d:	48 8d 05 dc cc 01 00 	lea    0x1ccdc(%rip),%rax        # 22520 <if_stack>
    5844:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
    584b:	eb 30                	jmp    587d <yylex+0x4c9>
    584d:	8b 1d 5d ce 01 00    	mov    0x1ce5d(%rip),%ebx        # 226b0 <if_stack_ptr>
    5853:	8d 43 01             	lea    0x1(%rbx),%eax
    5856:	89 05 54 ce 01 00    	mov    %eax,0x1ce54(%rip)        # 226b0 <if_stack_ptr>
    585c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5860:	48 89 c7             	mov    %rax,%rdi
    5863:	e8 d9 fa ff ff       	call   5341 <is_defined>
    5868:	48 63 d3             	movslq %ebx,%rdx
    586b:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    5872:	00
    5873:	48 8d 15 a6 cc 01 00 	lea    0x1cca6(%rip),%rdx        # 22520 <if_stack>
    587a:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
    587d:	8b 05 2d ce 01 00    	mov    0x1ce2d(%rip),%eax        # 226b0 <if_stack_ptr>
    5883:	83 e8 01             	sub    $0x1,%eax
    5886:	48 98                	cltq
    5888:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    588f:	00
    5890:	48 8d 05 89 cc 01 00 	lea    0x1cc89(%rip),%rax        # 22520 <if_stack>
    5897:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    589a:	85 c0                	test   %eax,%eax
    589c:	0f 85 a5 0a 00 00    	jne    6347 <yylex+0xf93>
    58a2:	c7 05 38 ce 01 00 07 	movl   $0x7,0x1ce38(%rip)        # 226e4 <yy_start>
    58a9:	00 00 00
    58ac:	e9 96 0a 00 00       	jmp    6347 <yylex+0xf93>
    58b1:	48 8b 05 48 c8 01 00 	mov    0x1c848(%rip),%rax        # 22100 <yytext>
    58b8:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    58bc:	48 8d 0d 73 45 01 00 	lea    0x14573(%rip),%rcx        # 19e36 <yy_chk+0x2b6>
    58c3:	48 89 ce             	mov    %rcx,%rsi
    58c6:	48 89 c7             	mov    %rax,%rdi
    58c9:	b8 00 00 00 00       	mov    $0x0,%eax
    58ce:	e8 0d cc ff ff       	call   24e0 <__isoc99_sscanf@plt>
    58d3:	8b 05 d7 cd 01 00    	mov    0x1cdd7(%rip),%eax        # 226b0 <if_stack_ptr>
    58d9:	85 c0                	test   %eax,%eax
    58db:	7e 4a                	jle    5927 <yylex+0x573>
    58dd:	8b 05 cd cd 01 00    	mov    0x1cdcd(%rip),%eax        # 226b0 <if_stack_ptr>
    58e3:	83 e8 01             	sub    $0x1,%eax
    58e6:	48 98                	cltq
    58e8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    58ef:	00
    58f0:	48 8d 05 29 cc 01 00 	lea    0x1cc29(%rip),%rax        # 22520 <if_stack>
    58f7:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    58fa:	85 c0                	test   %eax,%eax
    58fc:	75 29                	jne    5927 <yylex+0x573>
    58fe:	8b 05 ac cd 01 00    	mov    0x1cdac(%rip),%eax        # 226b0 <if_stack_ptr>
    5904:	8d 50 01             	lea    0x1(%rax),%edx
    5907:	89 15 a3 cd 01 00    	mov    %edx,0x1cda3(%rip)        # 226b0 <if_stack_ptr>
    590d:	48 98                	cltq
    590f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5916:	00
    5917:	48 8d 05 02 cc 01 00 	lea    0x1cc02(%rip),%rax        # 22520 <if_stack>
    591e:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
    5925:	eb 37                	jmp    595e <yylex+0x5aa>
    5927:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    592b:	48 89 c7             	mov    %rax,%rdi
    592e:	e8 0e fa ff ff       	call   5341 <is_defined>
    5933:	85 c0                	test   %eax,%eax
    5935:	0f 94 c1             	sete   %cl
    5938:	8b 05 72 cd 01 00    	mov    0x1cd72(%rip),%eax        # 226b0 <if_stack_ptr>
    593e:	8d 50 01             	lea    0x1(%rax),%edx
    5941:	89 15 69 cd 01 00    	mov    %edx,0x1cd69(%rip)        # 226b0 <if_stack_ptr>
    5947:	0f b6 d1             	movzbl %cl,%edx
    594a:	48 98                	cltq
    594c:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    5953:	00
    5954:	48 8d 05 c5 cb 01 00 	lea    0x1cbc5(%rip),%rax        # 22520 <if_stack>
    595b:	89 14 01             	mov    %edx,(%rcx,%rax,1)
    595e:	8b 05 4c cd 01 00    	mov    0x1cd4c(%rip),%eax        # 226b0 <if_stack_ptr>
    5964:	83 e8 01             	sub    $0x1,%eax
    5967:	48 98                	cltq
    5969:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5970:	00
    5971:	48 8d 05 a8 cb 01 00 	lea    0x1cba8(%rip),%rax        # 22520 <if_stack>
    5978:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    597b:	85 c0                	test   %eax,%eax
    597d:	0f 85 ca 09 00 00    	jne    634d <yylex+0xf99>
    5983:	c7 05 57 cd 01 00 07 	movl   $0x7,0x1cd57(%rip)        # 226e4 <yy_start>
    598a:	00 00 00
    598d:	e9 bb 09 00 00       	jmp    634d <yylex+0xf99>
    5992:	8b 05 18 cd 01 00    	mov    0x1cd18(%rip),%eax        # 226b0 <if_stack_ptr>
    5998:	85 c0                	test   %eax,%eax
    599a:	0f 8e b3 09 00 00    	jle    6353 <yylex+0xf9f>
    59a0:	8b 05 0a cd 01 00    	mov    0x1cd0a(%rip),%eax        # 226b0 <if_stack_ptr>
    59a6:	83 e8 01             	sub    $0x1,%eax
    59a9:	48 98                	cltq
    59ab:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    59b2:	00
    59b3:	48 8d 05 66 cb 01 00 	lea    0x1cb66(%rip),%rax        # 22520 <if_stack>
    59ba:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    59bd:	83 f8 01             	cmp    $0x1,%eax
    59c0:	75 0f                	jne    59d1 <yylex+0x61d>
    59c2:	c7 05 18 cd 01 00 07 	movl   $0x7,0x1cd18(%rip)        # 226e4 <yy_start>
    59c9:	00 00 00
    59cc:	e9 82 09 00 00       	jmp    6353 <yylex+0xf9f>
    59d1:	8b 05 d9 cc 01 00    	mov    0x1ccd9(%rip),%eax        # 226b0 <if_stack_ptr>
    59d7:	83 f8 01             	cmp    $0x1,%eax
    59da:	7e 21                	jle    59fd <yylex+0x649>
    59dc:	8b 05 ce cc 01 00    	mov    0x1ccce(%rip),%eax        # 226b0 <if_stack_ptr>
    59e2:	83 e8 02             	sub    $0x2,%eax
    59e5:	48 98                	cltq
    59e7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    59ee:	00
    59ef:	48 8d 05 2a cb 01 00 	lea    0x1cb2a(%rip),%rax        # 22520 <if_stack>
    59f6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    59f9:	85 c0                	test   %eax,%eax
    59fb:	74 0f                	je     5a0c <yylex+0x658>
    59fd:	c7 05 dd cc 01 00 01 	movl   $0x1,0x1ccdd(%rip)        # 226e4 <yy_start>
    5a04:	00 00 00
    5a07:	e9 47 09 00 00       	jmp    6353 <yylex+0xf9f>
    5a0c:	e9 42 09 00 00       	jmp    6353 <yylex+0xf9f>
    5a11:	8b 05 99 cc 01 00    	mov    0x1cc99(%rip),%eax        # 226b0 <if_stack_ptr>
    5a17:	85 c0                	test   %eax,%eax
    5a19:	0f 8e 3a 09 00 00    	jle    6359 <yylex+0xfa5>
    5a1f:	8b 05 8b cc 01 00    	mov    0x1cc8b(%rip),%eax        # 226b0 <if_stack_ptr>
    5a25:	83 e8 01             	sub    $0x1,%eax
    5a28:	89 05 82 cc 01 00    	mov    %eax,0x1cc82(%rip)        # 226b0 <if_stack_ptr>
    5a2e:	8b 05 7c cc 01 00    	mov    0x1cc7c(%rip),%eax        # 226b0 <if_stack_ptr>
    5a34:	85 c0                	test   %eax,%eax
    5a36:	74 26                	je     5a5e <yylex+0x6aa>
    5a38:	8b 05 72 cc 01 00    	mov    0x1cc72(%rip),%eax        # 226b0 <if_stack_ptr>
    5a3e:	83 e8 01             	sub    $0x1,%eax
    5a41:	48 98                	cltq
    5a43:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5a4a:	00
    5a4b:	48 8d 05 ce ca 01 00 	lea    0x1cace(%rip),%rax        # 22520 <if_stack>
    5a52:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5a55:	83 f8 01             	cmp    $0x1,%eax
    5a58:	0f 85 fb 08 00 00    	jne    6359 <yylex+0xfa5>
    5a5e:	c7 05 7c cc 01 00 01 	movl   $0x1,0x1cc7c(%rip)        # 226e4 <yy_start>
    5a65:	00 00 00
    5a68:	e9 ec 08 00 00       	jmp    6359 <yylex+0xfa5>
    5a6d:	8b 05 3d cc 01 00    	mov    0x1cc3d(%rip),%eax        # 226b0 <if_stack_ptr>
    5a73:	83 c0 01             	add    $0x1,%eax
    5a76:	89 05 34 cc 01 00    	mov    %eax,0x1cc34(%rip)        # 226b0 <if_stack_ptr>
    5a7c:	e9 eb 08 00 00       	jmp    636c <yylex+0xfb8>
    5a81:	8b 05 29 cc 01 00    	mov    0x1cc29(%rip),%eax        # 226b0 <if_stack_ptr>
    5a87:	83 c0 01             	add    $0x1,%eax
    5a8a:	89 05 20 cc 01 00    	mov    %eax,0x1cc20(%rip)        # 226b0 <if_stack_ptr>
    5a90:	e9 d7 08 00 00       	jmp    636c <yylex+0xfb8>
    5a95:	8b 05 15 cc 01 00    	mov    0x1cc15(%rip),%eax        # 226b0 <if_stack_ptr>
    5a9b:	85 c0                	test   %eax,%eax
    5a9d:	0f 8e bc 08 00 00    	jle    635f <yylex+0xfab>
    5aa3:	8b 05 07 cc 01 00    	mov    0x1cc07(%rip),%eax        # 226b0 <if_stack_ptr>
    5aa9:	83 e8 01             	sub    $0x1,%eax
    5aac:	48 98                	cltq
    5aae:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5ab5:	00
    5ab6:	48 8d 05 63 ca 01 00 	lea    0x1ca63(%rip),%rax        # 22520 <if_stack>
    5abd:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5ac0:	85 c0                	test   %eax,%eax
    5ac2:	0f 85 97 08 00 00    	jne    635f <yylex+0xfab>
    5ac8:	8b 05 e2 cb 01 00    	mov    0x1cbe2(%rip),%eax        # 226b0 <if_stack_ptr>
    5ace:	83 f8 01             	cmp    $0x1,%eax
    5ad1:	7e 21                	jle    5af4 <yylex+0x740>
    5ad3:	8b 05 d7 cb 01 00    	mov    0x1cbd7(%rip),%eax        # 226b0 <if_stack_ptr>
    5ad9:	83 e8 02             	sub    $0x2,%eax
    5adc:	48 98                	cltq
    5ade:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5ae5:	00
    5ae6:	48 8d 05 33 ca 01 00 	lea    0x1ca33(%rip),%rax        # 22520 <if_stack>
    5aed:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5af0:	85 c0                	test   %eax,%eax
    5af2:	74 0f                	je     5b03 <yylex+0x74f>
    5af4:	c7 05 e6 cb 01 00 01 	movl   $0x1,0x1cbe6(%rip)        # 226e4 <yy_start>
    5afb:	00 00 00
    5afe:	e9 5c 08 00 00       	jmp    635f <yylex+0xfab>
    5b03:	e9 57 08 00 00       	jmp    635f <yylex+0xfab>
    5b08:	8b 05 a2 cb 01 00    	mov    0x1cba2(%rip),%eax        # 226b0 <if_stack_ptr>
    5b0e:	85 c0                	test   %eax,%eax
    5b10:	7e 0f                	jle    5b21 <yylex+0x76d>
    5b12:	8b 05 98 cb 01 00    	mov    0x1cb98(%rip),%eax        # 226b0 <if_stack_ptr>
    5b18:	83 e8 01             	sub    $0x1,%eax
    5b1b:	89 05 8f cb 01 00    	mov    %eax,0x1cb8f(%rip)        # 226b0 <if_stack_ptr>
    5b21:	8b 05 89 cb 01 00    	mov    0x1cb89(%rip),%eax        # 226b0 <if_stack_ptr>
    5b27:	85 c0                	test   %eax,%eax
    5b29:	74 26                	je     5b51 <yylex+0x79d>
    5b2b:	8b 05 7f cb 01 00    	mov    0x1cb7f(%rip),%eax        # 226b0 <if_stack_ptr>
    5b31:	83 e8 01             	sub    $0x1,%eax
    5b34:	48 98                	cltq
    5b36:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5b3d:	00
    5b3e:	48 8d 05 db c9 01 00 	lea    0x1c9db(%rip),%rax        # 22520 <if_stack>
    5b45:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5b48:	83 f8 01             	cmp    $0x1,%eax
    5b4b:	0f 85 14 08 00 00    	jne    6365 <yylex+0xfb1>
    5b51:	c7 05 89 cb 01 00 01 	movl   $0x1,0x1cb89(%rip)        # 226e4 <yy_start>
    5b58:	00 00 00
    5b5b:	e9 05 08 00 00       	jmp    6365 <yylex+0xfb1>
    5b60:	b8 7d 00 00 00       	mov    $0x7d,%eax
    5b65:	e9 07 08 00 00       	jmp    6371 <yylex+0xfbd>
    5b6a:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    5b71:	00 00 00
    5b74:	eb 2f                	jmp    5ba5 <yylex+0x7f1>
    5b76:	48 8b 15 83 c5 01 00 	mov    0x1c583(%rip),%rdx        # 22100 <yytext>
    5b7d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5b83:	48 98                	cltq
    5b85:	48 01 d0             	add    %rdx,%rax
    5b88:	0f b6 00             	movzbl (%rax),%eax
    5b8b:	3c 0a                	cmp    $0xa,%al
    5b8d:	75 0f                	jne    5b9e <yylex+0x7ea>
    5b8f:	8b 05 9b c4 01 00    	mov    0x1c49b(%rip),%eax        # 22030 <line_num>
    5b95:	83 c0 01             	add    $0x1,%eax
    5b98:	89 05 92 c4 01 00    	mov    %eax,0x1c492(%rip)        # 22030 <line_num>
    5b9e:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    5ba5:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5bab:	48 63 d8             	movslq %eax,%rbx
    5bae:	48 8b 05 4b c5 01 00 	mov    0x1c54b(%rip),%rax        # 22100 <yytext>
    5bb5:	48 89 c7             	mov    %rax,%rdi
    5bb8:	e8 d3 c7 ff ff       	call   2390 <strlen@plt>
    5bbd:	48 39 c3             	cmp    %rax,%rbx
    5bc0:	72 b4                	jb     5b76 <yylex+0x7c2>
    5bc2:	e9 a5 07 00 00       	jmp    636c <yylex+0xfb8>
    5bc7:	8b 05 63 c4 01 00    	mov    0x1c463(%rip),%eax        # 22030 <line_num>
    5bcd:	83 c0 01             	add    $0x1,%eax
    5bd0:	89 05 5a c4 01 00    	mov    %eax,0x1c45a(%rip)        # 22030 <line_num>
    5bd6:	e9 91 07 00 00       	jmp    636c <yylex+0xfb8>
    5bdb:	b8 24 01 00 00       	mov    $0x124,%eax
    5be0:	e9 8c 07 00 00       	jmp    6371 <yylex+0xfbd>
    5be5:	b8 02 01 00 00       	mov    $0x102,%eax
    5bea:	e9 82 07 00 00       	jmp    6371 <yylex+0xfbd>
    5bef:	b8 04 01 00 00       	mov    $0x104,%eax
    5bf4:	e9 78 07 00 00       	jmp    6371 <yylex+0xfbd>
    5bf9:	b8 05 01 00 00       	mov    $0x105,%eax
    5bfe:	e9 6e 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c03:	b8 07 01 00 00       	mov    $0x107,%eax
    5c08:	e9 64 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c0d:	b8 08 01 00 00       	mov    $0x108,%eax
    5c12:	e9 5a 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c17:	c6 05 02 c5 01 00 00 	movb   $0x0,0x1c502(%rip)        # 22120 <asm_buffer>
    5c1e:	c7 05 bc ca 01 00 03 	movl   $0x3,0x1cabc(%rip)        # 226e4 <yy_start>
    5c25:	00 00 00
    5c28:	b8 15 01 00 00       	mov    $0x115,%eax
    5c2d:	e9 3f 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c32:	48 8d 05 e7 c4 01 00 	lea    0x1c4e7(%rip),%rax        # 22120 <asm_buffer>
    5c39:	48 89 c7             	mov    %rax,%rdi
    5c3c:	e8 1f c9 ff ff       	call   2560 <strdup@plt>
    5c41:	48 89 05 58 c4 01 00 	mov    %rax,0x1c458(%rip)        # 220a0 <yylval>
    5c48:	c7 05 92 ca 01 00 01 	movl   $0x1,0x1ca92(%rip)        # 226e4 <yy_start>
    5c4f:	00 00 00
    5c52:	b8 10 01 00 00       	mov    $0x110,%eax
    5c57:	e9 15 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c5c:	48 8d 05 bd c4 01 00 	lea    0x1c4bd(%rip),%rax        # 22120 <asm_buffer>
    5c63:	48 89 c7             	mov    %rax,%rdi
    5c66:	e8 25 c7 ff ff       	call   2390 <strlen@plt>
    5c6b:	48 89 c3             	mov    %rax,%rbx
    5c6e:	48 8b 05 8b c4 01 00 	mov    0x1c48b(%rip),%rax        # 22100 <yytext>
    5c75:	48 89 c7             	mov    %rax,%rdi
    5c78:	e8 13 c7 ff ff       	call   2390 <strlen@plt>
    5c7d:	48 01 d8             	add    %rbx,%rax
    5c80:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    5c86:	77 1e                	ja     5ca6 <yylex+0x8f2>
    5c88:	48 8b 05 71 c4 01 00 	mov    0x1c471(%rip),%rax        # 22100 <yytext>
    5c8f:	48 89 c6             	mov    %rax,%rsi
    5c92:	48 8d 05 87 c4 01 00 	lea    0x1c487(%rip),%rax        # 22120 <asm_buffer>
    5c99:	48 89 c7             	mov    %rax,%rdi
    5c9c:	e8 7f c8 ff ff       	call   2520 <strcat@plt>
    5ca1:	e9 c6 06 00 00       	jmp    636c <yylex+0xfb8>
    5ca6:	48 8b 05 b3 c3 01 00 	mov    0x1c3b3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    5cad:	48 89 c1             	mov    %rax,%rcx
    5cb0:	ba 14 00 00 00       	mov    $0x14,%edx
    5cb5:	be 01 00 00 00       	mov    $0x1,%esi
    5cba:	48 8d 05 84 41 01 00 	lea    0x14184(%rip),%rax        # 19e45 <yy_chk+0x2c5>
    5cc1:	48 89 c7             	mov    %rax,%rdi
    5cc4:	e8 87 c8 ff ff       	call   2550 <fwrite@plt>
    5cc9:	bf 01 00 00 00       	mov    $0x1,%edi
    5cce:	e8 6d c8 ff ff       	call   2540 <exit@plt>
    5cd3:	b8 14 01 00 00       	mov    $0x114,%eax
    5cd8:	e9 94 06 00 00       	jmp    6371 <yylex+0xfbd>
    5cdd:	b8 16 01 00 00       	mov    $0x116,%eax
    5ce2:	e9 8a 06 00 00       	jmp    6371 <yylex+0xfbd>
    5ce7:	b8 12 01 00 00       	mov    $0x112,%eax
    5cec:	e9 80 06 00 00       	jmp    6371 <yylex+0xfbd>
    5cf1:	b8 03 01 00 00       	mov    $0x103,%eax
    5cf6:	e9 76 06 00 00       	jmp    6371 <yylex+0xfbd>
    5cfb:	b8 13 01 00 00       	mov    $0x113,%eax
    5d00:	e9 6c 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d05:	b8 1a 01 00 00       	mov    $0x11a,%eax
    5d0a:	e9 62 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d0f:	b8 19 01 00 00       	mov    $0x119,%eax
    5d14:	e9 58 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d19:	b8 06 01 00 00       	mov    $0x106,%eax
    5d1e:	e9 4e 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d23:	b8 1b 01 00 00       	mov    $0x11b,%eax
    5d28:	e9 44 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d2d:	b8 1c 01 00 00       	mov    $0x11c,%eax
    5d32:	e9 3a 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d37:	b8 1d 01 00 00       	mov    $0x11d,%eax
    5d3c:	e9 30 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d41:	b8 21 01 00 00       	mov    $0x121,%eax
    5d46:	e9 26 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d4b:	b8 22 01 00 00       	mov    $0x122,%eax
    5d50:	e9 1c 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d55:	b8 1f 01 00 00       	mov    $0x11f,%eax
    5d5a:	e9 12 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d5f:	b8 23 01 00 00       	mov    $0x123,%eax
    5d64:	e9 08 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d69:	b8 1e 01 00 00       	mov    $0x11e,%eax
    5d6e:	e9 fe 05 00 00       	jmp    6371 <yylex+0xfbd>
    5d73:	b8 25 01 00 00       	mov    $0x125,%eax
    5d78:	e9 f4 05 00 00       	jmp    6371 <yylex+0xfbd>
    5d7d:	c7 05 19 c3 01 00 2b 	movl   $0x12b,0x1c319(%rip)        # 220a0 <yylval>
    5d84:	01 00 00
    5d87:	b8 26 01 00 00       	mov    $0x126,%eax
    5d8c:	e9 e0 05 00 00       	jmp    6371 <yylex+0xfbd>
    5d91:	c7 05 05 c3 01 00 2c 	movl   $0x12c,0x1c305(%rip)        # 220a0 <yylval>
    5d98:	01 00 00
    5d9b:	b8 26 01 00 00       	mov    $0x126,%eax
    5da0:	e9 cc 05 00 00       	jmp    6371 <yylex+0xfbd>
    5da5:	c7 05 f1 c2 01 00 29 	movl   $0x129,0x1c2f1(%rip)        # 220a0 <yylval>
    5dac:	01 00 00
    5daf:	b8 26 01 00 00       	mov    $0x126,%eax
    5db4:	e9 b8 05 00 00       	jmp    6371 <yylex+0xfbd>
    5db9:	c7 05 dd c2 01 00 2a 	movl   $0x12a,0x1c2dd(%rip)        # 220a0 <yylval>
    5dc0:	01 00 00
    5dc3:	b8 26 01 00 00       	mov    $0x126,%eax
    5dc8:	e9 a4 05 00 00       	jmp    6371 <yylex+0xfbd>
    5dcd:	c7 05 c9 c2 01 00 27 	movl   $0x127,0x1c2c9(%rip)        # 220a0 <yylval>
    5dd4:	01 00 00
    5dd7:	b8 26 01 00 00       	mov    $0x126,%eax
    5ddc:	e9 90 05 00 00       	jmp    6371 <yylex+0xfbd>
    5de1:	c7 05 b5 c2 01 00 28 	movl   $0x128,0x1c2b5(%rip)        # 220a0 <yylval>
    5de8:	01 00 00
    5deb:	b8 26 01 00 00       	mov    $0x126,%eax
    5df0:	e9 7c 05 00 00       	jmp    6371 <yylex+0xfbd>
    5df5:	b8 34 01 00 00       	mov    $0x134,%eax
    5dfa:	e9 72 05 00 00       	jmp    6371 <yylex+0xfbd>
    5dff:	b8 30 01 00 00       	mov    $0x130,%eax
    5e04:	e9 68 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e09:	c7 05 8d c2 01 00 32 	movl   $0x132,0x1c28d(%rip)        # 220a0 <yylval>
    5e10:	01 00 00
    5e13:	b8 31 01 00 00       	mov    $0x131,%eax
    5e18:	e9 54 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e1d:	c7 05 79 c2 01 00 33 	movl   $0x133,0x1c279(%rip)        # 220a0 <yylval>
    5e24:	01 00 00
    5e27:	b8 31 01 00 00       	mov    $0x131,%eax
    5e2c:	e9 40 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e31:	c7 05 65 c2 01 00 35 	movl   $0x135,0x1c265(%rip)        # 220a0 <yylval>
    5e38:	01 00 00
    5e3b:	b8 31 01 00 00       	mov    $0x131,%eax
    5e40:	e9 2c 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e45:	c7 05 51 c2 01 00 2e 	movl   $0x12e,0x1c251(%rip)        # 220a0 <yylval>
    5e4c:	01 00 00
    5e4f:	b8 2d 01 00 00       	mov    $0x12d,%eax
    5e54:	e9 18 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e59:	c7 05 3d c2 01 00 2f 	movl   $0x12f,0x1c23d(%rip)        # 220a0 <yylval>
    5e60:	01 00 00
    5e63:	b8 2d 01 00 00       	mov    $0x12d,%eax
    5e68:	e9 04 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e6d:	b8 0b 01 00 00       	mov    $0x10b,%eax
    5e72:	e9 fa 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e77:	b8 0c 01 00 00       	mov    $0x10c,%eax
    5e7c:	e9 f0 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e81:	b8 0d 01 00 00       	mov    $0x10d,%eax
    5e86:	e9 e6 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e8b:	b8 0e 01 00 00       	mov    $0x10e,%eax
    5e90:	e9 dc 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e95:	48 8b 05 64 c2 01 00 	mov    0x1c264(%rip),%rax        # 22100 <yytext>
    5e9c:	48 89 c7             	mov    %rax,%rdi
    5e9f:	e8 6c c6 ff ff       	call   2510 <atoi@plt>
    5ea4:	89 05 f6 c1 01 00    	mov    %eax,0x1c1f6(%rip)        # 220a0 <yylval>
    5eaa:	b8 09 01 00 00       	mov    $0x109,%eax
    5eaf:	e9 bd 04 00 00       	jmp    6371 <yylex+0xfbd>
    5eb4:	48 8b 05 45 c2 01 00 	mov    0x1c245(%rip),%rax        # 22100 <yytext>
    5ebb:	48 89 c7             	mov    %rax,%rdi
    5ebe:	e8 ad c4 ff ff       	call   2370 <atof@plt>
    5ec3:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5ec7:	f3 0f 11 05 d1 c1 01 	movss  %xmm0,0x1c1d1(%rip)        # 220a0 <yylval>
    5ece:	00
    5ecf:	b8 0a 01 00 00       	mov    $0x10a,%eax
    5ed4:	e9 98 04 00 00       	jmp    6371 <yylex+0xfbd>
    5ed9:	48 8b 05 20 c2 01 00 	mov    0x1c220(%rip),%rax        # 22100 <yytext>
    5ee0:	48 89 c7             	mov    %rax,%rdi
    5ee3:	e8 78 c6 ff ff       	call   2560 <strdup@plt>
    5ee8:	48 89 05 b1 c1 01 00 	mov    %rax,0x1c1b1(%rip)        # 220a0 <yylval>
    5eef:	b8 11 01 00 00       	mov    $0x111,%eax
    5ef4:	e9 78 04 00 00       	jmp    6371 <yylex+0xfbd>
    5ef9:	48 8b 05 00 c2 01 00 	mov    0x1c200(%rip),%rax        # 22100 <yytext>
    5f00:	48 83 c0 01          	add    $0x1,%rax
    5f04:	48 89 c7             	mov    %rax,%rdi
    5f07:	e8 54 c6 ff ff       	call   2560 <strdup@plt>
    5f0c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    5f13:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f1a:	48 89 c7             	mov    %rax,%rdi
    5f1d:	e8 6e c4 ff ff       	call   2390 <strlen@plt>
    5f22:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5f26:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f2d:	48 01 d0             	add    %rdx,%rax
    5f30:	c6 00 00             	movb   $0x0,(%rax)
    5f33:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f3a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5f41:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f48:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    5f4f:	e9 f5 00 00 00       	jmp    6049 <yylex+0xc95>
    5f54:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5f5b:	0f b6 00             	movzbl (%rax),%eax
    5f5e:	3c 5c                	cmp    $0x5c,%al
    5f60:	0f 85 ba 00 00 00    	jne    6020 <yylex+0xc6c>
    5f66:	48 83 85 68 ff ff ff 	addq   $0x1,-0x98(%rbp)
    5f6d:	01
    5f6e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5f75:	0f b6 00             	movzbl (%rax),%eax
    5f78:	0f be c0             	movsbl %al,%eax
    5f7b:	83 f8 74             	cmp    $0x74,%eax
    5f7e:	74 32                	je     5fb2 <yylex+0xbfe>
    5f80:	83 f8 74             	cmp    $0x74,%eax
    5f83:	7f 72                	jg     5ff7 <yylex+0xc43>
    5f85:	83 f8 6e             	cmp    $0x6e,%eax
    5f88:	74 11                	je     5f9b <yylex+0xbe7>
    5f8a:	83 f8 6e             	cmp    $0x6e,%eax
    5f8d:	7f 68                	jg     5ff7 <yylex+0xc43>
    5f8f:	83 f8 22             	cmp    $0x22,%eax
    5f92:	74 4c                	je     5fe0 <yylex+0xc2c>
    5f94:	83 f8 5c             	cmp    $0x5c,%eax
    5f97:	74 30                	je     5fc9 <yylex+0xc15>
    5f99:	eb 5c                	jmp    5ff7 <yylex+0xc43>
    5f9b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fa2:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5fa6:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5fad:	c6 00 0a             	movb   $0xa,(%rax)
    5fb0:	eb 64                	jmp    6016 <yylex+0xc62>
    5fb2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fb9:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5fbd:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5fc4:	c6 00 09             	movb   $0x9,(%rax)
    5fc7:	eb 4d                	jmp    6016 <yylex+0xc62>
    5fc9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fd0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5fd4:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5fdb:	c6 00 5c             	movb   $0x5c,(%rax)
    5fde:	eb 36                	jmp    6016 <yylex+0xc62>
    5fe0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fe7:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5feb:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5ff2:	c6 00 22             	movb   $0x22,(%rax)
    5ff5:	eb 1f                	jmp    6016 <yylex+0xc62>
    5ff7:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5ffe:	48 8d 50 01          	lea    0x1(%rax),%rdx
    6002:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    6009:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6010:	0f b6 12             	movzbl (%rdx),%edx
    6013:	88 10                	mov    %dl,(%rax)
    6015:	90                   	nop
    6016:	48 83 85 68 ff ff ff 	addq   $0x1,-0x98(%rbp)
    601d:	01
    601e:	eb 29                	jmp    6049 <yylex+0xc95>
    6020:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6027:	48 8d 42 01          	lea    0x1(%rdx),%rax
    602b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    6032:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6039:	48 8d 48 01          	lea    0x1(%rax),%rcx
    603d:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    6044:	0f b6 12             	movzbl (%rdx),%edx
    6047:	88 10                	mov    %dl,(%rax)
    6049:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    6050:	0f b6 00             	movzbl (%rax),%eax
    6053:	84 c0                	test   %al,%al
    6055:	0f 85 f9 fe ff ff    	jne    5f54 <yylex+0xba0>
    605b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6062:	c6 00 00             	movb   $0x0,(%rax)
    6065:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    606c:	48 89 05 2d c0 01 00 	mov    %rax,0x1c02d(%rip)        # 220a0 <yylval>
    6073:	b8 0f 01 00 00       	mov    $0x10f,%eax
    6078:	e9 f4 02 00 00       	jmp    6371 <yylex+0xfbd>
    607d:	48 8b 05 7c c0 01 00 	mov    0x1c07c(%rip),%rax        # 22100 <yytext>
    6084:	0f b6 00             	movzbl (%rax),%eax
    6087:	0f be c0             	movsbl %al,%eax
    608a:	e9 e2 02 00 00       	jmp    6371 <yylex+0xfbd>
    608f:	48 8b 15 5a c0 01 00 	mov    0x1c05a(%rip),%rdx        # 220f0 <yyout>
    6096:	8b 05 44 c0 01 00    	mov    0x1c044(%rip),%eax        # 220e0 <yyleng>
    609c:	48 63 f0             	movslq %eax,%rsi
    609f:	48 8b 05 5a c0 01 00 	mov    0x1c05a(%rip),%rax        # 22100 <yytext>
    60a6:	48 89 d1             	mov    %rdx,%rcx
    60a9:	ba 01 00 00 00       	mov    $0x1,%edx
    60ae:	48 89 c7             	mov    %rax,%rdi
    60b1:	e8 9a c4 ff ff       	call   2550 <fwrite@plt>
    60b6:	e9 b1 02 00 00       	jmp    636c <yylex+0xfb8>
    60bb:	48 8b 05 3e c0 01 00 	mov    0x1c03e(%rip),%rax        # 22100 <yytext>
    60c2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    60c9:	48 29 c2             	sub    %rax,%rdx
    60cc:	89 d0                	mov    %edx,%eax
    60ce:	83 e8 01             	sub    $0x1,%eax
    60d1:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
    60d7:	0f b6 15 f2 c5 01 00 	movzbl 0x1c5f2(%rip),%edx        # 226d0 <yy_hold_char>
    60de:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    60e5:	88 10                	mov    %dl,(%rax)
    60e7:	48 8b 05 da c5 01 00 	mov    0x1c5da(%rip),%rax        # 226c8 <yy_buffer_stack>
    60ee:	48 8b 15 c3 c5 01 00 	mov    0x1c5c3(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    60f5:	48 c1 e2 03          	shl    $0x3,%rdx
    60f9:	48 01 d0             	add    %rdx,%rax
    60fc:	48 8b 00             	mov    (%rax),%rax
    60ff:	8b 40 38             	mov    0x38(%rax),%eax
    6102:	85 c0                	test   %eax,%eax
    6104:	75 62                	jne    6168 <yylex+0xdb4>
    6106:	48 8b 05 bb c5 01 00 	mov    0x1c5bb(%rip),%rax        # 226c8 <yy_buffer_stack>
    610d:	48 8b 15 a4 c5 01 00 	mov    0x1c5a4(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6114:	48 c1 e2 03          	shl    $0x3,%rdx
    6118:	48 01 d0             	add    %rdx,%rax
    611b:	48 8b 00             	mov    (%rax),%rax
    611e:	8b 40 1c             	mov    0x1c(%rax),%eax
    6121:	89 05 ad c5 01 00    	mov    %eax,0x1c5ad(%rip)        # 226d4 <yy_n_chars>
    6127:	48 8b 05 9a c5 01 00 	mov    0x1c59a(%rip),%rax        # 226c8 <yy_buffer_stack>
    612e:	48 8b 15 83 c5 01 00 	mov    0x1c583(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6135:	48 c1 e2 03          	shl    $0x3,%rdx
    6139:	48 01 d0             	add    %rdx,%rax
    613c:	48 8b 00             	mov    (%rax),%rax
    613f:	48 8b 15 a2 bf 01 00 	mov    0x1bfa2(%rip),%rdx        # 220e8 <yyin>
    6146:	48 89 10             	mov    %rdx,(%rax)
    6149:	48 8b 05 78 c5 01 00 	mov    0x1c578(%rip),%rax        # 226c8 <yy_buffer_stack>
    6150:	48 8b 15 61 c5 01 00 	mov    0x1c561(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6157:	48 c1 e2 03          	shl    $0x3,%rdx
    615b:	48 01 d0             	add    %rdx,%rax
    615e:	48 8b 00             	mov    (%rax),%rax
    6161:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%rax)
    6168:	48 8b 05 59 c5 01 00 	mov    0x1c559(%rip),%rax        # 226c8 <yy_buffer_stack>
    616f:	48 8b 15 42 c5 01 00 	mov    0x1c542(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6176:	48 c1 e2 03          	shl    $0x3,%rdx
    617a:	48 01 d0             	add    %rdx,%rax
    617d:	48 8b 00             	mov    (%rax),%rax
    6180:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6184:	8b 05 4a c5 01 00    	mov    0x1c54a(%rip),%eax        # 226d4 <yy_n_chars>
    618a:	48 98                	cltq
    618c:	48 01 c2             	add    %rax,%rdx
    618f:	48 8b 05 42 c5 01 00 	mov    0x1c542(%rip),%rax        # 226d8 <yy_c_buf_p>
    6196:	48 39 c2             	cmp    %rax,%rdx
    6199:	0f 82 92 00 00 00    	jb     6231 <yylex+0xe7d>
    619f:	48 8b 15 5a bf 01 00 	mov    0x1bf5a(%rip),%rdx        # 22100 <yytext>
    61a6:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    61ac:	48 98                	cltq
    61ae:	48 01 d0             	add    %rdx,%rax
    61b1:	48 89 05 20 c5 01 00 	mov    %rax,0x1c520(%rip)        # 226d8 <yy_c_buf_p>
    61b8:	e8 23 08 00 00       	call   69e0 <yy_get_previous_state>
    61bd:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    61c3:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    61c9:	89 c7                	mov    %eax,%edi
    61cb:	e8 42 09 00 00       	call   6b12 <yy_try_NUL_trans>
    61d0:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    61d6:	48 8b 05 23 bf 01 00 	mov    0x1bf23(%rip),%rax        # 22100 <yytext>
    61dd:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    61e4:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
    61eb:	74 31                	je     621e <yylex+0xe6a>
    61ed:	48 8b 05 e4 c4 01 00 	mov    0x1c4e4(%rip),%rax        # 226d8 <yy_c_buf_p>
    61f4:	48 83 c0 01          	add    $0x1,%rax
    61f8:	48 89 05 d9 c4 01 00 	mov    %rax,0x1c4d9(%rip)        # 226d8 <yy_c_buf_p>
    61ff:	48 8b 05 d2 c4 01 00 	mov    0x1c4d2(%rip),%rax        # 226d8 <yy_c_buf_p>
    6206:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    620d:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    6213:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    6219:	e9 ad f2 ff ff       	jmp    54cb <yylex+0x117>
    621e:	48 8b 05 b3 c4 01 00 	mov    0x1c4b3(%rip),%rax        # 226d8 <yy_c_buf_p>
    6225:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    622c:	e9 dc f3 ff ff       	jmp    560d <yylex+0x259>
    6231:	e8 55 01 00 00       	call   638b <yy_get_next_buffer>
    6236:	83 f8 02             	cmp    $0x2,%eax
    6239:	0f 84 93 00 00 00    	je     62d2 <yylex+0xf1e>
    623f:	83 f8 02             	cmp    $0x2,%eax
    6242:	0f 8f 23 01 00 00    	jg     636b <yylex+0xfb7>
    6248:	85 c0                	test   %eax,%eax
    624a:	74 41                	je     628d <yylex+0xed9>
    624c:	83 f8 01             	cmp    $0x1,%eax
    624f:	0f 85 16 01 00 00    	jne    636b <yylex+0xfb7>
    6255:	c7 05 89 c4 01 00 00 	movl   $0x0,0x1c489(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    625c:	00 00 00
    625f:	48 8b 05 9a be 01 00 	mov    0x1be9a(%rip),%rax        # 22100 <yytext>
    6266:	48 89 05 6b c4 01 00 	mov    %rax,0x1c46b(%rip)        # 226d8 <yy_c_buf_p>
    626d:	8b 05 71 c4 01 00    	mov    0x1c471(%rip),%eax        # 226e4 <yy_start>
    6273:	83 e8 01             	sub    $0x1,%eax
    6276:	89 c2                	mov    %eax,%edx
    6278:	c1 ea 1f             	shr    $0x1f,%edx
    627b:	01 d0                	add    %edx,%eax
    627d:	d1 f8                	sar    $1,%eax
    627f:	83 c0 42             	add    $0x42,%eax
    6282:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    6288:	e9 29 f4 ff ff       	jmp    56b6 <yylex+0x302>
    628d:	48 8b 15 6c be 01 00 	mov    0x1be6c(%rip),%rdx        # 22100 <yytext>
    6294:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    629a:	48 98                	cltq
    629c:	48 01 d0             	add    %rdx,%rax
    629f:	48 89 05 32 c4 01 00 	mov    %rax,0x1c432(%rip)        # 226d8 <yy_c_buf_p>
    62a6:	e8 35 07 00 00       	call   69e0 <yy_get_previous_state>
    62ab:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    62b1:	48 8b 05 20 c4 01 00 	mov    0x1c420(%rip),%rax        # 226d8 <yy_c_buf_p>
    62b8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    62bf:	48 8b 05 3a be 01 00 	mov    0x1be3a(%rip),%rax        # 22100 <yytext>
    62c6:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    62cd:	e9 f9 f1 ff ff       	jmp    54cb <yylex+0x117>
    62d2:	48 8b 05 ef c3 01 00 	mov    0x1c3ef(%rip),%rax        # 226c8 <yy_buffer_stack>
    62d9:	48 8b 15 d8 c3 01 00 	mov    0x1c3d8(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    62e0:	48 c1 e2 03          	shl    $0x3,%rdx
    62e4:	48 01 d0             	add    %rdx,%rax
    62e7:	48 8b 00             	mov    (%rax),%rax
    62ea:	48 8b 50 08          	mov    0x8(%rax),%rdx
    62ee:	8b 05 e0 c3 01 00    	mov    0x1c3e0(%rip),%eax        # 226d4 <yy_n_chars>
    62f4:	48 98                	cltq
    62f6:	48 01 d0             	add    %rdx,%rax
    62f9:	48 89 05 d8 c3 01 00 	mov    %rax,0x1c3d8(%rip)        # 226d8 <yy_c_buf_p>
    6300:	e8 db 06 00 00       	call   69e0 <yy_get_previous_state>
    6305:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    630b:	48 8b 05 c6 c3 01 00 	mov    0x1c3c6(%rip),%rax        # 226d8 <yy_c_buf_p>
    6312:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    6319:	48 8b 05 e0 bd 01 00 	mov    0x1bde0(%rip),%rax        # 22100 <yytext>
    6320:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6327:	e9 e1 f2 ff ff       	jmp    560d <yylex+0x259>
    632c:	48 8d 05 2d 3b 01 00 	lea    0x13b2d(%rip),%rax        # 19e60 <yy_chk+0x2e0>
    6333:	48 89 c7             	mov    %rax,%rdi
    6336:	e8 c9 15 00 00       	call   7904 <yy_fatal_error>
    633b:	90                   	nop
    633c:	e9 52 f1 ff ff       	jmp    5493 <yylex+0xdf>
    6341:	90                   	nop
    6342:	e9 4c f1 ff ff       	jmp    5493 <yylex+0xdf>
    6347:	90                   	nop
    6348:	e9 46 f1 ff ff       	jmp    5493 <yylex+0xdf>
    634d:	90                   	nop
    634e:	e9 40 f1 ff ff       	jmp    5493 <yylex+0xdf>
    6353:	90                   	nop
    6354:	e9 3a f1 ff ff       	jmp    5493 <yylex+0xdf>
    6359:	90                   	nop
    635a:	e9 34 f1 ff ff       	jmp    5493 <yylex+0xdf>
    635f:	90                   	nop
    6360:	e9 2e f1 ff ff       	jmp    5493 <yylex+0xdf>
    6365:	90                   	nop
    6366:	e9 28 f1 ff ff       	jmp    5493 <yylex+0xdf>
    636b:	90                   	nop
    636c:	e9 22 f1 ff ff       	jmp    5493 <yylex+0xdf>
    6371:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6375:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    637c:	00 00
    637e:	74 05                	je     6385 <yylex+0xfd1>
    6380:	e8 1b c0 ff ff       	call   23a0 <__stack_chk_fail@plt>
    6385:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6389:	c9                   	leave
    638a:	c3                   	ret

000000000000638b <yy_get_next_buffer>:
    638b:	f3 0f 1e fa          	endbr64
    638f:	55                   	push   %rbp
    6390:	48 89 e5             	mov    %rsp,%rbp
    6393:	53                   	push   %rbx
    6394:	48 83 ec 48          	sub    $0x48,%rsp
    6398:	48 8b 05 29 c3 01 00 	mov    0x1c329(%rip),%rax        # 226c8 <yy_buffer_stack>
    639f:	48 8b 15 12 c3 01 00 	mov    0x1c312(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    63a6:	48 c1 e2 03          	shl    $0x3,%rdx
    63aa:	48 01 d0             	add    %rdx,%rax
    63ad:	48 8b 00             	mov    (%rax),%rax
    63b0:	48 8b 40 08          	mov    0x8(%rax),%rax
    63b4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    63b8:	48 8b 05 41 bd 01 00 	mov    0x1bd41(%rip),%rax        # 22100 <yytext>
    63bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    63c3:	48 8b 05 fe c2 01 00 	mov    0x1c2fe(%rip),%rax        # 226c8 <yy_buffer_stack>
    63ca:	48 8b 15 e7 c2 01 00 	mov    0x1c2e7(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    63d1:	48 c1 e2 03          	shl    $0x3,%rdx
    63d5:	48 01 d0             	add    %rdx,%rax
    63d8:	48 8b 00             	mov    (%rax),%rax
    63db:	48 8b 40 08          	mov    0x8(%rax),%rax
    63df:	8b 15 ef c2 01 00    	mov    0x1c2ef(%rip),%edx        # 226d4 <yy_n_chars>
    63e5:	48 63 d2             	movslq %edx,%rdx
    63e8:	48 83 c2 01          	add    $0x1,%rdx
    63ec:	48 01 c2             	add    %rax,%rdx
    63ef:	48 8b 05 e2 c2 01 00 	mov    0x1c2e2(%rip),%rax        # 226d8 <yy_c_buf_p>
    63f6:	48 39 c2             	cmp    %rax,%rdx
    63f9:	73 0f                	jae    640a <yy_get_next_buffer+0x7f>
    63fb:	48 8d 05 ae 3b 01 00 	lea    0x13bae(%rip),%rax        # 19fb0 <yy_chk+0x430>
    6402:	48 89 c7             	mov    %rax,%rdi
    6405:	e8 fa 14 00 00       	call   7904 <yy_fatal_error>
    640a:	48 8b 05 b7 c2 01 00 	mov    0x1c2b7(%rip),%rax        # 226c8 <yy_buffer_stack>
    6411:	48 8b 15 a0 c2 01 00 	mov    0x1c2a0(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6418:	48 c1 e2 03          	shl    $0x3,%rdx
    641c:	48 01 d0             	add    %rdx,%rax
    641f:	48 8b 00             	mov    (%rax),%rax
    6422:	8b 40 34             	mov    0x34(%rax),%eax
    6425:	85 c0                	test   %eax,%eax
    6427:	75 2b                	jne    6454 <yy_get_next_buffer+0xc9>
    6429:	48 8b 15 a8 c2 01 00 	mov    0x1c2a8(%rip),%rdx        # 226d8 <yy_c_buf_p>
    6430:	48 8b 05 c9 bc 01 00 	mov    0x1bcc9(%rip),%rax        # 22100 <yytext>
    6437:	48 29 c2             	sub    %rax,%rdx
    643a:	48 83 fa 01          	cmp    $0x1,%rdx
    643e:	75 0a                	jne    644a <yy_get_next_buffer+0xbf>
    6440:	b8 01 00 00 00       	mov    $0x1,%eax
    6445:	e9 90 05 00 00       	jmp    69da <yy_get_next_buffer+0x64f>
    644a:	b8 02 00 00 00       	mov    $0x2,%eax
    644f:	e9 86 05 00 00       	jmp    69da <yy_get_next_buffer+0x64f>
    6454:	48 8b 15 7d c2 01 00 	mov    0x1c27d(%rip),%rdx        # 226d8 <yy_c_buf_p>
    645b:	48 8b 05 9e bc 01 00 	mov    0x1bc9e(%rip),%rax        # 22100 <yytext>
    6462:	48 29 c2             	sub    %rax,%rdx
    6465:	89 d0                	mov    %edx,%eax
    6467:	83 e8 01             	sub    $0x1,%eax
    646a:	89 45 c8             	mov    %eax,-0x38(%rbp)
    646d:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    6474:	eb 21                	jmp    6497 <yy_get_next_buffer+0x10c>
    6476:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    647a:	48 8d 42 01          	lea    0x1(%rdx),%rax
    647e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6482:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6486:	48 8d 48 01          	lea    0x1(%rax),%rcx
    648a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    648e:	0f b6 12             	movzbl (%rdx),%edx
    6491:	88 10                	mov    %dl,(%rax)
    6493:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    6497:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    649a:	3b 45 c8             	cmp    -0x38(%rbp),%eax
    649d:	7c d7                	jl     6476 <yy_get_next_buffer+0xeb>
    649f:	48 8b 05 22 c2 01 00 	mov    0x1c222(%rip),%rax        # 226c8 <yy_buffer_stack>
    64a6:	48 8b 15 0b c2 01 00 	mov    0x1c20b(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    64ad:	48 c1 e2 03          	shl    $0x3,%rdx
    64b1:	48 01 d0             	add    %rdx,%rax
    64b4:	48 8b 00             	mov    (%rax),%rax
    64b7:	8b 40 38             	mov    0x38(%rax),%eax
    64ba:	83 f8 02             	cmp    $0x2,%eax
    64bd:	75 30                	jne    64ef <yy_get_next_buffer+0x164>
    64bf:	c7 05 0b c2 01 00 00 	movl   $0x0,0x1c20b(%rip)        # 226d4 <yy_n_chars>
    64c6:	00 00 00
    64c9:	48 8b 05 f8 c1 01 00 	mov    0x1c1f8(%rip),%rax        # 226c8 <yy_buffer_stack>
    64d0:	48 8b 15 e1 c1 01 00 	mov    0x1c1e1(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    64d7:	48 c1 e2 03          	shl    $0x3,%rdx
    64db:	48 01 d0             	add    %rdx,%rax
    64de:	48 8b 00             	mov    (%rax),%rax
    64e1:	8b 15 ed c1 01 00    	mov    0x1c1ed(%rip),%edx        # 226d4 <yy_n_chars>
    64e7:	89 50 1c             	mov    %edx,0x1c(%rax)
    64ea:	e9 23 03 00 00       	jmp    6812 <yy_get_next_buffer+0x487>
    64ef:	48 8b 05 d2 c1 01 00 	mov    0x1c1d2(%rip),%rax        # 226c8 <yy_buffer_stack>
    64f6:	48 8b 15 bb c1 01 00 	mov    0x1c1bb(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    64fd:	48 c1 e2 03          	shl    $0x3,%rdx
    6501:	48 01 d0             	add    %rdx,%rax
    6504:	48 8b 00             	mov    (%rax),%rax
    6507:	8b 40 18             	mov    0x18(%rax),%eax
    650a:	2b 45 c8             	sub    -0x38(%rbp),%eax
    650d:	83 e8 01             	sub    $0x1,%eax
    6510:	89 45 bc             	mov    %eax,-0x44(%rbp)
    6513:	e9 10 01 00 00       	jmp    6628 <yy_get_next_buffer+0x29d>
    6518:	48 8b 05 a9 c1 01 00 	mov    0x1c1a9(%rip),%rax        # 226c8 <yy_buffer_stack>
    651f:	48 8b 15 92 c1 01 00 	mov    0x1c192(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6526:	48 c1 e2 03          	shl    $0x3,%rdx
    652a:	48 01 d0             	add    %rdx,%rax
    652d:	48 8b 00             	mov    (%rax),%rax
    6530:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6534:	48 8b 15 9d c1 01 00 	mov    0x1c19d(%rip),%rdx        # 226d8 <yy_c_buf_p>
    653b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    653f:	48 8b 40 08          	mov    0x8(%rax),%rax
    6543:	48 29 c2             	sub    %rax,%rdx
    6546:	89 55 cc             	mov    %edx,-0x34(%rbp)
    6549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    654d:	8b 40 20             	mov    0x20(%rax),%eax
    6550:	85 c0                	test   %eax,%eax
    6552:	74 71                	je     65c5 <yy_get_next_buffer+0x23a>
    6554:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6558:	8b 40 18             	mov    0x18(%rax),%eax
    655b:	01 c0                	add    %eax,%eax
    655d:	89 45 d0             	mov    %eax,-0x30(%rbp)
    6560:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    6564:	7f 24                	jg     658a <yy_get_next_buffer+0x1ff>
    6566:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    656a:	8b 50 18             	mov    0x18(%rax),%edx
    656d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6571:	8b 40 18             	mov    0x18(%rax),%eax
    6574:	8d 48 07             	lea    0x7(%rax),%ecx
    6577:	85 c0                	test   %eax,%eax
    6579:	0f 48 c1             	cmovs  %ecx,%eax
    657c:	c1 f8 03             	sar    $0x3,%eax
    657f:	01 c2                	add    %eax,%edx
    6581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6585:	89 50 18             	mov    %edx,0x18(%rax)
    6588:	eb 11                	jmp    659b <yy_get_next_buffer+0x210>
    658a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    658e:	8b 40 18             	mov    0x18(%rax),%eax
    6591:	8d 14 00             	lea    (%rax,%rax,1),%edx
    6594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6598:	89 50 18             	mov    %edx,0x18(%rax)
    659b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    659f:	8b 40 18             	mov    0x18(%rax),%eax
    65a2:	83 c0 02             	add    $0x2,%eax
    65a5:	48 63 d0             	movslq %eax,%rdx
    65a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65ac:	48 8b 40 08          	mov    0x8(%rax),%rax
    65b0:	48 89 d6             	mov    %rdx,%rsi
    65b3:	48 89 c7             	mov    %rax,%rdi
    65b6:	e8 7a 15 00 00       	call   7b35 <yyrealloc>
    65bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65bf:	48 89 42 08          	mov    %rax,0x8(%rdx)
    65c3:	eb 0c                	jmp    65d1 <yy_get_next_buffer+0x246>
    65c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65c9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    65d0:	00
    65d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65d5:	48 8b 40 08          	mov    0x8(%rax),%rax
    65d9:	48 85 c0             	test   %rax,%rax
    65dc:	75 0f                	jne    65ed <yy_get_next_buffer+0x262>
    65de:	48 8d 05 03 3a 01 00 	lea    0x13a03(%rip),%rax        # 19fe8 <yy_chk+0x468>
    65e5:	48 89 c7             	mov    %rax,%rdi
    65e8:	e8 17 13 00 00       	call   7904 <yy_fatal_error>
    65ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65f1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    65f5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    65f8:	48 98                	cltq
    65fa:	48 01 d0             	add    %rdx,%rax
    65fd:	48 89 05 d4 c0 01 00 	mov    %rax,0x1c0d4(%rip)        # 226d8 <yy_c_buf_p>
    6604:	48 8b 05 bd c0 01 00 	mov    0x1c0bd(%rip),%rax        # 226c8 <yy_buffer_stack>
    660b:	48 8b 15 a6 c0 01 00 	mov    0x1c0a6(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6612:	48 c1 e2 03          	shl    $0x3,%rdx
    6616:	48 01 d0             	add    %rdx,%rax
    6619:	48 8b 00             	mov    (%rax),%rax
    661c:	8b 40 18             	mov    0x18(%rax),%eax
    661f:	2b 45 c8             	sub    -0x38(%rbp),%eax
    6622:	83 e8 01             	sub    $0x1,%eax
    6625:	89 45 bc             	mov    %eax,-0x44(%rbp)
    6628:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    662c:	0f 8e e6 fe ff ff    	jle    6518 <yy_get_next_buffer+0x18d>
    6632:	81 7d bc 00 20 00 00 	cmpl   $0x2000,-0x44(%rbp)
    6639:	7e 07                	jle    6642 <yy_get_next_buffer+0x2b7>
    663b:	c7 45 bc 00 20 00 00 	movl   $0x2000,-0x44(%rbp)
    6642:	48 8b 05 7f c0 01 00 	mov    0x1c07f(%rip),%rax        # 226c8 <yy_buffer_stack>
    6649:	48 8b 15 68 c0 01 00 	mov    0x1c068(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6650:	48 c1 e2 03          	shl    $0x3,%rdx
    6654:	48 01 d0             	add    %rdx,%rax
    6657:	48 8b 00             	mov    (%rax),%rax
    665a:	8b 40 24             	mov    0x24(%rax),%eax
    665d:	85 c0                	test   %eax,%eax
    665f:	0f 84 e1 00 00 00    	je     6746 <yy_get_next_buffer+0x3bb>
    6665:	c7 45 c0 2a 00 00 00 	movl   $0x2a,-0x40(%rbp)
    666c:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    6673:	eb 37                	jmp    66ac <yy_get_next_buffer+0x321>
    6675:	48 8b 05 4c c0 01 00 	mov    0x1c04c(%rip),%rax        # 226c8 <yy_buffer_stack>
    667c:	48 8b 15 35 c0 01 00 	mov    0x1c035(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6683:	48 c1 e2 03          	shl    $0x3,%rdx
    6687:	48 01 d0             	add    %rdx,%rax
    668a:	48 8b 00             	mov    (%rax),%rax
    668d:	48 8b 40 08          	mov    0x8(%rax),%rax
    6691:	8b 55 c8             	mov    -0x38(%rbp),%edx
    6694:	48 63 ca             	movslq %edx,%rcx
    6697:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    669a:	48 63 d2             	movslq %edx,%rdx
    669d:	48 01 ca             	add    %rcx,%rdx
    66a0:	48 01 d0             	add    %rdx,%rax
    66a3:	8b 55 c0             	mov    -0x40(%rbp),%edx
    66a6:	88 10                	mov    %dl,(%rax)
    66a8:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    66ac:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    66af:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    66b2:	7d 1e                	jge    66d2 <yy_get_next_buffer+0x347>
    66b4:	48 8b 05 2d ba 01 00 	mov    0x1ba2d(%rip),%rax        # 220e8 <yyin>
    66bb:	48 89 c7             	mov    %rax,%rdi
    66be:	e8 ad be ff ff       	call   2570 <getc@plt>
    66c3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    66c6:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%rbp)
    66ca:	74 06                	je     66d2 <yy_get_next_buffer+0x347>
    66cc:	83 7d c0 0a          	cmpl   $0xa,-0x40(%rbp)
    66d0:	75 a3                	jne    6675 <yy_get_next_buffer+0x2ea>
    66d2:	83 7d c0 0a          	cmpl   $0xa,-0x40(%rbp)
    66d6:	75 38                	jne    6710 <yy_get_next_buffer+0x385>
    66d8:	48 8b 05 e9 bf 01 00 	mov    0x1bfe9(%rip),%rax        # 226c8 <yy_buffer_stack>
    66df:	48 8b 15 d2 bf 01 00 	mov    0x1bfd2(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    66e6:	48 c1 e2 03          	shl    $0x3,%rdx
    66ea:	48 01 d0             	add    %rdx,%rax
    66ed:	48 8b 00             	mov    (%rax),%rax
    66f0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    66f4:	8b 45 c8             	mov    -0x38(%rbp),%eax
    66f7:	48 63 f0             	movslq %eax,%rsi
    66fa:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    66fd:	8d 50 01             	lea    0x1(%rax),%edx
    6700:	89 55 c4             	mov    %edx,-0x3c(%rbp)
    6703:	48 98                	cltq
    6705:	48 01 f0             	add    %rsi,%rax
    6708:	48 01 c8             	add    %rcx,%rax
    670b:	8b 55 c0             	mov    -0x40(%rbp),%edx
    670e:	88 10                	mov    %dl,(%rax)
    6710:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%rbp)
    6714:	75 22                	jne    6738 <yy_get_next_buffer+0x3ad>
    6716:	48 8b 05 cb b9 01 00 	mov    0x1b9cb(%rip),%rax        # 220e8 <yyin>
    671d:	48 89 c7             	mov    %rax,%rdi
    6720:	e8 0b bc ff ff       	call   2330 <ferror@plt>
    6725:	85 c0                	test   %eax,%eax
    6727:	74 0f                	je     6738 <yy_get_next_buffer+0x3ad>
    6729:	48 8d 05 e4 38 01 00 	lea    0x138e4(%rip),%rax        # 1a014 <yy_chk+0x494>
    6730:	48 89 c7             	mov    %rax,%rdi
    6733:	e8 cc 11 00 00       	call   7904 <yy_fatal_error>
    6738:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    673b:	89 05 93 bf 01 00    	mov    %eax,0x1bf93(%rip)        # 226d4 <yy_n_chars>
    6741:	e9 ab 00 00 00       	jmp    67f1 <yy_get_next_buffer+0x466>
    6746:	e8 b5 bb ff ff       	call   2300 <__errno_location@plt>
    674b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    6751:	eb 35                	jmp    6788 <yy_get_next_buffer+0x3fd>
    6753:	e8 a8 bb ff ff       	call   2300 <__errno_location@plt>
    6758:	8b 00                	mov    (%rax),%eax
    675a:	83 f8 04             	cmp    $0x4,%eax
    675d:	74 0f                	je     676e <yy_get_next_buffer+0x3e3>
    675f:	48 8d 05 ae 38 01 00 	lea    0x138ae(%rip),%rax        # 1a014 <yy_chk+0x494>
    6766:	48 89 c7             	mov    %rax,%rdi
    6769:	e8 96 11 00 00       	call   7904 <yy_fatal_error>
    676e:	e8 8d bb ff ff       	call   2300 <__errno_location@plt>
    6773:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    6779:	48 8b 05 68 b9 01 00 	mov    0x1b968(%rip),%rax        # 220e8 <yyin>
    6780:	48 89 c7             	mov    %rax,%rdi
    6783:	e8 18 bd ff ff       	call   24a0 <clearerr@plt>
    6788:	48 8b 15 59 b9 01 00 	mov    0x1b959(%rip),%rdx        # 220e8 <yyin>
    678f:	8b 45 bc             	mov    -0x44(%rbp),%eax
    6792:	48 98                	cltq
    6794:	48 8b 0d 2d bf 01 00 	mov    0x1bf2d(%rip),%rcx        # 226c8 <yy_buffer_stack>
    679b:	48 8b 35 16 bf 01 00 	mov    0x1bf16(%rip),%rsi        # 226b8 <yy_buffer_stack_top>
    67a2:	48 c1 e6 03          	shl    $0x3,%rsi
    67a6:	48 01 f1             	add    %rsi,%rcx
    67a9:	48 8b 09             	mov    (%rcx),%rcx
    67ac:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    67b0:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    67b3:	48 63 c9             	movslq %ecx,%rcx
    67b6:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    67ba:	48 89 d1             	mov    %rdx,%rcx
    67bd:	48 89 c2             	mov    %rax,%rdx
    67c0:	be 01 00 00 00       	mov    $0x1,%esi
    67c5:	e8 96 bb ff ff       	call   2360 <fread@plt>
    67ca:	89 05 04 bf 01 00    	mov    %eax,0x1bf04(%rip)        # 226d4 <yy_n_chars>
    67d0:	8b 05 fe be 01 00    	mov    0x1befe(%rip),%eax        # 226d4 <yy_n_chars>
    67d6:	85 c0                	test   %eax,%eax
    67d8:	75 17                	jne    67f1 <yy_get_next_buffer+0x466>
    67da:	48 8b 05 07 b9 01 00 	mov    0x1b907(%rip),%rax        # 220e8 <yyin>
    67e1:	48 89 c7             	mov    %rax,%rdi
    67e4:	e8 47 bb ff ff       	call   2330 <ferror@plt>
    67e9:	85 c0                	test   %eax,%eax
    67eb:	0f 85 62 ff ff ff    	jne    6753 <yy_get_next_buffer+0x3c8>
    67f1:	48 8b 05 d0 be 01 00 	mov    0x1bed0(%rip),%rax        # 226c8 <yy_buffer_stack>
    67f8:	48 8b 15 b9 be 01 00 	mov    0x1beb9(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    67ff:	48 c1 e2 03          	shl    $0x3,%rdx
    6803:	48 01 d0             	add    %rdx,%rax
    6806:	48 8b 00             	mov    (%rax),%rax
    6809:	8b 15 c5 be 01 00    	mov    0x1bec5(%rip),%edx        # 226d4 <yy_n_chars>
    680f:	89 50 1c             	mov    %edx,0x1c(%rax)
    6812:	8b 05 bc be 01 00    	mov    0x1bebc(%rip),%eax        # 226d4 <yy_n_chars>
    6818:	85 c0                	test   %eax,%eax
    681a:	75 46                	jne    6862 <yy_get_next_buffer+0x4d7>
    681c:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    6820:	75 18                	jne    683a <yy_get_next_buffer+0x4af>
    6822:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
    6829:	48 8b 05 b8 b8 01 00 	mov    0x1b8b8(%rip),%rax        # 220e8 <yyin>
    6830:	48 89 c7             	mov    %rax,%rdi
    6833:	e8 cc 06 00 00       	call   6f04 <yyrestart>
    6838:	eb 2f                	jmp    6869 <yy_get_next_buffer+0x4de>
    683a:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    6841:	48 8b 05 80 be 01 00 	mov    0x1be80(%rip),%rax        # 226c8 <yy_buffer_stack>
    6848:	48 8b 15 69 be 01 00 	mov    0x1be69(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    684f:	48 c1 e2 03          	shl    $0x3,%rdx
    6853:	48 01 d0             	add    %rdx,%rax
    6856:	48 8b 00             	mov    (%rax),%rax
    6859:	c7 40 38 02 00 00 00 	movl   $0x2,0x38(%rax)
    6860:	eb 07                	jmp    6869 <yy_get_next_buffer+0x4de>
    6862:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    6869:	8b 15 65 be 01 00    	mov    0x1be65(%rip),%edx        # 226d4 <yy_n_chars>
    686f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    6872:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    6875:	48 8b 05 4c be 01 00 	mov    0x1be4c(%rip),%rax        # 226c8 <yy_buffer_stack>
    687c:	48 8b 15 35 be 01 00 	mov    0x1be35(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6883:	48 c1 e2 03          	shl    $0x3,%rdx
    6887:	48 01 d0             	add    %rdx,%rax
    688a:	48 8b 00             	mov    (%rax),%rax
    688d:	8b 40 18             	mov    0x18(%rax),%eax
    6890:	39 c1                	cmp    %eax,%ecx
    6892:	0f 8e b2 00 00 00    	jle    694a <yy_get_next_buffer+0x5bf>
    6898:	8b 15 36 be 01 00    	mov    0x1be36(%rip),%edx        # 226d4 <yy_n_chars>
    689e:	8b 45 c8             	mov    -0x38(%rbp),%eax
    68a1:	01 c2                	add    %eax,%edx
    68a3:	8b 05 2b be 01 00    	mov    0x1be2b(%rip),%eax        # 226d4 <yy_n_chars>
    68a9:	d1 f8                	sar    $1,%eax
    68ab:	01 d0                	add    %edx,%eax
    68ad:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    68b0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    68b3:	48 63 d0             	movslq %eax,%rdx
    68b6:	48 8b 05 0b be 01 00 	mov    0x1be0b(%rip),%rax        # 226c8 <yy_buffer_stack>
    68bd:	48 8b 0d f4 bd 01 00 	mov    0x1bdf4(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    68c4:	48 c1 e1 03          	shl    $0x3,%rcx
    68c8:	48 01 c8             	add    %rcx,%rax
    68cb:	48 8b 00             	mov    (%rax),%rax
    68ce:	48 8b 40 08          	mov    0x8(%rax),%rax
    68d2:	48 8b 0d ef bd 01 00 	mov    0x1bdef(%rip),%rcx        # 226c8 <yy_buffer_stack>
    68d9:	48 8b 35 d8 bd 01 00 	mov    0x1bdd8(%rip),%rsi        # 226b8 <yy_buffer_stack_top>
    68e0:	48 c1 e6 03          	shl    $0x3,%rsi
    68e4:	48 01 f1             	add    %rsi,%rcx
    68e7:	48 8b 19             	mov    (%rcx),%rbx
    68ea:	48 89 d6             	mov    %rdx,%rsi
    68ed:	48 89 c7             	mov    %rax,%rdi
    68f0:	e8 40 12 00 00       	call   7b35 <yyrealloc>
    68f5:	48 89 43 08          	mov    %rax,0x8(%rbx)
    68f9:	48 8b 05 c8 bd 01 00 	mov    0x1bdc8(%rip),%rax        # 226c8 <yy_buffer_stack>
    6900:	48 8b 15 b1 bd 01 00 	mov    0x1bdb1(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6907:	48 c1 e2 03          	shl    $0x3,%rdx
    690b:	48 01 d0             	add    %rdx,%rax
    690e:	48 8b 00             	mov    (%rax),%rax
    6911:	48 8b 40 08          	mov    0x8(%rax),%rax
    6915:	48 85 c0             	test   %rax,%rax
    6918:	75 0f                	jne    6929 <yy_get_next_buffer+0x59e>
    691a:	48 8d 05 17 37 01 00 	lea    0x13717(%rip),%rax        # 1a038 <yy_chk+0x4b8>
    6921:	48 89 c7             	mov    %rax,%rdi
    6924:	e8 db 0f 00 00       	call   7904 <yy_fatal_error>
    6929:	48 8b 05 98 bd 01 00 	mov    0x1bd98(%rip),%rax        # 226c8 <yy_buffer_stack>
    6930:	48 8b 15 81 bd 01 00 	mov    0x1bd81(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6937:	48 c1 e2 03          	shl    $0x3,%rdx
    693b:	48 01 d0             	add    %rdx,%rax
    693e:	48 8b 00             	mov    (%rax),%rax
    6941:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    6944:	83 ea 02             	sub    $0x2,%edx
    6947:	89 50 18             	mov    %edx,0x18(%rax)
    694a:	8b 15 84 bd 01 00    	mov    0x1bd84(%rip),%edx        # 226d4 <yy_n_chars>
    6950:	8b 45 c8             	mov    -0x38(%rbp),%eax
    6953:	01 d0                	add    %edx,%eax
    6955:	89 05 79 bd 01 00    	mov    %eax,0x1bd79(%rip)        # 226d4 <yy_n_chars>
    695b:	48 8b 05 66 bd 01 00 	mov    0x1bd66(%rip),%rax        # 226c8 <yy_buffer_stack>
    6962:	48 8b 15 4f bd 01 00 	mov    0x1bd4f(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6969:	48 c1 e2 03          	shl    $0x3,%rdx
    696d:	48 01 d0             	add    %rdx,%rax
    6970:	48 8b 00             	mov    (%rax),%rax
    6973:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6977:	8b 05 57 bd 01 00    	mov    0x1bd57(%rip),%eax        # 226d4 <yy_n_chars>
    697d:	48 98                	cltq
    697f:	48 01 d0             	add    %rdx,%rax
    6982:	c6 00 00             	movb   $0x0,(%rax)
    6985:	48 8b 05 3c bd 01 00 	mov    0x1bd3c(%rip),%rax        # 226c8 <yy_buffer_stack>
    698c:	48 8b 15 25 bd 01 00 	mov    0x1bd25(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6993:	48 c1 e2 03          	shl    $0x3,%rdx
    6997:	48 01 d0             	add    %rdx,%rax
    699a:	48 8b 00             	mov    (%rax),%rax
    699d:	48 8b 40 08          	mov    0x8(%rax),%rax
    69a1:	8b 15 2d bd 01 00    	mov    0x1bd2d(%rip),%edx        # 226d4 <yy_n_chars>
    69a7:	48 63 d2             	movslq %edx,%rdx
    69aa:	48 83 c2 01          	add    $0x1,%rdx
    69ae:	48 01 d0             	add    %rdx,%rax
    69b1:	c6 00 00             	movb   $0x0,(%rax)
    69b4:	48 8b 05 0d bd 01 00 	mov    0x1bd0d(%rip),%rax        # 226c8 <yy_buffer_stack>
    69bb:	48 8b 15 f6 bc 01 00 	mov    0x1bcf6(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    69c2:	48 c1 e2 03          	shl    $0x3,%rdx
    69c6:	48 01 d0             	add    %rdx,%rax
    69c9:	48 8b 00             	mov    (%rax),%rax
    69cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    69d0:	48 89 05 29 b7 01 00 	mov    %rax,0x1b729(%rip)        # 22100 <yytext>
    69d7:	8b 45 b8             	mov    -0x48(%rbp),%eax
    69da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    69de:	c9                   	leave
    69df:	c3                   	ret

00000000000069e0 <yy_get_previous_state>:
    69e0:	f3 0f 1e fa          	endbr64
    69e4:	55                   	push   %rbp
    69e5:	48 89 e5             	mov    %rsp,%rbp
    69e8:	8b 05 f6 bc 01 00    	mov    0x1bcf6(%rip),%eax        # 226e4 <yy_start>
    69ee:	89 45 f4             	mov    %eax,-0xc(%rbp)
    69f1:	48 8b 05 08 b7 01 00 	mov    0x1b708(%rip),%rax        # 22100 <yytext>
    69f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    69fc:	e9 fb 00 00 00       	jmp    6afc <yy_get_previous_state+0x11c>
    6a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a05:	0f b6 00             	movzbl (%rax),%eax
    6a08:	84 c0                	test   %al,%al
    6a0a:	74 19                	je     6a25 <yy_get_previous_state+0x45>
    6a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a10:	0f b6 00             	movzbl (%rax),%eax
    6a13:	0f b6 c0             	movzbl %al,%eax
    6a16:	48 98                	cltq
    6a18:	48 8d 15 81 29 01 00 	lea    0x12981(%rip),%rdx        # 193a0 <yy_ec>
    6a1f:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6a23:	eb 05                	jmp    6a2a <yy_get_previous_state+0x4a>
    6a25:	b8 01 00 00 00       	mov    $0x1,%eax
    6a2a:	88 45 f3             	mov    %al,-0xd(%rbp)
    6a2d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a30:	48 98                	cltq
    6a32:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6a36:	48 8d 05 83 27 01 00 	lea    0x12783(%rip),%rax        # 191c0 <yy_accept>
    6a3d:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6a41:	66 85 c0             	test   %ax,%ax
    6a44:	74 4b                	je     6a91 <yy_get_previous_state+0xb1>
    6a46:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a49:	89 05 9d bc 01 00    	mov    %eax,0x1bc9d(%rip)        # 226ec <yy_last_accepting_state>
    6a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a53:	48 89 05 96 bc 01 00 	mov    %rax,0x1bc96(%rip)        # 226f0 <yy_last_accepting_cpos>
    6a5a:	eb 35                	jmp    6a91 <yy_get_previous_state+0xb1>
    6a5c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a5f:	48 98                	cltq
    6a61:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6a65:	48 8d 05 74 2c 01 00 	lea    0x12c74(%rip),%rax        # 196e0 <yy_def>
    6a6c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6a70:	98                   	cwtl
    6a71:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6a74:	81 7d f4 e4 00 00 00 	cmpl   $0xe4,-0xc(%rbp)
    6a7b:	7e 14                	jle    6a91 <yy_get_previous_state+0xb1>
    6a7d:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6a81:	48 98                	cltq
    6a83:	48 8d 15 16 2a 01 00 	lea    0x12a16(%rip),%rdx        # 194a0 <yy_meta>
    6a8a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6a8e:	88 45 f3             	mov    %al,-0xd(%rbp)
    6a91:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a94:	48 98                	cltq
    6a96:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6a9a:	48 8d 05 3f 2a 01 00 	lea    0x12a3f(%rip),%rax        # 194e0 <yy_base>
    6aa1:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6aa5:	0f bf d0             	movswl %ax,%edx
    6aa8:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6aac:	01 d0                	add    %edx,%eax
    6aae:	48 98                	cltq
    6ab0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6ab4:	48 8d 05 c5 30 01 00 	lea    0x130c5(%rip),%rax        # 19b80 <yy_chk>
    6abb:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6abf:	98                   	cwtl
    6ac0:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    6ac3:	75 97                	jne    6a5c <yy_get_previous_state+0x7c>
    6ac5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6ac8:	48 98                	cltq
    6aca:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6ace:	48 8d 05 0b 2a 01 00 	lea    0x12a0b(%rip),%rax        # 194e0 <yy_base>
    6ad5:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6ad9:	0f bf d0             	movswl %ax,%edx
    6adc:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6ae0:	01 d0                	add    %edx,%eax
    6ae2:	48 98                	cltq
    6ae4:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6ae8:	48 8d 05 f1 2d 01 00 	lea    0x12df1(%rip),%rax        # 198e0 <yy_nxt>
    6aef:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6af3:	98                   	cwtl
    6af4:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6af7:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    6afc:	48 8b 05 d5 bb 01 00 	mov    0x1bbd5(%rip),%rax        # 226d8 <yy_c_buf_p>
    6b03:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    6b07:	0f 82 f4 fe ff ff    	jb     6a01 <yy_get_previous_state+0x21>
    6b0d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6b10:	5d                   	pop    %rbp
    6b11:	c3                   	ret

0000000000006b12 <yy_try_NUL_trans>:
    6b12:	f3 0f 1e fa          	endbr64
    6b16:	55                   	push   %rbp
    6b17:	48 89 e5             	mov    %rsp,%rbp
    6b1a:	89 7d ec             	mov    %edi,-0x14(%rbp)
    6b1d:	48 8b 05 b4 bb 01 00 	mov    0x1bbb4(%rip),%rax        # 226d8 <yy_c_buf_p>
    6b24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6b28:	c6 45 f3 01          	movb   $0x1,-0xd(%rbp)
    6b2c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b2f:	48 98                	cltq
    6b31:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6b35:	48 8d 05 84 26 01 00 	lea    0x12684(%rip),%rax        # 191c0 <yy_accept>
    6b3c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6b40:	66 85 c0             	test   %ax,%ax
    6b43:	74 4b                	je     6b90 <yy_try_NUL_trans+0x7e>
    6b45:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b48:	89 05 9e bb 01 00    	mov    %eax,0x1bb9e(%rip)        # 226ec <yy_last_accepting_state>
    6b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b52:	48 89 05 97 bb 01 00 	mov    %rax,0x1bb97(%rip)        # 226f0 <yy_last_accepting_cpos>
    6b59:	eb 35                	jmp    6b90 <yy_try_NUL_trans+0x7e>
    6b5b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b5e:	48 98                	cltq
    6b60:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6b64:	48 8d 05 75 2b 01 00 	lea    0x12b75(%rip),%rax        # 196e0 <yy_def>
    6b6b:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6b6f:	98                   	cwtl
    6b70:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6b73:	81 7d ec e4 00 00 00 	cmpl   $0xe4,-0x14(%rbp)
    6b7a:	7e 14                	jle    6b90 <yy_try_NUL_trans+0x7e>
    6b7c:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6b80:	48 98                	cltq
    6b82:	48 8d 15 17 29 01 00 	lea    0x12917(%rip),%rdx        # 194a0 <yy_meta>
    6b89:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6b8d:	88 45 f3             	mov    %al,-0xd(%rbp)
    6b90:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b93:	48 98                	cltq
    6b95:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6b99:	48 8d 05 40 29 01 00 	lea    0x12940(%rip),%rax        # 194e0 <yy_base>
    6ba0:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6ba4:	0f bf d0             	movswl %ax,%edx
    6ba7:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6bab:	01 d0                	add    %edx,%eax
    6bad:	48 98                	cltq
    6baf:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6bb3:	48 8d 05 c6 2f 01 00 	lea    0x12fc6(%rip),%rax        # 19b80 <yy_chk>
    6bba:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6bbe:	98                   	cwtl
    6bbf:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6bc2:	75 97                	jne    6b5b <yy_try_NUL_trans+0x49>
    6bc4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6bc7:	48 98                	cltq
    6bc9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6bcd:	48 8d 05 0c 29 01 00 	lea    0x1290c(%rip),%rax        # 194e0 <yy_base>
    6bd4:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6bd8:	0f bf d0             	movswl %ax,%edx
    6bdb:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6bdf:	01 d0                	add    %edx,%eax
    6be1:	48 98                	cltq
    6be3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6be7:	48 8d 05 f2 2c 01 00 	lea    0x12cf2(%rip),%rax        # 198e0 <yy_nxt>
    6bee:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6bf2:	98                   	cwtl
    6bf3:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6bf6:	81 7d ec e4 00 00 00 	cmpl   $0xe4,-0x14(%rbp)
    6bfd:	0f 94 c0             	sete   %al
    6c00:	0f b6 c0             	movzbl %al,%eax
    6c03:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6c06:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    6c0a:	75 05                	jne    6c11 <yy_try_NUL_trans+0xff>
    6c0c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6c0f:	eb 05                	jmp    6c16 <yy_try_NUL_trans+0x104>
    6c11:	b8 00 00 00 00       	mov    $0x0,%eax
    6c16:	5d                   	pop    %rbp
    6c17:	c3                   	ret

0000000000006c18 <yyunput>:
    6c18:	f3 0f 1e fa          	endbr64
    6c1c:	55                   	push   %rbp
    6c1d:	48 89 e5             	mov    %rsp,%rbp
    6c20:	48 83 ec 30          	sub    $0x30,%rsp
    6c24:	89 7d dc             	mov    %edi,-0x24(%rbp)
    6c27:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6c2b:	48 8b 05 a6 ba 01 00 	mov    0x1baa6(%rip),%rax        # 226d8 <yy_c_buf_p>
    6c32:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6c36:	0f b6 15 93 ba 01 00 	movzbl 0x1ba93(%rip),%edx        # 226d0 <yy_hold_char>
    6c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c41:	88 10                	mov    %dl,(%rax)
    6c43:	48 8b 05 7e ba 01 00 	mov    0x1ba7e(%rip),%rax        # 226c8 <yy_buffer_stack>
    6c4a:	48 8b 15 67 ba 01 00 	mov    0x1ba67(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6c51:	48 c1 e2 03          	shl    $0x3,%rdx
    6c55:	48 01 d0             	add    %rdx,%rax
    6c58:	48 8b 00             	mov    (%rax),%rax
    6c5b:	48 8b 40 08          	mov    0x8(%rax),%rax
    6c5f:	48 83 c0 02          	add    $0x2,%rax
    6c63:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    6c67:	0f 83 46 01 00 00    	jae    6db3 <yyunput+0x19b>
    6c6d:	8b 05 61 ba 01 00    	mov    0x1ba61(%rip),%eax        # 226d4 <yy_n_chars>
    6c73:	83 c0 02             	add    $0x2,%eax
    6c76:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    6c79:	48 8b 05 48 ba 01 00 	mov    0x1ba48(%rip),%rax        # 226c8 <yy_buffer_stack>
    6c80:	48 8b 15 31 ba 01 00 	mov    0x1ba31(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6c87:	48 c1 e2 03          	shl    $0x3,%rdx
    6c8b:	48 01 d0             	add    %rdx,%rax
    6c8e:	48 8b 00             	mov    (%rax),%rax
    6c91:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6c95:	48 8b 05 2c ba 01 00 	mov    0x1ba2c(%rip),%rax        # 226c8 <yy_buffer_stack>
    6c9c:	48 8b 0d 15 ba 01 00 	mov    0x1ba15(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    6ca3:	48 c1 e1 03          	shl    $0x3,%rcx
    6ca7:	48 01 c8             	add    %rcx,%rax
    6caa:	48 8b 00             	mov    (%rax),%rax
    6cad:	8b 40 18             	mov    0x18(%rax),%eax
    6cb0:	48 98                	cltq
    6cb2:	48 83 c0 02          	add    $0x2,%rax
    6cb6:	48 01 d0             	add    %rdx,%rax
    6cb9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6cbd:	48 8b 05 04 ba 01 00 	mov    0x1ba04(%rip),%rax        # 226c8 <yy_buffer_stack>
    6cc4:	48 8b 15 ed b9 01 00 	mov    0x1b9ed(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6ccb:	48 c1 e2 03          	shl    $0x3,%rdx
    6ccf:	48 01 d0             	add    %rdx,%rax
    6cd2:	48 8b 00             	mov    (%rax),%rax
    6cd5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6cd9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    6cdc:	48 98                	cltq
    6cde:	48 01 d0             	add    %rdx,%rax
    6ce1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6ce5:	eb 17                	jmp    6cfe <yyunput+0xe6>
    6ce7:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    6cec:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
    6cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cf5:	0f b6 10             	movzbl (%rax),%edx
    6cf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6cfc:	88 10                	mov    %dl,(%rax)
    6cfe:	48 8b 05 c3 b9 01 00 	mov    0x1b9c3(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d05:	48 8b 15 ac b9 01 00 	mov    0x1b9ac(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d0c:	48 c1 e2 03          	shl    $0x3,%rdx
    6d10:	48 01 d0             	add    %rdx,%rax
    6d13:	48 8b 00             	mov    (%rax),%rax
    6d16:	48 8b 40 08          	mov    0x8(%rax),%rax
    6d1a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    6d1e:	72 c7                	jb     6ce7 <yyunput+0xcf>
    6d20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d24:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6d28:	48 98                	cltq
    6d2a:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    6d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d32:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6d36:	48 98                	cltq
    6d38:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    6d3c:	48 8b 05 85 b9 01 00 	mov    0x1b985(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d43:	48 8b 15 6e b9 01 00 	mov    0x1b96e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d4a:	48 c1 e2 03          	shl    $0x3,%rdx
    6d4e:	48 01 d0             	add    %rdx,%rax
    6d51:	48 8b 00             	mov    (%rax),%rax
    6d54:	8b 40 18             	mov    0x18(%rax),%eax
    6d57:	89 05 77 b9 01 00    	mov    %eax,0x1b977(%rip)        # 226d4 <yy_n_chars>
    6d5d:	48 8b 05 64 b9 01 00 	mov    0x1b964(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d64:	48 8b 15 4d b9 01 00 	mov    0x1b94d(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d6b:	48 c1 e2 03          	shl    $0x3,%rdx
    6d6f:	48 01 d0             	add    %rdx,%rax
    6d72:	48 8b 00             	mov    (%rax),%rax
    6d75:	8b 15 59 b9 01 00    	mov    0x1b959(%rip),%edx        # 226d4 <yy_n_chars>
    6d7b:	89 50 1c             	mov    %edx,0x1c(%rax)
    6d7e:	48 8b 05 43 b9 01 00 	mov    0x1b943(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d85:	48 8b 15 2c b9 01 00 	mov    0x1b92c(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d8c:	48 c1 e2 03          	shl    $0x3,%rdx
    6d90:	48 01 d0             	add    %rdx,%rax
    6d93:	48 8b 00             	mov    (%rax),%rax
    6d96:	48 8b 40 08          	mov    0x8(%rax),%rax
    6d9a:	48 83 c0 02          	add    $0x2,%rax
    6d9e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    6da2:	73 0f                	jae    6db3 <yyunput+0x19b>
    6da4:	48 8d 05 bd 32 01 00 	lea    0x132bd(%rip),%rax        # 1a068 <yy_chk+0x4e8>
    6dab:	48 89 c7             	mov    %rax,%rdi
    6dae:	e8 51 0b 00 00       	call   7904 <yy_fatal_error>
    6db3:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
    6db8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6dbb:	89 c2                	mov    %eax,%edx
    6dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dc1:	88 10                	mov    %dl,(%rax)
    6dc3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6dc7:	48 89 05 32 b3 01 00 	mov    %rax,0x1b332(%rip)        # 22100 <yytext>
    6dce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dd2:	0f b6 00             	movzbl (%rax),%eax
    6dd5:	88 05 f5 b8 01 00    	mov    %al,0x1b8f5(%rip)        # 226d0 <yy_hold_char>
    6ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ddf:	48 89 05 f2 b8 01 00 	mov    %rax,0x1b8f2(%rip)        # 226d8 <yy_c_buf_p>
    6de6:	90                   	nop
    6de7:	c9                   	leave
    6de8:	c3                   	ret

0000000000006de9 <input>:
    6de9:	f3 0f 1e fa          	endbr64
    6ded:	55                   	push   %rbp
    6dee:	48 89 e5             	mov    %rsp,%rbp
    6df1:	48 83 ec 10          	sub    $0x10,%rsp
    6df5:	48 8b 05 dc b8 01 00 	mov    0x1b8dc(%rip),%rax        # 226d8 <yy_c_buf_p>
    6dfc:	0f b6 15 cd b8 01 00 	movzbl 0x1b8cd(%rip),%edx        # 226d0 <yy_hold_char>
    6e03:	88 10                	mov    %dl,(%rax)
    6e05:	48 8b 05 cc b8 01 00 	mov    0x1b8cc(%rip),%rax        # 226d8 <yy_c_buf_p>
    6e0c:	0f b6 00             	movzbl (%rax),%eax
    6e0f:	84 c0                	test   %al,%al
    6e11:	0f 85 ac 00 00 00    	jne    6ec3 <input+0xda>
    6e17:	48 8b 05 aa b8 01 00 	mov    0x1b8aa(%rip),%rax        # 226c8 <yy_buffer_stack>
    6e1e:	48 8b 15 93 b8 01 00 	mov    0x1b893(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6e25:	48 c1 e2 03          	shl    $0x3,%rdx
    6e29:	48 01 d0             	add    %rdx,%rax
    6e2c:	48 8b 00             	mov    (%rax),%rax
    6e2f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6e33:	8b 05 9b b8 01 00    	mov    0x1b89b(%rip),%eax        # 226d4 <yy_n_chars>
    6e39:	48 98                	cltq
    6e3b:	48 01 d0             	add    %rdx,%rax
    6e3e:	48 8b 15 93 b8 01 00 	mov    0x1b893(%rip),%rdx        # 226d8 <yy_c_buf_p>
    6e45:	48 39 c2             	cmp    %rax,%rdx
    6e48:	73 0c                	jae    6e56 <input+0x6d>
    6e4a:	48 8b 05 87 b8 01 00 	mov    0x1b887(%rip),%rax        # 226d8 <yy_c_buf_p>
    6e51:	c6 00 00             	movb   $0x0,(%rax)
    6e54:	eb 6d                	jmp    6ec3 <input+0xda>
    6e56:	48 8b 15 7b b8 01 00 	mov    0x1b87b(%rip),%rdx        # 226d8 <yy_c_buf_p>
    6e5d:	48 8b 05 9c b2 01 00 	mov    0x1b29c(%rip),%rax        # 22100 <yytext>
    6e64:	48 29 c2             	sub    %rax,%rdx
    6e67:	89 55 f8             	mov    %edx,-0x8(%rbp)
    6e6a:	48 8b 05 67 b8 01 00 	mov    0x1b867(%rip),%rax        # 226d8 <yy_c_buf_p>
    6e71:	48 83 c0 01          	add    $0x1,%rax
    6e75:	48 89 05 5c b8 01 00 	mov    %rax,0x1b85c(%rip)        # 226d8 <yy_c_buf_p>
    6e7c:	e8 0a f5 ff ff       	call   638b <yy_get_next_buffer>
    6e81:	83 f8 02             	cmp    $0x2,%eax
    6e84:	74 10                	je     6e96 <input+0xad>
    6e86:	83 f8 02             	cmp    $0x2,%eax
    6e89:	7f 38                	jg     6ec3 <input+0xda>
    6e8b:	85 c0                	test   %eax,%eax
    6e8d:	74 1d                	je     6eac <input+0xc3>
    6e8f:	83 f8 01             	cmp    $0x1,%eax
    6e92:	74 11                	je     6ea5 <input+0xbc>
    6e94:	eb 2d                	jmp    6ec3 <input+0xda>
    6e96:	48 8b 05 4b b2 01 00 	mov    0x1b24b(%rip),%rax        # 220e8 <yyin>
    6e9d:	48 89 c7             	mov    %rax,%rdi
    6ea0:	e8 5f 00 00 00       	call   6f04 <yyrestart>
    6ea5:	b8 00 00 00 00       	mov    $0x0,%eax
    6eaa:	eb 56                	jmp    6f02 <input+0x119>
    6eac:	48 8b 15 4d b2 01 00 	mov    0x1b24d(%rip),%rdx        # 22100 <yytext>
    6eb3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    6eb6:	48 98                	cltq
    6eb8:	48 01 d0             	add    %rdx,%rax
    6ebb:	48 89 05 16 b8 01 00 	mov    %rax,0x1b816(%rip)        # 226d8 <yy_c_buf_p>
    6ec2:	90                   	nop
    6ec3:	48 8b 05 0e b8 01 00 	mov    0x1b80e(%rip),%rax        # 226d8 <yy_c_buf_p>
    6eca:	0f b6 00             	movzbl (%rax),%eax
    6ecd:	0f b6 c0             	movzbl %al,%eax
    6ed0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    6ed3:	48 8b 05 fe b7 01 00 	mov    0x1b7fe(%rip),%rax        # 226d8 <yy_c_buf_p>
    6eda:	c6 00 00             	movb   $0x0,(%rax)
    6edd:	48 8b 05 f4 b7 01 00 	mov    0x1b7f4(%rip),%rax        # 226d8 <yy_c_buf_p>
    6ee4:	48 83 c0 01          	add    $0x1,%rax
    6ee8:	48 89 05 e9 b7 01 00 	mov    %rax,0x1b7e9(%rip)        # 226d8 <yy_c_buf_p>
    6eef:	48 8b 05 e2 b7 01 00 	mov    0x1b7e2(%rip),%rax        # 226d8 <yy_c_buf_p>
    6ef6:	0f b6 00             	movzbl (%rax),%eax
    6ef9:	88 05 d1 b7 01 00    	mov    %al,0x1b7d1(%rip)        # 226d0 <yy_hold_char>
    6eff:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6f02:	c9                   	leave
    6f03:	c3                   	ret

0000000000006f04 <yyrestart>:
    6f04:	f3 0f 1e fa          	endbr64
    6f08:	55                   	push   %rbp
    6f09:	48 89 e5             	mov    %rsp,%rbp
    6f0c:	53                   	push   %rbx
    6f0d:	48 83 ec 18          	sub    $0x18,%rsp
    6f11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f15:	48 8b 05 ac b7 01 00 	mov    0x1b7ac(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f1c:	48 85 c0             	test   %rax,%rax
    6f1f:	74 1d                	je     6f3e <yyrestart+0x3a>
    6f21:	48 8b 05 a0 b7 01 00 	mov    0x1b7a0(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f28:	48 8b 15 89 b7 01 00 	mov    0x1b789(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6f2f:	48 c1 e2 03          	shl    $0x3,%rdx
    6f33:	48 01 d0             	add    %rdx,%rax
    6f36:	48 8b 00             	mov    (%rax),%rax
    6f39:	48 85 c0             	test   %rax,%rax
    6f3c:	75 32                	jne    6f70 <yyrestart+0x6c>
    6f3e:	e8 77 06 00 00       	call   75ba <yyensure_buffer_stack>
    6f43:	48 8b 05 9e b1 01 00 	mov    0x1b19e(%rip),%rax        # 220e8 <yyin>
    6f4a:	48 8b 15 77 b7 01 00 	mov    0x1b777(%rip),%rdx        # 226c8 <yy_buffer_stack>
    6f51:	48 8b 0d 60 b7 01 00 	mov    0x1b760(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    6f58:	48 c1 e1 03          	shl    $0x3,%rcx
    6f5c:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
    6f60:	be 00 40 00 00       	mov    $0x4000,%esi
    6f65:	48 89 c7             	mov    %rax,%rdi
    6f68:	e8 cf 01 00 00       	call   713c <yy_create_buffer>
    6f6d:	48 89 03             	mov    %rax,(%rbx)
    6f70:	48 8b 05 51 b7 01 00 	mov    0x1b751(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f77:	48 85 c0             	test   %rax,%rax
    6f7a:	74 1a                	je     6f96 <yyrestart+0x92>
    6f7c:	48 8b 05 45 b7 01 00 	mov    0x1b745(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f83:	48 8b 15 2e b7 01 00 	mov    0x1b72e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6f8a:	48 c1 e2 03          	shl    $0x3,%rdx
    6f8e:	48 01 d0             	add    %rdx,%rax
    6f91:	48 8b 00             	mov    (%rax),%rax
    6f94:	eb 05                	jmp    6f9b <yyrestart+0x97>
    6f96:	b8 00 00 00 00       	mov    $0x0,%eax
    6f9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f9f:	48 89 d6             	mov    %rdx,%rsi
    6fa2:	48 89 c7             	mov    %rax,%rdi
    6fa5:	e8 bf 02 00 00       	call   7269 <yy_init_buffer>
    6faa:	e8 fe 00 00 00       	call   70ad <yy_load_buffer_state>
    6faf:	90                   	nop
    6fb0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fb4:	c9                   	leave
    6fb5:	c3                   	ret

0000000000006fb6 <yy_switch_to_buffer>:
    6fb6:	f3 0f 1e fa          	endbr64
    6fba:	55                   	push   %rbp
    6fbb:	48 89 e5             	mov    %rsp,%rbp
    6fbe:	48 83 ec 10          	sub    $0x10,%rsp
    6fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fc6:	e8 ef 05 00 00       	call   75ba <yyensure_buffer_stack>
    6fcb:	48 8b 05 f6 b6 01 00 	mov    0x1b6f6(%rip),%rax        # 226c8 <yy_buffer_stack>
    6fd2:	48 85 c0             	test   %rax,%rax
    6fd5:	74 1a                	je     6ff1 <yy_switch_to_buffer+0x3b>
    6fd7:	48 8b 05 ea b6 01 00 	mov    0x1b6ea(%rip),%rax        # 226c8 <yy_buffer_stack>
    6fde:	48 8b 15 d3 b6 01 00 	mov    0x1b6d3(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6fe5:	48 c1 e2 03          	shl    $0x3,%rdx
    6fe9:	48 01 d0             	add    %rdx,%rax
    6fec:	48 8b 00             	mov    (%rax),%rax
    6fef:	eb 05                	jmp    6ff6 <yy_switch_to_buffer+0x40>
    6ff1:	b8 00 00 00 00       	mov    $0x0,%eax
    6ff6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    6ffa:	0f 84 aa 00 00 00    	je     70aa <yy_switch_to_buffer+0xf4>
    7000:	48 8b 05 c1 b6 01 00 	mov    0x1b6c1(%rip),%rax        # 226c8 <yy_buffer_stack>
    7007:	48 85 c0             	test   %rax,%rax
    700a:	74 71                	je     707d <yy_switch_to_buffer+0xc7>
    700c:	48 8b 05 b5 b6 01 00 	mov    0x1b6b5(%rip),%rax        # 226c8 <yy_buffer_stack>
    7013:	48 8b 15 9e b6 01 00 	mov    0x1b69e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    701a:	48 c1 e2 03          	shl    $0x3,%rdx
    701e:	48 01 d0             	add    %rdx,%rax
    7021:	48 8b 00             	mov    (%rax),%rax
    7024:	48 85 c0             	test   %rax,%rax
    7027:	74 54                	je     707d <yy_switch_to_buffer+0xc7>
    7029:	48 8b 05 a8 b6 01 00 	mov    0x1b6a8(%rip),%rax        # 226d8 <yy_c_buf_p>
    7030:	0f b6 15 99 b6 01 00 	movzbl 0x1b699(%rip),%edx        # 226d0 <yy_hold_char>
    7037:	88 10                	mov    %dl,(%rax)
    7039:	48 8b 05 88 b6 01 00 	mov    0x1b688(%rip),%rax        # 226c8 <yy_buffer_stack>
    7040:	48 8b 15 71 b6 01 00 	mov    0x1b671(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7047:	48 c1 e2 03          	shl    $0x3,%rdx
    704b:	48 01 d0             	add    %rdx,%rax
    704e:	48 8b 00             	mov    (%rax),%rax
    7051:	48 8b 15 80 b6 01 00 	mov    0x1b680(%rip),%rdx        # 226d8 <yy_c_buf_p>
    7058:	48 89 50 10          	mov    %rdx,0x10(%rax)
    705c:	48 8b 05 65 b6 01 00 	mov    0x1b665(%rip),%rax        # 226c8 <yy_buffer_stack>
    7063:	48 8b 15 4e b6 01 00 	mov    0x1b64e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    706a:	48 c1 e2 03          	shl    $0x3,%rdx
    706e:	48 01 d0             	add    %rdx,%rax
    7071:	48 8b 00             	mov    (%rax),%rax
    7074:	8b 15 5a b6 01 00    	mov    0x1b65a(%rip),%edx        # 226d4 <yy_n_chars>
    707a:	89 50 1c             	mov    %edx,0x1c(%rax)
    707d:	48 8b 05 44 b6 01 00 	mov    0x1b644(%rip),%rax        # 226c8 <yy_buffer_stack>
    7084:	48 8b 15 2d b6 01 00 	mov    0x1b62d(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    708b:	48 c1 e2 03          	shl    $0x3,%rdx
    708f:	48 01 c2             	add    %rax,%rdx
    7092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7096:	48 89 02             	mov    %rax,(%rdx)
    7099:	e8 0f 00 00 00       	call   70ad <yy_load_buffer_state>
    709e:	c7 05 40 b6 01 00 01 	movl   $0x1,0x1b640(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    70a5:	00 00 00
    70a8:	eb 01                	jmp    70ab <yy_switch_to_buffer+0xf5>
    70aa:	90                   	nop
    70ab:	c9                   	leave
    70ac:	c3                   	ret

00000000000070ad <yy_load_buffer_state>:
    70ad:	f3 0f 1e fa          	endbr64
    70b1:	55                   	push   %rbp
    70b2:	48 89 e5             	mov    %rsp,%rbp
    70b5:	48 8b 05 0c b6 01 00 	mov    0x1b60c(%rip),%rax        # 226c8 <yy_buffer_stack>
    70bc:	48 8b 15 f5 b5 01 00 	mov    0x1b5f5(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    70c3:	48 c1 e2 03          	shl    $0x3,%rdx
    70c7:	48 01 d0             	add    %rdx,%rax
    70ca:	48 8b 00             	mov    (%rax),%rax
    70cd:	8b 40 1c             	mov    0x1c(%rax),%eax
    70d0:	89 05 fe b5 01 00    	mov    %eax,0x1b5fe(%rip)        # 226d4 <yy_n_chars>
    70d6:	48 8b 05 eb b5 01 00 	mov    0x1b5eb(%rip),%rax        # 226c8 <yy_buffer_stack>
    70dd:	48 8b 15 d4 b5 01 00 	mov    0x1b5d4(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    70e4:	48 c1 e2 03          	shl    $0x3,%rdx
    70e8:	48 01 d0             	add    %rdx,%rax
    70eb:	48 8b 00             	mov    (%rax),%rax
    70ee:	48 8b 40 10          	mov    0x10(%rax),%rax
    70f2:	48 89 05 df b5 01 00 	mov    %rax,0x1b5df(%rip)        # 226d8 <yy_c_buf_p>
    70f9:	48 8b 05 d8 b5 01 00 	mov    0x1b5d8(%rip),%rax        # 226d8 <yy_c_buf_p>
    7100:	48 89 05 f9 af 01 00 	mov    %rax,0x1aff9(%rip)        # 22100 <yytext>
    7107:	48 8b 05 ba b5 01 00 	mov    0x1b5ba(%rip),%rax        # 226c8 <yy_buffer_stack>
    710e:	48 8b 15 a3 b5 01 00 	mov    0x1b5a3(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7115:	48 c1 e2 03          	shl    $0x3,%rdx
    7119:	48 01 d0             	add    %rdx,%rax
    711c:	48 8b 00             	mov    (%rax),%rax
    711f:	48 8b 00             	mov    (%rax),%rax
    7122:	48 89 05 bf af 01 00 	mov    %rax,0x1afbf(%rip)        # 220e8 <yyin>
    7129:	48 8b 05 a8 b5 01 00 	mov    0x1b5a8(%rip),%rax        # 226d8 <yy_c_buf_p>
    7130:	0f b6 00             	movzbl (%rax),%eax
    7133:	88 05 97 b5 01 00    	mov    %al,0x1b597(%rip)        # 226d0 <yy_hold_char>
    7139:	90                   	nop
    713a:	5d                   	pop    %rbp
    713b:	c3                   	ret

000000000000713c <yy_create_buffer>:
    713c:	f3 0f 1e fa          	endbr64
    7140:	55                   	push   %rbp
    7141:	48 89 e5             	mov    %rsp,%rbp
    7144:	48 83 ec 20          	sub    $0x20,%rsp
    7148:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    714c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    714f:	bf 40 00 00 00       	mov    $0x40,%edi
    7154:	e8 be 09 00 00       	call   7b17 <yyalloc>
    7159:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    715d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7162:	75 0f                	jne    7173 <yy_create_buffer+0x37>
    7164:	48 8d 05 1d 2f 01 00 	lea    0x12f1d(%rip),%rax        # 1a088 <yy_chk+0x508>
    716b:	48 89 c7             	mov    %rax,%rdi
    716e:	e8 91 07 00 00       	call   7904 <yy_fatal_error>
    7173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7177:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    717a:	89 50 18             	mov    %edx,0x18(%rax)
    717d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7181:	8b 40 18             	mov    0x18(%rax),%eax
    7184:	83 c0 02             	add    $0x2,%eax
    7187:	48 98                	cltq
    7189:	48 89 c7             	mov    %rax,%rdi
    718c:	e8 86 09 00 00       	call   7b17 <yyalloc>
    7191:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7195:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    719d:	48 8b 40 08          	mov    0x8(%rax),%rax
    71a1:	48 85 c0             	test   %rax,%rax
    71a4:	75 0f                	jne    71b5 <yy_create_buffer+0x79>
    71a6:	48 8d 05 db 2e 01 00 	lea    0x12edb(%rip),%rax        # 1a088 <yy_chk+0x508>
    71ad:	48 89 c7             	mov    %rax,%rdi
    71b0:	e8 4f 07 00 00       	call   7904 <yy_fatal_error>
    71b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71b9:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
    71c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    71c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c8:	48 89 d6             	mov    %rdx,%rsi
    71cb:	48 89 c7             	mov    %rax,%rdi
    71ce:	e8 96 00 00 00       	call   7269 <yy_init_buffer>
    71d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d7:	c9                   	leave
    71d8:	c3                   	ret

00000000000071d9 <yy_delete_buffer>:
    71d9:	f3 0f 1e fa          	endbr64
    71dd:	55                   	push   %rbp
    71de:	48 89 e5             	mov    %rsp,%rbp
    71e1:	48 83 ec 10          	sub    $0x10,%rsp
    71e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71e9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    71ee:	74 76                	je     7266 <yy_delete_buffer+0x8d>
    71f0:	48 8b 05 d1 b4 01 00 	mov    0x1b4d1(%rip),%rax        # 226c8 <yy_buffer_stack>
    71f7:	48 85 c0             	test   %rax,%rax
    71fa:	74 1a                	je     7216 <yy_delete_buffer+0x3d>
    71fc:	48 8b 05 c5 b4 01 00 	mov    0x1b4c5(%rip),%rax        # 226c8 <yy_buffer_stack>
    7203:	48 8b 15 ae b4 01 00 	mov    0x1b4ae(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    720a:	48 c1 e2 03          	shl    $0x3,%rdx
    720e:	48 01 d0             	add    %rdx,%rax
    7211:	48 8b 00             	mov    (%rax),%rax
    7214:	eb 05                	jmp    721b <yy_delete_buffer+0x42>
    7216:	b8 00 00 00 00       	mov    $0x0,%eax
    721b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    721f:	75 1c                	jne    723d <yy_delete_buffer+0x64>
    7221:	48 8b 05 a0 b4 01 00 	mov    0x1b4a0(%rip),%rax        # 226c8 <yy_buffer_stack>
    7228:	48 8b 15 89 b4 01 00 	mov    0x1b489(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    722f:	48 c1 e2 03          	shl    $0x3,%rdx
    7233:	48 01 d0             	add    %rdx,%rax
    7236:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    723d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7241:	8b 40 20             	mov    0x20(%rax),%eax
    7244:	85 c0                	test   %eax,%eax
    7246:	74 10                	je     7258 <yy_delete_buffer+0x7f>
    7248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    724c:	48 8b 40 08          	mov    0x8(%rax),%rax
    7250:	48 89 c7             	mov    %rax,%rdi
    7253:	e8 06 09 00 00       	call   7b5e <yyfree>
    7258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    725c:	48 89 c7             	mov    %rax,%rdi
    725f:	e8 fa 08 00 00       	call   7b5e <yyfree>
    7264:	eb 01                	jmp    7267 <yy_delete_buffer+0x8e>
    7266:	90                   	nop
    7267:	c9                   	leave
    7268:	c3                   	ret

0000000000007269 <yy_init_buffer>:
    7269:	f3 0f 1e fa          	endbr64
    726d:	55                   	push   %rbp
    726e:	48 89 e5             	mov    %rsp,%rbp
    7271:	48 83 ec 20          	sub    $0x20,%rsp
    7275:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7279:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    727d:	e8 7e b0 ff ff       	call   2300 <__errno_location@plt>
    7282:	8b 00                	mov    (%rax),%eax
    7284:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7287:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    728b:	48 89 c7             	mov    %rax,%rdi
    728e:	e8 9b 00 00 00       	call   732e <yy_flush_buffer>
    7293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7297:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    729b:	48 89 10             	mov    %rdx,(%rax)
    729e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72a2:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)
    72a9:	48 8b 05 18 b4 01 00 	mov    0x1b418(%rip),%rax        # 226c8 <yy_buffer_stack>
    72b0:	48 85 c0             	test   %rax,%rax
    72b3:	74 1a                	je     72cf <yy_init_buffer+0x66>
    72b5:	48 8b 05 0c b4 01 00 	mov    0x1b40c(%rip),%rax        # 226c8 <yy_buffer_stack>
    72bc:	48 8b 15 f5 b3 01 00 	mov    0x1b3f5(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    72c3:	48 c1 e2 03          	shl    $0x3,%rdx
    72c7:	48 01 d0             	add    %rdx,%rax
    72ca:	48 8b 00             	mov    (%rax),%rax
    72cd:	eb 05                	jmp    72d4 <yy_init_buffer+0x6b>
    72cf:	b8 00 00 00 00       	mov    $0x0,%eax
    72d4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    72d8:	74 16                	je     72f0 <yy_init_buffer+0x87>
    72da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72de:	c7 40 2c 01 00 00 00 	movl   $0x1,0x2c(%rax)
    72e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72e9:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    72f0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    72f5:	74 1e                	je     7315 <yy_init_buffer+0xac>
    72f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72fb:	48 89 c7             	mov    %rax,%rdi
    72fe:	e8 bd b1 ff ff       	call   24c0 <fileno@plt>
    7303:	89 c7                	mov    %eax,%edi
    7305:	e8 36 b0 ff ff       	call   2340 <isatty@plt>
    730a:	85 c0                	test   %eax,%eax
    730c:	7e 07                	jle    7315 <yy_init_buffer+0xac>
    730e:	ba 01 00 00 00       	mov    $0x1,%edx
    7313:	eb 05                	jmp    731a <yy_init_buffer+0xb1>
    7315:	ba 00 00 00 00       	mov    $0x0,%edx
    731a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    731e:	89 50 24             	mov    %edx,0x24(%rax)
    7321:	e8 da af ff ff       	call   2300 <__errno_location@plt>
    7326:	8b 55 fc             	mov    -0x4(%rbp),%edx
    7329:	89 10                	mov    %edx,(%rax)
    732b:	90                   	nop
    732c:	c9                   	leave
    732d:	c3                   	ret

000000000000732e <yy_flush_buffer>:
    732e:	f3 0f 1e fa          	endbr64
    7332:	55                   	push   %rbp
    7333:	48 89 e5             	mov    %rsp,%rbp
    7336:	48 83 ec 08          	sub    $0x8,%rsp
    733a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    733e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7343:	0f 84 83 00 00 00    	je     73cc <yy_flush_buffer+0x9e>
    7349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    734d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    7354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7358:	48 8b 40 08          	mov    0x8(%rax),%rax
    735c:	c6 00 00             	movb   $0x0,(%rax)
    735f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7363:	48 8b 40 08          	mov    0x8(%rax),%rax
    7367:	48 83 c0 01          	add    $0x1,%rax
    736b:	c6 00 00             	movb   $0x0,(%rax)
    736e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7372:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    737a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    737e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7382:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    7389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738d:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    7394:	48 8b 05 2d b3 01 00 	mov    0x1b32d(%rip),%rax        # 226c8 <yy_buffer_stack>
    739b:	48 85 c0             	test   %rax,%rax
    739e:	74 1a                	je     73ba <yy_flush_buffer+0x8c>
    73a0:	48 8b 05 21 b3 01 00 	mov    0x1b321(%rip),%rax        # 226c8 <yy_buffer_stack>
    73a7:	48 8b 15 0a b3 01 00 	mov    0x1b30a(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    73ae:	48 c1 e2 03          	shl    $0x3,%rdx
    73b2:	48 01 d0             	add    %rdx,%rax
    73b5:	48 8b 00             	mov    (%rax),%rax
    73b8:	eb 05                	jmp    73bf <yy_flush_buffer+0x91>
    73ba:	b8 00 00 00 00       	mov    $0x0,%eax
    73bf:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    73c3:	75 08                	jne    73cd <yy_flush_buffer+0x9f>
    73c5:	e8 e3 fc ff ff       	call   70ad <yy_load_buffer_state>
    73ca:	eb 01                	jmp    73cd <yy_flush_buffer+0x9f>
    73cc:	90                   	nop
    73cd:	c9                   	leave
    73ce:	c3                   	ret

00000000000073cf <yypush_buffer_state>:
    73cf:	f3 0f 1e fa          	endbr64
    73d3:	55                   	push   %rbp
    73d4:	48 89 e5             	mov    %rsp,%rbp
    73d7:	48 83 ec 10          	sub    $0x10,%rsp
    73db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73df:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    73e4:	0f 84 ea 00 00 00    	je     74d4 <yypush_buffer_state+0x105>
    73ea:	e8 cb 01 00 00       	call   75ba <yyensure_buffer_stack>
    73ef:	48 8b 05 d2 b2 01 00 	mov    0x1b2d2(%rip),%rax        # 226c8 <yy_buffer_stack>
    73f6:	48 85 c0             	test   %rax,%rax
    73f9:	74 71                	je     746c <yypush_buffer_state+0x9d>
    73fb:	48 8b 05 c6 b2 01 00 	mov    0x1b2c6(%rip),%rax        # 226c8 <yy_buffer_stack>
    7402:	48 8b 15 af b2 01 00 	mov    0x1b2af(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7409:	48 c1 e2 03          	shl    $0x3,%rdx
    740d:	48 01 d0             	add    %rdx,%rax
    7410:	48 8b 00             	mov    (%rax),%rax
    7413:	48 85 c0             	test   %rax,%rax
    7416:	74 54                	je     746c <yypush_buffer_state+0x9d>
    7418:	48 8b 05 b9 b2 01 00 	mov    0x1b2b9(%rip),%rax        # 226d8 <yy_c_buf_p>
    741f:	0f b6 15 aa b2 01 00 	movzbl 0x1b2aa(%rip),%edx        # 226d0 <yy_hold_char>
    7426:	88 10                	mov    %dl,(%rax)
    7428:	48 8b 05 99 b2 01 00 	mov    0x1b299(%rip),%rax        # 226c8 <yy_buffer_stack>
    742f:	48 8b 15 82 b2 01 00 	mov    0x1b282(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7436:	48 c1 e2 03          	shl    $0x3,%rdx
    743a:	48 01 d0             	add    %rdx,%rax
    743d:	48 8b 00             	mov    (%rax),%rax
    7440:	48 8b 15 91 b2 01 00 	mov    0x1b291(%rip),%rdx        # 226d8 <yy_c_buf_p>
    7447:	48 89 50 10          	mov    %rdx,0x10(%rax)
    744b:	48 8b 05 76 b2 01 00 	mov    0x1b276(%rip),%rax        # 226c8 <yy_buffer_stack>
    7452:	48 8b 15 5f b2 01 00 	mov    0x1b25f(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7459:	48 c1 e2 03          	shl    $0x3,%rdx
    745d:	48 01 d0             	add    %rdx,%rax
    7460:	48 8b 00             	mov    (%rax),%rax
    7463:	8b 15 6b b2 01 00    	mov    0x1b26b(%rip),%edx        # 226d4 <yy_n_chars>
    7469:	89 50 1c             	mov    %edx,0x1c(%rax)
    746c:	48 8b 05 55 b2 01 00 	mov    0x1b255(%rip),%rax        # 226c8 <yy_buffer_stack>
    7473:	48 85 c0             	test   %rax,%rax
    7476:	74 2f                	je     74a7 <yypush_buffer_state+0xd8>
    7478:	48 8b 05 49 b2 01 00 	mov    0x1b249(%rip),%rax        # 226c8 <yy_buffer_stack>
    747f:	48 8b 15 32 b2 01 00 	mov    0x1b232(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7486:	48 c1 e2 03          	shl    $0x3,%rdx
    748a:	48 01 d0             	add    %rdx,%rax
    748d:	48 8b 00             	mov    (%rax),%rax
    7490:	48 85 c0             	test   %rax,%rax
    7493:	74 12                	je     74a7 <yypush_buffer_state+0xd8>
    7495:	48 8b 05 1c b2 01 00 	mov    0x1b21c(%rip),%rax        # 226b8 <yy_buffer_stack_top>
    749c:	48 83 c0 01          	add    $0x1,%rax
    74a0:	48 89 05 11 b2 01 00 	mov    %rax,0x1b211(%rip)        # 226b8 <yy_buffer_stack_top>
    74a7:	48 8b 05 1a b2 01 00 	mov    0x1b21a(%rip),%rax        # 226c8 <yy_buffer_stack>
    74ae:	48 8b 15 03 b2 01 00 	mov    0x1b203(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    74b5:	48 c1 e2 03          	shl    $0x3,%rdx
    74b9:	48 01 c2             	add    %rax,%rdx
    74bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c0:	48 89 02             	mov    %rax,(%rdx)
    74c3:	e8 e5 fb ff ff       	call   70ad <yy_load_buffer_state>
    74c8:	c7 05 16 b2 01 00 01 	movl   $0x1,0x1b216(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    74cf:	00 00 00
    74d2:	eb 01                	jmp    74d5 <yypush_buffer_state+0x106>
    74d4:	90                   	nop
    74d5:	c9                   	leave
    74d6:	c3                   	ret

00000000000074d7 <yypop_buffer_state>:
    74d7:	f3 0f 1e fa          	endbr64
    74db:	55                   	push   %rbp
    74dc:	48 89 e5             	mov    %rsp,%rbp
    74df:	48 8b 05 e2 b1 01 00 	mov    0x1b1e2(%rip),%rax        # 226c8 <yy_buffer_stack>
    74e6:	48 85 c0             	test   %rax,%rax
    74e9:	0f 84 c8 00 00 00    	je     75b7 <yypop_buffer_state+0xe0>
    74ef:	48 8b 05 d2 b1 01 00 	mov    0x1b1d2(%rip),%rax        # 226c8 <yy_buffer_stack>
    74f6:	48 8b 15 bb b1 01 00 	mov    0x1b1bb(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    74fd:	48 c1 e2 03          	shl    $0x3,%rdx
    7501:	48 01 d0             	add    %rdx,%rax
    7504:	48 8b 00             	mov    (%rax),%rax
    7507:	48 85 c0             	test   %rax,%rax
    750a:	0f 84 a7 00 00 00    	je     75b7 <yypop_buffer_state+0xe0>
    7510:	48 8b 05 b1 b1 01 00 	mov    0x1b1b1(%rip),%rax        # 226c8 <yy_buffer_stack>
    7517:	48 85 c0             	test   %rax,%rax
    751a:	74 1a                	je     7536 <yypop_buffer_state+0x5f>
    751c:	48 8b 05 a5 b1 01 00 	mov    0x1b1a5(%rip),%rax        # 226c8 <yy_buffer_stack>
    7523:	48 8b 15 8e b1 01 00 	mov    0x1b18e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    752a:	48 c1 e2 03          	shl    $0x3,%rdx
    752e:	48 01 d0             	add    %rdx,%rax
    7531:	48 8b 00             	mov    (%rax),%rax
    7534:	eb 05                	jmp    753b <yypop_buffer_state+0x64>
    7536:	b8 00 00 00 00       	mov    $0x0,%eax
    753b:	48 89 c7             	mov    %rax,%rdi
    753e:	e8 96 fc ff ff       	call   71d9 <yy_delete_buffer>
    7543:	48 8b 05 7e b1 01 00 	mov    0x1b17e(%rip),%rax        # 226c8 <yy_buffer_stack>
    754a:	48 8b 15 67 b1 01 00 	mov    0x1b167(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7551:	48 c1 e2 03          	shl    $0x3,%rdx
    7555:	48 01 d0             	add    %rdx,%rax
    7558:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    755f:	48 8b 05 52 b1 01 00 	mov    0x1b152(%rip),%rax        # 226b8 <yy_buffer_stack_top>
    7566:	48 85 c0             	test   %rax,%rax
    7569:	74 12                	je     757d <yypop_buffer_state+0xa6>
    756b:	48 8b 05 46 b1 01 00 	mov    0x1b146(%rip),%rax        # 226b8 <yy_buffer_stack_top>
    7572:	48 83 e8 01          	sub    $0x1,%rax
    7576:	48 89 05 3b b1 01 00 	mov    %rax,0x1b13b(%rip)        # 226b8 <yy_buffer_stack_top>
    757d:	48 8b 05 44 b1 01 00 	mov    0x1b144(%rip),%rax        # 226c8 <yy_buffer_stack>
    7584:	48 85 c0             	test   %rax,%rax
    7587:	74 2f                	je     75b8 <yypop_buffer_state+0xe1>
    7589:	48 8b 05 38 b1 01 00 	mov    0x1b138(%rip),%rax        # 226c8 <yy_buffer_stack>
    7590:	48 8b 15 21 b1 01 00 	mov    0x1b121(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7597:	48 c1 e2 03          	shl    $0x3,%rdx
    759b:	48 01 d0             	add    %rdx,%rax
    759e:	48 8b 00             	mov    (%rax),%rax
    75a1:	48 85 c0             	test   %rax,%rax
    75a4:	74 12                	je     75b8 <yypop_buffer_state+0xe1>
    75a6:	e8 02 fb ff ff       	call   70ad <yy_load_buffer_state>
    75ab:	c7 05 33 b1 01 00 01 	movl   $0x1,0x1b133(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    75b2:	00 00 00
    75b5:	eb 01                	jmp    75b8 <yypop_buffer_state+0xe1>
    75b7:	90                   	nop
    75b8:	5d                   	pop    %rbp
    75b9:	c3                   	ret

00000000000075ba <yyensure_buffer_stack>:
    75ba:	f3 0f 1e fa          	endbr64
    75be:	55                   	push   %rbp
    75bf:	48 89 e5             	mov    %rsp,%rbp
    75c2:	48 83 ec 10          	sub    $0x10,%rsp
    75c6:	48 8b 05 fb b0 01 00 	mov    0x1b0fb(%rip),%rax        # 226c8 <yy_buffer_stack>
    75cd:	48 85 c0             	test   %rax,%rax
    75d0:	75 75                	jne    7647 <yyensure_buffer_stack+0x8d>
    75d2:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
    75d9:	00
    75da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75de:	48 c1 e0 03          	shl    $0x3,%rax
    75e2:	48 89 c7             	mov    %rax,%rdi
    75e5:	e8 2d 05 00 00       	call   7b17 <yyalloc>
    75ea:	48 89 05 d7 b0 01 00 	mov    %rax,0x1b0d7(%rip)        # 226c8 <yy_buffer_stack>
    75f1:	48 8b 05 d0 b0 01 00 	mov    0x1b0d0(%rip),%rax        # 226c8 <yy_buffer_stack>
    75f8:	48 85 c0             	test   %rax,%rax
    75fb:	75 0f                	jne    760c <yyensure_buffer_stack+0x52>
    75fd:	48 8d 05 b4 2a 01 00 	lea    0x12ab4(%rip),%rax        # 1a0b8 <yy_chk+0x538>
    7604:	48 89 c7             	mov    %rax,%rdi
    7607:	e8 f8 02 00 00       	call   7904 <yy_fatal_error>
    760c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7610:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7617:	00
    7618:	48 8b 05 a9 b0 01 00 	mov    0x1b0a9(%rip),%rax        # 226c8 <yy_buffer_stack>
    761f:	be 00 00 00 00       	mov    $0x0,%esi
    7624:	48 89 c7             	mov    %rax,%rdi
    7627:	e8 c4 ad ff ff       	call   23f0 <memset@plt>
    762c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7630:	48 89 05 89 b0 01 00 	mov    %rax,0x1b089(%rip)        # 226c0 <yy_buffer_stack_max>
    7637:	48 c7 05 76 b0 01 00 	movq   $0x0,0x1b076(%rip)        # 226b8 <yy_buffer_stack_top>
    763e:	00 00 00 00
    7642:	e9 ae 00 00 00       	jmp    76f5 <yyensure_buffer_stack+0x13b>
    7647:	48 8b 05 72 b0 01 00 	mov    0x1b072(%rip),%rax        # 226c0 <yy_buffer_stack_max>
    764e:	48 83 e8 01          	sub    $0x1,%rax
    7652:	48 8b 15 5f b0 01 00 	mov    0x1b05f(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7659:	48 39 c2             	cmp    %rax,%rdx
    765c:	0f 82 93 00 00 00    	jb     76f5 <yyensure_buffer_stack+0x13b>
    7662:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    7669:	00
    766a:	48 8b 15 4f b0 01 00 	mov    0x1b04f(%rip),%rdx        # 226c0 <yy_buffer_stack_max>
    7671:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7675:	48 01 d0             	add    %rdx,%rax
    7678:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    767c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7680:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7687:	00
    7688:	48 8b 05 39 b0 01 00 	mov    0x1b039(%rip),%rax        # 226c8 <yy_buffer_stack>
    768f:	48 89 d6             	mov    %rdx,%rsi
    7692:	48 89 c7             	mov    %rax,%rdi
    7695:	e8 9b 04 00 00       	call   7b35 <yyrealloc>
    769a:	48 89 05 27 b0 01 00 	mov    %rax,0x1b027(%rip)        # 226c8 <yy_buffer_stack>
    76a1:	48 8b 05 20 b0 01 00 	mov    0x1b020(%rip),%rax        # 226c8 <yy_buffer_stack>
    76a8:	48 85 c0             	test   %rax,%rax
    76ab:	75 0f                	jne    76bc <yyensure_buffer_stack+0x102>
    76ad:	48 8d 05 04 2a 01 00 	lea    0x12a04(%rip),%rax        # 1a0b8 <yy_chk+0x538>
    76b4:	48 89 c7             	mov    %rax,%rdi
    76b7:	e8 48 02 00 00       	call   7904 <yy_fatal_error>
    76bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    76c0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    76c7:	00
    76c8:	48 8b 05 f9 af 01 00 	mov    0x1aff9(%rip),%rax        # 226c8 <yy_buffer_stack>
    76cf:	48 8b 0d ea af 01 00 	mov    0x1afea(%rip),%rcx        # 226c0 <yy_buffer_stack_max>
    76d6:	48 c1 e1 03          	shl    $0x3,%rcx
    76da:	48 01 c8             	add    %rcx,%rax
    76dd:	be 00 00 00 00       	mov    $0x0,%esi
    76e2:	48 89 c7             	mov    %rax,%rdi
    76e5:	e8 06 ad ff ff       	call   23f0 <memset@plt>
    76ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ee:	48 89 05 cb af 01 00 	mov    %rax,0x1afcb(%rip)        # 226c0 <yy_buffer_stack_max>
    76f5:	c9                   	leave
    76f6:	c3                   	ret

00000000000076f7 <yy_scan_buffer>:
    76f7:	f3 0f 1e fa          	endbr64
    76fb:	55                   	push   %rbp
    76fc:	48 89 e5             	mov    %rsp,%rbp
    76ff:	48 83 ec 20          	sub    $0x20,%rsp
    7703:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7707:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    770b:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
    7710:	76 2c                	jbe    773e <yy_scan_buffer+0x47>
    7712:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7716:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    771a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    771e:	48 01 d0             	add    %rdx,%rax
    7721:	0f b6 00             	movzbl (%rax),%eax
    7724:	84 c0                	test   %al,%al
    7726:	75 16                	jne    773e <yy_scan_buffer+0x47>
    7728:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    772c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    7730:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7734:	48 01 d0             	add    %rdx,%rax
    7737:	0f b6 00             	movzbl (%rax),%eax
    773a:	84 c0                	test   %al,%al
    773c:	74 0a                	je     7748 <yy_scan_buffer+0x51>
    773e:	b8 00 00 00 00       	mov    $0x0,%eax
    7743:	e9 b0 00 00 00       	jmp    77f8 <yy_scan_buffer+0x101>
    7748:	bf 40 00 00 00       	mov    $0x40,%edi
    774d:	e8 c5 03 00 00       	call   7b17 <yyalloc>
    7752:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7756:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    775b:	75 0f                	jne    776c <yy_scan_buffer+0x75>
    775d:	48 8d 05 8c 29 01 00 	lea    0x1298c(%rip),%rax        # 1a0f0 <yy_chk+0x570>
    7764:	48 89 c7             	mov    %rax,%rdi
    7767:	e8 98 01 00 00       	call   7904 <yy_fatal_error>
    776c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7770:	83 e8 02             	sub    $0x2,%eax
    7773:	89 c2                	mov    %eax,%edx
    7775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7779:	89 50 18             	mov    %edx,0x18(%rax)
    777c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7780:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7784:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    778c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7794:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    779c:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    77a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    77ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77b2:	8b 50 18             	mov    0x18(%rax),%edx
    77b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77b9:	89 50 1c             	mov    %edx,0x1c(%rax)
    77bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77c0:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    77c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77cb:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    77d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77d6:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    77dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77e1:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    77e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ec:	48 89 c7             	mov    %rax,%rdi
    77ef:	e8 c2 f7 ff ff       	call   6fb6 <yy_switch_to_buffer>
    77f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77f8:	c9                   	leave
    77f9:	c3                   	ret

00000000000077fa <yy_scan_string>:
    77fa:	f3 0f 1e fa          	endbr64
    77fe:	55                   	push   %rbp
    77ff:	48 89 e5             	mov    %rsp,%rbp
    7802:	48 83 ec 10          	sub    $0x10,%rsp
    7806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    780a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    780e:	48 89 c7             	mov    %rax,%rdi
    7811:	e8 7a ab ff ff       	call   2390 <strlen@plt>
    7816:	89 c2                	mov    %eax,%edx
    7818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    781c:	89 d6                	mov    %edx,%esi
    781e:	48 89 c7             	mov    %rax,%rdi
    7821:	e8 02 00 00 00       	call   7828 <yy_scan_bytes>
    7826:	c9                   	leave
    7827:	c3                   	ret

0000000000007828 <yy_scan_bytes>:
    7828:	f3 0f 1e fa          	endbr64
    782c:	55                   	push   %rbp
    782d:	48 89 e5             	mov    %rsp,%rbp
    7830:	48 83 ec 30          	sub    $0x30,%rsp
    7834:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7838:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    783b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    783e:	83 c0 02             	add    $0x2,%eax
    7841:	48 98                	cltq
    7843:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7847:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    784b:	48 89 c7             	mov    %rax,%rdi
    784e:	e8 c4 02 00 00       	call   7b17 <yyalloc>
    7853:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7857:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    785c:	75 0f                	jne    786d <yy_scan_bytes+0x45>
    785e:	48 8d 05 bb 28 01 00 	lea    0x128bb(%rip),%rax        # 1a120 <yy_chk+0x5a0>
    7865:	48 89 c7             	mov    %rax,%rdi
    7868:	e8 97 00 00 00       	call   7904 <yy_fatal_error>
    786d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    7874:	eb 23                	jmp    7899 <yy_scan_bytes+0x71>
    7876:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    7879:	48 63 d0             	movslq %eax,%rdx
    787c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7880:	48 01 d0             	add    %rdx,%rax
    7883:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    7886:	48 63 ca             	movslq %edx,%rcx
    7889:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    788d:	48 01 ca             	add    %rcx,%rdx
    7890:	0f b6 00             	movzbl (%rax),%eax
    7893:	88 02                	mov    %al,(%rdx)
    7895:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    7899:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    789c:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    789f:	7c d5                	jl     7876 <yy_scan_bytes+0x4e>
    78a1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    78a4:	48 98                	cltq
    78a6:	48 8d 50 01          	lea    0x1(%rax),%rdx
    78aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    78ae:	48 01 d0             	add    %rdx,%rax
    78b1:	c6 00 00             	movb   $0x0,(%rax)
    78b4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    78b7:	48 63 ca             	movslq %edx,%rcx
    78ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78be:	48 01 ca             	add    %rcx,%rdx
    78c1:	0f b6 00             	movzbl (%rax),%eax
    78c4:	88 02                	mov    %al,(%rdx)
    78c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    78ce:	48 89 d6             	mov    %rdx,%rsi
    78d1:	48 89 c7             	mov    %rax,%rdi
    78d4:	e8 1e fe ff ff       	call   76f7 <yy_scan_buffer>
    78d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    78dd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    78e2:	75 0f                	jne    78f3 <yy_scan_bytes+0xcb>
    78e4:	48 8d 05 5e 28 01 00 	lea    0x1285e(%rip),%rax        # 1a149 <yy_chk+0x5c9>
    78eb:	48 89 c7             	mov    %rax,%rdi
    78ee:	e8 11 00 00 00       	call   7904 <yy_fatal_error>
    78f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f7:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
    78fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7902:	c9                   	leave
    7903:	c3                   	ret

0000000000007904 <yy_fatal_error>:
    7904:	f3 0f 1e fa          	endbr64
    7908:	55                   	push   %rbp
    7909:	48 89 e5             	mov    %rsp,%rbp
    790c:	48 83 ec 10          	sub    $0x10,%rsp
    7910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7914:	48 8b 05 45 a7 01 00 	mov    0x1a745(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    791b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    791f:	48 8d 0d 41 28 01 00 	lea    0x12841(%rip),%rcx        # 1a167 <yy_chk+0x5e7>
    7926:	48 89 ce             	mov    %rcx,%rsi
    7929:	48 89 c7             	mov    %rax,%rdi
    792c:	b8 00 00 00 00       	mov    $0x0,%eax
    7931:	e8 3a ab ff ff       	call   2470 <fprintf@plt>
    7936:	bf 02 00 00 00       	mov    $0x2,%edi
    793b:	e8 00 ac ff ff       	call   2540 <exit@plt>

0000000000007940 <yyget_lineno>:
    7940:	f3 0f 1e fa          	endbr64
    7944:	55                   	push   %rbp
    7945:	48 89 e5             	mov    %rsp,%rbp
    7948:	8b 05 c2 a6 01 00    	mov    0x1a6c2(%rip),%eax        # 22010 <yylineno>
    794e:	5d                   	pop    %rbp
    794f:	c3                   	ret

0000000000007950 <yyget_in>:
    7950:	f3 0f 1e fa          	endbr64
    7954:	55                   	push   %rbp
    7955:	48 89 e5             	mov    %rsp,%rbp
    7958:	48 8b 05 89 a7 01 00 	mov    0x1a789(%rip),%rax        # 220e8 <yyin>
    795f:	5d                   	pop    %rbp
    7960:	c3                   	ret

0000000000007961 <yyget_out>:
    7961:	f3 0f 1e fa          	endbr64
    7965:	55                   	push   %rbp
    7966:	48 89 e5             	mov    %rsp,%rbp
    7969:	48 8b 05 80 a7 01 00 	mov    0x1a780(%rip),%rax        # 220f0 <yyout>
    7970:	5d                   	pop    %rbp
    7971:	c3                   	ret

0000000000007972 <yyget_leng>:
    7972:	f3 0f 1e fa          	endbr64
    7976:	55                   	push   %rbp
    7977:	48 89 e5             	mov    %rsp,%rbp
    797a:	8b 05 60 a7 01 00    	mov    0x1a760(%rip),%eax        # 220e0 <yyleng>
    7980:	5d                   	pop    %rbp
    7981:	c3                   	ret

0000000000007982 <yyget_text>:
    7982:	f3 0f 1e fa          	endbr64
    7986:	55                   	push   %rbp
    7987:	48 89 e5             	mov    %rsp,%rbp
    798a:	48 8b 05 6f a7 01 00 	mov    0x1a76f(%rip),%rax        # 22100 <yytext>
    7991:	5d                   	pop    %rbp
    7992:	c3                   	ret

0000000000007993 <yyset_lineno>:
    7993:	f3 0f 1e fa          	endbr64
    7997:	55                   	push   %rbp
    7998:	48 89 e5             	mov    %rsp,%rbp
    799b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    799e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    79a1:	89 05 69 a6 01 00    	mov    %eax,0x1a669(%rip)        # 22010 <yylineno>
    79a7:	90                   	nop
    79a8:	5d                   	pop    %rbp
    79a9:	c3                   	ret

00000000000079aa <yyset_in>:
    79aa:	f3 0f 1e fa          	endbr64
    79ae:	55                   	push   %rbp
    79af:	48 89 e5             	mov    %rsp,%rbp
    79b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ba:	48 89 05 27 a7 01 00 	mov    %rax,0x1a727(%rip)        # 220e8 <yyin>
    79c1:	90                   	nop
    79c2:	5d                   	pop    %rbp
    79c3:	c3                   	ret

00000000000079c4 <yyset_out>:
    79c4:	f3 0f 1e fa          	endbr64
    79c8:	55                   	push   %rbp
    79c9:	48 89 e5             	mov    %rsp,%rbp
    79cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79d4:	48 89 05 15 a7 01 00 	mov    %rax,0x1a715(%rip)        # 220f0 <yyout>
    79db:	90                   	nop
    79dc:	5d                   	pop    %rbp
    79dd:	c3                   	ret

00000000000079de <yyget_debug>:
    79de:	f3 0f 1e fa          	endbr64
    79e2:	55                   	push   %rbp
    79e3:	48 89 e5             	mov    %rsp,%rbp
    79e6:	8b 05 0c a7 01 00    	mov    0x1a70c(%rip),%eax        # 220f8 <yy_flex_debug>
    79ec:	5d                   	pop    %rbp
    79ed:	c3                   	ret

00000000000079ee <yyset_debug>:
    79ee:	f3 0f 1e fa          	endbr64
    79f2:	55                   	push   %rbp
    79f3:	48 89 e5             	mov    %rsp,%rbp
    79f6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    79f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    79fc:	89 05 f6 a6 01 00    	mov    %eax,0x1a6f6(%rip)        # 220f8 <yy_flex_debug>
    7a02:	90                   	nop
    7a03:	5d                   	pop    %rbp
    7a04:	c3                   	ret

0000000000007a05 <yy_init_globals>:
    7a05:	f3 0f 1e fa          	endbr64
    7a09:	55                   	push   %rbp
    7a0a:	48 89 e5             	mov    %rsp,%rbp
    7a0d:	48 c7 05 b0 ac 01 00 	movq   $0x0,0x1acb0(%rip)        # 226c8 <yy_buffer_stack>
    7a14:	00 00 00 00
    7a18:	48 c7 05 95 ac 01 00 	movq   $0x0,0x1ac95(%rip)        # 226b8 <yy_buffer_stack_top>
    7a1f:	00 00 00 00
    7a23:	48 c7 05 92 ac 01 00 	movq   $0x0,0x1ac92(%rip)        # 226c0 <yy_buffer_stack_max>
    7a2a:	00 00 00 00
    7a2e:	48 c7 05 9f ac 01 00 	movq   $0x0,0x1ac9f(%rip)        # 226d8 <yy_c_buf_p>
    7a35:	00 00 00 00
    7a39:	c7 05 9d ac 01 00 00 	movl   $0x0,0x1ac9d(%rip)        # 226e0 <yy_init>
    7a40:	00 00 00
    7a43:	c7 05 97 ac 01 00 00 	movl   $0x0,0x1ac97(%rip)        # 226e4 <yy_start>
    7a4a:	00 00 00
    7a4d:	48 c7 05 90 a6 01 00 	movq   $0x0,0x1a690(%rip)        # 220e8 <yyin>
    7a54:	00 00 00 00
    7a58:	48 c7 05 8d a6 01 00 	movq   $0x0,0x1a68d(%rip)        # 220f0 <yyout>
    7a5f:	00 00 00 00
    7a63:	b8 00 00 00 00       	mov    $0x0,%eax
    7a68:	5d                   	pop    %rbp
    7a69:	c3                   	ret

0000000000007a6a <yylex_destroy>:
    7a6a:	f3 0f 1e fa          	endbr64
    7a6e:	55                   	push   %rbp
    7a6f:	48 89 e5             	mov    %rsp,%rbp
    7a72:	eb 54                	jmp    7ac8 <yylex_destroy+0x5e>
    7a74:	48 8b 05 4d ac 01 00 	mov    0x1ac4d(%rip),%rax        # 226c8 <yy_buffer_stack>
    7a7b:	48 85 c0             	test   %rax,%rax
    7a7e:	74 1a                	je     7a9a <yylex_destroy+0x30>
    7a80:	48 8b 05 41 ac 01 00 	mov    0x1ac41(%rip),%rax        # 226c8 <yy_buffer_stack>
    7a87:	48 8b 15 2a ac 01 00 	mov    0x1ac2a(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7a8e:	48 c1 e2 03          	shl    $0x3,%rdx
    7a92:	48 01 d0             	add    %rdx,%rax
    7a95:	48 8b 00             	mov    (%rax),%rax
    7a98:	eb 05                	jmp    7a9f <yylex_destroy+0x35>
    7a9a:	b8 00 00 00 00       	mov    $0x0,%eax
    7a9f:	48 89 c7             	mov    %rax,%rdi
    7aa2:	e8 32 f7 ff ff       	call   71d9 <yy_delete_buffer>
    7aa7:	48 8b 05 1a ac 01 00 	mov    0x1ac1a(%rip),%rax        # 226c8 <yy_buffer_stack>
    7aae:	48 8b 15 03 ac 01 00 	mov    0x1ac03(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7ab5:	48 c1 e2 03          	shl    $0x3,%rdx
    7ab9:	48 01 d0             	add    %rdx,%rax
    7abc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7ac3:	e8 0f fa ff ff       	call   74d7 <yypop_buffer_state>
    7ac8:	48 8b 05 f9 ab 01 00 	mov    0x1abf9(%rip),%rax        # 226c8 <yy_buffer_stack>
    7acf:	48 85 c0             	test   %rax,%rax
    7ad2:	74 1d                	je     7af1 <yylex_destroy+0x87>
    7ad4:	48 8b 05 ed ab 01 00 	mov    0x1abed(%rip),%rax        # 226c8 <yy_buffer_stack>
    7adb:	48 8b 15 d6 ab 01 00 	mov    0x1abd6(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7ae2:	48 c1 e2 03          	shl    $0x3,%rdx
    7ae6:	48 01 d0             	add    %rdx,%rax
    7ae9:	48 8b 00             	mov    (%rax),%rax
    7aec:	48 85 c0             	test   %rax,%rax
    7aef:	75 83                	jne    7a74 <yylex_destroy+0xa>
    7af1:	48 8b 05 d0 ab 01 00 	mov    0x1abd0(%rip),%rax        # 226c8 <yy_buffer_stack>
    7af8:	48 89 c7             	mov    %rax,%rdi
    7afb:	e8 5e 00 00 00       	call   7b5e <yyfree>
    7b00:	48 c7 05 bd ab 01 00 	movq   $0x0,0x1abbd(%rip)        # 226c8 <yy_buffer_stack>
    7b07:	00 00 00 00
    7b0b:	e8 f5 fe ff ff       	call   7a05 <yy_init_globals>
    7b10:	b8 00 00 00 00       	mov    $0x0,%eax
    7b15:	5d                   	pop    %rbp
    7b16:	c3                   	ret

0000000000007b17 <yyalloc>:
    7b17:	f3 0f 1e fa          	endbr64
    7b1b:	55                   	push   %rbp
    7b1c:	48 89 e5             	mov    %rsp,%rbp
    7b1f:	48 83 ec 10          	sub    $0x10,%rsp
    7b23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b2b:	48 89 c7             	mov    %rax,%rdi
    7b2e:	e8 9d a9 ff ff       	call   24d0 <malloc@plt>
    7b33:	c9                   	leave
    7b34:	c3                   	ret

0000000000007b35 <yyrealloc>:
    7b35:	f3 0f 1e fa          	endbr64
    7b39:	55                   	push   %rbp
    7b3a:	48 89 e5             	mov    %rsp,%rbp
    7b3d:	48 83 ec 10          	sub    $0x10,%rsp
    7b41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b51:	48 89 d6             	mov    %rdx,%rsi
    7b54:	48 89 c7             	mov    %rax,%rdi
    7b57:	e8 94 a9 ff ff       	call   24f0 <realloc@plt>
    7b5c:	c9                   	leave
    7b5d:	c3                   	ret

0000000000007b5e <yyfree>:
    7b5e:	f3 0f 1e fa          	endbr64
    7b62:	55                   	push   %rbp
    7b63:	48 89 e5             	mov    %rsp,%rbp
    7b66:	48 83 ec 10          	sub    $0x10,%rsp
    7b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b72:	48 89 c7             	mov    %rax,%rdi
    7b75:	e8 76 a7 ff ff       	call   22f0 <free@plt>
    7b7a:	90                   	nop
    7b7b:	c9                   	leave
    7b7c:	c3                   	ret

0000000000007b7d <main>:
    7b7d:	f3 0f 1e fa          	endbr64
    7b81:	55                   	push   %rbp
    7b82:	48 89 e5             	mov    %rsp,%rbp
    7b85:	48 83 ec 70          	sub    $0x70,%rsp
    7b89:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    7b8c:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    7b90:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b97:	00 00
    7b99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7b9d:	31 c0                	xor    %eax,%eax
    7b9f:	e8 4e f5 00 00       	call   170f2 <install_stack_trace_handler>
    7ba4:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
    7ba8:	7e 35                	jle    7bdf <main+0x62>
    7baa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7bae:	48 83 c0 08          	add    $0x8,%rax
    7bb2:	48 8b 00             	mov    (%rax),%rax
    7bb5:	48 8d 15 b4 25 01 00 	lea    0x125b4(%rip),%rdx        # 1a170 <yy_chk+0x5f0>
    7bbc:	48 89 d6             	mov    %rdx,%rsi
    7bbf:	48 89 c7             	mov    %rax,%rdi
    7bc2:	e8 89 a8 ff ff       	call   2450 <strcmp@plt>
    7bc7:	85 c0                	test   %eax,%eax
    7bc9:	75 14                	jne    7bdf <main+0x62>
    7bcb:	b8 00 00 00 00       	mov    $0x0,%eax
    7bd0:	e8 6d a8 00 00       	call   12442 <init_stackmng>
    7bd5:	b8 00 00 00 00       	mov    $0x0,%eax
    7bda:	e9 88 02 00 00       	jmp    7e67 <main+0x2ea>
    7bdf:	c7 45 a8 03 00 00 00 	movl   $0x3,-0x58(%rbp)
    7be6:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7be9:	3b 45 a8             	cmp    -0x58(%rbp),%eax
    7bec:	7d 2d                	jge    7c1b <main+0x9e>
    7bee:	48 8b 05 6b a4 01 00 	mov    0x1a46b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7bf5:	48 89 c1             	mov    %rax,%rcx
    7bf8:	ba 3f 00 00 00       	mov    $0x3f,%edx
    7bfd:	be 01 00 00 00       	mov    $0x1,%esi
    7c02:	48 8d 05 77 25 01 00 	lea    0x12577(%rip),%rax        # 1a180 <yy_chk+0x600>
    7c09:	48 89 c7             	mov    %rax,%rdi
    7c0c:	e8 3f a9 ff ff       	call   2550 <fwrite@plt>
    7c11:	bf 01 00 00 00       	mov    $0x1,%edi
    7c16:	e8 25 a9 ff ff       	call   2540 <exit@plt>
    7c1b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7c1e:	2b 45 a8             	sub    -0x58(%rbp),%eax
    7c21:	89 45 ac             	mov    %eax,-0x54(%rbp)
    7c24:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
    7c28:	7e 21                	jle    7c4b <main+0xce>
    7c2a:	8b 45 a8             	mov    -0x58(%rbp),%eax
    7c2d:	48 98                	cltq
    7c2f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7c36:	00
    7c37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7c3b:	48 01 c2             	add    %rax,%rdx
    7c3e:	8b 45 ac             	mov    -0x54(%rbp),%eax
    7c41:	89 c6                	mov    %eax,%esi
    7c43:	48 89 d7             	mov    %rdx,%rdi
    7c46:	e8 32 02 00 00       	call   7e7d <set_flags>
    7c4b:	48 8d 05 6e 25 01 00 	lea    0x1256e(%rip),%rax        # 1a1c0 <yy_chk+0x640>
    7c52:	48 89 05 af aa 01 00 	mov    %rax,0x1aaaf(%rip)        # 22708 <file_to_parse>
    7c59:	48 8d 05 60 25 01 00 	lea    0x12560(%rip),%rax        # 1a1c0 <yy_chk+0x640>
    7c60:	48 89 c7             	mov    %rax,%rdi
    7c63:	e8 3a 04 00 00       	call   80a2 <ParsePascalOnly>
    7c68:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7c6c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7c70:	48 8b 40 08          	mov    0x8(%rax),%rax
    7c74:	48 89 05 8d aa 01 00 	mov    %rax,0x1aa8d(%rip)        # 22708 <file_to_parse>
    7c7b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7c7f:	48 83 c0 08          	add    $0x8,%rax
    7c83:	48 8b 00             	mov    (%rax),%rax
    7c86:	48 89 c7             	mov    %rax,%rdi
    7c89:	e8 14 04 00 00       	call   80a2 <ParsePascalOnly>
    7c8e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7c92:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    7c97:	0f 84 8f 01 00 00    	je     7e2c <main+0x2af>
    7c9d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    7ca2:	0f 84 84 01 00 00    	je     7e2c <main+0x2af>
    7ca8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7cac:	48 8b 40 28          	mov    0x28(%rax),%rax
    7cb0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7cb4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7cb8:	48 8b 40 28          	mov    0x28(%rax),%rax
    7cbc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7cc0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    7cc5:	74 3b                	je     7d02 <main+0x185>
    7cc7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ccb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7ccf:	eb 0c                	jmp    7cdd <main+0x160>
    7cd1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7cd5:	48 8b 40 10          	mov    0x10(%rax),%rax
    7cd9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7cdd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7ce1:	48 8b 40 10          	mov    0x10(%rax),%rax
    7ce5:	48 85 c0             	test   %rax,%rax
    7ce8:	75 e7                	jne    7cd1 <main+0x154>
    7cea:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7cee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7cf2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7cf6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7cfa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7cfe:	48 89 50 28          	mov    %rdx,0x28(%rax)
    7d02:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    7d07:	74 0c                	je     7d15 <main+0x198>
    7d09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7d0d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    7d14:	00
    7d15:	48 8d 55 a4          	lea    -0x5c(%rbp),%rdx
    7d19:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7d1d:	48 89 d6             	mov    %rdx,%rsi
    7d20:	48 89 c7             	mov    %rax,%rdi
    7d23:	e8 d0 29 00 00       	call   a6f8 <start_semcheck>
    7d28:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7d2c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    7d2f:	85 c0                	test   %eax,%eax
    7d31:	0f 85 bf 00 00 00    	jne    7df6 <main+0x279>
    7d37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7d3b:	48 83 c0 10          	add    $0x10,%rax
    7d3f:	48 8b 10             	mov    (%rax),%rdx
    7d42:	48 8b 05 17 a3 01 00 	mov    0x1a317(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7d49:	48 8d 0d 7d 24 01 00 	lea    0x1247d(%rip),%rcx        # 1a1cd <yy_chk+0x64d>
    7d50:	48 89 ce             	mov    %rcx,%rsi
    7d53:	48 89 c7             	mov    %rax,%rdi
    7d56:	b8 00 00 00 00       	mov    $0x0,%eax
    7d5b:	e8 10 a7 ff ff       	call   2470 <fprintf@plt>
    7d60:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7d64:	48 83 c0 10          	add    $0x10,%rax
    7d68:	48 8b 00             	mov    (%rax),%rax
    7d6b:	48 8d 15 78 24 01 00 	lea    0x12478(%rip),%rdx        # 1a1ea <yy_chk+0x66a>
    7d72:	48 89 d6             	mov    %rdx,%rsi
    7d75:	48 89 c7             	mov    %rax,%rdi
    7d78:	e8 13 a7 ff ff       	call   2490 <fopen64@plt>
    7d7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7d81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d85:	48 85 c0             	test   %rax,%rax
    7d88:	75 33                	jne    7dbd <main+0x240>
    7d8a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7d8e:	48 83 c0 10          	add    $0x10,%rax
    7d92:	48 8b 10             	mov    (%rax),%rdx
    7d95:	48 8b 05 c4 a2 01 00 	mov    0x1a2c4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7d9c:	48 8d 0d 4d 24 01 00 	lea    0x1244d(%rip),%rcx        # 1a1f0 <yy_chk+0x670>
    7da3:	48 89 ce             	mov    %rcx,%rsi
    7da6:	48 89 c7             	mov    %rax,%rdi
    7da9:	b8 00 00 00 00       	mov    $0x0,%eax
    7dae:	e8 bd a6 ff ff       	call   2470 <fprintf@plt>
    7db3:	bf 01 00 00 00       	mov    $0x1,%edi
    7db8:	e8 83 a7 ff ff       	call   2540 <exit@plt>
    7dbd:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    7dc4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    7dcb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7dcf:	48 83 c0 08          	add    $0x8,%rax
    7dd3:	48 8b 30             	mov    (%rax),%rsi
    7dd6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7dda:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    7dde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7de2:	48 89 c7             	mov    %rax,%rdi
    7de5:	e8 fc 7a 00 00       	call   f8e6 <codegen>
    7dea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dee:	48 89 c7             	mov    %rax,%rdi
    7df1:	e8 8a a5 ff ff       	call   2380 <fclose@plt>
    7df6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dfa:	48 89 c7             	mov    %rax,%rdi
    7dfd:	e8 09 46 00 00       	call   c40b <DestroySymTab>
    7e02:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7e06:	48 89 c7             	mov    %rax,%rdi
    7e09:	e8 db 19 00 00       	call   97e9 <destroy_tree>
    7e0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7e12:	48 89 c7             	mov    %rax,%rdi
    7e15:	e8 cf 19 00 00       	call   97e9 <destroy_tree>
    7e1a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7e21:	00
    7e22:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    7e29:	00
    7e2a:	eb 36                	jmp    7e62 <main+0x2e5>
    7e2c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    7e31:	74 14                	je     7e47 <main+0x2ca>
    7e33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7e37:	48 89 c7             	mov    %rax,%rdi
    7e3a:	e8 aa 19 00 00       	call   97e9 <destroy_tree>
    7e3f:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7e46:	00
    7e47:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    7e4c:	74 14                	je     7e62 <main+0x2e5>
    7e4e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7e52:	48 89 c7             	mov    %rax,%rdi
    7e55:	e8 8f 19 00 00       	call   97e9 <destroy_tree>
    7e5a:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    7e61:	00
    7e62:	b8 00 00 00 00       	mov    $0x0,%eax
    7e67:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7e6b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    7e72:	00 00
    7e74:	74 05                	je     7e7b <main+0x2fe>
    7e76:	e8 25 a5 ff ff       	call   23a0 <__stack_chk_fail@plt>
    7e7b:	c9                   	leave
    7e7c:	c3                   	ret

0000000000007e7d <set_flags>:
    7e7d:	f3 0f 1e fa          	endbr64
    7e81:	55                   	push   %rbp
    7e82:	48 89 e5             	mov    %rsp,%rbp
    7e85:	48 83 ec 20          	sub    $0x20,%rsp
    7e89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e8d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    7e90:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    7e97:	e9 84 01 00 00       	jmp    8020 <set_flags+0x1a3>
    7e9c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7e9f:	48 98                	cltq
    7ea1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ea8:	00
    7ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ead:	48 01 d0             	add    %rdx,%rax
    7eb0:	48 8b 00             	mov    (%rax),%rax
    7eb3:	48 8d 15 5d 23 01 00 	lea    0x1235d(%rip),%rdx        # 1a217 <yy_chk+0x697>
    7eba:	48 89 d6             	mov    %rdx,%rsi
    7ebd:	48 89 c7             	mov    %rax,%rdi
    7ec0:	e8 8b a5 ff ff       	call   2450 <strcmp@plt>
    7ec5:	85 c0                	test   %eax,%eax
    7ec7:	75 55                	jne    7f1e <set_flags+0xa1>
    7ec9:	48 8b 05 90 a1 01 00 	mov    0x1a190(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7ed0:	48 89 c1             	mov    %rax,%rcx
    7ed3:	ba 22 00 00 00       	mov    $0x22,%edx
    7ed8:	be 01 00 00 00       	mov    $0x1,%esi
    7edd:	48 8d 05 44 23 01 00 	lea    0x12344(%rip),%rax        # 1a228 <yy_chk+0x6a8>
    7ee4:	48 89 c7             	mov    %rax,%rdi
    7ee7:	e8 64 a6 ff ff       	call   2550 <fwrite@plt>
    7eec:	48 8b 05 6d a1 01 00 	mov    0x1a16d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7ef3:	48 89 c1             	mov    %rax,%rcx
    7ef6:	ba 3f 00 00 00       	mov    $0x3f,%edx
    7efb:	be 01 00 00 00       	mov    $0x1,%esi
    7f00:	48 8d 05 49 23 01 00 	lea    0x12349(%rip),%rax        # 1a250 <yy_chk+0x6d0>
    7f07:	48 89 c7             	mov    %rax,%rdi
    7f0a:	e8 41 a6 ff ff       	call   2550 <fwrite@plt>
    7f0f:	b8 00 00 00 00       	mov    $0x0,%eax
    7f14:	e8 15 01 00 00       	call   802e <set_nonlocal_flag>
    7f19:	e9 fa 00 00 00       	jmp    8018 <set_flags+0x19b>
    7f1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7f21:	48 98                	cltq
    7f23:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7f2a:	00
    7f2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f2f:	48 01 d0             	add    %rdx,%rax
    7f32:	48 8b 00             	mov    (%rax),%rax
    7f35:	48 8d 15 54 23 01 00 	lea    0x12354(%rip),%rdx        # 1a290 <yy_chk+0x710>
    7f3c:	48 89 d6             	mov    %rdx,%rsi
    7f3f:	48 89 c7             	mov    %rax,%rdi
    7f42:	e8 09 a5 ff ff       	call   2450 <strcmp@plt>
    7f47:	85 c0                	test   %eax,%eax
    7f49:	75 32                	jne    7f7d <set_flags+0x100>
    7f4b:	48 8b 05 0e a1 01 00 	mov    0x1a10e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7f52:	48 89 c1             	mov    %rax,%rcx
    7f55:	ba 1b 00 00 00       	mov    $0x1b,%edx
    7f5a:	be 01 00 00 00       	mov    $0x1,%esi
    7f5f:	48 8d 05 2e 23 01 00 	lea    0x1232e(%rip),%rax        # 1a294 <yy_chk+0x714>
    7f66:	48 89 c7             	mov    %rax,%rdi
    7f69:	e8 e2 a5 ff ff       	call   2550 <fwrite@plt>
    7f6e:	b8 00 00 00 00       	mov    $0x0,%eax
    7f73:	e8 cb 00 00 00       	call   8043 <set_o1_flag>
    7f78:	e9 9b 00 00 00       	jmp    8018 <set_flags+0x19b>
    7f7d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7f80:	48 98                	cltq
    7f82:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7f89:	00
    7f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f8e:	48 01 d0             	add    %rdx,%rax
    7f91:	48 8b 00             	mov    (%rax),%rax
    7f94:	48 8d 15 15 23 01 00 	lea    0x12315(%rip),%rdx        # 1a2b0 <yy_chk+0x730>
    7f9b:	48 89 d6             	mov    %rdx,%rsi
    7f9e:	48 89 c7             	mov    %rax,%rdi
    7fa1:	e8 aa a4 ff ff       	call   2450 <strcmp@plt>
    7fa6:	85 c0                	test   %eax,%eax
    7fa8:	75 2f                	jne    7fd9 <set_flags+0x15c>
    7faa:	48 8b 05 af a0 01 00 	mov    0x1a0af(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7fb1:	48 89 c1             	mov    %rax,%rcx
    7fb4:	ba 1b 00 00 00       	mov    $0x1b,%edx
    7fb9:	be 01 00 00 00       	mov    $0x1,%esi
    7fbe:	48 8d 05 ef 22 01 00 	lea    0x122ef(%rip),%rax        # 1a2b4 <yy_chk+0x734>
    7fc5:	48 89 c7             	mov    %rax,%rdi
    7fc8:	e8 83 a5 ff ff       	call   2550 <fwrite@plt>
    7fcd:	b8 00 00 00 00       	mov    $0x0,%eax
    7fd2:	e8 8b 00 00 00       	call   8062 <set_o2_flag>
    7fd7:	eb 3f                	jmp    8018 <set_flags+0x19b>
    7fd9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7fdc:	48 98                	cltq
    7fde:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7fe5:	00
    7fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fea:	48 01 d0             	add    %rdx,%rax
    7fed:	48 8b 10             	mov    (%rax),%rdx
    7ff0:	48 8b 05 69 a0 01 00 	mov    0x1a069(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7ff7:	48 8d 0d d2 22 01 00 	lea    0x122d2(%rip),%rcx        # 1a2d0 <yy_chk+0x750>
    7ffe:	48 89 ce             	mov    %rcx,%rsi
    8001:	48 89 c7             	mov    %rax,%rdi
    8004:	b8 00 00 00 00       	mov    $0x0,%eax
    8009:	e8 62 a4 ff ff       	call   2470 <fprintf@plt>
    800e:	bf 01 00 00 00       	mov    $0x1,%edi
    8013:	e8 28 a5 ff ff       	call   2540 <exit@plt>
    8018:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
    801c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    8020:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    8024:	0f 8f 72 fe ff ff    	jg     7e9c <set_flags+0x1f>
    802a:	90                   	nop
    802b:	90                   	nop
    802c:	c9                   	leave
    802d:	c3                   	ret

000000000000802e <set_nonlocal_flag>:
    802e:	f3 0f 1e fa          	endbr64
    8032:	55                   	push   %rbp
    8033:	48 89 e5             	mov    %rsp,%rbp
    8036:	c7 05 d0 a6 01 00 01 	movl   $0x1,0x1a6d0(%rip)        # 22710 <FLAG_NON_LOCAL_CHASING>
    803d:	00 00 00
    8040:	90                   	nop
    8041:	5d                   	pop    %rbp
    8042:	c3                   	ret

0000000000008043 <set_o1_flag>:
    8043:	f3 0f 1e fa          	endbr64
    8047:	55                   	push   %rbp
    8048:	48 89 e5             	mov    %rsp,%rbp
    804b:	8b 05 c3 a6 01 00    	mov    0x1a6c3(%rip),%eax        # 22714 <FLAG_OPTIMIZE>
    8051:	85 c0                	test   %eax,%eax
    8053:	7f 0a                	jg     805f <set_o1_flag+0x1c>
    8055:	c7 05 b5 a6 01 00 01 	movl   $0x1,0x1a6b5(%rip)        # 22714 <FLAG_OPTIMIZE>
    805c:	00 00 00
    805f:	90                   	nop
    8060:	5d                   	pop    %rbp
    8061:	c3                   	ret

0000000000008062 <set_o2_flag>:
    8062:	f3 0f 1e fa          	endbr64
    8066:	55                   	push   %rbp
    8067:	48 89 e5             	mov    %rsp,%rbp
    806a:	8b 05 a4 a6 01 00    	mov    0x1a6a4(%rip),%eax        # 22714 <FLAG_OPTIMIZE>
    8070:	83 f8 01             	cmp    $0x1,%eax
    8073:	7f 0a                	jg     807f <set_o2_flag+0x1d>
    8075:	c7 05 95 a6 01 00 02 	movl   $0x2,0x1a695(%rip)        # 22714 <FLAG_OPTIMIZE>
    807c:	00 00 00
    807f:	90                   	nop
    8080:	5d                   	pop    %rbp
    8081:	c3                   	ret

0000000000008082 <nonlocal_flag>:
    8082:	f3 0f 1e fa          	endbr64
    8086:	55                   	push   %rbp
    8087:	48 89 e5             	mov    %rsp,%rbp
    808a:	8b 05 80 a6 01 00    	mov    0x1a680(%rip),%eax        # 22710 <FLAG_NON_LOCAL_CHASING>
    8090:	5d                   	pop    %rbp
    8091:	c3                   	ret

0000000000008092 <optimize_flag>:
    8092:	f3 0f 1e fa          	endbr64
    8096:	55                   	push   %rbp
    8097:	48 89 e5             	mov    %rsp,%rbp
    809a:	8b 05 74 a6 01 00    	mov    0x1a674(%rip),%eax        # 22714 <FLAG_OPTIMIZE>
    80a0:	5d                   	pop    %rbp
    80a1:	c3                   	ret

00000000000080a2 <ParsePascalOnly>:
    80a2:	f3 0f 1e fa          	endbr64
    80a6:	55                   	push   %rbp
    80a7:	48 89 e5             	mov    %rsp,%rbp
    80aa:	48 83 ec 10          	sub    $0x10,%rsp
    80ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80b2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    80b7:	74 62                	je     811b <ParsePascalOnly+0x79>
    80b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80bd:	48 8d 15 2a 22 01 00 	lea    0x1222a(%rip),%rdx        # 1a2ee <yy_chk+0x76e>
    80c4:	48 89 d6             	mov    %rdx,%rsi
    80c7:	48 89 c7             	mov    %rax,%rdi
    80ca:	e8 c1 a3 ff ff       	call   2490 <fopen64@plt>
    80cf:	48 89 05 12 a0 01 00 	mov    %rax,0x1a012(%rip)        # 220e8 <yyin>
    80d6:	48 8b 05 0b a0 01 00 	mov    0x1a00b(%rip),%rax        # 220e8 <yyin>
    80dd:	48 85 c0             	test   %rax,%rax
    80e0:	75 2c                	jne    810e <ParsePascalOnly+0x6c>
    80e2:	48 8b 05 77 9f 01 00 	mov    0x19f77(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    80e9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80ed:	48 8d 0d fc 21 01 00 	lea    0x121fc(%rip),%rcx        # 1a2f0 <yy_chk+0x770>
    80f4:	48 89 ce             	mov    %rcx,%rsi
    80f7:	48 89 c7             	mov    %rax,%rdi
    80fa:	b8 00 00 00 00       	mov    $0x0,%eax
    80ff:	e8 6c a3 ff ff       	call   2470 <fprintf@plt>
    8104:	bf 01 00 00 00       	mov    $0x1,%edi
    8109:	e8 32 a4 ff ff       	call   2540 <exit@plt>
    810e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8112:	48 89 05 ef a5 01 00 	mov    %rax,0x1a5ef(%rip)        # 22708 <file_to_parse>
    8119:	eb 0b                	jmp    8126 <ParsePascalOnly+0x84>
    811b:	48 c7 05 e2 a5 01 00 	movq   $0x0,0x1a5e2(%rip)        # 22708 <file_to_parse>
    8122:	00 00 00 00
    8126:	b8 00 00 00 00       	mov    $0x0,%eax
    812b:	e8 a1 00 00 00       	call   81d1 <InitParser>
    8130:	e8 d4 aa ff ff       	call   2c09 <yyparse>
    8135:	48 8b 05 bc a5 01 00 	mov    0x1a5bc(%rip),%rax        # 226f8 <parse_tree>
    813c:	c9                   	leave
    813d:	c3                   	ret

000000000000813e <ParsePascal>:
    813e:	f3 0f 1e fa          	endbr64
    8142:	55                   	push   %rbp
    8143:	48 89 e5             	mov    %rsp,%rbp
    8146:	48 83 ec 30          	sub    $0x30,%rsp
    814a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    814e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8155:	00 00
    8157:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    815b:	31 c0                	xor    %eax,%eax
    815d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8161:	48 89 c7             	mov    %rax,%rdi
    8164:	e8 39 ff ff ff       	call   80a2 <ParsePascalOnly>
    8169:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    816d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    8172:	74 43                	je     81b7 <ParsePascal+0x79>
    8174:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    8178:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    817c:	48 89 d6             	mov    %rdx,%rsi
    817f:	48 89 c7             	mov    %rax,%rdi
    8182:	e8 71 25 00 00       	call   a6f8 <start_semcheck>
    8187:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    818b:	8b 45 e0             	mov    -0x20(%rbp),%eax
    818e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    8191:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8195:	48 89 c7             	mov    %rax,%rdi
    8198:	e8 6e 42 00 00       	call   c40b <DestroySymTab>
    819d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    81a1:	7e 14                	jle    81b7 <ParsePascal+0x79>
    81a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81a7:	48 89 c7             	mov    %rax,%rdi
    81aa:	e8 3a 16 00 00       	call   97e9 <destroy_tree>
    81af:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    81b6:	00
    81b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    81bf:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    81c6:	00 00
    81c8:	74 05                	je     81cf <ParsePascal+0x91>
    81ca:	e8 d1 a1 ff ff       	call   23a0 <__stack_chk_fail@plt>
    81cf:	c9                   	leave
    81d0:	c3                   	ret

00000000000081d1 <InitParser>:
    81d1:	f3 0f 1e fa          	endbr64
    81d5:	55                   	push   %rbp
    81d6:	48 89 e5             	mov    %rsp,%rbp
    81d9:	c7 05 4d 9e 01 00 01 	movl   $0x1,0x19e4d(%rip)        # 22030 <line_num>
    81e0:	00 00 00
    81e3:	c7 05 47 9e 01 00 01 	movl   $0x1,0x19e47(%rip)        # 22034 <col_num>
    81ea:	00 00 00
    81ed:	48 c7 05 00 a5 01 00 	movq   $0x0,0x1a500(%rip)        # 226f8 <parse_tree>
    81f4:	00 00 00 00
    81f8:	90                   	nop
    81f9:	5d                   	pop    %rbp
    81fa:	c3                   	ret

00000000000081fb <CreateListNode>:
    81fb:	f3 0f 1e fa          	endbr64
    81ff:	55                   	push   %rbp
    8200:	48 89 e5             	mov    %rsp,%rbp
    8203:	48 83 ec 20          	sub    $0x20,%rsp
    8207:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    820b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    820e:	bf 18 00 00 00       	mov    $0x18,%edi
    8213:	e8 b8 a2 ff ff       	call   24d0 <malloc@plt>
    8218:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    821c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8220:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    8223:	89 10                	mov    %edx,(%rax)
    8225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8229:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    822d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8235:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    823c:	00
    823d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8241:	c9                   	leave
    8242:	c3                   	ret

0000000000008243 <PushListNodeFront>:
    8243:	f3 0f 1e fa          	endbr64
    8247:	55                   	push   %rbp
    8248:	48 89 e5             	mov    %rsp,%rbp
    824b:	48 83 ec 10          	sub    $0x10,%rsp
    824f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8253:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8257:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    825c:	75 28                	jne    8286 <PushListNodeFront+0x43>
    825e:	48 8d 05 2b 21 01 00 	lea    0x1212b(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    8265:	48 89 c1             	mov    %rax,%rcx
    8268:	ba 1d 00 00 00       	mov    $0x1d,%edx
    826d:	48 8d 05 9c 20 01 00 	lea    0x1209c(%rip),%rax        # 1a310 <yy_chk+0x790>
    8274:	48 89 c6             	mov    %rax,%rsi
    8277:	48 8d 05 ac 20 01 00 	lea    0x120ac(%rip),%rax        # 1a32a <yy_chk+0x7aa>
    827e:	48 89 c7             	mov    %rax,%rdi
    8281:	e8 4a a1 ff ff       	call   23d0 <__assert_fail@plt>
    8286:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    828b:	75 28                	jne    82b5 <PushListNodeFront+0x72>
    828d:	48 8d 05 fc 20 01 00 	lea    0x120fc(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    8294:	48 89 c1             	mov    %rax,%rcx
    8297:	ba 1e 00 00 00       	mov    $0x1e,%edx
    829c:	48 8d 05 6d 20 01 00 	lea    0x1206d(%rip),%rax        # 1a310 <yy_chk+0x790>
    82a3:	48 89 c6             	mov    %rax,%rsi
    82a6:	48 8d 05 8f 20 01 00 	lea    0x1208f(%rip),%rax        # 1a33c <yy_chk+0x7bc>
    82ad:	48 89 c7             	mov    %rax,%rdi
    82b0:	e8 1b a1 ff ff       	call   23d0 <__assert_fail@plt>
    82b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    82bd:	48 89 50 10          	mov    %rdx,0x10(%rax)
    82c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82c5:	c9                   	leave
    82c6:	c3                   	ret

00000000000082c7 <PushListNodeBack>:
    82c7:	f3 0f 1e fa          	endbr64
    82cb:	55                   	push   %rbp
    82cc:	48 89 e5             	mov    %rsp,%rbp
    82cf:	48 83 ec 20          	sub    $0x20,%rsp
    82d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82db:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    82e0:	75 28                	jne    830a <PushListNodeBack+0x43>
    82e2:	48 8d 05 c7 20 01 00 	lea    0x120c7(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.2>
    82e9:	48 89 c1             	mov    %rax,%rcx
    82ec:	ba 29 00 00 00       	mov    $0x29,%edx
    82f1:	48 8d 05 18 20 01 00 	lea    0x12018(%rip),%rax        # 1a310 <yy_chk+0x790>
    82f8:	48 89 c6             	mov    %rax,%rsi
    82fb:	48 8d 05 4b 20 01 00 	lea    0x1204b(%rip),%rax        # 1a34d <yy_chk+0x7cd>
    8302:	48 89 c7             	mov    %rax,%rdi
    8305:	e8 c6 a0 ff ff       	call   23d0 <__assert_fail@plt>
    830a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    830f:	75 28                	jne    8339 <PushListNodeBack+0x72>
    8311:	48 8d 05 98 20 01 00 	lea    0x12098(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.2>
    8318:	48 89 c1             	mov    %rax,%rcx
    831b:	ba 2a 00 00 00       	mov    $0x2a,%edx
    8320:	48 8d 05 e9 1f 01 00 	lea    0x11fe9(%rip),%rax        # 1a310 <yy_chk+0x790>
    8327:	48 89 c6             	mov    %rax,%rsi
    832a:	48 8d 05 f9 1f 01 00 	lea    0x11ff9(%rip),%rax        # 1a32a <yy_chk+0x7aa>
    8331:	48 89 c7             	mov    %rax,%rdi
    8334:	e8 97 a0 ff ff       	call   23d0 <__assert_fail@plt>
    8339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    833d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8341:	eb 0c                	jmp    834f <PushListNodeBack+0x88>
    8343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8347:	48 8b 40 10          	mov    0x10(%rax),%rax
    834b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    834f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8353:	48 8b 40 10          	mov    0x10(%rax),%rax
    8357:	48 85 c0             	test   %rax,%rax
    835a:	75 e7                	jne    8343 <PushListNodeBack+0x7c>
    835c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8360:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8364:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    836c:	c9                   	leave
    836d:	c3                   	ret

000000000000836e <InsertListNode>:
    836e:	f3 0f 1e fa          	endbr64
    8372:	55                   	push   %rbp
    8373:	48 89 e5             	mov    %rsp,%rbp
    8376:	48 83 ec 10          	sub    $0x10,%rsp
    837a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    837e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8382:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8387:	75 28                	jne    83b1 <InsertListNode+0x43>
    8389:	48 8d 05 38 20 01 00 	lea    0x12038(%rip),%rax        # 1a3c8 <__PRETTY_FUNCTION__.1>
    8390:	48 89 c1             	mov    %rax,%rcx
    8393:	ba 36 00 00 00       	mov    $0x36,%edx
    8398:	48 8d 05 71 1f 01 00 	lea    0x11f71(%rip),%rax        # 1a310 <yy_chk+0x790>
    839f:	48 89 c6             	mov    %rax,%rsi
    83a2:	48 8d 05 b5 1f 01 00 	lea    0x11fb5(%rip),%rax        # 1a35e <yy_chk+0x7de>
    83a9:	48 89 c7             	mov    %rax,%rdi
    83ac:	e8 1f a0 ff ff       	call   23d0 <__assert_fail@plt>
    83b1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    83b6:	75 28                	jne    83e0 <InsertListNode+0x72>
    83b8:	48 8d 05 09 20 01 00 	lea    0x12009(%rip),%rax        # 1a3c8 <__PRETTY_FUNCTION__.1>
    83bf:	48 89 c1             	mov    %rax,%rcx
    83c2:	ba 37 00 00 00       	mov    $0x37,%edx
    83c7:	48 8d 05 42 1f 01 00 	lea    0x11f42(%rip),%rax        # 1a310 <yy_chk+0x790>
    83ce:	48 89 c6             	mov    %rax,%rsi
    83d1:	48 8d 05 75 1f 01 00 	lea    0x11f75(%rip),%rax        # 1a34d <yy_chk+0x7cd>
    83d8:	48 89 c7             	mov    %rax,%rdi
    83db:	e8 f0 9f ff ff       	call   23d0 <__assert_fail@plt>
    83e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83e4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    83e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    83ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
    83f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    83f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    83fc:	90                   	nop
    83fd:	c9                   	leave
    83fe:	c3                   	ret

00000000000083ff <PopListHeadNode>:
    83ff:	f3 0f 1e fa          	endbr64
    8403:	55                   	push   %rbp
    8404:	48 89 e5             	mov    %rsp,%rbp
    8407:	48 83 ec 10          	sub    $0x10,%rsp
    840b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8413:	be 00 00 00 00       	mov    $0x0,%esi
    8418:	48 89 c7             	mov    %rax,%rdi
    841b:	e8 02 00 00 00       	call   8422 <DeleteListNode>
    8420:	c9                   	leave
    8421:	c3                   	ret

0000000000008422 <DeleteListNode>:
    8422:	f3 0f 1e fa          	endbr64
    8426:	55                   	push   %rbp
    8427:	48 89 e5             	mov    %rsp,%rbp
    842a:	48 83 ec 20          	sub    $0x20,%rsp
    842e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8432:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8436:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    843b:	75 28                	jne    8465 <DeleteListNode+0x43>
    843d:	48 8d 05 94 1f 01 00 	lea    0x11f94(%rip),%rax        # 1a3d8 <__PRETTY_FUNCTION__.0>
    8444:	48 89 c1             	mov    %rax,%rcx
    8447:	ba 46 00 00 00       	mov    $0x46,%edx
    844c:	48 8d 05 bd 1e 01 00 	lea    0x11ebd(%rip),%rax        # 1a310 <yy_chk+0x790>
    8453:	48 89 c6             	mov    %rax,%rsi
    8456:	48 8d 05 0e 1f 01 00 	lea    0x11f0e(%rip),%rax        # 1a36b <yy_chk+0x7eb>
    845d:	48 89 c7             	mov    %rax,%rdi
    8460:	e8 6b 9f ff ff       	call   23d0 <__assert_fail@plt>
    8465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8469:	48 8b 40 10          	mov    0x10(%rax),%rax
    846d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8471:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    8476:	74 0c                	je     8484 <DeleteListNode+0x62>
    8478:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    847c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8480:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8488:	48 89 c7             	mov    %rax,%rdi
    848b:	e8 60 9e ff ff       	call   22f0 <free@plt>
    8490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8494:	c9                   	leave
    8495:	c3                   	ret

0000000000008496 <DestroyList>:
    8496:	f3 0f 1e fa          	endbr64
    849a:	55                   	push   %rbp
    849b:	48 89 e5             	mov    %rsp,%rbp
    849e:	48 83 ec 20          	sub    $0x20,%rsp
    84a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    84ae:	eb 15                	jmp    84c5 <DestroyList+0x2f>
    84b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b4:	be 00 00 00 00       	mov    $0x0,%esi
    84b9:	48 89 c7             	mov    %rax,%rdi
    84bc:	e8 61 ff ff ff       	call   8422 <DeleteListNode>
    84c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    84c5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    84ca:	75 e4                	jne    84b0 <DestroyList+0x1a>
    84cc:	90                   	nop
    84cd:	90                   	nop
    84ce:	c9                   	leave
    84cf:	c3                   	ret

00000000000084d0 <PrintList>:
    84d0:	f3 0f 1e fa          	endbr64
    84d4:	55                   	push   %rbp
    84d5:	48 89 e5             	mov    %rsp,%rbp
    84d8:	48 83 ec 30          	sub    $0x30,%rsp
    84dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    84e4:	89 55 dc             	mov    %edx,-0x24(%rbp)
    84e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    84ee:	eb 24                	jmp    8514 <PrintList+0x44>
    84f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84f4:	48 89 c1             	mov    %rax,%rcx
    84f7:	ba 02 00 00 00       	mov    $0x2,%edx
    84fc:	be 01 00 00 00       	mov    $0x1,%esi
    8501:	48 8d 05 70 1e 01 00 	lea    0x11e70(%rip),%rax        # 1a378 <yy_chk+0x7f8>
    8508:	48 89 c7             	mov    %rax,%rdi
    850b:	e8 40 a0 ff ff       	call   2550 <fwrite@plt>
    8510:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    8514:	8b 45 f4             	mov    -0xc(%rbp),%eax
    8517:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    851a:	7c d4                	jl     84f0 <PrintList+0x20>
    851c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8520:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8524:	eb 56                	jmp    857c <PrintList+0xac>
    8526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    852e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8532:	48 8d 0d 42 1e 01 00 	lea    0x11e42(%rip),%rcx        # 1a37b <yy_chk+0x7fb>
    8539:	48 89 ce             	mov    %rcx,%rsi
    853c:	48 89 c7             	mov    %rax,%rdi
    853f:	b8 00 00 00 00       	mov    $0x0,%eax
    8544:	e8 27 9f ff ff       	call   2470 <fprintf@plt>
    8549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    854d:	48 8b 40 10          	mov    0x10(%rax),%rax
    8551:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8555:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    855a:	74 20                	je     857c <PrintList+0xac>
    855c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8560:	48 89 c1             	mov    %rax,%rcx
    8563:	ba 04 00 00 00       	mov    $0x4,%edx
    8568:	be 01 00 00 00       	mov    $0x1,%esi
    856d:	48 8d 05 0a 1e 01 00 	lea    0x11e0a(%rip),%rax        # 1a37e <yy_chk+0x7fe>
    8574:	48 89 c7             	mov    %rax,%rdi
    8577:	e8 d4 9f ff ff       	call   2550 <fwrite@plt>
    857c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8581:	75 a3                	jne    8526 <PrintList+0x56>
    8583:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8587:	48 89 c6             	mov    %rax,%rsi
    858a:	bf 0a 00 00 00       	mov    $0xa,%edi
    858f:	e8 8c 9e ff ff       	call   2420 <fputc@plt>
    8594:	90                   	nop
    8595:	c9                   	leave
    8596:	c3                   	ret

0000000000008597 <ListLength>:
    8597:	f3 0f 1e fa          	endbr64
    859b:	55                   	push   %rbp
    859c:	48 89 e5             	mov    %rsp,%rbp
    859f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85a3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    85aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    85b2:	eb 10                	jmp    85c4 <ListLength+0x2d>
    85b4:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    85b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85bc:	48 8b 40 10          	mov    0x10(%rax),%rax
    85c0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    85c4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    85c9:	75 e9                	jne    85b4 <ListLength+0x1d>
    85cb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    85ce:	5d                   	pop    %rbp
    85cf:	c3                   	ret

00000000000085d0 <print_indent>:
    85d0:	f3 0f 1e fa          	endbr64
    85d4:	55                   	push   %rbp
    85d5:	48 89 e5             	mov    %rsp,%rbp
    85d8:	48 83 ec 20          	sub    $0x20,%rsp
    85dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85e0:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    85e3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    85ea:	eb 24                	jmp    8610 <print_indent+0x40>
    85ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85f0:	48 89 c1             	mov    %rax,%rcx
    85f3:	ba 02 00 00 00       	mov    $0x2,%edx
    85f8:	be 01 00 00 00       	mov    $0x1,%esi
    85fd:	48 8d 05 e4 1d 01 00 	lea    0x11de4(%rip),%rax        # 1a3e8 <__PRETTY_FUNCTION__.0+0x10>
    8604:	48 89 c7             	mov    %rax,%rdi
    8607:	e8 44 9f ff ff       	call   2550 <fwrite@plt>
    860c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    8610:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8613:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    8616:	7c d4                	jl     85ec <print_indent+0x1c>
    8618:	90                   	nop
    8619:	90                   	nop
    861a:	c9                   	leave
    861b:	c3                   	ret

000000000000861c <list_print>:
    861c:	f3 0f 1e fa          	endbr64
    8620:	55                   	push   %rbp
    8621:	48 89 e5             	mov    %rsp,%rbp
    8624:	48 83 ec 30          	sub    $0x30,%rsp
    8628:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    862c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8630:	89 55 dc             	mov    %edx,-0x24(%rbp)
    8633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8637:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    863b:	e9 2b 01 00 00       	jmp    876b <list_print+0x14f>
    8640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8644:	48 8b 40 08          	mov    0x8(%rax),%rax
    8648:	48 85 c0             	test   %rax,%rax
    864b:	75 28                	jne    8675 <list_print+0x59>
    864d:	48 8d 05 fc 21 01 00 	lea    0x121fc(%rip),%rax        # 1a850 <__PRETTY_FUNCTION__.2>
    8654:	48 89 c1             	mov    %rax,%rcx
    8657:	ba 1e 00 00 00       	mov    $0x1e,%edx
    865c:	48 8d 05 8d 1d 01 00 	lea    0x11d8d(%rip),%rax        # 1a3f0 <__PRETTY_FUNCTION__.0+0x18>
    8663:	48 89 c6             	mov    %rax,%rsi
    8666:	48 8d 05 a2 1d 01 00 	lea    0x11da2(%rip),%rax        # 1a40f <__PRETTY_FUNCTION__.0+0x37>
    866d:	48 89 c7             	mov    %rax,%rdi
    8670:	e8 5b 9d ff ff       	call   23d0 <__assert_fail@plt>
    8675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8679:	8b 00                	mov    (%rax),%eax
    867b:	83 f8 03             	cmp    $0x3,%eax
    867e:	74 7c                	je     86fc <list_print+0xe0>
    8680:	83 f8 03             	cmp    $0x3,%eax
    8683:	0f 87 a9 00 00 00    	ja     8732 <list_print+0x116>
    8689:	83 f8 02             	cmp    $0x2,%eax
    868c:	74 36                	je     86c4 <list_print+0xa8>
    868e:	83 f8 02             	cmp    $0x2,%eax
    8691:	0f 87 9b 00 00 00    	ja     8732 <list_print+0x116>
    8697:	85 c0                	test   %eax,%eax
    8699:	74 0a                	je     86a5 <list_print+0x89>
    869b:	83 f8 01             	cmp    $0x1,%eax
    869e:	74 40                	je     86e0 <list_print+0xc4>
    86a0:	e9 8d 00 00 00       	jmp    8732 <list_print+0x116>
    86a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86a9:	48 8b 40 08          	mov    0x8(%rax),%rax
    86ad:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86b0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    86b4:	48 89 ce             	mov    %rcx,%rsi
    86b7:	48 89 c7             	mov    %rax,%rdi
    86ba:	e8 bb 00 00 00       	call   877a <tree_print>
    86bf:	e9 9b 00 00 00       	jmp    875f <list_print+0x143>
    86c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    86cc:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86cf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    86d3:	48 89 ce             	mov    %rcx,%rsi
    86d6:	48 89 c7             	mov    %rax,%rdi
    86d9:	e8 23 0b 00 00       	call   9201 <expr_print>
    86de:	eb 7f                	jmp    875f <list_print+0x143>
    86e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e4:	48 8b 40 08          	mov    0x8(%rax),%rax
    86e8:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86eb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    86ef:	48 89 ce             	mov    %rcx,%rsi
    86f2:	48 89 c7             	mov    %rax,%rdi
    86f5:	e8 e3 05 00 00       	call   8cdd <stmt_print>
    86fa:	eb 63                	jmp    875f <list_print+0x143>
    86fc:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8703:	89 d6                	mov    %edx,%esi
    8705:	48 89 c7             	mov    %rax,%rdi
    8708:	e8 c3 fe ff ff       	call   85d0 <print_indent>
    870d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8711:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8715:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8719:	48 8d 0d 00 1d 01 00 	lea    0x11d00(%rip),%rcx        # 1a420 <__PRETTY_FUNCTION__.0+0x48>
    8720:	48 89 ce             	mov    %rcx,%rsi
    8723:	48 89 c7             	mov    %rax,%rdi
    8726:	b8 00 00 00 00       	mov    $0x0,%eax
    872b:	e8 40 9d ff ff       	call   2470 <fprintf@plt>
    8730:	eb 2d                	jmp    875f <list_print+0x143>
    8732:	48 8b 05 27 99 01 00 	mov    0x19927(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    8739:	48 89 c1             	mov    %rax,%rcx
    873c:	ba 18 00 00 00       	mov    $0x18,%edx
    8741:	be 01 00 00 00       	mov    $0x1,%esi
    8746:	48 8d 05 d7 1c 01 00 	lea    0x11cd7(%rip),%rax        # 1a424 <__PRETTY_FUNCTION__.0+0x4c>
    874d:	48 89 c7             	mov    %rax,%rdi
    8750:	e8 fb 9d ff ff       	call   2550 <fwrite@plt>
    8755:	bf 01 00 00 00       	mov    $0x1,%edi
    875a:	e8 e1 9d ff ff       	call   2540 <exit@plt>
    875f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8763:	48 8b 40 10          	mov    0x10(%rax),%rax
    8767:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    876b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8770:	0f 85 ca fe ff ff    	jne    8640 <list_print+0x24>
    8776:	90                   	nop
    8777:	90                   	nop
    8778:	c9                   	leave
    8779:	c3                   	ret

000000000000877a <tree_print>:
    877a:	f3 0f 1e fa          	endbr64
    877e:	55                   	push   %rbp
    877f:	48 89 e5             	mov    %rsp,%rbp
    8782:	48 83 ec 20          	sub    $0x20,%rsp
    8786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    878a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    878e:	89 55 ec             	mov    %edx,-0x14(%rbp)
    8791:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8794:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8798:	89 d6                	mov    %edx,%esi
    879a:	48 89 c7             	mov    %rax,%rdi
    879d:	e8 2e fe ff ff       	call   85d0 <print_indent>
    87a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a6:	8b 40 04             	mov    0x4(%rax),%eax
    87a9:	83 f8 07             	cmp    $0x7,%eax
    87ac:	0f 87 fb 04 00 00    	ja     8cad <tree_print+0x533>
    87b2:	89 c0                	mov    %eax,%eax
    87b4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    87bb:	00
    87bc:	48 8d 05 cd 1d 01 00 	lea    0x11dcd(%rip),%rax        # 1a590 <__PRETTY_FUNCTION__.0+0x1b8>
    87c3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    87c6:	48 98                	cltq
    87c8:	48 8d 15 c1 1d 01 00 	lea    0x11dc1(%rip),%rdx        # 1a590 <__PRETTY_FUNCTION__.0+0x1b8>
    87cf:	48 01 d0             	add    %rdx,%rax
    87d2:	3e ff e0             	notrack jmp *%rax
    87d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    87dd:	48 85 c0             	test   %rax,%rax
    87e0:	75 28                	jne    880a <tree_print+0x90>
    87e2:	48 8d 05 77 20 01 00 	lea    0x12077(%rip),%rax        # 1a860 <__PRETTY_FUNCTION__.1>
    87e9:	48 89 c1             	mov    %rax,%rcx
    87ec:	ba 3d 00 00 00       	mov    $0x3d,%edx
    87f1:	48 8d 05 f8 1b 01 00 	lea    0x11bf8(%rip),%rax        # 1a3f0 <__PRETTY_FUNCTION__.0+0x18>
    87f8:	48 89 c6             	mov    %rax,%rsi
    87fb:	48 8d 05 3e 1c 01 00 	lea    0x11c3e(%rip),%rax        # 1a440 <__PRETTY_FUNCTION__.0+0x68>
    8802:	48 89 c7             	mov    %rax,%rdi
    8805:	e8 c6 9b ff ff       	call   23d0 <__assert_fail@plt>
    880a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    880e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8816:	48 8d 0d 53 1c 01 00 	lea    0x11c53(%rip),%rcx        # 1a470 <__PRETTY_FUNCTION__.0+0x98>
    881d:	48 89 ce             	mov    %rcx,%rsi
    8820:	48 89 c7             	mov    %rax,%rdi
    8823:	b8 00 00 00 00       	mov    $0x0,%eax
    8828:	e8 43 9c ff ff       	call   2470 <fprintf@plt>
    882d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8831:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8834:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8838:	89 d6                	mov    %edx,%esi
    883a:	48 89 c7             	mov    %rax,%rdi
    883d:	e8 8e fd ff ff       	call   85d0 <print_indent>
    8842:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8846:	48 89 c1             	mov    %rax,%rcx
    8849:	ba 08 00 00 00       	mov    $0x8,%edx
    884e:	be 01 00 00 00       	mov    $0x1,%esi
    8853:	48 8d 05 24 1c 01 00 	lea    0x11c24(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    885a:	48 89 c7             	mov    %rax,%rdi
    885d:	e8 ee 9c ff ff       	call   2550 <fwrite@plt>
    8862:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8865:	8d 50 01             	lea    0x1(%rax),%edx
    8868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8870:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8874:	48 89 ce             	mov    %rcx,%rsi
    8877:	48 89 c7             	mov    %rax,%rdi
    887a:	e8 9d fd ff ff       	call   861c <list_print>
    887f:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8882:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8886:	89 d6                	mov    %edx,%esi
    8888:	48 89 c7             	mov    %rax,%rdi
    888b:	e8 40 fd ff ff       	call   85d0 <print_indent>
    8890:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8894:	48 89 c1             	mov    %rax,%rcx
    8897:	ba 0d 00 00 00       	mov    $0xd,%edx
    889c:	be 01 00 00 00       	mov    $0x1,%esi
    88a1:	48 8d 05 df 1b 01 00 	lea    0x11bdf(%rip),%rax        # 1a487 <__PRETTY_FUNCTION__.0+0xaf>
    88a8:	48 89 c7             	mov    %rax,%rdi
    88ab:	e8 a0 9c ff ff       	call   2550 <fwrite@plt>
    88b0:	8b 45 ec             	mov    -0x14(%rbp),%eax
    88b3:	8d 50 01             	lea    0x1(%rax),%edx
    88b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88ba:	48 8b 40 18          	mov    0x18(%rax),%rax
    88be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    88c2:	48 89 ce             	mov    %rcx,%rsi
    88c5:	48 89 c7             	mov    %rax,%rdi
    88c8:	e8 4f fd ff ff       	call   861c <list_print>
    88cd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    88d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88d4:	89 d6                	mov    %edx,%esi
    88d6:	48 89 c7             	mov    %rax,%rdi
    88d9:	e8 f2 fc ff ff       	call   85d0 <print_indent>
    88de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88e2:	48 89 c1             	mov    %rax,%rcx
    88e5:	ba 0f 00 00 00       	mov    $0xf,%edx
    88ea:	be 01 00 00 00       	mov    $0x1,%esi
    88ef:	48 8d 05 9f 1b 01 00 	lea    0x11b9f(%rip),%rax        # 1a495 <__PRETTY_FUNCTION__.0+0xbd>
    88f6:	48 89 c7             	mov    %rax,%rdi
    88f9:	e8 52 9c ff ff       	call   2550 <fwrite@plt>
    88fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8901:	8d 50 01             	lea    0x1(%rax),%edx
    8904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8908:	48 8b 40 28          	mov    0x28(%rax),%rax
    890c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8910:	48 89 ce             	mov    %rcx,%rsi
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 01 fd ff ff       	call   861c <list_print>
    891b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    891e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8922:	89 d6                	mov    %edx,%esi
    8924:	48 89 c7             	mov    %rax,%rdi
    8927:	e8 a4 fc ff ff       	call   85d0 <print_indent>
    892c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8930:	48 89 c1             	mov    %rax,%rcx
    8933:	ba 08 00 00 00       	mov    $0x8,%edx
    8938:	be 01 00 00 00       	mov    $0x1,%esi
    893d:	48 8d 05 61 1b 01 00 	lea    0x11b61(%rip),%rax        # 1a4a5 <__PRETTY_FUNCTION__.0+0xcd>
    8944:	48 89 c7             	mov    %rax,%rdi
    8947:	e8 04 9c ff ff       	call   2550 <fwrite@plt>
    894c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    894f:	8d 50 01             	lea    0x1(%rax),%edx
    8952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8956:	48 8b 40 30          	mov    0x30(%rax),%rax
    895a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    895e:	48 89 ce             	mov    %rcx,%rsi
    8961:	48 89 c7             	mov    %rax,%rdi
    8964:	e8 74 03 00 00       	call   8cdd <stmt_print>
    8969:	e9 6c 03 00 00       	jmp    8cda <tree_print+0x560>
    896e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8972:	8b 40 08             	mov    0x8(%rax),%eax
    8975:	83 f8 05             	cmp    $0x5,%eax
    8978:	74 0a                	je     8984 <tree_print+0x20a>
    897a:	83 f8 06             	cmp    $0x6,%eax
    897d:	74 3e                	je     89bd <tree_print+0x243>
    897f:	e9 c3 00 00 00       	jmp    8a47 <tree_print+0x2cd>
    8984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8988:	48 8b 50 10          	mov    0x10(%rax),%rdx
    898c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8990:	48 8d 0d 17 1b 01 00 	lea    0x11b17(%rip),%rcx        # 1a4ae <__PRETTY_FUNCTION__.0+0xd6>
    8997:	48 89 ce             	mov    %rcx,%rsi
    899a:	48 89 c7             	mov    %rax,%rdi
    899d:	b8 00 00 00 00       	mov    $0x0,%eax
    89a2:	e8 c9 9a ff ff       	call   2470 <fprintf@plt>
    89a7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    89aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89ae:	89 d6                	mov    %edx,%esi
    89b0:	48 89 c7             	mov    %rax,%rdi
    89b3:	e8 18 fc ff ff       	call   85d0 <print_indent>
    89b8:	e9 b7 00 00 00       	jmp    8a74 <tree_print+0x2fa>
    89bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    89c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89c9:	48 8d 0d ef 1a 01 00 	lea    0x11aef(%rip),%rcx        # 1a4bf <__PRETTY_FUNCTION__.0+0xe7>
    89d0:	48 89 ce             	mov    %rcx,%rsi
    89d3:	48 89 c7             	mov    %rax,%rdi
    89d6:	b8 00 00 00 00       	mov    $0x0,%eax
    89db:	e8 90 9a ff ff       	call   2470 <fprintf@plt>
    89e0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    89e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89e7:	89 d6                	mov    %edx,%esi
    89e9:	48 89 c7             	mov    %rax,%rdi
    89ec:	e8 df fb ff ff       	call   85d0 <print_indent>
    89f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f5:	48 8b 40 30          	mov    0x30(%rax),%rax
    89f9:	48 85 c0             	test   %rax,%rax
    89fc:	74 25                	je     8a23 <tree_print+0x2a9>
    89fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a02:	48 8b 50 30          	mov    0x30(%rax),%rdx
    8a06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a0a:	48 8d 0d be 1a 01 00 	lea    0x11abe(%rip),%rcx        # 1a4cf <__PRETTY_FUNCTION__.0+0xf7>
    8a11:	48 89 ce             	mov    %rcx,%rsi
    8a14:	48 89 c7             	mov    %rax,%rdi
    8a17:	b8 00 00 00 00       	mov    $0x0,%eax
    8a1c:	e8 4f 9a ff ff       	call   2470 <fprintf@plt>
    8a21:	eb 51                	jmp    8a74 <tree_print+0x2fa>
    8a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a27:	8b 50 28             	mov    0x28(%rax),%edx
    8a2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a2e:	48 8d 0d a8 1a 01 00 	lea    0x11aa8(%rip),%rcx        # 1a4dd <__PRETTY_FUNCTION__.0+0x105>
    8a35:	48 89 ce             	mov    %rcx,%rsi
    8a38:	48 89 c7             	mov    %rax,%rdi
    8a3b:	b8 00 00 00 00       	mov    $0x0,%eax
    8a40:	e8 2b 9a ff ff       	call   2470 <fprintf@plt>
    8a45:	eb 2d                	jmp    8a74 <tree_print+0x2fa>
    8a47:	48 8b 05 12 96 01 00 	mov    0x19612(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    8a4e:	48 89 c1             	mov    %rax,%rcx
    8a51:	ba 1d 00 00 00       	mov    $0x1d,%edx
    8a56:	be 01 00 00 00       	mov    $0x1,%esi
    8a5b:	48 8d 05 89 1a 01 00 	lea    0x11a89(%rip),%rax        # 1a4eb <__PRETTY_FUNCTION__.0+0x113>
    8a62:	48 89 c7             	mov    %rax,%rdi
    8a65:	e8 e6 9a ff ff       	call   2550 <fwrite@plt>
    8a6a:	bf 01 00 00 00       	mov    $0x1,%edi
    8a6f:	e8 cc 9a ff ff       	call   2540 <exit@plt>
    8a74:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8a78:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8a7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a7f:	89 d6                	mov    %edx,%esi
    8a81:	48 89 c7             	mov    %rax,%rdi
    8a84:	e8 47 fb ff ff       	call   85d0 <print_indent>
    8a89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a8d:	48 89 c1             	mov    %rax,%rcx
    8a90:	ba 08 00 00 00       	mov    $0x8,%edx
    8a95:	be 01 00 00 00       	mov    $0x1,%esi
    8a9a:	48 8d 05 dd 19 01 00 	lea    0x119dd(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    8aa1:	48 89 c7             	mov    %rax,%rdi
    8aa4:	e8 a7 9a ff ff       	call   2550 <fwrite@plt>
    8aa9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8aac:	8d 50 01             	lea    0x1(%rax),%edx
    8aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ab3:	48 8b 40 20          	mov    0x20(%rax),%rax
    8ab7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8abb:	48 89 ce             	mov    %rcx,%rsi
    8abe:	48 89 c7             	mov    %rax,%rdi
    8ac1:	e8 56 fb ff ff       	call   861c <list_print>
    8ac6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8ac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8acd:	89 d6                	mov    %edx,%esi
    8acf:	48 89 c7             	mov    %rax,%rdi
    8ad2:	e8 f9 fa ff ff       	call   85d0 <print_indent>
    8ad7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8adb:	48 89 c1             	mov    %rax,%rcx
    8ade:	ba 0d 00 00 00       	mov    $0xd,%edx
    8ae3:	be 01 00 00 00       	mov    $0x1,%esi
    8ae8:	48 8d 05 98 19 01 00 	lea    0x11998(%rip),%rax        # 1a487 <__PRETTY_FUNCTION__.0+0xaf>
    8aef:	48 89 c7             	mov    %rax,%rdi
    8af2:	e8 59 9a ff ff       	call   2550 <fwrite@plt>
    8af7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8afa:	8d 50 01             	lea    0x1(%rax),%edx
    8afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b01:	48 8b 40 40          	mov    0x40(%rax),%rax
    8b05:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b09:	48 89 ce             	mov    %rcx,%rsi
    8b0c:	48 89 c7             	mov    %rax,%rdi
    8b0f:	e8 08 fb ff ff       	call   861c <list_print>
    8b14:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8b17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b1b:	89 d6                	mov    %edx,%esi
    8b1d:	48 89 c7             	mov    %rax,%rdi
    8b20:	e8 ab fa ff ff       	call   85d0 <print_indent>
    8b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b29:	48 89 c1             	mov    %rax,%rcx
    8b2c:	ba 0f 00 00 00       	mov    $0xf,%edx
    8b31:	be 01 00 00 00       	mov    $0x1,%esi
    8b36:	48 8d 05 58 19 01 00 	lea    0x11958(%rip),%rax        # 1a495 <__PRETTY_FUNCTION__.0+0xbd>
    8b3d:	48 89 c7             	mov    %rax,%rdi
    8b40:	e8 0b 9a ff ff       	call   2550 <fwrite@plt>
    8b45:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b48:	8d 50 01             	lea    0x1(%rax),%edx
    8b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b4f:	48 8b 40 48          	mov    0x48(%rax),%rax
    8b53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b57:	48 89 ce             	mov    %rcx,%rsi
    8b5a:	48 89 c7             	mov    %rax,%rdi
    8b5d:	e8 ba fa ff ff       	call   861c <list_print>
    8b62:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8b65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b69:	89 d6                	mov    %edx,%esi
    8b6b:	48 89 c7             	mov    %rax,%rdi
    8b6e:	e8 5d fa ff ff       	call   85d0 <print_indent>
    8b73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b77:	48 89 c1             	mov    %rax,%rcx
    8b7a:	ba 08 00 00 00       	mov    $0x8,%edx
    8b7f:	be 01 00 00 00       	mov    $0x1,%esi
    8b84:	48 8d 05 1a 19 01 00 	lea    0x1191a(%rip),%rax        # 1a4a5 <__PRETTY_FUNCTION__.0+0xcd>
    8b8b:	48 89 c7             	mov    %rax,%rdi
    8b8e:	e8 bd 99 ff ff       	call   2550 <fwrite@plt>
    8b93:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b96:	8d 50 01             	lea    0x1(%rax),%edx
    8b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b9d:	48 8b 40 50          	mov    0x50(%rax),%rax
    8ba1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ba5:	48 89 ce             	mov    %rcx,%rsi
    8ba8:	48 89 c7             	mov    %rax,%rdi
    8bab:	e8 2d 01 00 00       	call   8cdd <stmt_print>
    8bb0:	e9 25 01 00 00       	jmp    8cda <tree_print+0x560>
    8bb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb9:	48 8b 40 18          	mov    0x18(%rax),%rax
    8bbd:	48 85 c0             	test   %rax,%rax
    8bc0:	74 25                	je     8be7 <tree_print+0x46d>
    8bc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bc6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    8bca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bce:	48 8d 0d 34 19 01 00 	lea    0x11934(%rip),%rcx        # 1a509 <__PRETTY_FUNCTION__.0+0x131>
    8bd5:	48 89 ce             	mov    %rcx,%rsi
    8bd8:	48 89 c7             	mov    %rax,%rdi
    8bdb:	b8 00 00 00 00       	mov    $0x0,%eax
    8be0:	e8 8b 98 ff ff       	call   2470 <fprintf@plt>
    8be5:	eb 22                	jmp    8c09 <tree_print+0x48f>
    8be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8beb:	8b 50 10             	mov    0x10(%rax),%edx
    8bee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bf2:	48 8d 0d 26 19 01 00 	lea    0x11926(%rip),%rcx        # 1a51f <__PRETTY_FUNCTION__.0+0x147>
    8bf9:	48 89 ce             	mov    %rcx,%rsi
    8bfc:	48 89 c7             	mov    %rax,%rdi
    8bff:	b8 00 00 00 00       	mov    $0x0,%eax
    8c04:	e8 67 98 ff ff       	call   2470 <fprintf@plt>
    8c09:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8c0c:	8d 50 01             	lea    0x1(%rax),%edx
    8c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c13:	48 8b 40 08          	mov    0x8(%rax),%rax
    8c17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c1b:	48 89 ce             	mov    %rcx,%rsi
    8c1e:	48 89 c7             	mov    %rax,%rdi
    8c21:	e8 f6 f9 ff ff       	call   861c <list_print>
    8c26:	e9 af 00 00 00       	jmp    8cda <tree_print+0x560>
    8c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c2f:	8b 70 18             	mov    0x18(%rax),%esi
    8c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c36:	8b 48 14             	mov    0x14(%rax),%ecx
    8c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c3d:	8b 50 10             	mov    0x10(%rax),%edx
    8c40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c44:	41 89 f0             	mov    %esi,%r8d
    8c47:	48 8d 35 ea 18 01 00 	lea    0x118ea(%rip),%rsi        # 1a538 <__PRETTY_FUNCTION__.0+0x160>
    8c4e:	48 89 c7             	mov    %rax,%rdi
    8c51:	b8 00 00 00 00       	mov    $0x0,%eax
    8c56:	e8 15 98 ff ff       	call   2470 <fprintf@plt>
    8c5b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8c5e:	8d 50 01             	lea    0x1(%rax),%edx
    8c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c65:	48 8b 40 08          	mov    0x8(%rax),%rax
    8c69:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c6d:	48 89 ce             	mov    %rcx,%rsi
    8c70:	48 89 c7             	mov    %rax,%rdi
    8c73:	e8 a4 f9 ff ff       	call   861c <list_print>
    8c78:	eb 60                	jmp    8cda <tree_print+0x560>
    8c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c7e:	8b 70 14             	mov    0x14(%rax),%esi
    8c81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c85:	8b 48 10             	mov    0x10(%rax),%ecx
    8c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c8c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8c90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c94:	41 89 f0             	mov    %esi,%r8d
    8c97:	48 8d 35 c1 18 01 00 	lea    0x118c1(%rip),%rsi        # 1a55f <__PRETTY_FUNCTION__.0+0x187>
    8c9e:	48 89 c7             	mov    %rax,%rdi
    8ca1:	b8 00 00 00 00       	mov    $0x0,%eax
    8ca6:	e8 c5 97 ff ff       	call   2470 <fprintf@plt>
    8cab:	eb 2d                	jmp    8cda <tree_print+0x560>
    8cad:	48 8b 05 ac 93 01 00 	mov    0x193ac(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    8cb4:	48 89 c1             	mov    %rax,%rcx
    8cb7:	ba 18 00 00 00       	mov    $0x18,%edx
    8cbc:	be 01 00 00 00       	mov    $0x1,%esi
    8cc1:	48 8d 05 af 18 01 00 	lea    0x118af(%rip),%rax        # 1a577 <__PRETTY_FUNCTION__.0+0x19f>
    8cc8:	48 89 c7             	mov    %rax,%rdi
    8ccb:	e8 80 98 ff ff       	call   2550 <fwrite@plt>
    8cd0:	bf 01 00 00 00       	mov    $0x1,%edi
    8cd5:	e8 66 98 ff ff       	call   2540 <exit@plt>
    8cda:	90                   	nop
    8cdb:	c9                   	leave
    8cdc:	c3                   	ret

0000000000008cdd <stmt_print>:
    8cdd:	f3 0f 1e fa          	endbr64
    8ce1:	55                   	push   %rbp
    8ce2:	48 89 e5             	mov    %rsp,%rbp
    8ce5:	48 83 ec 20          	sub    $0x20,%rsp
    8ce9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ced:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cf1:	89 55 ec             	mov    %edx,-0x14(%rbp)
    8cf4:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8cf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cfb:	89 d6                	mov    %edx,%esi
    8cfd:	48 89 c7             	mov    %rax,%rdi
    8d00:	e8 cb f8 ff ff       	call   85d0 <print_indent>
    8d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d09:	8b 40 04             	mov    0x4(%rax),%eax
    8d0c:	83 f8 08             	cmp    $0x8,%eax
    8d0f:	0f 87 bb 04 00 00    	ja     91d0 <stmt_print+0x4f3>
    8d15:	89 c0                	mov    %eax,%eax
    8d17:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8d1e:	00
    8d1f:	48 8d 05 4a 19 01 00 	lea    0x1194a(%rip),%rax        # 1a670 <__PRETTY_FUNCTION__.0+0x298>
    8d26:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    8d29:	48 98                	cltq
    8d2b:	48 8d 15 3e 19 01 00 	lea    0x1193e(%rip),%rdx        # 1a670 <__PRETTY_FUNCTION__.0+0x298>
    8d32:	48 01 d0             	add    %rdx,%rax
    8d35:	3e ff e0             	notrack jmp *%rax
    8d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d3c:	48 89 c1             	mov    %rax,%rcx
    8d3f:	ba 0d 00 00 00       	mov    $0xd,%edx
    8d44:	be 01 00 00 00       	mov    $0x1,%esi
    8d49:	48 8d 05 60 18 01 00 	lea    0x11860(%rip),%rax        # 1a5b0 <__PRETTY_FUNCTION__.0+0x1d8>
    8d50:	48 89 c7             	mov    %rax,%rdi
    8d53:	e8 f8 97 ff ff       	call   2550 <fwrite@plt>
    8d58:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8d5c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8d5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d63:	89 d6                	mov    %edx,%esi
    8d65:	48 89 c7             	mov    %rax,%rdi
    8d68:	e8 63 f8 ff ff       	call   85d0 <print_indent>
    8d6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d71:	48 89 c1             	mov    %rax,%rcx
    8d74:	ba 07 00 00 00       	mov    $0x7,%edx
    8d79:	be 01 00 00 00       	mov    $0x1,%esi
    8d7e:	48 8d 05 39 18 01 00 	lea    0x11839(%rip),%rax        # 1a5be <__PRETTY_FUNCTION__.0+0x1e6>
    8d85:	48 89 c7             	mov    %rax,%rdi
    8d88:	e8 c3 97 ff ff       	call   2550 <fwrite@plt>
    8d8d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8d90:	8d 50 01             	lea    0x1(%rax),%edx
    8d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d97:	48 8b 40 08          	mov    0x8(%rax),%rax
    8d9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d9f:	48 89 ce             	mov    %rcx,%rsi
    8da2:	48 89 c7             	mov    %rax,%rdi
    8da5:	e8 57 04 00 00       	call   9201 <expr_print>
    8daa:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8dad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8db1:	89 d6                	mov    %edx,%esi
    8db3:	48 89 c7             	mov    %rax,%rdi
    8db6:	e8 15 f8 ff ff       	call   85d0 <print_indent>
    8dbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8dbf:	48 89 c1             	mov    %rax,%rcx
    8dc2:	ba 08 00 00 00       	mov    $0x8,%edx
    8dc7:	be 01 00 00 00       	mov    $0x1,%esi
    8dcc:	48 8d 05 f3 17 01 00 	lea    0x117f3(%rip),%rax        # 1a5c6 <__PRETTY_FUNCTION__.0+0x1ee>
    8dd3:	48 89 c7             	mov    %rax,%rdi
    8dd6:	e8 75 97 ff ff       	call   2550 <fwrite@plt>
    8ddb:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8dde:	8d 50 01             	lea    0x1(%rax),%edx
    8de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de5:	48 8b 40 10          	mov    0x10(%rax),%rax
    8de9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ded:	48 89 ce             	mov    %rcx,%rsi
    8df0:	48 89 c7             	mov    %rax,%rdi
    8df3:	e8 09 04 00 00       	call   9201 <expr_print>
    8df8:	e9 01 04 00 00       	jmp    91fe <stmt_print+0x521>
    8dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e01:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8e05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e09:	48 8d 0d bf 17 01 00 	lea    0x117bf(%rip),%rcx        # 1a5cf <__PRETTY_FUNCTION__.0+0x1f7>
    8e10:	48 89 ce             	mov    %rcx,%rsi
    8e13:	48 89 c7             	mov    %rax,%rdi
    8e16:	b8 00 00 00 00       	mov    $0x0,%eax
    8e1b:	e8 50 96 ff ff       	call   2470 <fprintf@plt>
    8e20:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8e24:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8e27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e2b:	89 d6                	mov    %edx,%esi
    8e2d:	48 89 c7             	mov    %rax,%rdi
    8e30:	e8 9b f7 ff ff       	call   85d0 <print_indent>
    8e35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e39:	48 89 c1             	mov    %rax,%rcx
    8e3c:	ba 08 00 00 00       	mov    $0x8,%edx
    8e41:	be 01 00 00 00       	mov    $0x1,%esi
    8e46:	48 8d 05 31 16 01 00 	lea    0x11631(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    8e4d:	48 89 c7             	mov    %rax,%rdi
    8e50:	e8 fb 96 ff ff       	call   2550 <fwrite@plt>
    8e55:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8e58:	8d 50 01             	lea    0x1(%rax),%edx
    8e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5f:	48 8b 40 18          	mov    0x18(%rax),%rax
    8e63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e67:	48 89 ce             	mov    %rcx,%rsi
    8e6a:	48 89 c7             	mov    %rax,%rdi
    8e6d:	e8 aa f7 ff ff       	call   861c <list_print>
    8e72:	e9 87 03 00 00       	jmp    91fe <stmt_print+0x521>
    8e77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e7b:	48 89 c1             	mov    %rax,%rcx
    8e7e:	ba 11 00 00 00       	mov    $0x11,%edx
    8e83:	be 01 00 00 00       	mov    $0x1,%esi
    8e88:	48 8d 05 56 17 01 00 	lea    0x11756(%rip),%rax        # 1a5e5 <__PRETTY_FUNCTION__.0+0x20d>
    8e8f:	48 89 c7             	mov    %rax,%rdi
    8e92:	e8 b9 96 ff ff       	call   2550 <fwrite@plt>
    8e97:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8e9a:	8d 50 01             	lea    0x1(%rax),%edx
    8e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea1:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ea5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ea9:	48 89 ce             	mov    %rcx,%rsi
    8eac:	48 89 c7             	mov    %rax,%rdi
    8eaf:	e8 68 f7 ff ff       	call   861c <list_print>
    8eb4:	e9 45 03 00 00       	jmp    91fe <stmt_print+0x521>
    8eb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ebd:	48 89 c1             	mov    %rax,%rcx
    8ec0:	ba 06 00 00 00       	mov    $0x6,%edx
    8ec5:	be 01 00 00 00       	mov    $0x1,%esi
    8eca:	48 8d 05 26 17 01 00 	lea    0x11726(%rip),%rax        # 1a5f7 <__PRETTY_FUNCTION__.0+0x21f>
    8ed1:	48 89 c7             	mov    %rax,%rdi
    8ed4:	e8 77 96 ff ff       	call   2550 <fwrite@plt>
    8ed9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8edc:	8d 50 01             	lea    0x1(%rax),%edx
    8edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee3:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ee7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8eeb:	48 89 ce             	mov    %rcx,%rsi
    8eee:	48 89 c7             	mov    %rax,%rdi
    8ef1:	e8 0b 03 00 00       	call   9201 <expr_print>
    8ef6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8ef9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8efd:	89 d6                	mov    %edx,%esi
    8eff:	48 89 c7             	mov    %rax,%rdi
    8f02:	e8 c9 f6 ff ff       	call   85d0 <print_indent>
    8f07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f0b:	48 89 c1             	mov    %rax,%rcx
    8f0e:	ba 08 00 00 00       	mov    $0x8,%edx
    8f13:	be 01 00 00 00       	mov    $0x1,%esi
    8f18:	48 8d 05 df 16 01 00 	lea    0x116df(%rip),%rax        # 1a5fe <__PRETTY_FUNCTION__.0+0x226>
    8f1f:	48 89 c7             	mov    %rax,%rdi
    8f22:	e8 29 96 ff ff       	call   2550 <fwrite@plt>
    8f27:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8f2a:	8d 50 01             	lea    0x1(%rax),%edx
    8f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f31:	48 8b 40 10          	mov    0x10(%rax),%rax
    8f35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f39:	48 89 ce             	mov    %rcx,%rsi
    8f3c:	48 89 c7             	mov    %rax,%rdi
    8f3f:	e8 99 fd ff ff       	call   8cdd <stmt_print>
    8f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f48:	48 8b 40 18          	mov    0x18(%rax),%rax
    8f4c:	48 85 c0             	test   %rax,%rax
    8f4f:	0f 84 a8 02 00 00    	je     91fd <stmt_print+0x520>
    8f55:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8f58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f5c:	89 d6                	mov    %edx,%esi
    8f5e:	48 89 c7             	mov    %rax,%rdi
    8f61:	e8 6a f6 ff ff       	call   85d0 <print_indent>
    8f66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f6a:	48 89 c1             	mov    %rax,%rcx
    8f6d:	ba 08 00 00 00       	mov    $0x8,%edx
    8f72:	be 01 00 00 00       	mov    $0x1,%esi
    8f77:	48 8d 05 89 16 01 00 	lea    0x11689(%rip),%rax        # 1a607 <__PRETTY_FUNCTION__.0+0x22f>
    8f7e:	48 89 c7             	mov    %rax,%rdi
    8f81:	e8 ca 95 ff ff       	call   2550 <fwrite@plt>
    8f86:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8f89:	8d 50 01             	lea    0x1(%rax),%edx
    8f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f90:	48 8b 40 18          	mov    0x18(%rax),%rax
    8f94:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f98:	48 89 ce             	mov    %rcx,%rsi
    8f9b:	48 89 c7             	mov    %rax,%rdi
    8f9e:	e8 3a fd ff ff       	call   8cdd <stmt_print>
    8fa3:	e9 55 02 00 00       	jmp    91fd <stmt_print+0x520>
    8fa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fac:	48 89 c1             	mov    %rax,%rcx
    8faf:	ba 09 00 00 00       	mov    $0x9,%edx
    8fb4:	be 01 00 00 00       	mov    $0x1,%esi
    8fb9:	48 8d 05 50 16 01 00 	lea    0x11650(%rip),%rax        # 1a610 <__PRETTY_FUNCTION__.0+0x238>
    8fc0:	48 89 c7             	mov    %rax,%rdi
    8fc3:	e8 88 95 ff ff       	call   2550 <fwrite@plt>
    8fc8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8fcb:	8d 50 01             	lea    0x1(%rax),%edx
    8fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd2:	48 8b 40 08          	mov    0x8(%rax),%rax
    8fd6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8fda:	48 89 ce             	mov    %rcx,%rsi
    8fdd:	48 89 c7             	mov    %rax,%rdi
    8fe0:	e8 1c 02 00 00       	call   9201 <expr_print>
    8fe5:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8fe8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fec:	89 d6                	mov    %edx,%esi
    8fee:	48 89 c7             	mov    %rax,%rdi
    8ff1:	e8 da f5 ff ff       	call   85d0 <print_indent>
    8ff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ffa:	48 89 c1             	mov    %rax,%rcx
    8ffd:	ba 06 00 00 00       	mov    $0x6,%edx
    9002:	be 01 00 00 00       	mov    $0x1,%esi
    9007:	48 8d 05 0c 16 01 00 	lea    0x1160c(%rip),%rax        # 1a61a <__PRETTY_FUNCTION__.0+0x242>
    900e:	48 89 c7             	mov    %rax,%rdi
    9011:	e8 3a 95 ff ff       	call   2550 <fwrite@plt>
    9016:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9019:	8d 50 01             	lea    0x1(%rax),%edx
    901c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9020:	48 8b 40 10          	mov    0x10(%rax),%rax
    9024:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9028:	48 89 ce             	mov    %rcx,%rsi
    902b:	48 89 c7             	mov    %rax,%rdi
    902e:	e8 aa fc ff ff       	call   8cdd <stmt_print>
    9033:	e9 c6 01 00 00       	jmp    91fe <stmt_print+0x521>
    9038:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    903c:	48 89 c1             	mov    %rax,%rcx
    903f:	ba 07 00 00 00       	mov    $0x7,%edx
    9044:	be 01 00 00 00       	mov    $0x1,%esi
    9049:	48 8d 05 d1 15 01 00 	lea    0x115d1(%rip),%rax        # 1a621 <__PRETTY_FUNCTION__.0+0x249>
    9050:	48 89 c7             	mov    %rax,%rdi
    9053:	e8 f8 94 ff ff       	call   2550 <fwrite@plt>
    9058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    905c:	8b 40 08             	mov    0x8(%rax),%eax
    905f:	83 f8 06             	cmp    $0x6,%eax
    9062:	74 07                	je     906b <stmt_print+0x38e>
    9064:	83 f8 07             	cmp    $0x7,%eax
    9067:	74 21                	je     908a <stmt_print+0x3ad>
    9069:	eb 3e                	jmp    90a9 <stmt_print+0x3cc>
    906b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    906e:	8d 50 01             	lea    0x1(%rax),%edx
    9071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9075:	48 8b 40 20          	mov    0x20(%rax),%rax
    9079:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    907d:	48 89 ce             	mov    %rcx,%rsi
    9080:	48 89 c7             	mov    %rax,%rdi
    9083:	e8 79 01 00 00       	call   9201 <expr_print>
    9088:	eb 4c                	jmp    90d6 <stmt_print+0x3f9>
    908a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    908d:	8d 50 01             	lea    0x1(%rax),%edx
    9090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9094:	48 8b 40 20          	mov    0x20(%rax),%rax
    9098:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    909c:	48 89 ce             	mov    %rcx,%rsi
    909f:	48 89 c7             	mov    %rax,%rdi
    90a2:	e8 36 fc ff ff       	call   8cdd <stmt_print>
    90a7:	eb 2d                	jmp    90d6 <stmt_print+0x3f9>
    90a9:	48 8b 05 b0 8f 01 00 	mov    0x18fb0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    90b0:	48 89 c1             	mov    %rax,%rcx
    90b3:	ba 16 00 00 00       	mov    $0x16,%edx
    90b8:	be 01 00 00 00       	mov    $0x1,%esi
    90bd:	48 8d 05 65 15 01 00 	lea    0x11565(%rip),%rax        # 1a629 <__PRETTY_FUNCTION__.0+0x251>
    90c4:	48 89 c7             	mov    %rax,%rdi
    90c7:	e8 84 94 ff ff       	call   2550 <fwrite@plt>
    90cc:	bf 01 00 00 00       	mov    $0x1,%edi
    90d1:	e8 6a 94 ff ff       	call   2540 <exit@plt>
    90d6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    90d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    90dd:	89 d6                	mov    %edx,%esi
    90df:	48 89 c7             	mov    %rax,%rdi
    90e2:	e8 e9 f4 ff ff       	call   85d0 <print_indent>
    90e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    90eb:	48 89 c1             	mov    %rax,%rcx
    90ee:	ba 06 00 00 00       	mov    $0x6,%edx
    90f3:	be 01 00 00 00       	mov    $0x1,%esi
    90f8:	48 8d 05 41 15 01 00 	lea    0x11541(%rip),%rax        # 1a640 <__PRETTY_FUNCTION__.0+0x268>
    90ff:	48 89 c7             	mov    %rax,%rdi
    9102:	e8 49 94 ff ff       	call   2550 <fwrite@plt>
    9107:	8b 45 ec             	mov    -0x14(%rbp),%eax
    910a:	8d 50 01             	lea    0x1(%rax),%edx
    910d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9111:	48 8b 40 10          	mov    0x10(%rax),%rax
    9115:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9119:	48 89 ce             	mov    %rcx,%rsi
    911c:	48 89 c7             	mov    %rax,%rdi
    911f:	e8 dd 00 00 00       	call   9201 <expr_print>
    9124:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9127:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    912b:	89 d6                	mov    %edx,%esi
    912d:	48 89 c7             	mov    %rax,%rdi
    9130:	e8 9b f4 ff ff       	call   85d0 <print_indent>
    9135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9139:	48 89 c1             	mov    %rax,%rcx
    913c:	ba 06 00 00 00       	mov    $0x6,%edx
    9141:	be 01 00 00 00       	mov    $0x1,%esi
    9146:	48 8d 05 cd 14 01 00 	lea    0x114cd(%rip),%rax        # 1a61a <__PRETTY_FUNCTION__.0+0x242>
    914d:	48 89 c7             	mov    %rax,%rdi
    9150:	e8 fb 93 ff ff       	call   2550 <fwrite@plt>
    9155:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9158:	8d 50 01             	lea    0x1(%rax),%edx
    915b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    915f:	48 8b 40 18          	mov    0x18(%rax),%rax
    9163:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9167:	48 89 ce             	mov    %rcx,%rsi
    916a:	48 89 c7             	mov    %rax,%rdi
    916d:	e8 6b fb ff ff       	call   8cdd <stmt_print>
    9172:	e9 87 00 00 00       	jmp    91fe <stmt_print+0x521>
    9177:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    917b:	48 89 c1             	mov    %rax,%rcx
    917e:	ba 0d 00 00 00       	mov    $0xd,%edx
    9183:	be 01 00 00 00       	mov    $0x1,%esi
    9188:	48 8d 05 b8 14 01 00 	lea    0x114b8(%rip),%rax        # 1a647 <__PRETTY_FUNCTION__.0+0x26f>
    918f:	48 89 c7             	mov    %rax,%rdi
    9192:	e8 b9 93 ff ff       	call   2550 <fwrite@plt>
    9197:	8b 45 ec             	mov    -0x14(%rbp),%eax
    919a:	8d 50 01             	lea    0x1(%rax),%edx
    919d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91a1:	89 d6                	mov    %edx,%esi
    91a3:	48 89 c7             	mov    %rax,%rdi
    91a6:	e8 25 f4 ff ff       	call   85d0 <print_indent>
    91ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    91b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91b7:	48 8d 0d 62 12 01 00 	lea    0x11262(%rip),%rcx        # 1a420 <__PRETTY_FUNCTION__.0+0x48>
    91be:	48 89 ce             	mov    %rcx,%rsi
    91c1:	48 89 c7             	mov    %rax,%rdi
    91c4:	b8 00 00 00 00       	mov    $0x0,%eax
    91c9:	e8 a2 92 ff ff       	call   2470 <fprintf@plt>
    91ce:	eb 2e                	jmp    91fe <stmt_print+0x521>
    91d0:	48 8b 05 89 8e 01 00 	mov    0x18e89(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    91d7:	48 89 c1             	mov    %rax,%rcx
    91da:	ba 18 00 00 00       	mov    $0x18,%edx
    91df:	be 01 00 00 00       	mov    $0x1,%esi
    91e4:	48 8d 05 6a 14 01 00 	lea    0x1146a(%rip),%rax        # 1a655 <__PRETTY_FUNCTION__.0+0x27d>
    91eb:	48 89 c7             	mov    %rax,%rdi
    91ee:	e8 5d 93 ff ff       	call   2550 <fwrite@plt>
    91f3:	bf 01 00 00 00       	mov    $0x1,%edi
    91f8:	e8 43 93 ff ff       	call   2540 <exit@plt>
    91fd:	90                   	nop
    91fe:	90                   	nop
    91ff:	c9                   	leave
    9200:	c3                   	ret

0000000000009201 <expr_print>:
    9201:	f3 0f 1e fa          	endbr64
    9205:	55                   	push   %rbp
    9206:	48 89 e5             	mov    %rsp,%rbp
    9209:	48 83 ec 20          	sub    $0x20,%rsp
    920d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9211:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9215:	89 55 ec             	mov    %edx,-0x14(%rbp)
    9218:	8b 55 ec             	mov    -0x14(%rbp),%edx
    921b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    921f:	89 d6                	mov    %edx,%esi
    9221:	48 89 c7             	mov    %rax,%rdi
    9224:	e8 a7 f3 ff ff       	call   85d0 <print_indent>
    9229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    922d:	8b 40 04             	mov    0x4(%rax),%eax
    9230:	83 f8 09             	cmp    $0x9,%eax
    9233:	0f 87 5a 04 00 00    	ja     9693 <expr_print+0x492>
    9239:	89 c0                	mov    %eax,%eax
    923b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9242:	00
    9243:	48 8d 05 06 15 01 00 	lea    0x11506(%rip),%rax        # 1a750 <__PRETTY_FUNCTION__.0+0x378>
    924a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    924d:	48 98                	cltq
    924f:	48 8d 15 fa 14 01 00 	lea    0x114fa(%rip),%rdx        # 1a750 <__PRETTY_FUNCTION__.0+0x378>
    9256:	48 01 d0             	add    %rdx,%rax
    9259:	3e ff e0             	notrack jmp *%rax
    925c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9260:	8b 50 08             	mov    0x8(%rax),%edx
    9263:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9267:	48 8d 0d 26 14 01 00 	lea    0x11426(%rip),%rcx        # 1a694 <__PRETTY_FUNCTION__.0+0x2bc>
    926e:	48 89 ce             	mov    %rcx,%rsi
    9271:	48 89 c7             	mov    %rax,%rdi
    9274:	b8 00 00 00 00       	mov    $0x0,%eax
    9279:	e8 f2 91 ff ff       	call   2470 <fprintf@plt>
    927e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9282:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9285:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9289:	89 d6                	mov    %edx,%esi
    928b:	48 89 c7             	mov    %rax,%rdi
    928e:	e8 3d f3 ff ff       	call   85d0 <print_indent>
    9293:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9297:	48 89 c1             	mov    %rax,%rcx
    929a:	ba 08 00 00 00       	mov    $0x8,%edx
    929f:	be 01 00 00 00       	mov    $0x1,%esi
    92a4:	48 8d 05 f6 13 01 00 	lea    0x113f6(%rip),%rax        # 1a6a1 <__PRETTY_FUNCTION__.0+0x2c9>
    92ab:	48 89 c7             	mov    %rax,%rdi
    92ae:	e8 9d 92 ff ff       	call   2550 <fwrite@plt>
    92b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    92b6:	8d 50 01             	lea    0x1(%rax),%edx
    92b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92bd:	48 8b 40 10          	mov    0x10(%rax),%rax
    92c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    92c5:	48 89 ce             	mov    %rcx,%rsi
    92c8:	48 89 c7             	mov    %rax,%rdi
    92cb:	e8 31 ff ff ff       	call   9201 <expr_print>
    92d0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    92d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92d7:	89 d6                	mov    %edx,%esi
    92d9:	48 89 c7             	mov    %rax,%rdi
    92dc:	e8 ef f2 ff ff       	call   85d0 <print_indent>
    92e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92e5:	48 89 c1             	mov    %rax,%rcx
    92e8:	ba 09 00 00 00       	mov    $0x9,%edx
    92ed:	be 01 00 00 00       	mov    $0x1,%esi
    92f2:	48 8d 05 b1 13 01 00 	lea    0x113b1(%rip),%rax        # 1a6aa <__PRETTY_FUNCTION__.0+0x2d2>
    92f9:	48 89 c7             	mov    %rax,%rdi
    92fc:	e8 4f 92 ff ff       	call   2550 <fwrite@plt>
    9301:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9304:	8d 50 01             	lea    0x1(%rax),%edx
    9307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    930b:	48 8b 40 18          	mov    0x18(%rax),%rax
    930f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9313:	48 89 ce             	mov    %rcx,%rsi
    9316:	48 89 c7             	mov    %rax,%rdi
    9319:	e8 e3 fe ff ff       	call   9201 <expr_print>
    931e:	e9 9d 03 00 00       	jmp    96c0 <expr_print+0x4bf>
    9323:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9327:	48 89 c1             	mov    %rax,%rcx
    932a:	ba 08 00 00 00       	mov    $0x8,%edx
    932f:	be 01 00 00 00       	mov    $0x1,%esi
    9334:	48 8d 05 79 13 01 00 	lea    0x11379(%rip),%rax        # 1a6b4 <__PRETTY_FUNCTION__.0+0x2dc>
    933b:	48 89 c7             	mov    %rax,%rdi
    933e:	e8 0d 92 ff ff       	call   2550 <fwrite@plt>
    9343:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9346:	8d 50 01             	lea    0x1(%rax),%edx
    9349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    934d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9351:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9355:	48 89 ce             	mov    %rcx,%rsi
    9358:	48 89 c7             	mov    %rax,%rdi
    935b:	e8 a1 fe ff ff       	call   9201 <expr_print>
    9360:	e9 5b 03 00 00       	jmp    96c0 <expr_print+0x4bf>
    9365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9369:	8b 50 08             	mov    0x8(%rax),%edx
    936c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9370:	48 8d 0d 46 13 01 00 	lea    0x11346(%rip),%rcx        # 1a6bd <__PRETTY_FUNCTION__.0+0x2e5>
    9377:	48 89 ce             	mov    %rcx,%rsi
    937a:	48 89 c7             	mov    %rax,%rdi
    937d:	b8 00 00 00 00       	mov    $0x0,%eax
    9382:	e8 e9 90 ff ff       	call   2470 <fprintf@plt>
    9387:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    938b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    938e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9392:	89 d6                	mov    %edx,%esi
    9394:	48 89 c7             	mov    %rax,%rdi
    9397:	e8 34 f2 ff ff       	call   85d0 <print_indent>
    939c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93a0:	48 89 c1             	mov    %rax,%rcx
    93a3:	ba 08 00 00 00       	mov    $0x8,%edx
    93a8:	be 01 00 00 00       	mov    $0x1,%esi
    93ad:	48 8d 05 ed 12 01 00 	lea    0x112ed(%rip),%rax        # 1a6a1 <__PRETTY_FUNCTION__.0+0x2c9>
    93b4:	48 89 c7             	mov    %rax,%rdi
    93b7:	e8 94 91 ff ff       	call   2550 <fwrite@plt>
    93bc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    93bf:	8d 50 01             	lea    0x1(%rax),%edx
    93c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c6:	48 8b 40 10          	mov    0x10(%rax),%rax
    93ca:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93ce:	48 89 ce             	mov    %rcx,%rsi
    93d1:	48 89 c7             	mov    %rax,%rdi
    93d4:	e8 28 fe ff ff       	call   9201 <expr_print>
    93d9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    93dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93e0:	89 d6                	mov    %edx,%esi
    93e2:	48 89 c7             	mov    %rax,%rdi
    93e5:	e8 e6 f1 ff ff       	call   85d0 <print_indent>
    93ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93ee:	48 89 c1             	mov    %rax,%rcx
    93f1:	ba 09 00 00 00       	mov    $0x9,%edx
    93f6:	be 01 00 00 00       	mov    $0x1,%esi
    93fb:	48 8d 05 a8 12 01 00 	lea    0x112a8(%rip),%rax        # 1a6aa <__PRETTY_FUNCTION__.0+0x2d2>
    9402:	48 89 c7             	mov    %rax,%rdi
    9405:	e8 46 91 ff ff       	call   2550 <fwrite@plt>
    940a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    940d:	8d 50 01             	lea    0x1(%rax),%edx
    9410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9414:	48 8b 40 18          	mov    0x18(%rax),%rax
    9418:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    941c:	48 89 ce             	mov    %rcx,%rsi
    941f:	48 89 c7             	mov    %rax,%rdi
    9422:	e8 da fd ff ff       	call   9201 <expr_print>
    9427:	e9 94 02 00 00       	jmp    96c0 <expr_print+0x4bf>
    942c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9430:	8b 50 08             	mov    0x8(%rax),%edx
    9433:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9437:	48 8d 0d 8c 12 01 00 	lea    0x1128c(%rip),%rcx        # 1a6ca <__PRETTY_FUNCTION__.0+0x2f2>
    943e:	48 89 ce             	mov    %rcx,%rsi
    9441:	48 89 c7             	mov    %rax,%rdi
    9444:	b8 00 00 00 00       	mov    $0x0,%eax
    9449:	e8 22 90 ff ff       	call   2470 <fprintf@plt>
    944e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9452:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9455:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9459:	89 d6                	mov    %edx,%esi
    945b:	48 89 c7             	mov    %rax,%rdi
    945e:	e8 6d f1 ff ff       	call   85d0 <print_indent>
    9463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9467:	48 89 c1             	mov    %rax,%rcx
    946a:	ba 08 00 00 00       	mov    $0x8,%edx
    946f:	be 01 00 00 00       	mov    $0x1,%esi
    9474:	48 8d 05 26 12 01 00 	lea    0x11226(%rip),%rax        # 1a6a1 <__PRETTY_FUNCTION__.0+0x2c9>
    947b:	48 89 c7             	mov    %rax,%rdi
    947e:	e8 cd 90 ff ff       	call   2550 <fwrite@plt>
    9483:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9486:	8d 50 01             	lea    0x1(%rax),%edx
    9489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948d:	48 8b 40 10          	mov    0x10(%rax),%rax
    9491:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9495:	48 89 ce             	mov    %rcx,%rsi
    9498:	48 89 c7             	mov    %rax,%rdi
    949b:	e8 61 fd ff ff       	call   9201 <expr_print>
    94a0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    94a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94a7:	89 d6                	mov    %edx,%esi
    94a9:	48 89 c7             	mov    %rax,%rdi
    94ac:	e8 1f f1 ff ff       	call   85d0 <print_indent>
    94b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94b5:	48 89 c1             	mov    %rax,%rcx
    94b8:	ba 09 00 00 00       	mov    $0x9,%edx
    94bd:	be 01 00 00 00       	mov    $0x1,%esi
    94c2:	48 8d 05 e1 11 01 00 	lea    0x111e1(%rip),%rax        # 1a6aa <__PRETTY_FUNCTION__.0+0x2d2>
    94c9:	48 89 c7             	mov    %rax,%rdi
    94cc:	e8 7f 90 ff ff       	call   2550 <fwrite@plt>
    94d1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    94d4:	8d 50 01             	lea    0x1(%rax),%edx
    94d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94db:	48 8b 40 18          	mov    0x18(%rax),%rax
    94df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94e3:	48 89 ce             	mov    %rcx,%rsi
    94e6:	48 89 c7             	mov    %rax,%rdi
    94e9:	e8 13 fd ff ff       	call   9201 <expr_print>
    94ee:	e9 cd 01 00 00       	jmp    96c0 <expr_print+0x4bf>
    94f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    94fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94ff:	48 8d 0d d1 11 01 00 	lea    0x111d1(%rip),%rcx        # 1a6d7 <__PRETTY_FUNCTION__.0+0x2ff>
    9506:	48 89 ce             	mov    %rcx,%rsi
    9509:	48 89 c7             	mov    %rax,%rdi
    950c:	b8 00 00 00 00       	mov    $0x0,%eax
    9511:	e8 5a 8f ff ff       	call   2470 <fprintf@plt>
    9516:	e9 a5 01 00 00       	jmp    96c0 <expr_print+0x4bf>
    951b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    951f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9523:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9527:	48 8d 0d b6 11 01 00 	lea    0x111b6(%rip),%rcx        # 1a6e4 <__PRETTY_FUNCTION__.0+0x30c>
    952e:	48 89 ce             	mov    %rcx,%rsi
    9531:	48 89 c7             	mov    %rax,%rdi
    9534:	b8 00 00 00 00       	mov    $0x0,%eax
    9539:	e8 32 8f ff ff       	call   2470 <fprintf@plt>
    953e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9542:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9545:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9549:	89 d6                	mov    %edx,%esi
    954b:	48 89 c7             	mov    %rax,%rdi
    954e:	e8 7d f0 ff ff       	call   85d0 <print_indent>
    9553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9557:	48 89 c1             	mov    %rax,%rcx
    955a:	ba 09 00 00 00       	mov    $0x9,%edx
    955f:	be 01 00 00 00       	mov    $0x1,%esi
    9564:	48 8d 05 89 11 01 00 	lea    0x11189(%rip),%rax        # 1a6f4 <__PRETTY_FUNCTION__.0+0x31c>
    956b:	48 89 c7             	mov    %rax,%rdi
    956e:	e8 dd 8f ff ff       	call   2550 <fwrite@plt>
    9573:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9576:	8d 50 01             	lea    0x1(%rax),%edx
    9579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    957d:	48 8b 40 10          	mov    0x10(%rax),%rax
    9581:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9585:	48 89 ce             	mov    %rcx,%rsi
    9588:	48 89 c7             	mov    %rax,%rdi
    958b:	e8 71 fc ff ff       	call   9201 <expr_print>
    9590:	e9 2b 01 00 00       	jmp    96c0 <expr_print+0x4bf>
    9595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9599:	48 8b 50 08          	mov    0x8(%rax),%rdx
    959d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95a1:	48 8d 0d 56 11 01 00 	lea    0x11156(%rip),%rcx        # 1a6fe <__PRETTY_FUNCTION__.0+0x326>
    95a8:	48 89 ce             	mov    %rcx,%rsi
    95ab:	48 89 c7             	mov    %rax,%rdi
    95ae:	b8 00 00 00 00       	mov    $0x0,%eax
    95b3:	e8 b8 8e ff ff       	call   2470 <fprintf@plt>
    95b8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    95bc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    95bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95c3:	89 d6                	mov    %edx,%esi
    95c5:	48 89 c7             	mov    %rax,%rdi
    95c8:	e8 03 f0 ff ff       	call   85d0 <print_indent>
    95cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95d1:	48 89 c1             	mov    %rax,%rcx
    95d4:	ba 08 00 00 00       	mov    $0x8,%edx
    95d9:	be 01 00 00 00       	mov    $0x1,%esi
    95de:	48 8d 05 99 0e 01 00 	lea    0x10e99(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    95e5:	48 89 c7             	mov    %rax,%rdi
    95e8:	e8 63 8f ff ff       	call   2550 <fwrite@plt>
    95ed:	8b 45 ec             	mov    -0x14(%rbp),%eax
    95f0:	8d 50 01             	lea    0x1(%rax),%edx
    95f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f7:	48 8b 40 18          	mov    0x18(%rax),%rax
    95fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95ff:	48 89 ce             	mov    %rcx,%rsi
    9602:	48 89 c7             	mov    %rax,%rdi
    9605:	e8 12 f0 ff ff       	call   861c <list_print>
    960a:	e9 b1 00 00 00       	jmp    96c0 <expr_print+0x4bf>
    960f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9613:	8b 50 08             	mov    0x8(%rax),%edx
    9616:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    961a:	48 8d 0d ee 10 01 00 	lea    0x110ee(%rip),%rcx        # 1a70f <__PRETTY_FUNCTION__.0+0x337>
    9621:	48 89 ce             	mov    %rcx,%rsi
    9624:	48 89 c7             	mov    %rax,%rdi
    9627:	b8 00 00 00 00       	mov    $0x0,%eax
    962c:	e8 3f 8e ff ff       	call   2470 <fprintf@plt>
    9631:	e9 8a 00 00 00       	jmp    96c0 <expr_print+0x4bf>
    9636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963a:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
    963f:	66 0f ef c9          	pxor   %xmm1,%xmm1
    9643:	f3 0f 5a c8          	cvtss2sd %xmm0,%xmm1
    9647:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    964c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9650:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    9655:	48 8d 15 bf 10 01 00 	lea    0x110bf(%rip),%rdx        # 1a71b <__PRETTY_FUNCTION__.0+0x343>
    965c:	48 89 d6             	mov    %rdx,%rsi
    965f:	48 89 c7             	mov    %rax,%rdi
    9662:	b8 01 00 00 00       	mov    $0x1,%eax
    9667:	e8 04 8e ff ff       	call   2470 <fprintf@plt>
    966c:	eb 52                	jmp    96c0 <expr_print+0x4bf>
    966e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9672:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    967a:	48 8d 0d a6 10 01 00 	lea    0x110a6(%rip),%rcx        # 1a727 <__PRETTY_FUNCTION__.0+0x34f>
    9681:	48 89 ce             	mov    %rcx,%rsi
    9684:	48 89 c7             	mov    %rax,%rdi
    9687:	b8 00 00 00 00       	mov    $0x0,%eax
    968c:	e8 df 8d ff ff       	call   2470 <fprintf@plt>
    9691:	eb 2d                	jmp    96c0 <expr_print+0x4bf>
    9693:	48 8b 05 c6 89 01 00 	mov    0x189c6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    969a:	48 89 c1             	mov    %rax,%rcx
    969d:	ba 18 00 00 00       	mov    $0x18,%edx
    96a2:	be 01 00 00 00       	mov    $0x1,%esi
    96a7:	48 8d 05 86 10 01 00 	lea    0x11086(%rip),%rax        # 1a734 <__PRETTY_FUNCTION__.0+0x35c>
    96ae:	48 89 c7             	mov    %rax,%rdi
    96b1:	e8 9a 8e ff ff       	call   2550 <fwrite@plt>
    96b6:	bf 01 00 00 00       	mov    $0x1,%edi
    96bb:	e8 80 8e ff ff       	call   2540 <exit@plt>
    96c0:	90                   	nop
    96c1:	c9                   	leave
    96c2:	c3                   	ret

00000000000096c3 <destroy_list>:
    96c3:	f3 0f 1e fa          	endbr64
    96c7:	55                   	push   %rbp
    96c8:	48 89 e5             	mov    %rsp,%rbp
    96cb:	48 83 ec 20          	sub    $0x20,%rsp
    96cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96d3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    96d8:	0f 84 08 01 00 00    	je     97e6 <destroy_list+0x123>
    96de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    96e6:	e9 f0 00 00 00       	jmp    97db <destroy_list+0x118>
    96eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96ef:	48 8b 40 08          	mov    0x8(%rax),%rax
    96f3:	48 85 c0             	test   %rax,%rax
    96f6:	75 28                	jne    9720 <destroy_list+0x5d>
    96f8:	48 8d 05 71 11 01 00 	lea    0x11171(%rip),%rax        # 1a870 <__PRETTY_FUNCTION__.0>
    96ff:	48 89 c1             	mov    %rax,%rcx
    9702:	ba 54 01 00 00       	mov    $0x154,%edx
    9707:	48 8d 05 e2 0c 01 00 	lea    0x10ce2(%rip),%rax        # 1a3f0 <__PRETTY_FUNCTION__.0+0x18>
    970e:	48 89 c6             	mov    %rax,%rsi
    9711:	48 8d 05 f7 0c 01 00 	lea    0x10cf7(%rip),%rax        # 1a40f <__PRETTY_FUNCTION__.0+0x37>
    9718:	48 89 c7             	mov    %rax,%rdi
    971b:	e8 b0 8c ff ff       	call   23d0 <__assert_fail@plt>
    9720:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9724:	8b 00                	mov    (%rax),%eax
    9726:	83 f8 03             	cmp    $0x3,%eax
    9729:	74 50                	je     977b <destroy_list+0xb8>
    972b:	83 f8 03             	cmp    $0x3,%eax
    972e:	77 5d                	ja     978d <destroy_list+0xca>
    9730:	83 f8 02             	cmp    $0x2,%eax
    9733:	74 34                	je     9769 <destroy_list+0xa6>
    9735:	83 f8 02             	cmp    $0x2,%eax
    9738:	77 53                	ja     978d <destroy_list+0xca>
    973a:	85 c0                	test   %eax,%eax
    973c:	74 07                	je     9745 <destroy_list+0x82>
    973e:	83 f8 01             	cmp    $0x1,%eax
    9741:	74 14                	je     9757 <destroy_list+0x94>
    9743:	eb 48                	jmp    978d <destroy_list+0xca>
    9745:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9749:	48 8b 40 08          	mov    0x8(%rax),%rax
    974d:	48 89 c7             	mov    %rax,%rdi
    9750:	e8 94 00 00 00       	call   97e9 <destroy_tree>
    9755:	eb 64                	jmp    97bb <destroy_list+0xf8>
    9757:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    975b:	48 8b 40 08          	mov    0x8(%rax),%rax
    975f:	48 89 c7             	mov    %rax,%rdi
    9762:	e8 39 02 00 00       	call   99a0 <destroy_stmt>
    9767:	eb 52                	jmp    97bb <destroy_list+0xf8>
    9769:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    976d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9771:	48 89 c7             	mov    %rax,%rdi
    9774:	e8 09 04 00 00       	call   9b82 <destroy_expr>
    9779:	eb 40                	jmp    97bb <destroy_list+0xf8>
    977b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    977f:	48 8b 40 08          	mov    0x8(%rax),%rax
    9783:	48 89 c7             	mov    %rax,%rdi
    9786:	e8 65 8b ff ff       	call   22f0 <free@plt>
    978b:	eb 2e                	jmp    97bb <destroy_list+0xf8>
    978d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9791:	8b 10                	mov    (%rax),%edx
    9793:	48 8b 05 c6 88 01 00 	mov    0x188c6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    979a:	48 8d 0d d7 0f 01 00 	lea    0x10fd7(%rip),%rcx        # 1a778 <__PRETTY_FUNCTION__.0+0x3a0>
    97a1:	48 89 ce             	mov    %rcx,%rsi
    97a4:	48 89 c7             	mov    %rax,%rdi
    97a7:	b8 00 00 00 00       	mov    $0x0,%eax
    97ac:	e8 bf 8c ff ff       	call   2470 <fprintf@plt>
    97b1:	bf 01 00 00 00       	mov    $0x1,%edi
    97b6:	e8 85 8d ff ff       	call   2540 <exit@plt>
    97bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    97c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97c7:	48 8b 40 10          	mov    0x10(%rax),%rax
    97cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    97cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d3:	48 89 c7             	mov    %rax,%rdi
    97d6:	e8 15 8b ff ff       	call   22f0 <free@plt>
    97db:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    97e0:	0f 85 05 ff ff ff    	jne    96eb <destroy_list+0x28>
    97e6:	90                   	nop
    97e7:	c9                   	leave
    97e8:	c3                   	ret

00000000000097e9 <destroy_tree>:
    97e9:	f3 0f 1e fa          	endbr64
    97ed:	55                   	push   %rbp
    97ee:	48 89 e5             	mov    %rsp,%rbp
    97f1:	48 83 ec 10          	sub    $0x10,%rsp
    97f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97fd:	8b 40 04             	mov    0x4(%rax),%eax
    9800:	83 f8 07             	cmp    $0x7,%eax
    9803:	0f 87 5a 01 00 00    	ja     9963 <destroy_tree+0x17a>
    9809:	89 c0                	mov    %eax,%eax
    980b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9812:	00
    9813:	48 8d 05 9a 0f 01 00 	lea    0x10f9a(%rip),%rax        # 1a7b4 <__PRETTY_FUNCTION__.0+0x3dc>
    981a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    981d:	48 98                	cltq
    981f:	48 8d 15 8e 0f 01 00 	lea    0x10f8e(%rip),%rdx        # 1a7b4 <__PRETTY_FUNCTION__.0+0x3dc>
    9826:	48 01 d0             	add    %rdx,%rax
    9829:	3e ff e0             	notrack jmp *%rax
    982c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9830:	48 8b 40 08          	mov    0x8(%rax),%rax
    9834:	48 89 c7             	mov    %rax,%rdi
    9837:	e8 b4 8a ff ff       	call   22f0 <free@plt>
    983c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9840:	48 8b 40 10          	mov    0x10(%rax),%rax
    9844:	48 89 c7             	mov    %rax,%rdi
    9847:	e8 77 fe ff ff       	call   96c3 <destroy_list>
    984c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9850:	48 8b 40 18          	mov    0x18(%rax),%rax
    9854:	48 89 c7             	mov    %rax,%rdi
    9857:	e8 67 fe ff ff       	call   96c3 <destroy_list>
    985c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9860:	48 8b 40 28          	mov    0x28(%rax),%rax
    9864:	48 89 c7             	mov    %rax,%rdi
    9867:	e8 57 fe ff ff       	call   96c3 <destroy_list>
    986c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9870:	48 8b 40 30          	mov    0x30(%rax),%rax
    9874:	48 89 c7             	mov    %rax,%rdi
    9877:	e8 24 01 00 00       	call   99a0 <destroy_stmt>
    987c:	e9 10 01 00 00       	jmp    9991 <destroy_tree+0x1a8>
    9881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9885:	48 8b 40 10          	mov    0x10(%rax),%rax
    9889:	48 89 c7             	mov    %rax,%rdi
    988c:	e8 5f 8a ff ff       	call   22f0 <free@plt>
    9891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9895:	48 8b 40 18          	mov    0x18(%rax),%rax
    9899:	48 85 c0             	test   %rax,%rax
    989c:	74 10                	je     98ae <destroy_tree+0xc5>
    989e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98a2:	48 8b 40 18          	mov    0x18(%rax),%rax
    98a6:	48 89 c7             	mov    %rax,%rdi
    98a9:	e8 42 8a ff ff       	call   22f0 <free@plt>
    98ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98b2:	48 8b 40 30          	mov    0x30(%rax),%rax
    98b6:	48 85 c0             	test   %rax,%rax
    98b9:	74 10                	je     98cb <destroy_tree+0xe2>
    98bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98bf:	48 8b 40 30          	mov    0x30(%rax),%rax
    98c3:	48 89 c7             	mov    %rax,%rdi
    98c6:	e8 25 8a ff ff       	call   22f0 <free@plt>
    98cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98cf:	48 8b 40 20          	mov    0x20(%rax),%rax
    98d3:	48 89 c7             	mov    %rax,%rdi
    98d6:	e8 e8 fd ff ff       	call   96c3 <destroy_list>
    98db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98df:	48 8b 40 40          	mov    0x40(%rax),%rax
    98e3:	48 89 c7             	mov    %rax,%rdi
    98e6:	e8 d8 fd ff ff       	call   96c3 <destroy_list>
    98eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ef:	48 8b 40 48          	mov    0x48(%rax),%rax
    98f3:	48 89 c7             	mov    %rax,%rdi
    98f6:	e8 c8 fd ff ff       	call   96c3 <destroy_list>
    98fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ff:	48 8b 40 50          	mov    0x50(%rax),%rax
    9903:	48 89 c7             	mov    %rax,%rdi
    9906:	e8 95 00 00 00       	call   99a0 <destroy_stmt>
    990b:	e9 81 00 00 00       	jmp    9991 <destroy_tree+0x1a8>
    9910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9914:	48 8b 40 08          	mov    0x8(%rax),%rax
    9918:	48 89 c7             	mov    %rax,%rdi
    991b:	e8 a3 fd ff ff       	call   96c3 <destroy_list>
    9920:	eb 6f                	jmp    9991 <destroy_tree+0x1a8>
    9922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9926:	48 8b 40 08          	mov    0x8(%rax),%rax
    992a:	48 89 c7             	mov    %rax,%rdi
    992d:	e8 91 fd ff ff       	call   96c3 <destroy_list>
    9932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9936:	48 8b 40 18          	mov    0x18(%rax),%rax
    993a:	48 85 c0             	test   %rax,%rax
    993d:	74 51                	je     9990 <destroy_tree+0x1a7>
    993f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9943:	48 8b 40 18          	mov    0x18(%rax),%rax
    9947:	48 89 c7             	mov    %rax,%rdi
    994a:	e8 a1 89 ff ff       	call   22f0 <free@plt>
    994f:	eb 3f                	jmp    9990 <destroy_tree+0x1a7>
    9951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9955:	48 8b 40 08          	mov    0x8(%rax),%rax
    9959:	48 89 c7             	mov    %rax,%rdi
    995c:	e8 8f 89 ff ff       	call   22f0 <free@plt>
    9961:	eb 2e                	jmp    9991 <destroy_tree+0x1a8>
    9963:	48 8b 05 f6 86 01 00 	mov    0x186f6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    996a:	48 89 c1             	mov    %rax,%rcx
    996d:	ba 1a 00 00 00       	mov    $0x1a,%edx
    9972:	be 01 00 00 00       	mov    $0x1,%esi
    9977:	48 8d 05 1a 0e 01 00 	lea    0x10e1a(%rip),%rax        # 1a798 <__PRETTY_FUNCTION__.0+0x3c0>
    997e:	48 89 c7             	mov    %rax,%rdi
    9981:	e8 ca 8b ff ff       	call   2550 <fwrite@plt>
    9986:	bf 01 00 00 00       	mov    $0x1,%edi
    998b:	e8 b0 8b ff ff       	call   2540 <exit@plt>
    9990:	90                   	nop
    9991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9995:	48 89 c7             	mov    %rax,%rdi
    9998:	e8 53 89 ff ff       	call   22f0 <free@plt>
    999d:	90                   	nop
    999e:	c9                   	leave
    999f:	c3                   	ret

00000000000099a0 <destroy_stmt>:
    99a0:	f3 0f 1e fa          	endbr64
    99a4:	55                   	push   %rbp
    99a5:	48 89 e5             	mov    %rsp,%rbp
    99a8:	48 83 ec 10          	sub    $0x10,%rsp
    99ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99b4:	8b 40 04             	mov    0x4(%rax),%eax
    99b7:	83 f8 08             	cmp    $0x8,%eax
    99ba:	0f 87 85 01 00 00    	ja     9b45 <destroy_stmt+0x1a5>
    99c0:	89 c0                	mov    %eax,%eax
    99c2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    99c9:	00
    99ca:	48 8d 05 2f 0e 01 00 	lea    0x10e2f(%rip),%rax        # 1a800 <__PRETTY_FUNCTION__.0+0x428>
    99d1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    99d4:	48 98                	cltq
    99d6:	48 8d 15 23 0e 01 00 	lea    0x10e23(%rip),%rdx        # 1a800 <__PRETTY_FUNCTION__.0+0x428>
    99dd:	48 01 d0             	add    %rdx,%rax
    99e0:	3e ff e0             	notrack jmp *%rax
    99e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99e7:	48 8b 40 08          	mov    0x8(%rax),%rax
    99eb:	48 89 c7             	mov    %rax,%rdi
    99ee:	e8 8f 01 00 00       	call   9b82 <destroy_expr>
    99f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99f7:	48 8b 40 10          	mov    0x10(%rax),%rax
    99fb:	48 89 c7             	mov    %rax,%rdi
    99fe:	e8 7f 01 00 00       	call   9b82 <destroy_expr>
    9a03:	e9 6b 01 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a0c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a10:	48 89 c7             	mov    %rax,%rdi
    9a13:	e8 d8 88 ff ff       	call   22f0 <free@plt>
    9a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a1c:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a20:	48 89 c7             	mov    %rax,%rdi
    9a23:	e8 9b fc ff ff       	call   96c3 <destroy_list>
    9a28:	e9 46 01 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a31:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a35:	48 89 c7             	mov    %rax,%rdi
    9a38:	e8 86 fc ff ff       	call   96c3 <destroy_list>
    9a3d:	e9 31 01 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a46:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a4a:	48 89 c7             	mov    %rax,%rdi
    9a4d:	e8 30 01 00 00       	call   9b82 <destroy_expr>
    9a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a56:	48 8b 40 10          	mov    0x10(%rax),%rax
    9a5a:	48 89 c7             	mov    %rax,%rdi
    9a5d:	e8 3e ff ff ff       	call   99a0 <destroy_stmt>
    9a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a66:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a6a:	48 85 c0             	test   %rax,%rax
    9a6d:	0f 84 ff 00 00 00    	je     9b72 <destroy_stmt+0x1d2>
    9a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a77:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a7b:	48 89 c7             	mov    %rax,%rdi
    9a7e:	e8 1d ff ff ff       	call   99a0 <destroy_stmt>
    9a83:	e9 ea 00 00 00       	jmp    9b72 <destroy_stmt+0x1d2>
    9a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a8c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a90:	48 89 c7             	mov    %rax,%rdi
    9a93:	e8 ea 00 00 00       	call   9b82 <destroy_expr>
    9a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9c:	48 8b 40 10          	mov    0x10(%rax),%rax
    9aa0:	48 89 c7             	mov    %rax,%rdi
    9aa3:	e8 f8 fe ff ff       	call   99a0 <destroy_stmt>
    9aa8:	e9 c6 00 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab1:	8b 40 08             	mov    0x8(%rax),%eax
    9ab4:	83 f8 06             	cmp    $0x6,%eax
    9ab7:	74 07                	je     9ac0 <destroy_stmt+0x120>
    9ab9:	83 f8 07             	cmp    $0x7,%eax
    9abc:	74 14                	je     9ad2 <destroy_stmt+0x132>
    9abe:	eb 24                	jmp    9ae4 <destroy_stmt+0x144>
    9ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac4:	48 8b 40 20          	mov    0x20(%rax),%rax
    9ac8:	48 89 c7             	mov    %rax,%rdi
    9acb:	e8 b2 00 00 00       	call   9b82 <destroy_expr>
    9ad0:	eb 3f                	jmp    9b11 <destroy_stmt+0x171>
    9ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ad6:	48 8b 40 20          	mov    0x20(%rax),%rax
    9ada:	48 89 c7             	mov    %rax,%rdi
    9add:	e8 be fe ff ff       	call   99a0 <destroy_stmt>
    9ae2:	eb 2d                	jmp    9b11 <destroy_stmt+0x171>
    9ae4:	48 8b 05 75 85 01 00 	mov    0x18575(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    9aeb:	48 89 c1             	mov    %rax,%rcx
    9aee:	ba 25 00 00 00       	mov    $0x25,%edx
    9af3:	be 01 00 00 00       	mov    $0x1,%esi
    9af8:	48 8d 05 d9 0c 01 00 	lea    0x10cd9(%rip),%rax        # 1a7d8 <__PRETTY_FUNCTION__.0+0x400>
    9aff:	48 89 c7             	mov    %rax,%rdi
    9b02:	e8 49 8a ff ff       	call   2550 <fwrite@plt>
    9b07:	bf 01 00 00 00       	mov    $0x1,%edi
    9b0c:	e8 2f 8a ff ff       	call   2540 <exit@plt>
    9b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b15:	48 8b 40 10          	mov    0x10(%rax),%rax
    9b19:	48 89 c7             	mov    %rax,%rdi
    9b1c:	e8 61 00 00 00       	call   9b82 <destroy_expr>
    9b21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b25:	48 8b 40 18          	mov    0x18(%rax),%rax
    9b29:	48 89 c7             	mov    %rax,%rdi
    9b2c:	e8 6f fe ff ff       	call   99a0 <destroy_stmt>
    9b31:	eb 40                	jmp    9b73 <destroy_stmt+0x1d3>
    9b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b37:	48 8b 40 08          	mov    0x8(%rax),%rax
    9b3b:	48 89 c7             	mov    %rax,%rdi
    9b3e:	e8 ad 87 ff ff       	call   22f0 <free@plt>
    9b43:	eb 2e                	jmp    9b73 <destroy_stmt+0x1d3>
    9b45:	48 8b 05 14 85 01 00 	mov    0x18514(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    9b4c:	48 89 c1             	mov    %rax,%rcx
    9b4f:	ba 18 00 00 00       	mov    $0x18,%edx
    9b54:	be 01 00 00 00       	mov    $0x1,%esi
    9b59:	48 8d 05 f5 0a 01 00 	lea    0x10af5(%rip),%rax        # 1a655 <__PRETTY_FUNCTION__.0+0x27d>
    9b60:	48 89 c7             	mov    %rax,%rdi
    9b63:	e8 e8 89 ff ff       	call   2550 <fwrite@plt>
    9b68:	bf 01 00 00 00       	mov    $0x1,%edi
    9b6d:	e8 ce 89 ff ff       	call   2540 <exit@plt>
    9b72:	90                   	nop
    9b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b77:	48 89 c7             	mov    %rax,%rdi
    9b7a:	e8 71 87 ff ff       	call   22f0 <free@plt>
    9b7f:	90                   	nop
    9b80:	c9                   	leave
    9b81:	c3                   	ret

0000000000009b82 <destroy_expr>:
    9b82:	f3 0f 1e fa          	endbr64
    9b86:	55                   	push   %rbp
    9b87:	48 89 e5             	mov    %rsp,%rbp
    9b8a:	48 83 ec 10          	sub    $0x10,%rsp
    9b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b96:	8b 40 04             	mov    0x4(%rax),%eax
    9b99:	83 f8 09             	cmp    $0x9,%eax
    9b9c:	0f 87 12 01 00 00    	ja     9cb4 <destroy_expr+0x132>
    9ba2:	89 c0                	mov    %eax,%eax
    9ba4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9bab:	00
    9bac:	48 8d 05 71 0c 01 00 	lea    0x10c71(%rip),%rax        # 1a824 <__PRETTY_FUNCTION__.0+0x44c>
    9bb3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    9bb6:	48 98                	cltq
    9bb8:	48 8d 15 65 0c 01 00 	lea    0x10c65(%rip),%rdx        # 1a824 <__PRETTY_FUNCTION__.0+0x44c>
    9bbf:	48 01 d0             	add    %rdx,%rax
    9bc2:	3e ff e0             	notrack jmp *%rax
    9bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc9:	48 8b 40 10          	mov    0x10(%rax),%rax
    9bcd:	48 89 c7             	mov    %rax,%rdi
    9bd0:	e8 ad ff ff ff       	call   9b82 <destroy_expr>
    9bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd9:	48 8b 40 18          	mov    0x18(%rax),%rax
    9bdd:	48 89 c7             	mov    %rax,%rdi
    9be0:	e8 9d ff ff ff       	call   9b82 <destroy_expr>
    9be5:	e9 f8 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bee:	48 8b 40 08          	mov    0x8(%rax),%rax
    9bf2:	48 89 c7             	mov    %rax,%rdi
    9bf5:	e8 88 ff ff ff       	call   9b82 <destroy_expr>
    9bfa:	e9 e3 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c03:	48 8b 40 10          	mov    0x10(%rax),%rax
    9c07:	48 89 c7             	mov    %rax,%rdi
    9c0a:	e8 73 ff ff ff       	call   9b82 <destroy_expr>
    9c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c13:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c17:	48 89 c7             	mov    %rax,%rdi
    9c1a:	e8 63 ff ff ff       	call   9b82 <destroy_expr>
    9c1f:	e9 be 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c28:	48 8b 40 10          	mov    0x10(%rax),%rax
    9c2c:	48 89 c7             	mov    %rax,%rdi
    9c2f:	e8 4e ff ff ff       	call   9b82 <destroy_expr>
    9c34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c38:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c3c:	48 89 c7             	mov    %rax,%rdi
    9c3f:	e8 3e ff ff ff       	call   9b82 <destroy_expr>
    9c44:	e9 99 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c51:	48 89 c7             	mov    %rax,%rdi
    9c54:	e8 97 86 ff ff       	call   22f0 <free@plt>
    9c59:	e9 84 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c62:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c66:	48 89 c7             	mov    %rax,%rdi
    9c69:	e8 82 86 ff ff       	call   22f0 <free@plt>
    9c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c72:	48 8b 40 10          	mov    0x10(%rax),%rax
    9c76:	48 89 c7             	mov    %rax,%rdi
    9c79:	e8 04 ff ff ff       	call   9b82 <destroy_expr>
    9c7e:	eb 62                	jmp    9ce2 <destroy_expr+0x160>
    9c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c84:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c88:	48 89 c7             	mov    %rax,%rdi
    9c8b:	e8 60 86 ff ff       	call   22f0 <free@plt>
    9c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c94:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c98:	48 89 c7             	mov    %rax,%rdi
    9c9b:	e8 23 fa ff ff       	call   96c3 <destroy_list>
    9ca0:	eb 40                	jmp    9ce2 <destroy_expr+0x160>
    9ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ca6:	48 8b 40 08          	mov    0x8(%rax),%rax
    9caa:	48 89 c7             	mov    %rax,%rdi
    9cad:	e8 3e 86 ff ff       	call   22f0 <free@plt>
    9cb2:	eb 2e                	jmp    9ce2 <destroy_expr+0x160>
    9cb4:	48 8b 05 a5 83 01 00 	mov    0x183a5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    9cbb:	48 89 c1             	mov    %rax,%rcx
    9cbe:	ba 18 00 00 00       	mov    $0x18,%edx
    9cc3:	be 01 00 00 00       	mov    $0x1,%esi
    9cc8:	48 8d 05 65 0a 01 00 	lea    0x10a65(%rip),%rax        # 1a734 <__PRETTY_FUNCTION__.0+0x35c>
    9ccf:	48 89 c7             	mov    %rax,%rdi
    9cd2:	e8 79 88 ff ff       	call   2550 <fwrite@plt>
    9cd7:	bf 01 00 00 00       	mov    $0x1,%edi
    9cdc:	e8 5f 88 ff ff       	call   2540 <exit@plt>
    9ce1:	90                   	nop
    9ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ce6:	48 89 c7             	mov    %rax,%rdi
    9ce9:	e8 02 86 ff ff       	call   22f0 <free@plt>
    9cee:	90                   	nop
    9cef:	c9                   	leave
    9cf0:	c3                   	ret

0000000000009cf1 <mk_program>:
    9cf1:	f3 0f 1e fa          	endbr64
    9cf5:	55                   	push   %rbp
    9cf6:	48 89 e5             	mov    %rsp,%rbp
    9cf9:	48 83 ec 40          	sub    $0x40,%rsp
    9cfd:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9d00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d04:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9d08:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9d0c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9d10:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9d14:	bf 58 00 00 00       	mov    $0x58,%edi
    9d19:	e8 b2 87 ff ff       	call   24d0 <malloc@plt>
    9d1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d26:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9d29:	89 10                	mov    %edx,(%rax)
    9d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9d3e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9d4a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d52:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9d56:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d5e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9d62:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9d66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9d6e:	48 89 50 28          	mov    %rdx,0x28(%rax)
    9d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d76:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    9d7a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    9d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d82:	c9                   	leave
    9d83:	c3                   	ret

0000000000009d84 <mk_typedecl>:
    9d84:	f3 0f 1e fa          	endbr64
    9d88:	55                   	push   %rbp
    9d89:	48 89 e5             	mov    %rsp,%rbp
    9d8c:	48 83 ec 30          	sub    $0x30,%rsp
    9d90:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9d93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d97:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9d9a:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    9d9d:	bf 58 00 00 00       	mov    $0x58,%edi
    9da2:	e8 29 87 ff ff       	call   24d0 <malloc@plt>
    9da7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9dab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9daf:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9db2:	89 10                	mov    %edx,(%rax)
    9db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db8:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%rax)
    9dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9dc7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dcf:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9dd2:	89 50 10             	mov    %edx,0x10(%rax)
    9dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    9ddc:	89 50 14             	mov    %edx,0x14(%rax)
    9ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de3:	c9                   	leave
    9de4:	c3                   	ret

0000000000009de5 <mk_procedure>:
    9de5:	f3 0f 1e fa          	endbr64
    9de9:	55                   	push   %rbp
    9dea:	48 89 e5             	mov    %rsp,%rbp
    9ded:	48 83 ec 40          	sub    $0x40,%rsp
    9df1:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9df4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9df8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9dfc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9e00:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9e04:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9e08:	bf 58 00 00 00       	mov    $0x58,%edi
    9e0d:	e8 be 86 ff ff       	call   24d0 <malloc@plt>
    9e12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9e1d:	89 10                	mov    %edx,(%rax)
    9e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e23:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e2e:	c7 40 08 05 00 00 00 	movl   $0x5,0x8(%rax)
    9e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9e3d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e45:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9e4c:	00
    9e4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9e55:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5d:	c7 40 28 ff ff ff ff 	movl   $0xffffffff,0x28(%rax)
    9e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e68:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    9e6f:	00
    9e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e74:	8b 55 10             	mov    0x10(%rbp),%edx
    9e77:	89 50 38             	mov    %edx,0x38(%rax)
    9e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e7e:	8b 55 18             	mov    0x18(%rbp),%edx
    9e81:	89 50 3c             	mov    %edx,0x3c(%rax)
    9e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9e8c:	48 89 50 40          	mov    %rdx,0x40(%rax)
    9e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e94:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9e98:	48 89 50 48          	mov    %rdx,0x48(%rax)
    9e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9ea4:	48 89 50 50          	mov    %rdx,0x50(%rax)
    9ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eac:	c9                   	leave
    9ead:	c3                   	ret

0000000000009eae <mk_function>:
    9eae:	f3 0f 1e fa          	endbr64
    9eb2:	55                   	push   %rbp
    9eb3:	48 89 e5             	mov    %rsp,%rbp
    9eb6:	48 83 ec 40          	sub    $0x40,%rsp
    9eba:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ebd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ec1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9ec5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9ec9:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9ecd:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9ed1:	bf 58 00 00 00       	mov    $0x58,%edi
    9ed6:	e8 f5 85 ff ff       	call   24d0 <malloc@plt>
    9edb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9ee6:	89 10                	mov    %edx,(%rax)
    9ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eec:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef7:	c7 40 08 06 00 00 00 	movl   $0x6,0x8(%rax)
    9efe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f02:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9f06:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f0e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9f15:	00
    9f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9f1e:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f26:	8b 55 10             	mov    0x10(%rbp),%edx
    9f29:	89 50 28             	mov    %edx,0x28(%rax)
    9f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f30:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    9f34:	48 89 50 30          	mov    %rdx,0x30(%rax)
    9f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f3c:	8b 55 20             	mov    0x20(%rbp),%edx
    9f3f:	89 50 38             	mov    %edx,0x38(%rax)
    9f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f46:	8b 55 28             	mov    0x28(%rbp),%edx
    9f49:	89 50 3c             	mov    %edx,0x3c(%rax)
    9f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f50:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9f54:	48 89 50 40          	mov    %rdx,0x40(%rax)
    9f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f5c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9f60:	48 89 50 48          	mov    %rdx,0x48(%rax)
    9f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f68:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9f6c:	48 89 50 50          	mov    %rdx,0x50(%rax)
    9f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f74:	c9                   	leave
    9f75:	c3                   	ret

0000000000009f76 <mk_vardecl>:
    9f76:	f3 0f 1e fa          	endbr64
    9f7a:	55                   	push   %rbp
    9f7b:	48 89 e5             	mov    %rsp,%rbp
    9f7e:	48 83 ec 30          	sub    $0x30,%rsp
    9f82:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9f85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f89:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9f8c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    9f90:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
    9f94:	bf 58 00 00 00       	mov    $0x58,%edi
    9f99:	e8 32 85 ff ff       	call   24d0 <malloc@plt>
    9f9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fa6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9fa9:	89 10                	mov    %edx,(%rax)
    9fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9faf:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    9fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fba:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9fbe:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc6:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9fc9:	89 50 10             	mov    %edx,0x10(%rax)
    9fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9fd4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fdc:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    9fdf:	89 50 20             	mov    %edx,0x20(%rax)
    9fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fe6:	c9                   	leave
    9fe7:	c3                   	ret

0000000000009fe8 <mk_arraydecl>:
    9fe8:	f3 0f 1e fa          	endbr64
    9fec:	55                   	push   %rbp
    9fed:	48 89 e5             	mov    %rsp,%rbp
    9ff0:	48 83 ec 30          	sub    $0x30,%rsp
    9ff4:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ff7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ffb:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9ffe:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    a001:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
    a005:	bf 58 00 00 00       	mov    $0x58,%edi
    a00a:	e8 c1 84 ff ff       	call   24d0 <malloc@plt>
    a00f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a017:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a01a:	89 10                	mov    %edx,(%rax)
    a01c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a020:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    a027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a02b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a02f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a037:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a03a:	89 50 10             	mov    %edx,0x10(%rax)
    a03d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a041:	8b 55 dc             	mov    -0x24(%rbp),%edx
    a044:	89 50 14             	mov    %edx,0x14(%rax)
    a047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04b:	8b 55 d8             	mov    -0x28(%rbp),%edx
    a04e:	89 50 18             	mov    %edx,0x18(%rax)
    a051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a055:	c9                   	leave
    a056:	c3                   	ret

000000000000a057 <mk_varassign>:
    a057:	f3 0f 1e fa          	endbr64
    a05b:	55                   	push   %rbp
    a05c:	48 89 e5             	mov    %rsp,%rbp
    a05f:	48 83 ec 30          	sub    $0x30,%rsp
    a063:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a066:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a06a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a06e:	bf 28 00 00 00       	mov    $0x28,%edi
    a073:	e8 58 84 ff ff       	call   24d0 <malloc@plt>
    a078:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a07c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a080:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a083:	89 10                	mov    %edx,(%rax)
    a085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a089:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    a090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a094:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a098:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a09c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a0a4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a0a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ac:	c9                   	leave
    a0ad:	c3                   	ret

000000000000a0ae <mk_procedurecall>:
    a0ae:	f3 0f 1e fa          	endbr64
    a0b2:	55                   	push   %rbp
    a0b3:	48 89 e5             	mov    %rsp,%rbp
    a0b6:	48 83 ec 30          	sub    $0x30,%rsp
    a0ba:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a0bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0c1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a0c5:	bf 28 00 00 00       	mov    $0x28,%edi
    a0ca:	e8 01 84 ff ff       	call   24d0 <malloc@plt>
    a0cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0d7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a0da:	89 10                	mov    %edx,(%rax)
    a0dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    a0e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a0ef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a0f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0f7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a0fb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a0ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a103:	c9                   	leave
    a104:	c3                   	ret

000000000000a105 <mk_compoundstatement>:
    a105:	f3 0f 1e fa          	endbr64
    a109:	55                   	push   %rbp
    a10a:	48 89 e5             	mov    %rsp,%rbp
    a10d:	48 83 ec 20          	sub    $0x20,%rsp
    a111:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a114:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a118:	bf 28 00 00 00       	mov    $0x28,%edi
    a11d:	e8 ae 83 ff ff       	call   24d0 <malloc@plt>
    a122:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a12a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a12d:	89 10                	mov    %edx,(%rax)
    a12f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a133:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    a13a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a13e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a142:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a14a:	c9                   	leave
    a14b:	c3                   	ret

000000000000a14c <mk_ifthen>:
    a14c:	f3 0f 1e fa          	endbr64
    a150:	55                   	push   %rbp
    a151:	48 89 e5             	mov    %rsp,%rbp
    a154:	48 83 ec 30          	sub    $0x30,%rsp
    a158:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a15b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a15f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a163:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a167:	bf 28 00 00 00       	mov    $0x28,%edi
    a16c:	e8 5f 83 ff ff       	call   24d0 <malloc@plt>
    a171:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a179:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a17c:	89 10                	mov    %edx,(%rax)
    a17e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a182:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    a189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a191:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a199:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a19d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a1a9:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a1ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b1:	c9                   	leave
    a1b2:	c3                   	ret

000000000000a1b3 <mk_while>:
    a1b3:	f3 0f 1e fa          	endbr64
    a1b7:	55                   	push   %rbp
    a1b8:	48 89 e5             	mov    %rsp,%rbp
    a1bb:	48 83 ec 30          	sub    $0x30,%rsp
    a1bf:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a1c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a1c6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a1ca:	bf 28 00 00 00       	mov    $0x28,%edi
    a1cf:	e8 fc 82 ff ff       	call   24d0 <malloc@plt>
    a1d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1dc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a1df:	89 10                	mov    %edx,(%rax)
    a1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e5:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    a1ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a1f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a200:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a208:	c9                   	leave
    a209:	c3                   	ret

000000000000a20a <mk_forassign>:
    a20a:	f3 0f 1e fa          	endbr64
    a20e:	55                   	push   %rbp
    a20f:	48 89 e5             	mov    %rsp,%rbp
    a212:	48 83 ec 30          	sub    $0x30,%rsp
    a216:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a219:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a21d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a221:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a225:	bf 28 00 00 00       	mov    $0x28,%edi
    a22a:	e8 a1 82 ff ff       	call   24d0 <malloc@plt>
    a22f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a237:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a23a:	89 10                	mov    %edx,(%rax)
    a23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a240:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    a247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24b:	c7 40 08 07 00 00 00 	movl   $0x7,0x8(%rax)
    a252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a256:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a25a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a25e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a262:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a266:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a26e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a272:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a27a:	c9                   	leave
    a27b:	c3                   	ret

000000000000a27c <mk_forvar>:
    a27c:	f3 0f 1e fa          	endbr64
    a280:	55                   	push   %rbp
    a281:	48 89 e5             	mov    %rsp,%rbp
    a284:	48 83 ec 30          	sub    $0x30,%rsp
    a288:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a28b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a28f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a293:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a297:	bf 28 00 00 00       	mov    $0x28,%edi
    a29c:	e8 2f 82 ff ff       	call   24d0 <malloc@plt>
    a2a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a2ac:	89 10                	mov    %edx,(%rax)
    a2ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b2:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    a2b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2bd:	c7 40 08 06 00 00 00 	movl   $0x6,0x8(%rax)
    a2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a2cc:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a2d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a2d8:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a2dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a2e4:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a2e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ec:	c9                   	leave
    a2ed:	c3                   	ret

000000000000a2ee <mk_asmblock>:
    a2ee:	f3 0f 1e fa          	endbr64
    a2f2:	55                   	push   %rbp
    a2f3:	48 89 e5             	mov    %rsp,%rbp
    a2f6:	48 83 ec 20          	sub    $0x20,%rsp
    a2fa:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a2fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a301:	bf 28 00 00 00       	mov    $0x28,%edi
    a306:	e8 c5 81 ff ff       	call   24d0 <malloc@plt>
    a30b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a30f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a313:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a316:	89 10                	mov    %edx,(%rax)
    a318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a31c:	c7 40 04 08 00 00 00 	movl   $0x8,0x4(%rax)
    a323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a327:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a32b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a32f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a333:	c9                   	leave
    a334:	c3                   	ret

000000000000a335 <mk_relop>:
    a335:	f3 0f 1e fa          	endbr64
    a339:	55                   	push   %rbp
    a33a:	48 89 e5             	mov    %rsp,%rbp
    a33d:	48 83 ec 30          	sub    $0x30,%rsp
    a341:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a344:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a347:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    a34b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    a34f:	bf 28 00 00 00       	mov    $0x28,%edi
    a354:	e8 77 81 ff ff       	call   24d0 <malloc@plt>
    a359:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a35d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a361:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a364:	89 10                	mov    %edx,(%rax)
    a366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a36a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    a371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a375:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a378:	89 50 08             	mov    %edx,0x8(%rax)
    a37b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a37f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a383:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a38f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a397:	c9                   	leave
    a398:	c3                   	ret

000000000000a399 <mk_signterm>:
    a399:	f3 0f 1e fa          	endbr64
    a39d:	55                   	push   %rbp
    a39e:	48 89 e5             	mov    %rsp,%rbp
    a3a1:	48 83 ec 20          	sub    $0x20,%rsp
    a3a5:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a3a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a3ac:	bf 28 00 00 00       	mov    $0x28,%edi
    a3b1:	e8 1a 81 ff ff       	call   24d0 <malloc@plt>
    a3b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3be:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a3c1:	89 10                	mov    %edx,(%rax)
    a3c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    a3ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3d2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a3d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a3da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3de:	c9                   	leave
    a3df:	c3                   	ret

000000000000a3e0 <mk_addop>:
    a3e0:	f3 0f 1e fa          	endbr64
    a3e4:	55                   	push   %rbp
    a3e5:	48 89 e5             	mov    %rsp,%rbp
    a3e8:	48 83 ec 30          	sub    $0x30,%rsp
    a3ec:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a3ef:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a3f2:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    a3f6:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    a3fa:	bf 28 00 00 00       	mov    $0x28,%edi
    a3ff:	e8 cc 80 ff ff       	call   24d0 <malloc@plt>
    a404:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a40c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a40f:	89 10                	mov    %edx,(%rax)
    a411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a415:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    a41c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a420:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a423:	89 50 08             	mov    %edx,0x8(%rax)
    a426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a42e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a436:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a43a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a43e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a442:	c9                   	leave
    a443:	c3                   	ret

000000000000a444 <mk_mulop>:
    a444:	f3 0f 1e fa          	endbr64
    a448:	55                   	push   %rbp
    a449:	48 89 e5             	mov    %rsp,%rbp
    a44c:	48 83 ec 30          	sub    $0x30,%rsp
    a450:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a453:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a456:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    a45a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    a45e:	bf 28 00 00 00       	mov    $0x28,%edi
    a463:	e8 68 80 ff ff       	call   24d0 <malloc@plt>
    a468:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a470:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a473:	89 10                	mov    %edx,(%rax)
    a475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a479:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    a480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a484:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a487:	89 50 08             	mov    %edx,0x8(%rax)
    a48a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a48e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a492:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a49e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a4a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a6:	c9                   	leave
    a4a7:	c3                   	ret

000000000000a4a8 <mk_varid>:
    a4a8:	f3 0f 1e fa          	endbr64
    a4ac:	55                   	push   %rbp
    a4ad:	48 89 e5             	mov    %rsp,%rbp
    a4b0:	48 83 ec 20          	sub    $0x20,%rsp
    a4b4:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a4b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a4bb:	bf 28 00 00 00       	mov    $0x28,%edi
    a4c0:	e8 0b 80 ff ff       	call   24d0 <malloc@plt>
    a4c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a4c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4cd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a4d0:	89 10                	mov    %edx,(%rax)
    a4d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d6:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    a4dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a4e5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a4e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ed:	c9                   	leave
    a4ee:	c3                   	ret

000000000000a4ef <mk_arrayaccess>:
    a4ef:	f3 0f 1e fa          	endbr64
    a4f3:	55                   	push   %rbp
    a4f4:	48 89 e5             	mov    %rsp,%rbp
    a4f7:	48 83 ec 30          	sub    $0x30,%rsp
    a4fb:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a4fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a502:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a506:	bf 28 00 00 00       	mov    $0x28,%edi
    a50b:	e8 c0 7f ff ff       	call   24d0 <malloc@plt>
    a510:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a518:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a51b:	89 10                	mov    %edx,(%rax)
    a51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a521:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    a528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a52c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a530:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a538:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a53c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a544:	c9                   	leave
    a545:	c3                   	ret

000000000000a546 <mk_functioncall>:
    a546:	f3 0f 1e fa          	endbr64
    a54a:	55                   	push   %rbp
    a54b:	48 89 e5             	mov    %rsp,%rbp
    a54e:	48 83 ec 30          	sub    $0x30,%rsp
    a552:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a555:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a559:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a55d:	bf 28 00 00 00       	mov    $0x28,%edi
    a562:	e8 69 7f ff ff       	call   24d0 <malloc@plt>
    a567:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a56b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a56f:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a572:	89 10                	mov    %edx,(%rax)
    a574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a578:	c7 40 04 06 00 00 00 	movl   $0x6,0x4(%rax)
    a57f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a583:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a587:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a58b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a58f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a593:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a59b:	c9                   	leave
    a59c:	c3                   	ret

000000000000a59d <mk_inum>:
    a59d:	f3 0f 1e fa          	endbr64
    a5a1:	55                   	push   %rbp
    a5a2:	48 89 e5             	mov    %rsp,%rbp
    a5a5:	48 83 ec 20          	sub    $0x20,%rsp
    a5a9:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a5ac:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a5af:	bf 28 00 00 00       	mov    $0x28,%edi
    a5b4:	e8 17 7f ff ff       	call   24d0 <malloc@plt>
    a5b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a5bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c1:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a5c4:	89 10                	mov    %edx,(%rax)
    a5c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ca:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%rax)
    a5d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d5:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a5d8:	89 50 08             	mov    %edx,0x8(%rax)
    a5db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5df:	c9                   	leave
    a5e0:	c3                   	ret

000000000000a5e1 <mk_string>:
    a5e1:	f3 0f 1e fa          	endbr64
    a5e5:	55                   	push   %rbp
    a5e6:	48 89 e5             	mov    %rsp,%rbp
    a5e9:	48 83 ec 20          	sub    $0x20,%rsp
    a5ed:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a5f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a5f4:	bf 28 00 00 00       	mov    $0x28,%edi
    a5f9:	e8 d2 7e ff ff       	call   24d0 <malloc@plt>
    a5fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a606:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a609:	89 10                	mov    %edx,(%rax)
    a60b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a60f:	c7 40 04 09 00 00 00 	movl   $0x9,0x4(%rax)
    a616:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a61a:	48 89 c7             	mov    %rax,%rdi
    a61d:	e8 3e 7f ff ff       	call   2560 <strdup@plt>
    a622:	48 89 c2             	mov    %rax,%rdx
    a625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a629:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a62d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a631:	48 8b 40 08          	mov    0x8(%rax),%rax
    a635:	48 85 c0             	test   %rax,%rax
    a638:	75 13                	jne    a64d <mk_string+0x6c>
    a63a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63e:	48 89 c7             	mov    %rax,%rdi
    a641:	e8 aa 7c ff ff       	call   22f0 <free@plt>
    a646:	b8 00 00 00 00       	mov    $0x0,%eax
    a64b:	eb 04                	jmp    a651 <mk_string+0x70>
    a64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a651:	c9                   	leave
    a652:	c3                   	ret

000000000000a653 <mk_rnum>:
    a653:	f3 0f 1e fa          	endbr64
    a657:	55                   	push   %rbp
    a658:	48 89 e5             	mov    %rsp,%rbp
    a65b:	48 83 ec 20          	sub    $0x20,%rsp
    a65f:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a662:	f3 0f 11 45 e8       	movss  %xmm0,-0x18(%rbp)
    a667:	bf 28 00 00 00       	mov    $0x28,%edi
    a66c:	e8 5f 7e ff ff       	call   24d0 <malloc@plt>
    a671:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a679:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a67c:	89 10                	mov    %edx,(%rax)
    a67e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a682:	c7 40 04 08 00 00 00 	movl   $0x8,0x4(%rax)
    a689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a68d:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
    a692:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
    a697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a69b:	c9                   	leave
    a69c:	c3                   	ret

000000000000a69d <semcheck_id_not_main>:
    a69d:	f3 0f 1e fa          	endbr64
    a6a1:	55                   	push   %rbp
    a6a2:	48 89 e5             	mov    %rsp,%rbp
    a6a5:	48 83 ec 10          	sub    $0x10,%rsp
    a6a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b1:	48 8d 15 c8 01 01 00 	lea    0x101c8(%rip),%rdx        # 1a880 <__PRETTY_FUNCTION__.0+0x10>
    a6b8:	48 89 d6             	mov    %rdx,%rsi
    a6bb:	48 89 c7             	mov    %rax,%rdi
    a6be:	e8 8d 7d ff ff       	call   2450 <strcmp@plt>
    a6c3:	85 c0                	test   %eax,%eax
    a6c5:	75 2a                	jne    a6f1 <semcheck_id_not_main+0x54>
    a6c7:	48 8b 05 92 79 01 00 	mov    0x17992(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a6ce:	48 89 c1             	mov    %rax,%rcx
    a6d1:	ba 46 00 00 00       	mov    $0x46,%edx
    a6d6:	be 01 00 00 00       	mov    $0x1,%esi
    a6db:	48 8d 05 a6 01 01 00 	lea    0x101a6(%rip),%rax        # 1a888 <__PRETTY_FUNCTION__.0+0x18>
    a6e2:	48 89 c7             	mov    %rax,%rdi
    a6e5:	e8 66 7e ff ff       	call   2550 <fwrite@plt>
    a6ea:	b8 01 00 00 00       	mov    $0x1,%eax
    a6ef:	eb 05                	jmp    a6f6 <semcheck_id_not_main+0x59>
    a6f1:	b8 00 00 00 00       	mov    $0x0,%eax
    a6f6:	c9                   	leave
    a6f7:	c3                   	ret

000000000000a6f8 <start_semcheck>:
    a6f8:	f3 0f 1e fa          	endbr64
    a6fc:	55                   	push   %rbp
    a6fd:	48 89 e5             	mov    %rsp,%rbp
    a700:	48 83 ec 20          	sub    $0x20,%rsp
    a704:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a708:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a70c:	b8 00 00 00 00       	mov    $0x0,%eax
    a711:	e8 6d 13 00 00       	call   ba83 <InitSymTab>
    a716:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a71e:	48 89 c7             	mov    %rax,%rdi
    a721:	e8 af 01 00 00       	call   a8d5 <semcheck_add_builtins>
    a726:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a72a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a72e:	48 89 d6             	mov    %rdx,%rsi
    a731:	48 89 c7             	mov    %rax,%rdi
    a734:	e8 fb 01 00 00       	call   a934 <semcheck_program>
    a739:	89 45 f4             	mov    %eax,-0xc(%rbp)
    a73c:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    a740:	7e 23                	jle    a765 <start_semcheck+0x6d>
    a742:	48 8b 05 17 79 01 00 	mov    0x17917(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a749:	8b 55 f4             	mov    -0xc(%rbp),%edx
    a74c:	48 8d 0d 7d 01 01 00 	lea    0x1017d(%rip),%rcx        # 1a8d0 <__PRETTY_FUNCTION__.0+0x60>
    a753:	48 89 ce             	mov    %rcx,%rsi
    a756:	48 89 c7             	mov    %rax,%rdi
    a759:	b8 00 00 00 00       	mov    $0x0,%eax
    a75e:	e8 0d 7d ff ff       	call   2470 <fprintf@plt>
    a763:	eb 23                	jmp    a788 <start_semcheck+0x90>
    a765:	48 8b 05 f4 78 01 00 	mov    0x178f4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a76c:	48 89 c1             	mov    %rax,%rcx
    a76f:	ba 14 00 00 00       	mov    $0x14,%edx
    a774:	be 01 00 00 00       	mov    $0x1,%esi
    a779:	48 8d 05 72 01 01 00 	lea    0x10172(%rip),%rax        # 1a8f2 <__PRETTY_FUNCTION__.0+0x82>
    a780:	48 89 c7             	mov    %rax,%rdi
    a783:	e8 c8 7d ff ff       	call   2550 <fwrite@plt>
    a788:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a78c:	8b 55 f4             	mov    -0xc(%rbp),%edx
    a78f:	89 10                	mov    %edx,(%rax)
    a791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a795:	c9                   	leave
    a796:	c3                   	ret

000000000000a797 <semcheck_type_decls>:
    a797:	f3 0f 1e fa          	endbr64
    a79b:	55                   	push   %rbp
    a79c:	48 89 e5             	mov    %rsp,%rbp
    a79f:	48 83 ec 30          	sub    $0x30,%rsp
    a7a3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a7a7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a7ab:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    a7b0:	75 28                	jne    a7da <semcheck_type_decls+0x43>
    a7b2:	48 8d 05 d7 03 01 00 	lea    0x103d7(%rip),%rax        # 1ab90 <__PRETTY_FUNCTION__.5>
    a7b9:	48 89 c1             	mov    %rax,%rcx
    a7bc:	ba 57 00 00 00       	mov    $0x57,%edx
    a7c1:	48 8d 05 40 01 01 00 	lea    0x10140(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a7c8:	48 89 c6             	mov    %rax,%rsi
    a7cb:	48 8d 05 5d 01 01 00 	lea    0x1015d(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    a7d2:	48 89 c7             	mov    %rax,%rdi
    a7d5:	e8 f6 7b ff ff       	call   23d0 <__assert_fail@plt>
    a7da:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    a7e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a7e5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a7e9:	e9 d7 00 00 00       	jmp    a8c5 <semcheck_type_decls+0x12e>
    a7ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7f2:	8b 00                	mov    (%rax),%eax
    a7f4:	85 c0                	test   %eax,%eax
    a7f6:	74 28                	je     a820 <semcheck_type_decls+0x89>
    a7f8:	48 8d 05 91 03 01 00 	lea    0x10391(%rip),%rax        # 1ab90 <__PRETTY_FUNCTION__.5>
    a7ff:	48 89 c1             	mov    %rax,%rcx
    a802:	ba 5d 00 00 00       	mov    $0x5d,%edx
    a807:	48 8d 05 fa 00 01 00 	lea    0x100fa(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a80e:	48 89 c6             	mov    %rax,%rsi
    a811:	48 8d 05 26 01 01 00 	lea    0x10126(%rip),%rax        # 1a93e <__PRETTY_FUNCTION__.0+0xce>
    a818:	48 89 c7             	mov    %rax,%rdi
    a81b:	e8 b0 7b ff ff       	call   23d0 <__assert_fail@plt>
    a820:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a824:	48 8b 40 08          	mov    0x8(%rax),%rax
    a828:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a830:	8b 40 04             	mov    0x4(%rax),%eax
    a833:	83 f8 07             	cmp    $0x7,%eax
    a836:	74 28                	je     a860 <semcheck_type_decls+0xc9>
    a838:	48 8d 05 51 03 01 00 	lea    0x10351(%rip),%rax        # 1ab90 <__PRETTY_FUNCTION__.5>
    a83f:	48 89 c1             	mov    %rax,%rcx
    a842:	ba 5f 00 00 00       	mov    $0x5f,%edx
    a847:	48 8d 05 ba 00 01 00 	lea    0x100ba(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a84e:	48 89 c6             	mov    %rax,%rsi
    a851:	48 8d 05 fd 00 01 00 	lea    0x100fd(%rip),%rax        # 1a955 <__PRETTY_FUNCTION__.0+0xe5>
    a858:	48 89 c7             	mov    %rax,%rdi
    a85b:	e8 70 7b ff ff       	call   23d0 <__assert_fail@plt>
    a860:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    a867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a86b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a86f:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a876:	48 89 ce             	mov    %rcx,%rsi
    a879:	48 89 c7             	mov    %rax,%rdi
    a87c:	e8 07 1a 00 00       	call   c288 <PushTypeOntoScope>
    a881:	89 45 ec             	mov    %eax,-0x14(%rbp)
    a884:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    a888:	7e 2f                	jle    a8b9 <semcheck_type_decls+0x122>
    a88a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a88e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a896:	8b 10                	mov    (%rax),%edx
    a898:	48 8b 05 c1 77 01 00 	mov    0x177c1(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a89f:	48 8d 35 d2 00 01 00 	lea    0x100d2(%rip),%rsi        # 1a978 <__PRETTY_FUNCTION__.0+0x108>
    a8a6:	48 89 c7             	mov    %rax,%rdi
    a8a9:	b8 00 00 00 00       	mov    $0x0,%eax
    a8ae:	e8 bd 7b ff ff       	call   2470 <fprintf@plt>
    a8b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    a8b6:	01 45 e4             	add    %eax,-0x1c(%rbp)
    a8b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8bd:	48 8b 40 10          	mov    0x10(%rax),%rax
    a8c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a8c5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8ca:	0f 85 1e ff ff ff    	jne    a7ee <semcheck_type_decls+0x57>
    a8d0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    a8d3:	c9                   	leave
    a8d4:	c3                   	ret

000000000000a8d5 <semcheck_add_builtins>:
    a8d5:	f3 0f 1e fa          	endbr64
    a8d9:	55                   	push   %rbp
    a8da:	48 89 e5             	mov    %rsp,%rbp
    a8dd:	48 83 ec 10          	sub    $0x10,%rsp
    a8e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8e5:	48 8d 05 b9 00 01 00 	lea    0x100b9(%rip),%rax        # 1a9a5 <__PRETTY_FUNCTION__.0+0x135>
    a8ec:	48 89 c7             	mov    %rax,%rdi
    a8ef:	e8 6c 7c ff ff       	call   2560 <strdup@plt>
    a8f4:	48 89 c1             	mov    %rax,%rcx
    a8f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8fb:	ba 05 00 00 00       	mov    $0x5,%edx
    a900:	48 89 ce             	mov    %rcx,%rsi
    a903:	48 89 c7             	mov    %rax,%rdi
    a906:	e8 58 12 00 00       	call   bb63 <AddBuiltinType>
    a90b:	48 8d 05 99 00 01 00 	lea    0x10099(%rip),%rax        # 1a9ab <__PRETTY_FUNCTION__.0+0x13b>
    a912:	48 89 c7             	mov    %rax,%rdi
    a915:	e8 46 7c ff ff       	call   2560 <strdup@plt>
    a91a:	48 89 c1             	mov    %rax,%rcx
    a91d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a921:	ba 05 00 00 00       	mov    $0x5,%edx
    a926:	48 89 ce             	mov    %rcx,%rsi
    a929:	48 89 c7             	mov    %rax,%rdi
    a92c:	e8 32 12 00 00       	call   bb63 <AddBuiltinType>
    a931:	90                   	nop
    a932:	c9                   	leave
    a933:	c3                   	ret

000000000000a934 <semcheck_program>:
    a934:	f3 0f 1e fa          	endbr64
    a938:	55                   	push   %rbp
    a939:	48 89 e5             	mov    %rsp,%rbp
    a93c:	48 83 ec 20          	sub    $0x20,%rsp
    a940:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a944:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a948:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a94d:	75 28                	jne    a977 <semcheck_program+0x43>
    a94f:	48 8d 05 5a 02 01 00 	lea    0x1025a(%rip),%rax        # 1abb0 <__PRETTY_FUNCTION__.4>
    a956:	48 89 c1             	mov    %rax,%rcx
    a959:	ba 84 00 00 00       	mov    $0x84,%edx
    a95e:	48 8d 05 a3 ff 00 00 	lea    0xffa3(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a965:	48 89 c6             	mov    %rax,%rsi
    a968:	48 8d 05 43 00 01 00 	lea    0x10043(%rip),%rax        # 1a9b2 <__PRETTY_FUNCTION__.0+0x142>
    a96f:	48 89 c7             	mov    %rax,%rdi
    a972:	e8 59 7a ff ff       	call   23d0 <__assert_fail@plt>
    a977:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a97c:	75 28                	jne    a9a6 <semcheck_program+0x72>
    a97e:	48 8d 05 2b 02 01 00 	lea    0x1022b(%rip),%rax        # 1abb0 <__PRETTY_FUNCTION__.4>
    a985:	48 89 c1             	mov    %rax,%rcx
    a988:	ba 85 00 00 00       	mov    $0x85,%edx
    a98d:	48 8d 05 74 ff 00 00 	lea    0xff74(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a994:	48 89 c6             	mov    %rax,%rsi
    a997:	48 8d 05 91 ff 00 00 	lea    0xff91(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    a99e:	48 89 c7             	mov    %rax,%rdi
    a9a1:	e8 2a 7a ff ff       	call   23d0 <__assert_fail@plt>
    a9a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9aa:	8b 40 04             	mov    0x4(%rax),%eax
    a9ad:	85 c0                	test   %eax,%eax
    a9af:	74 28                	je     a9d9 <semcheck_program+0xa5>
    a9b1:	48 8d 05 f8 01 01 00 	lea    0x101f8(%rip),%rax        # 1abb0 <__PRETTY_FUNCTION__.4>
    a9b8:	48 89 c1             	mov    %rax,%rcx
    a9bb:	ba 86 00 00 00       	mov    $0x86,%edx
    a9c0:	48 8d 05 41 ff 00 00 	lea    0xff41(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a9c7:	48 89 c6             	mov    %rax,%rsi
    a9ca:	48 8d 05 ef ff 00 00 	lea    0xffef(%rip),%rax        # 1a9c0 <__PRETTY_FUNCTION__.0+0x150>
    a9d1:	48 89 c7             	mov    %rax,%rdi
    a9d4:	e8 f7 79 ff ff       	call   23d0 <__assert_fail@plt>
    a9d9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    a9e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9e4:	48 89 c7             	mov    %rax,%rdi
    a9e7:	e8 18 12 00 00       	call   bc04 <PushScope>
    a9ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    a9f4:	48 89 c7             	mov    %rax,%rdi
    a9f7:	e8 a1 fc ff ff       	call   a69d <semcheck_id_not_main>
    a9fc:	01 45 fc             	add    %eax,-0x4(%rbp)
    a9ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa03:	8b 10                	mov    (%rax),%edx
    aa05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa09:	48 8b 48 10          	mov    0x10(%rax),%rcx
    aa0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa11:	48 89 ce             	mov    %rcx,%rsi
    aa14:	48 89 c7             	mov    %rax,%rdi
    aa17:	e8 ad 00 00 00       	call   aac9 <semcheck_args>
    aa1c:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa23:	48 8b 50 20          	mov    0x20(%rax),%rdx
    aa27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa2b:	48 89 d6             	mov    %rdx,%rsi
    aa2e:	48 89 c7             	mov    %rax,%rdi
    aa31:	e8 61 fd ff ff       	call   a797 <semcheck_type_decls>
    aa36:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa3d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    aa41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa45:	48 89 d6             	mov    %rdx,%rsi
    aa48:	48 89 c7             	mov    %rax,%rdi
    aa4b:	e8 9c 01 00 00       	call   abec <semcheck_decls>
    aa50:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa57:	48 8b 48 28          	mov    0x28(%rax),%rcx
    aa5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa5f:	ba 00 00 00 00       	mov    $0x0,%edx
    aa64:	48 89 ce             	mov    %rcx,%rsi
    aa67:	48 89 c7             	mov    %rax,%rdi
    aa6a:	e8 6a 08 00 00       	call   b2d9 <semcheck_subprograms>
    aa6f:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa76:	48 8b 48 30          	mov    0x30(%rax),%rcx
    aa7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa7e:	ba 00 00 00 00       	mov    $0x0,%edx
    aa83:	48 89 ce             	mov    %rcx,%rsi
    aa86:	48 89 c7             	mov    %rax,%rdi
    aa89:	e8 01 21 00 00       	call   cb8f <semcheck_stmt>
    aa8e:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa91:	b8 00 00 00 00       	mov    $0x0,%eax
    aa96:	e8 f7 d5 ff ff       	call   8092 <optimize_flag>
    aa9b:	85 c0                	test   %eax,%eax
    aa9d:	7e 19                	jle    aab8 <semcheck_program+0x184>
    aa9f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    aaa3:	75 13                	jne    aab8 <semcheck_program+0x184>
    aaa5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aaa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaad:	48 89 d6             	mov    %rdx,%rsi
    aab0:	48 89 c7             	mov    %rax,%rdi
    aab3:	e8 a9 ae 00 00       	call   15961 <optimize>
    aab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aabc:	48 89 c7             	mov    %rax,%rdi
    aabf:	e8 98 18 00 00       	call   c35c <PopScope>
    aac4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    aac7:	c9                   	leave
    aac8:	c3                   	ret

000000000000aac9 <semcheck_args>:
    aac9:	f3 0f 1e fa          	endbr64
    aacd:	55                   	push   %rbp
    aace:	48 89 e5             	mov    %rsp,%rbp
    aad1:	48 83 ec 30          	sub    $0x30,%rsp
    aad5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aad9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aadd:	89 55 dc             	mov    %edx,-0x24(%rbp)
    aae0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    aae5:	75 28                	jne    ab0f <semcheck_args+0x46>
    aae7:	48 8d 05 da 00 01 00 	lea    0x100da(%rip),%rax        # 1abc8 <__PRETTY_FUNCTION__.3>
    aaee:	48 89 c1             	mov    %rax,%rcx
    aaf1:	ba ab 00 00 00       	mov    $0xab,%edx
    aaf6:	48 8d 05 0b fe 00 00 	lea    0xfe0b(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    aafd:	48 89 c6             	mov    %rax,%rsi
    ab00:	48 8d 05 28 fe 00 00 	lea    0xfe28(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    ab07:	48 89 c7             	mov    %rax,%rdi
    ab0a:	e8 c1 78 ff ff       	call   23d0 <__assert_fail@plt>
    ab0f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    ab16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ab1e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ab23:	0f 84 b3 00 00 00    	je     abdc <semcheck_args+0x113>
    ab29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab2d:	8b 00                	mov    (%rax),%eax
    ab2f:	85 c0                	test   %eax,%eax
    ab31:	0f 85 a5 00 00 00    	jne    abdc <semcheck_args+0x113>
    ab37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab3f:	48 89 d6             	mov    %rdx,%rsi
    ab42:	48 89 c7             	mov    %rax,%rdi
    ab45:	e8 a2 00 00 00       	call   abec <semcheck_decls>
    ab4a:	e9 9b 00 00 00       	jmp    abea <semcheck_args+0x121>
    ab4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab53:	8b 00                	mov    (%rax),%eax
    ab55:	83 f8 03             	cmp    $0x3,%eax
    ab58:	74 28                	je     ab82 <semcheck_args+0xb9>
    ab5a:	48 8d 05 67 00 01 00 	lea    0x10067(%rip),%rax        # 1abc8 <__PRETTY_FUNCTION__.3>
    ab61:	48 89 c1             	mov    %rax,%rcx
    ab64:	ba ba 00 00 00       	mov    $0xba,%edx
    ab69:	48 8d 05 98 fd 00 00 	lea    0xfd98(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    ab70:	48 89 c6             	mov    %rax,%rsi
    ab73:	48 8d 05 66 fe 00 00 	lea    0xfe66(%rip),%rax        # 1a9e0 <__PRETTY_FUNCTION__.0+0x170>
    ab7a:	48 89 c7             	mov    %rax,%rdi
    ab7d:	e8 4e 78 ff ff       	call   23d0 <__assert_fail@plt>
    ab82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab86:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ab8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab8e:	be 04 00 00 00       	mov    $0x4,%esi
    ab93:	48 89 c7             	mov    %rax,%rdi
    ab96:	e8 0c 11 00 00       	call   bca7 <PushVarOntoScope>
    ab9b:	89 45 f4             	mov    %eax,-0xc(%rbp)
    ab9e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    aba2:	7e 2c                	jle    abd0 <semcheck_args+0x107>
    aba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    abac:	48 8b 05 ad 74 01 00 	mov    0x174ad(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    abb3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    abb6:	48 8d 35 bb fd 00 00 	lea    0xfdbb(%rip),%rsi        # 1a978 <__PRETTY_FUNCTION__.0+0x108>
    abbd:	48 89 c7             	mov    %rax,%rdi
    abc0:	b8 00 00 00 00       	mov    $0x0,%eax
    abc5:	e8 a6 78 ff ff       	call   2470 <fprintf@plt>
    abca:	8b 45 f4             	mov    -0xc(%rbp),%eax
    abcd:	01 45 f0             	add    %eax,-0x10(%rbp)
    abd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abd4:	48 8b 40 10          	mov    0x10(%rax),%rax
    abd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    abdc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    abe1:	0f 85 68 ff ff ff    	jne    ab4f <semcheck_args+0x86>
    abe7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    abea:	c9                   	leave
    abeb:	c3                   	ret

000000000000abec <semcheck_decls>:
    abec:	f3 0f 1e fa          	endbr64
    abf0:	55                   	push   %rbp
    abf1:	48 89 e5             	mov    %rsp,%rbp
    abf4:	48 83 ec 50          	sub    $0x50,%rsp
    abf8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    abfc:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    ac00:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac07:	00 00
    ac09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ac0d:	31 c0                	xor    %eax,%eax
    ac0f:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    ac14:	75 28                	jne    ac3e <semcheck_decls+0x52>
    ac16:	48 8d 05 bb ff 00 00 	lea    0xffbb(%rip),%rax        # 1abd8 <__PRETTY_FUNCTION__.2>
    ac1d:	48 89 c1             	mov    %rax,%rcx
    ac20:	ba d6 00 00 00       	mov    $0xd6,%edx
    ac25:	48 8d 05 dc fc 00 00 	lea    0xfcdc(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    ac2c:	48 89 c6             	mov    %rax,%rsi
    ac2f:	48 8d 05 f9 fc 00 00 	lea    0xfcf9(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    ac36:	48 89 c7             	mov    %rax,%rdi
    ac39:	e8 92 77 ff ff       	call   23d0 <__assert_fail@plt>
    ac3e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    ac45:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ac49:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ac4d:	e9 eb 01 00 00       	jmp    ae3d <semcheck_decls+0x251>
    ac52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac56:	8b 00                	mov    (%rax),%eax
    ac58:	85 c0                	test   %eax,%eax
    ac5a:	74 28                	je     ac84 <semcheck_decls+0x98>
    ac5c:	48 8d 05 75 ff 00 00 	lea    0xff75(%rip),%rax        # 1abd8 <__PRETTY_FUNCTION__.2>
    ac63:	48 89 c1             	mov    %rax,%rcx
    ac66:	ba dd 00 00 00       	mov    $0xdd,%edx
    ac6b:	48 8d 05 96 fc 00 00 	lea    0xfc96(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    ac72:	48 89 c6             	mov    %rax,%rsi
    ac75:	48 8d 05 c2 fc 00 00 	lea    0xfcc2(%rip),%rax        # 1a93e <__PRETTY_FUNCTION__.0+0xce>
    ac7c:	48 89 c7             	mov    %rax,%rdi
    ac7f:	e8 4c 77 ff ff       	call   23d0 <__assert_fail@plt>
    ac84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac88:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ac90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac94:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ac9c:	e9 85 01 00 00       	jmp    ae26 <semcheck_decls+0x23a>
    aca1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aca5:	8b 00                	mov    (%rax),%eax
    aca7:	83 f8 03             	cmp    $0x3,%eax
    acaa:	74 28                	je     acd4 <semcheck_decls+0xe8>
    acac:	48 8d 05 25 ff 00 00 	lea    0xff25(%rip),%rax        # 1abd8 <__PRETTY_FUNCTION__.2>
    acb3:	48 89 c1             	mov    %rax,%rcx
    acb6:	ba e4 00 00 00       	mov    $0xe4,%edx
    acbb:	48 8d 05 46 fc 00 00 	lea    0xfc46(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    acc2:	48 89 c6             	mov    %rax,%rsi
    acc5:	48 8d 05 2d fd 00 00 	lea    0xfd2d(%rip),%rax        # 1a9f9 <__PRETTY_FUNCTION__.0+0x189>
    accc:	48 89 c7             	mov    %rax,%rdi
    accf:	e8 fc 76 ff ff       	call   23d0 <__assert_fail@plt>
    acd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acd8:	8b 40 04             	mov    0x4(%rax),%eax
    acdb:	83 f8 02             	cmp    $0x2,%eax
    acde:	0f 85 b9 00 00 00    	jne    ad9d <semcheck_decls+0x1b1>
    ace4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ace8:	48 8b 40 18          	mov    0x18(%rax),%rax
    acec:	48 85 c0             	test   %rax,%rax
    acef:	74 62                	je     ad53 <semcheck_decls+0x167>
    acf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acf5:	48 8b 50 18          	mov    0x18(%rax),%rdx
    acf9:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    acfd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ad01:	48 89 ce             	mov    %rcx,%rsi
    ad04:	48 89 c7             	mov    %rax,%rdi
    ad07:	e8 cf 13 00 00       	call   c0db <FindIdent>
    ad0c:	83 f8 ff             	cmp    $0xffffffff,%eax
    ad0f:	75 36                	jne    ad47 <semcheck_decls+0x15b>
    ad11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad15:	48 8b 48 18          	mov    0x18(%rax),%rcx
    ad19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad1d:	8b 10                	mov    (%rax),%edx
    ad1f:	48 8b 05 3a 73 01 00 	mov    0x1733a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ad26:	48 8d 35 eb fc 00 00 	lea    0xfceb(%rip),%rsi        # 1aa18 <__PRETTY_FUNCTION__.0+0x1a8>
    ad2d:	48 89 c7             	mov    %rax,%rdi
    ad30:	b8 00 00 00 00       	mov    $0x0,%eax
    ad35:	e8 36 77 ff ff       	call   2470 <fprintf@plt>
    ad3a:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    ad3e:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%rbp)
    ad45:	eb 38                	jmp    ad7f <semcheck_decls+0x193>
    ad47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ad4b:	8b 40 14             	mov    0x14(%rax),%eax
    ad4e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ad51:	eb 2c                	jmp    ad7f <semcheck_decls+0x193>
    ad53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad57:	8b 40 10             	mov    0x10(%rax),%eax
    ad5a:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ad5f:	74 0e                	je     ad6f <semcheck_decls+0x183>
    ad61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad65:	8b 40 10             	mov    0x10(%rax),%eax
    ad68:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    ad6d:	75 09                	jne    ad78 <semcheck_decls+0x18c>
    ad6f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    ad76:	eb 07                	jmp    ad7f <semcheck_decls+0x193>
    ad78:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    ad7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad83:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ad87:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    ad8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ad8e:	89 ce                	mov    %ecx,%esi
    ad90:	48 89 c7             	mov    %rax,%rdi
    ad93:	e8 0f 0f 00 00       	call   bca7 <PushVarOntoScope>
    ad98:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ad9b:	eb 48                	jmp    ade5 <semcheck_decls+0x1f9>
    ad9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ada1:	8b 40 10             	mov    0x10(%rax),%eax
    ada4:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ada9:	74 0e                	je     adb9 <semcheck_decls+0x1cd>
    adab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adaf:	8b 40 10             	mov    0x10(%rax),%eax
    adb2:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    adb7:	75 09                	jne    adc2 <semcheck_decls+0x1d6>
    adb9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    adc0:	eb 07                	jmp    adc9 <semcheck_decls+0x1dd>
    adc2:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    adc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adcd:	48 8b 50 08          	mov    0x8(%rax),%rdx
    add1:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    add4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    add8:	89 ce                	mov    %ecx,%esi
    adda:	48 89 c7             	mov    %rax,%rdi
    addd:	e8 99 0f 00 00       	call   bd7b <PushArrayOntoScope>
    ade2:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ade5:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    ade9:	7e 2f                	jle    ae1a <semcheck_decls+0x22e>
    adeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adef:	48 8b 48 08          	mov    0x8(%rax),%rcx
    adf3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adf7:	8b 10                	mov    (%rax),%edx
    adf9:	48 8b 05 60 72 01 00 	mov    0x17260(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ae00:	48 8d 35 71 fb 00 00 	lea    0xfb71(%rip),%rsi        # 1a978 <__PRETTY_FUNCTION__.0+0x108>
    ae07:	48 89 c7             	mov    %rax,%rdi
    ae0a:	b8 00 00 00 00       	mov    $0x0,%eax
    ae0f:	e8 5c 76 ff ff       	call   2470 <fprintf@plt>
    ae14:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ae17:	01 45 cc             	add    %eax,-0x34(%rbp)
    ae1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae1e:	48 8b 40 10          	mov    0x10(%rax),%rax
    ae22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ae26:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    ae2b:	0f 85 70 fe ff ff    	jne    aca1 <semcheck_decls+0xb5>
    ae31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ae35:	48 8b 40 10          	mov    0x10(%rax),%rax
    ae39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ae3d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ae42:	0f 85 0a fe ff ff    	jne    ac52 <semcheck_decls+0x66>
    ae48:	8b 45 cc             	mov    -0x34(%rbp),%eax
    ae4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae4f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ae56:	00 00
    ae58:	74 05                	je     ae5f <semcheck_decls+0x273>
    ae5a:	e8 41 75 ff ff       	call   23a0 <__stack_chk_fail@plt>
    ae5f:	c9                   	leave
    ae60:	c3                   	ret

000000000000ae61 <semcheck_subprogram>:
    ae61:	f3 0f 1e fa          	endbr64
    ae65:	55                   	push   %rbp
    ae66:	48 89 e5             	mov    %rsp,%rbp
    ae69:	48 83 ec 50          	sub    $0x50,%rsp
    ae6d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ae71:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    ae75:	89 55 bc             	mov    %edx,-0x44(%rbp)
    ae78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ae7f:	00 00
    ae81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ae85:	31 c0                	xor    %eax,%eax
    ae87:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ae8c:	75 28                	jne    aeb6 <semcheck_subprogram+0x55>
    ae8e:	48 8d 05 5b fd 00 00 	lea    0xfd5b(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    ae95:	48 89 c1             	mov    %rax,%rcx
    ae98:	ba 26 01 00 00       	mov    $0x126,%edx
    ae9d:	48 8d 05 64 fa 00 00 	lea    0xfa64(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    aea4:	48 89 c6             	mov    %rax,%rsi
    aea7:	48 8d 05 81 fa 00 00 	lea    0xfa81(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    aeae:	48 89 c7             	mov    %rax,%rdi
    aeb1:	e8 1a 75 ff ff       	call   23d0 <__assert_fail@plt>
    aeb6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    aebb:	75 28                	jne    aee5 <semcheck_subprogram+0x84>
    aebd:	48 8d 05 2c fd 00 00 	lea    0xfd2c(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    aec4:	48 89 c1             	mov    %rax,%rcx
    aec7:	ba 27 01 00 00       	mov    $0x127,%edx
    aecc:	48 8d 05 35 fa 00 00 	lea    0xfa35(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    aed3:	48 89 c6             	mov    %rax,%rsi
    aed6:	48 8d 05 61 fb 00 00 	lea    0xfb61(%rip),%rax        # 1aa3e <__PRETTY_FUNCTION__.0+0x1ce>
    aedd:	48 89 c7             	mov    %rax,%rdi
    aee0:	e8 eb 74 ff ff       	call   23d0 <__assert_fail@plt>
    aee5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aee9:	8b 40 04             	mov    0x4(%rax),%eax
    aeec:	83 f8 01             	cmp    $0x1,%eax
    aeef:	74 28                	je     af19 <semcheck_subprogram+0xb8>
    aef1:	48 8d 05 f8 fc 00 00 	lea    0xfcf8(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    aef8:	48 89 c1             	mov    %rax,%rcx
    aefb:	ba 28 01 00 00       	mov    $0x128,%edx
    af00:	48 8d 05 01 fa 00 00 	lea    0xfa01(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    af07:	48 89 c6             	mov    %rax,%rsi
    af0a:	48 8d 05 47 fb 00 00 	lea    0xfb47(%rip),%rax        # 1aa58 <__PRETTY_FUNCTION__.0+0x1e8>
    af11:	48 89 c7             	mov    %rax,%rdi
    af14:	e8 b7 74 ff ff       	call   23d0 <__assert_fail@plt>
    af19:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af1d:	8b 40 08             	mov    0x8(%rax),%eax
    af20:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    af23:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
    af27:	74 2e                	je     af57 <semcheck_subprogram+0xf6>
    af29:	83 7d e4 06          	cmpl   $0x6,-0x1c(%rbp)
    af2d:	74 28                	je     af57 <semcheck_subprogram+0xf6>
    af2f:	48 8d 05 ba fc 00 00 	lea    0xfcba(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    af36:	48 89 c1             	mov    %rax,%rcx
    af39:	ba 2d 01 00 00       	mov    $0x12d,%edx
    af3e:	48 8d 05 c3 f9 00 00 	lea    0xf9c3(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    af45:	48 89 c6             	mov    %rax,%rsi
    af48:	48 8d 05 31 fb 00 00 	lea    0xfb31(%rip),%rax        # 1aa80 <__PRETTY_FUNCTION__.0+0x210>
    af4f:	48 89 c7             	mov    %rax,%rdi
    af52:	e8 79 74 ff ff       	call   23d0 <__assert_fail@plt>
    af57:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    af5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af62:	48 8b 40 10          	mov    0x10(%rax),%rax
    af66:	48 89 c7             	mov    %rax,%rdi
    af69:	e8 2f f7 ff ff       	call   a69d <semcheck_id_not_main>
    af6e:	01 45 d4             	add    %eax,-0x2c(%rbp)
    af71:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af75:	8b 40 38             	mov    0x38(%rax),%eax
    af78:	85 c0                	test   %eax,%eax
    af7a:	74 1d                	je     af99 <semcheck_subprogram+0x138>
    af7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af80:	48 8b 40 10          	mov    0x10(%rax),%rax
    af84:	48 89 c7             	mov    %rax,%rdi
    af87:	e8 d4 75 ff ff       	call   2560 <strdup@plt>
    af8c:	48 89 c2             	mov    %rax,%rdx
    af8f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af93:	48 89 50 18          	mov    %rdx,0x18(%rax)
    af97:	eb 27                	jmp    afc0 <semcheck_subprogram+0x15f>
    af99:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af9d:	48 8b 48 20          	mov    0x20(%rax),%rcx
    afa1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afa5:	48 8b 40 10          	mov    0x10(%rax),%rax
    afa9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    afad:	48 89 ce             	mov    %rcx,%rsi
    afb0:	48 89 c7             	mov    %rax,%rdi
    afb3:	e8 4a 1a 00 00       	call   ca02 <MangleFunctionName>
    afb8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    afbc:	48 89 42 18          	mov    %rax,0x18(%rdx)
    afc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afc4:	48 8b 40 10          	mov    0x10(%rax),%rax
    afc8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    afcc:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
    afd0:	75 69                	jne    b03b <semcheck_subprogram+0x1da>
    afd2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afd6:	48 8b 48 20          	mov    0x20(%rax),%rcx
    afda:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afde:	48 8b 50 18          	mov    0x18(%rax),%rdx
    afe2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    afe6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    afea:	48 89 c7             	mov    %rax,%rdi
    afed:	e8 5d 0e 00 00       	call   be4f <PushProcedureOntoScope>
    aff2:	89 45 d8             	mov    %eax,-0x28(%rbp)
    aff5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aff9:	48 89 c7             	mov    %rax,%rdi
    affc:	e8 03 0c 00 00       	call   bc04 <PushScope>
    b001:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b005:	48 8b 48 20          	mov    0x20(%rax),%rcx
    b009:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b00d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b011:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b015:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b019:	48 89 c7             	mov    %rax,%rdi
    b01c:	e8 2e 0e 00 00       	call   be4f <PushProcedureOntoScope>
    b021:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b025:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    b02c:	00
    b02d:	8b 45 bc             	mov    -0x44(%rbp),%eax
    b030:	83 c0 01             	add    $0x1,%eax
    b033:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b036:	e9 02 01 00 00       	jmp    b13d <semcheck_subprogram+0x2dc>
    b03b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b03f:	48 8b 40 30          	mov    0x30(%rax),%rax
    b043:	48 85 c0             	test   %rax,%rax
    b046:	74 62                	je     b0aa <semcheck_subprogram+0x249>
    b048:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b04c:	48 8b 50 30          	mov    0x30(%rax),%rdx
    b050:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    b054:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b058:	48 89 ce             	mov    %rcx,%rsi
    b05b:	48 89 c7             	mov    %rax,%rdi
    b05e:	e8 78 10 00 00       	call   c0db <FindIdent>
    b063:	83 f8 ff             	cmp    $0xffffffff,%eax
    b066:	75 36                	jne    b09e <semcheck_subprogram+0x23d>
    b068:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b06c:	48 8b 48 30          	mov    0x30(%rax),%rcx
    b070:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b074:	8b 10                	mov    (%rax),%edx
    b076:	48 8b 05 e3 6f 01 00 	mov    0x16fe3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    b07d:	48 8d 35 94 f9 00 00 	lea    0xf994(%rip),%rsi        # 1aa18 <__PRETTY_FUNCTION__.0+0x1a8>
    b084:	48 89 c7             	mov    %rax,%rdi
    b087:	b8 00 00 00 00       	mov    $0x0,%eax
    b08c:	e8 df 73 ff ff       	call   2470 <fprintf@plt>
    b091:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    b095:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%rbp)
    b09c:	eb 38                	jmp    b0d6 <semcheck_subprogram+0x275>
    b09e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0a2:	8b 40 14             	mov    0x14(%rax),%eax
    b0a5:	89 45 e0             	mov    %eax,-0x20(%rbp)
    b0a8:	eb 2c                	jmp    b0d6 <semcheck_subprogram+0x275>
    b0aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0ae:	8b 40 28             	mov    0x28(%rax),%eax
    b0b1:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    b0b6:	74 0e                	je     b0c6 <semcheck_subprogram+0x265>
    b0b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0bc:	8b 40 28             	mov    0x28(%rax),%eax
    b0bf:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    b0c4:	75 09                	jne    b0cf <semcheck_subprogram+0x26e>
    b0c6:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    b0cd:	eb 07                	jmp    b0d6 <semcheck_subprogram+0x275>
    b0cf:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%rbp)
    b0d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0da:	48 8b 78 20          	mov    0x20(%rax),%rdi
    b0de:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0e2:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b0e6:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    b0e9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b0ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b0f1:	49 89 f8             	mov    %rdi,%r8
    b0f4:	48 89 c7             	mov    %rax,%rdi
    b0f7:	e8 2c 0e 00 00       	call   bf28 <PushFunctionOntoScope>
    b0fc:	89 45 d8             	mov    %eax,-0x28(%rbp)
    b0ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b103:	48 89 c7             	mov    %rax,%rdi
    b106:	e8 f9 0a 00 00       	call   bc04 <PushScope>
    b10b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b10f:	48 8b 48 20          	mov    0x20(%rax),%rcx
    b113:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b117:	48 8b 70 10          	mov    0x10(%rax),%rsi
    b11b:	8b 55 e0             	mov    -0x20(%rbp),%edx
    b11e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b122:	48 89 c7             	mov    %rax,%rdi
    b125:	e8 d8 0e 00 00       	call   c002 <PushFuncRetOntoScope>
    b12a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b12e:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    b135:	00
    b136:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    b13d:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    b141:	7e 2f                	jle    b172 <semcheck_subprogram+0x311>
    b143:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b147:	48 8b 48 10          	mov    0x10(%rax),%rcx
    b14b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b14f:	8b 10                	mov    (%rax),%edx
    b151:	48 8b 05 08 6f 01 00 	mov    0x16f08(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    b158:	48 8d 35 69 f9 00 00 	lea    0xf969(%rip),%rsi        # 1aac8 <__PRETTY_FUNCTION__.0+0x258>
    b15f:	48 89 c7             	mov    %rax,%rdi
    b162:	b8 00 00 00 00       	mov    $0x0,%eax
    b167:	e8 04 73 ff ff       	call   2470 <fprintf@plt>
    b16c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    b16f:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b172:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b176:	48 8b 50 20          	mov    0x20(%rax),%rdx
    b17a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b17e:	48 89 d6             	mov    %rdx,%rsi
    b181:	48 89 c7             	mov    %rax,%rdi
    b184:	e8 63 fa ff ff       	call   abec <semcheck_decls>
    b189:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b18c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b190:	48 8b 50 40          	mov    0x40(%rax),%rdx
    b194:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b198:	48 89 d6             	mov    %rdx,%rsi
    b19b:	48 89 c7             	mov    %rax,%rdi
    b19e:	e8 49 fa ff ff       	call   abec <semcheck_decls>
    b1a3:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b1a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1aa:	48 8b 48 48          	mov    0x48(%rax),%rcx
    b1ae:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b1b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b1b5:	48 89 ce             	mov    %rcx,%rsi
    b1b8:	48 89 c7             	mov    %rax,%rdi
    b1bb:	e8 19 01 00 00       	call   b2d9 <semcheck_subprograms>
    b1c0:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b1c3:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
    b1c7:	75 22                	jne    b1eb <semcheck_subprogram+0x38a>
    b1c9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1cd:	48 8b 48 50          	mov    0x50(%rax),%rcx
    b1d1:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b1d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b1d8:	48 89 ce             	mov    %rcx,%rsi
    b1db:	48 89 c7             	mov    %rax,%rdi
    b1de:	e8 ac 19 00 00       	call   cb8f <semcheck_stmt>
    b1e3:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b1e6:	e9 a2 00 00 00       	jmp    b28d <semcheck_subprogram+0x42c>
    b1eb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1ef:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b1f3:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    b1f7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b1fb:	48 89 ce             	mov    %rcx,%rsi
    b1fe:	48 89 c7             	mov    %rax,%rdi
    b201:	e8 d5 0e 00 00       	call   c0db <FindIdent>
    b206:	85 c0                	test   %eax,%eax
    b208:	74 28                	je     b232 <semcheck_subprogram+0x3d1>
    b20a:	48 8d 05 df f9 00 00 	lea    0xf9df(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    b211:	48 89 c1             	mov    %rax,%rcx
    b214:	ba 92 01 00 00       	mov    $0x192,%edx
    b219:	48 8d 05 e8 f6 00 00 	lea    0xf6e8(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    b220:	48 89 c6             	mov    %rax,%rsi
    b223:	48 8d 05 c6 f8 00 00 	lea    0xf8c6(%rip),%rax        # 1aaf0 <__PRETTY_FUNCTION__.0+0x280>
    b22a:	48 89 c7             	mov    %rax,%rdi
    b22d:	e8 9e 71 ff ff       	call   23d0 <__assert_fail@plt>
    b232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b236:	48 89 c7             	mov    %rax,%rdi
    b239:	e8 07 05 00 00       	call   b745 <ResetHashNodeStatus>
    b23e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b242:	48 8b 50 50          	mov    0x50(%rax),%rdx
    b246:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b24a:	48 89 d6             	mov    %rdx,%rsi
    b24d:	48 89 c7             	mov    %rax,%rdi
    b250:	e8 69 19 00 00       	call   cbbe <semcheck_func_stmt>
    b255:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b258:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b25c:	8b 40 24             	mov    0x24(%rax),%eax
    b25f:	85 c0                	test   %eax,%eax
    b261:	75 2a                	jne    b28d <semcheck_subprogram+0x42c>
    b263:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b267:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b26b:	48 8b 05 ee 6d 01 00 	mov    0x16dee(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    b272:	48 8d 0d c7 f8 00 00 	lea    0xf8c7(%rip),%rcx        # 1ab40 <__PRETTY_FUNCTION__.0+0x2d0>
    b279:	48 89 ce             	mov    %rcx,%rsi
    b27c:	48 89 c7             	mov    %rax,%rdi
    b27f:	b8 00 00 00 00       	mov    $0x0,%eax
    b284:	e8 e7 71 ff ff       	call   2470 <fprintf@plt>
    b289:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    b28d:	b8 00 00 00 00       	mov    $0x0,%eax
    b292:	e8 fb cd ff ff       	call   8092 <optimize_flag>
    b297:	85 c0                	test   %eax,%eax
    b299:	7e 19                	jle    b2b4 <semcheck_subprogram+0x453>
    b29b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    b29f:	75 13                	jne    b2b4 <semcheck_subprogram+0x453>
    b2a1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b2a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b2a9:	48 89 d6             	mov    %rdx,%rsi
    b2ac:	48 89 c7             	mov    %rax,%rdi
    b2af:	e8 ad a6 00 00       	call   15961 <optimize>
    b2b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b2b8:	48 89 c7             	mov    %rax,%rdi
    b2bb:	e8 9c 10 00 00       	call   c35c <PopScope>
    b2c0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    b2c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b2c7:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b2ce:	00 00
    b2d0:	74 05                	je     b2d7 <semcheck_subprogram+0x476>
    b2d2:	e8 c9 70 ff ff       	call   23a0 <__stack_chk_fail@plt>
    b2d7:	c9                   	leave
    b2d8:	c3                   	ret

000000000000b2d9 <semcheck_subprograms>:
    b2d9:	f3 0f 1e fa          	endbr64
    b2dd:	55                   	push   %rbp
    b2de:	48 89 e5             	mov    %rsp,%rbp
    b2e1:	48 83 ec 30          	sub    $0x30,%rsp
    b2e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b2ed:	89 55 dc             	mov    %edx,-0x24(%rbp)
    b2f0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b2f5:	75 28                	jne    b31f <semcheck_subprograms+0x46>
    b2f7:	48 8d 05 12 f9 00 00 	lea    0xf912(%rip),%rax        # 1ac10 <__PRETTY_FUNCTION__.0>
    b2fe:	48 89 c1             	mov    %rax,%rcx
    b301:	ba b1 01 00 00       	mov    $0x1b1,%edx
    b306:	48 8d 05 fb f5 00 00 	lea    0xf5fb(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    b30d:	48 89 c6             	mov    %rax,%rsi
    b310:	48 8d 05 18 f6 00 00 	lea    0xf618(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    b317:	48 89 c7             	mov    %rax,%rdi
    b31a:	e8 b1 70 ff ff       	call   23d0 <__assert_fail@plt>
    b31f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    b326:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b32a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b32e:	eb 5b                	jmp    b38b <semcheck_subprograms+0xb2>
    b330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b334:	8b 00                	mov    (%rax),%eax
    b336:	85 c0                	test   %eax,%eax
    b338:	74 28                	je     b362 <semcheck_subprograms+0x89>
    b33a:	48 8d 05 cf f8 00 00 	lea    0xf8cf(%rip),%rax        # 1ac10 <__PRETTY_FUNCTION__.0>
    b341:	48 89 c1             	mov    %rax,%rcx
    b344:	ba b7 01 00 00       	mov    $0x1b7,%edx
    b349:	48 8d 05 b8 f5 00 00 	lea    0xf5b8(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    b350:	48 89 c6             	mov    %rax,%rsi
    b353:	48 8d 05 e4 f5 00 00 	lea    0xf5e4(%rip),%rax        # 1a93e <__PRETTY_FUNCTION__.0+0xce>
    b35a:	48 89 c7             	mov    %rax,%rdi
    b35d:	e8 6e 70 ff ff       	call   23d0 <__assert_fail@plt>
    b362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b366:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b36a:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b36d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b371:	48 89 ce             	mov    %rcx,%rsi
    b374:	48 89 c7             	mov    %rax,%rdi
    b377:	e8 e5 fa ff ff       	call   ae61 <semcheck_subprogram>
    b37c:	01 45 f4             	add    %eax,-0xc(%rbp)
    b37f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b383:	48 8b 40 10          	mov    0x10(%rax),%rax
    b387:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b38b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b390:	75 9e                	jne    b330 <semcheck_subprograms+0x57>
    b392:	8b 45 f4             	mov    -0xc(%rbp),%eax
    b395:	c9                   	leave
    b396:	c3                   	ret

000000000000b397 <InitHashTable>:
    b397:	f3 0f 1e fa          	endbr64
    b39b:	55                   	push   %rbp
    b39c:	48 89 e5             	mov    %rsp,%rbp
    b39f:	48 83 ec 10          	sub    $0x10,%rsp
    b3a3:	bf 98 06 00 00       	mov    $0x698,%edi
    b3a8:	e8 23 71 ff ff       	call   24d0 <malloc@plt>
    b3ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b3b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    b3b8:	eb 16                	jmp    b3d0 <InitHashTable+0x39>
    b3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3be:	8b 55 f4             	mov    -0xc(%rbp),%edx
    b3c1:	48 63 d2             	movslq %edx,%rdx
    b3c4:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
    b3cb:	00
    b3cc:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    b3d0:	81 7d f4 d2 00 00 00 	cmpl   $0xd2,-0xc(%rbp)
    b3d7:	7e e1                	jle    b3ba <InitHashTable+0x23>
    b3d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3dd:	c9                   	leave
    b3de:	c3                   	ret

000000000000b3df <AddIdentToTable>:
    b3df:	f3 0f 1e fa          	endbr64
    b3e3:	55                   	push   %rbp
    b3e4:	48 89 e5             	mov    %rsp,%rbp
    b3e7:	48 83 ec 60          	sub    $0x60,%rsp
    b3eb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b3ef:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    b3f3:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    b3f7:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    b3fa:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    b3fe:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    b402:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b406:	48 89 c7             	mov    %rax,%rdi
    b409:	e8 f0 05 00 00       	call   b9fe <hashpjw>
    b40e:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b411:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b415:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b418:	48 63 d2             	movslq %edx,%rdx
    b41b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b41f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b423:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b428:	0f 85 8f 00 00 00    	jne    b4bd <AddIdentToTable+0xde>
    b42e:	bf 28 00 00 00       	mov    $0x28,%edi
    b433:	e8 98 70 ff ff       	call   24d0 <malloc@plt>
    b438:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b43c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b440:	8b 55 b0             	mov    -0x50(%rbp),%edx
    b443:	89 50 10             	mov    %edx,0x10(%rax)
    b446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44a:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    b44d:	89 50 14             	mov    %edx,0x14(%rax)
    b450:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b454:	48 89 c7             	mov    %rax,%rdi
    b457:	e8 04 71 ff ff       	call   2560 <strdup@plt>
    b45c:	48 89 c2             	mov    %rax,%rdx
    b45f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b463:	48 89 10             	mov    %rdx,(%rax)
    b466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b46a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b46e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b476:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b47a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b482:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    b489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b48d:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    b494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b498:	be 04 00 00 00       	mov    $0x4,%esi
    b49d:	48 89 c7             	mov    %rax,%rdi
    b4a0:	e8 56 cd ff ff       	call   81fb <CreateListNode>
    b4a5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b4a9:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b4ac:	48 63 c9             	movslq %ecx,%rcx
    b4af:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    b4b3:	b8 00 00 00 00       	mov    $0x0,%eax
    b4b8:	e9 3e 01 00 00       	jmp    b5fb <AddIdentToTable+0x21c>
    b4bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b4c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b4c5:	e9 8a 00 00 00       	jmp    b554 <AddIdentToTable+0x175>
    b4ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4ce:	48 8b 40 08          	mov    0x8(%rax),%rax
    b4d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b4d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4da:	48 8b 00             	mov    (%rax),%rax
    b4dd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b4e1:	48 89 d6             	mov    %rdx,%rsi
    b4e4:	48 89 c7             	mov    %rax,%rdi
    b4e7:	e8 64 6f ff ff       	call   2450 <strcmp@plt>
    b4ec:	85 c0                	test   %eax,%eax
    b4ee:	75 58                	jne    b548 <AddIdentToTable+0x169>
    b4f0:	83 7d b0 02          	cmpl   $0x2,-0x50(%rbp)
    b4f4:	74 06                	je     b4fc <AddIdentToTable+0x11d>
    b4f6:	83 7d b0 03          	cmpl   $0x3,-0x50(%rbp)
    b4fa:	75 07                	jne    b503 <AddIdentToTable+0x124>
    b4fc:	b8 01 00 00 00       	mov    $0x1,%eax
    b501:	eb 05                	jmp    b508 <AddIdentToTable+0x129>
    b503:	b8 00 00 00 00       	mov    $0x0,%eax
    b508:	89 45 e0             	mov    %eax,-0x20(%rbp)
    b50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b50f:	8b 40 10             	mov    0x10(%rax),%eax
    b512:	83 f8 02             	cmp    $0x2,%eax
    b515:	74 0c                	je     b523 <AddIdentToTable+0x144>
    b517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b51b:	8b 40 10             	mov    0x10(%rax),%eax
    b51e:	83 f8 03             	cmp    $0x3,%eax
    b521:	75 07                	jne    b52a <AddIdentToTable+0x14b>
    b523:	b8 01 00 00 00       	mov    $0x1,%eax
    b528:	eb 05                	jmp    b52f <AddIdentToTable+0x150>
    b52a:	b8 00 00 00 00       	mov    $0x0,%eax
    b52f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    b532:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    b536:	74 06                	je     b53e <AddIdentToTable+0x15f>
    b538:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    b53c:	75 0a                	jne    b548 <AddIdentToTable+0x169>
    b53e:	b8 01 00 00 00       	mov    $0x1,%eax
    b543:	e9 b3 00 00 00       	jmp    b5fb <AddIdentToTable+0x21c>
    b548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b54c:	48 8b 40 10          	mov    0x10(%rax),%rax
    b550:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b554:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b559:	0f 85 6b ff ff ff    	jne    b4ca <AddIdentToTable+0xeb>
    b55f:	bf 28 00 00 00       	mov    $0x28,%edi
    b564:	e8 67 6f ff ff       	call   24d0 <malloc@plt>
    b569:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b56d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b571:	8b 55 b0             	mov    -0x50(%rbp),%edx
    b574:	89 50 10             	mov    %edx,0x10(%rax)
    b577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b57b:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    b57e:	89 50 14             	mov    %edx,0x14(%rax)
    b581:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b585:	48 89 c7             	mov    %rax,%rdi
    b588:	e8 d3 6f ff ff       	call   2560 <strdup@plt>
    b58d:	48 89 c2             	mov    %rax,%rdx
    b590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b594:	48 89 10             	mov    %rdx,(%rax)
    b597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b59b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b59f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b5a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b5ab:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b5af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b3:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    b5ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5be:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    b5c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5c9:	be 04 00 00 00       	mov    $0x4,%esi
    b5ce:	48 89 c7             	mov    %rax,%rdi
    b5d1:	e8 25 cc ff ff       	call   81fb <CreateListNode>
    b5d6:	48 89 c2             	mov    %rax,%rdx
    b5d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5dd:	48 89 d6             	mov    %rdx,%rsi
    b5e0:	48 89 c7             	mov    %rax,%rdi
    b5e3:	e8 5b cc ff ff       	call   8243 <PushListNodeFront>
    b5e8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b5ec:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b5ef:	48 63 c9             	movslq %ecx,%rcx
    b5f2:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    b5f6:	b8 00 00 00 00       	mov    $0x0,%eax
    b5fb:	c9                   	leave
    b5fc:	c3                   	ret

000000000000b5fd <FindIdentInTable>:
    b5fd:	f3 0f 1e fa          	endbr64
    b601:	55                   	push   %rbp
    b602:	48 89 e5             	mov    %rsp,%rbp
    b605:	48 83 ec 30          	sub    $0x30,%rsp
    b609:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b60d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b611:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b615:	48 89 c7             	mov    %rax,%rdi
    b618:	e8 e1 03 00 00       	call   b9fe <hashpjw>
    b61d:	89 45 ec             	mov    %eax,-0x14(%rbp)
    b620:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b624:	8b 55 ec             	mov    -0x14(%rbp),%edx
    b627:	48 63 d2             	movslq %edx,%rdx
    b62a:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b62e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b632:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b637:	75 3f                	jne    b678 <FindIdentInTable+0x7b>
    b639:	b8 00 00 00 00       	mov    $0x0,%eax
    b63e:	eb 44                	jmp    b684 <FindIdentInTable+0x87>
    b640:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b644:	48 8b 40 08          	mov    0x8(%rax),%rax
    b648:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b64c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b650:	48 8b 00             	mov    (%rax),%rax
    b653:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b657:	48 89 d6             	mov    %rdx,%rsi
    b65a:	48 89 c7             	mov    %rax,%rdi
    b65d:	e8 ee 6d ff ff       	call   2450 <strcmp@plt>
    b662:	85 c0                	test   %eax,%eax
    b664:	75 06                	jne    b66c <FindIdentInTable+0x6f>
    b666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b66a:	eb 18                	jmp    b684 <FindIdentInTable+0x87>
    b66c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b670:	48 8b 40 10          	mov    0x10(%rax),%rax
    b674:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b678:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b67d:	75 c1                	jne    b640 <FindIdentInTable+0x43>
    b67f:	b8 00 00 00 00       	mov    $0x0,%eax
    b684:	c9                   	leave
    b685:	c3                   	ret

000000000000b686 <FindAllIdentsInTable>:
    b686:	f3 0f 1e fa          	endbr64
    b68a:	55                   	push   %rbp
    b68b:	48 89 e5             	mov    %rsp,%rbp
    b68e:	48 83 ec 30          	sub    $0x30,%rsp
    b692:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b696:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b69a:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    b6a1:	00
    b6a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b6a6:	48 89 c7             	mov    %rax,%rdi
    b6a9:	e8 50 03 00 00       	call   b9fe <hashpjw>
    b6ae:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    b6b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b6b5:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b6b8:	48 63 d2             	movslq %edx,%rdx
    b6bb:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b6bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b6c3:	eb 73                	jmp    b738 <FindAllIdentsInTable+0xb2>
    b6c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6c9:	48 8b 40 08          	mov    0x8(%rax),%rax
    b6cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b6d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6d5:	48 8b 00             	mov    (%rax),%rax
    b6d8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b6dc:	48 89 d6             	mov    %rdx,%rsi
    b6df:	48 89 c7             	mov    %rax,%rdi
    b6e2:	e8 69 6d ff ff       	call   2450 <strcmp@plt>
    b6e7:	85 c0                	test   %eax,%eax
    b6e9:	75 41                	jne    b72c <FindAllIdentsInTable+0xa6>
    b6eb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b6f0:	75 17                	jne    b709 <FindAllIdentsInTable+0x83>
    b6f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f6:	be 04 00 00 00       	mov    $0x4,%esi
    b6fb:	48 89 c7             	mov    %rax,%rdi
    b6fe:	e8 f8 ca ff ff       	call   81fb <CreateListNode>
    b703:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b707:	eb 23                	jmp    b72c <FindAllIdentsInTable+0xa6>
    b709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b70d:	be 04 00 00 00       	mov    $0x4,%esi
    b712:	48 89 c7             	mov    %rax,%rdi
    b715:	e8 e1 ca ff ff       	call   81fb <CreateListNode>
    b71a:	48 89 c2             	mov    %rax,%rdx
    b71d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b721:	48 89 d6             	mov    %rdx,%rsi
    b724:	48 89 c7             	mov    %rax,%rdi
    b727:	e8 9b cb ff ff       	call   82c7 <PushListNodeBack>
    b72c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b730:	48 8b 40 10          	mov    0x10(%rax),%rax
    b734:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b738:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b73d:	75 86                	jne    b6c5 <FindAllIdentsInTable+0x3f>
    b73f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b743:	c9                   	leave
    b744:	c3                   	ret

000000000000b745 <ResetHashNodeStatus>:
    b745:	f3 0f 1e fa          	endbr64
    b749:	55                   	push   %rbp
    b74a:	48 89 e5             	mov    %rsp,%rbp
    b74d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b755:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    b75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b760:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    b767:	90                   	nop
    b768:	5d                   	pop    %rbp
    b769:	c3                   	ret

000000000000b76a <DestroyHashTable>:
    b76a:	f3 0f 1e fa          	endbr64
    b76e:	55                   	push   %rbp
    b76f:	48 89 e5             	mov    %rsp,%rbp
    b772:	48 83 ec 30          	sub    $0x30,%rsp
    b776:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b77a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    b781:	eb 73                	jmp    b7f6 <DestroyHashTable+0x8c>
    b783:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b787:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b78a:	48 63 d2             	movslq %edx,%rdx
    b78d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b791:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b795:	eb 54                	jmp    b7eb <DestroyHashTable+0x81>
    b797:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b79b:	48 8b 40 08          	mov    0x8(%rax),%rax
    b79f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b7a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7a7:	8b 40 10             	mov    0x10(%rax),%eax
    b7aa:	83 f8 05             	cmp    $0x5,%eax
    b7ad:	75 0c                	jne    b7bb <DestroyHashTable+0x51>
    b7af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7b3:	48 89 c7             	mov    %rax,%rdi
    b7b6:	e8 53 00 00 00       	call   b80e <DestroyBuiltin>
    b7bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7bf:	48 8b 40 08          	mov    0x8(%rax),%rax
    b7c3:	48 89 c7             	mov    %rax,%rdi
    b7c6:	e8 25 6b ff ff       	call   22f0 <free@plt>
    b7cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7cf:	48 8b 40 10          	mov    0x10(%rax),%rax
    b7d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b7d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7db:	48 89 c7             	mov    %rax,%rdi
    b7de:	e8 0d 6b ff ff       	call   22f0 <free@plt>
    b7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b7eb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b7f0:	75 a5                	jne    b797 <DestroyHashTable+0x2d>
    b7f2:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    b7f6:	81 7d e4 d2 00 00 00 	cmpl   $0xd2,-0x1c(%rbp)
    b7fd:	7e 84                	jle    b783 <DestroyHashTable+0x19>
    b7ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b803:	48 89 c7             	mov    %rax,%rdi
    b806:	e8 e5 6a ff ff       	call   22f0 <free@plt>
    b80b:	90                   	nop
    b80c:	c9                   	leave
    b80d:	c3                   	ret

000000000000b80e <DestroyBuiltin>:
    b80e:	f3 0f 1e fa          	endbr64
    b812:	55                   	push   %rbp
    b813:	48 89 e5             	mov    %rsp,%rbp
    b816:	48 83 ec 10          	sub    $0x10,%rsp
    b81a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b81e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b823:	75 28                	jne    b84d <DestroyBuiltin+0x3f>
    b825:	48 8d 05 ac f4 00 00 	lea    0xf4ac(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.0>
    b82c:	48 89 c1             	mov    %rax,%rcx
    b82f:	ba b5 00 00 00       	mov    $0xb5,%edx
    b834:	48 8d 05 ed f3 00 00 	lea    0xf3ed(%rip),%rax        # 1ac28 <__PRETTY_FUNCTION__.0+0x18>
    b83b:	48 89 c6             	mov    %rax,%rsi
    b83e:	48 8d 05 15 f4 00 00 	lea    0xf415(%rip),%rax        # 1ac5a <__PRETTY_FUNCTION__.0+0x4a>
    b845:	48 89 c7             	mov    %rax,%rdi
    b848:	e8 83 6b ff ff       	call   23d0 <__assert_fail@plt>
    b84d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b851:	8b 40 10             	mov    0x10(%rax),%eax
    b854:	83 f8 05             	cmp    $0x5,%eax
    b857:	74 28                	je     b881 <DestroyBuiltin+0x73>
    b859:	48 8d 05 78 f4 00 00 	lea    0xf478(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.0>
    b860:	48 89 c1             	mov    %rax,%rcx
    b863:	ba b6 00 00 00       	mov    $0xb6,%edx
    b868:	48 8d 05 b9 f3 00 00 	lea    0xf3b9(%rip),%rax        # 1ac28 <__PRETTY_FUNCTION__.0+0x18>
    b86f:	48 89 c6             	mov    %rax,%rsi
    b872:	48 8d 05 ef f3 00 00 	lea    0xf3ef(%rip),%rax        # 1ac68 <__PRETTY_FUNCTION__.0+0x58>
    b879:	48 89 c7             	mov    %rax,%rdi
    b87c:	e8 4f 6b ff ff       	call   23d0 <__assert_fail@plt>
    b881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b885:	48 8b 00             	mov    (%rax),%rax
    b888:	48 89 c7             	mov    %rax,%rdi
    b88b:	e8 60 6a ff ff       	call   22f0 <free@plt>
    b890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b894:	48 8b 40 18          	mov    0x18(%rax),%rax
    b898:	48 89 c7             	mov    %rax,%rdi
    b89b:	e8 23 de ff ff       	call   96c3 <destroy_list>
    b8a0:	90                   	nop
    b8a1:	c9                   	leave
    b8a2:	c3                   	ret

000000000000b8a3 <PrintHashTable>:
    b8a3:	f3 0f 1e fa          	endbr64
    b8a7:	55                   	push   %rbp
    b8a8:	48 89 e5             	mov    %rsp,%rbp
    b8ab:	48 83 ec 40          	sub    $0x40,%rsp
    b8af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b8b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b8b7:	89 55 cc             	mov    %edx,-0x34(%rbp)
    b8ba:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    b8c1:	e9 27 01 00 00       	jmp    b9ed <PrintHashTable+0x14a>
    b8c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b8ca:	8b 55 e8             	mov    -0x18(%rbp),%edx
    b8cd:	48 63 d2             	movslq %edx,%rdx
    b8d0:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b8d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b8d8:	e9 01 01 00 00       	jmp    b9de <PrintHashTable+0x13b>
    b8dd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b8e4:	eb 24                	jmp    b90a <PrintHashTable+0x67>
    b8e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b8ea:	48 89 c1             	mov    %rax,%rcx
    b8ed:	ba 02 00 00 00       	mov    $0x2,%edx
    b8f2:	be 01 00 00 00       	mov    $0x1,%esi
    b8f7:	48 8d 05 98 f3 00 00 	lea    0xf398(%rip),%rax        # 1ac96 <__PRETTY_FUNCTION__.0+0x86>
    b8fe:	48 89 c7             	mov    %rax,%rdi
    b901:	e8 4a 6c ff ff       	call   2550 <fwrite@plt>
    b906:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b90a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    b90d:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    b910:	7c d4                	jl     b8e6 <PrintHashTable+0x43>
    b912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b916:	48 8b 40 08          	mov    0x8(%rax),%rax
    b91a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b91e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b922:	8b 70 14             	mov    0x14(%rax),%esi
    b925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b929:	8b 48 10             	mov    0x10(%rax),%ecx
    b92c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b930:	48 8b 10             	mov    (%rax),%rdx
    b933:	8b 7d e8             	mov    -0x18(%rbp),%edi
    b936:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b93a:	41 89 f9             	mov    %edi,%r9d
    b93d:	41 89 f0             	mov    %esi,%r8d
    b940:	48 8d 35 59 f3 00 00 	lea    0xf359(%rip),%rsi        # 1aca0 <__PRETTY_FUNCTION__.0+0x90>
    b947:	48 89 c7             	mov    %rax,%rdi
    b94a:	b8 00 00 00 00       	mov    $0x0,%eax
    b94f:	e8 1c 6b ff ff       	call   2470 <fprintf@plt>
    b954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b958:	48 8b 40 18          	mov    0x18(%rax),%rax
    b95c:	48 85 c0             	test   %rax,%rax
    b95f:	74 71                	je     b9d2 <PrintHashTable+0x12f>
    b961:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b968:	eb 24                	jmp    b98e <PrintHashTable+0xeb>
    b96a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b96e:	48 89 c1             	mov    %rax,%rcx
    b971:	ba 02 00 00 00       	mov    $0x2,%edx
    b976:	be 01 00 00 00       	mov    $0x1,%esi
    b97b:	48 8d 05 14 f3 00 00 	lea    0xf314(%rip),%rax        # 1ac96 <__PRETTY_FUNCTION__.0+0x86>
    b982:	48 89 c7             	mov    %rax,%rdi
    b985:	e8 c6 6b ff ff       	call   2550 <fwrite@plt>
    b98a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b98e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    b991:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    b994:	7d d4                	jge    b96a <PrintHashTable+0xc7>
    b996:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b99a:	48 89 c1             	mov    %rax,%rcx
    b99d:	ba 08 00 00 00       	mov    $0x8,%edx
    b9a2:	be 01 00 00 00       	mov    $0x1,%esi
    b9a7:	48 8d 05 21 f3 00 00 	lea    0xf321(%rip),%rax        # 1accf <__PRETTY_FUNCTION__.0+0xbf>
    b9ae:	48 89 c7             	mov    %rax,%rdi
    b9b1:	e8 9a 6b ff ff       	call   2550 <fwrite@plt>
    b9b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ba:	48 8b 40 18          	mov    0x18(%rax),%rax
    b9be:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b9c2:	ba 00 00 00 00       	mov    $0x0,%edx
    b9c7:	48 89 ce             	mov    %rcx,%rsi
    b9ca:	48 89 c7             	mov    %rax,%rdi
    b9cd:	e8 fe ca ff ff       	call   84d0 <PrintList>
    b9d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9d6:	48 8b 40 10          	mov    0x10(%rax),%rax
    b9da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b9de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b9e3:	0f 85 f4 fe ff ff    	jne    b8dd <PrintHashTable+0x3a>
    b9e9:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    b9ed:	81 7d e8 d2 00 00 00 	cmpl   $0xd2,-0x18(%rbp)
    b9f4:	0f 8e cc fe ff ff    	jle    b8c6 <PrintHashTable+0x23>
    b9fa:	90                   	nop
    b9fb:	90                   	nop
    b9fc:	c9                   	leave
    b9fd:	c3                   	ret

000000000000b9fe <hashpjw>:
    b9fe:	f3 0f 1e fa          	endbr64
    ba02:	55                   	push   %rbp
    ba03:	48 89 e5             	mov    %rsp,%rbp
    ba06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba0a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    ba11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ba19:	eb 3c                	jmp    ba57 <hashpjw+0x59>
    ba1b:	8b 45 f0             	mov    -0x10(%rbp),%eax
    ba1e:	c1 e0 04             	shl    $0x4,%eax
    ba21:	89 c2                	mov    %eax,%edx
    ba23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba27:	0f b6 00             	movzbl (%rax),%eax
    ba2a:	0f be c0             	movsbl %al,%eax
    ba2d:	01 d0                	add    %edx,%eax
    ba2f:	89 45 f0             	mov    %eax,-0x10(%rbp)
    ba32:	8b 45 f0             	mov    -0x10(%rbp),%eax
    ba35:	25 00 00 00 f0       	and    $0xf0000000,%eax
    ba3a:	89 45 f4             	mov    %eax,-0xc(%rbp)
    ba3d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    ba41:	74 0f                	je     ba52 <hashpjw+0x54>
    ba43:	8b 45 f4             	mov    -0xc(%rbp),%eax
    ba46:	c1 e8 18             	shr    $0x18,%eax
    ba49:	31 45 f0             	xor    %eax,-0x10(%rbp)
    ba4c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    ba4f:	31 45 f0             	xor    %eax,-0x10(%rbp)
    ba52:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    ba57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba5b:	0f b6 00             	movzbl (%rax),%eax
    ba5e:	84 c0                	test   %al,%al
    ba60:	75 b9                	jne    ba1b <hashpjw+0x1d>
    ba62:	8b 4d f0             	mov    -0x10(%rbp),%ecx
    ba65:	89 ca                	mov    %ecx,%edx
    ba67:	b8 9f 6f 4c 9b       	mov    $0x9b4c6f9f,%eax
    ba6c:	48 0f af c2          	imul   %rdx,%rax
    ba70:	48 c1 e8 20          	shr    $0x20,%rax
    ba74:	c1 e8 07             	shr    $0x7,%eax
    ba77:	69 d0 d3 00 00 00    	imul   $0xd3,%eax,%edx
    ba7d:	89 c8                	mov    %ecx,%eax
    ba7f:	29 d0                	sub    %edx,%eax
    ba81:	5d                   	pop    %rbp
    ba82:	c3                   	ret

000000000000ba83 <InitSymTab>:
    ba83:	f3 0f 1e fa          	endbr64
    ba87:	55                   	push   %rbp
    ba88:	48 89 e5             	mov    %rsp,%rbp
    ba8b:	48 83 ec 10          	sub    $0x10,%rsp
    ba8f:	bf 10 00 00 00       	mov    $0x10,%edi
    ba94:	e8 37 6a ff ff       	call   24d0 <malloc@plt>
    ba99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ba9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    baa8:	b8 00 00 00 00       	mov    $0x0,%eax
    baad:	e8 e5 f8 ff ff       	call   b397 <InitHashTable>
    bab2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bab6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    baba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    babe:	c9                   	leave
    babf:	c3                   	ret

000000000000bac0 <AddBuiltinProc>:
    bac0:	f3 0f 1e fa          	endbr64
    bac4:	55                   	push   %rbp
    bac5:	48 89 e5             	mov    %rsp,%rbp
    bac8:	48 83 ec 20          	sub    $0x20,%rsp
    bacc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bad4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    bad8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    badd:	75 28                	jne    bb07 <AddBuiltinProc+0x47>
    badf:	48 8d 05 8a f2 00 00 	lea    0xf28a(%rip),%rax        # 1ad70 <__PRETTY_FUNCTION__.12>
    bae6:	48 89 c1             	mov    %rax,%rcx
    bae9:	ba 22 00 00 00       	mov    $0x22,%edx
    baee:	48 8d 05 fb f1 00 00 	lea    0xf1fb(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    baf5:	48 89 c6             	mov    %rax,%rsi
    baf8:	48 8d 05 1d f2 00 00 	lea    0xf21d(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    baff:	48 89 c7             	mov    %rax,%rdi
    bb02:	e8 c9 68 ff ff       	call   23d0 <__assert_fail@plt>
    bb07:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bb0c:	75 28                	jne    bb36 <AddBuiltinProc+0x76>
    bb0e:	48 8d 05 5b f2 00 00 	lea    0xf25b(%rip),%rax        # 1ad70 <__PRETTY_FUNCTION__.12>
    bb15:	48 89 c1             	mov    %rax,%rcx
    bb18:	ba 23 00 00 00       	mov    $0x23,%edx
    bb1d:	48 8d 05 cc f1 00 00 	lea    0xf1cc(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bb24:	48 89 c6             	mov    %rax,%rsi
    bb27:	48 8d 05 fd f1 00 00 	lea    0xf1fd(%rip),%rax        # 1ad2b <__PRETTY_FUNCTION__.0+0x53>
    bb2e:	48 89 c7             	mov    %rax,%rdi
    bb31:	e8 9a 68 ff ff       	call   23d0 <__assert_fail@plt>
    bb36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb3a:	48 8b 40 08          	mov    0x8(%rax),%rax
    bb3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb42:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bb46:	49 89 d1             	mov    %rdx,%r9
    bb49:	41 b8 05 00 00 00    	mov    $0x5,%r8d
    bb4f:	b9 03 00 00 00       	mov    $0x3,%ecx
    bb54:	ba 00 00 00 00       	mov    $0x0,%edx
    bb59:	48 89 c7             	mov    %rax,%rdi
    bb5c:	e8 7e f8 ff ff       	call   b3df <AddIdentToTable>
    bb61:	c9                   	leave
    bb62:	c3                   	ret

000000000000bb63 <AddBuiltinType>:
    bb63:	f3 0f 1e fa          	endbr64
    bb67:	55                   	push   %rbp
    bb68:	48 89 e5             	mov    %rsp,%rbp
    bb6b:	48 83 ec 20          	sub    $0x20,%rsp
    bb6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb77:	89 55 ec             	mov    %edx,-0x14(%rbp)
    bb7a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    bb7f:	75 28                	jne    bba9 <AddBuiltinType+0x46>
    bb81:	48 8d 05 f8 f1 00 00 	lea    0xf1f8(%rip),%rax        # 1ad80 <__PRETTY_FUNCTION__.11>
    bb88:	48 89 c1             	mov    %rax,%rcx
    bb8b:	ba 2b 00 00 00       	mov    $0x2b,%edx
    bb90:	48 8d 05 59 f1 00 00 	lea    0xf159(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bb97:	48 89 c6             	mov    %rax,%rsi
    bb9a:	48 8d 05 7b f1 00 00 	lea    0xf17b(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bba1:	48 89 c7             	mov    %rax,%rdi
    bba4:	e8 27 68 ff ff       	call   23d0 <__assert_fail@plt>
    bba9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bbae:	75 28                	jne    bbd8 <AddBuiltinType+0x75>
    bbb0:	48 8d 05 c9 f1 00 00 	lea    0xf1c9(%rip),%rax        # 1ad80 <__PRETTY_FUNCTION__.11>
    bbb7:	48 89 c1             	mov    %rax,%rcx
    bbba:	ba 2c 00 00 00       	mov    $0x2c,%edx
    bbbf:	48 8d 05 2a f1 00 00 	lea    0xf12a(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bbc6:	48 89 c6             	mov    %rax,%rsi
    bbc9:	48 8d 05 5b f1 00 00 	lea    0xf15b(%rip),%rax        # 1ad2b <__PRETTY_FUNCTION__.0+0x53>
    bbd0:	48 89 c7             	mov    %rax,%rdi
    bbd3:	e8 f8 67 ff ff       	call   23d0 <__assert_fail@plt>
    bbd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbdc:	48 8b 40 08          	mov    0x8(%rax),%rax
    bbe0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    bbe3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bbe7:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    bbed:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    bbf3:	89 d1                	mov    %edx,%ecx
    bbf5:	ba 00 00 00 00       	mov    $0x0,%edx
    bbfa:	48 89 c7             	mov    %rax,%rdi
    bbfd:	e8 dd f7 ff ff       	call   b3df <AddIdentToTable>
    bc02:	c9                   	leave
    bc03:	c3                   	ret

000000000000bc04 <PushScope>:
    bc04:	f3 0f 1e fa          	endbr64
    bc08:	55                   	push   %rbp
    bc09:	48 89 e5             	mov    %rsp,%rbp
    bc0c:	48 83 ec 20          	sub    $0x20,%rsp
    bc10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc14:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bc19:	75 28                	jne    bc43 <PushScope+0x3f>
    bc1b:	48 8d 05 6e f1 00 00 	lea    0xf16e(%rip),%rax        # 1ad90 <__PRETTY_FUNCTION__.10>
    bc22:	48 89 c1             	mov    %rax,%rcx
    bc25:	ba 34 00 00 00       	mov    $0x34,%edx
    bc2a:	48 8d 05 bf f0 00 00 	lea    0xf0bf(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bc31:	48 89 c6             	mov    %rax,%rsi
    bc34:	48 8d 05 e1 f0 00 00 	lea    0xf0e1(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bc3b:	48 89 c7             	mov    %rax,%rdi
    bc3e:	e8 8d 67 ff ff       	call   23d0 <__assert_fail@plt>
    bc43:	b8 00 00 00 00       	mov    $0x0,%eax
    bc48:	e8 4a f7 ff ff       	call   b397 <InitHashTable>
    bc4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bc51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc55:	48 8b 00             	mov    (%rax),%rax
    bc58:	48 85 c0             	test   %rax,%rax
    bc5b:	75 1a                	jne    bc77 <PushScope+0x73>
    bc5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc61:	be 04 00 00 00       	mov    $0x4,%esi
    bc66:	48 89 c7             	mov    %rax,%rdi
    bc69:	e8 8d c5 ff ff       	call   81fb <CreateListNode>
    bc6e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc72:	48 89 02             	mov    %rax,(%rdx)
    bc75:	eb 2d                	jmp    bca4 <PushScope+0xa0>
    bc77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc7b:	be 04 00 00 00       	mov    $0x4,%esi
    bc80:	48 89 c7             	mov    %rax,%rdi
    bc83:	e8 73 c5 ff ff       	call   81fb <CreateListNode>
    bc88:	48 89 c2             	mov    %rax,%rdx
    bc8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc8f:	48 8b 00             	mov    (%rax),%rax
    bc92:	48 89 d6             	mov    %rdx,%rsi
    bc95:	48 89 c7             	mov    %rax,%rdi
    bc98:	e8 a6 c5 ff ff       	call   8243 <PushListNodeFront>
    bc9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bca1:	48 89 02             	mov    %rax,(%rdx)
    bca4:	90                   	nop
    bca5:	c9                   	leave
    bca6:	c3                   	ret

000000000000bca7 <PushVarOntoScope>:
    bca7:	f3 0f 1e fa          	endbr64
    bcab:	55                   	push   %rbp
    bcac:	48 89 e5             	mov    %rsp,%rbp
    bcaf:	48 83 ec 30          	sub    $0x30,%rsp
    bcb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bcb7:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    bcba:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bcbe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bcc3:	75 28                	jne    bced <PushVarOntoScope+0x46>
    bcc5:	48 8d 05 d4 f0 00 00 	lea    0xf0d4(%rip),%rax        # 1ada0 <__PRETTY_FUNCTION__.9>
    bccc:	48 89 c1             	mov    %rax,%rcx
    bccf:	ba 43 00 00 00       	mov    $0x43,%edx
    bcd4:	48 8d 05 15 f0 00 00 	lea    0xf015(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bcdb:	48 89 c6             	mov    %rax,%rsi
    bcde:	48 8d 05 37 f0 00 00 	lea    0xf037(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bce5:	48 89 c7             	mov    %rax,%rdi
    bce8:	e8 e3 66 ff ff       	call   23d0 <__assert_fail@plt>
    bced:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcf1:	48 8b 00             	mov    (%rax),%rax
    bcf4:	48 85 c0             	test   %rax,%rax
    bcf7:	75 28                	jne    bd21 <PushVarOntoScope+0x7a>
    bcf9:	48 8d 05 a0 f0 00 00 	lea    0xf0a0(%rip),%rax        # 1ada0 <__PRETTY_FUNCTION__.9>
    bd00:	48 89 c1             	mov    %rax,%rcx
    bd03:	ba 44 00 00 00       	mov    $0x44,%edx
    bd08:	48 8d 05 e1 ef 00 00 	lea    0xefe1(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bd0f:	48 89 c6             	mov    %rax,%rsi
    bd12:	48 8d 05 1d f0 00 00 	lea    0xf01d(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bd19:	48 89 c7             	mov    %rax,%rdi
    bd1c:	e8 af 66 ff ff       	call   23d0 <__assert_fail@plt>
    bd21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd25:	48 8b 40 08          	mov    0x8(%rax),%rax
    bd29:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bd2d:	48 89 d6             	mov    %rdx,%rsi
    bd30:	48 89 c7             	mov    %rax,%rdi
    bd33:	e8 c5 f8 ff ff       	call   b5fd <FindIdentInTable>
    bd38:	48 85 c0             	test   %rax,%rax
    bd3b:	75 37                	jne    bd74 <PushVarOntoScope+0xcd>
    bd3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd41:	48 8b 00             	mov    (%rax),%rax
    bd44:	48 8b 40 08          	mov    0x8(%rax),%rax
    bd48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bd4c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    bd4f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    bd53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd57:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    bd5d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    bd63:	89 d1                	mov    %edx,%ecx
    bd65:	ba 00 00 00 00       	mov    $0x0,%edx
    bd6a:	48 89 c7             	mov    %rax,%rdi
    bd6d:	e8 6d f6 ff ff       	call   b3df <AddIdentToTable>
    bd72:	eb 05                	jmp    bd79 <PushVarOntoScope+0xd2>
    bd74:	b8 01 00 00 00       	mov    $0x1,%eax
    bd79:	c9                   	leave
    bd7a:	c3                   	ret

000000000000bd7b <PushArrayOntoScope>:
    bd7b:	f3 0f 1e fa          	endbr64
    bd7f:	55                   	push   %rbp
    bd80:	48 89 e5             	mov    %rsp,%rbp
    bd83:	48 83 ec 30          	sub    $0x30,%rsp
    bd87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd8b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    bd8e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bd92:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bd97:	75 28                	jne    bdc1 <PushArrayOntoScope+0x46>
    bd99:	48 8d 05 20 f0 00 00 	lea    0xf020(%rip),%rax        # 1adc0 <__PRETTY_FUNCTION__.8>
    bda0:	48 89 c1             	mov    %rax,%rcx
    bda3:	ba 57 00 00 00       	mov    $0x57,%edx
    bda8:	48 8d 05 41 ef 00 00 	lea    0xef41(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bdaf:	48 89 c6             	mov    %rax,%rsi
    bdb2:	48 8d 05 63 ef 00 00 	lea    0xef63(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bdb9:	48 89 c7             	mov    %rax,%rdi
    bdbc:	e8 0f 66 ff ff       	call   23d0 <__assert_fail@plt>
    bdc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdc5:	48 8b 00             	mov    (%rax),%rax
    bdc8:	48 85 c0             	test   %rax,%rax
    bdcb:	75 28                	jne    bdf5 <PushArrayOntoScope+0x7a>
    bdcd:	48 8d 05 ec ef 00 00 	lea    0xefec(%rip),%rax        # 1adc0 <__PRETTY_FUNCTION__.8>
    bdd4:	48 89 c1             	mov    %rax,%rcx
    bdd7:	ba 58 00 00 00       	mov    $0x58,%edx
    bddc:	48 8d 05 0d ef 00 00 	lea    0xef0d(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bde3:	48 89 c6             	mov    %rax,%rsi
    bde6:	48 8d 05 49 ef 00 00 	lea    0xef49(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bded:	48 89 c7             	mov    %rax,%rdi
    bdf0:	e8 db 65 ff ff       	call   23d0 <__assert_fail@plt>
    bdf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdf9:	48 8b 40 08          	mov    0x8(%rax),%rax
    bdfd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    be01:	48 89 d6             	mov    %rdx,%rsi
    be04:	48 89 c7             	mov    %rax,%rdi
    be07:	e8 f1 f7 ff ff       	call   b5fd <FindIdentInTable>
    be0c:	48 85 c0             	test   %rax,%rax
    be0f:	75 37                	jne    be48 <PushArrayOntoScope+0xcd>
    be11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be15:	48 8b 00             	mov    (%rax),%rax
    be18:	48 8b 40 08          	mov    0x8(%rax),%rax
    be1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    be20:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    be23:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    be27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be2b:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    be31:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    be37:	89 d1                	mov    %edx,%ecx
    be39:	ba 00 00 00 00       	mov    $0x0,%edx
    be3e:	48 89 c7             	mov    %rax,%rdi
    be41:	e8 99 f5 ff ff       	call   b3df <AddIdentToTable>
    be46:	eb 05                	jmp    be4d <PushArrayOntoScope+0xd2>
    be48:	b8 01 00 00 00       	mov    $0x1,%eax
    be4d:	c9                   	leave
    be4e:	c3                   	ret

000000000000be4f <PushProcedureOntoScope>:
    be4f:	f3 0f 1e fa          	endbr64
    be53:	55                   	push   %rbp
    be54:	48 89 e5             	mov    %rsp,%rbp
    be57:	48 83 ec 30          	sub    $0x30,%rsp
    be5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be5f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    be63:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    be67:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    be6b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    be70:	75 28                	jne    be9a <PushProcedureOntoScope+0x4b>
    be72:	48 8d 05 67 ef 00 00 	lea    0xef67(%rip),%rax        # 1ade0 <__PRETTY_FUNCTION__.7>
    be79:	48 89 c1             	mov    %rax,%rcx
    be7c:	ba 6c 00 00 00       	mov    $0x6c,%edx
    be81:	48 8d 05 68 ee 00 00 	lea    0xee68(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    be88:	48 89 c6             	mov    %rax,%rsi
    be8b:	48 8d 05 8a ee 00 00 	lea    0xee8a(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    be92:	48 89 c7             	mov    %rax,%rdi
    be95:	e8 36 65 ff ff       	call   23d0 <__assert_fail@plt>
    be9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be9e:	48 8b 00             	mov    (%rax),%rax
    bea1:	48 85 c0             	test   %rax,%rax
    bea4:	75 28                	jne    bece <PushProcedureOntoScope+0x7f>
    bea6:	48 8d 05 33 ef 00 00 	lea    0xef33(%rip),%rax        # 1ade0 <__PRETTY_FUNCTION__.7>
    bead:	48 89 c1             	mov    %rax,%rcx
    beb0:	ba 6d 00 00 00       	mov    $0x6d,%edx
    beb5:	48 8d 05 34 ee 00 00 	lea    0xee34(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bebc:	48 89 c6             	mov    %rax,%rsi
    bebf:	48 8d 05 70 ee 00 00 	lea    0xee70(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bec6:	48 89 c7             	mov    %rax,%rdi
    bec9:	e8 02 65 ff ff       	call   23d0 <__assert_fail@plt>
    bece:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bed2:	48 8b 40 08          	mov    0x8(%rax),%rax
    bed6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    beda:	48 89 d6             	mov    %rdx,%rsi
    bedd:	48 89 c7             	mov    %rax,%rdi
    bee0:	e8 18 f7 ff ff       	call   b5fd <FindIdentInTable>
    bee5:	48 85 c0             	test   %rax,%rax
    bee8:	75 37                	jne    bf21 <PushProcedureOntoScope+0xd2>
    beea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    beee:	48 8b 00             	mov    (%rax),%rax
    bef1:	48 8b 40 08          	mov    0x8(%rax),%rax
    bef5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bef9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    befd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bf01:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    bf05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf09:	49 89 c9             	mov    %rcx,%r9
    bf0c:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    bf12:	b9 03 00 00 00       	mov    $0x3,%ecx
    bf17:	48 89 c7             	mov    %rax,%rdi
    bf1a:	e8 c0 f4 ff ff       	call   b3df <AddIdentToTable>
    bf1f:	eb 05                	jmp    bf26 <PushProcedureOntoScope+0xd7>
    bf21:	b8 01 00 00 00       	mov    $0x1,%eax
    bf26:	c9                   	leave
    bf27:	c3                   	ret

000000000000bf28 <PushFunctionOntoScope>:
    bf28:	f3 0f 1e fa          	endbr64
    bf2c:	55                   	push   %rbp
    bf2d:	48 89 e5             	mov    %rsp,%rbp
    bf30:	48 83 ec 40          	sub    $0x40,%rsp
    bf34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf38:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bf3c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bf40:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    bf43:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    bf47:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bf4c:	75 28                	jne    bf76 <PushFunctionOntoScope+0x4e>
    bf4e:	48 8d 05 ab ee 00 00 	lea    0xeeab(%rip),%rax        # 1ae00 <__PRETTY_FUNCTION__.6>
    bf55:	48 89 c1             	mov    %rax,%rcx
    bf58:	ba 81 00 00 00       	mov    $0x81,%edx
    bf5d:	48 8d 05 8c ed 00 00 	lea    0xed8c(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bf64:	48 89 c6             	mov    %rax,%rsi
    bf67:	48 8d 05 ae ed 00 00 	lea    0xedae(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bf6e:	48 89 c7             	mov    %rax,%rdi
    bf71:	e8 5a 64 ff ff       	call   23d0 <__assert_fail@plt>
    bf76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf7a:	48 8b 00             	mov    (%rax),%rax
    bf7d:	48 85 c0             	test   %rax,%rax
    bf80:	75 28                	jne    bfaa <PushFunctionOntoScope+0x82>
    bf82:	48 8d 05 77 ee 00 00 	lea    0xee77(%rip),%rax        # 1ae00 <__PRETTY_FUNCTION__.6>
    bf89:	48 89 c1             	mov    %rax,%rcx
    bf8c:	ba 82 00 00 00       	mov    $0x82,%edx
    bf91:	48 8d 05 58 ed 00 00 	lea    0xed58(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bf98:	48 89 c6             	mov    %rax,%rsi
    bf9b:	48 8d 05 94 ed 00 00 	lea    0xed94(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bfa2:	48 89 c7             	mov    %rax,%rdi
    bfa5:	e8 26 64 ff ff       	call   23d0 <__assert_fail@plt>
    bfaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfae:	48 8b 40 08          	mov    0x8(%rax),%rax
    bfb2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bfb6:	48 89 d6             	mov    %rdx,%rsi
    bfb9:	48 89 c7             	mov    %rax,%rdi
    bfbc:	e8 3c f6 ff ff       	call   b5fd <FindIdentInTable>
    bfc1:	48 85 c0             	test   %rax,%rax
    bfc4:	75 35                	jne    bffb <PushFunctionOntoScope+0xd3>
    bfc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfca:	48 8b 00             	mov    (%rax),%rax
    bfcd:	48 8b 40 08          	mov    0x8(%rax),%rax
    bfd1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bfd5:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    bfd9:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bfdc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bfe0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    bfe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe8:	49 89 f9             	mov    %rdi,%r9
    bfeb:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    bff1:	48 89 c7             	mov    %rax,%rdi
    bff4:	e8 e6 f3 ff ff       	call   b3df <AddIdentToTable>
    bff9:	eb 05                	jmp    c000 <PushFunctionOntoScope+0xd8>
    bffb:	b8 01 00 00 00       	mov    $0x1,%eax
    c000:	c9                   	leave
    c001:	c3                   	ret

000000000000c002 <PushFuncRetOntoScope>:
    c002:	f3 0f 1e fa          	endbr64
    c006:	55                   	push   %rbp
    c007:	48 89 e5             	mov    %rsp,%rbp
    c00a:	48 83 ec 30          	sub    $0x30,%rsp
    c00e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c012:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c016:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c019:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    c01d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c022:	75 28                	jne    c04c <PushFuncRetOntoScope+0x4a>
    c024:	48 8d 05 f5 ed 00 00 	lea    0xedf5(%rip),%rax        # 1ae20 <__PRETTY_FUNCTION__.5>
    c02b:	48 89 c1             	mov    %rax,%rcx
    c02e:	ba 96 00 00 00       	mov    $0x96,%edx
    c033:	48 8d 05 b6 ec 00 00 	lea    0xecb6(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c03a:	48 89 c6             	mov    %rax,%rsi
    c03d:	48 8d 05 d8 ec 00 00 	lea    0xecd8(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c044:	48 89 c7             	mov    %rax,%rdi
    c047:	e8 84 63 ff ff       	call   23d0 <__assert_fail@plt>
    c04c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c050:	48 8b 00             	mov    (%rax),%rax
    c053:	48 85 c0             	test   %rax,%rax
    c056:	75 28                	jne    c080 <PushFuncRetOntoScope+0x7e>
    c058:	48 8d 05 c1 ed 00 00 	lea    0xedc1(%rip),%rax        # 1ae20 <__PRETTY_FUNCTION__.5>
    c05f:	48 89 c1             	mov    %rax,%rcx
    c062:	ba 97 00 00 00       	mov    $0x97,%edx
    c067:	48 8d 05 82 ec 00 00 	lea    0xec82(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c06e:	48 89 c6             	mov    %rax,%rsi
    c071:	48 8d 05 be ec 00 00 	lea    0xecbe(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    c078:	48 89 c7             	mov    %rax,%rdi
    c07b:	e8 50 63 ff ff       	call   23d0 <__assert_fail@plt>
    c080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c084:	48 8b 40 08          	mov    0x8(%rax),%rax
    c088:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c08c:	48 89 d6             	mov    %rdx,%rsi
    c08f:	48 89 c7             	mov    %rax,%rdi
    c092:	e8 66 f5 ff ff       	call   b5fd <FindIdentInTable>
    c097:	48 85 c0             	test   %rax,%rax
    c09a:	75 38                	jne    c0d4 <PushFuncRetOntoScope+0xd2>
    c09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0a0:	48 8b 00             	mov    (%rax),%rax
    c0a3:	48 8b 40 08          	mov    0x8(%rax),%rax
    c0a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c0ab:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c0af:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c0b2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c0b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0ba:	49 89 c9             	mov    %rcx,%r9
    c0bd:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    c0c3:	89 d1                	mov    %edx,%ecx
    c0c5:	ba 00 00 00 00       	mov    $0x0,%edx
    c0ca:	48 89 c7             	mov    %rax,%rdi
    c0cd:	e8 0d f3 ff ff       	call   b3df <AddIdentToTable>
    c0d2:	eb 05                	jmp    c0d9 <PushFuncRetOntoScope+0xd7>
    c0d4:	b8 01 00 00 00       	mov    $0x1,%eax
    c0d9:	c9                   	leave
    c0da:	c3                   	ret

000000000000c0db <FindIdent>:
    c0db:	f3 0f 1e fa          	endbr64
    c0df:	55                   	push   %rbp
    c0e0:	48 89 e5             	mov    %rsp,%rbp
    c0e3:	48 83 ec 40          	sub    $0x40,%rsp
    c0e7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c0eb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c0ef:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c0f3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    c0fa:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c0ff:	75 28                	jne    c129 <FindIdent+0x4e>
    c101:	48 8d 05 30 ed 00 00 	lea    0xed30(%rip),%rax        # 1ae38 <__PRETTY_FUNCTION__.4>
    c108:	48 89 c1             	mov    %rax,%rcx
    c10b:	ba ae 00 00 00       	mov    $0xae,%edx
    c110:	48 8d 05 d9 eb 00 00 	lea    0xebd9(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c117:	48 89 c6             	mov    %rax,%rsi
    c11a:	48 8d 05 fb eb 00 00 	lea    0xebfb(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c121:	48 89 c7             	mov    %rax,%rdi
    c124:	e8 a7 62 ff ff       	call   23d0 <__assert_fail@plt>
    c129:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c12e:	75 28                	jne    c158 <FindIdent+0x7d>
    c130:	48 8d 05 01 ed 00 00 	lea    0xed01(%rip),%rax        # 1ae38 <__PRETTY_FUNCTION__.4>
    c137:	48 89 c1             	mov    %rax,%rcx
    c13a:	ba af 00 00 00       	mov    $0xaf,%edx
    c13f:	48 8d 05 aa eb 00 00 	lea    0xebaa(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c146:	48 89 c6             	mov    %rax,%rsi
    c149:	48 8d 05 db eb 00 00 	lea    0xebdb(%rip),%rax        # 1ad2b <__PRETTY_FUNCTION__.0+0x53>
    c150:	48 89 c7             	mov    %rax,%rdi
    c153:	e8 78 62 ff ff       	call   23d0 <__assert_fail@plt>
    c158:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c15c:	48 8b 40 08          	mov    0x8(%rax),%rax
    c160:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c164:	48 89 d6             	mov    %rdx,%rsi
    c167:	48 89 c7             	mov    %rax,%rdi
    c16a:	e8 8e f4 ff ff       	call   b5fd <FindIdentInTable>
    c16f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c173:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c178:	74 10                	je     c18a <FindIdent+0xaf>
    c17a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c17e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c182:	48 89 10             	mov    %rdx,(%rax)
    c185:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c188:	eb 6b                	jmp    c1f5 <FindIdent+0x11a>
    c18a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c18e:	48 8b 00             	mov    (%rax),%rax
    c191:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c195:	eb 42                	jmp    c1d9 <FindIdent+0xfe>
    c197:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c19b:	48 8b 40 08          	mov    0x8(%rax),%rax
    c19f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c1a3:	48 89 d6             	mov    %rdx,%rsi
    c1a6:	48 89 c7             	mov    %rax,%rdi
    c1a9:	e8 4f f4 ff ff       	call   b5fd <FindIdentInTable>
    c1ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c1b2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c1b7:	74 10                	je     c1c9 <FindIdent+0xee>
    c1b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c1c1:	48 89 10             	mov    %rdx,(%rax)
    c1c4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c1c7:	eb 2c                	jmp    c1f5 <FindIdent+0x11a>
    c1c9:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    c1cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1d1:	48 8b 40 10          	mov    0x10(%rax),%rax
    c1d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c1d9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c1de:	75 b7                	jne    c197 <FindIdent+0xbc>
    c1e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c1eb:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    c1f2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c1f5:	c9                   	leave
    c1f6:	c3                   	ret

000000000000c1f7 <FindAllIdents>:
    c1f7:	f3 0f 1e fa          	endbr64
    c1fb:	55                   	push   %rbp
    c1fc:	48 89 e5             	mov    %rsp,%rbp
    c1ff:	48 83 ec 20          	sub    $0x20,%rsp
    c203:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c207:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c20b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c212:	00
    c213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c217:	48 8b 00             	mov    (%rax),%rax
    c21a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c21e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c222:	48 8b 40 08          	mov    0x8(%rax),%rax
    c226:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c22a:	48 89 d6             	mov    %rdx,%rsi
    c22d:	48 89 c7             	mov    %rax,%rdi
    c230:	e8 51 f4 ff ff       	call   b686 <FindAllIdentsInTable>
    c235:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c239:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c23e:	74 3a                	je     c27a <FindAllIdents+0x83>
    c240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c244:	eb 40                	jmp    c286 <FindAllIdents+0x8f>
    c246:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c24a:	48 8b 40 08          	mov    0x8(%rax),%rax
    c24e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c252:	48 89 d6             	mov    %rdx,%rsi
    c255:	48 89 c7             	mov    %rax,%rdi
    c258:	e8 29 f4 ff ff       	call   b686 <FindAllIdentsInTable>
    c25d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c261:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c266:	74 06                	je     c26e <FindAllIdents+0x77>
    c268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c26c:	eb 18                	jmp    c286 <FindAllIdents+0x8f>
    c26e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c272:	48 8b 40 10          	mov    0x10(%rax),%rax
    c276:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c27a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c27f:	75 c5                	jne    c246 <FindAllIdents+0x4f>
    c281:	b8 00 00 00 00       	mov    $0x0,%eax
    c286:	c9                   	leave
    c287:	c3                   	ret

000000000000c288 <PushTypeOntoScope>:
    c288:	f3 0f 1e fa          	endbr64
    c28c:	55                   	push   %rbp
    c28d:	48 89 e5             	mov    %rsp,%rbp
    c290:	48 83 ec 30          	sub    $0x30,%rsp
    c294:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c298:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c29c:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c29f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c2a4:	75 28                	jne    c2ce <PushTypeOntoScope+0x46>
    c2a6:	48 8d 05 a3 eb 00 00 	lea    0xeba3(%rip),%rax        # 1ae50 <__PRETTY_FUNCTION__.3>
    c2ad:	48 89 c1             	mov    %rax,%rcx
    c2b0:	ba ef 00 00 00       	mov    $0xef,%edx
    c2b5:	48 8d 05 34 ea 00 00 	lea    0xea34(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c2bc:	48 89 c6             	mov    %rax,%rsi
    c2bf:	48 8d 05 56 ea 00 00 	lea    0xea56(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c2c6:	48 89 c7             	mov    %rax,%rdi
    c2c9:	e8 02 61 ff ff       	call   23d0 <__assert_fail@plt>
    c2ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2d2:	48 8b 00             	mov    (%rax),%rax
    c2d5:	48 85 c0             	test   %rax,%rax
    c2d8:	75 28                	jne    c302 <PushTypeOntoScope+0x7a>
    c2da:	48 8d 05 6f eb 00 00 	lea    0xeb6f(%rip),%rax        # 1ae50 <__PRETTY_FUNCTION__.3>
    c2e1:	48 89 c1             	mov    %rax,%rcx
    c2e4:	ba f0 00 00 00       	mov    $0xf0,%edx
    c2e9:	48 8d 05 00 ea 00 00 	lea    0xea00(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c2f0:	48 89 c6             	mov    %rax,%rsi
    c2f3:	48 8d 05 3c ea 00 00 	lea    0xea3c(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    c2fa:	48 89 c7             	mov    %rax,%rdi
    c2fd:	e8 ce 60 ff ff       	call   23d0 <__assert_fail@plt>
    c302:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c306:	48 8b 40 08          	mov    0x8(%rax),%rax
    c30a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c30e:	48 89 d6             	mov    %rdx,%rsi
    c311:	48 89 c7             	mov    %rax,%rdi
    c314:	e8 e4 f2 ff ff       	call   b5fd <FindIdentInTable>
    c319:	48 85 c0             	test   %rax,%rax
    c31c:	75 37                	jne    c355 <PushTypeOntoScope+0xcd>
    c31e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c322:	48 8b 00             	mov    (%rax),%rax
    c325:	48 8b 40 08          	mov    0x8(%rax),%rax
    c329:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c32d:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c330:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c338:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    c33e:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    c344:	89 d1                	mov    %edx,%ecx
    c346:	ba 00 00 00 00       	mov    $0x0,%edx
    c34b:	48 89 c7             	mov    %rax,%rdi
    c34e:	e8 8c f0 ff ff       	call   b3df <AddIdentToTable>
    c353:	eb 05                	jmp    c35a <PushTypeOntoScope+0xd2>
    c355:	b8 01 00 00 00       	mov    $0x1,%eax
    c35a:	c9                   	leave
    c35b:	c3                   	ret

000000000000c35c <PopScope>:
    c35c:	f3 0f 1e fa          	endbr64
    c360:	55                   	push   %rbp
    c361:	48 89 e5             	mov    %rsp,%rbp
    c364:	48 83 ec 20          	sub    $0x20,%rsp
    c368:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c36c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c371:	75 28                	jne    c39b <PopScope+0x3f>
    c373:	48 8d 05 ee ea 00 00 	lea    0xeaee(%rip),%rax        # 1ae68 <__PRETTY_FUNCTION__.2>
    c37a:	48 89 c1             	mov    %rax,%rcx
    c37d:	ba 02 01 00 00       	mov    $0x102,%edx
    c382:	48 8d 05 67 e9 00 00 	lea    0xe967(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c389:	48 89 c6             	mov    %rax,%rsi
    c38c:	48 8d 05 89 e9 00 00 	lea    0xe989(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c393:	48 89 c7             	mov    %rax,%rdi
    c396:	e8 35 60 ff ff       	call   23d0 <__assert_fail@plt>
    c39b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c39f:	48 8b 00             	mov    (%rax),%rax
    c3a2:	48 85 c0             	test   %rax,%rax
    c3a5:	75 28                	jne    c3cf <PopScope+0x73>
    c3a7:	48 8d 05 ba ea 00 00 	lea    0xeaba(%rip),%rax        # 1ae68 <__PRETTY_FUNCTION__.2>
    c3ae:	48 89 c1             	mov    %rax,%rcx
    c3b1:	ba 03 01 00 00       	mov    $0x103,%edx
    c3b6:	48 8d 05 33 e9 00 00 	lea    0xe933(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c3bd:	48 89 c6             	mov    %rax,%rsi
    c3c0:	48 8d 05 6f e9 00 00 	lea    0xe96f(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    c3c7:	48 89 c7             	mov    %rax,%rdi
    c3ca:	e8 01 60 ff ff       	call   23d0 <__assert_fail@plt>
    c3cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3d3:	48 8b 00             	mov    (%rax),%rax
    c3d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c3da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3de:	48 8b 00             	mov    (%rax),%rax
    c3e1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c3e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3e9:	48 89 10             	mov    %rdx,(%rax)
    c3ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    c3f4:	48 89 c7             	mov    %rax,%rdi
    c3f7:	e8 6e f3 ff ff       	call   b76a <DestroyHashTable>
    c3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c400:	48 89 c7             	mov    %rax,%rdi
    c403:	e8 e8 5e ff ff       	call   22f0 <free@plt>
    c408:	90                   	nop
    c409:	c9                   	leave
    c40a:	c3                   	ret

000000000000c40b <DestroySymTab>:
    c40b:	f3 0f 1e fa          	endbr64
    c40f:	55                   	push   %rbp
    c410:	48 89 e5             	mov    %rsp,%rbp
    c413:	48 83 ec 20          	sub    $0x20,%rsp
    c417:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c41b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c420:	75 28                	jne    c44a <DestroySymTab+0x3f>
    c422:	48 8d 05 4f ea 00 00 	lea    0xea4f(%rip),%rax        # 1ae78 <__PRETTY_FUNCTION__.1>
    c429:	48 89 c1             	mov    %rax,%rcx
    c42c:	ba 11 01 00 00       	mov    $0x111,%edx
    c431:	48 8d 05 b8 e8 00 00 	lea    0xe8b8(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c438:	48 89 c6             	mov    %rax,%rsi
    c43b:	48 8d 05 da e8 00 00 	lea    0xe8da(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c442:	48 89 c7             	mov    %rax,%rdi
    c445:	e8 86 5f ff ff       	call   23d0 <__assert_fail@plt>
    c44a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c44e:	48 8b 00             	mov    (%rax),%rax
    c451:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c455:	eb 30                	jmp    c487 <DestroySymTab+0x7c>
    c457:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c45b:	48 8b 40 10          	mov    0x10(%rax),%rax
    c45f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c467:	48 8b 40 08          	mov    0x8(%rax),%rax
    c46b:	48 89 c7             	mov    %rax,%rdi
    c46e:	e8 f7 f2 ff ff       	call   b76a <DestroyHashTable>
    c473:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c477:	48 89 c7             	mov    %rax,%rdi
    c47a:	e8 71 5e ff ff       	call   22f0 <free@plt>
    c47f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c483:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c487:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c48c:	75 c9                	jne    c457 <DestroySymTab+0x4c>
    c48e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c492:	48 8b 40 08          	mov    0x8(%rax),%rax
    c496:	48 89 c7             	mov    %rax,%rdi
    c499:	e8 cc f2 ff ff       	call   b76a <DestroyHashTable>
    c49e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c4a2:	48 89 c7             	mov    %rax,%rdi
    c4a5:	e8 46 5e ff ff       	call   22f0 <free@plt>
    c4aa:	90                   	nop
    c4ab:	c9                   	leave
    c4ac:	c3                   	ret

000000000000c4ad <PrintSymTab>:
    c4ad:	f3 0f 1e fa          	endbr64
    c4b1:	55                   	push   %rbp
    c4b2:	48 89 e5             	mov    %rsp,%rbp
    c4b5:	48 83 ec 30          	sub    $0x30,%rsp
    c4b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c4bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c4c1:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c4c4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c4c9:	75 28                	jne    c4f3 <PrintSymTab+0x46>
    c4cb:	48 8d 05 b6 e9 00 00 	lea    0xe9b6(%rip),%rax        # 1ae88 <__PRETTY_FUNCTION__.0>
    c4d2:	48 89 c1             	mov    %rax,%rcx
    c4d5:	ba 26 01 00 00       	mov    $0x126,%edx
    c4da:	48 8d 05 0f e8 00 00 	lea    0xe80f(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c4e1:	48 89 c6             	mov    %rax,%rsi
    c4e4:	48 8d 05 31 e8 00 00 	lea    0xe831(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c4eb:	48 89 c7             	mov    %rax,%rdi
    c4ee:	e8 dd 5e ff ff       	call   23d0 <__assert_fail@plt>
    c4f3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    c4fa:	eb 24                	jmp    c520 <PrintSymTab+0x73>
    c4fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c500:	48 89 c1             	mov    %rax,%rcx
    c503:	ba 02 00 00 00       	mov    $0x2,%edx
    c508:	be 01 00 00 00       	mov    $0x1,%esi
    c50d:	48 8d 05 3d e8 00 00 	lea    0xe83d(%rip),%rax        # 1ad51 <__PRETTY_FUNCTION__.0+0x79>
    c514:	48 89 c7             	mov    %rax,%rdi
    c517:	e8 34 60 ff ff       	call   2550 <fwrite@plt>
    c51c:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    c520:	8b 45 f0             	mov    -0x10(%rbp),%eax
    c523:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    c526:	7c d4                	jl     c4fc <PrintSymTab+0x4f>
    c528:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c52c:	48 89 c1             	mov    %rax,%rcx
    c52f:	ba 0d 00 00 00       	mov    $0xd,%edx
    c534:	be 01 00 00 00       	mov    $0x1,%esi
    c539:	48 8d 05 14 e8 00 00 	lea    0xe814(%rip),%rax        # 1ad54 <__PRETTY_FUNCTION__.0+0x7c>
    c540:	48 89 c7             	mov    %rax,%rdi
    c543:	e8 08 60 ff ff       	call   2550 <fwrite@plt>
    c548:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c54b:	8d 50 01             	lea    0x1(%rax),%edx
    c54e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c552:	48 8b 40 08          	mov    0x8(%rax),%rax
    c556:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c55a:	48 89 ce             	mov    %rcx,%rsi
    c55d:	48 89 c7             	mov    %rax,%rdi
    c560:	e8 3e f3 ff ff       	call   b8a3 <PrintHashTable>
    c565:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c569:	48 8b 00             	mov    (%rax),%rax
    c56c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c570:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    c577:	e9 91 00 00 00       	jmp    c60d <PrintSymTab+0x160>
    c57c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    c583:	eb 24                	jmp    c5a9 <PrintSymTab+0xfc>
    c585:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c589:	48 89 c1             	mov    %rax,%rcx
    c58c:	ba 02 00 00 00       	mov    $0x2,%edx
    c591:	be 01 00 00 00       	mov    $0x1,%esi
    c596:	48 8d 05 b4 e7 00 00 	lea    0xe7b4(%rip),%rax        # 1ad51 <__PRETTY_FUNCTION__.0+0x79>
    c59d:	48 89 c7             	mov    %rax,%rdi
    c5a0:	e8 ab 5f ff ff       	call   2550 <fwrite@plt>
    c5a5:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    c5a9:	8b 45 f0             	mov    -0x10(%rbp),%eax
    c5ac:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    c5af:	7c d4                	jl     c585 <PrintSymTab+0xd8>
    c5b1:	8b 55 f4             	mov    -0xc(%rbp),%edx
    c5b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c5b8:	48 8d 0d a3 e7 00 00 	lea    0xe7a3(%rip),%rcx        # 1ad62 <__PRETTY_FUNCTION__.0+0x8a>
    c5bf:	48 89 ce             	mov    %rcx,%rsi
    c5c2:	48 89 c7             	mov    %rax,%rdi
    c5c5:	b8 00 00 00 00       	mov    $0x0,%eax
    c5ca:	e8 a1 5e ff ff       	call   2470 <fprintf@plt>
    c5cf:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c5d2:	8d 50 01             	lea    0x1(%rax),%edx
    c5d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    c5dd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c5e1:	48 89 ce             	mov    %rcx,%rsi
    c5e4:	48 89 c7             	mov    %rax,%rdi
    c5e7:	e8 b7 f2 ff ff       	call   b8a3 <PrintHashTable>
    c5ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c5f0:	48 89 c6             	mov    %rax,%rsi
    c5f3:	bf 0a 00 00 00       	mov    $0xa,%edi
    c5f8:	e8 23 5e ff ff       	call   2420 <fputc@plt>
    c5fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c601:	48 8b 40 10          	mov    0x10(%rax),%rax
    c605:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c609:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    c60d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c612:	0f 85 64 ff ff ff    	jne    c57c <PrintSymTab+0xcf>
    c618:	90                   	nop
    c619:	90                   	nop
    c61a:	c9                   	leave
    c61b:	c3                   	ret

000000000000c61c <DestroyIntList>:
    c61c:	f3 0f 1e fa          	endbr64
    c620:	55                   	push   %rbp
    c621:	48 89 e5             	mov    %rsp,%rbp
    c624:	48 83 ec 20          	sub    $0x20,%rsp
    c628:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c62c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c630:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c634:	eb 30                	jmp    c666 <DestroyIntList+0x4a>
    c636:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c63a:	48 8b 40 08          	mov    0x8(%rax),%rax
    c63e:	48 89 c7             	mov    %rax,%rdi
    c641:	e8 aa 5c ff ff       	call   22f0 <free@plt>
    c646:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c64a:	48 8b 40 10          	mov    0x10(%rax),%rax
    c64e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c652:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c656:	48 89 c7             	mov    %rax,%rdi
    c659:	e8 92 5c ff ff       	call   22f0 <free@plt>
    c65e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c662:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c666:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c66b:	75 c9                	jne    c636 <DestroyIntList+0x1a>
    c66d:	90                   	nop
    c66e:	90                   	nop
    c66f:	c9                   	leave
    c670:	c3                   	ret

000000000000c671 <ConvertParserTypeToVarType>:
    c671:	f3 0f 1e fa          	endbr64
    c675:	55                   	push   %rbp
    c676:	48 89 e5             	mov    %rsp,%rbp
    c679:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c67c:	81 7d fc 0e 01 00 00 	cmpl   $0x10e,-0x4(%rbp)
    c683:	74 44                	je     c6c9 <ConvertParserTypeToVarType+0x58>
    c685:	81 7d fc 0e 01 00 00 	cmpl   $0x10e,-0x4(%rbp)
    c68c:	7f 42                	jg     c6d0 <ConvertParserTypeToVarType+0x5f>
    c68e:	81 7d fc 0d 01 00 00 	cmpl   $0x10d,-0x4(%rbp)
    c695:	74 24                	je     c6bb <ConvertParserTypeToVarType+0x4a>
    c697:	81 7d fc 0d 01 00 00 	cmpl   $0x10d,-0x4(%rbp)
    c69e:	7f 30                	jg     c6d0 <ConvertParserTypeToVarType+0x5f>
    c6a0:	81 7d fc 0b 01 00 00 	cmpl   $0x10b,-0x4(%rbp)
    c6a7:	74 0b                	je     c6b4 <ConvertParserTypeToVarType+0x43>
    c6a9:	81 7d fc 0c 01 00 00 	cmpl   $0x10c,-0x4(%rbp)
    c6b0:	74 10                	je     c6c2 <ConvertParserTypeToVarType+0x51>
    c6b2:	eb 1c                	jmp    c6d0 <ConvertParserTypeToVarType+0x5f>
    c6b4:	b8 00 00 00 00       	mov    $0x0,%eax
    c6b9:	eb 1a                	jmp    c6d5 <ConvertParserTypeToVarType+0x64>
    c6bb:	b8 01 00 00 00       	mov    $0x1,%eax
    c6c0:	eb 13                	jmp    c6d5 <ConvertParserTypeToVarType+0x64>
    c6c2:	b8 02 00 00 00       	mov    $0x2,%eax
    c6c7:	eb 0c                	jmp    c6d5 <ConvertParserTypeToVarType+0x64>
    c6c9:	b8 05 00 00 00       	mov    $0x5,%eax
    c6ce:	eb 05                	jmp    c6d5 <ConvertParserTypeToVarType+0x64>
    c6d0:	b8 04 00 00 00       	mov    $0x4,%eax
    c6d5:	5d                   	pop    %rbp
    c6d6:	c3                   	ret

000000000000c6d7 <GetFlatTypeListForMangling>:
    c6d7:	f3 0f 1e fa          	endbr64
    c6db:	55                   	push   %rbp
    c6dc:	48 89 e5             	mov    %rsp,%rbp
    c6df:	48 83 ec 60          	sub    $0x60,%rsp
    c6e3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    c6e7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    c6eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c6f2:	00 00
    c6f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c6f8:	31 c0                	xor    %eax,%eax
    c6fa:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    c6ff:	75 0a                	jne    c70b <GetFlatTypeListForMangling+0x34>
    c701:	b8 00 00 00 00       	mov    $0x0,%eax
    c706:	e9 3b 01 00 00       	jmp    c846 <GetFlatTypeListForMangling+0x16f>
    c70b:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    c712:	00
    c713:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c717:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c71b:	e9 17 01 00 00       	jmp    c837 <GetFlatTypeListForMangling+0x160>
    c720:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c724:	48 8b 40 08          	mov    0x8(%rax),%rax
    c728:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c72c:	c7 45 bc 04 00 00 00 	movl   $0x4,-0x44(%rbp)
    c733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c737:	8b 40 04             	mov    0x4(%rax),%eax
    c73a:	83 f8 02             	cmp    $0x2,%eax
    c73d:	75 64                	jne    c7a3 <GetFlatTypeListForMangling+0xcc>
    c73f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c743:	48 8b 40 08          	mov    0x8(%rax),%rax
    c747:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c74b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c74f:	48 8b 40 18          	mov    0x18(%rax),%rax
    c753:	48 85 c0             	test   %rax,%rax
    c756:	74 38                	je     c790 <GetFlatTypeListForMangling+0xb9>
    c758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c75c:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c760:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    c764:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c768:	48 89 ce             	mov    %rcx,%rsi
    c76b:	48 89 c7             	mov    %rax,%rdi
    c76e:	e8 68 f9 ff ff       	call   c0db <FindIdent>
    c773:	83 f8 ff             	cmp    $0xffffffff,%eax
    c776:	74 3e                	je     c7b6 <GetFlatTypeListForMangling+0xdf>
    c778:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c77c:	8b 40 10             	mov    0x10(%rax),%eax
    c77f:	83 f8 06             	cmp    $0x6,%eax
    c782:	75 32                	jne    c7b6 <GetFlatTypeListForMangling+0xdf>
    c784:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c788:	8b 40 14             	mov    0x14(%rax),%eax
    c78b:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c78e:	eb 26                	jmp    c7b6 <GetFlatTypeListForMangling+0xdf>
    c790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c794:	8b 40 10             	mov    0x10(%rax),%eax
    c797:	89 c7                	mov    %eax,%edi
    c799:	e8 d3 fe ff ff       	call   c671 <ConvertParserTypeToVarType>
    c79e:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c7a1:	eb 13                	jmp    c7b6 <GetFlatTypeListForMangling+0xdf>
    c7a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7a7:	48 8b 40 08          	mov    0x8(%rax),%rax
    c7ab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c7af:	c7 45 bc ff ff ff ff 	movl   $0xffffffff,-0x44(%rbp)
    c7b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c7ba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c7be:	eb 64                	jmp    c824 <GetFlatTypeListForMangling+0x14d>
    c7c0:	bf 04 00 00 00       	mov    $0x4,%edi
    c7c5:	e8 06 5d ff ff       	call   24d0 <malloc@plt>
    c7ca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c7ce:	8b 55 bc             	mov    -0x44(%rbp),%edx
    c7d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7d5:	89 10                	mov    %edx,(%rax)
    c7d7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c7dc:	75 17                	jne    c7f5 <GetFlatTypeListForMangling+0x11e>
    c7de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7e2:	be 04 00 00 00       	mov    $0x4,%esi
    c7e7:	48 89 c7             	mov    %rax,%rdi
    c7ea:	e8 0c ba ff ff       	call   81fb <CreateListNode>
    c7ef:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c7f3:	eb 23                	jmp    c818 <GetFlatTypeListForMangling+0x141>
    c7f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7f9:	be 04 00 00 00       	mov    $0x4,%esi
    c7fe:	48 89 c7             	mov    %rax,%rdi
    c801:	e8 f5 b9 ff ff       	call   81fb <CreateListNode>
    c806:	48 89 c2             	mov    %rax,%rdx
    c809:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c80d:	48 89 d6             	mov    %rdx,%rsi
    c810:	48 89 c7             	mov    %rax,%rdi
    c813:	e8 af ba ff ff       	call   82c7 <PushListNodeBack>
    c818:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c81c:	48 8b 40 10          	mov    0x10(%rax),%rax
    c820:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c824:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c829:	75 95                	jne    c7c0 <GetFlatTypeListForMangling+0xe9>
    c82b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c82f:	48 8b 40 10          	mov    0x10(%rax),%rax
    c833:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c837:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c83c:	0f 85 de fe ff ff    	jne    c720 <GetFlatTypeListForMangling+0x49>
    c842:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c846:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c84a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    c851:	00 00
    c853:	74 05                	je     c85a <GetFlatTypeListForMangling+0x183>
    c855:	e8 46 5b ff ff       	call   23a0 <__stack_chk_fail@plt>
    c85a:	c9                   	leave
    c85b:	c3                   	ret

000000000000c85c <MangleNameFromTypeList>:
    c85c:	f3 0f 1e fa          	endbr64
    c860:	55                   	push   %rbp
    c861:	48 89 e5             	mov    %rsp,%rbp
    c864:	53                   	push   %rbx
    c865:	48 83 ec 58          	sub    $0x58,%rsp
    c869:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    c86d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    c871:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    c876:	75 62                	jne    c8da <MangleNameFromTypeList+0x7e>
    c878:	48 8d 05 15 e6 00 00 	lea    0xe615(%rip),%rax        # 1ae94 <__PRETTY_FUNCTION__.0+0xc>
    c87f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c883:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c887:	48 89 c7             	mov    %rax,%rdi
    c88a:	e8 01 5b ff ff       	call   2390 <strlen@plt>
    c88f:	48 89 c3             	mov    %rax,%rbx
    c892:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c896:	48 89 c7             	mov    %rax,%rdi
    c899:	e8 f2 5a ff ff       	call   2390 <strlen@plt>
    c89e:	48 01 d8             	add    %rbx,%rax
    c8a1:	48 83 c0 01          	add    $0x1,%rax
    c8a5:	48 89 c7             	mov    %rax,%rdi
    c8a8:	e8 23 5c ff ff       	call   24d0 <malloc@plt>
    c8ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c8b1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c8b5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c8b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8bd:	48 8d 35 d6 e5 00 00 	lea    0xe5d6(%rip),%rsi        # 1ae9a <__PRETTY_FUNCTION__.0+0x12>
    c8c4:	48 89 c7             	mov    %rax,%rdi
    c8c7:	b8 00 00 00 00       	mov    $0x0,%eax
    c8cc:	e8 5f 5c ff ff       	call   2530 <sprintf@plt>
    c8d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8d5:	e9 22 01 00 00       	jmp    c9fc <MangleNameFromTypeList+0x1a0>
    c8da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c8de:	48 89 c7             	mov    %rax,%rdi
    c8e1:	e8 aa 5a ff ff       	call   2390 <strlen@plt>
    c8e6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c8ea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c8ee:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c8f2:	eb 11                	jmp    c905 <MangleNameFromTypeList+0xa9>
    c8f4:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
    c8f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c8fd:	48 8b 40 10          	mov    0x10(%rax),%rax
    c901:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c905:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c90a:	75 e8                	jne    c8f4 <MangleNameFromTypeList+0x98>
    c90c:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    c911:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c915:	48 89 c7             	mov    %rax,%rdi
    c918:	e8 b3 5b ff ff       	call   24d0 <malloc@plt>
    c91d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c921:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c925:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c929:	48 89 d6             	mov    %rdx,%rsi
    c92c:	48 89 c7             	mov    %rax,%rdi
    c92f:	e8 ec 59 ff ff       	call   2320 <strcpy@plt>
    c934:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c938:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c93c:	e9 a0 00 00 00       	jmp    c9e1 <MangleNameFromTypeList+0x185>
    c941:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c945:	48 8b 40 08          	mov    0x8(%rax),%rax
    c949:	8b 00                	mov    (%rax),%eax
    c94b:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c94e:	8b 45 bc             	mov    -0x44(%rbp),%eax
    c951:	83 f8 ff             	cmp    $0xffffffff,%eax
    c954:	74 53                	je     c9a9 <MangleNameFromTypeList+0x14d>
    c956:	83 f8 05             	cmp    $0x5,%eax
    c959:	74 41                	je     c99c <MangleNameFromTypeList+0x140>
    c95b:	83 f8 05             	cmp    $0x5,%eax
    c95e:	77 56                	ja     c9b6 <MangleNameFromTypeList+0x15a>
    c960:	83 f8 02             	cmp    $0x2,%eax
    c963:	74 2a                	je     c98f <MangleNameFromTypeList+0x133>
    c965:	83 f8 02             	cmp    $0x2,%eax
    c968:	77 4c                	ja     c9b6 <MangleNameFromTypeList+0x15a>
    c96a:	85 c0                	test   %eax,%eax
    c96c:	74 07                	je     c975 <MangleNameFromTypeList+0x119>
    c96e:	83 f8 01             	cmp    $0x1,%eax
    c971:	74 0f                	je     c982 <MangleNameFromTypeList+0x126>
    c973:	eb 41                	jmp    c9b6 <MangleNameFromTypeList+0x15a>
    c975:	48 8d 05 23 e5 00 00 	lea    0xe523(%rip),%rax        # 1ae9f <__PRETTY_FUNCTION__.0+0x17>
    c97c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c980:	eb 40                	jmp    c9c2 <MangleNameFromTypeList+0x166>
    c982:	48 8d 05 19 e5 00 00 	lea    0xe519(%rip),%rax        # 1aea2 <__PRETTY_FUNCTION__.0+0x1a>
    c989:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c98d:	eb 33                	jmp    c9c2 <MangleNameFromTypeList+0x166>
    c98f:	48 8d 05 10 e5 00 00 	lea    0xe510(%rip),%rax        # 1aea6 <__PRETTY_FUNCTION__.0+0x1e>
    c996:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c99a:	eb 26                	jmp    c9c2 <MangleNameFromTypeList+0x166>
    c99c:	48 8d 05 06 e5 00 00 	lea    0xe506(%rip),%rax        # 1aea9 <__PRETTY_FUNCTION__.0+0x21>
    c9a3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c9a7:	eb 19                	jmp    c9c2 <MangleNameFromTypeList+0x166>
    c9a9:	48 8d 05 fc e4 00 00 	lea    0xe4fc(%rip),%rax        # 1aeac <__PRETTY_FUNCTION__.0+0x24>
    c9b0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c9b4:	eb 0c                	jmp    c9c2 <MangleNameFromTypeList+0x166>
    c9b6:	48 8d 05 f2 e4 00 00 	lea    0xe4f2(%rip),%rax        # 1aeaf <__PRETTY_FUNCTION__.0+0x27>
    c9bd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c9c1:	90                   	nop
    c9c2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c9c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9ca:	48 89 d6             	mov    %rdx,%rsi
    c9cd:	48 89 c7             	mov    %rax,%rdi
    c9d0:	e8 4b 5b ff ff       	call   2520 <strcat@plt>
    c9d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c9d9:	48 8b 40 10          	mov    0x10(%rax),%rax
    c9dd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c9e1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c9e6:	0f 85 55 ff ff ff    	jne    c941 <MangleNameFromTypeList+0xe5>
    c9ec:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c9f0:	48 89 c7             	mov    %rax,%rdi
    c9f3:	e8 24 fc ff ff       	call   c61c <DestroyIntList>
    c9f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca00:	c9                   	leave
    ca01:	c3                   	ret

000000000000ca02 <MangleFunctionName>:
    ca02:	f3 0f 1e fa          	endbr64
    ca06:	55                   	push   %rbp
    ca07:	48 89 e5             	mov    %rsp,%rbp
    ca0a:	48 83 ec 30          	sub    $0x30,%rsp
    ca0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ca16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ca1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ca1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca22:	48 89 d6             	mov    %rdx,%rsi
    ca25:	48 89 c7             	mov    %rax,%rdi
    ca28:	e8 aa fc ff ff       	call   c6d7 <GetFlatTypeListForMangling>
    ca2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ca31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca39:	48 89 d6             	mov    %rdx,%rsi
    ca3c:	48 89 c7             	mov    %rax,%rdi
    ca3f:	e8 18 fe ff ff       	call   c85c <MangleNameFromTypeList>
    ca44:	c9                   	leave
    ca45:	c3                   	ret

000000000000ca46 <GetFlatTypeListFromCallSite>:
    ca46:	f3 0f 1e fa          	endbr64
    ca4a:	55                   	push   %rbp
    ca4b:	48 89 e5             	mov    %rsp,%rbp
    ca4e:	48 83 ec 50          	sub    $0x50,%rsp
    ca52:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ca56:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    ca5a:	89 55 bc             	mov    %edx,-0x44(%rbp)
    ca5d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ca64:	00 00
    ca66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ca6a:	31 c0                	xor    %eax,%eax
    ca6c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ca71:	75 0a                	jne    ca7d <GetFlatTypeListFromCallSite+0x37>
    ca73:	b8 00 00 00 00       	mov    $0x0,%eax
    ca78:	e9 b2 00 00 00       	jmp    cb2f <GetFlatTypeListFromCallSite+0xe9>
    ca7d:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    ca84:	00
    ca85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca89:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ca8d:	e9 8e 00 00 00       	jmp    cb20 <GetFlatTypeListFromCallSite+0xda>
    ca92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca96:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ca9a:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    ca9d:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    caa1:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    caa5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    caab:	48 89 c7             	mov    %rax,%rdi
    caae:	e8 6d 14 00 00       	call   df20 <semcheck_expr_main>
    cab3:	bf 04 00 00 00       	mov    $0x4,%edi
    cab8:	e8 13 5a ff ff       	call   24d0 <malloc@plt>
    cabd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cac1:	8b 45 dc             	mov    -0x24(%rbp),%eax
    cac4:	89 c7                	mov    %eax,%edi
    cac6:	e8 a6 fb ff ff       	call   c671 <ConvertParserTypeToVarType>
    cacb:	89 c2                	mov    %eax,%edx
    cacd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cad1:	89 10                	mov    %edx,(%rax)
    cad3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cad8:	75 17                	jne    caf1 <GetFlatTypeListFromCallSite+0xab>
    cada:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cade:	be 04 00 00 00       	mov    $0x4,%esi
    cae3:	48 89 c7             	mov    %rax,%rdi
    cae6:	e8 10 b7 ff ff       	call   81fb <CreateListNode>
    caeb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    caef:	eb 23                	jmp    cb14 <GetFlatTypeListFromCallSite+0xce>
    caf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    caf5:	be 04 00 00 00       	mov    $0x4,%esi
    cafa:	48 89 c7             	mov    %rax,%rdi
    cafd:	e8 f9 b6 ff ff       	call   81fb <CreateListNode>
    cb02:	48 89 c2             	mov    %rax,%rdx
    cb05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb09:	48 89 d6             	mov    %rdx,%rsi
    cb0c:	48 89 c7             	mov    %rax,%rdi
    cb0f:	e8 b3 b7 ff ff       	call   82c7 <PushListNodeBack>
    cb14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb18:	48 8b 40 10          	mov    0x10(%rax),%rax
    cb1c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cb20:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cb25:	0f 85 67 ff ff ff    	jne    ca92 <GetFlatTypeListFromCallSite+0x4c>
    cb2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb33:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    cb3a:	00 00
    cb3c:	74 05                	je     cb43 <GetFlatTypeListFromCallSite+0xfd>
    cb3e:	e8 5d 58 ff ff       	call   23a0 <__stack_chk_fail@plt>
    cb43:	c9                   	leave
    cb44:	c3                   	ret

000000000000cb45 <MangleFunctionNameFromCallSite>:
    cb45:	f3 0f 1e fa          	endbr64
    cb49:	55                   	push   %rbp
    cb4a:	48 89 e5             	mov    %rsp,%rbp
    cb4d:	48 83 ec 30          	sub    $0x30,%rsp
    cb51:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb55:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cb59:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    cb5d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    cb60:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    cb63:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    cb67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb6b:	48 89 ce             	mov    %rcx,%rsi
    cb6e:	48 89 c7             	mov    %rax,%rdi
    cb71:	e8 d0 fe ff ff       	call   ca46 <GetFlatTypeListFromCallSite>
    cb76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cb7a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb82:	48 89 d6             	mov    %rdx,%rsi
    cb85:	48 89 c7             	mov    %rax,%rdi
    cb88:	e8 cf fc ff ff       	call   c85c <MangleNameFromTypeList>
    cb8d:	c9                   	leave
    cb8e:	c3                   	ret

000000000000cb8f <semcheck_stmt>:
    cb8f:	f3 0f 1e fa          	endbr64
    cb93:	55                   	push   %rbp
    cb94:	48 89 e5             	mov    %rsp,%rbp
    cb97:	48 83 ec 20          	sub    $0x20,%rsp
    cb9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cba3:	89 55 ec             	mov    %edx,-0x14(%rbp)
    cba6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    cba9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cbad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb1:	48 89 ce             	mov    %rcx,%rsi
    cbb4:	48 89 c7             	mov    %rax,%rdi
    cbb7:	e8 30 00 00 00       	call   cbec <semcheck_stmt_main>
    cbbc:	c9                   	leave
    cbbd:	c3                   	ret

000000000000cbbe <semcheck_func_stmt>:
    cbbe:	f3 0f 1e fa          	endbr64
    cbc2:	55                   	push   %rbp
    cbc3:	48 89 e5             	mov    %rsp,%rbp
    cbc6:	48 83 ec 10          	sub    $0x10,%rsp
    cbca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbd2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cbd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbda:	ba 00 00 00 00       	mov    $0x0,%edx
    cbdf:	48 89 ce             	mov    %rcx,%rsi
    cbe2:	48 89 c7             	mov    %rax,%rdi
    cbe5:	e8 02 00 00 00       	call   cbec <semcheck_stmt_main>
    cbea:	c9                   	leave
    cbeb:	c3                   	ret

000000000000cbec <semcheck_stmt_main>:
    cbec:	f3 0f 1e fa          	endbr64
    cbf0:	55                   	push   %rbp
    cbf1:	48 89 e5             	mov    %rsp,%rbp
    cbf4:	48 83 ec 30          	sub    $0x30,%rsp
    cbf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbfc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc00:	89 55 dc             	mov    %edx,-0x24(%rbp)
    cc03:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cc08:	75 28                	jne    cc32 <semcheck_stmt_main+0x46>
    cc0a:	48 8d 05 1f e9 00 00 	lea    0xe91f(%rip),%rax        # 1b530 <__PRETTY_FUNCTION__.7>
    cc11:	48 89 c1             	mov    %rax,%rcx
    cc14:	ba 34 00 00 00       	mov    $0x34,%edx
    cc19:	48 8d 05 a0 e2 00 00 	lea    0xe2a0(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cc20:	48 89 c6             	mov    %rax,%rsi
    cc23:	48 8d 05 cc e2 00 00 	lea    0xe2cc(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    cc2a:	48 89 c7             	mov    %rax,%rdi
    cc2d:	e8 9e 57 ff ff       	call   23d0 <__assert_fail@plt>
    cc32:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cc37:	75 28                	jne    cc61 <semcheck_stmt_main+0x75>
    cc39:	48 8d 05 f0 e8 00 00 	lea    0xe8f0(%rip),%rax        # 1b530 <__PRETTY_FUNCTION__.7>
    cc40:	48 89 c1             	mov    %rax,%rcx
    cc43:	ba 35 00 00 00       	mov    $0x35,%edx
    cc48:	48 8d 05 71 e2 00 00 	lea    0xe271(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cc4f:	48 89 c6             	mov    %rax,%rsi
    cc52:	48 8d 05 ac e2 00 00 	lea    0xe2ac(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    cc59:	48 89 c7             	mov    %rax,%rdi
    cc5c:	e8 6f 57 ff ff       	call   23d0 <__assert_fail@plt>
    cc61:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    cc68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc6c:	8b 40 04             	mov    0x4(%rax),%eax
    cc6f:	83 f8 08             	cmp    $0x8,%eax
    cc72:	0f 87 cb 00 00 00    	ja     cd43 <semcheck_stmt_main+0x157>
    cc78:	89 c0                	mov    %eax,%eax
    cc7a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    cc81:	00
    cc82:	48 8d 05 b3 e2 00 00 	lea    0xe2b3(%rip),%rax        # 1af3c <__PRETTY_FUNCTION__.0+0xb4>
    cc89:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    cc8c:	48 98                	cltq
    cc8e:	48 8d 15 a7 e2 00 00 	lea    0xe2a7(%rip),%rdx        # 1af3c <__PRETTY_FUNCTION__.0+0xb4>
    cc95:	48 01 d0             	add    %rdx,%rax
    cc98:	3e ff e0             	notrack jmp *%rax
    cc9b:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cc9e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cca2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cca6:	48 89 ce             	mov    %rcx,%rsi
    cca9:	48 89 c7             	mov    %rax,%rdi
    ccac:	e8 c5 00 00 00       	call   cd76 <semcheck_varassign>
    ccb1:	01 45 fc             	add    %eax,-0x4(%rbp)
    ccb4:	e9 b8 00 00 00       	jmp    cd71 <semcheck_stmt_main+0x185>
    ccb9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ccbc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ccc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccc4:	48 89 ce             	mov    %rcx,%rsi
    ccc7:	48 89 c7             	mov    %rax,%rdi
    ccca:	e8 0a 02 00 00       	call   ced9 <semcheck_proccall>
    cccf:	01 45 fc             	add    %eax,-0x4(%rbp)
    ccd2:	e9 9a 00 00 00       	jmp    cd71 <semcheck_stmt_main+0x185>
    ccd7:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ccda:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ccde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cce2:	48 89 ce             	mov    %rcx,%rsi
    cce5:	48 89 c7             	mov    %rax,%rdi
    cce8:	e8 ae 07 00 00       	call   d49b <semcheck_compoundstmt>
    cced:	01 45 fc             	add    %eax,-0x4(%rbp)
    ccf0:	eb 7f                	jmp    cd71 <semcheck_stmt_main+0x185>
    ccf2:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ccf5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ccf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccfd:	48 89 ce             	mov    %rcx,%rsi
    cd00:	48 89 c7             	mov    %rax,%rdi
    cd03:	e8 b9 08 00 00       	call   d5c1 <semcheck_ifthen>
    cd08:	01 45 fc             	add    %eax,-0x4(%rbp)
    cd0b:	eb 64                	jmp    cd71 <semcheck_stmt_main+0x185>
    cd0d:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cd10:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cd14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd18:	48 89 ce             	mov    %rcx,%rsi
    cd1b:	48 89 c7             	mov    %rax,%rdi
    cd1e:	e8 27 0a 00 00       	call   d74a <semcheck_while>
    cd23:	01 45 fc             	add    %eax,-0x4(%rbp)
    cd26:	eb 49                	jmp    cd71 <semcheck_stmt_main+0x185>
    cd28:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cd2b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cd2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd33:	48 89 ce             	mov    %rcx,%rsi
    cd36:	48 89 c7             	mov    %rax,%rdi
    cd39:	e8 69 0b 00 00       	call   d8a7 <semcheck_for>
    cd3e:	01 45 fc             	add    %eax,-0x4(%rbp)
    cd41:	eb 2e                	jmp    cd71 <semcheck_stmt_main+0x185>
    cd43:	48 8b 05 16 53 01 00 	mov    0x15316(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    cd4a:	48 89 c1             	mov    %rax,%rcx
    cd4d:	ba 22 00 00 00       	mov    $0x22,%edx
    cd52:	be 01 00 00 00       	mov    $0x1,%esi
    cd57:	48 8d 05 ba e1 00 00 	lea    0xe1ba(%rip),%rax        # 1af18 <__PRETTY_FUNCTION__.0+0x90>
    cd5e:	48 89 c7             	mov    %rax,%rdi
    cd61:	e8 ea 57 ff ff       	call   2550 <fwrite@plt>
    cd66:	bf 01 00 00 00       	mov    $0x1,%edi
    cd6b:	e8 d0 57 ff ff       	call   2540 <exit@plt>
    cd70:	90                   	nop
    cd71:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cd74:	c9                   	leave
    cd75:	c3                   	ret

000000000000cd76 <semcheck_varassign>:
    cd76:	f3 0f 1e fa          	endbr64
    cd7a:	55                   	push   %rbp
    cd7b:	48 89 e5             	mov    %rsp,%rbp
    cd7e:	48 83 ec 50          	sub    $0x50,%rsp
    cd82:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    cd86:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    cd8a:	89 55 bc             	mov    %edx,-0x44(%rbp)
    cd8d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cd94:	00 00
    cd96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cd9a:	31 c0                	xor    %eax,%eax
    cd9c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    cda1:	75 28                	jne    cdcb <semcheck_varassign+0x55>
    cda3:	48 8d 05 a6 e7 00 00 	lea    0xe7a6(%rip),%rax        # 1b550 <__PRETTY_FUNCTION__.6>
    cdaa:	48 89 c1             	mov    %rax,%rcx
    cdad:	ba 68 00 00 00       	mov    $0x68,%edx
    cdb2:	48 8d 05 07 e1 00 00 	lea    0xe107(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cdb9:	48 89 c6             	mov    %rax,%rsi
    cdbc:	48 8d 05 33 e1 00 00 	lea    0xe133(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    cdc3:	48 89 c7             	mov    %rax,%rdi
    cdc6:	e8 05 56 ff ff       	call   23d0 <__assert_fail@plt>
    cdcb:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    cdd0:	75 28                	jne    cdfa <semcheck_varassign+0x84>
    cdd2:	48 8d 05 77 e7 00 00 	lea    0xe777(%rip),%rax        # 1b550 <__PRETTY_FUNCTION__.6>
    cdd9:	48 89 c1             	mov    %rax,%rcx
    cddc:	ba 69 00 00 00       	mov    $0x69,%edx
    cde1:	48 8d 05 d8 e0 00 00 	lea    0xe0d8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cde8:	48 89 c6             	mov    %rax,%rsi
    cdeb:	48 8d 05 13 e1 00 00 	lea    0xe113(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    cdf2:	48 89 c7             	mov    %rax,%rdi
    cdf5:	e8 d6 55 ff ff       	call   23d0 <__assert_fail@plt>
    cdfa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cdfe:	8b 40 04             	mov    0x4(%rax),%eax
    ce01:	85 c0                	test   %eax,%eax
    ce03:	74 28                	je     ce2d <semcheck_varassign+0xb7>
    ce05:	48 8d 05 44 e7 00 00 	lea    0xe744(%rip),%rax        # 1b550 <__PRETTY_FUNCTION__.6>
    ce0c:	48 89 c1             	mov    %rax,%rcx
    ce0f:	ba 6a 00 00 00       	mov    $0x6a,%edx
    ce14:	48 8d 05 a5 e0 00 00 	lea    0xe0a5(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    ce1b:	48 89 c6             	mov    %rax,%rsi
    ce1e:	48 8d 05 3b e1 00 00 	lea    0xe13b(%rip),%rax        # 1af60 <__PRETTY_FUNCTION__.0+0xd8>
    ce25:	48 89 c7             	mov    %rax,%rdi
    ce28:	e8 a3 55 ff ff       	call   23d0 <__assert_fail@plt>
    ce2d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    ce34:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce38:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ce40:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce44:	48 8b 40 10          	mov    0x10(%rax),%rax
    ce48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ce4c:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    ce4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce53:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ce57:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    ce5b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ce61:	48 89 c7             	mov    %rax,%rdi
    ce64:	e8 b7 10 00 00       	call   df20 <semcheck_expr_main>
    ce69:	01 45 e4             	add    %eax,-0x1c(%rbp)
    ce6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce70:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ce74:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ce78:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ce7e:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    ce83:	48 89 c7             	mov    %rax,%rdi
    ce86:	e8 95 10 00 00       	call   df20 <semcheck_expr_main>
    ce8b:	01 45 e4             	add    %eax,-0x1c(%rbp)
    ce8e:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ce91:	8b 45 e0             	mov    -0x20(%rbp),%eax
    ce94:	39 c2                	cmp    %eax,%edx
    ce96:	74 28                	je     cec0 <semcheck_varassign+0x14a>
    ce98:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce9c:	8b 10                	mov    (%rax),%edx
    ce9e:	48 8b 05 bb 51 01 00 	mov    0x151bb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    cea5:	48 8d 0d d4 e0 00 00 	lea    0xe0d4(%rip),%rcx        # 1af80 <__PRETTY_FUNCTION__.0+0xf8>
    ceac:	48 89 ce             	mov    %rcx,%rsi
    ceaf:	48 89 c7             	mov    %rax,%rdi
    ceb2:	b8 00 00 00 00       	mov    $0x0,%eax
    ceb7:	e8 b4 55 ff ff       	call   2470 <fprintf@plt>
    cebc:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    cec0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    cec3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cec7:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    cece:	00 00
    ced0:	74 05                	je     ced7 <semcheck_varassign+0x161>
    ced2:	e8 c9 54 ff ff       	call   23a0 <__stack_chk_fail@plt>
    ced7:	c9                   	leave
    ced8:	c3                   	ret

000000000000ced9 <semcheck_proccall>:
    ced9:	f3 0f 1e fa          	endbr64
    cedd:	55                   	push   %rbp
    cede:	48 89 e5             	mov    %rsp,%rbp
    cee1:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    cee8:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    ceef:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    cef6:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
    cefc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cf03:	00 00
    cf05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cf09:	31 c0                	xor    %eax,%eax
    cf0b:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    cf12:	00
    cf13:	75 28                	jne    cf3d <semcheck_proccall+0x64>
    cf15:	48 8d 05 54 e6 00 00 	lea    0xe654(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    cf1c:	48 89 c1             	mov    %rax,%rcx
    cf1f:	ba 8a 00 00 00       	mov    $0x8a,%edx
    cf24:	48 8d 05 95 df 00 00 	lea    0xdf95(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cf2b:	48 89 c6             	mov    %rax,%rsi
    cf2e:	48 8d 05 c1 df 00 00 	lea    0xdfc1(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    cf35:	48 89 c7             	mov    %rax,%rdi
    cf38:	e8 93 54 ff ff       	call   23d0 <__assert_fail@plt>
    cf3d:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    cf44:	00
    cf45:	75 28                	jne    cf6f <semcheck_proccall+0x96>
    cf47:	48 8d 05 22 e6 00 00 	lea    0xe622(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    cf4e:	48 89 c1             	mov    %rax,%rcx
    cf51:	ba 8b 00 00 00       	mov    $0x8b,%edx
    cf56:	48 8d 05 63 df 00 00 	lea    0xdf63(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cf5d:	48 89 c6             	mov    %rax,%rsi
    cf60:	48 8d 05 9e df 00 00 	lea    0xdf9e(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    cf67:	48 89 c7             	mov    %rax,%rdi
    cf6a:	e8 61 54 ff ff       	call   23d0 <__assert_fail@plt>
    cf6f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    cf76:	8b 40 04             	mov    0x4(%rax),%eax
    cf79:	83 f8 01             	cmp    $0x1,%eax
    cf7c:	74 28                	je     cfa6 <semcheck_proccall+0xcd>
    cf7e:	48 8d 05 eb e5 00 00 	lea    0xe5eb(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    cf85:	48 89 c1             	mov    %rax,%rcx
    cf88:	ba 8c 00 00 00       	mov    $0x8c,%edx
    cf8d:	48 8d 05 2c df 00 00 	lea    0xdf2c(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cf94:	48 89 c6             	mov    %rax,%rsi
    cf97:	48 8d 05 22 e0 00 00 	lea    0xe022(%rip),%rax        # 1afc0 <__PRETTY_FUNCTION__.0+0x138>
    cf9e:	48 89 c7             	mov    %rax,%rdi
    cfa1:	e8 2a 54 ff ff       	call   23d0 <__assert_fail@plt>
    cfa6:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
    cfad:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    cfb4:	48 8b 40 08          	mov    0x8(%rax),%rax
    cfb8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    cfbc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    cfc3:	48 8b 40 18          	mov    0x18(%rax),%rax
    cfc7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    cfcb:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
    cfd1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    cfd8:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    cfdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cfe0:	48 89 c7             	mov    %rax,%rdi
    cfe3:	e8 5d fb ff ff       	call   cb45 <MangleFunctionNameFromCallSite>
    cfe8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cfec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cff0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    cff7:	48 89 d6             	mov    %rdx,%rsi
    cffa:	48 89 c7             	mov    %rax,%rdi
    cffd:	e8 f5 f1 ff ff       	call   c1f7 <FindAllIdents>
    d002:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d006:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    d00d:	00
    d00e:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    d015:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d01a:	74 5d                	je     d079 <semcheck_proccall+0x1a0>
    d01c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d020:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d024:	eb 4c                	jmp    d072 <semcheck_proccall+0x199>
    d026:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d02a:	48 8b 40 08          	mov    0x8(%rax),%rax
    d02e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d032:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d036:	48 8b 40 08          	mov    0x8(%rax),%rax
    d03a:	48 85 c0             	test   %rax,%rax
    d03d:	74 27                	je     d066 <semcheck_proccall+0x18d>
    d03f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d043:	48 8b 40 08          	mov    0x8(%rax),%rax
    d047:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d04b:	48 89 d6             	mov    %rdx,%rsi
    d04e:	48 89 c7             	mov    %rax,%rdi
    d051:	e8 fa 53 ff ff       	call   2450 <strcmp@plt>
    d056:	85 c0                	test   %eax,%eax
    d058:	75 0c                	jne    d066 <semcheck_proccall+0x18d>
    d05a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d05e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    d062:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
    d066:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d06a:	48 8b 40 10          	mov    0x10(%rax),%rax
    d06e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d072:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d077:	75 ad                	jne    d026 <semcheck_proccall+0x14d>
    d079:	83 7d 8c 01          	cmpl   $0x1,-0x74(%rbp)
    d07d:	75 57                	jne    d0d6 <semcheck_proccall+0x1fd>
    d07f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d083:	48 8b 40 08          	mov    0x8(%rax),%rax
    d087:	48 89 c7             	mov    %rax,%rdi
    d08a:	e8 d1 54 ff ff       	call   2560 <strdup@plt>
    d08f:	48 89 c2             	mov    %rax,%rdx
    d092:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d099:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d09d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d0a4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    d0a8:	48 89 50 20          	mov    %rdx,0x20(%rax)
    d0ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d0b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d0b4:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    d0bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0bf:	48 89 c7             	mov    %rax,%rdi
    d0c2:	e8 29 52 ff ff       	call   22f0 <free@plt>
    d0c7:	83 7d 94 ff          	cmpl   $0xffffffff,-0x6c(%rbp)
    d0cb:	0f 85 bc 00 00 00    	jne    d18d <semcheck_proccall+0x2b4>
    d0d1:	e9 86 00 00 00       	jmp    d15c <semcheck_proccall+0x283>
    d0d6:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
    d0da:	75 40                	jne    d11c <semcheck_proccall+0x243>
    d0dc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d0e3:	8b 10                	mov    (%rax),%edx
    d0e5:	48 8b 05 74 4f 01 00 	mov    0x14f74(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d0ec:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d0f0:	48 8d 35 f1 de 00 00 	lea    0xdef1(%rip),%rsi        # 1afe8 <__PRETTY_FUNCTION__.0+0x160>
    d0f7:	48 89 c7             	mov    %rax,%rdi
    d0fa:	b8 00 00 00 00       	mov    $0x0,%eax
    d0ff:	e8 6c 53 ff ff       	call   2470 <fprintf@plt>
    d104:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d108:	48 89 c7             	mov    %rax,%rdi
    d10b:	e8 e0 51 ff ff       	call   22f0 <free@plt>
    d110:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d114:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d117:	e9 69 03 00 00       	jmp    d485 <semcheck_proccall+0x5ac>
    d11c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d123:	8b 10                	mov    (%rax),%edx
    d125:	48 8b 05 34 4f 01 00 	mov    0x14f34(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d12c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d130:	48 8d 35 01 df 00 00 	lea    0xdf01(%rip),%rsi        # 1b038 <__PRETTY_FUNCTION__.0+0x1b0>
    d137:	48 89 c7             	mov    %rax,%rdi
    d13a:	b8 00 00 00 00       	mov    $0x0,%eax
    d13f:	e8 2c 53 ff ff       	call   2470 <fprintf@plt>
    d144:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d148:	48 89 c7             	mov    %rax,%rdi
    d14b:	e8 a0 51 ff ff       	call   22f0 <free@plt>
    d150:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d154:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d157:	e9 29 03 00 00       	jmp    d485 <semcheck_proccall+0x5ac>
    d15c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d163:	8b 10                	mov    (%rax),%edx
    d165:	48 8b 05 f4 4e 01 00 	mov    0x14ef4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d16c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d170:	48 8d 35 f9 de 00 00 	lea    0xdef9(%rip),%rsi        # 1b070 <__PRETTY_FUNCTION__.0+0x1e8>
    d177:	48 89 c7             	mov    %rax,%rdi
    d17a:	b8 00 00 00 00       	mov    $0x0,%eax
    d17f:	e8 ec 52 ff ff       	call   2470 <fprintf@plt>
    d184:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d188:	e9 f5 02 00 00       	jmp    d482 <semcheck_proccall+0x5a9>
    d18d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d191:	8b 40 20             	mov    0x20(%rax),%eax
    d194:	8d 50 01             	lea    0x1(%rax),%edx
    d197:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d19b:	89 50 20             	mov    %edx,0x20(%rax)
    d19e:	8b 45 94             	mov    -0x6c(%rbp),%eax
    d1a1:	3b 85 6c ff ff ff    	cmp    -0x94(%rbp),%eax
    d1a7:	7e 4f                	jle    d1f8 <semcheck_proccall+0x31f>
    d1a9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d1b0:	8b 10                	mov    (%rax),%edx
    d1b2:	48 8b 05 a7 4e 01 00 	mov    0x14ea7(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d1b9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d1bd:	48 8d 35 e4 de 00 00 	lea    0xdee4(%rip),%rsi        # 1b0a8 <__PRETTY_FUNCTION__.0+0x220>
    d1c4:	48 89 c7             	mov    %rax,%rdi
    d1c7:	b8 00 00 00 00       	mov    $0x0,%eax
    d1cc:	e8 9f 52 ff ff       	call   2470 <fprintf@plt>
    d1d1:	48 8b 05 88 4e 01 00 	mov    0x14e88(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d1d8:	48 89 c1             	mov    %rax,%rcx
    d1db:	ba 35 00 00 00       	mov    $0x35,%edx
    d1e0:	be 01 00 00 00       	mov    $0x1,%esi
    d1e5:	48 8d 05 fc de 00 00 	lea    0xdefc(%rip),%rax        # 1b0e8 <__PRETTY_FUNCTION__.0+0x260>
    d1ec:	48 89 c7             	mov    %rax,%rdi
    d1ef:	e8 5c 53 ff ff       	call   2550 <fwrite@plt>
    d1f4:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d1f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1fc:	8b 40 10             	mov    0x10(%rax),%eax
    d1ff:	83 f8 02             	cmp    $0x2,%eax
    d202:	74 38                	je     d23c <semcheck_proccall+0x363>
    d204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d208:	8b 40 10             	mov    0x10(%rax),%eax
    d20b:	83 f8 05             	cmp    $0x5,%eax
    d20e:	74 2c                	je     d23c <semcheck_proccall+0x363>
    d210:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d217:	8b 10                	mov    (%rax),%edx
    d219:	48 8b 05 40 4e 01 00 	mov    0x14e40(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d220:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d224:	48 8d 35 f5 de 00 00 	lea    0xdef5(%rip),%rsi        # 1b120 <__PRETTY_FUNCTION__.0+0x298>
    d22b:	48 89 c7             	mov    %rax,%rdi
    d22e:	b8 00 00 00 00       	mov    $0x0,%eax
    d233:	e8 38 52 ff ff       	call   2470 <fprintf@plt>
    d238:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d23c:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    d243:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d247:	48 8b 40 18          	mov    0x18(%rax),%rax
    d24b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d24f:	e9 a6 01 00 00       	jmp    d3fa <semcheck_proccall+0x521>
    d254:	83 45 88 01          	addl   $0x1,-0x78(%rbp)
    d258:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d25c:	8b 00                	mov    (%rax),%eax
    d25e:	83 f8 02             	cmp    $0x2,%eax
    d261:	74 28                	je     d28b <semcheck_proccall+0x3b2>
    d263:	48 8d 05 06 e3 00 00 	lea    0xe306(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    d26a:	48 89 c1             	mov    %rax,%rcx
    d26d:	ba dd 00 00 00       	mov    $0xdd,%edx
    d272:	48 8d 05 47 dc 00 00 	lea    0xdc47(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d279:	48 89 c6             	mov    %rax,%rsi
    d27c:	48 8d 05 db de 00 00 	lea    0xdedb(%rip),%rax        # 1b15e <__PRETTY_FUNCTION__.0+0x2d6>
    d283:	48 89 c7             	mov    %rax,%rdi
    d286:	e8 45 51 ff ff       	call   23d0 <__assert_fail@plt>
    d28b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d28f:	8b 00                	mov    (%rax),%eax
    d291:	85 c0                	test   %eax,%eax
    d293:	74 28                	je     d2bd <semcheck_proccall+0x3e4>
    d295:	48 8d 05 d4 e2 00 00 	lea    0xe2d4(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    d29c:	48 89 c1             	mov    %rax,%rcx
    d29f:	ba de 00 00 00       	mov    $0xde,%edx
    d2a4:	48 8d 05 15 dc 00 00 	lea    0xdc15(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d2ab:	48 89 c6             	mov    %rax,%rsi
    d2ae:	48 8d 05 c7 de 00 00 	lea    0xdec7(%rip),%rax        # 1b17c <__PRETTY_FUNCTION__.0+0x2f4>
    d2b5:	48 89 c7             	mov    %rax,%rdi
    d2b8:	e8 13 51 ff ff       	call   23d0 <__assert_fail@plt>
    d2bd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d2c1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d2c5:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
    d2cc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d2d0:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d2d6:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d2db:	48 89 c7             	mov    %rax,%rdi
    d2de:	e8 3d 0c 00 00       	call   df20 <semcheck_expr_main>
    d2e3:	01 45 84             	add    %eax,-0x7c(%rbp)
    d2e6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d2ea:	48 8b 40 08          	mov    0x8(%rax),%rax
    d2ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d2f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d2f6:	8b 40 04             	mov    0x4(%rax),%eax
    d2f9:	83 f8 02             	cmp    $0x2,%eax
    d2fc:	74 28                	je     d326 <semcheck_proccall+0x44d>
    d2fe:	48 8d 05 6b e2 00 00 	lea    0xe26b(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    d305:	48 89 c1             	mov    %rax,%rcx
    d308:	ba e3 00 00 00       	mov    $0xe3,%edx
    d30d:	48 8d 05 ac db 00 00 	lea    0xdbac(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d314:	48 89 c6             	mov    %rax,%rsi
    d317:	48 8d 05 82 de 00 00 	lea    0xde82(%rip),%rax        # 1b1a0 <__PRETTY_FUNCTION__.0+0x318>
    d31e:	48 89 c7             	mov    %rax,%rdi
    d321:	e8 aa 50 ff ff       	call   23d0 <__assert_fail@plt>
    d326:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d32a:	48 8b 40 08          	mov    0x8(%rax),%rax
    d32e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d332:	e9 a5 00 00 00       	jmp    d3dc <semcheck_proccall+0x503>
    d337:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d33b:	8b 40 10             	mov    0x10(%rax),%eax
    d33e:	89 45 90             	mov    %eax,-0x70(%rbp)
    d341:	83 7d 90 ff          	cmpl   $0xffffffff,-0x70(%rbp)
    d345:	75 3a                	jne    d381 <semcheck_proccall+0x4a8>
    d347:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d34b:	48 8b 40 18          	mov    0x18(%rax),%rax
    d34f:	48 85 c0             	test   %rax,%rax
    d352:	74 2d                	je     d381 <semcheck_proccall+0x4a8>
    d354:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d358:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d35c:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    d363:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    d367:	48 89 ce             	mov    %rcx,%rsi
    d36a:	48 89 c7             	mov    %rax,%rdi
    d36d:	e8 69 ed ff ff       	call   c0db <FindIdent>
    d372:	83 f8 ff             	cmp    $0xffffffff,%eax
    d375:	74 0a                	je     d381 <semcheck_proccall+0x4a8>
    d377:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d37b:	8b 40 14             	mov    0x14(%rax),%eax
    d37e:	89 45 90             	mov    %eax,-0x70(%rbp)
    d381:	8b 45 80             	mov    -0x80(%rbp),%eax
    d384:	39 45 90             	cmp    %eax,-0x70(%rbp)
    d387:	74 3b                	je     d3c4 <semcheck_proccall+0x4eb>
    d389:	81 7d 90 3a 01 00 00 	cmpl   $0x13a,-0x70(%rbp)
    d390:	74 32                	je     d3c4 <semcheck_proccall+0x4eb>
    d392:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d399:	8b 10                	mov    (%rax),%edx
    d39b:	48 8b 05 be 4c 01 00 	mov    0x14cbe(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d3a2:	8b 75 88             	mov    -0x78(%rbp),%esi
    d3a5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d3a9:	41 89 f0             	mov    %esi,%r8d
    d3ac:	48 8d 35 0d de 00 00 	lea    0xde0d(%rip),%rsi        # 1b1c0 <__PRETTY_FUNCTION__.0+0x338>
    d3b3:	48 89 c7             	mov    %rax,%rdi
    d3b6:	b8 00 00 00 00       	mov    $0x0,%eax
    d3bb:	e8 b0 50 ff ff       	call   2470 <fprintf@plt>
    d3c0:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d3c4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d3c8:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3cc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d3d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d3d4:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3d8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d3dc:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    d3e1:	74 0b                	je     d3ee <semcheck_proccall+0x515>
    d3e3:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d3e8:	0f 85 49 ff ff ff    	jne    d337 <semcheck_proccall+0x45e>
    d3ee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d3f2:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3f6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d3fa:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d3ff:	74 0b                	je     d40c <semcheck_proccall+0x533>
    d401:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    d406:	0f 85 48 fe ff ff    	jne    d254 <semcheck_proccall+0x37b>
    d40c:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    d411:	75 35                	jne    d448 <semcheck_proccall+0x56f>
    d413:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d418:	74 2e                	je     d448 <semcheck_proccall+0x56f>
    d41a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d421:	8b 10                	mov    (%rax),%edx
    d423:	48 8b 05 36 4c 01 00 	mov    0x14c36(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d42a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d42e:	48 8d 35 d3 dd 00 00 	lea    0xddd3(%rip),%rsi        # 1b208 <__PRETTY_FUNCTION__.0+0x380>
    d435:	48 89 c7             	mov    %rax,%rdi
    d438:	b8 00 00 00 00       	mov    $0x0,%eax
    d43d:	e8 2e 50 ff ff       	call   2470 <fprintf@plt>
    d442:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d446:	eb 3a                	jmp    d482 <semcheck_proccall+0x5a9>
    d448:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    d44d:	74 33                	je     d482 <semcheck_proccall+0x5a9>
    d44f:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d454:	75 2c                	jne    d482 <semcheck_proccall+0x5a9>
    d456:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d45d:	8b 10                	mov    (%rax),%edx
    d45f:	48 8b 05 fa 4b 01 00 	mov    0x14bfa(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d466:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d46a:	48 8d 35 df dd 00 00 	lea    0xdddf(%rip),%rsi        # 1b250 <__PRETTY_FUNCTION__.0+0x3c8>
    d471:	48 89 c7             	mov    %rax,%rdi
    d474:	b8 00 00 00 00       	mov    $0x0,%eax
    d479:	e8 f2 4f ff ff       	call   2470 <fprintf@plt>
    d47e:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d482:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d485:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d489:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d490:	00 00
    d492:	74 05                	je     d499 <semcheck_proccall+0x5c0>
    d494:	e8 07 4f ff ff       	call   23a0 <__stack_chk_fail@plt>
    d499:	c9                   	leave
    d49a:	c3                   	ret

000000000000d49b <semcheck_compoundstmt>:
    d49b:	f3 0f 1e fa          	endbr64
    d49f:	55                   	push   %rbp
    d4a0:	48 89 e5             	mov    %rsp,%rbp
    d4a3:	48 83 ec 30          	sub    $0x30,%rsp
    d4a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d4ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d4af:	89 55 dc             	mov    %edx,-0x24(%rbp)
    d4b2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d4b7:	75 28                	jne    d4e1 <semcheck_compoundstmt+0x46>
    d4b9:	48 8d 05 d0 e0 00 00 	lea    0xe0d0(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d4c0:	48 89 c1             	mov    %rax,%rcx
    d4c3:	ba 17 01 00 00       	mov    $0x117,%edx
    d4c8:	48 8d 05 f1 d9 00 00 	lea    0xd9f1(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d4cf:	48 89 c6             	mov    %rax,%rsi
    d4d2:	48 8d 05 1d da 00 00 	lea    0xda1d(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d4d9:	48 89 c7             	mov    %rax,%rdi
    d4dc:	e8 ef 4e ff ff       	call   23d0 <__assert_fail@plt>
    d4e1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    d4e6:	75 28                	jne    d510 <semcheck_compoundstmt+0x75>
    d4e8:	48 8d 05 a1 e0 00 00 	lea    0xe0a1(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d4ef:	48 89 c1             	mov    %rax,%rcx
    d4f2:	ba 18 01 00 00       	mov    $0x118,%edx
    d4f7:	48 8d 05 c2 d9 00 00 	lea    0xd9c2(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d4fe:	48 89 c6             	mov    %rax,%rsi
    d501:	48 8d 05 fd d9 00 00 	lea    0xd9fd(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d508:	48 89 c7             	mov    %rax,%rdi
    d50b:	e8 c0 4e ff ff       	call   23d0 <__assert_fail@plt>
    d510:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d514:	8b 40 04             	mov    0x4(%rax),%eax
    d517:	83 f8 02             	cmp    $0x2,%eax
    d51a:	74 28                	je     d544 <semcheck_compoundstmt+0xa9>
    d51c:	48 8d 05 6d e0 00 00 	lea    0xe06d(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d523:	48 89 c1             	mov    %rax,%rcx
    d526:	ba 19 01 00 00       	mov    $0x119,%edx
    d52b:	48 8d 05 8e d9 00 00 	lea    0xd98e(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d532:	48 89 c6             	mov    %rax,%rsi
    d535:	48 8d 05 5c dd 00 00 	lea    0xdd5c(%rip),%rax        # 1b298 <__PRETTY_FUNCTION__.0+0x410>
    d53c:	48 89 c7             	mov    %rax,%rdi
    d53f:	e8 8c 4e ff ff       	call   23d0 <__assert_fail@plt>
    d544:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    d54b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d54f:	48 8b 40 08          	mov    0x8(%rax),%rax
    d553:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d557:	eb 5c                	jmp    d5b5 <semcheck_compoundstmt+0x11a>
    d559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d55d:	8b 00                	mov    (%rax),%eax
    d55f:	83 f8 01             	cmp    $0x1,%eax
    d562:	74 28                	je     d58c <semcheck_compoundstmt+0xf1>
    d564:	48 8d 05 25 e0 00 00 	lea    0xe025(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d56b:	48 89 c1             	mov    %rax,%rcx
    d56e:	ba 1f 01 00 00       	mov    $0x11f,%edx
    d573:	48 8d 05 46 d9 00 00 	lea    0xd946(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d57a:	48 89 c6             	mov    %rax,%rsi
    d57d:	48 8d 05 3a dd 00 00 	lea    0xdd3a(%rip),%rax        # 1b2be <__PRETTY_FUNCTION__.0+0x436>
    d584:	48 89 c7             	mov    %rax,%rdi
    d587:	e8 44 4e ff ff       	call   23d0 <__assert_fail@plt>
    d58c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d590:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d594:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d597:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d59b:	48 89 ce             	mov    %rcx,%rsi
    d59e:	48 89 c7             	mov    %rax,%rdi
    d5a1:	e8 46 f6 ff ff       	call   cbec <semcheck_stmt_main>
    d5a6:	01 45 f4             	add    %eax,-0xc(%rbp)
    d5a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5ad:	48 8b 40 10          	mov    0x10(%rax),%rax
    d5b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d5b5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d5ba:	75 9d                	jne    d559 <semcheck_compoundstmt+0xbe>
    d5bc:	8b 45 f4             	mov    -0xc(%rbp),%eax
    d5bf:	c9                   	leave
    d5c0:	c3                   	ret

000000000000d5c1 <semcheck_ifthen>:
    d5c1:	f3 0f 1e fa          	endbr64
    d5c5:	55                   	push   %rbp
    d5c6:	48 89 e5             	mov    %rsp,%rbp
    d5c9:	48 83 ec 50          	sub    $0x50,%rsp
    d5cd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d5d1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    d5d5:	89 55 bc             	mov    %edx,-0x44(%rbp)
    d5d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d5df:	00 00
    d5e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d5e5:	31 c0                	xor    %eax,%eax
    d5e7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    d5ec:	75 28                	jne    d616 <semcheck_ifthen+0x55>
    d5ee:	48 8d 05 bb df 00 00 	lea    0xdfbb(%rip),%rax        # 1b5b0 <__PRETTY_FUNCTION__.3>
    d5f5:	48 89 c1             	mov    %rax,%rcx
    d5f8:	ba 33 01 00 00       	mov    $0x133,%edx
    d5fd:	48 8d 05 bc d8 00 00 	lea    0xd8bc(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d604:	48 89 c6             	mov    %rax,%rsi
    d607:	48 8d 05 e8 d8 00 00 	lea    0xd8e8(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d60e:	48 89 c7             	mov    %rax,%rdi
    d611:	e8 ba 4d ff ff       	call   23d0 <__assert_fail@plt>
    d616:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d61b:	75 28                	jne    d645 <semcheck_ifthen+0x84>
    d61d:	48 8d 05 8c df 00 00 	lea    0xdf8c(%rip),%rax        # 1b5b0 <__PRETTY_FUNCTION__.3>
    d624:	48 89 c1             	mov    %rax,%rcx
    d627:	ba 34 01 00 00       	mov    $0x134,%edx
    d62c:	48 8d 05 8d d8 00 00 	lea    0xd88d(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d633:	48 89 c6             	mov    %rax,%rsi
    d636:	48 8d 05 c8 d8 00 00 	lea    0xd8c8(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d63d:	48 89 c7             	mov    %rax,%rdi
    d640:	e8 8b 4d ff ff       	call   23d0 <__assert_fail@plt>
    d645:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d649:	8b 40 04             	mov    0x4(%rax),%eax
    d64c:	83 f8 03             	cmp    $0x3,%eax
    d64f:	74 28                	je     d679 <semcheck_ifthen+0xb8>
    d651:	48 8d 05 58 df 00 00 	lea    0xdf58(%rip),%rax        # 1b5b0 <__PRETTY_FUNCTION__.3>
    d658:	48 89 c1             	mov    %rax,%rcx
    d65b:	ba 35 01 00 00       	mov    $0x135,%edx
    d660:	48 8d 05 59 d8 00 00 	lea    0xd859(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d667:	48 89 c6             	mov    %rax,%rsi
    d66a:	48 8d 05 6a dc 00 00 	lea    0xdc6a(%rip),%rax        # 1b2db <__PRETTY_FUNCTION__.0+0x453>
    d671:	48 89 c7             	mov    %rax,%rdi
    d674:	e8 57 4d ff ff       	call   23d0 <__assert_fail@plt>
    d679:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    d680:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d684:	48 8b 40 08          	mov    0x8(%rax),%rax
    d688:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d68c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d690:	48 8b 40 10          	mov    0x10(%rax),%rax
    d694:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d698:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d69c:	48 8b 40 18          	mov    0x18(%rax),%rax
    d6a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d6a4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d6a8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    d6ac:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    d6b0:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d6b6:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d6bb:	48 89 c7             	mov    %rax,%rdi
    d6be:	e8 5d 08 00 00       	call   df20 <semcheck_expr_main>
    d6c3:	01 45 dc             	add    %eax,-0x24(%rbp)
    d6c6:	8b 45 d8             	mov    -0x28(%rbp),%eax
    d6c9:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    d6ce:	74 28                	je     d6f8 <semcheck_ifthen+0x137>
    d6d0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d6d4:	8b 10                	mov    (%rax),%edx
    d6d6:	48 8b 05 83 49 01 00 	mov    0x14983(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d6dd:	48 8d 0d 14 dc 00 00 	lea    0xdc14(%rip),%rcx        # 1b2f8 <__PRETTY_FUNCTION__.0+0x470>
    d6e4:	48 89 ce             	mov    %rcx,%rsi
    d6e7:	48 89 c7             	mov    %rax,%rdi
    d6ea:	b8 00 00 00 00       	mov    $0x0,%eax
    d6ef:	e8 7c 4d ff ff       	call   2470 <fprintf@plt>
    d6f4:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    d6f8:	8b 55 bc             	mov    -0x44(%rbp),%edx
    d6fb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    d6ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d703:	48 89 ce             	mov    %rcx,%rsi
    d706:	48 89 c7             	mov    %rax,%rdi
    d709:	e8 de f4 ff ff       	call   cbec <semcheck_stmt_main>
    d70e:	01 45 dc             	add    %eax,-0x24(%rbp)
    d711:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d716:	74 19                	je     d731 <semcheck_ifthen+0x170>
    d718:	8b 55 bc             	mov    -0x44(%rbp),%edx
    d71b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d71f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d723:	48 89 ce             	mov    %rcx,%rsi
    d726:	48 89 c7             	mov    %rax,%rdi
    d729:	e8 be f4 ff ff       	call   cbec <semcheck_stmt_main>
    d72e:	01 45 dc             	add    %eax,-0x24(%rbp)
    d731:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d734:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d738:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d73f:	00 00
    d741:	74 05                	je     d748 <semcheck_ifthen+0x187>
    d743:	e8 58 4c ff ff       	call   23a0 <__stack_chk_fail@plt>
    d748:	c9                   	leave
    d749:	c3                   	ret

000000000000d74a <semcheck_while>:
    d74a:	f3 0f 1e fa          	endbr64
    d74e:	55                   	push   %rbp
    d74f:	48 89 e5             	mov    %rsp,%rbp
    d752:	48 83 ec 40          	sub    $0x40,%rsp
    d756:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d75a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d75e:	89 55 cc             	mov    %edx,-0x34(%rbp)
    d761:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d768:	00 00
    d76a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d76e:	31 c0                	xor    %eax,%eax
    d770:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d775:	75 28                	jne    d79f <semcheck_while+0x55>
    d777:	48 8d 05 42 de 00 00 	lea    0xde42(%rip),%rax        # 1b5c0 <__PRETTY_FUNCTION__.2>
    d77e:	48 89 c1             	mov    %rax,%rcx
    d781:	ba 54 01 00 00       	mov    $0x154,%edx
    d786:	48 8d 05 33 d7 00 00 	lea    0xd733(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d78d:	48 89 c6             	mov    %rax,%rsi
    d790:	48 8d 05 5f d7 00 00 	lea    0xd75f(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d797:	48 89 c7             	mov    %rax,%rdi
    d79a:	e8 31 4c ff ff       	call   23d0 <__assert_fail@plt>
    d79f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d7a4:	75 28                	jne    d7ce <semcheck_while+0x84>
    d7a6:	48 8d 05 13 de 00 00 	lea    0xde13(%rip),%rax        # 1b5c0 <__PRETTY_FUNCTION__.2>
    d7ad:	48 89 c1             	mov    %rax,%rcx
    d7b0:	ba 55 01 00 00       	mov    $0x155,%edx
    d7b5:	48 8d 05 04 d7 00 00 	lea    0xd704(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d7bc:	48 89 c6             	mov    %rax,%rsi
    d7bf:	48 8d 05 3f d7 00 00 	lea    0xd73f(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d7c6:	48 89 c7             	mov    %rax,%rdi
    d7c9:	e8 02 4c ff ff       	call   23d0 <__assert_fail@plt>
    d7ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d7d2:	8b 40 04             	mov    0x4(%rax),%eax
    d7d5:	83 f8 04             	cmp    $0x4,%eax
    d7d8:	74 28                	je     d802 <semcheck_while+0xb8>
    d7da:	48 8d 05 df dd 00 00 	lea    0xdddf(%rip),%rax        # 1b5c0 <__PRETTY_FUNCTION__.2>
    d7e1:	48 89 c1             	mov    %rax,%rcx
    d7e4:	ba 56 01 00 00       	mov    $0x156,%edx
    d7e9:	48 8d 05 d0 d6 00 00 	lea    0xd6d0(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d7f0:	48 89 c6             	mov    %rax,%rsi
    d7f3:	48 8d 05 3b db 00 00 	lea    0xdb3b(%rip),%rax        # 1b335 <__PRETTY_FUNCTION__.0+0x4ad>
    d7fa:	48 89 c7             	mov    %rax,%rdi
    d7fd:	e8 ce 4b ff ff       	call   23d0 <__assert_fail@plt>
    d802:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    d809:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d80d:	48 8b 40 08          	mov    0x8(%rax),%rax
    d811:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d815:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d819:	48 8b 40 10          	mov    0x10(%rax),%rax
    d81d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d821:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d825:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    d829:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d82d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d833:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d838:	48 89 c7             	mov    %rax,%rdi
    d83b:	e8 e0 06 00 00       	call   df20 <semcheck_expr_main>
    d840:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d843:	8b 45 e0             	mov    -0x20(%rbp),%eax
    d846:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    d84b:	74 28                	je     d875 <semcheck_while+0x12b>
    d84d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d851:	8b 10                	mov    (%rax),%edx
    d853:	48 8b 05 06 48 01 00 	mov    0x14806(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d85a:	48 8d 0d ef da 00 00 	lea    0xdaef(%rip),%rcx        # 1b350 <__PRETTY_FUNCTION__.0+0x4c8>
    d861:	48 89 ce             	mov    %rcx,%rsi
    d864:	48 89 c7             	mov    %rax,%rdi
    d867:	b8 00 00 00 00       	mov    $0x0,%eax
    d86c:	e8 ff 4b ff ff       	call   2470 <fprintf@plt>
    d871:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d875:	8b 55 cc             	mov    -0x34(%rbp),%edx
    d878:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d87c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d880:	48 89 ce             	mov    %rcx,%rsi
    d883:	48 89 c7             	mov    %rax,%rdi
    d886:	e8 61 f3 ff ff       	call   cbec <semcheck_stmt_main>
    d88b:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d88e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d891:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d895:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d89c:	00 00
    d89e:	74 05                	je     d8a5 <semcheck_while+0x15b>
    d8a0:	e8 fb 4a ff ff       	call   23a0 <__stack_chk_fail@plt>
    d8a5:	c9                   	leave
    d8a6:	c3                   	ret

000000000000d8a7 <semcheck_for>:
    d8a7:	f3 0f 1e fa          	endbr64
    d8ab:	55                   	push   %rbp
    d8ac:	48 89 e5             	mov    %rsp,%rbp
    d8af:	48 83 ec 60          	sub    $0x60,%rsp
    d8b3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    d8b7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    d8bb:	89 55 ac             	mov    %edx,-0x54(%rbp)
    d8be:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d8c5:	00 00
    d8c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d8cb:	31 c0                	xor    %eax,%eax
    d8cd:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    d8d2:	75 28                	jne    d8fc <semcheck_for+0x55>
    d8d4:	48 8d 05 f5 dc 00 00 	lea    0xdcf5(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d8db:	48 89 c1             	mov    %rax,%rcx
    d8de:	ba 75 01 00 00       	mov    $0x175,%edx
    d8e3:	48 8d 05 d6 d5 00 00 	lea    0xd5d6(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d8ea:	48 89 c6             	mov    %rax,%rsi
    d8ed:	48 8d 05 02 d6 00 00 	lea    0xd602(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d8f4:	48 89 c7             	mov    %rax,%rdi
    d8f7:	e8 d4 4a ff ff       	call   23d0 <__assert_fail@plt>
    d8fc:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d901:	75 28                	jne    d92b <semcheck_for+0x84>
    d903:	48 8d 05 c6 dc 00 00 	lea    0xdcc6(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d90a:	48 89 c1             	mov    %rax,%rcx
    d90d:	ba 76 01 00 00       	mov    $0x176,%edx
    d912:	48 8d 05 a7 d5 00 00 	lea    0xd5a7(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d919:	48 89 c6             	mov    %rax,%rsi
    d91c:	48 8d 05 e2 d5 00 00 	lea    0xd5e2(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d923:	48 89 c7             	mov    %rax,%rdi
    d926:	e8 a5 4a ff ff       	call   23d0 <__assert_fail@plt>
    d92b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d92f:	8b 40 04             	mov    0x4(%rax),%eax
    d932:	83 f8 05             	cmp    $0x5,%eax
    d935:	74 28                	je     d95f <semcheck_for+0xb8>
    d937:	48 8d 05 92 dc 00 00 	lea    0xdc92(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d93e:	48 89 c1             	mov    %rax,%rcx
    d941:	ba 77 01 00 00       	mov    $0x177,%edx
    d946:	48 8d 05 73 d5 00 00 	lea    0xd573(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d94d:	48 89 c6             	mov    %rax,%rsi
    d950:	48 8d 05 39 da 00 00 	lea    0xda39(%rip),%rax        # 1b390 <__PRETTY_FUNCTION__.0+0x508>
    d957:	48 89 c7             	mov    %rax,%rdi
    d95a:	e8 71 4a ff ff       	call   23d0 <__assert_fail@plt>
    d95f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d963:	8b 40 08             	mov    0x8(%rax),%eax
    d966:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    d969:	83 7d d4 06          	cmpl   $0x6,-0x2c(%rbp)
    d96d:	74 2e                	je     d99d <semcheck_for+0xf6>
    d96f:	83 7d d4 07          	cmpl   $0x7,-0x2c(%rbp)
    d973:	74 28                	je     d99d <semcheck_for+0xf6>
    d975:	48 8d 05 54 dc 00 00 	lea    0xdc54(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d97c:	48 89 c1             	mov    %rax,%rcx
    d97f:	ba 7a 01 00 00       	mov    $0x17a,%edx
    d984:	48 8d 05 35 d5 00 00 	lea    0xd535(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d98b:	48 89 c6             	mov    %rax,%rsi
    d98e:	48 8d 05 13 da 00 00 	lea    0xda13(%rip),%rax        # 1b3a8 <__PRETTY_FUNCTION__.0+0x520>
    d995:	48 89 c7             	mov    %rax,%rdi
    d998:	e8 33 4a ff ff       	call   23d0 <__assert_fail@plt>
    d99d:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    d9a4:	83 7d d4 06          	cmpl   $0x6,-0x2c(%rbp)
    d9a8:	75 60                	jne    da0a <semcheck_for+0x163>
    d9aa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d9ae:	48 8b 40 20          	mov    0x20(%rax),%rax
    d9b2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d9b6:	8b 4d ac             	mov    -0x54(%rbp),%ecx
    d9b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d9bd:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    d9c1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d9c5:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d9cb:	48 89 c7             	mov    %rax,%rdi
    d9ce:	e8 4d 05 00 00       	call   df20 <semcheck_expr_main>
    d9d3:	01 45 d0             	add    %eax,-0x30(%rbp)
    d9d6:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d9d9:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    d9de:	74 4f                	je     da2f <semcheck_for+0x188>
    d9e0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d9e4:	8b 10                	mov    (%rax),%edx
    d9e6:	48 8b 05 73 46 01 00 	mov    0x14673(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d9ed:	48 8d 0d 04 da 00 00 	lea    0xda04(%rip),%rcx        # 1b3f8 <__PRETTY_FUNCTION__.0+0x570>
    d9f4:	48 89 ce             	mov    %rcx,%rsi
    d9f7:	48 89 c7             	mov    %rax,%rdi
    d9fa:	b8 00 00 00 00       	mov    $0x0,%eax
    d9ff:	e8 6c 4a ff ff       	call   2470 <fprintf@plt>
    da04:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    da08:	eb 25                	jmp    da2f <semcheck_for+0x188>
    da0a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da0e:	48 8b 40 20          	mov    0x20(%rax),%rax
    da12:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    da16:	8b 55 ac             	mov    -0x54(%rbp),%edx
    da19:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    da1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    da21:	48 89 ce             	mov    %rcx,%rsi
    da24:	48 89 c7             	mov    %rax,%rdi
    da27:	e8 a1 00 00 00       	call   dacd <semcheck_for_assign>
    da2c:	01 45 d0             	add    %eax,-0x30(%rbp)
    da2f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da33:	48 8b 40 10          	mov    0x10(%rax),%rax
    da37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    da3b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da3f:	48 8b 40 18          	mov    0x18(%rax),%rax
    da43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    da47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da4b:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    da4f:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    da53:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    da59:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    da5e:	48 89 c7             	mov    %rax,%rdi
    da61:	e8 ba 04 00 00       	call   df20 <semcheck_expr_main>
    da66:	01 45 d0             	add    %eax,-0x30(%rbp)
    da69:	8b 45 cc             	mov    -0x34(%rbp),%eax
    da6c:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    da71:	74 28                	je     da9b <semcheck_for+0x1f4>
    da73:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da77:	8b 10                	mov    (%rax),%edx
    da79:	48 8b 05 e0 45 01 00 	mov    0x145e0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    da80:	48 8d 0d a9 d9 00 00 	lea    0xd9a9(%rip),%rcx        # 1b430 <__PRETTY_FUNCTION__.0+0x5a8>
    da87:	48 89 ce             	mov    %rcx,%rsi
    da8a:	48 89 c7             	mov    %rax,%rdi
    da8d:	b8 00 00 00 00       	mov    $0x0,%eax
    da92:	e8 d9 49 ff ff       	call   2470 <fprintf@plt>
    da97:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    da9b:	8b 55 ac             	mov    -0x54(%rbp),%edx
    da9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    daa2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    daa6:	48 89 ce             	mov    %rcx,%rsi
    daa9:	48 89 c7             	mov    %rax,%rdi
    daac:	e8 3b f1 ff ff       	call   cbec <semcheck_stmt_main>
    dab1:	01 45 d0             	add    %eax,-0x30(%rbp)
    dab4:	8b 45 d0             	mov    -0x30(%rbp),%eax
    dab7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dabb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    dac2:	00 00
    dac4:	74 05                	je     dacb <semcheck_for+0x224>
    dac6:	e8 d5 48 ff ff       	call   23a0 <__stack_chk_fail@plt>
    dacb:	c9                   	leave
    dacc:	c3                   	ret

000000000000dacd <semcheck_for_assign>:
    dacd:	f3 0f 1e fa          	endbr64
    dad1:	55                   	push   %rbp
    dad2:	48 89 e5             	mov    %rsp,%rbp
    dad5:	48 83 ec 50          	sub    $0x50,%rsp
    dad9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    dadd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    dae1:	89 55 bc             	mov    %edx,-0x44(%rbp)
    dae4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    daeb:	00 00
    daed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    daf1:	31 c0                	xor    %eax,%eax
    daf3:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    daf8:	75 28                	jne    db22 <semcheck_for_assign+0x55>
    dafa:	48 8d 05 df da 00 00 	lea    0xdadf(%rip),%rax        # 1b5e0 <__PRETTY_FUNCTION__.0>
    db01:	48 89 c1             	mov    %rax,%rcx
    db04:	ba a8 01 00 00       	mov    $0x1a8,%edx
    db09:	48 8d 05 b0 d3 00 00 	lea    0xd3b0(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    db10:	48 89 c6             	mov    %rax,%rsi
    db13:	48 8d 05 dc d3 00 00 	lea    0xd3dc(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    db1a:	48 89 c7             	mov    %rax,%rdi
    db1d:	e8 ae 48 ff ff       	call   23d0 <__assert_fail@plt>
    db22:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    db27:	75 28                	jne    db51 <semcheck_for_assign+0x84>
    db29:	48 8d 05 b0 da 00 00 	lea    0xdab0(%rip),%rax        # 1b5e0 <__PRETTY_FUNCTION__.0>
    db30:	48 89 c1             	mov    %rax,%rcx
    db33:	ba a9 01 00 00       	mov    $0x1a9,%edx
    db38:	48 8d 05 81 d3 00 00 	lea    0xd381(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    db3f:	48 89 c6             	mov    %rax,%rsi
    db42:	48 8d 05 1c d9 00 00 	lea    0xd91c(%rip),%rax        # 1b465 <__PRETTY_FUNCTION__.0+0x5dd>
    db49:	48 89 c7             	mov    %rax,%rdi
    db4c:	e8 7f 48 ff ff       	call   23d0 <__assert_fail@plt>
    db51:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db55:	8b 40 04             	mov    0x4(%rax),%eax
    db58:	85 c0                	test   %eax,%eax
    db5a:	74 28                	je     db84 <semcheck_for_assign+0xb7>
    db5c:	48 8d 05 7d da 00 00 	lea    0xda7d(%rip),%rax        # 1b5e0 <__PRETTY_FUNCTION__.0>
    db63:	48 89 c1             	mov    %rax,%rcx
    db66:	ba aa 01 00 00       	mov    $0x1aa,%edx
    db6b:	48 8d 05 4e d3 00 00 	lea    0xd34e(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    db72:	48 89 c6             	mov    %rax,%rsi
    db75:	48 8d 05 fc d8 00 00 	lea    0xd8fc(%rip),%rax        # 1b478 <__PRETTY_FUNCTION__.0+0x5f0>
    db7c:	48 89 c7             	mov    %rax,%rdi
    db7f:	e8 4c 48 ff ff       	call   23d0 <__assert_fail@plt>
    db84:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    db8b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db8f:	48 8b 40 08          	mov    0x8(%rax),%rax
    db93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    db97:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db9b:	48 8b 40 10          	mov    0x10(%rax),%rax
    db9f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dba3:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    dba6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbaa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    dbae:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    dbb2:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    dbb8:	48 89 c7             	mov    %rax,%rdi
    dbbb:	e8 60 03 00 00       	call   df20 <semcheck_expr_main>
    dbc0:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dbc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dbc7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    dbcb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    dbcf:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    dbd5:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    dbda:	48 89 c7             	mov    %rax,%rdi
    dbdd:	e8 3e 03 00 00       	call   df20 <semcheck_expr_main>
    dbe2:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dbe5:	8b 55 dc             	mov    -0x24(%rbp),%edx
    dbe8:	8b 45 e0             	mov    -0x20(%rbp),%eax
    dbeb:	39 c2                	cmp    %eax,%edx
    dbed:	74 28                	je     dc17 <semcheck_for_assign+0x14a>
    dbef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dbf3:	8b 10                	mov    (%rax),%edx
    dbf5:	48 8b 05 64 44 01 00 	mov    0x14464(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    dbfc:	48 8d 0d 9d d8 00 00 	lea    0xd89d(%rip),%rcx        # 1b4a0 <__PRETTY_FUNCTION__.0+0x618>
    dc03:	48 89 ce             	mov    %rcx,%rsi
    dc06:	48 89 c7             	mov    %rax,%rdi
    dc09:	b8 00 00 00 00       	mov    $0x0,%eax
    dc0e:	e8 5d 48 ff ff       	call   2470 <fprintf@plt>
    dc13:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    dc17:	8b 45 dc             	mov    -0x24(%rbp),%eax
    dc1a:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    dc1f:	74 28                	je     dc49 <semcheck_for_assign+0x17c>
    dc21:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dc25:	8b 10                	mov    (%rax),%edx
    dc27:	48 8b 05 32 44 01 00 	mov    0x14432(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    dc2e:	48 8d 0d b3 d8 00 00 	lea    0xd8b3(%rip),%rcx        # 1b4e8 <__PRETTY_FUNCTION__.0+0x660>
    dc35:	48 89 ce             	mov    %rcx,%rsi
    dc38:	48 89 c7             	mov    %rax,%rdi
    dc3b:	b8 00 00 00 00       	mov    $0x0,%eax
    dc40:	e8 2b 48 ff ff       	call   2470 <fprintf@plt>
    dc45:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    dc49:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    dc4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc50:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    dc57:	00 00
    dc59:	74 05                	je     dc60 <semcheck_for_assign+0x193>
    dc5b:	e8 40 47 ff ff       	call   23a0 <__stack_chk_fail@plt>
    dc60:	c9                   	leave
    dc61:	c3                   	ret

000000000000dc62 <set_hash_meta>:
    dc62:	f3 0f 1e fa          	endbr64
    dc66:	55                   	push   %rbp
    dc67:	48 89 e5             	mov    %rsp,%rbp
    dc6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc6e:	89 75 f4             	mov    %esi,-0xc(%rbp)
    dc71:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
    dc75:	75 24                	jne    dc9b <set_hash_meta+0x39>
    dc77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc7b:	8b 40 20             	mov    0x20(%rax),%eax
    dc7e:	8d 50 01             	lea    0x1(%rax),%edx
    dc81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc85:	89 50 20             	mov    %edx,0x20(%rax)
    dc88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc8c:	8b 40 24             	mov    0x24(%rax),%eax
    dc8f:	8d 50 01             	lea    0x1(%rax),%edx
    dc92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc96:	89 50 24             	mov    %edx,0x24(%rax)
    dc99:	eb 2b                	jmp    dcc6 <set_hash_meta+0x64>
    dc9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc9f:	8b 50 20             	mov    0x20(%rax),%edx
    dca2:	b8 01 00 00 00       	mov    $0x1,%eax
    dca7:	2b 45 f4             	sub    -0xc(%rbp),%eax
    dcaa:	01 c2                	add    %eax,%edx
    dcac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcb0:	89 50 20             	mov    %edx,0x20(%rax)
    dcb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcb7:	8b 50 24             	mov    0x24(%rax),%edx
    dcba:	8b 45 f4             	mov    -0xc(%rbp),%eax
    dcbd:	01 c2                	add    %eax,%edx
    dcbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcc3:	89 50 24             	mov    %edx,0x24(%rax)
    dcc6:	90                   	nop
    dcc7:	5d                   	pop    %rbp
    dcc8:	c3                   	ret

000000000000dcc9 <is_type_ir>:
    dcc9:	f3 0f 1e fa          	endbr64
    dccd:	55                   	push   %rbp
    dcce:	48 89 e5             	mov    %rsp,%rbp
    dcd1:	48 83 ec 10          	sub    $0x10,%rsp
    dcd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcd9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dcde:	75 28                	jne    dd08 <is_type_ir+0x3f>
    dce0:	48 8d 05 d1 e0 00 00 	lea    0xe0d1(%rip),%rax        # 1bdb8 <__PRETTY_FUNCTION__.10>
    dce7:	48 89 c1             	mov    %rax,%rcx
    dcea:	ba 3e 00 00 00       	mov    $0x3e,%edx
    dcef:	48 8d 05 0a d9 00 00 	lea    0xd90a(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    dcf6:	48 89 c6             	mov    %rax,%rsi
    dcf9:	48 8d 05 36 d9 00 00 	lea    0xd936(%rip),%rax        # 1b636 <__PRETTY_FUNCTION__.0+0x56>
    dd00:	48 89 c7             	mov    %rax,%rdi
    dd03:	e8 c8 46 ff ff       	call   23d0 <__assert_fail@plt>
    dd08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd0c:	8b 00                	mov    (%rax),%eax
    dd0e:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    dd13:	74 0d                	je     dd22 <is_type_ir+0x59>
    dd15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd19:	8b 00                	mov    (%rax),%eax
    dd1b:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    dd20:	75 07                	jne    dd29 <is_type_ir+0x60>
    dd22:	b8 01 00 00 00       	mov    $0x1,%eax
    dd27:	eb 05                	jmp    dd2e <is_type_ir+0x65>
    dd29:	b8 00 00 00 00       	mov    $0x0,%eax
    dd2e:	c9                   	leave
    dd2f:	c3                   	ret

000000000000dd30 <is_and_or>:
    dd30:	f3 0f 1e fa          	endbr64
    dd34:	55                   	push   %rbp
    dd35:	48 89 e5             	mov    %rsp,%rbp
    dd38:	48 83 ec 10          	sub    $0x10,%rsp
    dd3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd40:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dd45:	75 28                	jne    dd6f <is_and_or+0x3f>
    dd47:	48 8d 05 7a e0 00 00 	lea    0xe07a(%rip),%rax        # 1bdc8 <__PRETTY_FUNCTION__.9>
    dd4e:	48 89 c1             	mov    %rax,%rcx
    dd51:	ba 44 00 00 00       	mov    $0x44,%edx
    dd56:	48 8d 05 a3 d8 00 00 	lea    0xd8a3(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    dd5d:	48 89 c6             	mov    %rax,%rsi
    dd60:	48 8d 05 cf d8 00 00 	lea    0xd8cf(%rip),%rax        # 1b636 <__PRETTY_FUNCTION__.0+0x56>
    dd67:	48 89 c7             	mov    %rax,%rdi
    dd6a:	e8 61 46 ff ff       	call   23d0 <__assert_fail@plt>
    dd6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd73:	8b 00                	mov    (%rax),%eax
    dd75:	3d 34 01 00 00       	cmp    $0x134,%eax
    dd7a:	74 0d                	je     dd89 <is_and_or+0x59>
    dd7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd80:	8b 00                	mov    (%rax),%eax
    dd82:	3d 30 01 00 00       	cmp    $0x130,%eax
    dd87:	75 07                	jne    dd90 <is_and_or+0x60>
    dd89:	b8 01 00 00 00       	mov    $0x1,%eax
    dd8e:	eb 05                	jmp    dd95 <is_and_or+0x65>
    dd90:	b8 00 00 00 00       	mov    $0x0,%eax
    dd95:	c9                   	leave
    dd96:	c3                   	ret

000000000000dd97 <set_type_from_hashtype>:
    dd97:	f3 0f 1e fa          	endbr64
    dd9b:	55                   	push   %rbp
    dd9c:	48 89 e5             	mov    %rsp,%rbp
    dd9f:	48 83 ec 10          	sub    $0x10,%rsp
    dda3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dda7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ddab:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ddb0:	75 28                	jne    ddda <set_type_from_hashtype+0x43>
    ddb2:	48 8d 05 27 e0 00 00 	lea    0xe027(%rip),%rax        # 1bde0 <__PRETTY_FUNCTION__.8>
    ddb9:	48 89 c1             	mov    %rax,%rcx
    ddbc:	ba 4a 00 00 00       	mov    $0x4a,%edx
    ddc1:	48 8d 05 38 d8 00 00 	lea    0xd838(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ddc8:	48 89 c6             	mov    %rax,%rsi
    ddcb:	48 8d 05 64 d8 00 00 	lea    0xd864(%rip),%rax        # 1b636 <__PRETTY_FUNCTION__.0+0x56>
    ddd2:	48 89 c7             	mov    %rax,%rdi
    ddd5:	e8 f6 45 ff ff       	call   23d0 <__assert_fail@plt>
    ddda:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dddf:	75 28                	jne    de09 <set_type_from_hashtype+0x72>
    dde1:	48 8d 05 f8 df 00 00 	lea    0xdff8(%rip),%rax        # 1bde0 <__PRETTY_FUNCTION__.8>
    dde8:	48 89 c1             	mov    %rax,%rcx
    ddeb:	ba 4b 00 00 00       	mov    $0x4b,%edx
    ddf0:	48 8d 05 09 d8 00 00 	lea    0xd809(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ddf7:	48 89 c6             	mov    %rax,%rsi
    ddfa:	48 8d 05 42 d8 00 00 	lea    0xd842(%rip),%rax        # 1b643 <__PRETTY_FUNCTION__.0+0x63>
    de01:	48 89 c7             	mov    %rax,%rdi
    de04:	e8 c7 45 ff ff       	call   23d0 <__assert_fail@plt>
    de09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de0d:	8b 40 14             	mov    0x14(%rax),%eax
    de10:	83 f8 05             	cmp    $0x5,%eax
    de13:	77 5f                	ja     de74 <set_type_from_hashtype+0xdd>
    de15:	89 c0                	mov    %eax,%eax
    de17:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    de1e:	00
    de1f:	48 8d 05 62 d8 00 00 	lea    0xd862(%rip),%rax        # 1b688 <__PRETTY_FUNCTION__.0+0xa8>
    de26:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    de29:	48 98                	cltq
    de2b:	48 8d 15 56 d8 00 00 	lea    0xd856(%rip),%rdx        # 1b688 <__PRETTY_FUNCTION__.0+0xa8>
    de32:	48 01 d0             	add    %rdx,%rax
    de35:	3e ff e0             	notrack jmp *%rax
    de38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de3c:	c7 00 0b 01 00 00    	movl   $0x10b,(%rax)
    de42:	eb 5d                	jmp    dea1 <set_type_from_hashtype+0x10a>
    de44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de48:	c7 00 0c 01 00 00    	movl   $0x10c,(%rax)
    de4e:	eb 51                	jmp    dea1 <set_type_from_hashtype+0x10a>
    de50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de54:	c7 00 04 01 00 00    	movl   $0x104,(%rax)
    de5a:	eb 45                	jmp    dea1 <set_type_from_hashtype+0x10a>
    de5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de60:	c7 00 0e 01 00 00    	movl   $0x10e,(%rax)
    de66:	eb 39                	jmp    dea1 <set_type_from_hashtype+0x10a>
    de68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de6c:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    de72:	eb 2d                	jmp    dea1 <set_type_from_hashtype+0x10a>
    de74:	48 8b 05 e5 41 01 00 	mov    0x141e5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    de7b:	48 89 c1             	mov    %rax,%rcx
    de7e:	ba 2c 00 00 00       	mov    $0x2c,%edx
    de83:	be 01 00 00 00       	mov    $0x1,%esi
    de88:	48 8d 05 c9 d7 00 00 	lea    0xd7c9(%rip),%rax        # 1b658 <__PRETTY_FUNCTION__.0+0x78>
    de8f:	48 89 c7             	mov    %rax,%rdi
    de92:	e8 b9 46 ff ff       	call   2550 <fwrite@plt>
    de97:	bf 01 00 00 00       	mov    $0x1,%edi
    de9c:	e8 9f 46 ff ff       	call   2540 <exit@plt>
    dea1:	90                   	nop
    dea2:	c9                   	leave
    dea3:	c3                   	ret

000000000000dea4 <semcheck_expr>:
    dea4:	f3 0f 1e fa          	endbr64
    dea8:	55                   	push   %rbp
    dea9:	48 89 e5             	mov    %rsp,%rbp
    deac:	48 83 ec 20          	sub    $0x20,%rsp
    deb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    deb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    debc:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    debf:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
    dec3:	8b 7d e0             	mov    -0x20(%rbp),%edi
    dec6:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    dec9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    decd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    ded1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ded5:	41 89 f8             	mov    %edi,%r8d
    ded8:	48 89 c7             	mov    %rax,%rdi
    dedb:	e8 40 00 00 00       	call   df20 <semcheck_expr_main>
    dee0:	90                   	nop
    dee1:	c9                   	leave
    dee2:	c3                   	ret

000000000000dee3 <semcheck_expr_func>:
    dee3:	f3 0f 1e fa          	endbr64
    dee7:	55                   	push   %rbp
    dee8:	48 89 e5             	mov    %rsp,%rbp
    deeb:	48 83 ec 20          	sub    $0x20,%rsp
    deef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    def3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    def7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    defb:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    defe:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    df01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    df05:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    df09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df0d:	41 89 c8             	mov    %ecx,%r8d
    df10:	b9 00 00 00 00       	mov    $0x0,%ecx
    df15:	48 89 c7             	mov    %rax,%rdi
    df18:	e8 03 00 00 00       	call   df20 <semcheck_expr_main>
    df1d:	90                   	nop
    df1e:	c9                   	leave
    df1f:	c3                   	ret

000000000000df20 <semcheck_expr_main>:
    df20:	f3 0f 1e fa          	endbr64
    df24:	55                   	push   %rbp
    df25:	48 89 e5             	mov    %rsp,%rbp
    df28:	48 83 ec 30          	sub    $0x30,%rsp
    df2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    df34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    df38:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    df3b:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    df3f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    df44:	75 28                	jne    df6e <semcheck_expr_main+0x4e>
    df46:	48 8d 05 b3 de 00 00 	lea    0xdeb3(%rip),%rax        # 1be00 <__PRETTY_FUNCTION__.7>
    df4d:	48 89 c1             	mov    %rax,%rcx
    df50:	ba 77 00 00 00       	mov    $0x77,%edx
    df55:	48 8d 05 a4 d6 00 00 	lea    0xd6a4(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    df5c:	48 89 c6             	mov    %rax,%rsi
    df5f:	48 8d 05 3a d7 00 00 	lea    0xd73a(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    df66:	48 89 c7             	mov    %rax,%rdi
    df69:	e8 62 44 ff ff       	call   23d0 <__assert_fail@plt>
    df6e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    df73:	75 28                	jne    df9d <semcheck_expr_main+0x7d>
    df75:	48 8d 05 84 de 00 00 	lea    0xde84(%rip),%rax        # 1be00 <__PRETTY_FUNCTION__.7>
    df7c:	48 89 c1             	mov    %rax,%rcx
    df7f:	ba 78 00 00 00       	mov    $0x78,%edx
    df84:	48 8d 05 75 d6 00 00 	lea    0xd675(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    df8b:	48 89 c6             	mov    %rax,%rsi
    df8e:	48 8d 05 1a d7 00 00 	lea    0xd71a(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    df95:	48 89 c7             	mov    %rax,%rdi
    df98:	e8 33 44 ff ff       	call   23d0 <__assert_fail@plt>
    df9d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    dfa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dfa8:	8b 40 04             	mov    0x4(%rax),%eax
    dfab:	83 f8 09             	cmp    $0x9,%eax
    dfae:	0f 87 44 01 00 00    	ja     e0f8 <semcheck_expr_main+0x1d8>
    dfb4:	89 c0                	mov    %eax,%eax
    dfb6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    dfbd:	00
    dfbe:	48 8d 05 23 d7 00 00 	lea    0xd723(%rip),%rax        # 1b6e8 <__PRETTY_FUNCTION__.0+0x108>
    dfc5:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    dfc8:	48 98                	cltq
    dfca:	48 8d 15 17 d7 00 00 	lea    0xd717(%rip),%rdx        # 1b6e8 <__PRETTY_FUNCTION__.0+0x108>
    dfd1:	48 01 d0             	add    %rdx,%rax
    dfd4:	3e ff e0             	notrack jmp *%rax
    dfd7:	8b 7d d0             	mov    -0x30(%rbp),%edi
    dfda:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    dfdd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dfe1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    dfe5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfe9:	41 89 f8             	mov    %edi,%r8d
    dfec:	48 89 c7             	mov    %rax,%rdi
    dfef:	e8 36 01 00 00       	call   e12a <semcheck_relop>
    dff4:	01 45 fc             	add    %eax,-0x4(%rbp)
    dff7:	e9 29 01 00 00       	jmp    e125 <semcheck_expr_main+0x205>
    dffc:	8b 7d d0             	mov    -0x30(%rbp),%edi
    dfff:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e002:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e006:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e00a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e00e:	41 89 f8             	mov    %edi,%r8d
    e011:	48 89 c7             	mov    %rax,%rdi
    e014:	e8 63 03 00 00       	call   e37c <semcheck_signterm>
    e019:	01 45 fc             	add    %eax,-0x4(%rbp)
    e01c:	e9 04 01 00 00       	jmp    e125 <semcheck_expr_main+0x205>
    e021:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e024:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e027:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e02b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e02f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e033:	41 89 f8             	mov    %edi,%r8d
    e036:	48 89 c7             	mov    %rax,%rdi
    e039:	e8 5f 04 00 00       	call   e49d <semcheck_addop>
    e03e:	01 45 fc             	add    %eax,-0x4(%rbp)
    e041:	e9 df 00 00 00       	jmp    e125 <semcheck_expr_main+0x205>
    e046:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e049:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e04c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e050:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e058:	41 89 f8             	mov    %edi,%r8d
    e05b:	48 89 c7             	mov    %rax,%rdi
    e05e:	e8 f5 05 00 00       	call   e658 <semcheck_mulop>
    e063:	01 45 fc             	add    %eax,-0x4(%rbp)
    e066:	e9 ba 00 00 00       	jmp    e125 <semcheck_expr_main+0x205>
    e06b:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e06e:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e071:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e075:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e07d:	41 89 f8             	mov    %edi,%r8d
    e080:	48 89 c7             	mov    %rax,%rdi
    e083:	e8 8b 07 00 00       	call   e813 <semcheck_varid>
    e088:	01 45 fc             	add    %eax,-0x4(%rbp)
    e08b:	e9 95 00 00 00       	jmp    e125 <semcheck_expr_main+0x205>
    e090:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e093:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e096:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e09a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e09e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0a2:	41 89 f8             	mov    %edi,%r8d
    e0a5:	48 89 c7             	mov    %rax,%rdi
    e0a8:	e8 62 09 00 00       	call   ea0f <semcheck_arrayaccess>
    e0ad:	01 45 fc             	add    %eax,-0x4(%rbp)
    e0b0:	eb 73                	jmp    e125 <semcheck_expr_main+0x205>
    e0b2:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e0b5:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e0b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e0bc:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e0c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0c4:	41 89 f8             	mov    %edi,%r8d
    e0c7:	48 89 c7             	mov    %rax,%rdi
    e0ca:	e8 8f 0b 00 00       	call   ec5e <semcheck_funccall>
    e0cf:	01 45 fc             	add    %eax,-0x4(%rbp)
    e0d2:	eb 51                	jmp    e125 <semcheck_expr_main+0x205>
    e0d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0d8:	c7 00 0b 01 00 00    	movl   $0x10b,(%rax)
    e0de:	eb 45                	jmp    e125 <semcheck_expr_main+0x205>
    e0e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0e4:	c7 00 0c 01 00 00    	movl   $0x10c,(%rax)
    e0ea:	eb 39                	jmp    e125 <semcheck_expr_main+0x205>
    e0ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0f0:	c7 00 0e 01 00 00    	movl   $0x10e,(%rax)
    e0f6:	eb 2d                	jmp    e125 <semcheck_expr_main+0x205>
    e0f8:	48 8b 05 61 3f 01 00 	mov    0x13f61(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e0ff:	48 89 c1             	mov    %rax,%rcx
    e102:	ba 27 00 00 00       	mov    $0x27,%edx
    e107:	be 01 00 00 00       	mov    $0x1,%esi
    e10c:	48 8d 05 ad d5 00 00 	lea    0xd5ad(%rip),%rax        # 1b6c0 <__PRETTY_FUNCTION__.0+0xe0>
    e113:	48 89 c7             	mov    %rax,%rdi
    e116:	e8 35 44 ff ff       	call   2550 <fwrite@plt>
    e11b:	bf 01 00 00 00       	mov    $0x1,%edi
    e120:	e8 1b 44 ff ff       	call   2540 <exit@plt>
    e125:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e128:	c9                   	leave
    e129:	c3                   	ret

000000000000e12a <semcheck_relop>:
    e12a:	f3 0f 1e fa          	endbr64
    e12e:	55                   	push   %rbp
    e12f:	48 89 e5             	mov    %rsp,%rbp
    e132:	48 83 ec 50          	sub    $0x50,%rsp
    e136:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e13a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e13e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e142:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e145:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e149:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e150:	00 00
    e152:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e156:	31 c0                	xor    %eax,%eax
    e158:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e15d:	75 28                	jne    e187 <semcheck_relop+0x5d>
    e15f:	48 8d 05 b2 dc 00 00 	lea    0xdcb2(%rip),%rax        # 1be18 <__PRETTY_FUNCTION__.6>
    e166:	48 89 c1             	mov    %rax,%rcx
    e169:	ba b7 00 00 00       	mov    $0xb7,%edx
    e16e:	48 8d 05 8b d4 00 00 	lea    0xd48b(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e175:	48 89 c6             	mov    %rax,%rsi
    e178:	48 8d 05 21 d5 00 00 	lea    0xd521(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e17f:	48 89 c7             	mov    %rax,%rdi
    e182:	e8 49 42 ff ff       	call   23d0 <__assert_fail@plt>
    e187:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e18c:	75 28                	jne    e1b6 <semcheck_relop+0x8c>
    e18e:	48 8d 05 83 dc 00 00 	lea    0xdc83(%rip),%rax        # 1be18 <__PRETTY_FUNCTION__.6>
    e195:	48 89 c1             	mov    %rax,%rcx
    e198:	ba b8 00 00 00       	mov    $0xb8,%edx
    e19d:	48 8d 05 5c d4 00 00 	lea    0xd45c(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e1a4:	48 89 c6             	mov    %rax,%rsi
    e1a7:	48 8d 05 01 d5 00 00 	lea    0xd501(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e1ae:	48 89 c7             	mov    %rax,%rdi
    e1b1:	e8 1a 42 ff ff       	call   23d0 <__assert_fail@plt>
    e1b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e1ba:	8b 40 04             	mov    0x4(%rax),%eax
    e1bd:	85 c0                	test   %eax,%eax
    e1bf:	74 28                	je     e1e9 <semcheck_relop+0xbf>
    e1c1:	48 8d 05 50 dc 00 00 	lea    0xdc50(%rip),%rax        # 1be18 <__PRETTY_FUNCTION__.6>
    e1c8:	48 89 c1             	mov    %rax,%rcx
    e1cb:	ba b9 00 00 00       	mov    $0xb9,%edx
    e1d0:	48 8d 05 29 d4 00 00 	lea    0xd429(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e1d7:	48 89 c6             	mov    %rax,%rsi
    e1da:	48 8d 05 2f d5 00 00 	lea    0xd52f(%rip),%rax        # 1b710 <__PRETTY_FUNCTION__.0+0x130>
    e1e1:	48 89 c7             	mov    %rax,%rdi
    e1e4:	e8 e7 41 ff ff       	call   23d0 <__assert_fail@plt>
    e1e9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    e1f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e1f4:	48 8b 40 10          	mov    0x10(%rax),%rax
    e1f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e1fc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e200:	48 8b 40 18          	mov    0x18(%rax),%rax
    e204:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e208:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e20b:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e20e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e212:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e216:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e21a:	41 89 f8             	mov    %edi,%r8d
    e21d:	48 89 c7             	mov    %rax,%rdi
    e220:	e8 fb fc ff ff       	call   df20 <semcheck_expr_main>
    e225:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e228:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e22d:	74 20                	je     e24f <semcheck_relop+0x125>
    e22f:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e232:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e235:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e239:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e23d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e241:	41 89 f8             	mov    %edi,%r8d
    e244:	48 89 c7             	mov    %rax,%rdi
    e247:	e8 d4 fc ff ff       	call   df20 <semcheck_expr_main>
    e24c:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e24f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e254:	75 37                	jne    e28d <semcheck_relop+0x163>
    e256:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e259:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    e25e:	74 2d                	je     e28d <semcheck_relop+0x163>
    e260:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e264:	8b 10                	mov    (%rax),%edx
    e266:	48 8b 05 f3 3d 01 00 	mov    0x13df3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e26d:	48 8d 0d bc d4 00 00 	lea    0xd4bc(%rip),%rcx        # 1b730 <__PRETTY_FUNCTION__.0+0x150>
    e274:	48 89 ce             	mov    %rcx,%rsi
    e277:	48 89 c7             	mov    %rax,%rdi
    e27a:	b8 00 00 00 00       	mov    $0x0,%eax
    e27f:	e8 ec 41 ff ff       	call   2470 <fprintf@plt>
    e284:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e288:	e9 cc 00 00 00       	jmp    e359 <semcheck_relop+0x22f>
    e28d:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e290:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e293:	39 c2                	cmp    %eax,%edx
    e295:	74 28                	je     e2bf <semcheck_relop+0x195>
    e297:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e29b:	8b 10                	mov    (%rax),%edx
    e29d:	48 8b 05 bc 3d 01 00 	mov    0x13dbc(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e2a4:	48 8d 0d c5 d4 00 00 	lea    0xd4c5(%rip),%rcx        # 1b770 <__PRETTY_FUNCTION__.0+0x190>
    e2ab:	48 89 ce             	mov    %rcx,%rsi
    e2ae:	48 89 c7             	mov    %rax,%rdi
    e2b1:	b8 00 00 00 00       	mov    $0x0,%eax
    e2b6:	e8 b5 41 ff ff       	call   2470 <fprintf@plt>
    e2bb:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e2bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e2c3:	48 83 c0 08          	add    $0x8,%rax
    e2c7:	48 89 c7             	mov    %rax,%rdi
    e2ca:	e8 61 fa ff ff       	call   dd30 <is_and_or>
    e2cf:	85 c0                	test   %eax,%eax
    e2d1:	74 3e                	je     e311 <semcheck_relop+0x1e7>
    e2d3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e2d6:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    e2db:	75 0a                	jne    e2e7 <semcheck_relop+0x1bd>
    e2dd:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e2e0:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    e2e5:	74 72                	je     e359 <semcheck_relop+0x22f>
    e2e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e2eb:	8b 10                	mov    (%rax),%edx
    e2ed:	48 8b 05 6c 3d 01 00 	mov    0x13d6c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e2f4:	48 8d 0d ad d4 00 00 	lea    0xd4ad(%rip),%rcx        # 1b7a8 <__PRETTY_FUNCTION__.0+0x1c8>
    e2fb:	48 89 ce             	mov    %rcx,%rsi
    e2fe:	48 89 c7             	mov    %rax,%rdi
    e301:	b8 00 00 00 00       	mov    $0x0,%eax
    e306:	e8 65 41 ff ff       	call   2470 <fprintf@plt>
    e30b:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e30f:	eb 48                	jmp    e359 <semcheck_relop+0x22f>
    e311:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e315:	48 89 c7             	mov    %rax,%rdi
    e318:	e8 ac f9 ff ff       	call   dcc9 <is_type_ir>
    e31d:	85 c0                	test   %eax,%eax
    e31f:	74 10                	je     e331 <semcheck_relop+0x207>
    e321:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e325:	48 89 c7             	mov    %rax,%rdi
    e328:	e8 9c f9 ff ff       	call   dcc9 <is_type_ir>
    e32d:	85 c0                	test   %eax,%eax
    e32f:	75 28                	jne    e359 <semcheck_relop+0x22f>
    e331:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e335:	8b 10                	mov    (%rax),%edx
    e337:	48 8b 05 22 3d 01 00 	mov    0x13d22(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e33e:	48 8d 0d ab d4 00 00 	lea    0xd4ab(%rip),%rcx        # 1b7f0 <__PRETTY_FUNCTION__.0+0x210>
    e345:	48 89 ce             	mov    %rcx,%rsi
    e348:	48 89 c7             	mov    %rax,%rdi
    e34b:	b8 00 00 00 00       	mov    $0x0,%eax
    e350:	e8 1b 41 ff ff       	call   2470 <fprintf@plt>
    e355:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e359:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e35d:	c7 00 3b 01 00 00    	movl   $0x13b,(%rax)
    e363:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e366:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e36a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e371:	00 00
    e373:	74 05                	je     e37a <semcheck_relop+0x250>
    e375:	e8 26 40 ff ff       	call   23a0 <__stack_chk_fail@plt>
    e37a:	c9                   	leave
    e37b:	c3                   	ret

000000000000e37c <semcheck_signterm>:
    e37c:	f3 0f 1e fa          	endbr64
    e380:	55                   	push   %rbp
    e381:	48 89 e5             	mov    %rsp,%rbp
    e384:	48 83 ec 30          	sub    $0x30,%rsp
    e388:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e38c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e390:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e394:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    e397:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    e39b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e3a0:	75 28                	jne    e3ca <semcheck_signterm+0x4e>
    e3a2:	48 8d 05 87 da 00 00 	lea    0xda87(%rip),%rax        # 1be30 <__PRETTY_FUNCTION__.5>
    e3a9:	48 89 c1             	mov    %rax,%rcx
    e3ac:	ba f5 00 00 00       	mov    $0xf5,%edx
    e3b1:	48 8d 05 48 d2 00 00 	lea    0xd248(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e3b8:	48 89 c6             	mov    %rax,%rsi
    e3bb:	48 8d 05 de d2 00 00 	lea    0xd2de(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e3c2:	48 89 c7             	mov    %rax,%rdi
    e3c5:	e8 06 40 ff ff       	call   23d0 <__assert_fail@plt>
    e3ca:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e3cf:	75 28                	jne    e3f9 <semcheck_signterm+0x7d>
    e3d1:	48 8d 05 58 da 00 00 	lea    0xda58(%rip),%rax        # 1be30 <__PRETTY_FUNCTION__.5>
    e3d8:	48 89 c1             	mov    %rax,%rcx
    e3db:	ba f6 00 00 00       	mov    $0xf6,%edx
    e3e0:	48 8d 05 19 d2 00 00 	lea    0xd219(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e3e7:	48 89 c6             	mov    %rax,%rsi
    e3ea:	48 8d 05 be d2 00 00 	lea    0xd2be(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e3f1:	48 89 c7             	mov    %rax,%rdi
    e3f4:	e8 d7 3f ff ff       	call   23d0 <__assert_fail@plt>
    e3f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3fd:	8b 40 04             	mov    0x4(%rax),%eax
    e400:	83 f8 01             	cmp    $0x1,%eax
    e403:	74 28                	je     e42d <semcheck_signterm+0xb1>
    e405:	48 8d 05 24 da 00 00 	lea    0xda24(%rip),%rax        # 1be30 <__PRETTY_FUNCTION__.5>
    e40c:	48 89 c1             	mov    %rax,%rcx
    e40f:	ba f7 00 00 00       	mov    $0xf7,%edx
    e414:	48 8d 05 e5 d1 00 00 	lea    0xd1e5(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e41b:	48 89 c6             	mov    %rax,%rsi
    e41e:	48 8d 05 0d d4 00 00 	lea    0xd40d(%rip),%rax        # 1b832 <__PRETTY_FUNCTION__.0+0x252>
    e425:	48 89 c7             	mov    %rax,%rdi
    e428:	e8 a3 3f ff ff       	call   23d0 <__assert_fail@plt>
    e42d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    e434:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e438:	48 8b 40 08          	mov    0x8(%rax),%rax
    e43c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e440:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e443:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e446:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e44a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e44e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e452:	41 89 f8             	mov    %edi,%r8d
    e455:	48 89 c7             	mov    %rax,%rdi
    e458:	e8 c3 fa ff ff       	call   df20 <semcheck_expr_main>
    e45d:	01 45 f4             	add    %eax,-0xc(%rbp)
    e460:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e464:	48 89 c7             	mov    %rax,%rdi
    e467:	e8 5d f8 ff ff       	call   dcc9 <is_type_ir>
    e46c:	85 c0                	test   %eax,%eax
    e46e:	75 28                	jne    e498 <semcheck_signterm+0x11c>
    e470:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e474:	8b 10                	mov    (%rax),%edx
    e476:	48 8b 05 e3 3b 01 00 	mov    0x13be3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e47d:	48 8d 0d cc d3 00 00 	lea    0xd3cc(%rip),%rcx        # 1b850 <__PRETTY_FUNCTION__.0+0x270>
    e484:	48 89 ce             	mov    %rcx,%rsi
    e487:	48 89 c7             	mov    %rax,%rdi
    e48a:	b8 00 00 00 00       	mov    $0x0,%eax
    e48f:	e8 dc 3f ff ff       	call   2470 <fprintf@plt>
    e494:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    e498:	8b 45 f4             	mov    -0xc(%rbp),%eax
    e49b:	c9                   	leave
    e49c:	c3                   	ret

000000000000e49d <semcheck_addop>:
    e49d:	f3 0f 1e fa          	endbr64
    e4a1:	55                   	push   %rbp
    e4a2:	48 89 e5             	mov    %rsp,%rbp
    e4a5:	48 83 ec 50          	sub    $0x50,%rsp
    e4a9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e4ad:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e4b1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e4b5:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e4b8:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e4bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e4c3:	00 00
    e4c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e4c9:	31 c0                	xor    %eax,%eax
    e4cb:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e4d0:	75 28                	jne    e4fa <semcheck_addop+0x5d>
    e4d2:	48 8d 05 6f d9 00 00 	lea    0xd96f(%rip),%rax        # 1be48 <__PRETTY_FUNCTION__.4>
    e4d9:	48 89 c1             	mov    %rax,%rcx
    e4dc:	ba 10 01 00 00       	mov    $0x110,%edx
    e4e1:	48 8d 05 18 d1 00 00 	lea    0xd118(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e4e8:	48 89 c6             	mov    %rax,%rsi
    e4eb:	48 8d 05 ae d1 00 00 	lea    0xd1ae(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e4f2:	48 89 c7             	mov    %rax,%rdi
    e4f5:	e8 d6 3e ff ff       	call   23d0 <__assert_fail@plt>
    e4fa:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e4ff:	75 28                	jne    e529 <semcheck_addop+0x8c>
    e501:	48 8d 05 40 d9 00 00 	lea    0xd940(%rip),%rax        # 1be48 <__PRETTY_FUNCTION__.4>
    e508:	48 89 c1             	mov    %rax,%rcx
    e50b:	ba 11 01 00 00       	mov    $0x111,%edx
    e510:	48 8d 05 e9 d0 00 00 	lea    0xd0e9(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e517:	48 89 c6             	mov    %rax,%rsi
    e51a:	48 8d 05 8e d1 00 00 	lea    0xd18e(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e521:	48 89 c7             	mov    %rax,%rdi
    e524:	e8 a7 3e ff ff       	call   23d0 <__assert_fail@plt>
    e529:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e52d:	8b 40 04             	mov    0x4(%rax),%eax
    e530:	83 f8 02             	cmp    $0x2,%eax
    e533:	74 28                	je     e55d <semcheck_addop+0xc0>
    e535:	48 8d 05 0c d9 00 00 	lea    0xd90c(%rip),%rax        # 1be48 <__PRETTY_FUNCTION__.4>
    e53c:	48 89 c1             	mov    %rax,%rcx
    e53f:	ba 12 01 00 00       	mov    $0x112,%edx
    e544:	48 8d 05 b5 d0 00 00 	lea    0xd0b5(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e54b:	48 89 c6             	mov    %rax,%rsi
    e54e:	48 8d 05 2f d3 00 00 	lea    0xd32f(%rip),%rax        # 1b884 <__PRETTY_FUNCTION__.0+0x2a4>
    e555:	48 89 c7             	mov    %rax,%rdi
    e558:	e8 73 3e ff ff       	call   23d0 <__assert_fail@plt>
    e55d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    e564:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e568:	48 8b 40 10          	mov    0x10(%rax),%rax
    e56c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e570:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e574:	48 8b 40 18          	mov    0x18(%rax),%rax
    e578:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e57c:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e57f:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e582:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e586:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e58a:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e58e:	41 89 f8             	mov    %edi,%r8d
    e591:	48 89 c7             	mov    %rax,%rdi
    e594:	e8 87 f9 ff ff       	call   df20 <semcheck_expr_main>
    e599:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e59c:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e59f:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e5a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e5a6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e5aa:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e5ae:	41 89 f8             	mov    %edi,%r8d
    e5b1:	48 89 c7             	mov    %rax,%rdi
    e5b4:	e8 67 f9 ff ff       	call   df20 <semcheck_expr_main>
    e5b9:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e5bc:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e5bf:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e5c2:	39 c2                	cmp    %eax,%edx
    e5c4:	74 28                	je     e5ee <semcheck_addop+0x151>
    e5c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e5ca:	8b 10                	mov    (%rax),%edx
    e5cc:	48 8b 05 8d 3a 01 00 	mov    0x13a8d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e5d3:	48 8d 0d c6 d2 00 00 	lea    0xd2c6(%rip),%rcx        # 1b8a0 <__PRETTY_FUNCTION__.0+0x2c0>
    e5da:	48 89 ce             	mov    %rcx,%rsi
    e5dd:	48 89 c7             	mov    %rax,%rdi
    e5e0:	b8 00 00 00 00       	mov    $0x0,%eax
    e5e5:	e8 86 3e ff ff       	call   2470 <fprintf@plt>
    e5ea:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e5ee:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e5f2:	48 89 c7             	mov    %rax,%rdi
    e5f5:	e8 cf f6 ff ff       	call   dcc9 <is_type_ir>
    e5fa:	85 c0                	test   %eax,%eax
    e5fc:	74 10                	je     e60e <semcheck_addop+0x171>
    e5fe:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e602:	48 89 c7             	mov    %rax,%rdi
    e605:	e8 bf f6 ff ff       	call   dcc9 <is_type_ir>
    e60a:	85 c0                	test   %eax,%eax
    e60c:	75 28                	jne    e636 <semcheck_addop+0x199>
    e60e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e612:	8b 10                	mov    (%rax),%edx
    e614:	48 8b 05 45 3a 01 00 	mov    0x13a45(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e61b:	48 8d 0d ae d2 00 00 	lea    0xd2ae(%rip),%rcx        # 1b8d0 <__PRETTY_FUNCTION__.0+0x2f0>
    e622:	48 89 ce             	mov    %rcx,%rsi
    e625:	48 89 c7             	mov    %rax,%rdi
    e628:	b8 00 00 00 00       	mov    $0x0,%eax
    e62d:	e8 3e 3e ff ff       	call   2470 <fprintf@plt>
    e632:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e636:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e639:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e63d:	89 10                	mov    %edx,(%rax)
    e63f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e642:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e646:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e64d:	00 00
    e64f:	74 05                	je     e656 <semcheck_addop+0x1b9>
    e651:	e8 4a 3d ff ff       	call   23a0 <__stack_chk_fail@plt>
    e656:	c9                   	leave
    e657:	c3                   	ret

000000000000e658 <semcheck_mulop>:
    e658:	f3 0f 1e fa          	endbr64
    e65c:	55                   	push   %rbp
    e65d:	48 89 e5             	mov    %rsp,%rbp
    e660:	48 83 ec 50          	sub    $0x50,%rsp
    e664:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e668:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e66c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e670:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e673:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e677:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e67e:	00 00
    e680:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e684:	31 c0                	xor    %eax,%eax
    e686:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e68b:	75 28                	jne    e6b5 <semcheck_mulop+0x5d>
    e68d:	48 8d 05 c4 d7 00 00 	lea    0xd7c4(%rip),%rax        # 1be58 <__PRETTY_FUNCTION__.3>
    e694:	48 89 c1             	mov    %rax,%rcx
    e697:	ba 34 01 00 00       	mov    $0x134,%edx
    e69c:	48 8d 05 5d cf 00 00 	lea    0xcf5d(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e6a3:	48 89 c6             	mov    %rax,%rsi
    e6a6:	48 8d 05 f3 cf 00 00 	lea    0xcff3(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e6ad:	48 89 c7             	mov    %rax,%rdi
    e6b0:	e8 1b 3d ff ff       	call   23d0 <__assert_fail@plt>
    e6b5:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e6ba:	75 28                	jne    e6e4 <semcheck_mulop+0x8c>
    e6bc:	48 8d 05 95 d7 00 00 	lea    0xd795(%rip),%rax        # 1be58 <__PRETTY_FUNCTION__.3>
    e6c3:	48 89 c1             	mov    %rax,%rcx
    e6c6:	ba 35 01 00 00       	mov    $0x135,%edx
    e6cb:	48 8d 05 2e cf 00 00 	lea    0xcf2e(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e6d2:	48 89 c6             	mov    %rax,%rsi
    e6d5:	48 8d 05 d3 cf 00 00 	lea    0xcfd3(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e6dc:	48 89 c7             	mov    %rax,%rdi
    e6df:	e8 ec 3c ff ff       	call   23d0 <__assert_fail@plt>
    e6e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e6e8:	8b 40 04             	mov    0x4(%rax),%eax
    e6eb:	83 f8 03             	cmp    $0x3,%eax
    e6ee:	74 28                	je     e718 <semcheck_mulop+0xc0>
    e6f0:	48 8d 05 61 d7 00 00 	lea    0xd761(%rip),%rax        # 1be58 <__PRETTY_FUNCTION__.3>
    e6f7:	48 89 c1             	mov    %rax,%rcx
    e6fa:	ba 36 01 00 00       	mov    $0x136,%edx
    e6ff:	48 8d 05 fa ce 00 00 	lea    0xcefa(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e706:	48 89 c6             	mov    %rax,%rsi
    e709:	48 8d 05 fe d1 00 00 	lea    0xd1fe(%rip),%rax        # 1b90e <__PRETTY_FUNCTION__.0+0x32e>
    e710:	48 89 c7             	mov    %rax,%rdi
    e713:	e8 b8 3c ff ff       	call   23d0 <__assert_fail@plt>
    e718:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    e71f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e723:	48 8b 40 10          	mov    0x10(%rax),%rax
    e727:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e72b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e72f:	48 8b 40 18          	mov    0x18(%rax),%rax
    e733:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e737:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e73a:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e73d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e741:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e745:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e749:	41 89 f8             	mov    %edi,%r8d
    e74c:	48 89 c7             	mov    %rax,%rdi
    e74f:	e8 cc f7 ff ff       	call   df20 <semcheck_expr_main>
    e754:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e757:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e75a:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e75d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e761:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e765:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e769:	41 89 f8             	mov    %edi,%r8d
    e76c:	48 89 c7             	mov    %rax,%rdi
    e76f:	e8 ac f7 ff ff       	call   df20 <semcheck_expr_main>
    e774:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e777:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e77a:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e77d:	39 c2                	cmp    %eax,%edx
    e77f:	74 28                	je     e7a9 <semcheck_mulop+0x151>
    e781:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e785:	8b 10                	mov    (%rax),%edx
    e787:	48 8b 05 d2 38 01 00 	mov    0x138d2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e78e:	48 8d 0d 93 d1 00 00 	lea    0xd193(%rip),%rcx        # 1b928 <__PRETTY_FUNCTION__.0+0x348>
    e795:	48 89 ce             	mov    %rcx,%rsi
    e798:	48 89 c7             	mov    %rax,%rdi
    e79b:	b8 00 00 00 00       	mov    $0x0,%eax
    e7a0:	e8 cb 3c ff ff       	call   2470 <fprintf@plt>
    e7a5:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e7a9:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e7ad:	48 89 c7             	mov    %rax,%rdi
    e7b0:	e8 14 f5 ff ff       	call   dcc9 <is_type_ir>
    e7b5:	85 c0                	test   %eax,%eax
    e7b7:	74 10                	je     e7c9 <semcheck_mulop+0x171>
    e7b9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e7bd:	48 89 c7             	mov    %rax,%rdi
    e7c0:	e8 04 f5 ff ff       	call   dcc9 <is_type_ir>
    e7c5:	85 c0                	test   %eax,%eax
    e7c7:	75 28                	jne    e7f1 <semcheck_mulop+0x199>
    e7c9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e7cd:	8b 10                	mov    (%rax),%edx
    e7cf:	48 8b 05 8a 38 01 00 	mov    0x1388a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e7d6:	48 8d 0d 7b d1 00 00 	lea    0xd17b(%rip),%rcx        # 1b958 <__PRETTY_FUNCTION__.0+0x378>
    e7dd:	48 89 ce             	mov    %rcx,%rsi
    e7e0:	48 89 c7             	mov    %rax,%rdi
    e7e3:	b8 00 00 00 00       	mov    $0x0,%eax
    e7e8:	e8 83 3c ff ff       	call   2470 <fprintf@plt>
    e7ed:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e7f1:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e7f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e7f8:	89 10                	mov    %edx,(%rax)
    e7fa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e7fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e801:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e808:	00 00
    e80a:	74 05                	je     e811 <semcheck_mulop+0x1b9>
    e80c:	e8 8f 3b ff ff       	call   23a0 <__stack_chk_fail@plt>
    e811:	c9                   	leave
    e812:	c3                   	ret

000000000000e813 <semcheck_varid>:
    e813:	f3 0f 1e fa          	endbr64
    e817:	55                   	push   %rbp
    e818:	48 89 e5             	mov    %rsp,%rbp
    e81b:	48 83 ec 40          	sub    $0x40,%rsp
    e81f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e823:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e827:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e82b:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
    e82e:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
    e832:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e839:	00 00
    e83b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e83f:	31 c0                	xor    %eax,%eax
    e841:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e846:	75 28                	jne    e870 <semcheck_varid+0x5d>
    e848:	48 8d 05 19 d6 00 00 	lea    0xd619(%rip),%rax        # 1be68 <__PRETTY_FUNCTION__.2>
    e84f:	48 89 c1             	mov    %rax,%rcx
    e852:	ba 58 01 00 00       	mov    $0x158,%edx
    e857:	48 8d 05 a2 cd 00 00 	lea    0xcda2(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e85e:	48 89 c6             	mov    %rax,%rsi
    e861:	48 8d 05 38 ce 00 00 	lea    0xce38(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e868:	48 89 c7             	mov    %rax,%rdi
    e86b:	e8 60 3b ff ff       	call   23d0 <__assert_fail@plt>
    e870:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e875:	75 28                	jne    e89f <semcheck_varid+0x8c>
    e877:	48 8d 05 ea d5 00 00 	lea    0xd5ea(%rip),%rax        # 1be68 <__PRETTY_FUNCTION__.2>
    e87e:	48 89 c1             	mov    %rax,%rcx
    e881:	ba 59 01 00 00       	mov    $0x159,%edx
    e886:	48 8d 05 73 cd 00 00 	lea    0xcd73(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e88d:	48 89 c6             	mov    %rax,%rsi
    e890:	48 8d 05 18 ce 00 00 	lea    0xce18(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e897:	48 89 c7             	mov    %rax,%rdi
    e89a:	e8 31 3b ff ff       	call   23d0 <__assert_fail@plt>
    e89f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8a3:	8b 40 04             	mov    0x4(%rax),%eax
    e8a6:	83 f8 04             	cmp    $0x4,%eax
    e8a9:	74 28                	je     e8d3 <semcheck_varid+0xc0>
    e8ab:	48 8d 05 b6 d5 00 00 	lea    0xd5b6(%rip),%rax        # 1be68 <__PRETTY_FUNCTION__.2>
    e8b2:	48 89 c1             	mov    %rax,%rcx
    e8b5:	ba 5a 01 00 00       	mov    $0x15a,%edx
    e8ba:	48 8d 05 3f cd 00 00 	lea    0xcd3f(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e8c1:	48 89 c6             	mov    %rax,%rsi
    e8c4:	48 8d 05 cb d0 00 00 	lea    0xd0cb(%rip),%rax        # 1b996 <__PRETTY_FUNCTION__.0+0x3b6>
    e8cb:	48 89 c7             	mov    %rax,%rdi
    e8ce:	e8 fd 3a ff ff       	call   23d0 <__assert_fail@plt>
    e8d3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    e8da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8de:	48 8b 40 08          	mov    0x8(%rax),%rax
    e8e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e8e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8ea:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e8ee:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e8f2:	48 89 ce             	mov    %rcx,%rsi
    e8f5:	48 89 c7             	mov    %rax,%rdi
    e8f8:	e8 de d7 ff ff       	call   c0db <FindIdent>
    e8fd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    e900:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
    e904:	75 38                	jne    e93e <semcheck_varid+0x12b>
    e906:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e90a:	8b 10                	mov    (%rax),%edx
    e90c:	48 8b 05 4d 37 01 00 	mov    0x1374d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e913:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e917:	48 8d 35 92 d0 00 00 	lea    0xd092(%rip),%rsi        # 1b9b0 <__PRETTY_FUNCTION__.0+0x3d0>
    e91e:	48 89 c7             	mov    %rax,%rdi
    e921:	b8 00 00 00 00       	mov    $0x0,%eax
    e926:	e8 45 3b ff ff       	call   2470 <fprintf@plt>
    e92b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e92f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e933:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    e939:	e9 b8 00 00 00       	jmp    e9f6 <semcheck_varid+0x1e3>
    e93e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e942:	8b 55 c0             	mov    -0x40(%rbp),%edx
    e945:	89 d6                	mov    %edx,%esi
    e947:	48 89 c7             	mov    %rax,%rdi
    e94a:	e8 13 f3 ff ff       	call   dc62 <set_hash_meta>
    e94f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e952:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    e955:	7e 4c                	jle    e9a3 <semcheck_varid+0x190>
    e957:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e95b:	8b 10                	mov    (%rax),%edx
    e95d:	48 8b 05 fc 36 01 00 	mov    0x136fc(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e964:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e968:	48 8d 35 71 d0 00 00 	lea    0xd071(%rip),%rsi        # 1b9e0 <__PRETTY_FUNCTION__.0+0x400>
    e96f:	48 89 c7             	mov    %rax,%rdi
    e972:	b8 00 00 00 00       	mov    $0x0,%eax
    e977:	e8 f4 3a ff ff       	call   2470 <fprintf@plt>
    e97c:	48 8b 05 dd 36 01 00 	mov    0x136dd(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e983:	48 89 c1             	mov    %rax,%rcx
    e986:	ba 30 00 00 00       	mov    $0x30,%edx
    e98b:	be 01 00 00 00       	mov    $0x1,%esi
    e990:	48 8d 05 81 d0 00 00 	lea    0xd081(%rip),%rax        # 1ba18 <__PRETTY_FUNCTION__.0+0x438>
    e997:	48 89 c7             	mov    %rax,%rdi
    e99a:	e8 b1 3b ff ff       	call   2550 <fwrite@plt>
    e99f:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e9a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e9a7:	8b 40 10             	mov    0x10(%rax),%eax
    e9aa:	85 c0                	test   %eax,%eax
    e9ac:	74 35                	je     e9e3 <semcheck_varid+0x1d0>
    e9ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e9b2:	8b 40 10             	mov    0x10(%rax),%eax
    e9b5:	83 f8 04             	cmp    $0x4,%eax
    e9b8:	74 29                	je     e9e3 <semcheck_varid+0x1d0>
    e9ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e9be:	8b 10                	mov    (%rax),%edx
    e9c0:	48 8b 05 99 36 01 00 	mov    0x13699(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e9c7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e9cb:	48 8d 35 7e d0 00 00 	lea    0xd07e(%rip),%rsi        # 1ba50 <__PRETTY_FUNCTION__.0+0x470>
    e9d2:	48 89 c7             	mov    %rax,%rdi
    e9d5:	b8 00 00 00 00       	mov    $0x0,%eax
    e9da:	e8 91 3a ff ff       	call   2470 <fprintf@plt>
    e9df:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e9e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e9e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9eb:	48 89 d6             	mov    %rdx,%rsi
    e9ee:	48 89 c7             	mov    %rax,%rdi
    e9f1:	e8 a1 f3 ff ff       	call   dd97 <set_type_from_hashtype>
    e9f6:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e9f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e9fd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ea04:	00 00
    ea06:	74 05                	je     ea0d <semcheck_varid+0x1fa>
    ea08:	e8 93 39 ff ff       	call   23a0 <__stack_chk_fail@plt>
    ea0d:	c9                   	leave
    ea0e:	c3                   	ret

000000000000ea0f <semcheck_arrayaccess>:
    ea0f:	f3 0f 1e fa          	endbr64
    ea13:	55                   	push   %rbp
    ea14:	48 89 e5             	mov    %rsp,%rbp
    ea17:	48 83 ec 50          	sub    $0x50,%rsp
    ea1b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ea1f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    ea23:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    ea27:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    ea2a:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    ea2e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ea35:	00 00
    ea37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ea3b:	31 c0                	xor    %eax,%eax
    ea3d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    ea42:	75 28                	jne    ea6c <semcheck_arrayaccess+0x5d>
    ea44:	48 8d 05 35 d4 00 00 	lea    0xd435(%rip),%rax        # 1be80 <__PRETTY_FUNCTION__.1>
    ea4b:	48 89 c1             	mov    %rax,%rcx
    ea4e:	ba 87 01 00 00       	mov    $0x187,%edx
    ea53:	48 8d 05 a6 cb 00 00 	lea    0xcba6(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ea5a:	48 89 c6             	mov    %rax,%rsi
    ea5d:	48 8d 05 3c cc 00 00 	lea    0xcc3c(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    ea64:	48 89 c7             	mov    %rax,%rdi
    ea67:	e8 64 39 ff ff       	call   23d0 <__assert_fail@plt>
    ea6c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    ea71:	75 28                	jne    ea9b <semcheck_arrayaccess+0x8c>
    ea73:	48 8d 05 06 d4 00 00 	lea    0xd406(%rip),%rax        # 1be80 <__PRETTY_FUNCTION__.1>
    ea7a:	48 89 c1             	mov    %rax,%rcx
    ea7d:	ba 88 01 00 00       	mov    $0x188,%edx
    ea82:	48 8d 05 77 cb 00 00 	lea    0xcb77(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ea89:	48 89 c6             	mov    %rax,%rsi
    ea8c:	48 8d 05 1c cc 00 00 	lea    0xcc1c(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    ea93:	48 89 c7             	mov    %rax,%rdi
    ea96:	e8 35 39 ff ff       	call   23d0 <__assert_fail@plt>
    ea9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ea9f:	8b 40 04             	mov    0x4(%rax),%eax
    eaa2:	83 f8 05             	cmp    $0x5,%eax
    eaa5:	74 28                	je     eacf <semcheck_arrayaccess+0xc0>
    eaa7:	48 8d 05 d2 d3 00 00 	lea    0xd3d2(%rip),%rax        # 1be80 <__PRETTY_FUNCTION__.1>
    eaae:	48 89 c1             	mov    %rax,%rcx
    eab1:	ba 89 01 00 00       	mov    $0x189,%edx
    eab6:	48 8d 05 43 cb 00 00 	lea    0xcb43(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    eabd:	48 89 c6             	mov    %rax,%rsi
    eac0:	48 8d 05 d1 cf 00 00 	lea    0xcfd1(%rip),%rax        # 1ba98 <__PRETTY_FUNCTION__.0+0x4b8>
    eac7:	48 89 c7             	mov    %rax,%rdi
    eaca:	e8 01 39 ff ff       	call   23d0 <__assert_fail@plt>
    eacf:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    ead6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eada:	48 8b 40 08          	mov    0x8(%rax),%rax
    eade:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    eae2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eae6:	48 8b 40 10          	mov    0x10(%rax),%rax
    eaea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    eaee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eaf2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    eaf6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    eafa:	48 89 ce             	mov    %rcx,%rsi
    eafd:	48 89 c7             	mov    %rax,%rdi
    eb00:	e8 d6 d5 ff ff       	call   c0db <FindIdent>
    eb05:	89 45 dc             	mov    %eax,-0x24(%rbp)
    eb08:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
    eb0c:	75 38                	jne    eb46 <semcheck_arrayaccess+0x137>
    eb0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb12:	8b 10                	mov    (%rax),%edx
    eb14:	48 8b 05 45 35 01 00 	mov    0x13545(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    eb1b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    eb1f:	48 8d 35 8a ce 00 00 	lea    0xce8a(%rip),%rsi        # 1b9b0 <__PRETTY_FUNCTION__.0+0x3d0>
    eb26:	48 89 c7             	mov    %rax,%rdi
    eb29:	b8 00 00 00 00       	mov    $0x0,%eax
    eb2e:	e8 3d 39 ff ff       	call   2470 <fprintf@plt>
    eb33:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    eb37:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb3b:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    eb41:	e9 ad 00 00 00       	jmp    ebf3 <semcheck_arrayaccess+0x1e4>
    eb46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb4a:	8b 55 b0             	mov    -0x50(%rbp),%edx
    eb4d:	89 d6                	mov    %edx,%esi
    eb4f:	48 89 c7             	mov    %rax,%rdi
    eb52:	e8 0b f1 ff ff       	call   dc62 <set_hash_meta>
    eb57:	8b 45 dc             	mov    -0x24(%rbp),%eax
    eb5a:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    eb5d:	7e 4c                	jle    ebab <semcheck_arrayaccess+0x19c>
    eb5f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb63:	8b 10                	mov    (%rax),%edx
    eb65:	48 8b 05 f4 34 01 00 	mov    0x134f4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    eb6c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    eb70:	48 8d 35 69 ce 00 00 	lea    0xce69(%rip),%rsi        # 1b9e0 <__PRETTY_FUNCTION__.0+0x400>
    eb77:	48 89 c7             	mov    %rax,%rdi
    eb7a:	b8 00 00 00 00       	mov    $0x0,%eax
    eb7f:	e8 ec 38 ff ff       	call   2470 <fprintf@plt>
    eb84:	48 8b 05 d5 34 01 00 	mov    0x134d5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    eb8b:	48 89 c1             	mov    %rax,%rcx
    eb8e:	ba 30 00 00 00       	mov    $0x30,%edx
    eb93:	be 01 00 00 00       	mov    $0x1,%esi
    eb98:	48 8d 05 79 ce 00 00 	lea    0xce79(%rip),%rax        # 1ba18 <__PRETTY_FUNCTION__.0+0x438>
    eb9f:	48 89 c7             	mov    %rax,%rdi
    eba2:	e8 a9 39 ff ff       	call   2550 <fwrite@plt>
    eba7:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    ebab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ebaf:	8b 40 10             	mov    0x10(%rax),%eax
    ebb2:	83 f8 01             	cmp    $0x1,%eax
    ebb5:	74 29                	je     ebe0 <semcheck_arrayaccess+0x1d1>
    ebb7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebbb:	8b 10                	mov    (%rax),%edx
    ebbd:	48 8b 05 9c 34 01 00 	mov    0x1349c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ebc4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    ebc8:	48 8d 35 e9 ce 00 00 	lea    0xcee9(%rip),%rsi        # 1bab8 <__PRETTY_FUNCTION__.0+0x4d8>
    ebcf:	48 89 c7             	mov    %rax,%rdi
    ebd2:	b8 00 00 00 00       	mov    $0x0,%eax
    ebd7:	e8 94 38 ff ff       	call   2470 <fprintf@plt>
    ebdc:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    ebe0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ebe4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ebe8:	48 89 d6             	mov    %rdx,%rsi
    ebeb:	48 89 c7             	mov    %rax,%rdi
    ebee:	e8 a4 f1 ff ff       	call   dd97 <set_type_from_hashtype>
    ebf3:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    ebf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ebfa:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    ebfe:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    ec02:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ec08:	48 89 c7             	mov    %rax,%rdi
    ec0b:	e8 10 f3 ff ff       	call   df20 <semcheck_expr_main>
    ec10:	01 45 d8             	add    %eax,-0x28(%rbp)
    ec13:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ec16:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ec1b:	74 28                	je     ec45 <semcheck_arrayaccess+0x236>
    ec1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec21:	8b 10                	mov    (%rax),%edx
    ec23:	48 8b 05 36 34 01 00 	mov    0x13436(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ec2a:	48 8d 0d bf ce 00 00 	lea    0xcebf(%rip),%rcx        # 1baf0 <__PRETTY_FUNCTION__.0+0x510>
    ec31:	48 89 ce             	mov    %rcx,%rsi
    ec34:	48 89 c7             	mov    %rax,%rdi
    ec37:	b8 00 00 00 00       	mov    $0x0,%eax
    ec3c:	e8 2f 38 ff ff       	call   2470 <fprintf@plt>
    ec41:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    ec45:	8b 45 d8             	mov    -0x28(%rbp),%eax
    ec48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ec4c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ec53:	00 00
    ec55:	74 05                	je     ec5c <semcheck_arrayaccess+0x24d>
    ec57:	e8 44 37 ff ff       	call   23a0 <__stack_chk_fail@plt>
    ec5c:	c9                   	leave
    ec5d:	c3                   	ret

000000000000ec5e <semcheck_funccall>:
    ec5e:	f3 0f 1e fa          	endbr64
    ec62:	55                   	push   %rbp
    ec63:	48 89 e5             	mov    %rsp,%rbp
    ec66:	53                   	push   %rbx
    ec67:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    ec6e:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
    ec75:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
    ec7c:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
    ec83:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
    ec89:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
    ec90:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ec97:	00 00
    ec99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ec9d:	31 c0                	xor    %eax,%eax
    ec9f:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
    eca6:	00
    eca7:	75 28                	jne    ecd1 <semcheck_funccall+0x73>
    eca9:	48 8d 05 f0 d1 00 00 	lea    0xd1f0(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    ecb0:	48 89 c1             	mov    %rax,%rcx
    ecb3:	ba c4 01 00 00       	mov    $0x1c4,%edx
    ecb8:	48 8d 05 41 c9 00 00 	lea    0xc941(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ecbf:	48 89 c6             	mov    %rax,%rsi
    ecc2:	48 8d 05 d7 c9 00 00 	lea    0xc9d7(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    ecc9:	48 89 c7             	mov    %rax,%rdi
    eccc:	e8 ff 36 ff ff       	call   23d0 <__assert_fail@plt>
    ecd1:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)
    ecd8:	00
    ecd9:	75 28                	jne    ed03 <semcheck_funccall+0xa5>
    ecdb:	48 8d 05 be d1 00 00 	lea    0xd1be(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    ece2:	48 89 c1             	mov    %rax,%rcx
    ece5:	ba c5 01 00 00       	mov    $0x1c5,%edx
    ecea:	48 8d 05 0f c9 00 00 	lea    0xc90f(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ecf1:	48 89 c6             	mov    %rax,%rsi
    ecf4:	48 8d 05 b4 c9 00 00 	lea    0xc9b4(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    ecfb:	48 89 c7             	mov    %rax,%rdi
    ecfe:	e8 cd 36 ff ff       	call   23d0 <__assert_fail@plt>
    ed03:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed0a:	8b 40 04             	mov    0x4(%rax),%eax
    ed0d:	83 f8 06             	cmp    $0x6,%eax
    ed10:	74 28                	je     ed3a <semcheck_funccall+0xdc>
    ed12:	48 8d 05 87 d1 00 00 	lea    0xd187(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    ed19:	48 89 c1             	mov    %rax,%rcx
    ed1c:	ba c6 01 00 00       	mov    $0x1c6,%edx
    ed21:	48 8d 05 d8 c8 00 00 	lea    0xc8d8(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ed28:	48 89 c6             	mov    %rax,%rsi
    ed2b:	48 8d 05 fe cd 00 00 	lea    0xcdfe(%rip),%rax        # 1bb30 <__PRETTY_FUNCTION__.0+0x550>
    ed32:	48 89 c7             	mov    %rax,%rdi
    ed35:	e8 96 36 ff ff       	call   23d0 <__assert_fail@plt>
    ed3a:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    ed41:	00 00 00
    ed44:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed4b:	48 8b 40 08          	mov    0x8(%rax),%rax
    ed4f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ed53:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed5a:	48 8b 40 18          	mov    0x18(%rax),%rax
    ed5e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    ed65:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    ed69:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ed70:	48 89 d6             	mov    %rdx,%rsi
    ed73:	48 89 c7             	mov    %rax,%rdi
    ed76:	e8 7c d4 ff ff       	call   c1f7 <FindAllIdents>
    ed7b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ed7f:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
    ed85:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    ed8c:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    ed93:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ed97:	48 89 c7             	mov    %rax,%rdi
    ed9a:	e8 a6 dd ff ff       	call   cb45 <MangleFunctionNameFromCallSite>
    ed9f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    eda3:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    edaa:	00
    edab:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
    edb2:	00 00 00
    edb5:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    edba:	74 6f                	je     ee2b <semcheck_funccall+0x1cd>
    edbc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    edc0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    edc7:	eb 58                	jmp    ee21 <semcheck_funccall+0x1c3>
    edc9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    edd0:	48 8b 40 08          	mov    0x8(%rax),%rax
    edd4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    edd8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eddc:	48 8b 40 08          	mov    0x8(%rax),%rax
    ede0:	48 85 c0             	test   %rax,%rax
    ede3:	74 2a                	je     ee0f <semcheck_funccall+0x1b1>
    ede5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ede9:	48 8b 40 08          	mov    0x8(%rax),%rax
    eded:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    edf1:	48 89 d6             	mov    %rdx,%rsi
    edf4:	48 89 c7             	mov    %rax,%rdi
    edf7:	e8 54 36 ff ff       	call   2450 <strcmp@plt>
    edfc:	85 c0                	test   %eax,%eax
    edfe:	75 0f                	jne    ee0f <semcheck_funccall+0x1b1>
    ee00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ee04:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    ee08:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
    ee0f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ee16:	48 8b 40 10          	mov    0x10(%rax),%rax
    ee1a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    ee21:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    ee28:	00
    ee29:	75 9e                	jne    edc9 <semcheck_funccall+0x16b>
    ee2b:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    ee32:	00
    ee33:	c7 85 48 ff ff ff 0f 	movl   $0x270f,-0xb8(%rbp)
    ee3a:	27 00 00
    ee3d:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    ee44:	00 00 00
    ee47:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    ee4c:	0f 84 62 01 00 00    	je     efb4 <semcheck_funccall+0x356>
    ee52:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee56:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    ee5a:	e9 4a 01 00 00       	jmp    efa9 <semcheck_funccall+0x34b>
    ee5f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ee63:	48 8b 40 08          	mov    0x8(%rax),%rax
    ee67:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ee6b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee6f:	48 8b 40 18          	mov    0x18(%rax),%rax
    ee73:	48 89 c7             	mov    %rax,%rdi
    ee76:	e8 1c 97 ff ff       	call   8597 <ListLength>
    ee7b:	89 c3                	mov    %eax,%ebx
    ee7d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    ee84:	48 89 c7             	mov    %rax,%rdi
    ee87:	e8 0b 97 ff ff       	call   8597 <ListLength>
    ee8c:	39 c3                	cmp    %eax,%ebx
    ee8e:	0f 85 09 01 00 00    	jne    ef9d <semcheck_funccall+0x33f>
    ee94:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
    ee9b:	00 00 00
    ee9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eea2:	48 8b 40 18          	mov    0x18(%rax),%rax
    eea6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    eeaa:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    eeb1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    eeb5:	e9 95 00 00 00       	jmp    ef4f <semcheck_funccall+0x2f1>
    eeba:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    eebe:	48 8b 40 08          	mov    0x8(%rax),%rax
    eec2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    eec6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eeca:	8b 40 10             	mov    0x10(%rax),%eax
    eecd:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    eed3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    eed7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    eedb:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
    eee1:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
    eee8:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    eeef:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    eef5:	48 89 c7             	mov    %rax,%rdi
    eef8:	e8 23 f0 ff ff       	call   df20 <semcheck_expr_main>
    eefd:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    ef03:	39 85 54 ff ff ff    	cmp    %eax,-0xac(%rbp)
    ef09:	74 2c                	je     ef37 <semcheck_funccall+0x2d9>
    ef0b:	81 bd 54 ff ff ff 0d 	cmpl   $0x10d,-0xac(%rbp)
    ef12:	01 00 00
    ef15:	75 16                	jne    ef2d <semcheck_funccall+0x2cf>
    ef17:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    ef1d:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ef22:	75 09                	jne    ef2d <semcheck_funccall+0x2cf>
    ef24:	83 85 50 ff ff ff 01 	addl   $0x1,-0xb0(%rbp)
    ef2b:	eb 0a                	jmp    ef37 <semcheck_funccall+0x2d9>
    ef2d:	81 85 50 ff ff ff e8 	addl   $0x3e8,-0xb0(%rbp)
    ef34:	03 00 00
    ef37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ef3b:	48 8b 40 10          	mov    0x10(%rax),%rax
    ef3f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ef43:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ef47:	48 8b 40 10          	mov    0x10(%rax),%rax
    ef4b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    ef4f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    ef54:	0f 85 60 ff ff ff    	jne    eeba <semcheck_funccall+0x25c>
    ef5a:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    ef60:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
    ef66:	7d 20                	jge    ef88 <semcheck_funccall+0x32a>
    ef68:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    ef6e:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    ef74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef78:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    ef7c:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%rbp)
    ef83:	00 00 00
    ef86:	eb 15                	jmp    ef9d <semcheck_funccall+0x33f>
    ef88:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    ef8e:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
    ef94:	75 07                	jne    ef9d <semcheck_funccall+0x33f>
    ef96:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    ef9d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    efa1:	48 8b 40 10          	mov    0x10(%rax),%rax
    efa5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    efa9:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    efae:	0f 85 ab fe ff ff    	jne    ee5f <semcheck_funccall+0x201>
    efb4:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%rbp)
    efbb:	75 51                	jne    f00e <semcheck_funccall+0x3b0>
    efbd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    efc1:	48 8b 40 08          	mov    0x8(%rax),%rax
    efc5:	48 89 c7             	mov    %rax,%rdi
    efc8:	e8 93 35 ff ff       	call   2560 <strdup@plt>
    efcd:	48 89 c2             	mov    %rax,%rdx
    efd0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    efd7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    efdb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    efe2:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    efe6:	48 89 50 20          	mov    %rdx,0x20(%rax)
    efea:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    efee:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    eff2:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
    eff9:	00 00 00
    effc:	83 bd 58 ff ff ff ff 	cmpl   $0xffffffff,-0xa8(%rbp)
    f003:	0f 85 e4 00 00 00    	jne    f0ed <semcheck_funccall+0x48f>
    f009:	e9 97 00 00 00       	jmp    f0a5 <semcheck_funccall+0x447>
    f00e:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
    f015:	75 47                	jne    f05e <semcheck_funccall+0x400>
    f017:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f01e:	8b 10                	mov    (%rax),%edx
    f020:	48 8b 05 39 30 01 00 	mov    0x13039(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f027:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f02b:	48 8d 35 26 cb 00 00 	lea    0xcb26(%rip),%rsi        # 1bb58 <__PRETTY_FUNCTION__.0+0x578>
    f032:	48 89 c7             	mov    %rax,%rdi
    f035:	b8 00 00 00 00       	mov    $0x0,%eax
    f03a:	e8 31 34 ff ff       	call   2470 <fprintf@plt>
    f03f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f046:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    f04c:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f053:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    f059:	e9 ff 03 00 00       	jmp    f45d <semcheck_funccall+0x7ff>
    f05e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f065:	8b 10                	mov    (%rax),%edx
    f067:	48 8b 05 f2 2f 01 00 	mov    0x12ff2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f06e:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f072:	48 8d 35 2f cb 00 00 	lea    0xcb2f(%rip),%rsi        # 1bba8 <__PRETTY_FUNCTION__.0+0x5c8>
    f079:	48 89 c7             	mov    %rax,%rdi
    f07c:	b8 00 00 00 00       	mov    $0x0,%eax
    f081:	e8 ea 33 ff ff       	call   2470 <fprintf@plt>
    f086:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f08d:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    f093:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f09a:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    f0a0:	e9 b8 03 00 00       	jmp    f45d <semcheck_funccall+0x7ff>
    f0a5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f0ac:	8b 10                	mov    (%rax),%edx
    f0ae:	48 8b 05 ab 2f 01 00 	mov    0x12fab(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f0b5:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    f0b9:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f0bd:	49 89 f0             	mov    %rsi,%r8
    f0c0:	48 8d 35 19 cb 00 00 	lea    0xcb19(%rip),%rsi        # 1bbe0 <__PRETTY_FUNCTION__.0+0x600>
    f0c7:	48 89 c7             	mov    %rax,%rdi
    f0ca:	b8 00 00 00 00       	mov    $0x0,%eax
    f0cf:	e8 9c 33 ff ff       	call   2470 <fprintf@plt>
    f0d4:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f0db:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f0e2:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    f0e8:	e9 6a 03 00 00       	jmp    f457 <semcheck_funccall+0x7f9>
    f0ed:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
    f0f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0f7:	89 d6                	mov    %edx,%esi
    f0f9:	48 89 c7             	mov    %rax,%rdi
    f0fc:	e8 61 eb ff ff       	call   dc62 <set_hash_meta>
    f101:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
    f107:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
    f10d:	7e 52                	jle    f161 <semcheck_funccall+0x503>
    f10f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f116:	8b 10                	mov    (%rax),%edx
    f118:	48 8b 05 41 2f 01 00 	mov    0x12f41(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f11f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f123:	48 8d 35 f6 ca 00 00 	lea    0xcaf6(%rip),%rsi        # 1bc20 <__PRETTY_FUNCTION__.0+0x640>
    f12a:	48 89 c7             	mov    %rax,%rdi
    f12d:	b8 00 00 00 00       	mov    $0x0,%eax
    f132:	e8 39 33 ff ff       	call   2470 <fprintf@plt>
    f137:	48 8b 05 22 2f 01 00 	mov    0x12f22(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f13e:	48 89 c1             	mov    %rax,%rcx
    f141:	ba 30 00 00 00       	mov    $0x30,%edx
    f146:	be 01 00 00 00       	mov    $0x1,%esi
    f14b:	48 8d 05 c6 c8 00 00 	lea    0xc8c6(%rip),%rax        # 1ba18 <__PRETTY_FUNCTION__.0+0x438>
    f152:	48 89 c7             	mov    %rax,%rdi
    f155:	e8 f6 33 ff ff       	call   2550 <fwrite@plt>
    f15a:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f161:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f165:	8b 40 10             	mov    0x10(%rax),%eax
    f168:	83 f8 03             	cmp    $0x3,%eax
    f16b:	74 3b                	je     f1a8 <semcheck_funccall+0x54a>
    f16d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f171:	8b 40 10             	mov    0x10(%rax),%eax
    f174:	83 f8 04             	cmp    $0x4,%eax
    f177:	74 2f                	je     f1a8 <semcheck_funccall+0x54a>
    f179:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f180:	8b 10                	mov    (%rax),%edx
    f182:	48 8b 05 d7 2e 01 00 	mov    0x12ed7(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f189:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f18d:	48 8d 35 c4 ca 00 00 	lea    0xcac4(%rip),%rsi        # 1bc58 <__PRETTY_FUNCTION__.0+0x678>
    f194:	48 89 c7             	mov    %rax,%rdi
    f197:	b8 00 00 00 00       	mov    $0x0,%eax
    f19c:	e8 cf 32 ff ff       	call   2470 <fprintf@plt>
    f1a1:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f1a8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f1ac:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f1b3:	48 89 d6             	mov    %rdx,%rsi
    f1b6:	48 89 c7             	mov    %rax,%rdi
    f1b9:	e8 d9 eb ff ff       	call   dd97 <set_type_from_hashtype>
    f1be:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    f1c5:	00 00 00
    f1c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f1cc:	48 8b 40 18          	mov    0x18(%rax),%rax
    f1d0:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f1d7:	e9 db 01 00 00       	jmp    f3b7 <semcheck_funccall+0x759>
    f1dc:	83 85 40 ff ff ff 01 	addl   $0x1,-0xc0(%rbp)
    f1e3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f1ea:	8b 00                	mov    (%rax),%eax
    f1ec:	83 f8 02             	cmp    $0x2,%eax
    f1ef:	74 28                	je     f219 <semcheck_funccall+0x5bb>
    f1f1:	48 8d 05 a8 cc 00 00 	lea    0xcca8(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    f1f8:	48 89 c1             	mov    %rax,%rcx
    f1fb:	ba 4c 02 00 00       	mov    $0x24c,%edx
    f200:	48 8d 05 f9 c3 00 00 	lea    0xc3f9(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    f207:	48 89 c6             	mov    %rax,%rsi
    f20a:	48 8d 05 73 ca 00 00 	lea    0xca73(%rip),%rax        # 1bc84 <__PRETTY_FUNCTION__.0+0x6a4>
    f211:	48 89 c7             	mov    %rax,%rdi
    f214:	e8 b7 31 ff ff       	call   23d0 <__assert_fail@plt>
    f219:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f220:	8b 00                	mov    (%rax),%eax
    f222:	85 c0                	test   %eax,%eax
    f224:	74 28                	je     f24e <semcheck_funccall+0x5f0>
    f226:	48 8d 05 73 cc 00 00 	lea    0xcc73(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    f22d:	48 89 c1             	mov    %rax,%rcx
    f230:	ba 4d 02 00 00       	mov    $0x24d,%edx
    f235:	48 8d 05 c4 c3 00 00 	lea    0xc3c4(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    f23c:	48 89 c6             	mov    %rax,%rsi
    f23f:	48 8d 05 5c ca 00 00 	lea    0xca5c(%rip),%rax        # 1bca2 <__PRETTY_FUNCTION__.0+0x6c2>
    f246:	48 89 c7             	mov    %rax,%rdi
    f249:	e8 82 31 ff ff       	call   23d0 <__assert_fail@plt>
    f24e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f255:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f259:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
    f25f:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
    f266:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f26d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f273:	48 89 c7             	mov    %rax,%rdi
    f276:	e8 a5 ec ff ff       	call   df20 <semcheck_expr_main>
    f27b:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
    f281:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f288:	48 8b 40 08          	mov    0x8(%rax),%rax
    f28c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f290:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f294:	8b 40 04             	mov    0x4(%rax),%eax
    f297:	83 f8 02             	cmp    $0x2,%eax
    f29a:	74 28                	je     f2c4 <semcheck_funccall+0x666>
    f29c:	48 8d 05 fd cb 00 00 	lea    0xcbfd(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    f2a3:	48 89 c1             	mov    %rax,%rcx
    f2a6:	ba 52 02 00 00       	mov    $0x252,%edx
    f2ab:	48 8d 05 4e c3 00 00 	lea    0xc34e(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    f2b2:	48 89 c6             	mov    %rax,%rsi
    f2b5:	48 8d 05 04 ca 00 00 	lea    0xca04(%rip),%rax        # 1bcc0 <__PRETTY_FUNCTION__.0+0x6e0>
    f2bc:	48 89 c7             	mov    %rax,%rdi
    f2bf:	e8 0c 31 ff ff       	call   23d0 <__assert_fail@plt>
    f2c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f2c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    f2cc:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f2d3:	e9 b5 00 00 00       	jmp    f38d <semcheck_funccall+0x72f>
    f2d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f2dc:	8b 40 10             	mov    0x10(%rax),%eax
    f2df:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
    f2e5:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    f2eb:	39 85 5c ff ff ff    	cmp    %eax,-0xa4(%rbp)
    f2f1:	74 76                	je     f369 <semcheck_funccall+0x70b>
    f2f3:	81 bd 5c ff ff ff 3a 	cmpl   $0x13a,-0xa4(%rbp)
    f2fa:	01 00 00
    f2fd:	74 6a                	je     f369 <semcheck_funccall+0x70b>
    f2ff:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    f305:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    f30a:	75 0c                	jne    f318 <semcheck_funccall+0x6ba>
    f30c:	81 bd 5c ff ff ff 0d 	cmpl   $0x10d,-0xa4(%rbp)
    f313:	01 00 00
    f316:	74 51                	je     f369 <semcheck_funccall+0x70b>
    f318:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    f31e:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    f323:	75 0c                	jne    f331 <semcheck_funccall+0x6d3>
    f325:	81 bd 5c ff ff ff 0b 	cmpl   $0x10b,-0xa4(%rbp)
    f32c:	01 00 00
    f32f:	74 38                	je     f369 <semcheck_funccall+0x70b>
    f331:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f338:	8b 10                	mov    (%rax),%edx
    f33a:	48 8b 05 1f 2d 01 00 	mov    0x12d1f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f341:	8b b5 40 ff ff ff    	mov    -0xc0(%rbp),%esi
    f347:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f34b:	41 89 f0             	mov    %esi,%r8d
    f34e:	48 8d 35 8b c9 00 00 	lea    0xc98b(%rip),%rsi        # 1bce0 <__PRETTY_FUNCTION__.0+0x700>
    f355:	48 89 c7             	mov    %rax,%rdi
    f358:	b8 00 00 00 00       	mov    $0x0,%eax
    f35d:	e8 0e 31 ff ff       	call   2470 <fprintf@plt>
    f362:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f369:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f370:	48 8b 40 10          	mov    0x10(%rax),%rax
    f374:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f37b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f382:	48 8b 40 10          	mov    0x10(%rax),%rax
    f386:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    f38d:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    f394:	00
    f395:	74 0e                	je     f3a5 <semcheck_funccall+0x747>
    f397:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f39e:	00
    f39f:	0f 85 33 ff ff ff    	jne    f2d8 <semcheck_funccall+0x67a>
    f3a5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f3ac:	48 8b 40 10          	mov    0x10(%rax),%rax
    f3b0:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f3b7:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f3be:	00
    f3bf:	74 0e                	je     f3cf <semcheck_funccall+0x771>
    f3c1:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f3c8:	00
    f3c9:	0f 85 0d fe ff ff    	jne    f1dc <semcheck_funccall+0x57e>
    f3cf:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f3d6:	00
    f3d7:	75 3b                	jne    f414 <semcheck_funccall+0x7b6>
    f3d9:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f3e0:	00
    f3e1:	74 31                	je     f414 <semcheck_funccall+0x7b6>
    f3e3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f3ea:	8b 10                	mov    (%rax),%edx
    f3ec:	48 8b 05 6d 2c 01 00 	mov    0x12c6d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f3f3:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f3f7:	48 8d 35 2a c9 00 00 	lea    0xc92a(%rip),%rsi        # 1bd28 <__PRETTY_FUNCTION__.0+0x748>
    f3fe:	48 89 c7             	mov    %rax,%rdi
    f401:	b8 00 00 00 00       	mov    $0x0,%eax
    f406:	e8 65 30 ff ff       	call   2470 <fprintf@plt>
    f40b:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f412:	eb 43                	jmp    f457 <semcheck_funccall+0x7f9>
    f414:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f41b:	00
    f41c:	74 39                	je     f457 <semcheck_funccall+0x7f9>
    f41e:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f425:	00
    f426:	75 2f                	jne    f457 <semcheck_funccall+0x7f9>
    f428:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f42f:	8b 10                	mov    (%rax),%edx
    f431:	48 8b 05 28 2c 01 00 	mov    0x12c28(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f438:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f43c:	48 8d 35 2d c9 00 00 	lea    0xc92d(%rip),%rsi        # 1bd70 <__PRETTY_FUNCTION__.0+0x790>
    f443:	48 89 c7             	mov    %rax,%rdi
    f446:	b8 00 00 00 00       	mov    $0x0,%eax
    f44b:	e8 20 30 ff ff       	call   2470 <fprintf@plt>
    f450:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f457:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    f45d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f461:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f468:	00 00
    f46a:	74 05                	je     f471 <semcheck_funccall+0x813>
    f46c:	e8 2f 2f ff ff       	call   23a0 <__stack_chk_fail@plt>
    f471:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f475:	c9                   	leave
    f476:	c3                   	ret

000000000000f477 <gen_label>:
    f477:	f3 0f 1e fa          	endbr64
    f47b:	55                   	push   %rbp
    f47c:	48 89 e5             	mov    %rsp,%rbp
    f47f:	48 83 ec 20          	sub    $0x20,%rsp
    f483:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f487:	89 75 f4             	mov    %esi,-0xc(%rbp)
    f48a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f48e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f492:	8b 00                	mov    (%rax),%eax
    f494:	8d 50 01             	lea    0x1(%rax),%edx
    f497:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f49b:	89 10                	mov    %edx,(%rax)
    f49d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f4a1:	8b 10                	mov    (%rax),%edx
    f4a3:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f4a6:	48 63 f0             	movslq %eax,%rsi
    f4a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4ad:	89 d1                	mov    %edx,%ecx
    f4af:	48 8d 15 0a ca 00 00 	lea    0xca0a(%rip),%rdx        # 1bec0 <__PRETTY_FUNCTION__.0+0x20>
    f4b6:	48 89 c7             	mov    %rax,%rdi
    f4b9:	b8 00 00 00 00       	mov    $0x0,%eax
    f4be:	e8 ed 2e ff ff       	call   23b0 <snprintf@plt>
    f4c3:	90                   	nop
    f4c4:	c9                   	leave
    f4c5:	c3                   	ret

000000000000f4c6 <add_inst>:
    f4c6:	f3 0f 1e fa          	endbr64
    f4ca:	55                   	push   %rbp
    f4cb:	48 89 e5             	mov    %rsp,%rbp
    f4ce:	48 83 ec 20          	sub    $0x20,%rsp
    f4d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f4d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f4da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f4de:	48 89 c7             	mov    %rax,%rdi
    f4e1:	e8 7a 30 ff ff       	call   2560 <strdup@plt>
    f4e6:	be 03 00 00 00       	mov    $0x3,%esi
    f4eb:	48 89 c7             	mov    %rax,%rdi
    f4ee:	e8 08 8d ff ff       	call   81fb <CreateListNode>
    f4f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f4f7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f4fc:	75 0a                	jne    f508 <add_inst+0x42>
    f4fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f502:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f506:	eb 13                	jmp    f51b <add_inst+0x55>
    f508:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f50c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f510:	48 89 d6             	mov    %rdx,%rsi
    f513:	48 89 c7             	mov    %rax,%rdi
    f516:	e8 ac 8d ff ff       	call   82c7 <PushListNodeBack>
    f51b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f51f:	c9                   	leave
    f520:	c3                   	ret

000000000000f521 <free_inst_list>:
    f521:	f3 0f 1e fa          	endbr64
    f525:	55                   	push   %rbp
    f526:	48 89 e5             	mov    %rsp,%rbp
    f529:	48 83 ec 20          	sub    $0x20,%rsp
    f52d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f531:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f535:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f539:	eb 1c                	jmp    f557 <free_inst_list+0x36>
    f53b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f53f:	48 8b 40 08          	mov    0x8(%rax),%rax
    f543:	48 89 c7             	mov    %rax,%rdi
    f546:	e8 a5 2d ff ff       	call   22f0 <free@plt>
    f54b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f54f:	48 8b 40 10          	mov    0x10(%rax),%rax
    f553:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f557:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f55c:	75 dd                	jne    f53b <free_inst_list+0x1a>
    f55e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f562:	48 89 c7             	mov    %rax,%rdi
    f565:	e8 2c 8f ff ff       	call   8496 <DestroyList>
    f56a:	90                   	nop
    f56b:	c9                   	leave
    f56c:	c3                   	ret

000000000000f56d <gencode_jmp>:
    f56d:	f3 0f 1e fa          	endbr64
    f571:	55                   	push   %rbp
    f572:	48 89 e5             	mov    %rsp,%rbp
    f575:	48 83 ec 60          	sub    $0x60,%rsp
    f579:	89 7d bc             	mov    %edi,-0x44(%rbp)
    f57c:	89 75 b8             	mov    %esi,-0x48(%rbp)
    f57f:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    f583:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    f587:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f58e:	00 00
    f590:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f594:	31 c0                	xor    %eax,%eax
    f596:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    f59a:	0f 84 0e 02 00 00    	je     f7ae <gencode_jmp+0x241>
    f5a0:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    f5a4:	0f 8c 23 02 00 00    	jl     f7cd <gencode_jmp+0x260>
    f5aa:	81 7d bc 2c 01 00 00 	cmpl   $0x12c,-0x44(%rbp)
    f5b1:	0f 8f 16 02 00 00    	jg     f7cd <gencode_jmp+0x260>
    f5b7:	81 7d bc 27 01 00 00 	cmpl   $0x127,-0x44(%rbp)
    f5be:	0f 8c 09 02 00 00    	jl     f7cd <gencode_jmp+0x260>
    f5c4:	8b 45 bc             	mov    -0x44(%rbp),%eax
    f5c7:	2d 27 01 00 00       	sub    $0x127,%eax
    f5cc:	83 f8 05             	cmp    $0x5,%eax
    f5cf:	0f 87 f8 01 00 00    	ja     f7cd <gencode_jmp+0x260>
    f5d5:	89 c0                	mov    %eax,%eax
    f5d7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    f5de:	00
    f5df:	48 8d 05 36 c9 00 00 	lea    0xc936(%rip),%rax        # 1bf1c <__PRETTY_FUNCTION__.0+0x7c>
    f5e6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    f5e9:	48 98                	cltq
    f5eb:	48 8d 15 2a c9 00 00 	lea    0xc92a(%rip),%rdx        # 1bf1c <__PRETTY_FUNCTION__.0+0x7c>
    f5f2:	48 01 d0             	add    %rdx,%rax
    f5f5:	3e ff e0             	notrack jmp *%rax
    f5f8:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f5fc:	7e 22                	jle    f620 <gencode_jmp+0xb3>
    f5fe:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f602:	48 8d 15 bc c8 00 00 	lea    0xc8bc(%rip),%rdx        # 1bec5 <__PRETTY_FUNCTION__.0+0x25>
    f609:	be 06 00 00 00       	mov    $0x6,%esi
    f60e:	48 89 c7             	mov    %rax,%rdi
    f611:	b8 00 00 00 00       	mov    $0x0,%eax
    f616:	e8 95 2d ff ff       	call   23b0 <snprintf@plt>
    f61b:	e9 da 01 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f620:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f624:	48 8d 15 9e c8 00 00 	lea    0xc89e(%rip),%rdx        # 1bec9 <__PRETTY_FUNCTION__.0+0x29>
    f62b:	be 06 00 00 00       	mov    $0x6,%esi
    f630:	48 89 c7             	mov    %rax,%rdi
    f633:	b8 00 00 00 00       	mov    $0x0,%eax
    f638:	e8 73 2d ff ff       	call   23b0 <snprintf@plt>
    f63d:	e9 b8 01 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f642:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f646:	7e 22                	jle    f66a <gencode_jmp+0xfd>
    f648:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f64c:	48 8d 15 76 c8 00 00 	lea    0xc876(%rip),%rdx        # 1bec9 <__PRETTY_FUNCTION__.0+0x29>
    f653:	be 06 00 00 00       	mov    $0x6,%esi
    f658:	48 89 c7             	mov    %rax,%rdi
    f65b:	b8 00 00 00 00       	mov    $0x0,%eax
    f660:	e8 4b 2d ff ff       	call   23b0 <snprintf@plt>
    f665:	e9 90 01 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f66a:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f66e:	48 8d 15 50 c8 00 00 	lea    0xc850(%rip),%rdx        # 1bec5 <__PRETTY_FUNCTION__.0+0x25>
    f675:	be 06 00 00 00       	mov    $0x6,%esi
    f67a:	48 89 c7             	mov    %rax,%rdi
    f67d:	b8 00 00 00 00       	mov    $0x0,%eax
    f682:	e8 29 2d ff ff       	call   23b0 <snprintf@plt>
    f687:	e9 6e 01 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f68c:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f690:	7e 22                	jle    f6b4 <gencode_jmp+0x147>
    f692:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f696:	48 8d 15 2f c8 00 00 	lea    0xc82f(%rip),%rdx        # 1becc <__PRETTY_FUNCTION__.0+0x2c>
    f69d:	be 06 00 00 00       	mov    $0x6,%esi
    f6a2:	48 89 c7             	mov    %rax,%rdi
    f6a5:	b8 00 00 00 00       	mov    $0x0,%eax
    f6aa:	e8 01 2d ff ff       	call   23b0 <snprintf@plt>
    f6af:	e9 46 01 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f6b4:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f6b8:	48 8d 15 11 c8 00 00 	lea    0xc811(%rip),%rdx        # 1bed0 <__PRETTY_FUNCTION__.0+0x30>
    f6bf:	be 06 00 00 00       	mov    $0x6,%esi
    f6c4:	48 89 c7             	mov    %rax,%rdi
    f6c7:	b8 00 00 00 00       	mov    $0x0,%eax
    f6cc:	e8 df 2c ff ff       	call   23b0 <snprintf@plt>
    f6d1:	e9 24 01 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f6d6:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f6da:	7e 22                	jle    f6fe <gencode_jmp+0x191>
    f6dc:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f6e0:	48 8d 15 ec c7 00 00 	lea    0xc7ec(%rip),%rdx        # 1bed3 <__PRETTY_FUNCTION__.0+0x33>
    f6e7:	be 06 00 00 00       	mov    $0x6,%esi
    f6ec:	48 89 c7             	mov    %rax,%rdi
    f6ef:	b8 00 00 00 00       	mov    $0x0,%eax
    f6f4:	e8 b7 2c ff ff       	call   23b0 <snprintf@plt>
    f6f9:	e9 fc 00 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f6fe:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f702:	48 8d 15 cd c7 00 00 	lea    0xc7cd(%rip),%rdx        # 1bed6 <__PRETTY_FUNCTION__.0+0x36>
    f709:	be 06 00 00 00       	mov    $0x6,%esi
    f70e:	48 89 c7             	mov    %rax,%rdi
    f711:	b8 00 00 00 00       	mov    $0x0,%eax
    f716:	e8 95 2c ff ff       	call   23b0 <snprintf@plt>
    f71b:	e9 da 00 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f720:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f724:	7e 22                	jle    f748 <gencode_jmp+0x1db>
    f726:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f72a:	48 8d 15 a5 c7 00 00 	lea    0xc7a5(%rip),%rdx        # 1bed6 <__PRETTY_FUNCTION__.0+0x36>
    f731:	be 06 00 00 00       	mov    $0x6,%esi
    f736:	48 89 c7             	mov    %rax,%rdi
    f739:	b8 00 00 00 00       	mov    $0x0,%eax
    f73e:	e8 6d 2c ff ff       	call   23b0 <snprintf@plt>
    f743:	e9 b2 00 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f748:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f74c:	48 8d 15 80 c7 00 00 	lea    0xc780(%rip),%rdx        # 1bed3 <__PRETTY_FUNCTION__.0+0x33>
    f753:	be 06 00 00 00       	mov    $0x6,%esi
    f758:	48 89 c7             	mov    %rax,%rdi
    f75b:	b8 00 00 00 00       	mov    $0x0,%eax
    f760:	e8 4b 2c ff ff       	call   23b0 <snprintf@plt>
    f765:	e9 90 00 00 00       	jmp    f7fa <gencode_jmp+0x28d>
    f76a:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f76e:	7e 1f                	jle    f78f <gencode_jmp+0x222>
    f770:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f774:	48 8d 15 55 c7 00 00 	lea    0xc755(%rip),%rdx        # 1bed0 <__PRETTY_FUNCTION__.0+0x30>
    f77b:	be 06 00 00 00       	mov    $0x6,%esi
    f780:	48 89 c7             	mov    %rax,%rdi
    f783:	b8 00 00 00 00       	mov    $0x0,%eax
    f788:	e8 23 2c ff ff       	call   23b0 <snprintf@plt>
    f78d:	eb 6b                	jmp    f7fa <gencode_jmp+0x28d>
    f78f:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f793:	48 8d 15 32 c7 00 00 	lea    0xc732(%rip),%rdx        # 1becc <__PRETTY_FUNCTION__.0+0x2c>
    f79a:	be 06 00 00 00       	mov    $0x6,%esi
    f79f:	48 89 c7             	mov    %rax,%rdi
    f7a2:	b8 00 00 00 00       	mov    $0x0,%eax
    f7a7:	e8 04 2c ff ff       	call   23b0 <snprintf@plt>
    f7ac:	eb 4c                	jmp    f7fa <gencode_jmp+0x28d>
    f7ae:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f7b2:	48 8d 15 21 c7 00 00 	lea    0xc721(%rip),%rdx        # 1beda <__PRETTY_FUNCTION__.0+0x3a>
    f7b9:	be 06 00 00 00       	mov    $0x6,%esi
    f7be:	48 89 c7             	mov    %rax,%rdi
    f7c1:	b8 00 00 00 00       	mov    $0x0,%eax
    f7c6:	e8 e5 2b ff ff       	call   23b0 <snprintf@plt>
    f7cb:	eb 2d                	jmp    f7fa <gencode_jmp+0x28d>
    f7cd:	48 8b 05 8c 28 01 00 	mov    0x1288c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f7d4:	48 89 c1             	mov    %rax,%rcx
    f7d7:	ba 32 00 00 00       	mov    $0x32,%edx
    f7dc:	be 01 00 00 00       	mov    $0x1,%esi
    f7e1:	48 8d 05 f8 c6 00 00 	lea    0xc6f8(%rip),%rax        # 1bee0 <__PRETTY_FUNCTION__.0+0x40>
    f7e8:	48 89 c7             	mov    %rax,%rdi
    f7eb:	e8 60 2d ff ff       	call   2550 <fwrite@plt>
    f7f0:	bf 01 00 00 00       	mov    $0x1,%edi
    f7f5:	e8 46 2d ff ff       	call   2540 <exit@plt>
    f7fa:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    f7fe:	48 8d 55 ca          	lea    -0x36(%rbp),%rdx
    f802:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f806:	49 89 c8             	mov    %rcx,%r8
    f809:	48 89 d1             	mov    %rdx,%rcx
    f80c:	48 8d 15 00 c7 00 00 	lea    0xc700(%rip),%rdx        # 1bf13 <__PRETTY_FUNCTION__.0+0x73>
    f813:	be 1e 00 00 00       	mov    $0x1e,%esi
    f818:	48 89 c7             	mov    %rax,%rdi
    f81b:	b8 00 00 00 00       	mov    $0x0,%eax
    f820:	e8 8b 2b ff ff       	call   23b0 <snprintf@plt>
    f825:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f829:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f82d:	48 89 d6             	mov    %rdx,%rsi
    f830:	48 89 c7             	mov    %rax,%rdi
    f833:	e8 8e fc ff ff       	call   f4c6 <add_inst>
    f838:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f83c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f843:	00 00
    f845:	74 05                	je     f84c <gencode_jmp+0x2df>
    f847:	e8 54 2b ff ff       	call   23a0 <__stack_chk_fail@plt>
    f84c:	c9                   	leave
    f84d:	c3                   	ret

000000000000f84e <codegen_function_header>:
    f84e:	f3 0f 1e fa          	endbr64
    f852:	55                   	push   %rbp
    f853:	48 89 e5             	mov    %rsp,%rbp
    f856:	48 83 ec 10          	sub    $0x10,%rsp
    f85a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f85e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f862:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f866:	48 8b 40 08          	mov    0x8(%rax),%rax
    f86a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f86e:	48 8d 0d bf c6 00 00 	lea    0xc6bf(%rip),%rcx        # 1bf34 <__PRETTY_FUNCTION__.0+0x94>
    f875:	48 89 ce             	mov    %rcx,%rsi
    f878:	48 89 c7             	mov    %rax,%rdi
    f87b:	b8 00 00 00 00       	mov    $0x0,%eax
    f880:	e8 eb 2b ff ff       	call   2470 <fprintf@plt>
    f885:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f889:	48 8b 40 08          	mov    0x8(%rax),%rax
    f88d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f891:	48 8d 0d a8 c6 00 00 	lea    0xc6a8(%rip),%rcx        # 1bf40 <__PRETTY_FUNCTION__.0+0xa0>
    f898:	48 89 ce             	mov    %rcx,%rsi
    f89b:	48 89 c7             	mov    %rax,%rdi
    f89e:	b8 00 00 00 00       	mov    $0x0,%eax
    f8a3:	e8 c8 2b ff ff       	call   2470 <fprintf@plt>
    f8a8:	90                   	nop
    f8a9:	c9                   	leave
    f8aa:	c3                   	ret

000000000000f8ab <codegen_function_footer>:
    f8ab:	f3 0f 1e fa          	endbr64
    f8af:	55                   	push   %rbp
    f8b0:	48 89 e5             	mov    %rsp,%rbp
    f8b3:	48 83 ec 10          	sub    $0x10,%rsp
    f8b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f8bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f8bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f8c3:	48 8b 40 08          	mov    0x8(%rax),%rax
    f8c7:	48 89 c1             	mov    %rax,%rcx
    f8ca:	ba 11 00 00 00       	mov    $0x11,%edx
    f8cf:	be 01 00 00 00       	mov    $0x1,%esi
    f8d4:	48 8d 05 8a c6 00 00 	lea    0xc68a(%rip),%rax        # 1bf65 <__PRETTY_FUNCTION__.0+0xc5>
    f8db:	48 89 c7             	mov    %rax,%rdi
    f8de:	e8 6d 2c ff ff       	call   2550 <fwrite@plt>
    f8e3:	90                   	nop
    f8e4:	c9                   	leave
    f8e5:	c3                   	ret

000000000000f8e6 <codegen>:
    f8e6:	f3 0f 1e fa          	endbr64
    f8ea:	55                   	push   %rbp
    f8eb:	48 89 e5             	mov    %rsp,%rbp
    f8ee:	48 83 ec 30          	sub    $0x30,%rsp
    f8f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f8f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f8fa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f8fe:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    f902:	48 8b 05 57 27 01 00 	mov    0x12757(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f909:	48 89 c1             	mov    %rax,%rcx
    f90c:	ba 18 00 00 00       	mov    $0x18,%edx
    f911:	be 01 00 00 00       	mov    $0x1,%esi
    f916:	48 8d 05 5a c6 00 00 	lea    0xc65a(%rip),%rax        # 1bf77 <__PRETTY_FUNCTION__.0+0xd7>
    f91d:	48 89 c7             	mov    %rax,%rdi
    f920:	e8 2b 2c ff ff       	call   2550 <fwrite@plt>
    f925:	b8 00 00 00 00       	mov    $0x0,%eax
    f92a:	e8 13 2b 00 00       	call   12442 <init_stackmng>
    f92f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f933:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f937:	48 89 d6             	mov    %rdx,%rsi
    f93a:	48 89 c7             	mov    %rax,%rdi
    f93d:	e8 25 02 00 00       	call   fb67 <codegen_program_header>
    f942:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f946:	48 89 c7             	mov    %rax,%rdi
    f949:	e8 6a 00 00 00       	call   f9b8 <codegen_rodata>
    f94e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f952:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f95a:	48 89 ce             	mov    %rcx,%rsi
    f95d:	48 89 c7             	mov    %rax,%rdi
    f960:	e8 98 04 00 00       	call   fdfd <codegen_program>
    f965:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f969:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f971:	48 89 d6             	mov    %rdx,%rsi
    f974:	48 89 c7             	mov    %rax,%rdi
    f977:	e8 7c 02 00 00       	call   fbf8 <codegen_main>
    f97c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f980:	48 89 c7             	mov    %rax,%rdi
    f983:	e8 61 02 00 00       	call   fbe9 <codegen_program_footer>
    f988:	b8 00 00 00 00       	mov    $0x0,%eax
    f98d:	e8 3c 33 00 00       	call   12cce <free_stackmng>
    f992:	48 8b 05 c7 26 01 00 	mov    0x126c7(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f999:	48 89 c1             	mov    %rax,%rcx
    f99c:	ba 17 00 00 00       	mov    $0x17,%edx
    f9a1:	be 01 00 00 00       	mov    $0x1,%esi
    f9a6:	48 8d 05 e3 c5 00 00 	lea    0xc5e3(%rip),%rax        # 1bf90 <__PRETTY_FUNCTION__.0+0xf0>
    f9ad:	48 89 c7             	mov    %rax,%rdi
    f9b0:	e8 9b 2b ff ff       	call   2550 <fwrite@plt>
    f9b5:	90                   	nop
    f9b6:	c9                   	leave
    f9b7:	c3                   	ret

000000000000f9b8 <codegen_rodata>:
    f9b8:	f3 0f 1e fa          	endbr64
    f9bc:	55                   	push   %rbp
    f9bd:	48 89 e5             	mov    %rsp,%rbp
    f9c0:	48 83 ec 10          	sub    $0x10,%rsp
    f9c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    f9d0:	48 89 c1             	mov    %rax,%rcx
    f9d3:	ba 11 00 00 00       	mov    $0x11,%edx
    f9d8:	be 01 00 00 00       	mov    $0x1,%esi
    f9dd:	48 8d 05 c4 c5 00 00 	lea    0xc5c4(%rip),%rax        # 1bfa8 <__PRETTY_FUNCTION__.0+0x108>
    f9e4:	48 89 c7             	mov    %rax,%rdi
    f9e7:	e8 64 2b ff ff       	call   2550 <fwrite@plt>
    f9ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    f9f4:	48 89 c1             	mov    %rax,%rcx
    f9f7:	ba 0f 00 00 00       	mov    $0xf,%edx
    f9fc:	be 01 00 00 00       	mov    $0x1,%esi
    fa01:	48 8d 05 b2 c5 00 00 	lea    0xc5b2(%rip),%rax        # 1bfba <__PRETTY_FUNCTION__.0+0x11a>
    fa08:	48 89 c7             	mov    %rax,%rdi
    fa0b:	e8 40 2b ff ff       	call   2550 <fwrite@plt>
    fa10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa14:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa18:	48 8d 15 ab c5 00 00 	lea    0xc5ab(%rip),%rdx        # 1bfca <__PRETTY_FUNCTION__.0+0x12a>
    fa1f:	48 89 d6             	mov    %rdx,%rsi
    fa22:	48 89 c7             	mov    %rax,%rdi
    fa25:	b8 00 00 00 00       	mov    $0x0,%eax
    fa2a:	e8 41 2a ff ff       	call   2470 <fprintf@plt>
    fa2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa33:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa37:	48 89 c1             	mov    %rax,%rcx
    fa3a:	ba 0f 00 00 00       	mov    $0xf,%edx
    fa3f:	be 01 00 00 00       	mov    $0x1,%esi
    fa44:	48 8d 05 8e c5 00 00 	lea    0xc58e(%rip),%rax        # 1bfd9 <__PRETTY_FUNCTION__.0+0x139>
    fa4b:	48 89 c7             	mov    %rax,%rdi
    fa4e:	e8 fd 2a ff ff       	call   2550 <fwrite@plt>
    fa53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa57:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa5b:	48 8d 15 87 c5 00 00 	lea    0xc587(%rip),%rdx        # 1bfe9 <__PRETTY_FUNCTION__.0+0x149>
    fa62:	48 89 d6             	mov    %rdx,%rsi
    fa65:	48 89 c7             	mov    %rax,%rdi
    fa68:	b8 00 00 00 00       	mov    $0x0,%eax
    fa6d:	e8 fe 29 ff ff       	call   2470 <fprintf@plt>
    fa72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa76:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa7a:	48 89 c1             	mov    %rax,%rcx
    fa7d:	ba 10 00 00 00       	mov    $0x10,%edx
    fa82:	be 01 00 00 00       	mov    $0x1,%esi
    fa87:	48 8d 05 6a c5 00 00 	lea    0xc56a(%rip),%rax        # 1bff8 <__PRETTY_FUNCTION__.0+0x158>
    fa8e:	48 89 c7             	mov    %rax,%rdi
    fa91:	e8 ba 2a ff ff       	call   2550 <fwrite@plt>
    fa96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa9a:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa9e:	48 8d 15 64 c5 00 00 	lea    0xc564(%rip),%rdx        # 1c009 <__PRETTY_FUNCTION__.0+0x169>
    faa5:	48 89 d6             	mov    %rdx,%rsi
    faa8:	48 89 c7             	mov    %rax,%rdi
    faab:	b8 00 00 00 00       	mov    $0x0,%eax
    fab0:	e8 bb 29 ff ff       	call   2470 <fprintf@plt>
    fab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab9:	48 8b 40 08          	mov    0x8(%rax),%rax
    fabd:	48 89 c1             	mov    %rax,%rcx
    fac0:	ba 10 00 00 00       	mov    $0x10,%edx
    fac5:	be 01 00 00 00       	mov    $0x1,%esi
    faca:	48 8d 05 49 c5 00 00 	lea    0xc549(%rip),%rax        # 1c01a <__PRETTY_FUNCTION__.0+0x17a>
    fad1:	48 89 c7             	mov    %rax,%rdi
    fad4:	e8 77 2a ff ff       	call   2550 <fwrite@plt>
    fad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fadd:	48 8b 40 08          	mov    0x8(%rax),%rax
    fae1:	48 8d 15 43 c5 00 00 	lea    0xc543(%rip),%rdx        # 1c02b <__PRETTY_FUNCTION__.0+0x18b>
    fae8:	48 89 d6             	mov    %rdx,%rsi
    faeb:	48 89 c7             	mov    %rax,%rdi
    faee:	b8 00 00 00 00       	mov    $0x0,%eax
    faf3:	e8 78 29 ff ff       	call   2470 <fprintf@plt>
    faf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fafc:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb00:	48 89 c1             	mov    %rax,%rcx
    fb03:	ba 0f 00 00 00       	mov    $0xf,%edx
    fb08:	be 01 00 00 00       	mov    $0x1,%esi
    fb0d:	48 8d 05 28 c5 00 00 	lea    0xc528(%rip),%rax        # 1c03c <__PRETTY_FUNCTION__.0+0x19c>
    fb14:	48 89 c7             	mov    %rax,%rdi
    fb17:	e8 34 2a ff ff       	call   2550 <fwrite@plt>
    fb1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb20:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb24:	48 89 c1             	mov    %rax,%rcx
    fb27:	ba 0d 00 00 00       	mov    $0xd,%edx
    fb2c:	be 01 00 00 00       	mov    $0x1,%esi
    fb31:	48 8d 05 14 c5 00 00 	lea    0xc514(%rip),%rax        # 1c04c <__PRETTY_FUNCTION__.0+0x1ac>
    fb38:	48 89 c7             	mov    %rax,%rdi
    fb3b:	e8 10 2a ff ff       	call   2550 <fwrite@plt>
    fb40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb44:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb48:	48 89 c1             	mov    %rax,%rcx
    fb4b:	ba 06 00 00 00       	mov    $0x6,%edx
    fb50:	be 01 00 00 00       	mov    $0x1,%esi
    fb55:	48 8d 05 fe c4 00 00 	lea    0xc4fe(%rip),%rax        # 1c05a <__PRETTY_FUNCTION__.0+0x1ba>
    fb5c:	48 89 c7             	mov    %rax,%rdi
    fb5f:	e8 ec 29 ff ff       	call   2550 <fwrite@plt>
    fb64:	90                   	nop
    fb65:	c9                   	leave
    fb66:	c3                   	ret

000000000000fb67 <codegen_program_header>:
    fb67:	f3 0f 1e fa          	endbr64
    fb6b:	55                   	push   %rbp
    fb6c:	48 89 e5             	mov    %rsp,%rbp
    fb6f:	48 83 ec 10          	sub    $0x10,%rsp
    fb73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb7f:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb83:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fb87:	48 8d 0d d3 c4 00 00 	lea    0xc4d3(%rip),%rcx        # 1c061 <__PRETTY_FUNCTION__.0+0x1c1>
    fb8e:	48 89 ce             	mov    %rcx,%rsi
    fb91:	48 89 c7             	mov    %rax,%rdi
    fb94:	b8 00 00 00 00       	mov    $0x0,%eax
    fb99:	e8 d2 28 ff ff       	call   2470 <fprintf@plt>
    fb9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fba2:	48 8b 40 08          	mov    0x8(%rax),%rax
    fba6:	48 89 c1             	mov    %rax,%rcx
    fba9:	ba 12 00 00 00       	mov    $0x12,%edx
    fbae:	be 01 00 00 00       	mov    $0x1,%esi
    fbb3:	48 8d 05 b4 c4 00 00 	lea    0xc4b4(%rip),%rax        # 1c06e <__PRETTY_FUNCTION__.0+0x1ce>
    fbba:	48 89 c7             	mov    %rax,%rdi
    fbbd:	e8 8e 29 ff ff       	call   2550 <fwrite@plt>
    fbc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbc6:	48 8b 40 08          	mov    0x8(%rax),%rax
    fbca:	48 89 c1             	mov    %rax,%rcx
    fbcd:	ba 07 00 00 00       	mov    $0x7,%edx
    fbd2:	be 01 00 00 00       	mov    $0x1,%esi
    fbd7:	48 8d 05 a3 c4 00 00 	lea    0xc4a3(%rip),%rax        # 1c081 <__PRETTY_FUNCTION__.0+0x1e1>
    fbde:	48 89 c7             	mov    %rax,%rdi
    fbe1:	e8 6a 29 ff ff       	call   2550 <fwrite@plt>
    fbe6:	90                   	nop
    fbe7:	c9                   	leave
    fbe8:	c3                   	ret

000000000000fbe9 <codegen_program_footer>:
    fbe9:	f3 0f 1e fa          	endbr64
    fbed:	55                   	push   %rbp
    fbee:	48 89 e5             	mov    %rsp,%rbp
    fbf1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbf5:	90                   	nop
    fbf6:	5d                   	pop    %rbp
    fbf7:	c3                   	ret

000000000000fbf8 <codegen_main>:
    fbf8:	f3 0f 1e fa          	endbr64
    fbfc:	55                   	push   %rbp
    fbfd:	48 89 e5             	mov    %rsp,%rbp
    fc00:	48 83 ec 10          	sub    $0x10,%rsp
    fc04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fc08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fc0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc10:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc14:	48 89 c1             	mov    %rax,%rcx
    fc17:	ba 10 00 00 00       	mov    $0x10,%edx
    fc1c:	be 01 00 00 00       	mov    $0x1,%esi
    fc21:	48 8d 05 61 c4 00 00 	lea    0xc461(%rip),%rax        # 1c089 <__PRETTY_FUNCTION__.0+0x1e9>
    fc28:	48 89 c7             	mov    %rax,%rdi
    fc2b:	e8 20 29 ff ff       	call   2550 <fwrite@plt>
    fc30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc34:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc38:	48 89 c1             	mov    %rax,%rcx
    fc3b:	ba 0d 00 00 00       	mov    $0xd,%edx
    fc40:	be 01 00 00 00       	mov    $0x1,%esi
    fc45:	48 8d 05 4e c4 00 00 	lea    0xc44e(%rip),%rax        # 1c09a <__PRETTY_FUNCTION__.0+0x1fa>
    fc4c:	48 89 c7             	mov    %rax,%rdi
    fc4f:	e8 fc 28 ff ff       	call   2550 <fwrite@plt>
    fc54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc58:	48 89 c6             	mov    %rax,%rsi
    fc5b:	48 8d 05 46 c4 00 00 	lea    0xc446(%rip),%rax        # 1c0a8 <__PRETTY_FUNCTION__.0+0x208>
    fc62:	48 89 c7             	mov    %rax,%rdi
    fc65:	e8 e4 fb ff ff       	call   f84e <codegen_function_header>
    fc6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc6e:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc72:	48 8d 15 34 c4 00 00 	lea    0xc434(%rip),%rdx        # 1c0ad <__PRETTY_FUNCTION__.0+0x20d>
    fc79:	48 89 d6             	mov    %rdx,%rsi
    fc7c:	48 89 c7             	mov    %rax,%rdi
    fc7f:	b8 00 00 00 00       	mov    $0x0,%eax
    fc84:	e8 e7 27 ff ff       	call   2470 <fprintf@plt>
    fc89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc8d:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fc95:	48 8d 0d 23 c4 00 00 	lea    0xc423(%rip),%rcx        # 1c0bf <__PRETTY_FUNCTION__.0+0x21f>
    fc9c:	48 89 ce             	mov    %rcx,%rsi
    fc9f:	48 89 c7             	mov    %rax,%rdi
    fca2:	b8 00 00 00 00       	mov    $0x0,%eax
    fca7:	e8 c4 27 ff ff       	call   2470 <fprintf@plt>
    fcac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fcb0:	48 8b 40 08          	mov    0x8(%rax),%rax
    fcb4:	48 8d 15 0e c4 00 00 	lea    0xc40e(%rip),%rdx        # 1c0c9 <__PRETTY_FUNCTION__.0+0x229>
    fcbb:	48 89 d6             	mov    %rdx,%rsi
    fcbe:	48 89 c7             	mov    %rax,%rdi
    fcc1:	b8 00 00 00 00       	mov    $0x0,%eax
    fcc6:	e8 a5 27 ff ff       	call   2470 <fprintf@plt>
    fccb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fccf:	48 8b 40 08          	mov    0x8(%rax),%rax
    fcd3:	48 89 c1             	mov    %rax,%rcx
    fcd6:	ba 0b 00 00 00       	mov    $0xb,%edx
    fcdb:	be 01 00 00 00       	mov    $0x1,%esi
    fce0:	48 8d 05 f5 c3 00 00 	lea    0xc3f5(%rip),%rax        # 1c0dc <__PRETTY_FUNCTION__.0+0x23c>
    fce7:	48 89 c7             	mov    %rax,%rdi
    fcea:	e8 61 28 ff ff       	call   2550 <fwrite@plt>
    fcef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fcf3:	48 89 c6             	mov    %rax,%rsi
    fcf6:	48 8d 05 ab c3 00 00 	lea    0xc3ab(%rip),%rax        # 1c0a8 <__PRETTY_FUNCTION__.0+0x208>
    fcfd:	48 89 c7             	mov    %rax,%rdi
    fd00:	e8 a6 fb ff ff       	call   f8ab <codegen_function_footer>
    fd05:	90                   	nop
    fd06:	c9                   	leave
    fd07:	c3                   	ret

000000000000fd08 <codegen_stack_space>:
    fd08:	f3 0f 1e fa          	endbr64
    fd0c:	55                   	push   %rbp
    fd0d:	48 89 e5             	mov    %rsp,%rbp
    fd10:	48 83 ec 20          	sub    $0x20,%rsp
    fd14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd18:	b8 00 00 00 00       	mov    $0x0,%eax
    fd1d:	e8 ba 27 00 00       	call   124dc <get_full_stack_offset>
    fd22:	89 45 fc             	mov    %eax,-0x4(%rbp)
    fd25:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    fd29:	79 28                	jns    fd53 <codegen_stack_space+0x4b>
    fd2b:	48 8d 05 ee c6 00 00 	lea    0xc6ee(%rip),%rax        # 1c420 <__PRETTY_FUNCTION__.6>
    fd32:	48 89 c1             	mov    %rax,%rcx
    fd35:	ba e9 00 00 00       	mov    $0xe9,%edx
    fd3a:	48 8d 05 a7 c3 00 00 	lea    0xc3a7(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    fd41:	48 89 c6             	mov    %rax,%rsi
    fd44:	48 8d 05 c9 c3 00 00 	lea    0xc3c9(%rip),%rax        # 1c114 <__PRETTY_FUNCTION__.0+0x274>
    fd4b:	48 89 c7             	mov    %rax,%rdi
    fd4e:	e8 7d 26 ff ff       	call   23d0 <__assert_fail@plt>
    fd53:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    fd57:	74 22                	je     fd7b <codegen_stack_space+0x73>
    fd59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd5d:	48 8b 40 08          	mov    0x8(%rax),%rax
    fd61:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fd64:	48 8d 0d bb c3 00 00 	lea    0xc3bb(%rip),%rcx        # 1c126 <__PRETTY_FUNCTION__.0+0x286>
    fd6b:	48 89 ce             	mov    %rcx,%rsi
    fd6e:	48 89 c7             	mov    %rax,%rdi
    fd71:	b8 00 00 00 00       	mov    $0x0,%eax
    fd76:	e8 f5 26 ff ff       	call   2470 <fprintf@plt>
    fd7b:	90                   	nop
    fd7c:	c9                   	leave
    fd7d:	c3                   	ret

000000000000fd7e <codegen_inst_list>:
    fd7e:	f3 0f 1e fa          	endbr64
    fd82:	55                   	push   %rbp
    fd83:	48 89 e5             	mov    %rsp,%rbp
    fd86:	48 83 ec 20          	sub    $0x20,%rsp
    fd8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd8e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fd92:	eb 5e                	jmp    fdf2 <codegen_inst_list+0x74>
    fd94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd98:	48 8b 40 08          	mov    0x8(%rax),%rax
    fd9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fda0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    fda5:	75 28                	jne    fdcf <codegen_inst_list+0x51>
    fda7:	48 8d 05 92 c6 00 00 	lea    0xc692(%rip),%rax        # 1c440 <__PRETTY_FUNCTION__.5>
    fdae:	48 89 c1             	mov    %rax,%rcx
    fdb1:	ba f9 00 00 00       	mov    $0xf9,%edx
    fdb6:	48 8d 05 2b c3 00 00 	lea    0xc32b(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    fdbd:	48 89 c6             	mov    %rax,%rsi
    fdc0:	48 8d 05 71 c3 00 00 	lea    0xc371(%rip),%rax        # 1c138 <__PRETTY_FUNCTION__.0+0x298>
    fdc7:	48 89 c7             	mov    %rax,%rdi
    fdca:	e8 01 26 ff ff       	call   23d0 <__assert_fail@plt>
    fdcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdd3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    fdd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fddb:	48 89 d6             	mov    %rdx,%rsi
    fdde:	48 89 c7             	mov    %rax,%rdi
    fde1:	e8 fa 25 ff ff       	call   23e0 <fputs@plt>
    fde6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdea:	48 8b 40 10          	mov    0x10(%rax),%rax
    fdee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fdf2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    fdf7:	75 9b                	jne    fd94 <codegen_inst_list+0x16>
    fdf9:	90                   	nop
    fdfa:	90                   	nop
    fdfb:	c9                   	leave
    fdfc:	c3                   	ret

000000000000fdfd <codegen_program>:
    fdfd:	f3 0f 1e fa          	endbr64
    fe01:	55                   	push   %rbp
    fe02:	48 89 e5             	mov    %rsp,%rbp
    fe05:	48 83 ec 40          	sub    $0x40,%rsp
    fe09:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fe0d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fe11:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    fe15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe19:	8b 40 04             	mov    0x4(%rax),%eax
    fe1c:	85 c0                	test   %eax,%eax
    fe1e:	74 28                	je     fe48 <codegen_program+0x4b>
    fe20:	48 8d 05 39 c6 00 00 	lea    0xc639(%rip),%rax        # 1c460 <__PRETTY_FUNCTION__.4>
    fe27:	48 89 c1             	mov    %rax,%rcx
    fe2a:	ba 04 01 00 00       	mov    $0x104,%edx
    fe2f:	48 8d 05 b2 c2 00 00 	lea    0xc2b2(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    fe36:	48 89 c6             	mov    %rax,%rsi
    fe39:	48 8d 05 08 c3 00 00 	lea    0xc308(%rip),%rax        # 1c148 <__PRETTY_FUNCTION__.0+0x2a8>
    fe40:	48 89 c7             	mov    %rax,%rdi
    fe43:	e8 88 25 ff ff       	call   23d0 <__assert_fail@plt>
    fe48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe4c:	48 83 c0 08          	add    $0x8,%rax
    fe50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fe54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe58:	48 8b 00             	mov    (%rax),%rax
    fe5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fe5f:	b8 00 00 00 00       	mov    $0x0,%eax
    fe64:	e8 4b 27 00 00       	call   125b4 <push_stackscope>
    fe69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe6d:	48 8b 40 10          	mov    0x10(%rax),%rax
    fe71:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fe75:	48 89 d6             	mov    %rdx,%rsi
    fe78:	48 89 c7             	mov    %rax,%rdi
    fe7b:	e8 a4 00 00 00       	call   ff24 <codegen_function_locals>
    fe80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe84:	48 8b 40 20          	mov    0x20(%rax),%rax
    fe88:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fe8c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    fe90:	48 89 ce             	mov    %rcx,%rsi
    fe93:	48 89 c7             	mov    %rax,%rdi
    fe96:	e8 03 02 00 00       	call   1009e <codegen_subprograms>
    fe9b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    fea2:	00
    fea3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fea7:	48 8b 40 28          	mov    0x28(%rax),%rax
    feab:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    feaf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    feb3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    feb7:	48 89 c7             	mov    %rax,%rdi
    feba:	e8 ce 08 00 00       	call   1078d <codegen_stmt>
    febf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fec3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fec7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fecb:	48 89 d6             	mov    %rdx,%rsi
    fece:	48 89 c7             	mov    %rax,%rdi
    fed1:	e8 78 f9 ff ff       	call   f84e <codegen_function_header>
    fed6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    feda:	48 89 c7             	mov    %rax,%rdi
    fedd:	e8 26 fe ff ff       	call   fd08 <codegen_stack_space>
    fee2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    feea:	48 89 d6             	mov    %rdx,%rsi
    feed:	48 89 c7             	mov    %rax,%rdi
    fef0:	e8 89 fe ff ff       	call   fd7e <codegen_inst_list>
    fef5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fef9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fefd:	48 89 d6             	mov    %rdx,%rsi
    ff00:	48 89 c7             	mov    %rax,%rdi
    ff03:	e8 a3 f9 ff ff       	call   f8ab <codegen_function_footer>
    ff08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff0c:	48 89 c7             	mov    %rax,%rdi
    ff0f:	e8 0d f6 ff ff       	call   f521 <free_inst_list>
    ff14:	b8 00 00 00 00       	mov    $0x0,%eax
    ff19:	e8 07 27 00 00       	call   12625 <pop_stackscope>
    ff1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ff22:	c9                   	leave
    ff23:	c3                   	ret

000000000000ff24 <codegen_function_locals>:
    ff24:	f3 0f 1e fa          	endbr64
    ff28:	55                   	push   %rbp
    ff29:	48 89 e5             	mov    %rsp,%rbp
    ff2c:	48 83 ec 30          	sub    $0x30,%rsp
    ff30:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ff34:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ff38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ff40:	e9 dd 00 00 00       	jmp    10022 <codegen_function_locals+0xfe>
    ff45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff49:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ff51:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ff56:	75 28                	jne    ff80 <codegen_function_locals+0x5c>
    ff58:	48 8d 05 11 c5 00 00 	lea    0xc511(%rip),%rax        # 1c470 <__PRETTY_FUNCTION__.3>
    ff5f:	48 89 c1             	mov    %rax,%rcx
    ff62:	ba 2b 01 00 00       	mov    $0x12b,%edx
    ff67:	48 8d 05 7a c1 00 00 	lea    0xc17a(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    ff6e:	48 89 c6             	mov    %rax,%rsi
    ff71:	48 8d 05 f0 c1 00 00 	lea    0xc1f0(%rip),%rax        # 1c168 <__PRETTY_FUNCTION__.0+0x2c8>
    ff78:	48 89 c7             	mov    %rax,%rdi
    ff7b:	e8 50 24 ff ff       	call   23d0 <__assert_fail@plt>
    ff80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff84:	8b 40 04             	mov    0x4(%rax),%eax
    ff87:	83 f8 02             	cmp    $0x2,%eax
    ff8a:	74 28                	je     ffb4 <codegen_function_locals+0x90>
    ff8c:	48 8d 05 dd c4 00 00 	lea    0xc4dd(%rip),%rax        # 1c470 <__PRETTY_FUNCTION__.3>
    ff93:	48 89 c1             	mov    %rax,%rcx
    ff96:	ba 2c 01 00 00       	mov    $0x12c,%edx
    ff9b:	48 8d 05 46 c1 00 00 	lea    0xc146(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    ffa2:	48 89 c6             	mov    %rax,%rsi
    ffa5:	48 8d 05 c9 c1 00 00 	lea    0xc1c9(%rip),%rax        # 1c175 <__PRETTY_FUNCTION__.0+0x2d5>
    ffac:	48 89 c7             	mov    %rax,%rdi
    ffaf:	e8 1c 24 ff ff       	call   23d0 <__assert_fail@plt>
    ffb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffb8:	48 8b 40 08          	mov    0x8(%rax),%rax
    ffbc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ffc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffc4:	8b 40 10             	mov    0x10(%rax),%eax
    ffc7:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    ffcc:	75 41                	jne    1000f <codegen_function_locals+0xeb>
    ffce:	48 8b 05 8b 20 01 00 	mov    0x1208b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ffd5:	48 89 c1             	mov    %rax,%rcx
    ffd8:	ba 37 00 00 00       	mov    $0x37,%edx
    ffdd:	be 01 00 00 00       	mov    $0x1,%esi
    ffe2:	48 8d 05 af c1 00 00 	lea    0xc1af(%rip),%rax        # 1c198 <__PRETTY_FUNCTION__.0+0x2f8>
    ffe9:	48 89 c7             	mov    %rax,%rdi
    ffec:	e8 5f 25 ff ff       	call   2550 <fwrite@plt>
    fff1:	eb 1c                	jmp    1000f <codegen_function_locals+0xeb>
    fff3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fff7:	48 8b 40 08          	mov    0x8(%rax),%rax
    fffb:	48 89 c7             	mov    %rax,%rdi
    fffe:	e8 09 28 00 00       	call   1280c <add_l_x>
   10003:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10007:	48 8b 40 10          	mov    0x10(%rax),%rax
   1000b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1000f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10014:	75 dd                	jne    fff3 <codegen_function_locals+0xcf>
   10016:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1001a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1001e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10022:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   10027:	0f 85 18 ff ff ff    	jne    ff45 <codegen_function_locals+0x21>
   1002d:	90                   	nop
   1002e:	90                   	nop
   1002f:	c9                   	leave
   10030:	c3                   	ret

0000000000010031 <codegen_vect_reg>:
   10031:	f3 0f 1e fa          	endbr64
   10035:	55                   	push   %rbp
   10036:	48 89 e5             	mov    %rsp,%rbp
   10039:	48 83 ec 50          	sub    $0x50,%rsp
   1003d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10041:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   10044:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1004b:	00 00
   1004d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10051:	31 c0                	xor    %eax,%eax
   10053:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   10056:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1005a:	89 d1                	mov    %edx,%ecx
   1005c:	48 8d 15 6d c1 00 00 	lea    0xc16d(%rip),%rdx        # 1c1d0 <__PRETTY_FUNCTION__.0+0x330>
   10063:	be 32 00 00 00       	mov    $0x32,%esi
   10068:	48 89 c7             	mov    %rax,%rdi
   1006b:	b8 00 00 00 00       	mov    $0x0,%eax
   10070:	e8 3b 23 ff ff       	call   23b0 <snprintf@plt>
   10075:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10079:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1007d:	48 89 d6             	mov    %rdx,%rsi
   10080:	48 89 c7             	mov    %rax,%rdi
   10083:	e8 3e f4 ff ff       	call   f4c6 <add_inst>
   10088:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1008c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10093:	00 00
   10095:	74 05                	je     1009c <codegen_vect_reg+0x6b>
   10097:	e8 04 23 ff ff       	call   23a0 <__stack_chk_fail@plt>
   1009c:	c9                   	leave
   1009d:	c3                   	ret

000000000001009e <codegen_subprograms>:
   1009e:	f3 0f 1e fa          	endbr64
   100a2:	55                   	push   %rbp
   100a3:	48 89 e5             	mov    %rsp,%rbp
   100a6:	48 83 ec 30          	sub    $0x30,%rsp
   100aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   100ae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   100b2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   100b6:	e9 e3 00 00 00       	jmp    1019e <codegen_subprograms+0x100>
   100bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   100c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   100c7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   100cc:	75 28                	jne    100f6 <codegen_subprograms+0x58>
   100ce:	48 8d 05 bb c3 00 00 	lea    0xc3bb(%rip),%rax        # 1c490 <__PRETTY_FUNCTION__.2>
   100d5:	48 89 c1             	mov    %rax,%rcx
   100d8:	ba 4e 01 00 00       	mov    $0x14e,%edx
   100dd:	48 8d 05 04 c0 00 00 	lea    0xc004(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   100e4:	48 89 c6             	mov    %rax,%rsi
   100e7:	48 8d 05 f4 c0 00 00 	lea    0xc0f4(%rip),%rax        # 1c1e2 <__PRETTY_FUNCTION__.0+0x342>
   100ee:	48 89 c7             	mov    %rax,%rdi
   100f1:	e8 da 22 ff ff       	call   23d0 <__assert_fail@plt>
   100f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100fa:	8b 40 04             	mov    0x4(%rax),%eax
   100fd:	83 f8 01             	cmp    $0x1,%eax
   10100:	74 28                	je     1012a <codegen_subprograms+0x8c>
   10102:	48 8d 05 87 c3 00 00 	lea    0xc387(%rip),%rax        # 1c490 <__PRETTY_FUNCTION__.2>
   10109:	48 89 c1             	mov    %rax,%rcx
   1010c:	ba 4f 01 00 00       	mov    $0x14f,%edx
   10111:	48 8d 05 d0 bf 00 00 	lea    0xbfd0(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10118:	48 89 c6             	mov    %rax,%rsi
   1011b:	48 8d 05 cc c0 00 00 	lea    0xc0cc(%rip),%rax        # 1c1ee <__PRETTY_FUNCTION__.0+0x34e>
   10122:	48 89 c7             	mov    %rax,%rdi
   10125:	e8 a6 22 ff ff       	call   23d0 <__assert_fail@plt>
   1012a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1012e:	8b 40 08             	mov    0x8(%rax),%eax
   10131:	83 f8 05             	cmp    $0x5,%eax
   10134:	74 07                	je     1013d <codegen_subprograms+0x9f>
   10136:	83 f8 06             	cmp    $0x6,%eax
   10139:	74 1b                	je     10156 <codegen_subprograms+0xb8>
   1013b:	eb 32                	jmp    1016f <codegen_subprograms+0xd1>
   1013d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10141:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10149:	48 89 ce             	mov    %rcx,%rsi
   1014c:	48 89 c7             	mov    %rax,%rdi
   1014f:	e8 59 00 00 00       	call   101ad <codegen_procedure>
   10154:	eb 3c                	jmp    10192 <codegen_subprograms+0xf4>
   10156:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1015a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1015e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10162:	48 89 ce             	mov    %rcx,%rsi
   10165:	48 89 c7             	mov    %rax,%rdi
   10168:	e8 ff 01 00 00       	call   1036c <codegen_function>
   1016d:	eb 23                	jmp    10192 <codegen_subprograms+0xf4>
   1016f:	48 8b 05 ea 1e 01 00 	mov    0x11eea(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10176:	48 89 c1             	mov    %rax,%rcx
   10179:	ba 30 00 00 00       	mov    $0x30,%edx
   1017e:	be 01 00 00 00       	mov    $0x1,%esi
   10183:	48 8d 05 86 c0 00 00 	lea    0xc086(%rip),%rax        # 1c210 <__PRETTY_FUNCTION__.0+0x370>
   1018a:	48 89 c7             	mov    %rax,%rdi
   1018d:	e8 be 23 ff ff       	call   2550 <fwrite@plt>
   10192:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10196:	48 8b 40 10          	mov    0x10(%rax),%rax
   1019a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1019e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   101a3:	0f 85 12 ff ff ff    	jne    100bb <codegen_subprograms+0x1d>
   101a9:	90                   	nop
   101aa:	90                   	nop
   101ab:	c9                   	leave
   101ac:	c3                   	ret

00000000000101ad <codegen_procedure>:
   101ad:	f3 0f 1e fa          	endbr64
   101b1:	55                   	push   %rbp
   101b2:	48 89 e5             	mov    %rsp,%rbp
   101b5:	48 83 ec 40          	sub    $0x40,%rsp
   101b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   101bd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   101c1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   101c5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   101ca:	75 28                	jne    101f4 <codegen_procedure+0x47>
   101cc:	48 8d 05 dd c2 00 00 	lea    0xc2dd(%rip),%rax        # 1c4b0 <__PRETTY_FUNCTION__.1>
   101d3:	48 89 c1             	mov    %rax,%rcx
   101d6:	ba 63 01 00 00       	mov    $0x163,%edx
   101db:	48 8d 05 06 bf 00 00 	lea    0xbf06(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   101e2:	48 89 c6             	mov    %rax,%rsi
   101e5:	48 8d 05 55 c0 00 00 	lea    0xc055(%rip),%rax        # 1c241 <__PRETTY_FUNCTION__.0+0x3a1>
   101ec:	48 89 c7             	mov    %rax,%rdi
   101ef:	e8 dc 21 ff ff       	call   23d0 <__assert_fail@plt>
   101f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   101f8:	8b 40 04             	mov    0x4(%rax),%eax
   101fb:	83 f8 01             	cmp    $0x1,%eax
   101fe:	74 28                	je     10228 <codegen_procedure+0x7b>
   10200:	48 8d 05 a9 c2 00 00 	lea    0xc2a9(%rip),%rax        # 1c4b0 <__PRETTY_FUNCTION__.1>
   10207:	48 89 c1             	mov    %rax,%rcx
   1020a:	ba 64 01 00 00       	mov    $0x164,%edx
   1020f:	48 8d 05 d2 be 00 00 	lea    0xbed2(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10216:	48 89 c6             	mov    %rax,%rsi
   10219:	48 8d 05 38 c0 00 00 	lea    0xc038(%rip),%rax        # 1c258 <__PRETTY_FUNCTION__.0+0x3b8>
   10220:	48 89 c7             	mov    %rax,%rdi
   10223:	e8 a8 21 ff ff       	call   23d0 <__assert_fail@plt>
   10228:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1022c:	8b 40 08             	mov    0x8(%rax),%eax
   1022f:	83 f8 05             	cmp    $0x5,%eax
   10232:	74 28                	je     1025c <codegen_procedure+0xaf>
   10234:	48 8d 05 75 c2 00 00 	lea    0xc275(%rip),%rax        # 1c4b0 <__PRETTY_FUNCTION__.1>
   1023b:	48 89 c1             	mov    %rax,%rcx
   1023e:	ba 65 01 00 00       	mov    $0x165,%edx
   10243:	48 8d 05 9e be 00 00 	lea    0xbe9e(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   1024a:	48 89 c6             	mov    %rax,%rsi
   1024d:	48 8d 05 2c c0 00 00 	lea    0xc02c(%rip),%rax        # 1c280 <__PRETTY_FUNCTION__.0+0x3e0>
   10254:	48 89 c7             	mov    %rax,%rdi
   10257:	e8 74 21 ff ff       	call   23d0 <__assert_fail@plt>
   1025c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10260:	48 83 c0 08          	add    $0x8,%rax
   10264:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10268:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1026c:	48 8b 40 10          	mov    0x10(%rax),%rax
   10270:	48 85 c0             	test   %rax,%rax
   10273:	74 0a                	je     1027f <codegen_procedure+0xd2>
   10275:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10279:	48 8b 40 10          	mov    0x10(%rax),%rax
   1027d:	eb 08                	jmp    10287 <codegen_procedure+0xda>
   1027f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10283:	48 8b 40 08          	mov    0x8(%rax),%rax
   10287:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1028b:	b8 00 00 00 00       	mov    $0x0,%eax
   10290:	e8 1f 23 00 00       	call   125b4 <push_stackscope>
   10295:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1029c:	00
   1029d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102a1:	48 8b 40 18          	mov    0x18(%rax),%rax
   102a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102a9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   102ad:	48 89 ce             	mov    %rcx,%rsi
   102b0:	48 89 c7             	mov    %rax,%rdi
   102b3:	e8 ed 02 00 00       	call   105a5 <codegen_subprogram_arguments>
   102b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   102bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102c0:	48 8b 40 38          	mov    0x38(%rax),%rax
   102c4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102c8:	48 89 d6             	mov    %rdx,%rsi
   102cb:	48 89 c7             	mov    %rax,%rdi
   102ce:	e8 51 fc ff ff       	call   ff24 <codegen_function_locals>
   102d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102d7:	48 8b 40 40          	mov    0x40(%rax),%rax
   102db:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   102df:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   102e3:	48 89 ce             	mov    %rcx,%rsi
   102e6:	48 89 c7             	mov    %rax,%rdi
   102e9:	e8 b0 fd ff ff       	call   1009e <codegen_subprograms>
   102ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102f2:	48 8b 40 48          	mov    0x48(%rax),%rax
   102f6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   102fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102fe:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   10302:	48 89 c7             	mov    %rax,%rdi
   10305:	e8 83 04 00 00       	call   1078d <codegen_stmt>
   1030a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1030e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10312:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10316:	48 89 d6             	mov    %rdx,%rsi
   10319:	48 89 c7             	mov    %rax,%rdi
   1031c:	e8 2d f5 ff ff       	call   f84e <codegen_function_header>
   10321:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10325:	48 89 c7             	mov    %rax,%rdi
   10328:	e8 db f9 ff ff       	call   fd08 <codegen_stack_space>
   1032d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10331:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10335:	48 89 d6             	mov    %rdx,%rsi
   10338:	48 89 c7             	mov    %rax,%rdi
   1033b:	e8 3e fa ff ff       	call   fd7e <codegen_inst_list>
   10340:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10344:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10348:	48 89 d6             	mov    %rdx,%rsi
   1034b:	48 89 c7             	mov    %rax,%rdi
   1034e:	e8 58 f5 ff ff       	call   f8ab <codegen_function_footer>
   10353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10357:	48 89 c7             	mov    %rax,%rdi
   1035a:	e8 c2 f1 ff ff       	call   f521 <free_inst_list>
   1035f:	b8 00 00 00 00       	mov    $0x0,%eax
   10364:	e8 bc 22 00 00       	call   12625 <pop_stackscope>
   10369:	90                   	nop
   1036a:	c9                   	leave
   1036b:	c3                   	ret

000000000001036c <codegen_function>:
   1036c:	f3 0f 1e fa          	endbr64
   10370:	55                   	push   %rbp
   10371:	48 89 e5             	mov    %rsp,%rbp
   10374:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10378:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   1037c:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   10380:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   10384:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1038b:	00 00
   1038d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10391:	31 c0                	xor    %eax,%eax
   10393:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   10398:	75 28                	jne    103c2 <codegen_function+0x56>
   1039a:	48 8d 05 2f c1 00 00 	lea    0xc12f(%rip),%rax        # 1c4d0 <__PRETTY_FUNCTION__.0>
   103a1:	48 89 c1             	mov    %rax,%rcx
   103a4:	ba 80 01 00 00       	mov    $0x180,%edx
   103a9:	48 8d 05 38 bd 00 00 	lea    0xbd38(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   103b0:	48 89 c6             	mov    %rax,%rsi
   103b3:	48 8d 05 0c bf 00 00 	lea    0xbf0c(%rip),%rax        # 1c2c6 <__PRETTY_FUNCTION__.0+0x426>
   103ba:	48 89 c7             	mov    %rax,%rdi
   103bd:	e8 0e 20 ff ff       	call   23d0 <__assert_fail@plt>
   103c2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   103c6:	8b 40 04             	mov    0x4(%rax),%eax
   103c9:	83 f8 01             	cmp    $0x1,%eax
   103cc:	74 28                	je     103f6 <codegen_function+0x8a>
   103ce:	48 8d 05 fb c0 00 00 	lea    0xc0fb(%rip),%rax        # 1c4d0 <__PRETTY_FUNCTION__.0>
   103d5:	48 89 c1             	mov    %rax,%rcx
   103d8:	ba 81 01 00 00       	mov    $0x181,%edx
   103dd:	48 8d 05 04 bd 00 00 	lea    0xbd04(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   103e4:	48 89 c6             	mov    %rax,%rsi
   103e7:	48 8d 05 ea be 00 00 	lea    0xbeea(%rip),%rax        # 1c2d8 <__PRETTY_FUNCTION__.0+0x438>
   103ee:	48 89 c7             	mov    %rax,%rdi
   103f1:	e8 da 1f ff ff       	call   23d0 <__assert_fail@plt>
   103f6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   103fa:	8b 40 08             	mov    0x8(%rax),%eax
   103fd:	83 f8 06             	cmp    $0x6,%eax
   10400:	74 28                	je     1042a <codegen_function+0xbe>
   10402:	48 8d 05 c7 c0 00 00 	lea    0xc0c7(%rip),%rax        # 1c4d0 <__PRETTY_FUNCTION__.0>
   10409:	48 89 c1             	mov    %rax,%rcx
   1040c:	ba 82 01 00 00       	mov    $0x182,%edx
   10411:	48 8d 05 d0 bc 00 00 	lea    0xbcd0(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10418:	48 89 c6             	mov    %rax,%rsi
   1041b:	48 8d 05 de be 00 00 	lea    0xbede(%rip),%rax        # 1c300 <__PRETTY_FUNCTION__.0+0x460>
   10422:	48 89 c7             	mov    %rax,%rdi
   10425:	e8 a6 1f ff ff       	call   23d0 <__assert_fail@plt>
   1042a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1042e:	48 83 c0 08          	add    $0x8,%rax
   10432:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10436:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1043a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1043e:	48 85 c0             	test   %rax,%rax
   10441:	74 0a                	je     1044d <codegen_function+0xe1>
   10443:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10447:	48 8b 40 10          	mov    0x10(%rax),%rax
   1044b:	eb 08                	jmp    10455 <codegen_function+0xe9>
   1044d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10451:	48 8b 40 08          	mov    0x8(%rax),%rax
   10455:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10459:	b8 00 00 00 00       	mov    $0x0,%eax
   1045e:	e8 51 21 00 00       	call   125b4 <push_stackscope>
   10463:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   1046a:	00
   1046b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1046f:	48 8b 40 18          	mov    0x18(%rax),%rax
   10473:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10477:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1047b:	48 89 ce             	mov    %rcx,%rsi
   1047e:	48 89 c7             	mov    %rax,%rdi
   10481:	e8 1f 01 00 00       	call   105a5 <codegen_subprogram_arguments>
   10486:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1048a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1048e:	48 8b 40 08          	mov    0x8(%rax),%rax
   10492:	48 89 c7             	mov    %rax,%rdi
   10495:	e8 72 23 00 00       	call   1280c <add_l_x>
   1049a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1049e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   104a2:	48 8b 40 38          	mov    0x38(%rax),%rax
   104a6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   104aa:	48 89 d6             	mov    %rdx,%rsi
   104ad:	48 89 c7             	mov    %rax,%rdi
   104b0:	e8 6f fa ff ff       	call   ff24 <codegen_function_locals>
   104b5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   104b9:	48 8b 40 40          	mov    0x40(%rax),%rax
   104bd:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   104c1:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   104c5:	48 89 ce             	mov    %rcx,%rsi
   104c8:	48 89 c7             	mov    %rax,%rdi
   104cb:	e8 ce fb ff ff       	call   1009e <codegen_subprograms>
   104d0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   104d4:	48 8b 40 48          	mov    0x48(%rax),%rax
   104d8:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   104dc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   104e0:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   104e4:	48 89 c7             	mov    %rax,%rdi
   104e7:	e8 a1 02 00 00       	call   1078d <codegen_stmt>
   104ec:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   104f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   104f4:	8b 10                	mov    (%rax),%edx
   104f6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   104fa:	4c 8d 05 45 be 00 00 	lea    0xbe45(%rip),%r8        # 1c346 <__PRETTY_FUNCTION__.0+0x4a6>
   10501:	89 d1                	mov    %edx,%ecx
   10503:	48 8d 15 41 be 00 00 	lea    0xbe41(%rip),%rdx        # 1c34b <__PRETTY_FUNCTION__.0+0x4ab>
   1050a:	be 32 00 00 00       	mov    $0x32,%esi
   1050f:	48 89 c7             	mov    %rax,%rdi
   10512:	b8 00 00 00 00       	mov    $0x0,%eax
   10517:	e8 94 1e ff ff       	call   23b0 <snprintf@plt>
   1051c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10520:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10524:	48 89 d6             	mov    %rdx,%rsi
   10527:	48 89 c7             	mov    %rax,%rdi
   1052a:	e8 97 ef ff ff       	call   f4c6 <add_inst>
   1052f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10533:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10537:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1053b:	48 89 d6             	mov    %rdx,%rsi
   1053e:	48 89 c7             	mov    %rax,%rdi
   10541:	e8 08 f3 ff ff       	call   f84e <codegen_function_header>
   10546:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1054a:	48 89 c7             	mov    %rax,%rdi
   1054d:	e8 b6 f7 ff ff       	call   fd08 <codegen_stack_space>
   10552:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10556:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1055a:	48 89 d6             	mov    %rdx,%rsi
   1055d:	48 89 c7             	mov    %rax,%rdi
   10560:	e8 19 f8 ff ff       	call   fd7e <codegen_inst_list>
   10565:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10569:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1056d:	48 89 d6             	mov    %rdx,%rsi
   10570:	48 89 c7             	mov    %rax,%rdi
   10573:	e8 33 f3 ff ff       	call   f8ab <codegen_function_footer>
   10578:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1057c:	48 89 c7             	mov    %rax,%rdi
   1057f:	e8 9d ef ff ff       	call   f521 <free_inst_list>
   10584:	b8 00 00 00 00       	mov    $0x0,%eax
   10589:	e8 97 20 00 00       	call   12625 <pop_stackscope>
   1058e:	90                   	nop
   1058f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10593:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   1059a:	00 00
   1059c:	74 05                	je     105a3 <codegen_function+0x237>
   1059e:	e8 fd 1d ff ff       	call   23a0 <__stack_chk_fail@plt>
   105a3:	c9                   	leave
   105a4:	c3                   	ret

00000000000105a5 <codegen_subprogram_arguments>:
   105a5:	f3 0f 1e fa          	endbr64
   105a9:	55                   	push   %rbp
   105aa:	48 89 e5             	mov    %rsp,%rbp
   105ad:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   105b4:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   105b8:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   105bc:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   105c3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   105ca:	00 00
   105cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   105d0:	31 c0                	xor    %eax,%eax
   105d2:	e9 91 01 00 00       	jmp    10768 <codegen_subprogram_arguments+0x1c3>
   105d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   105db:	48 8b 40 08          	mov    0x8(%rax),%rax
   105df:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   105e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105e7:	8b 40 04             	mov    0x4(%rax),%eax
   105ea:	83 f8 02             	cmp    $0x2,%eax
   105ed:	74 0e                	je     105fd <codegen_subprogram_arguments+0x58>
   105ef:	83 f8 03             	cmp    $0x3,%eax
   105f2:	0f 84 0a 01 00 00    	je     10702 <codegen_subprogram_arguments+0x15d>
   105f8:	e9 32 01 00 00       	jmp    1072f <codegen_subprogram_arguments+0x18a>
   105fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10601:	48 8b 40 08          	mov    0x8(%rax),%rax
   10605:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10609:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1060d:	8b 40 10             	mov    0x10(%rax),%eax
   10610:	89 45 9c             	mov    %eax,-0x64(%rbp)
   10613:	81 7d 9c 0c 01 00 00 	cmpl   $0x10c,-0x64(%rbp)
   1061a:	75 23                	jne    1063f <codegen_subprogram_arguments+0x9a>
   1061c:	48 8b 05 3d 1a 01 00 	mov    0x11a3d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10623:	48 89 c1             	mov    %rax,%rcx
   10626:	ba 26 00 00 00       	mov    $0x26,%edx
   1062b:	be 01 00 00 00       	mov    $0x1,%esi
   10630:	48 8d 05 31 bd 00 00 	lea    0xbd31(%rip),%rax        # 1c368 <__PRETTY_FUNCTION__.0+0x4c8>
   10637:	48 89 c7             	mov    %rax,%rdi
   1063a:	e8 11 1f ff ff       	call   2550 <fwrite@plt>
   1063f:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
   10646:	e9 aa 00 00 00       	jmp    106f5 <codegen_subprogram_arguments+0x150>
   1064b:	8b 45 98             	mov    -0x68(%rbp),%eax
   1064e:	89 c7                	mov    %eax,%edi
   10650:	e8 9f 1d 00 00       	call   123f4 <get_arg_reg32_num>
   10655:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10659:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   1065e:	75 2d                	jne    1068d <codegen_subprogram_arguments+0xe8>
   10660:	48 8b 05 f9 19 01 00 	mov    0x119f9(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10667:	ba 04 00 00 00       	mov    $0x4,%edx
   1066c:	48 8d 0d 1d bd 00 00 	lea    0xbd1d(%rip),%rcx        # 1c390 <__PRETTY_FUNCTION__.0+0x4f0>
   10673:	48 89 ce             	mov    %rcx,%rsi
   10676:	48 89 c7             	mov    %rax,%rdi
   10679:	b8 00 00 00 00       	mov    $0x0,%eax
   1067e:	e8 ed 1d ff ff       	call   2470 <fprintf@plt>
   10683:	bf 01 00 00 00       	mov    $0x1,%edi
   10688:	e8 b3 1e ff ff       	call   2540 <exit@plt>
   1068d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10691:	48 8b 40 08          	mov    0x8(%rax),%rax
   10695:	48 89 c7             	mov    %rax,%rdi
   10698:	e8 bc 22 00 00       	call   12959 <add_l_z>
   1069d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   106a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   106a5:	8b 08                	mov    (%rax),%ecx
   106a7:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   106ab:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   106af:	41 89 c8             	mov    %ecx,%r8d
   106b2:	48 89 d1             	mov    %rdx,%rcx
   106b5:	48 8d 15 f3 bc 00 00 	lea    0xbcf3(%rip),%rdx        # 1c3af <__PRETTY_FUNCTION__.0+0x50f>
   106bc:	be 32 00 00 00       	mov    $0x32,%esi
   106c1:	48 89 c7             	mov    %rax,%rdi
   106c4:	b8 00 00 00 00       	mov    $0x0,%eax
   106c9:	e8 e2 1c ff ff       	call   23b0 <snprintf@plt>
   106ce:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   106d2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   106d6:	48 89 d6             	mov    %rdx,%rsi
   106d9:	48 89 c7             	mov    %rax,%rdi
   106dc:	e8 e5 ed ff ff       	call   f4c6 <add_inst>
   106e1:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   106e5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   106e9:	48 8b 40 10          	mov    0x10(%rax),%rax
   106ed:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   106f1:	83 45 98 01          	addl   $0x1,-0x68(%rbp)
   106f5:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   106fa:	0f 85 4b ff ff ff    	jne    1064b <codegen_subprogram_arguments+0xa6>
   10700:	eb 5a                	jmp    1075c <codegen_subprogram_arguments+0x1b7>
   10702:	48 8b 05 57 19 01 00 	mov    0x11957(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10709:	48 89 c1             	mov    %rax,%rcx
   1070c:	ba 34 00 00 00       	mov    $0x34,%edx
   10711:	be 01 00 00 00       	mov    $0x1,%esi
   10716:	48 8d 05 ab bc 00 00 	lea    0xbcab(%rip),%rax        # 1c3c8 <__PRETTY_FUNCTION__.0+0x528>
   1071d:	48 89 c7             	mov    %rax,%rdi
   10720:	e8 2b 1e ff ff       	call   2550 <fwrite@plt>
   10725:	bf 01 00 00 00       	mov    $0x1,%edi
   1072a:	e8 11 1e ff ff       	call   2540 <exit@plt>
   1072f:	48 8b 05 2a 19 01 00 	mov    0x1192a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10736:	48 89 c1             	mov    %rax,%rcx
   10739:	ba 1e 00 00 00       	mov    $0x1e,%edx
   1073e:	be 01 00 00 00       	mov    $0x1,%esi
   10743:	48 8d 05 b6 bc 00 00 	lea    0xbcb6(%rip),%rax        # 1c400 <__PRETTY_FUNCTION__.0+0x560>
   1074a:	48 89 c7             	mov    %rax,%rdi
   1074d:	e8 fe 1d ff ff       	call   2550 <fwrite@plt>
   10752:	bf 01 00 00 00       	mov    $0x1,%edi
   10757:	e8 e4 1d ff ff       	call   2540 <exit@plt>
   1075c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10760:	48 8b 40 10          	mov    0x10(%rax),%rax
   10764:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   10768:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   1076d:	0f 85 64 fe ff ff    	jne    105d7 <codegen_subprogram_arguments+0x32>
   10773:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10777:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1077b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10782:	00 00
   10784:	74 05                	je     1078b <codegen_subprogram_arguments+0x1e6>
   10786:	e8 15 1c ff ff       	call   23a0 <__stack_chk_fail@plt>
   1078b:	c9                   	leave
   1078c:	c3                   	ret

000000000001078d <codegen_stmt>:
   1078d:	f3 0f 1e fa          	endbr64
   10791:	55                   	push   %rbp
   10792:	48 89 e5             	mov    %rsp,%rbp
   10795:	48 83 ec 20          	sub    $0x20,%rsp
   10799:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1079d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   107a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   107a5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   107a9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   107ae:	75 28                	jne    107d8 <codegen_stmt+0x4b>
   107b0:	48 8d 05 81 bf 00 00 	lea    0xbf81(%rip),%rax        # 1c738 <__PRETTY_FUNCTION__.7>
   107b7:	48 89 c1             	mov    %rax,%rcx
   107ba:	ba 16 00 00 00       	mov    $0x16,%edx
   107bf:	48 8d 05 2a bd 00 00 	lea    0xbd2a(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   107c6:	48 89 c6             	mov    %rax,%rsi
   107c9:	48 8d 05 56 bd 00 00 	lea    0xbd56(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   107d0:	48 89 c7             	mov    %rax,%rdi
   107d3:	e8 f8 1b ff ff       	call   23d0 <__assert_fail@plt>
   107d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107dc:	8b 40 04             	mov    0x4(%rax),%eax
   107df:	83 f8 08             	cmp    $0x8,%eax
   107e2:	0f 87 ff 00 00 00    	ja     108e7 <codegen_stmt+0x15a>
   107e8:	89 c0                	mov    %eax,%eax
   107ea:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   107f1:	00
   107f2:	48 8d 05 77 bd 00 00 	lea    0xbd77(%rip),%rax        # 1c570 <__PRETTY_FUNCTION__.0+0xa0>
   107f9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   107fc:	48 98                	cltq
   107fe:	48 8d 15 6b bd 00 00 	lea    0xbd6b(%rip),%rdx        # 1c570 <__PRETTY_FUNCTION__.0+0xa0>
   10805:	48 01 d0             	add    %rdx,%rax
   10808:	3e ff e0             	notrack jmp *%rax
   1080b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1080f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10817:	48 89 ce             	mov    %rcx,%rsi
   1081a:	48 89 c7             	mov    %rax,%rdi
   1081d:	e8 f9 02 00 00       	call   10b1b <codegen_var_assignment>
   10822:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10826:	e9 e9 00 00 00       	jmp    10914 <codegen_stmt+0x187>
   1082b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1082f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10833:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1083b:	48 89 c7             	mov    %rax,%rdi
   1083e:	e8 15 05 00 00       	call   10d58 <codegen_proc_call>
   10843:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10847:	e9 c8 00 00 00       	jmp    10914 <codegen_stmt+0x187>
   1084c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10850:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10854:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1085c:	48 89 c7             	mov    %rax,%rdi
   1085f:	e8 e9 01 00 00       	call   10a4d <codegen_compound_stmt>
   10864:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10868:	e9 a7 00 00 00       	jmp    10914 <codegen_stmt+0x187>
   1086d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10871:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10875:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1087d:	48 89 c7             	mov    %rax,%rdi
   10880:	e8 7b 06 00 00       	call   10f00 <codegen_if_then>
   10885:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10889:	e9 86 00 00 00       	jmp    10914 <codegen_stmt+0x187>
   1088e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10892:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10896:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1089a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1089e:	48 89 c7             	mov    %rax,%rdi
   108a1:	e8 30 09 00 00       	call   111d6 <codegen_while>
   108a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   108aa:	eb 68                	jmp    10914 <codegen_stmt+0x187>
   108ac:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   108b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   108b4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   108b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108bc:	48 89 c7             	mov    %rax,%rdi
   108bf:	e8 5b 0b 00 00       	call   1141f <codegen_for>
   108c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   108c8:	eb 4a                	jmp    10914 <codegen_stmt+0x187>
   108ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108ce:	48 8b 50 08          	mov    0x8(%rax),%rdx
   108d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   108d6:	48 89 d6             	mov    %rdx,%rsi
   108d9:	48 89 c7             	mov    %rax,%rdi
   108dc:	e8 e5 eb ff ff       	call   f4c6 <add_inst>
   108e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   108e5:	eb 2d                	jmp    10914 <codegen_stmt+0x187>
   108e7:	48 8b 05 72 17 01 00 	mov    0x11772(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   108ee:	48 89 c1             	mov    %rax,%rcx
   108f1:	ba 37 00 00 00       	mov    $0x37,%edx
   108f6:	be 01 00 00 00       	mov    $0x1,%esi
   108fb:	48 8d 05 36 bc 00 00 	lea    0xbc36(%rip),%rax        # 1c538 <__PRETTY_FUNCTION__.0+0x68>
   10902:	48 89 c7             	mov    %rax,%rdi
   10905:	e8 46 1c ff ff       	call   2550 <fwrite@plt>
   1090a:	bf 01 00 00 00       	mov    $0x1,%edi
   1090f:	e8 2c 1c ff ff       	call   2540 <exit@plt>
   10914:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10918:	c9                   	leave
   10919:	c3                   	ret

000000000001091a <codegen_builtin_proc>:
   1091a:	f3 0f 1e fa          	endbr64
   1091e:	55                   	push   %rbp
   1091f:	48 89 e5             	mov    %rsp,%rbp
   10922:	48 83 ec 70          	sub    $0x70,%rsp
   10926:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1092a:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1092e:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   10932:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10939:	00 00
   1093b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1093f:	31 c0                	xor    %eax,%eax
   10941:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   10946:	75 28                	jne    10970 <codegen_builtin_proc+0x56>
   10948:	48 8d 05 01 be 00 00 	lea    0xbe01(%rip),%rax        # 1c750 <__PRETTY_FUNCTION__.6>
   1094f:	48 89 c1             	mov    %rax,%rcx
   10952:	ba 37 00 00 00       	mov    $0x37,%edx
   10957:	48 8d 05 92 bb 00 00 	lea    0xbb92(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   1095e:	48 89 c6             	mov    %rax,%rsi
   10961:	48 8d 05 be bb 00 00 	lea    0xbbbe(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10968:	48 89 c7             	mov    %rax,%rdi
   1096b:	e8 60 1a ff ff       	call   23d0 <__assert_fail@plt>
   10970:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10974:	8b 40 04             	mov    0x4(%rax),%eax
   10977:	83 f8 01             	cmp    $0x1,%eax
   1097a:	74 28                	je     109a4 <codegen_builtin_proc+0x8a>
   1097c:	48 8d 05 cd bd 00 00 	lea    0xbdcd(%rip),%rax        # 1c750 <__PRETTY_FUNCTION__.6>
   10983:	48 89 c1             	mov    %rax,%rcx
   10986:	ba 38 00 00 00       	mov    $0x38,%edx
   1098b:	48 8d 05 5e bb 00 00 	lea    0xbb5e(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10992:	48 89 c6             	mov    %rax,%rsi
   10995:	48 8d 05 fc bb 00 00 	lea    0xbbfc(%rip),%rax        # 1c598 <__PRETTY_FUNCTION__.0+0xc8>
   1099c:	48 89 c7             	mov    %rax,%rdi
   1099f:	e8 2c 1a ff ff       	call   23d0 <__assert_fail@plt>
   109a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   109a8:	48 8b 40 10          	mov    0x10(%rax),%rax
   109ac:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   109b0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   109b4:	48 8b 40 18          	mov    0x18(%rax),%rax
   109b8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   109bc:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   109c0:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   109c4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109c8:	b9 00 00 00 00       	mov    $0x0,%ecx
   109cd:	48 89 c7             	mov    %rax,%rdi
   109d0:	e8 ac 15 00 00       	call   11f81 <codegen_pass_arguments>
   109d5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   109d9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   109dd:	be 00 00 00 00       	mov    $0x0,%esi
   109e2:	48 89 c7             	mov    %rax,%rdi
   109e5:	e8 47 f6 ff ff       	call   10031 <codegen_vect_reg>
   109ea:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   109ee:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   109f2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   109f6:	48 89 d1             	mov    %rdx,%rcx
   109f9:	48 8d 15 ba bb 00 00 	lea    0xbbba(%rip),%rdx        # 1c5ba <__PRETTY_FUNCTION__.0+0xea>
   10a00:	be 32 00 00 00       	mov    $0x32,%esi
   10a05:	48 89 c7             	mov    %rax,%rdi
   10a08:	b8 00 00 00 00       	mov    $0x0,%eax
   10a0d:	e8 9e 19 ff ff       	call   23b0 <snprintf@plt>
   10a12:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10a16:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10a1a:	48 89 d6             	mov    %rdx,%rsi
   10a1d:	48 89 c7             	mov    %rax,%rdi
   10a20:	e8 a1 ea ff ff       	call   f4c6 <add_inst>
   10a25:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10a29:	b8 00 00 00 00       	mov    $0x0,%eax
   10a2e:	e8 5e 19 00 00       	call   12391 <free_arg_regs>
   10a33:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10a37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10a3b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10a42:	00 00
   10a44:	74 05                	je     10a4b <codegen_builtin_proc+0x131>
   10a46:	e8 55 19 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10a4b:	c9                   	leave
   10a4c:	c3                   	ret

0000000000010a4d <codegen_compound_stmt>:
   10a4d:	f3 0f 1e fa          	endbr64
   10a51:	55                   	push   %rbp
   10a52:	48 89 e5             	mov    %rsp,%rbp
   10a55:	48 83 ec 30          	sub    $0x30,%rsp
   10a59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10a61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10a65:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   10a69:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   10a6e:	75 28                	jne    10a98 <codegen_compound_stmt+0x4b>
   10a70:	48 8d 05 f9 bc 00 00 	lea    0xbcf9(%rip),%rax        # 1c770 <__PRETTY_FUNCTION__.5>
   10a77:	48 89 c1             	mov    %rax,%rcx
   10a7a:	ba 4c 00 00 00       	mov    $0x4c,%edx
   10a7f:	48 8d 05 6a ba 00 00 	lea    0xba6a(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10a86:	48 89 c6             	mov    %rax,%rsi
   10a89:	48 8d 05 96 ba 00 00 	lea    0xba96(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10a90:	48 89 c7             	mov    %rax,%rdi
   10a93:	e8 38 19 ff ff       	call   23d0 <__assert_fail@plt>
   10a98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a9c:	8b 40 04             	mov    0x4(%rax),%eax
   10a9f:	83 f8 02             	cmp    $0x2,%eax
   10aa2:	74 28                	je     10acc <codegen_compound_stmt+0x7f>
   10aa4:	48 8d 05 c5 bc 00 00 	lea    0xbcc5(%rip),%rax        # 1c770 <__PRETTY_FUNCTION__.5>
   10aab:	48 89 c1             	mov    %rax,%rcx
   10aae:	ba 4d 00 00 00       	mov    $0x4d,%edx
   10ab3:	48 8d 05 36 ba 00 00 	lea    0xba36(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10aba:	48 89 c6             	mov    %rax,%rsi
   10abd:	48 8d 05 04 bb 00 00 	lea    0xbb04(%rip),%rax        # 1c5c8 <__PRETTY_FUNCTION__.0+0xf8>
   10ac4:	48 89 c7             	mov    %rax,%rdi
   10ac7:	e8 04 19 ff ff       	call   23d0 <__assert_fail@plt>
   10acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ad0:	48 8b 40 08          	mov    0x8(%rax),%rax
   10ad4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10ad8:	eb 34                	jmp    10b0e <codegen_compound_stmt+0xc1>
   10ada:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ade:	48 8b 40 08          	mov    0x8(%rax),%rax
   10ae2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10ae6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10aea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10aee:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   10af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10af6:	48 89 c7             	mov    %rax,%rdi
   10af9:	e8 8f fc ff ff       	call   1078d <codegen_stmt>
   10afe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10b02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b06:	48 8b 40 10          	mov    0x10(%rax),%rax
   10b0a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10b0e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10b13:	75 c5                	jne    10ada <codegen_compound_stmt+0x8d>
   10b15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b19:	c9                   	leave
   10b1a:	c3                   	ret

0000000000010b1b <codegen_var_assignment>:
   10b1b:	f3 0f 1e fa          	endbr64
   10b1f:	55                   	push   %rbp
   10b20:	48 89 e5             	mov    %rsp,%rbp
   10b23:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   10b2a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   10b2e:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   10b32:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   10b39:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b40:	00 00
   10b42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b46:	31 c0                	xor    %eax,%eax
   10b48:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   10b4d:	75 28                	jne    10b77 <codegen_var_assignment+0x5c>
   10b4f:	48 8d 05 3a bc 00 00 	lea    0xbc3a(%rip),%rax        # 1c790 <__PRETTY_FUNCTION__.4>
   10b56:	48 89 c1             	mov    %rax,%rcx
   10b59:	ba 5f 00 00 00       	mov    $0x5f,%edx
   10b5e:	48 8d 05 8b b9 00 00 	lea    0xb98b(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10b65:	48 89 c6             	mov    %rax,%rsi
   10b68:	48 8d 05 b7 b9 00 00 	lea    0xb9b7(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10b6f:	48 89 c7             	mov    %rax,%rdi
   10b72:	e8 59 18 ff ff       	call   23d0 <__assert_fail@plt>
   10b77:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10b7b:	8b 40 04             	mov    0x4(%rax),%eax
   10b7e:	85 c0                	test   %eax,%eax
   10b80:	74 28                	je     10baa <codegen_var_assignment+0x8f>
   10b82:	48 8d 05 07 bc 00 00 	lea    0xbc07(%rip),%rax        # 1c790 <__PRETTY_FUNCTION__.4>
   10b89:	48 89 c1             	mov    %rax,%rcx
   10b8c:	ba 60 00 00 00       	mov    $0x60,%edx
   10b91:	48 8d 05 58 b9 00 00 	lea    0xb958(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10b98:	48 89 c6             	mov    %rax,%rsi
   10b9b:	48 8d 05 4c ba 00 00 	lea    0xba4c(%rip),%rax        # 1c5ee <__PRETTY_FUNCTION__.0+0x11e>
   10ba2:	48 89 c7             	mov    %rax,%rdi
   10ba5:	e8 26 18 ff ff       	call   23d0 <__assert_fail@plt>
   10baa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10bae:	48 8b 40 08          	mov    0x8(%rax),%rax
   10bb2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10bb6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10bba:	48 8b 40 10          	mov    0x10(%rax),%rax
   10bbe:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10bc2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10bc6:	8b 40 04             	mov    0x4(%rax),%eax
   10bc9:	83 f8 04             	cmp    $0x4,%eax
   10bcc:	74 28                	je     10bf6 <codegen_var_assignment+0xdb>
   10bce:	48 8d 05 bb bb 00 00 	lea    0xbbbb(%rip),%rax        # 1c790 <__PRETTY_FUNCTION__.4>
   10bd5:	48 89 c1             	mov    %rax,%rcx
   10bd8:	ba 6b 00 00 00       	mov    $0x6b,%edx
   10bdd:	48 8d 05 0c b9 00 00 	lea    0xb90c(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10be4:	48 89 c6             	mov    %rax,%rsi
   10be7:	48 8d 05 1e ba 00 00 	lea    0xba1e(%rip),%rax        # 1c60c <__PRETTY_FUNCTION__.0+0x13c>
   10bee:	48 89 c7             	mov    %rax,%rdi
   10bf1:	e8 da 17 ff ff       	call   23d0 <__assert_fail@plt>
   10bf6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10bfa:	48 8b 40 08          	mov    0x8(%rax),%rax
   10bfe:	48 89 c7             	mov    %rax,%rdi
   10c01:	e8 b7 1f 00 00       	call   12bbd <find_label>
   10c06:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10c0a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   10c11:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   10c15:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10c19:	48 89 ce             	mov    %rcx,%rsi
   10c1c:	48 89 c7             	mov    %rax,%rdi
   10c1f:	e8 e0 0b 00 00       	call   11804 <codegen_expr>
   10c24:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   10c28:	b8 00 00 00 00       	mov    $0x0,%eax
   10c2d:	e8 64 1e 00 00       	call   12a96 <get_reg_stack>
   10c32:	48 89 c7             	mov    %rax,%rdi
   10c35:	e8 d4 26 00 00       	call   1330e <front_reg_stack>
   10c3a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10c3e:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   10c43:	74 36                	je     10c7b <codegen_var_assignment+0x160>
   10c45:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10c49:	8b 08                	mov    (%rax),%ecx
   10c4b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c4f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10c53:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10c57:	41 89 c8             	mov    %ecx,%r8d
   10c5a:	48 89 d1             	mov    %rdx,%rcx
   10c5d:	48 8d 15 c6 b9 00 00 	lea    0xb9c6(%rip),%rdx        # 1c62a <__PRETTY_FUNCTION__.0+0x15a>
   10c64:	be 32 00 00 00       	mov    $0x32,%esi
   10c69:	48 89 c7             	mov    %rax,%rdi
   10c6c:	b8 00 00 00 00       	mov    $0x0,%eax
   10c71:	e8 3a 17 ff ff       	call   23b0 <snprintf@plt>
   10c76:	e9 b4 00 00 00       	jmp    10d2f <codegen_var_assignment+0x214>
   10c7b:	b8 00 00 00 00       	mov    $0x0,%eax
   10c80:	e8 fd 73 ff ff       	call   8082 <nonlocal_flag>
   10c85:	83 f8 01             	cmp    $0x1,%eax
   10c88:	75 55                	jne    10cdf <codegen_var_assignment+0x1c4>
   10c8a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10c8e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10c92:	48 8d 55 9c          	lea    -0x64(%rbp),%rdx
   10c96:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10c9a:	48 89 ce             	mov    %rcx,%rsi
   10c9d:	48 89 c7             	mov    %rax,%rdi
   10ca0:	e8 a8 11 00 00       	call   11e4d <codegen_get_nonlocal>
   10ca5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   10ca9:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
   10cac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10cb0:	48 8b 10             	mov    (%rax),%rdx
   10cb3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10cb7:	4c 8d 0d 82 b9 00 00 	lea    0xb982(%rip),%r9        # 1c640 <__PRETTY_FUNCTION__.0+0x170>
   10cbe:	41 89 c8             	mov    %ecx,%r8d
   10cc1:	48 89 d1             	mov    %rdx,%rcx
   10cc4:	48 8d 15 7a b9 00 00 	lea    0xb97a(%rip),%rdx        # 1c645 <__PRETTY_FUNCTION__.0+0x175>
   10ccb:	be 32 00 00 00       	mov    $0x32,%esi
   10cd0:	48 89 c7             	mov    %rax,%rdi
   10cd3:	b8 00 00 00 00       	mov    $0x0,%eax
   10cd8:	e8 d3 16 ff ff       	call   23b0 <snprintf@plt>
   10cdd:	eb 50                	jmp    10d2f <codegen_var_assignment+0x214>
   10cdf:	48 8b 05 7a 13 01 00 	mov    0x1137a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10ce6:	48 89 c1             	mov    %rax,%rcx
   10ce9:	ba 33 00 00 00       	mov    $0x33,%edx
   10cee:	be 01 00 00 00       	mov    $0x1,%esi
   10cf3:	48 8d 05 5e b9 00 00 	lea    0xb95e(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.0+0x188>
   10cfa:	48 89 c7             	mov    %rax,%rdi
   10cfd:	e8 4e 18 ff ff       	call   2550 <fwrite@plt>
   10d02:	48 8b 05 57 13 01 00 	mov    0x11357(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10d09:	48 89 c1             	mov    %rax,%rcx
   10d0c:	ba 33 00 00 00       	mov    $0x33,%edx
   10d11:	be 01 00 00 00       	mov    $0x1,%esi
   10d16:	48 8d 05 73 b9 00 00 	lea    0xb973(%rip),%rax        # 1c690 <__PRETTY_FUNCTION__.0+0x1c0>
   10d1d:	48 89 c7             	mov    %rax,%rdi
   10d20:	e8 2b 18 ff ff       	call   2550 <fwrite@plt>
   10d25:	bf 01 00 00 00       	mov    $0x1,%edi
   10d2a:	e8 11 18 ff ff       	call   2540 <exit@plt>
   10d2f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10d33:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10d37:	48 89 d6             	mov    %rdx,%rsi
   10d3a:	48 89 c7             	mov    %rax,%rdi
   10d3d:	e8 84 e7 ff ff       	call   f4c6 <add_inst>
   10d42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10d46:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10d4d:	00 00
   10d4f:	74 05                	je     10d56 <codegen_var_assignment+0x23b>
   10d51:	e8 4a 16 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10d56:	c9                   	leave
   10d57:	c3                   	ret

0000000000010d58 <codegen_proc_call>:
   10d58:	f3 0f 1e fa          	endbr64
   10d5c:	55                   	push   %rbp
   10d5d:	48 89 e5             	mov    %rsp,%rbp
   10d60:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10d64:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   10d68:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   10d6c:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   10d70:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   10d74:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10d7b:	00 00
   10d7d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10d81:	31 c0                	xor    %eax,%eax
   10d83:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   10d88:	75 28                	jne    10db2 <codegen_proc_call+0x5a>
   10d8a:	48 8d 05 1f ba 00 00 	lea    0xba1f(%rip),%rax        # 1c7b0 <__PRETTY_FUNCTION__.3>
   10d91:	48 89 c1             	mov    %rax,%rcx
   10d94:	ba 85 00 00 00       	mov    $0x85,%edx
   10d99:	48 8d 05 50 b7 00 00 	lea    0xb750(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10da0:	48 89 c6             	mov    %rax,%rsi
   10da3:	48 8d 05 7c b7 00 00 	lea    0xb77c(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10daa:	48 89 c7             	mov    %rax,%rdi
   10dad:	e8 1e 16 ff ff       	call   23d0 <__assert_fail@plt>
   10db2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10db6:	8b 40 04             	mov    0x4(%rax),%eax
   10db9:	83 f8 01             	cmp    $0x1,%eax
   10dbc:	74 28                	je     10de6 <codegen_proc_call+0x8e>
   10dbe:	48 8d 05 eb b9 00 00 	lea    0xb9eb(%rip),%rax        # 1c7b0 <__PRETTY_FUNCTION__.3>
   10dc5:	48 89 c1             	mov    %rax,%rcx
   10dc8:	ba 86 00 00 00       	mov    $0x86,%edx
   10dcd:	48 8d 05 1c b7 00 00 	lea    0xb71c(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10dd4:	48 89 c6             	mov    %rax,%rsi
   10dd7:	48 8d 05 ba b7 00 00 	lea    0xb7ba(%rip),%rax        # 1c598 <__PRETTY_FUNCTION__.0+0xc8>
   10dde:	48 89 c7             	mov    %rax,%rdi
   10de1:	e8 ea 15 ff ff       	call   23d0 <__assert_fail@plt>
   10de6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10dea:	48 8b 40 10          	mov    0x10(%rax),%rax
   10dee:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10df2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10df6:	48 8b 40 18          	mov    0x18(%rax),%rax
   10dfa:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10dfe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10e02:	48 8b 40 08          	mov    0x8(%rax),%rax
   10e06:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10e0a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10e0e:	48 8b 40 20          	mov    0x20(%rax),%rax
   10e12:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10e16:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10e1a:	48 85 c0             	test   %rax,%rax
   10e1d:	75 23                	jne    10e42 <codegen_proc_call+0xea>
   10e1f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   10e23:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   10e27:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10e2b:	48 89 ce             	mov    %rcx,%rsi
   10e2e:	48 89 c7             	mov    %rax,%rdi
   10e31:	e8 a5 b2 ff ff       	call   c0db <FindIdent>
   10e36:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   10e3a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10e3e:	48 89 50 20          	mov    %rdx,0x20(%rax)
   10e42:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10e46:	48 85 c0             	test   %rax,%rax
   10e49:	74 25                	je     10e70 <codegen_proc_call+0x118>
   10e4b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10e4f:	8b 40 10             	mov    0x10(%rax),%eax
   10e52:	83 f8 05             	cmp    $0x5,%eax
   10e55:	75 19                	jne    10e70 <codegen_proc_call+0x118>
   10e57:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10e5b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   10e5f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10e63:	48 89 ce             	mov    %rcx,%rsi
   10e66:	48 89 c7             	mov    %rax,%rdi
   10e69:	e8 ac fa ff ff       	call   1091a <codegen_builtin_proc>
   10e6e:	eb 7a                	jmp    10eea <codegen_proc_call+0x192>
   10e70:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   10e74:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10e78:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
   10e7c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10e80:	48 89 c7             	mov    %rax,%rdi
   10e83:	e8 f9 10 00 00       	call   11f81 <codegen_pass_arguments>
   10e88:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10e8c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10e90:	be 00 00 00 00       	mov    $0x0,%esi
   10e95:	48 89 c7             	mov    %rax,%rdi
   10e98:	e8 94 f1 ff ff       	call   10031 <codegen_vect_reg>
   10e9d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10ea1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   10ea5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10ea9:	48 89 d1             	mov    %rdx,%rcx
   10eac:	48 8d 15 07 b7 00 00 	lea    0xb707(%rip),%rdx        # 1c5ba <__PRETTY_FUNCTION__.0+0xea>
   10eb3:	be 32 00 00 00       	mov    $0x32,%esi
   10eb8:	48 89 c7             	mov    %rax,%rdi
   10ebb:	b8 00 00 00 00       	mov    $0x0,%eax
   10ec0:	e8 eb 14 ff ff       	call   23b0 <snprintf@plt>
   10ec5:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10ec9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10ecd:	48 89 d6             	mov    %rdx,%rsi
   10ed0:	48 89 c7             	mov    %rax,%rdi
   10ed3:	e8 ee e5 ff ff       	call   f4c6 <add_inst>
   10ed8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10edc:	b8 00 00 00 00       	mov    $0x0,%eax
   10ee1:	e8 ab 14 00 00       	call   12391 <free_arg_regs>
   10ee6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10eea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10eee:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10ef5:	00 00
   10ef7:	74 05                	je     10efe <codegen_proc_call+0x1a6>
   10ef9:	e8 a2 14 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10efe:	c9                   	leave
   10eff:	c3                   	ret

0000000000010f00 <codegen_if_then>:
   10f00:	f3 0f 1e fa          	endbr64
   10f04:	55                   	push   %rbp
   10f05:	48 89 e5             	mov    %rsp,%rbp
   10f08:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   10f0f:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   10f16:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   10f1d:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   10f24:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
   10f2b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10f32:	00 00
   10f34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10f38:	31 c0                	xor    %eax,%eax
   10f3a:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   10f41:	00
   10f42:	75 28                	jne    10f6c <codegen_if_then+0x6c>
   10f44:	48 8d 05 85 b8 00 00 	lea    0xb885(%rip),%rax        # 1c7d0 <__PRETTY_FUNCTION__.2>
   10f4b:	48 89 c1             	mov    %rax,%rcx
   10f4e:	ba aa 00 00 00       	mov    $0xaa,%edx
   10f53:	48 8d 05 96 b5 00 00 	lea    0xb596(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10f5a:	48 89 c6             	mov    %rax,%rsi
   10f5d:	48 8d 05 c2 b5 00 00 	lea    0xb5c2(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10f64:	48 89 c7             	mov    %rax,%rdi
   10f67:	e8 64 14 ff ff       	call   23d0 <__assert_fail@plt>
   10f6c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10f73:	8b 40 04             	mov    0x4(%rax),%eax
   10f76:	83 f8 03             	cmp    $0x3,%eax
   10f79:	74 28                	je     10fa3 <codegen_if_then+0xa3>
   10f7b:	48 8d 05 4e b8 00 00 	lea    0xb84e(%rip),%rax        # 1c7d0 <__PRETTY_FUNCTION__.2>
   10f82:	48 89 c1             	mov    %rax,%rcx
   10f85:	ba ab 00 00 00       	mov    $0xab,%edx
   10f8a:	48 8d 05 5f b5 00 00 	lea    0xb55f(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10f91:	48 89 c6             	mov    %rax,%rsi
   10f94:	48 8d 05 29 b7 00 00 	lea    0xb729(%rip),%rax        # 1c6c4 <__PRETTY_FUNCTION__.0+0x1f4>
   10f9b:	48 89 c7             	mov    %rax,%rdi
   10f9e:	e8 2d 14 ff ff       	call   23d0 <__assert_fail@plt>
   10fa3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10faa:	48 8b 40 08          	mov    0x8(%rax),%rax
   10fae:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   10fb5:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
   10fbc:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10fc3:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   10fca:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10fd1:	48 89 c7             	mov    %rax,%rdi
   10fd4:	e8 61 0c 00 00       	call   11c3a <codegen_simple_relop>
   10fd9:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   10fe0:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10fe7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10feb:	be 12 00 00 00       	mov    $0x12,%esi
   10ff0:	48 89 c7             	mov    %rax,%rdi
   10ff3:	e8 7f e4 ff ff       	call   f477 <gen_label>
   10ff8:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10fff:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11003:	be 12 00 00 00       	mov    $0x12,%esi
   11008:	48 89 c7             	mov    %rax,%rdi
   1100b:	e8 67 e4 ff ff       	call   f477 <gen_label>
   11010:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11017:	48 8b 40 10          	mov    0x10(%rax),%rax
   1101b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11022:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11029:	48 8b 40 18          	mov    0x18(%rax),%rax
   1102d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11034:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
   1103b:	00 00 00
   1103e:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   11044:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1104b:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   1104f:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
   11055:	89 c7                	mov    %eax,%edi
   11057:	e8 11 e5 ff ff       	call   f56d <gencode_jmp>
   1105c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11063:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1106a:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11071:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   11078:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1107f:	48 89 c7             	mov    %rax,%rdi
   11082:	e8 06 f7 ff ff       	call   1078d <codegen_stmt>
   11087:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1108e:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   11095:	00
   11096:	75 46                	jne    110de <codegen_if_then+0x1de>
   11098:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   1109c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   110a0:	48 89 d1             	mov    %rdx,%rcx
   110a3:	48 8d 15 35 b6 00 00 	lea    0xb635(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   110aa:	be 32 00 00 00       	mov    $0x32,%esi
   110af:	48 89 c7             	mov    %rax,%rdi
   110b2:	b8 00 00 00 00       	mov    $0x0,%eax
   110b7:	e8 f4 12 ff ff       	call   23b0 <snprintf@plt>
   110bc:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   110c0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   110c7:	48 89 d6             	mov    %rdx,%rsi
   110ca:	48 89 c7             	mov    %rax,%rdi
   110cd:	e8 f4 e3 ff ff       	call   f4c6 <add_inst>
   110d2:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   110d9:	e9 db 00 00 00       	jmp    111b9 <codegen_if_then+0x2b9>
   110de:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   110e5:	00 00 00
   110e8:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   110ef:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   110f3:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
   110f9:	89 c6                	mov    %eax,%esi
   110fb:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11100:	e8 68 e4 ff ff       	call   f56d <gencode_jmp>
   11105:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1110c:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11110:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11114:	48 89 d1             	mov    %rdx,%rcx
   11117:	48 8d 15 c1 b5 00 00 	lea    0xb5c1(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   1111e:	be 32 00 00 00       	mov    $0x32,%esi
   11123:	48 89 c7             	mov    %rax,%rdi
   11126:	b8 00 00 00 00       	mov    $0x0,%eax
   1112b:	e8 80 12 ff ff       	call   23b0 <snprintf@plt>
   11130:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11134:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1113b:	48 89 d6             	mov    %rdx,%rsi
   1113e:	48 89 c7             	mov    %rax,%rdi
   11141:	e8 80 e3 ff ff       	call   f4c6 <add_inst>
   11146:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1114d:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   11154:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1115b:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   11162:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11169:	48 89 c7             	mov    %rax,%rdi
   1116c:	e8 1c f6 ff ff       	call   1078d <codegen_stmt>
   11171:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11178:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1117c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11180:	48 89 d1             	mov    %rdx,%rcx
   11183:	48 8d 15 55 b5 00 00 	lea    0xb555(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   1118a:	be 32 00 00 00       	mov    $0x32,%esi
   1118f:	48 89 c7             	mov    %rax,%rdi
   11192:	b8 00 00 00 00       	mov    $0x0,%eax
   11197:	e8 14 12 ff ff       	call   23b0 <snprintf@plt>
   1119c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   111a0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   111a7:	48 89 d6             	mov    %rdx,%rsi
   111aa:	48 89 c7             	mov    %rax,%rdi
   111ad:	e8 14 e3 ff ff       	call   f4c6 <add_inst>
   111b2:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   111b9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   111c0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   111c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   111cb:	00 00
   111cd:	74 05                	je     111d4 <codegen_if_then+0x2d4>
   111cf:	e8 cc 11 ff ff       	call   23a0 <__stack_chk_fail@plt>
   111d4:	c9                   	leave
   111d5:	c3                   	ret

00000000000111d6 <codegen_while>:
   111d6:	f3 0f 1e fa          	endbr64
   111da:	55                   	push   %rbp
   111db:	48 89 e5             	mov    %rsp,%rbp
   111de:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   111e5:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   111ec:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   111f3:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   111fa:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
   11201:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11208:	00 00
   1120a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1120e:	31 c0                	xor    %eax,%eax
   11210:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   11217:	00
   11218:	75 28                	jne    11242 <codegen_while+0x6c>
   1121a:	48 8d 05 bf b5 00 00 	lea    0xb5bf(%rip),%rax        # 1c7e0 <__PRETTY_FUNCTION__.1>
   11221:	48 89 c1             	mov    %rax,%rcx
   11224:	ba d3 00 00 00       	mov    $0xd3,%edx
   11229:	48 8d 05 c0 b2 00 00 	lea    0xb2c0(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11230:	48 89 c6             	mov    %rax,%rsi
   11233:	48 8d 05 ec b2 00 00 	lea    0xb2ec(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   1123a:	48 89 c7             	mov    %rax,%rdi
   1123d:	e8 8e 11 ff ff       	call   23d0 <__assert_fail@plt>
   11242:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11249:	8b 40 04             	mov    0x4(%rax),%eax
   1124c:	83 f8 04             	cmp    $0x4,%eax
   1124f:	74 28                	je     11279 <codegen_while+0xa3>
   11251:	48 8d 05 88 b5 00 00 	lea    0xb588(%rip),%rax        # 1c7e0 <__PRETTY_FUNCTION__.1>
   11258:	48 89 c1             	mov    %rax,%rcx
   1125b:	ba d4 00 00 00       	mov    $0xd4,%edx
   11260:	48 8d 05 89 b2 00 00 	lea    0xb289(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11267:	48 89 c6             	mov    %rax,%rsi
   1126a:	48 8d 05 73 b4 00 00 	lea    0xb473(%rip),%rax        # 1c6e4 <__PRETTY_FUNCTION__.0+0x214>
   11271:	48 89 c7             	mov    %rax,%rdi
   11274:	e8 57 11 ff ff       	call   23d0 <__assert_fail@plt>
   11279:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11280:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11284:	be 12 00 00 00       	mov    $0x12,%esi
   11289:	48 89 c7             	mov    %rax,%rdi
   1128c:	e8 e6 e1 ff ff       	call   f477 <gen_label>
   11291:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11298:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1129c:	be 12 00 00 00       	mov    $0x12,%esi
   112a1:	48 89 c7             	mov    %rax,%rdi
   112a4:	e8 ce e1 ff ff       	call   f477 <gen_label>
   112a9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   112b0:	48 8b 40 10          	mov    0x10(%rax),%rax
   112b4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   112bb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   112c2:	48 8b 40 08          	mov    0x8(%rax),%rax
   112c6:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   112cd:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   112d4:	00 00 00
   112d7:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   112de:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   112e2:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   112e8:	89 c6                	mov    %eax,%esi
   112ea:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   112ef:	e8 79 e2 ff ff       	call   f56d <gencode_jmp>
   112f4:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   112fb:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   112ff:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11303:	48 89 d1             	mov    %rdx,%rcx
   11306:	48 8d 15 d2 b3 00 00 	lea    0xb3d2(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   1130d:	be 32 00 00 00       	mov    $0x32,%esi
   11312:	48 89 c7             	mov    %rax,%rdi
   11315:	b8 00 00 00 00       	mov    $0x0,%eax
   1131a:	e8 91 10 ff ff       	call   23b0 <snprintf@plt>
   1131f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11323:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1132a:	48 89 d6             	mov    %rdx,%rsi
   1132d:	48 89 c7             	mov    %rax,%rdi
   11330:	e8 91 e1 ff ff       	call   f4c6 <add_inst>
   11335:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1133c:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   11343:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1134a:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   11351:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11358:	48 89 c7             	mov    %rax,%rdi
   1135b:	e8 2d f4 ff ff       	call   1078d <codegen_stmt>
   11360:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11367:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   1136b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1136f:	48 89 d1             	mov    %rdx,%rcx
   11372:	48 8d 15 66 b3 00 00 	lea    0xb366(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11379:	be 32 00 00 00       	mov    $0x32,%esi
   1137e:	48 89 c7             	mov    %rax,%rdi
   11381:	b8 00 00 00 00       	mov    $0x0,%eax
   11386:	e8 25 10 ff ff       	call   23b0 <snprintf@plt>
   1138b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1138f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11396:	48 89 d6             	mov    %rdx,%rsi
   11399:	48 89 c7             	mov    %rax,%rdi
   1139c:	e8 25 e1 ff ff       	call   f4c6 <add_inst>
   113a1:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   113a8:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   113af:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   113b6:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   113bd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   113c4:	48 89 c7             	mov    %rax,%rdi
   113c7:	e8 6e 08 00 00       	call   11c3a <codegen_simple_relop>
   113cc:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   113d3:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   113da:	00 00 00
   113dd:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   113e3:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   113ea:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   113ee:	8b b5 6c ff ff ff    	mov    -0x94(%rbp),%esi
   113f4:	89 c7                	mov    %eax,%edi
   113f6:	e8 72 e1 ff ff       	call   f56d <gencode_jmp>
   113fb:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11402:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11409:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1140d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11414:	00 00
   11416:	74 05                	je     1141d <codegen_while+0x247>
   11418:	e8 83 0f ff ff       	call   23a0 <__stack_chk_fail@plt>
   1141d:	c9                   	leave
   1141e:	c3                   	ret

000000000001141f <codegen_for>:
   1141f:	f3 0f 1e fa          	endbr64
   11423:	55                   	push   %rbp
   11424:	48 89 e5             	mov    %rsp,%rbp
   11427:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   1142e:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   11435:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   1143c:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   11443:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   1144a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11451:	00 00
   11453:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11457:	31 c0                	xor    %eax,%eax
   11459:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   11460:	00
   11461:	75 28                	jne    1148b <codegen_for+0x6c>
   11463:	48 8d 05 86 b3 00 00 	lea    0xb386(%rip),%rax        # 1c7f0 <__PRETTY_FUNCTION__.0>
   1146a:	48 89 c1             	mov    %rax,%rcx
   1146d:	ba f4 00 00 00       	mov    $0xf4,%edx
   11472:	48 8d 05 77 b0 00 00 	lea    0xb077(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11479:	48 89 c6             	mov    %rax,%rsi
   1147c:	48 8d 05 a3 b0 00 00 	lea    0xb0a3(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   11483:	48 89 c7             	mov    %rax,%rdi
   11486:	e8 45 0f ff ff       	call   23d0 <__assert_fail@plt>
   1148b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11492:	8b 40 04             	mov    0x4(%rax),%eax
   11495:	83 f8 05             	cmp    $0x5,%eax
   11498:	74 28                	je     114c2 <codegen_for+0xa3>
   1149a:	48 8d 05 4f b3 00 00 	lea    0xb34f(%rip),%rax        # 1c7f0 <__PRETTY_FUNCTION__.0>
   114a1:	48 89 c1             	mov    %rax,%rcx
   114a4:	ba f5 00 00 00       	mov    $0xf5,%edx
   114a9:	48 8d 05 40 b0 00 00 	lea    0xb040(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   114b0:	48 89 c6             	mov    %rax,%rsi
   114b3:	48 8d 05 43 b2 00 00 	lea    0xb243(%rip),%rax        # 1c6fd <__PRETTY_FUNCTION__.0+0x22d>
   114ba:	48 89 c7             	mov    %rax,%rdi
   114bd:	e8 0e 0f ff ff       	call   23d0 <__assert_fail@plt>
   114c2:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   114c9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   114cd:	be 12 00 00 00       	mov    $0x12,%esi
   114d2:	48 89 c7             	mov    %rax,%rdi
   114d5:	e8 9d df ff ff       	call   f477 <gen_label>
   114da:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   114e1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   114e5:	be 12 00 00 00       	mov    $0x12,%esi
   114ea:	48 89 c7             	mov    %rax,%rdi
   114ed:	e8 85 df ff ff       	call   f477 <gen_label>
   114f2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   114f9:	48 8b 40 18          	mov    0x18(%rax),%rax
   114fd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   11504:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1150b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1150f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11516:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1151d:	8b 40 08             	mov    0x8(%rax),%eax
   11520:	83 f8 07             	cmp    $0x7,%eax
   11523:	75 51                	jne    11576 <codegen_for+0x157>
   11525:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1152c:	48 8b 40 20          	mov    0x20(%rax),%rax
   11530:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   11537:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1153e:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11545:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1154c:	48 89 ce             	mov    %rcx,%rsi
   1154f:	48 89 c7             	mov    %rax,%rdi
   11552:	e8 c4 f5 ff ff       	call   10b1b <codegen_var_assignment>
   11557:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1155e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11565:	48 8b 40 20          	mov    0x20(%rax),%rax
   11569:	48 8b 40 08          	mov    0x8(%rax),%rax
   1156d:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   11574:	eb 12                	jmp    11588 <codegen_for+0x169>
   11576:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1157d:	48 8b 40 20          	mov    0x20(%rax),%rax
   11581:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   11588:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1158f:	8b 40 04             	mov    0x4(%rax),%eax
   11592:	83 f8 04             	cmp    $0x4,%eax
   11595:	74 28                	je     115bf <codegen_for+0x1a0>
   11597:	48 8d 05 52 b2 00 00 	lea    0xb252(%rip),%rax        # 1c7f0 <__PRETTY_FUNCTION__.0>
   1159e:	48 89 c1             	mov    %rax,%rcx
   115a1:	ba 0c 01 00 00       	mov    $0x10c,%edx
   115a6:	48 8d 05 43 af 00 00 	lea    0xaf43(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   115ad:	48 89 c6             	mov    %rax,%rsi
   115b0:	48 8d 05 5d b1 00 00 	lea    0xb15d(%rip),%rax        # 1c714 <__PRETTY_FUNCTION__.0+0x244>
   115b7:	48 89 c7             	mov    %rax,%rdi
   115ba:	e8 11 0e ff ff       	call   23d0 <__assert_fail@plt>
   115bf:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   115c6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   115cd:	48 89 d1             	mov    %rdx,%rcx
   115d0:	48 89 c2             	mov    %rax,%rdx
   115d3:	be 29 01 00 00       	mov    $0x129,%esi
   115d8:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   115dd:	e8 53 8d ff ff       	call   a335 <mk_relop>
   115e2:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   115e9:	be 01 00 00 00       	mov    $0x1,%esi
   115ee:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   115f3:	e8 a5 8f ff ff       	call   a59d <mk_inum>
   115f8:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   115ff:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11606:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1160d:	48 89 d1             	mov    %rdx,%rcx
   11610:	48 89 c2             	mov    %rax,%rdx
   11613:	be 2e 01 00 00       	mov    $0x12e,%esi
   11618:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1161d:	e8 be 8d ff ff       	call   a3e0 <mk_addop>
   11622:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11629:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11630:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11637:	48 89 c6             	mov    %rax,%rsi
   1163a:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1163f:	e8 13 8a ff ff       	call   a057 <mk_varassign>
   11644:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1164b:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   11652:	00 00 00
   11655:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   1165c:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11660:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   11666:	89 c6                	mov    %eax,%esi
   11668:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1166d:	e8 fb de ff ff       	call   f56d <gencode_jmp>
   11672:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11679:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1167d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11681:	48 89 d1             	mov    %rdx,%rcx
   11684:	48 8d 15 54 b0 00 00 	lea    0xb054(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   1168b:	be 32 00 00 00       	mov    $0x32,%esi
   11690:	48 89 c7             	mov    %rax,%rdi
   11693:	b8 00 00 00 00       	mov    $0x0,%eax
   11698:	e8 13 0d ff ff       	call   23b0 <snprintf@plt>
   1169d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   116a1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   116a8:	48 89 d6             	mov    %rdx,%rsi
   116ab:	48 89 c7             	mov    %rax,%rdi
   116ae:	e8 13 de ff ff       	call   f4c6 <add_inst>
   116b3:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   116ba:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   116c1:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   116c8:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   116cf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   116d6:	48 89 c7             	mov    %rax,%rdi
   116d9:	e8 af f0 ff ff       	call   1078d <codegen_stmt>
   116de:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   116e5:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   116ec:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   116f3:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   116fa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11701:	48 89 c7             	mov    %rax,%rdi
   11704:	e8 84 f0 ff ff       	call   1078d <codegen_stmt>
   11709:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11710:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11714:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11718:	48 89 d1             	mov    %rdx,%rcx
   1171b:	48 8d 15 bd af 00 00 	lea    0xafbd(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11722:	be 32 00 00 00       	mov    $0x32,%esi
   11727:	48 89 c7             	mov    %rax,%rdi
   1172a:	b8 00 00 00 00       	mov    $0x0,%eax
   1172f:	e8 7c 0c ff ff       	call   23b0 <snprintf@plt>
   11734:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11738:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1173f:	48 89 d6             	mov    %rdx,%rsi
   11742:	48 89 c7             	mov    %rax,%rdi
   11745:	e8 7c dd ff ff       	call   f4c6 <add_inst>
   1174a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11751:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   11758:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1175f:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   11766:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1176d:	48 89 c7             	mov    %rax,%rdi
   11770:	e8 c5 04 00 00       	call   11c3a <codegen_simple_relop>
   11775:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1177c:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   11783:	00 00 00
   11786:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   1178c:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11793:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11797:	8b b5 3c ff ff ff    	mov    -0xc4(%rbp),%esi
   1179d:	89 c7                	mov    %eax,%edi
   1179f:	e8 c9 dd ff ff       	call   f56d <gencode_jmp>
   117a4:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   117ab:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   117b2:	48 89 c7             	mov    %rax,%rdi
   117b5:	e8 36 0b ff ff       	call   22f0 <free@plt>
   117ba:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   117c1:	48 89 c7             	mov    %rax,%rdi
   117c4:	e8 27 0b ff ff       	call   22f0 <free@plt>
   117c9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   117d0:	48 89 c7             	mov    %rax,%rdi
   117d3:	e8 18 0b ff ff       	call   22f0 <free@plt>
   117d8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   117df:	48 89 c7             	mov    %rax,%rdi
   117e2:	e8 09 0b ff ff       	call   22f0 <free@plt>
   117e7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   117ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   117f2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   117f9:	00 00
   117fb:	74 05                	je     11802 <codegen_for+0x3e3>
   117fd:	e8 9e 0b ff ff       	call   23a0 <__stack_chk_fail@plt>
   11802:	c9                   	leave
   11803:	c3                   	ret

0000000000011804 <codegen_expr>:
   11804:	f3 0f 1e fa          	endbr64
   11808:	55                   	push   %rbp
   11809:	48 89 e5             	mov    %rsp,%rbp
   1180c:	48 83 ec 30          	sub    $0x30,%rsp
   11810:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11814:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11818:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1181c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   11821:	75 28                	jne    1184b <codegen_expr+0x47>
   11823:	48 8d 05 ee b3 00 00 	lea    0xb3ee(%rip),%rax        # 1cc18 <__PRETTY_FUNCTION__.2>
   1182a:	48 89 c1             	mov    %rax,%rcx
   1182d:	ba 1a 00 00 00       	mov    $0x1a,%edx
   11832:	48 8d 05 c7 af 00 00 	lea    0xafc7(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   11839:	48 89 c6             	mov    %rax,%rsi
   1183c:	48 8d 05 f4 af 00 00 	lea    0xaff4(%rip),%rax        # 1c837 <__PRETTY_FUNCTION__.0+0x47>
   11843:	48 89 c7             	mov    %rax,%rdi
   11846:	e8 85 0b ff ff       	call   23d0 <__assert_fail@plt>
   1184b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   11852:	00
   11853:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11857:	8b 50 04             	mov    0x4(%rax),%edx
   1185a:	48 8b 05 ff 07 01 00 	mov    0x107ff(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11861:	48 8d 0d e0 af 00 00 	lea    0xafe0(%rip),%rcx        # 1c848 <__PRETTY_FUNCTION__.0+0x58>
   11868:	48 89 ce             	mov    %rcx,%rsi
   1186b:	48 89 c7             	mov    %rax,%rdi
   1186e:	b8 00 00 00 00       	mov    $0x0,%eax
   11873:	e8 f8 0b ff ff       	call   2470 <fprintf@plt>
   11878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1187c:	8b 40 04             	mov    0x4(%rax),%eax
   1187f:	83 f8 07             	cmp    $0x7,%eax
   11882:	0f 87 81 03 00 00    	ja     11c09 <codegen_expr+0x405>
   11888:	89 c0                	mov    %eax,%eax
   1188a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11891:	00
   11892:	48 8d 05 17 b1 00 00 	lea    0xb117(%rip),%rax        # 1c9b0 <__PRETTY_FUNCTION__.0+0x1c0>
   11899:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1189c:	48 98                	cltq
   1189e:	48 8d 15 0b b1 00 00 	lea    0xb10b(%rip),%rdx        # 1c9b0 <__PRETTY_FUNCTION__.0+0x1c0>
   118a5:	48 01 d0             	add    %rdx,%rax
   118a8:	3e ff e0             	notrack jmp *%rax
   118ab:	48 8b 05 ae 07 01 00 	mov    0x107ae(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   118b2:	48 89 c1             	mov    %rax,%rcx
   118b5:	ba 29 00 00 00       	mov    $0x29,%edx
   118ba:	be 01 00 00 00       	mov    $0x1,%esi
   118bf:	48 8d 05 b2 af 00 00 	lea    0xafb2(%rip),%rax        # 1c878 <__PRETTY_FUNCTION__.0+0x88>
   118c6:	48 89 c7             	mov    %rax,%rdi
   118c9:	e8 82 0c ff ff       	call   2550 <fwrite@plt>
   118ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118d2:	48 89 c7             	mov    %rax,%rdi
   118d5:	e8 ba 20 00 00       	call   13994 <build_expr_tree>
   118da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   118de:	b8 00 00 00 00       	mov    $0x0,%eax
   118e3:	e8 ae 11 00 00       	call   12a96 <get_reg_stack>
   118e8:	48 89 c2             	mov    %rax,%rdx
   118eb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   118ef:	48 89 c6             	mov    %rax,%rsi
   118f2:	48 89 d7             	mov    %rdx,%rdi
   118f5:	e8 60 1a 00 00       	call   1335a <get_free_reg>
   118fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   118fe:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11902:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11906:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1190a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1190e:	48 89 c7             	mov    %rax,%rdi
   11911:	e8 63 23 00 00       	call   13c79 <gencode_expr_tree>
   11916:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1191a:	b8 00 00 00 00       	mov    $0x0,%eax
   1191f:	e8 72 11 00 00       	call   12a96 <get_reg_stack>
   11924:	48 89 c2             	mov    %rax,%rdx
   11927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1192b:	48 89 c6             	mov    %rax,%rsi
   1192e:	48 89 d7             	mov    %rdx,%rdi
   11931:	e8 c7 17 00 00       	call   130fd <free_reg>
   11936:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1193a:	48 89 c7             	mov    %rax,%rdi
   1193d:	e8 cd 29 00 00       	call   1430f <free_expr_tree>
   11942:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11946:	e9 ed 02 00 00       	jmp    11c38 <codegen_expr+0x434>
   1194b:	48 8b 05 0e 07 01 00 	mov    0x1070e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11952:	48 89 c1             	mov    %rax,%rcx
   11955:	ba 23 00 00 00       	mov    $0x23,%edx
   1195a:	be 01 00 00 00       	mov    $0x1,%esi
   1195f:	48 8d 05 42 af 00 00 	lea    0xaf42(%rip),%rax        # 1c8a8 <__PRETTY_FUNCTION__.0+0xb8>
   11966:	48 89 c7             	mov    %rax,%rdi
   11969:	e8 e2 0b ff ff       	call   2550 <fwrite@plt>
   1196e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11972:	48 89 c7             	mov    %rax,%rdi
   11975:	e8 1a 20 00 00       	call   13994 <build_expr_tree>
   1197a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1197e:	b8 00 00 00 00       	mov    $0x0,%eax
   11983:	e8 0e 11 00 00       	call   12a96 <get_reg_stack>
   11988:	48 89 c2             	mov    %rax,%rdx
   1198b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1198f:	48 89 c6             	mov    %rax,%rsi
   11992:	48 89 d7             	mov    %rdx,%rdi
   11995:	e8 c0 19 00 00       	call   1335a <get_free_reg>
   1199a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1199e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   119a2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   119a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   119aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   119ae:	48 89 c7             	mov    %rax,%rdi
   119b1:	e8 c3 22 00 00       	call   13c79 <gencode_expr_tree>
   119b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   119ba:	b8 00 00 00 00       	mov    $0x0,%eax
   119bf:	e8 d2 10 00 00       	call   12a96 <get_reg_stack>
   119c4:	48 89 c2             	mov    %rax,%rdx
   119c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119cb:	48 89 c6             	mov    %rax,%rsi
   119ce:	48 89 d7             	mov    %rdx,%rdi
   119d1:	e8 27 17 00 00       	call   130fd <free_reg>
   119d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   119da:	48 89 c7             	mov    %rax,%rdi
   119dd:	e8 2d 29 00 00       	call   1430f <free_expr_tree>
   119e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119e6:	e9 4d 02 00 00       	jmp    11c38 <codegen_expr+0x434>
   119eb:	48 8b 05 6e 06 01 00 	mov    0x1066e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   119f2:	48 89 c1             	mov    %rax,%rcx
   119f5:	ba 2e 00 00 00       	mov    $0x2e,%edx
   119fa:	be 01 00 00 00       	mov    $0x1,%esi
   119ff:	48 8d 05 ca ae 00 00 	lea    0xaeca(%rip),%rax        # 1c8d0 <__PRETTY_FUNCTION__.0+0xe0>
   11a06:	48 89 c7             	mov    %rax,%rdi
   11a09:	e8 42 0b ff ff       	call   2550 <fwrite@plt>
   11a0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a12:	48 89 c7             	mov    %rax,%rdi
   11a15:	e8 7a 1f 00 00       	call   13994 <build_expr_tree>
   11a1a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11a1e:	b8 00 00 00 00       	mov    $0x0,%eax
   11a23:	e8 6e 10 00 00       	call   12a96 <get_reg_stack>
   11a28:	48 89 c2             	mov    %rax,%rdx
   11a2b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11a2f:	48 89 c6             	mov    %rax,%rsi
   11a32:	48 89 d7             	mov    %rdx,%rdi
   11a35:	e8 20 19 00 00       	call   1335a <get_free_reg>
   11a3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a3e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11a42:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11a46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11a4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a4e:	48 89 c7             	mov    %rax,%rdi
   11a51:	e8 23 22 00 00       	call   13c79 <gencode_expr_tree>
   11a56:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11a5a:	b8 00 00 00 00       	mov    $0x0,%eax
   11a5f:	e8 32 10 00 00       	call   12a96 <get_reg_stack>
   11a64:	48 89 c2             	mov    %rax,%rdx
   11a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a6b:	48 89 c6             	mov    %rax,%rsi
   11a6e:	48 89 d7             	mov    %rdx,%rdi
   11a71:	e8 87 16 00 00       	call   130fd <free_reg>
   11a76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a7a:	48 89 c7             	mov    %rax,%rdi
   11a7d:	e8 8d 28 00 00       	call   1430f <free_expr_tree>
   11a82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a86:	e9 ad 01 00 00       	jmp    11c38 <codegen_expr+0x434>
   11a8b:	48 8b 05 ce 05 01 00 	mov    0x105ce(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11a92:	48 89 c1             	mov    %rax,%rcx
   11a95:	ba 31 00 00 00       	mov    $0x31,%edx
   11a9a:	be 01 00 00 00       	mov    $0x1,%esi
   11a9f:	48 8d 05 5a ae 00 00 	lea    0xae5a(%rip),%rax        # 1c900 <__PRETTY_FUNCTION__.0+0x110>
   11aa6:	48 89 c7             	mov    %rax,%rdi
   11aa9:	e8 a2 0a ff ff       	call   2550 <fwrite@plt>
   11aae:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11ab2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11ab6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11aba:	b9 00 00 00 00       	mov    $0x0,%ecx
   11abf:	48 89 c7             	mov    %rax,%rdi
   11ac2:	e8 73 01 00 00       	call   11c3a <codegen_simple_relop>
   11ac7:	e9 6c 01 00 00       	jmp    11c38 <codegen_expr+0x434>
   11acc:	48 8b 05 8d 05 01 00 	mov    0x1058d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11ad3:	48 89 c1             	mov    %rax,%rcx
   11ad6:	ba 23 00 00 00       	mov    $0x23,%edx
   11adb:	be 01 00 00 00       	mov    $0x1,%esi
   11ae0:	48 8d 05 51 ae 00 00 	lea    0xae51(%rip),%rax        # 1c938 <__PRETTY_FUNCTION__.0+0x148>
   11ae7:	48 89 c7             	mov    %rax,%rdi
   11aea:	e8 61 0a ff ff       	call   2550 <fwrite@plt>
   11aef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11af3:	48 89 c7             	mov    %rax,%rdi
   11af6:	e8 99 1e 00 00       	call   13994 <build_expr_tree>
   11afb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11aff:	b8 00 00 00 00       	mov    $0x0,%eax
   11b04:	e8 8d 0f 00 00       	call   12a96 <get_reg_stack>
   11b09:	48 89 c2             	mov    %rax,%rdx
   11b0c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11b10:	48 89 c6             	mov    %rax,%rsi
   11b13:	48 89 d7             	mov    %rdx,%rdi
   11b16:	e8 3f 18 00 00       	call   1335a <get_free_reg>
   11b1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11b1f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11b23:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11b27:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11b2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b2f:	48 89 c7             	mov    %rax,%rdi
   11b32:	e8 42 21 00 00       	call   13c79 <gencode_expr_tree>
   11b37:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11b3b:	b8 00 00 00 00       	mov    $0x0,%eax
   11b40:	e8 51 0f 00 00       	call   12a96 <get_reg_stack>
   11b45:	48 89 c2             	mov    %rax,%rdx
   11b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b4c:	48 89 c6             	mov    %rax,%rsi
   11b4f:	48 89 d7             	mov    %rdx,%rdi
   11b52:	e8 a6 15 00 00       	call   130fd <free_reg>
   11b57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b5b:	48 89 c7             	mov    %rax,%rdi
   11b5e:	e8 ac 27 00 00       	call   1430f <free_expr_tree>
   11b63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b67:	e9 cc 00 00 00       	jmp    11c38 <codegen_expr+0x434>
   11b6c:	48 8b 05 ed 04 01 00 	mov    0x104ed(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11b73:	48 89 c1             	mov    %rax,%rcx
   11b76:	ba 27 00 00 00       	mov    $0x27,%edx
   11b7b:	be 01 00 00 00       	mov    $0x1,%esi
   11b80:	48 8d 05 d9 ad 00 00 	lea    0xadd9(%rip),%rax        # 1c960 <__PRETTY_FUNCTION__.0+0x170>
   11b87:	48 89 c7             	mov    %rax,%rdi
   11b8a:	e8 c1 09 ff ff       	call   2550 <fwrite@plt>
   11b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b93:	48 89 c7             	mov    %rax,%rdi
   11b96:	e8 f9 1d 00 00       	call   13994 <build_expr_tree>
   11b9b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11b9f:	b8 00 00 00 00       	mov    $0x0,%eax
   11ba4:	e8 ed 0e 00 00       	call   12a96 <get_reg_stack>
   11ba9:	48 89 c2             	mov    %rax,%rdx
   11bac:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11bb0:	48 89 c6             	mov    %rax,%rsi
   11bb3:	48 89 d7             	mov    %rdx,%rdi
   11bb6:	e8 9f 17 00 00       	call   1335a <get_free_reg>
   11bbb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11bbf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11bc3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11bc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11bcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11bcf:	48 89 c7             	mov    %rax,%rdi
   11bd2:	e8 a2 20 00 00       	call   13c79 <gencode_expr_tree>
   11bd7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11bdb:	b8 00 00 00 00       	mov    $0x0,%eax
   11be0:	e8 b1 0e 00 00       	call   12a96 <get_reg_stack>
   11be5:	48 89 c2             	mov    %rax,%rdx
   11be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bec:	48 89 c6             	mov    %rax,%rsi
   11bef:	48 89 d7             	mov    %rdx,%rdi
   11bf2:	e8 06 15 00 00       	call   130fd <free_reg>
   11bf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11bfb:	48 89 c7             	mov    %rax,%rdi
   11bfe:	e8 0c 27 00 00       	call   1430f <free_expr_tree>
   11c03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11c07:	eb 2f                	jmp    11c38 <codegen_expr+0x434>
   11c09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c0d:	8b 50 04             	mov    0x4(%rax),%edx
   11c10:	48 8b 05 49 04 01 00 	mov    0x10449(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11c17:	48 8d 0d 6a ad 00 00 	lea    0xad6a(%rip),%rcx        # 1c988 <__PRETTY_FUNCTION__.0+0x198>
   11c1e:	48 89 ce             	mov    %rcx,%rsi
   11c21:	48 89 c7             	mov    %rax,%rdi
   11c24:	b8 00 00 00 00       	mov    $0x0,%eax
   11c29:	e8 42 08 ff ff       	call   2470 <fprintf@plt>
   11c2e:	bf 01 00 00 00       	mov    $0x1,%edi
   11c33:	e8 08 09 ff ff       	call   2540 <exit@plt>
   11c38:	c9                   	leave
   11c39:	c3                   	ret

0000000000011c3a <codegen_simple_relop>:
   11c3a:	f3 0f 1e fa          	endbr64
   11c3e:	55                   	push   %rbp
   11c3f:	48 89 e5             	mov    %rsp,%rbp
   11c42:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11c49:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11c50:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11c57:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   11c5e:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   11c65:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11c6c:	00 00
   11c6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11c72:	31 c0                	xor    %eax,%eax
   11c74:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   11c7b:	00
   11c7c:	75 28                	jne    11ca6 <codegen_simple_relop+0x6c>
   11c7e:	48 8d 05 ab af 00 00 	lea    0xafab(%rip),%rax        # 1cc30 <__PRETTY_FUNCTION__.1>
   11c85:	48 89 c1             	mov    %rax,%rcx
   11c88:	ba 57 00 00 00       	mov    $0x57,%edx
   11c8d:	48 8d 05 6c ab 00 00 	lea    0xab6c(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   11c94:	48 89 c6             	mov    %rax,%rsi
   11c97:	48 8d 05 99 ab 00 00 	lea    0xab99(%rip),%rax        # 1c837 <__PRETTY_FUNCTION__.0+0x47>
   11c9e:	48 89 c7             	mov    %rax,%rdi
   11ca1:	e8 2a 07 ff ff       	call   23d0 <__assert_fail@plt>
   11ca6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11cad:	8b 40 04             	mov    0x4(%rax),%eax
   11cb0:	85 c0                	test   %eax,%eax
   11cb2:	74 28                	je     11cdc <codegen_simple_relop+0xa2>
   11cb4:	48 8d 05 75 af 00 00 	lea    0xaf75(%rip),%rax        # 1cc30 <__PRETTY_FUNCTION__.1>
   11cbb:	48 89 c1             	mov    %rax,%rcx
   11cbe:	ba 58 00 00 00       	mov    $0x58,%edx
   11cc3:	48 8d 05 36 ab 00 00 	lea    0xab36(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   11cca:	48 89 c6             	mov    %rax,%rsi
   11ccd:	48 8d 05 fc ac 00 00 	lea    0xacfc(%rip),%rax        # 1c9d0 <__PRETTY_FUNCTION__.0+0x1e0>
   11cd4:	48 89 c7             	mov    %rax,%rdi
   11cd7:	e8 f4 06 ff ff       	call   23d0 <__assert_fail@plt>
   11cdc:	48 8b 05 7d 03 01 00 	mov    0x1037d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11ce3:	48 89 c1             	mov    %rax,%rcx
   11ce6:	ba 1f 00 00 00       	mov    $0x1f,%edx
   11ceb:	be 01 00 00 00       	mov    $0x1,%esi
   11cf0:	48 8d 05 f9 ac 00 00 	lea    0xacf9(%rip),%rax        # 1c9f0 <__PRETTY_FUNCTION__.0+0x200>
   11cf7:	48 89 c7             	mov    %rax,%rdi
   11cfa:	e8 51 08 ff ff       	call   2550 <fwrite@plt>
   11cff:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d06:	8b 50 08             	mov    0x8(%rax),%edx
   11d09:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   11d10:	89 10                	mov    %edx,(%rax)
   11d12:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   11d19:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d20:	48 8b 40 10          	mov    0x10(%rax),%rax
   11d24:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11d2b:	48 89 ce             	mov    %rcx,%rsi
   11d2e:	48 89 c7             	mov    %rax,%rdi
   11d31:	e8 ce fa ff ff       	call   11804 <codegen_expr>
   11d36:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11d3d:	b8 00 00 00 00       	mov    $0x0,%eax
   11d42:	e8 4f 0d 00 00       	call   12a96 <get_reg_stack>
   11d47:	48 89 c2             	mov    %rax,%rdx
   11d4a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   11d51:	48 89 c6             	mov    %rax,%rsi
   11d54:	48 89 d7             	mov    %rdx,%rdi
   11d57:	e8 fe 15 00 00       	call   1335a <get_free_reg>
   11d5c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   11d60:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   11d67:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d6e:	48 8b 40 18          	mov    0x18(%rax),%rax
   11d72:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11d79:	48 89 ce             	mov    %rcx,%rsi
   11d7c:	48 89 c7             	mov    %rax,%rdi
   11d7f:	e8 80 fa ff ff       	call   11804 <codegen_expr>
   11d84:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11d8b:	b8 00 00 00 00       	mov    $0x0,%eax
   11d90:	e8 01 0d 00 00       	call   12a96 <get_reg_stack>
   11d95:	48 89 c7             	mov    %rax,%rdi
   11d98:	e8 71 15 00 00       	call   1330e <front_reg_stack>
   11d9d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   11da1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11da5:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11da9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11dad:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11db1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11db5:	49 89 c8             	mov    %rcx,%r8
   11db8:	48 89 d1             	mov    %rdx,%rcx
   11dbb:	48 8d 15 4e ac 00 00 	lea    0xac4e(%rip),%rdx        # 1ca10 <__PRETTY_FUNCTION__.0+0x220>
   11dc2:	be 64 00 00 00       	mov    $0x64,%esi
   11dc7:	48 89 c7             	mov    %rax,%rdi
   11dca:	b8 00 00 00 00       	mov    $0x0,%eax
   11dcf:	e8 dc 05 ff ff       	call   23b0 <snprintf@plt>
   11dd4:	b8 00 00 00 00       	mov    $0x0,%eax
   11dd9:	e8 b8 0c 00 00       	call   12a96 <get_reg_stack>
   11dde:	48 89 c2             	mov    %rax,%rdx
   11de1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11de5:	48 89 c6             	mov    %rax,%rsi
   11de8:	48 89 d7             	mov    %rdx,%rdi
   11deb:	e8 0d 13 00 00       	call   130fd <free_reg>
   11df0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11df7:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   11dfb:	48 89 d6             	mov    %rdx,%rsi
   11dfe:	48 89 c7             	mov    %rax,%rdi
   11e01:	e8 c0 d6 ff ff       	call   f4c6 <add_inst>
   11e06:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11e0d:	48 8b 05 4c 02 01 00 	mov    0x1024c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11e14:	48 89 c1             	mov    %rax,%rcx
   11e17:	ba 1e 00 00 00       	mov    $0x1e,%edx
   11e1c:	be 01 00 00 00       	mov    $0x1,%esi
   11e21:	48 8d 05 f8 ab 00 00 	lea    0xabf8(%rip),%rax        # 1ca20 <__PRETTY_FUNCTION__.0+0x230>
   11e28:	48 89 c7             	mov    %rax,%rdi
   11e2b:	e8 20 07 ff ff       	call   2550 <fwrite@plt>
   11e30:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11e37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11e3b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11e42:	00 00
   11e44:	74 05                	je     11e4b <codegen_simple_relop+0x211>
   11e46:	e8 55 05 ff ff       	call   23a0 <__stack_chk_fail@plt>
   11e4b:	c9                   	leave
   11e4c:	c3                   	ret

0000000000011e4d <codegen_get_nonlocal>:
   11e4d:	f3 0f 1e fa          	endbr64
   11e51:	55                   	push   %rbp
   11e52:	48 89 e5             	mov    %rsp,%rbp
   11e55:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11e5c:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11e63:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11e6a:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   11e71:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11e78:	00 00
   11e7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11e7e:	31 c0                	xor    %eax,%eax
   11e80:	48 8b 05 d9 01 01 00 	mov    0x101d9(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11e87:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11e8e:	48 8d 0d ab ab 00 00 	lea    0xabab(%rip),%rcx        # 1ca40 <__PRETTY_FUNCTION__.0+0x250>
   11e95:	48 89 ce             	mov    %rcx,%rsi
   11e98:	48 89 c7             	mov    %rax,%rdi
   11e9b:	b8 00 00 00 00       	mov    $0x0,%eax
   11ea0:	e8 cb 05 ff ff       	call   2470 <fprintf@plt>
   11ea5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11eac:	48 89 c7             	mov    %rax,%rdi
   11eaf:	e8 09 0d 00 00       	call   12bbd <find_label>
   11eb4:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   11eb8:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   11ebd:	75 2f                	jne    11eee <codegen_get_nonlocal+0xa1>
   11ebf:	48 8b 05 9a 01 01 00 	mov    0x1019a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11ec6:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11ecd:	48 8d 0d 9c ab 00 00 	lea    0xab9c(%rip),%rcx        # 1ca70 <__PRETTY_FUNCTION__.0+0x280>
   11ed4:	48 89 ce             	mov    %rcx,%rsi
   11ed7:	48 89 c7             	mov    %rax,%rdi
   11eda:	b8 00 00 00 00       	mov    $0x0,%eax
   11edf:	e8 8c 05 ff ff       	call   2470 <fprintf@plt>
   11ee4:	bf 01 00 00 00       	mov    $0x1,%edi
   11ee9:	e8 52 06 ff ff       	call   2540 <exit@plt>
   11eee:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11ef2:	8b 10                	mov    (%rax),%edx
   11ef4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11efb:	89 10                	mov    %edx,(%rax)
   11efd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11f01:	48 8d 15 95 ab 00 00 	lea    0xab95(%rip),%rdx        # 1ca9d <__PRETTY_FUNCTION__.0+0x2ad>
   11f08:	48 89 d1             	mov    %rdx,%rcx
   11f0b:	48 8d 15 90 ab 00 00 	lea    0xab90(%rip),%rdx        # 1caa2 <__PRETTY_FUNCTION__.0+0x2b2>
   11f12:	be 64 00 00 00       	mov    $0x64,%esi
   11f17:	48 89 c7             	mov    %rax,%rdi
   11f1a:	b8 00 00 00 00       	mov    $0x0,%eax
   11f1f:	e8 8c 04 ff ff       	call   23b0 <snprintf@plt>
   11f24:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   11f28:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f2f:	48 89 d6             	mov    %rdx,%rsi
   11f32:	48 89 c7             	mov    %rax,%rdi
   11f35:	e8 8c d5 ff ff       	call   f4c6 <add_inst>
   11f3a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11f41:	48 8b 05 18 01 01 00 	mov    0x10118(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11f48:	48 89 c1             	mov    %rax,%rcx
   11f4b:	ba 22 00 00 00       	mov    $0x22,%edx
   11f50:	be 01 00 00 00       	mov    $0x1,%esi
   11f55:	48 8d 05 5c ab 00 00 	lea    0xab5c(%rip),%rax        # 1cab8 <__PRETTY_FUNCTION__.0+0x2c8>
   11f5c:	48 89 c7             	mov    %rax,%rdi
   11f5f:	e8 ec 05 ff ff       	call   2550 <fwrite@plt>
   11f64:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f6f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11f76:	00 00
   11f78:	74 05                	je     11f7f <codegen_get_nonlocal+0x132>
   11f7a:	e8 21 04 ff ff       	call   23a0 <__stack_chk_fail@plt>
   11f7f:	c9                   	leave
   11f80:	c3                   	ret

0000000000011f81 <codegen_pass_arguments>:
   11f81:	f3 0f 1e fa          	endbr64
   11f85:	55                   	push   %rbp
   11f86:	48 89 e5             	mov    %rsp,%rbp
   11f89:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11f90:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11f97:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11f9e:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   11fa5:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   11fac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11fb3:	00 00
   11fb5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11fb9:	31 c0                	xor    %eax,%eax
   11fbb:	48 8b 05 9e 00 01 00 	mov    0x1009e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11fc2:	48 89 c1             	mov    %rax,%rcx
   11fc5:	ba 24 00 00 00       	mov    $0x24,%edx
   11fca:	be 01 00 00 00       	mov    $0x1,%esi
   11fcf:	48 8d 05 0a ab 00 00 	lea    0xab0a(%rip),%rax        # 1cae0 <__PRETTY_FUNCTION__.0+0x2f0>
   11fd6:	48 89 c7             	mov    %rax,%rdi
   11fd9:	e8 72 05 ff ff       	call   2550 <fwrite@plt>
   11fde:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   11fe5:	00
   11fe6:	74 23                	je     1200b <codegen_pass_arguments+0x8a>
   11fe8:	48 8b 05 71 00 01 00 	mov    0x10071(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11fef:	48 89 c1             	mov    %rax,%rcx
   11ff2:	ba 18 00 00 00       	mov    $0x18,%edx
   11ff7:	be 01 00 00 00       	mov    $0x1,%esi
   11ffc:	48 8d 05 02 ab 00 00 	lea    0xab02(%rip),%rax        # 1cb05 <__PRETTY_FUNCTION__.0+0x315>
   12003:	48 89 c7             	mov    %rax,%rdi
   12006:	e8 45 05 ff ff       	call   2550 <fwrite@plt>
   1200b:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   12012:	00
   12013:	74 2a                	je     1203f <codegen_pass_arguments+0xbe>
   12015:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1201c:	48 8b 10             	mov    (%rax),%rdx
   1201f:	48 8b 05 3a 00 01 00 	mov    0x1003a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12026:	48 8d 0d f3 aa 00 00 	lea    0xaaf3(%rip),%rcx        # 1cb20 <__PRETTY_FUNCTION__.0+0x330>
   1202d:	48 89 ce             	mov    %rcx,%rsi
   12030:	48 89 c7             	mov    %rax,%rdi
   12033:	b8 00 00 00 00       	mov    $0x0,%eax
   12038:	e8 33 04 ff ff       	call   2470 <fprintf@plt>
   1203d:	eb 23                	jmp    12062 <codegen_pass_arguments+0xe1>
   1203f:	48 8b 05 1a 00 01 00 	mov    0x1001a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12046:	48 89 c1             	mov    %rax,%rcx
   12049:	ba 19 00 00 00       	mov    $0x19,%edx
   1204e:	be 01 00 00 00       	mov    $0x1,%esi
   12053:	48 8d 05 ee aa 00 00 	lea    0xaaee(%rip),%rax        # 1cb48 <__PRETTY_FUNCTION__.0+0x358>
   1205a:	48 89 c7             	mov    %rax,%rdi
   1205d:	e8 ee 04 ff ff       	call   2550 <fwrite@plt>
   12062:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
   12069:	00
   1206a:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   12071:	00
   12072:	74 0f                	je     12083 <codegen_pass_arguments+0x102>
   12074:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1207b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1207f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   12083:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
   1208a:	e9 54 02 00 00       	jmp    122e3 <codegen_pass_arguments+0x362>
   1208f:	48 8b 05 ca ff 00 00 	mov    0xffca(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12096:	8b 55 84             	mov    -0x7c(%rbp),%edx
   12099:	48 8d 0d c2 aa 00 00 	lea    0xaac2(%rip),%rcx        # 1cb62 <__PRETTY_FUNCTION__.0+0x372>
   120a0:	48 89 ce             	mov    %rcx,%rsi
   120a3:	48 89 c7             	mov    %rax,%rdi
   120a6:	b8 00 00 00 00       	mov    $0x0,%eax
   120ab:	e8 c0 03 ff ff       	call   2470 <fprintf@plt>
   120b0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   120b7:	48 8b 40 08          	mov    0x8(%rax),%rax
   120bb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   120bf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   120c3:	8b 50 04             	mov    0x4(%rax),%edx
   120c6:	48 8b 05 93 ff 00 00 	mov    0xff93(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   120cd:	48 8d 0d a3 aa 00 00 	lea    0xaaa3(%rip),%rcx        # 1cb77 <__PRETTY_FUNCTION__.0+0x387>
   120d4:	48 89 ce             	mov    %rcx,%rsi
   120d7:	48 89 c7             	mov    %rax,%rdi
   120da:	b8 00 00 00 00       	mov    $0x0,%eax
   120df:	e8 8c 03 ff ff       	call   2470 <fprintf@plt>
   120e4:	8b 45 84             	mov    -0x7c(%rbp),%eax
   120e7:	89 c7                	mov    %eax,%edi
   120e9:	e8 b8 02 00 00       	call   123a6 <get_arg_reg64_num>
   120ee:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   120f2:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   120f7:	75 2b                	jne    12124 <codegen_pass_arguments+0x1a3>
   120f9:	48 8b 05 60 ff 00 00 	mov    0xff60(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12100:	8b 55 84             	mov    -0x7c(%rbp),%edx
   12103:	48 8d 0d 8e aa 00 00 	lea    0xaa8e(%rip),%rcx        # 1cb98 <__PRETTY_FUNCTION__.0+0x3a8>
   1210a:	48 89 ce             	mov    %rcx,%rsi
   1210d:	48 89 c7             	mov    %rax,%rdi
   12110:	b8 00 00 00 00       	mov    $0x0,%eax
   12115:	e8 56 03 ff ff       	call   2470 <fprintf@plt>
   1211a:	bf 01 00 00 00       	mov    $0x1,%edi
   1211f:	e8 1c 04 ff ff       	call   2540 <exit@plt>
   12124:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   1212b:	00
   1212c:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   12131:	74 0c                	je     1213f <codegen_pass_arguments+0x1be>
   12133:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12137:	48 8b 40 08          	mov    0x8(%rax),%rax
   1213b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1213f:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   12144:	0f 84 a5 00 00 00    	je     121ef <codegen_pass_arguments+0x26e>
   1214a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1214e:	8b 40 20             	mov    0x20(%rax),%eax
   12151:	85 c0                	test   %eax,%eax
   12153:	0f 84 96 00 00 00    	je     121ef <codegen_pass_arguments+0x26e>
   12159:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1215d:	8b 40 04             	mov    0x4(%rax),%eax
   12160:	83 f8 04             	cmp    $0x4,%eax
   12163:	74 28                	je     1218d <codegen_pass_arguments+0x20c>
   12165:	48 8d 05 e4 aa 00 00 	lea    0xaae4(%rip),%rax        # 1cc50 <__PRETTY_FUNCTION__.0>
   1216c:	48 89 c1             	mov    %rax,%rcx
   1216f:	ba ad 00 00 00       	mov    $0xad,%edx
   12174:	48 8d 05 85 a6 00 00 	lea    0xa685(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   1217b:	48 89 c6             	mov    %rax,%rsi
   1217e:	48 8d 05 3a aa 00 00 	lea    0xaa3a(%rip),%rax        # 1cbbf <__PRETTY_FUNCTION__.0+0x3cf>
   12185:	48 89 c7             	mov    %rax,%rdi
   12188:	e8 43 02 ff ff       	call   23d0 <__assert_fail@plt>
   1218d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12191:	48 8b 40 08          	mov    0x8(%rax),%rax
   12195:	48 89 c7             	mov    %rax,%rdi
   12198:	e8 20 0a 00 00       	call   12bbd <find_label>
   1219d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   121a1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   121a5:	8b 10                	mov    (%rax),%edx
   121a7:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   121ab:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   121af:	49 89 c8             	mov    %rcx,%r8
   121b2:	89 d1                	mov    %edx,%ecx
   121b4:	48 8d 15 22 aa 00 00 	lea    0xaa22(%rip),%rdx        # 1cbdd <__PRETTY_FUNCTION__.0+0x3ed>
   121bb:	be 32 00 00 00       	mov    $0x32,%esi
   121c0:	48 89 c7             	mov    %rax,%rdi
   121c3:	b8 00 00 00 00       	mov    $0x0,%eax
   121c8:	e8 e3 01 ff ff       	call   23b0 <snprintf@plt>
   121cd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   121d4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   121d8:	48 89 d6             	mov    %rdx,%rsi
   121db:	48 89 c7             	mov    %rax,%rdi
   121de:	e8 e3 d2 ff ff       	call   f4c6 <add_inst>
   121e3:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   121ea:	e9 cb 00 00 00       	jmp    122ba <codegen_pass_arguments+0x339>
   121ef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   121f3:	48 89 c7             	mov    %rax,%rdi
   121f6:	e8 99 17 00 00       	call   13994 <build_expr_tree>
   121fb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   121ff:	b8 00 00 00 00       	mov    $0x0,%eax
   12204:	e8 8d 08 00 00       	call   12a96 <get_reg_stack>
   12209:	48 89 c2             	mov    %rax,%rdx
   1220c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   12213:	48 89 c6             	mov    %rax,%rsi
   12216:	48 89 d7             	mov    %rdx,%rdi
   12219:	e8 3c 11 00 00       	call   1335a <get_free_reg>
   1221e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12222:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
   12229:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   1222d:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   12234:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12238:	48 89 c7             	mov    %rax,%rdi
   1223b:	e8 39 1a 00 00       	call   13c79 <gencode_expr_tree>
   12240:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   12247:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1224b:	48 89 c7             	mov    %rax,%rdi
   1224e:	e8 bc 20 00 00       	call   1430f <free_expr_tree>
   12253:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12257:	48 8b 10             	mov    (%rax),%rdx
   1225a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1225e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12262:	49 89 c8             	mov    %rcx,%r8
   12265:	48 89 d1             	mov    %rdx,%rcx
   12268:	48 8d 15 84 a9 00 00 	lea    0xa984(%rip),%rdx        # 1cbf3 <__PRETTY_FUNCTION__.0+0x403>
   1226f:	be 32 00 00 00       	mov    $0x32,%esi
   12274:	48 89 c7             	mov    %rax,%rdi
   12277:	b8 00 00 00 00       	mov    $0x0,%eax
   1227c:	e8 2f 01 ff ff       	call   23b0 <snprintf@plt>
   12281:	b8 00 00 00 00       	mov    $0x0,%eax
   12286:	e8 0b 08 00 00       	call   12a96 <get_reg_stack>
   1228b:	48 89 c2             	mov    %rax,%rdx
   1228e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12292:	48 89 c6             	mov    %rax,%rsi
   12295:	48 89 d7             	mov    %rdx,%rdi
   12298:	e8 60 0e 00 00       	call   130fd <free_reg>
   1229d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   122a4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   122a8:	48 89 d6             	mov    %rdx,%rsi
   122ab:	48 89 c7             	mov    %rax,%rdi
   122ae:	e8 13 d2 ff ff       	call   f4c6 <add_inst>
   122b3:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   122ba:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   122c1:	48 8b 40 10          	mov    0x10(%rax),%rax
   122c5:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   122cc:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   122d1:	74 0c                	je     122df <codegen_pass_arguments+0x35e>
   122d3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   122d7:	48 8b 40 10          	mov    0x10(%rax),%rax
   122db:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   122df:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
   122e3:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   122ea:	00
   122eb:	0f 85 9e fd ff ff    	jne    1208f <codegen_pass_arguments+0x10e>
   122f1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   122f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   122fc:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   12303:	00 00
   12305:	74 05                	je     1230c <codegen_pass_arguments+0x38b>
   12307:	e8 94 00 ff ff       	call   23a0 <__stack_chk_fail@plt>
   1230c:	c9                   	leave
   1230d:	c3                   	ret

000000000001230e <codegen_goto_prev_scope>:
   1230e:	f3 0f 1e fa          	endbr64
   12312:	55                   	push   %rbp
   12313:	48 89 e5             	mov    %rsp,%rbp
   12316:	48 83 ec 60          	sub    $0x60,%rsp
   1231a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1231e:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   12322:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   12326:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1232d:	00 00
   1232f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12333:	31 c0                	xor    %eax,%eax
   12335:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12339:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1233d:	4c 8d 05 59 a7 00 00 	lea    0xa759(%rip),%r8        # 1ca9d <__PRETTY_FUNCTION__.0+0x2ad>
   12344:	48 89 d1             	mov    %rdx,%rcx
   12347:	48 8d 15 b3 a8 00 00 	lea    0xa8b3(%rip),%rdx        # 1cc01 <__PRETTY_FUNCTION__.0+0x411>
   1234e:	be 32 00 00 00       	mov    $0x32,%esi
   12353:	48 89 c7             	mov    %rax,%rdi
   12356:	b8 00 00 00 00       	mov    $0x0,%eax
   1235b:	e8 50 00 ff ff       	call   23b0 <snprintf@plt>
   12360:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   12364:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12368:	48 89 d6             	mov    %rdx,%rsi
   1236b:	48 89 c7             	mov    %rax,%rdi
   1236e:	e8 53 d1 ff ff       	call   f4c6 <add_inst>
   12373:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12377:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1237b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1237f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   12386:	00 00
   12388:	74 05                	je     1238f <codegen_goto_prev_scope+0x81>
   1238a:	e8 11 00 ff ff       	call   23a0 <__stack_chk_fail@plt>
   1238f:	c9                   	leave
   12390:	c3                   	ret

0000000000012391 <free_arg_regs>:
   12391:	f3 0f 1e fa          	endbr64
   12395:	55                   	push   %rbp
   12396:	48 89 e5             	mov    %rsp,%rbp
   12399:	c7 05 5d 03 01 00 00 	movl   $0x0,0x1035d(%rip)        # 22700 <num_args_alloced>
   123a0:	00 00 00
   123a3:	90                   	nop
   123a4:	5d                   	pop    %rbp
   123a5:	c3                   	ret

00000000000123a6 <get_arg_reg64_num>:
   123a6:	f3 0f 1e fa          	endbr64
   123aa:	55                   	push   %rbp
   123ab:	48 89 e5             	mov    %rsp,%rbp
   123ae:	89 7d fc             	mov    %edi,-0x4(%rbp)
   123b1:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   123b5:	75 09                	jne    123c0 <get_arg_reg64_num+0x1a>
   123b7:	48 8d 05 b2 a8 00 00 	lea    0xa8b2(%rip),%rax        # 1cc70 <__PRETTY_FUNCTION__.0+0x20>
   123be:	eb 32                	jmp    123f2 <get_arg_reg64_num+0x4c>
   123c0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   123c4:	75 09                	jne    123cf <get_arg_reg64_num+0x29>
   123c6:	48 8d 05 a8 a8 00 00 	lea    0xa8a8(%rip),%rax        # 1cc75 <__PRETTY_FUNCTION__.0+0x25>
   123cd:	eb 23                	jmp    123f2 <get_arg_reg64_num+0x4c>
   123cf:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   123d3:	75 09                	jne    123de <get_arg_reg64_num+0x38>
   123d5:	48 8d 05 9e a8 00 00 	lea    0xa89e(%rip),%rax        # 1cc7a <__PRETTY_FUNCTION__.0+0x2a>
   123dc:	eb 14                	jmp    123f2 <get_arg_reg64_num+0x4c>
   123de:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
   123e2:	75 09                	jne    123ed <get_arg_reg64_num+0x47>
   123e4:	48 8d 05 94 a8 00 00 	lea    0xa894(%rip),%rax        # 1cc7f <__PRETTY_FUNCTION__.0+0x2f>
   123eb:	eb 05                	jmp    123f2 <get_arg_reg64_num+0x4c>
   123ed:	b8 00 00 00 00       	mov    $0x0,%eax
   123f2:	5d                   	pop    %rbp
   123f3:	c3                   	ret

00000000000123f4 <get_arg_reg32_num>:
   123f4:	f3 0f 1e fa          	endbr64
   123f8:	55                   	push   %rbp
   123f9:	48 89 e5             	mov    %rsp,%rbp
   123fc:	89 7d fc             	mov    %edi,-0x4(%rbp)
   123ff:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   12403:	75 09                	jne    1240e <get_arg_reg32_num+0x1a>
   12405:	48 8d 05 78 a8 00 00 	lea    0xa878(%rip),%rax        # 1cc84 <__PRETTY_FUNCTION__.0+0x34>
   1240c:	eb 32                	jmp    12440 <get_arg_reg32_num+0x4c>
   1240e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   12412:	75 09                	jne    1241d <get_arg_reg32_num+0x29>
   12414:	48 8d 05 6e a8 00 00 	lea    0xa86e(%rip),%rax        # 1cc89 <__PRETTY_FUNCTION__.0+0x39>
   1241b:	eb 23                	jmp    12440 <get_arg_reg32_num+0x4c>
   1241d:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   12421:	75 09                	jne    1242c <get_arg_reg32_num+0x38>
   12423:	48 8d 05 64 a8 00 00 	lea    0xa864(%rip),%rax        # 1cc8e <__PRETTY_FUNCTION__.0+0x3e>
   1242a:	eb 14                	jmp    12440 <get_arg_reg32_num+0x4c>
   1242c:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
   12430:	75 09                	jne    1243b <get_arg_reg32_num+0x47>
   12432:	48 8d 05 5a a8 00 00 	lea    0xa85a(%rip),%rax        # 1cc93 <__PRETTY_FUNCTION__.0+0x43>
   12439:	eb 05                	jmp    12440 <get_arg_reg32_num+0x4c>
   1243b:	b8 00 00 00 00       	mov    $0x0,%eax
   12440:	5d                   	pop    %rbp
   12441:	c3                   	ret

0000000000012442 <init_stackmng>:
   12442:	f3 0f 1e fa          	endbr64
   12446:	55                   	push   %rbp
   12447:	48 89 e5             	mov    %rsp,%rbp
   1244a:	53                   	push   %rbx
   1244b:	48 83 ec 08          	sub    $0x8,%rsp
   1244f:	48 8b 05 c2 02 01 00 	mov    0x102c2(%rip),%rax        # 22718 <global_stackmng>
   12456:	48 85 c0             	test   %rax,%rax
   12459:	74 28                	je     12483 <init_stackmng+0x41>
   1245b:	48 8d 05 d6 aa 00 00 	lea    0xaad6(%rip),%rax        # 1cf38 <__PRETTY_FUNCTION__.19>
   12462:	48 89 c1             	mov    %rax,%rcx
   12465:	ba 48 00 00 00       	mov    $0x48,%edx
   1246a:	48 8d 05 27 a8 00 00 	lea    0xa827(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12471:	48 89 c6             	mov    %rax,%rsi
   12474:	48 8d 05 53 a8 00 00 	lea    0xa853(%rip),%rax        # 1ccce <__PRETTY_FUNCTION__.0+0x7e>
   1247b:	48 89 c7             	mov    %rax,%rdi
   1247e:	e8 4d ff fe ff       	call   23d0 <__assert_fail@plt>
   12483:	c7 05 73 02 01 00 00 	movl   $0x0,0x10273(%rip)        # 22700 <num_args_alloced>
   1248a:	00 00 00
   1248d:	bf 10 00 00 00       	mov    $0x10,%edi
   12492:	e8 39 00 ff ff       	call   24d0 <malloc@plt>
   12497:	48 89 05 7a 02 01 00 	mov    %rax,0x1027a(%rip)        # 22718 <global_stackmng>
   1249e:	48 8b 05 73 02 01 00 	mov    0x10273(%rip),%rax        # 22718 <global_stackmng>
   124a5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   124ac:	48 8b 1d 65 02 01 00 	mov    0x10265(%rip),%rbx        # 22718 <global_stackmng>
   124b3:	b8 00 00 00 00       	mov    $0x0,%eax
   124b8:	e8 8f 08 00 00       	call   12d4c <init_reg_stack>
   124bd:	48 89 43 08          	mov    %rax,0x8(%rbx)
   124c1:	90                   	nop
   124c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   124c6:	c9                   	leave
   124c7:	c3                   	ret

00000000000124c8 <get_cur_scope>:
   124c8:	f3 0f 1e fa          	endbr64
   124cc:	55                   	push   %rbp
   124cd:	48 89 e5             	mov    %rsp,%rbp
   124d0:	48 8b 05 41 02 01 00 	mov    0x10241(%rip),%rax        # 22718 <global_stackmng>
   124d7:	48 8b 00             	mov    (%rax),%rax
   124da:	5d                   	pop    %rbp
   124db:	c3                   	ret

00000000000124dc <get_full_stack_offset>:
   124dc:	f3 0f 1e fa          	endbr64
   124e0:	55                   	push   %rbp
   124e1:	48 89 e5             	mov    %rsp,%rbp
   124e4:	48 83 ec 20          	sub    $0x20,%rsp
   124e8:	48 8b 05 29 02 01 00 	mov    0x10229(%rip),%rax        # 22718 <global_stackmng>
   124ef:	48 85 c0             	test   %rax,%rax
   124f2:	75 28                	jne    1251c <get_full_stack_offset+0x40>
   124f4:	48 8d 05 55 aa 00 00 	lea    0xaa55(%rip),%rax        # 1cf50 <__PRETTY_FUNCTION__.18>
   124fb:	48 89 c1             	mov    %rax,%rcx
   124fe:	ba 59 00 00 00       	mov    $0x59,%edx
   12503:	48 8d 05 8e a7 00 00 	lea    0xa78e(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1250a:	48 89 c6             	mov    %rax,%rsi
   1250d:	48 8d 05 d2 a7 00 00 	lea    0xa7d2(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12514:	48 89 c7             	mov    %rax,%rdi
   12517:	e8 b4 fe fe ff       	call   23d0 <__assert_fail@plt>
   1251c:	48 8b 05 f5 01 01 00 	mov    0x101f5(%rip),%rax        # 22718 <global_stackmng>
   12523:	48 8b 00             	mov    (%rax),%rax
   12526:	48 85 c0             	test   %rax,%rax
   12529:	75 28                	jne    12553 <get_full_stack_offset+0x77>
   1252b:	48 8d 05 1e aa 00 00 	lea    0xaa1e(%rip),%rax        # 1cf50 <__PRETTY_FUNCTION__.18>
   12532:	48 89 c1             	mov    %rax,%rcx
   12535:	ba 5a 00 00 00       	mov    $0x5a,%edx
   1253a:	48 8d 05 57 a7 00 00 	lea    0xa757(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12541:	48 89 c6             	mov    %rax,%rsi
   12544:	48 8d 05 b5 a7 00 00 	lea    0xa7b5(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   1254b:	48 89 c7             	mov    %rax,%rdi
   1254e:	e8 7d fe fe ff       	call   23d0 <__assert_fail@plt>
   12553:	48 8b 05 be 01 01 00 	mov    0x101be(%rip),%rax        # 22718 <global_stackmng>
   1255a:	48 8b 00             	mov    (%rax),%rax
   1255d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12565:	8b 10                	mov    (%rax),%edx
   12567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1256b:	8b 40 04             	mov    0x4(%rax),%eax
   1256e:	01 c2                	add    %eax,%edx
   12570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12574:	8b 40 08             	mov    0x8(%rax),%eax
   12577:	01 d0                	add    %edx,%eax
   12579:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1257c:	8b 45 f0             	mov    -0x10(%rbp),%eax
   1257f:	8d 50 0f             	lea    0xf(%rax),%edx
   12582:	85 c0                	test   %eax,%eax
   12584:	0f 48 c2             	cmovs  %edx,%eax
   12587:	c1 f8 04             	sar    $0x4,%eax
   1258a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1258d:	8b 55 f0             	mov    -0x10(%rbp),%edx
   12590:	89 d0                	mov    %edx,%eax
   12592:	c1 f8 1f             	sar    $0x1f,%eax
   12595:	c1 e8 1c             	shr    $0x1c,%eax
   12598:	01 c2                	add    %eax,%edx
   1259a:	83 e2 0f             	and    $0xf,%edx
   1259d:	29 c2                	sub    %eax,%edx
   1259f:	89 55 f4             	mov    %edx,-0xc(%rbp)
   125a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   125a6:	7e 04                	jle    125ac <get_full_stack_offset+0xd0>
   125a8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   125ac:	8b 45 ec             	mov    -0x14(%rbp),%eax
   125af:	c1 e0 04             	shl    $0x4,%eax
   125b2:	c9                   	leave
   125b3:	c3                   	ret

00000000000125b4 <push_stackscope>:
   125b4:	f3 0f 1e fa          	endbr64
   125b8:	55                   	push   %rbp
   125b9:	48 89 e5             	mov    %rsp,%rbp
   125bc:	48 83 ec 10          	sub    $0x10,%rsp
   125c0:	48 8b 05 51 01 01 00 	mov    0x10151(%rip),%rax        # 22718 <global_stackmng>
   125c7:	48 85 c0             	test   %rax,%rax
   125ca:	75 28                	jne    125f4 <push_stackscope+0x40>
   125cc:	48 8d 05 9d a9 00 00 	lea    0xa99d(%rip),%rax        # 1cf70 <__PRETTY_FUNCTION__.17>
   125d3:	48 89 c1             	mov    %rax,%rcx
   125d6:	ba 70 00 00 00       	mov    $0x70,%edx
   125db:	48 8d 05 b6 a6 00 00 	lea    0xa6b6(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   125e2:	48 89 c6             	mov    %rax,%rsi
   125e5:	48 8d 05 fa a6 00 00 	lea    0xa6fa(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   125ec:	48 89 c7             	mov    %rax,%rdi
   125ef:	e8 dc fd fe ff       	call   23d0 <__assert_fail@plt>
   125f4:	b8 00 00 00 00       	mov    $0x0,%eax
   125f9:	e8 af 0f 00 00       	call   135ad <init_stackscope>
   125fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12602:	48 8b 05 0f 01 01 00 	mov    0x1010f(%rip),%rax        # 22718 <global_stackmng>
   12609:	48 8b 10             	mov    (%rax),%rdx
   1260c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12610:	48 89 50 28          	mov    %rdx,0x28(%rax)
   12614:	48 8b 05 fd 00 01 00 	mov    0x100fd(%rip),%rax        # 22718 <global_stackmng>
   1261b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1261f:	48 89 10             	mov    %rdx,(%rax)
   12622:	90                   	nop
   12623:	c9                   	leave
   12624:	c3                   	ret

0000000000012625 <pop_stackscope>:
   12625:	f3 0f 1e fa          	endbr64
   12629:	55                   	push   %rbp
   1262a:	48 89 e5             	mov    %rsp,%rbp
   1262d:	53                   	push   %rbx
   1262e:	48 83 ec 08          	sub    $0x8,%rsp
   12632:	48 8b 05 df 00 01 00 	mov    0x100df(%rip),%rax        # 22718 <global_stackmng>
   12639:	48 85 c0             	test   %rax,%rax
   1263c:	75 28                	jne    12666 <pop_stackscope+0x41>
   1263e:	48 8d 05 3b a9 00 00 	lea    0xa93b(%rip),%rax        # 1cf80 <__PRETTY_FUNCTION__.16>
   12645:	48 89 c1             	mov    %rax,%rcx
   12648:	ba 7b 00 00 00       	mov    $0x7b,%edx
   1264d:	48 8d 05 44 a6 00 00 	lea    0xa644(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12654:	48 89 c6             	mov    %rax,%rsi
   12657:	48 8d 05 88 a6 00 00 	lea    0xa688(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   1265e:	48 89 c7             	mov    %rax,%rdi
   12661:	e8 6a fd fe ff       	call   23d0 <__assert_fail@plt>
   12666:	48 8b 05 ab 00 01 00 	mov    0x100ab(%rip),%rax        # 22718 <global_stackmng>
   1266d:	48 8b 00             	mov    (%rax),%rax
   12670:	48 85 c0             	test   %rax,%rax
   12673:	75 28                	jne    1269d <pop_stackscope+0x78>
   12675:	48 8d 05 04 a9 00 00 	lea    0xa904(%rip),%rax        # 1cf80 <__PRETTY_FUNCTION__.16>
   1267c:	48 89 c1             	mov    %rax,%rcx
   1267f:	ba 7c 00 00 00       	mov    $0x7c,%edx
   12684:	48 8d 05 0d a6 00 00 	lea    0xa60d(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1268b:	48 89 c6             	mov    %rax,%rsi
   1268e:	48 8d 05 6b a6 00 00 	lea    0xa66b(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   12695:	48 89 c7             	mov    %rax,%rdi
   12698:	e8 33 fd fe ff       	call   23d0 <__assert_fail@plt>
   1269d:	48 8b 05 74 00 01 00 	mov    0x10074(%rip),%rax        # 22718 <global_stackmng>
   126a4:	48 8b 00             	mov    (%rax),%rax
   126a7:	48 8b 1d 6a 00 01 00 	mov    0x1006a(%rip),%rbx        # 22718 <global_stackmng>
   126ae:	48 89 c7             	mov    %rax,%rdi
   126b1:	e8 a2 10 00 00       	call   13758 <free_stackscope>
   126b6:	48 89 03             	mov    %rax,(%rbx)
   126b9:	90                   	nop
   126ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   126be:	c9                   	leave
   126bf:	c3                   	ret

00000000000126c0 <add_l_t>:
   126c0:	f3 0f 1e fa          	endbr64
   126c4:	55                   	push   %rbp
   126c5:	48 89 e5             	mov    %rsp,%rbp
   126c8:	48 83 ec 30          	sub    $0x30,%rsp
   126cc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   126d0:	48 8b 05 41 00 01 00 	mov    0x10041(%rip),%rax        # 22718 <global_stackmng>
   126d7:	48 85 c0             	test   %rax,%rax
   126da:	75 28                	jne    12704 <add_l_t+0x44>
   126dc:	48 8d 05 ad a8 00 00 	lea    0xa8ad(%rip),%rax        # 1cf90 <__PRETTY_FUNCTION__.15>
   126e3:	48 89 c1             	mov    %rax,%rcx
   126e6:	ba 84 00 00 00       	mov    $0x84,%edx
   126eb:	48 8d 05 a6 a5 00 00 	lea    0xa5a6(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   126f2:	48 89 c6             	mov    %rax,%rsi
   126f5:	48 8d 05 ea a5 00 00 	lea    0xa5ea(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   126fc:	48 89 c7             	mov    %rax,%rdi
   126ff:	e8 cc fc fe ff       	call   23d0 <__assert_fail@plt>
   12704:	48 8b 05 0d 00 01 00 	mov    0x1000d(%rip),%rax        # 22718 <global_stackmng>
   1270b:	48 8b 00             	mov    (%rax),%rax
   1270e:	48 85 c0             	test   %rax,%rax
   12711:	75 28                	jne    1273b <add_l_t+0x7b>
   12713:	48 8d 05 76 a8 00 00 	lea    0xa876(%rip),%rax        # 1cf90 <__PRETTY_FUNCTION__.15>
   1271a:	48 89 c1             	mov    %rax,%rcx
   1271d:	ba 85 00 00 00       	mov    $0x85,%edx
   12722:	48 8d 05 6f a5 00 00 	lea    0xa56f(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12729:	48 89 c6             	mov    %rax,%rsi
   1272c:	48 8d 05 cd a5 00 00 	lea    0xa5cd(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   12733:	48 89 c7             	mov    %rax,%rdi
   12736:	e8 95 fc fe ff       	call   23d0 <__assert_fail@plt>
   1273b:	48 8b 05 d6 ff 00 00 	mov    0xffd6(%rip),%rax        # 22718 <global_stackmng>
   12742:	48 8b 00             	mov    (%rax),%rax
   12745:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12749:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1274d:	8b 00                	mov    (%rax),%eax
   1274f:	8d 50 04             	lea    0x4(%rax),%edx
   12752:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12756:	89 10                	mov    %edx,(%rax)
   12758:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1275c:	8b 50 08             	mov    0x8(%rax),%edx
   1275f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12763:	8b 40 04             	mov    0x4(%rax),%eax
   12766:	01 c2                	add    %eax,%edx
   12768:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1276c:	8b 00                	mov    (%rax),%eax
   1276e:	01 d0                	add    %edx,%eax
   12770:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12773:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   12777:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1277a:	ba 04 00 00 00       	mov    $0x4,%edx
   1277f:	48 89 ce             	mov    %rcx,%rsi
   12782:	89 c7                	mov    %eax,%edi
   12784:	e8 f5 10 00 00       	call   1387e <init_stack_node>
   12789:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1278d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12791:	48 8b 40 10          	mov    0x10(%rax),%rax
   12795:	48 85 c0             	test   %rax,%rax
   12798:	75 1b                	jne    127b5 <add_l_t+0xf5>
   1279a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1279e:	be 04 00 00 00       	mov    $0x4,%esi
   127a3:	48 89 c7             	mov    %rax,%rdi
   127a6:	e8 50 5a ff ff       	call   81fb <CreateListNode>
   127ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127af:	48 89 42 10          	mov    %rax,0x10(%rdx)
   127b3:	eb 2f                	jmp    127e4 <add_l_t+0x124>
   127b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127b9:	be 04 00 00 00       	mov    $0x4,%esi
   127be:	48 89 c7             	mov    %rax,%rdi
   127c1:	e8 35 5a ff ff       	call   81fb <CreateListNode>
   127c6:	48 89 c2             	mov    %rax,%rdx
   127c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127cd:	48 8b 40 10          	mov    0x10(%rax),%rax
   127d1:	48 89 d6             	mov    %rdx,%rsi
   127d4:	48 89 c7             	mov    %rax,%rdi
   127d7:	e8 eb 5a ff ff       	call   82c7 <PushListNodeBack>
   127dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127e0:	48 89 42 10          	mov    %rax,0x10(%rdx)
   127e4:	48 8b 05 75 f8 00 00 	mov    0xf875(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   127eb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   127ee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   127f2:	48 8d 35 2f a5 00 00 	lea    0xa52f(%rip),%rsi        # 1cd28 <__PRETTY_FUNCTION__.0+0xd8>
   127f9:	48 89 c7             	mov    %rax,%rdi
   127fc:	b8 00 00 00 00       	mov    $0x0,%eax
   12801:	e8 6a fc fe ff       	call   2470 <fprintf@plt>
   12806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1280a:	c9                   	leave
   1280b:	c3                   	ret

000000000001280c <add_l_x>:
   1280c:	f3 0f 1e fa          	endbr64
   12810:	55                   	push   %rbp
   12811:	48 89 e5             	mov    %rsp,%rbp
   12814:	48 83 ec 30          	sub    $0x30,%rsp
   12818:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1281c:	48 8b 05 f5 fe 00 00 	mov    0xfef5(%rip),%rax        # 22718 <global_stackmng>
   12823:	48 85 c0             	test   %rax,%rax
   12826:	75 28                	jne    12850 <add_l_x+0x44>
   12828:	48 8d 05 69 a7 00 00 	lea    0xa769(%rip),%rax        # 1cf98 <__PRETTY_FUNCTION__.14>
   1282f:	48 89 c1             	mov    %rax,%rcx
   12832:	ba a8 00 00 00       	mov    $0xa8,%edx
   12837:	48 8d 05 5a a4 00 00 	lea    0xa45a(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1283e:	48 89 c6             	mov    %rax,%rsi
   12841:	48 8d 05 9e a4 00 00 	lea    0xa49e(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12848:	48 89 c7             	mov    %rax,%rdi
   1284b:	e8 80 fb fe ff       	call   23d0 <__assert_fail@plt>
   12850:	48 8b 05 c1 fe 00 00 	mov    0xfec1(%rip),%rax        # 22718 <global_stackmng>
   12857:	48 8b 00             	mov    (%rax),%rax
   1285a:	48 85 c0             	test   %rax,%rax
   1285d:	75 28                	jne    12887 <add_l_x+0x7b>
   1285f:	48 8d 05 32 a7 00 00 	lea    0xa732(%rip),%rax        # 1cf98 <__PRETTY_FUNCTION__.14>
   12866:	48 89 c1             	mov    %rax,%rcx
   12869:	ba a9 00 00 00       	mov    $0xa9,%edx
   1286e:	48 8d 05 23 a4 00 00 	lea    0xa423(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12875:	48 89 c6             	mov    %rax,%rsi
   12878:	48 8d 05 81 a4 00 00 	lea    0xa481(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   1287f:	48 89 c7             	mov    %rax,%rdi
   12882:	e8 49 fb fe ff       	call   23d0 <__assert_fail@plt>
   12887:	48 8b 05 8a fe 00 00 	mov    0xfe8a(%rip),%rax        # 22718 <global_stackmng>
   1288e:	48 8b 00             	mov    (%rax),%rax
   12891:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12899:	8b 40 04             	mov    0x4(%rax),%eax
   1289c:	8d 50 04             	lea    0x4(%rax),%edx
   1289f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128a3:	89 50 04             	mov    %edx,0x4(%rax)
   128a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128aa:	8b 50 08             	mov    0x8(%rax),%edx
   128ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128b1:	8b 40 04             	mov    0x4(%rax),%eax
   128b4:	01 d0                	add    %edx,%eax
   128b6:	89 45 ec             	mov    %eax,-0x14(%rbp)
   128b9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   128bd:	8b 45 ec             	mov    -0x14(%rbp),%eax
   128c0:	ba 04 00 00 00       	mov    $0x4,%edx
   128c5:	48 89 ce             	mov    %rcx,%rsi
   128c8:	89 c7                	mov    %eax,%edi
   128ca:	e8 af 0f 00 00       	call   1387e <init_stack_node>
   128cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   128d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128d7:	48 8b 40 18          	mov    0x18(%rax),%rax
   128db:	48 85 c0             	test   %rax,%rax
   128de:	75 1b                	jne    128fb <add_l_x+0xef>
   128e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128e4:	be 04 00 00 00       	mov    $0x4,%esi
   128e9:	48 89 c7             	mov    %rax,%rdi
   128ec:	e8 0a 59 ff ff       	call   81fb <CreateListNode>
   128f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   128f5:	48 89 42 18          	mov    %rax,0x18(%rdx)
   128f9:	eb 2f                	jmp    1292a <add_l_x+0x11e>
   128fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128ff:	be 04 00 00 00       	mov    $0x4,%esi
   12904:	48 89 c7             	mov    %rax,%rdi
   12907:	e8 ef 58 ff ff       	call   81fb <CreateListNode>
   1290c:	48 89 c2             	mov    %rax,%rdx
   1290f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12913:	48 8b 40 18          	mov    0x18(%rax),%rax
   12917:	48 89 d6             	mov    %rdx,%rsi
   1291a:	48 89 c7             	mov    %rax,%rdi
   1291d:	e8 a5 59 ff ff       	call   82c7 <PushListNodeBack>
   12922:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12926:	48 89 42 18          	mov    %rax,0x18(%rdx)
   1292a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1292e:	8b 08                	mov    (%rax),%ecx
   12930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12934:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12938:	48 8b 05 21 f7 00 00 	mov    0xf721(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1293f:	48 8d 35 02 a4 00 00 	lea    0xa402(%rip),%rsi        # 1cd48 <__PRETTY_FUNCTION__.0+0xf8>
   12946:	48 89 c7             	mov    %rax,%rdi
   12949:	b8 00 00 00 00       	mov    $0x0,%eax
   1294e:	e8 1d fb fe ff       	call   2470 <fprintf@plt>
   12953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12957:	c9                   	leave
   12958:	c3                   	ret

0000000000012959 <add_l_z>:
   12959:	f3 0f 1e fa          	endbr64
   1295d:	55                   	push   %rbp
   1295e:	48 89 e5             	mov    %rsp,%rbp
   12961:	48 83 ec 30          	sub    $0x30,%rsp
   12965:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12969:	48 8b 05 a8 fd 00 00 	mov    0xfda8(%rip),%rax        # 22718 <global_stackmng>
   12970:	48 85 c0             	test   %rax,%rax
   12973:	75 28                	jne    1299d <add_l_z+0x44>
   12975:	48 8d 05 24 a6 00 00 	lea    0xa624(%rip),%rax        # 1cfa0 <__PRETTY_FUNCTION__.13>
   1297c:	48 89 c1             	mov    %rax,%rcx
   1297f:	ba cc 00 00 00       	mov    $0xcc,%edx
   12984:	48 8d 05 0d a3 00 00 	lea    0xa30d(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1298b:	48 89 c6             	mov    %rax,%rsi
   1298e:	48 8d 05 51 a3 00 00 	lea    0xa351(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12995:	48 89 c7             	mov    %rax,%rdi
   12998:	e8 33 fa fe ff       	call   23d0 <__assert_fail@plt>
   1299d:	48 8b 05 74 fd 00 00 	mov    0xfd74(%rip),%rax        # 22718 <global_stackmng>
   129a4:	48 8b 00             	mov    (%rax),%rax
   129a7:	48 85 c0             	test   %rax,%rax
   129aa:	75 28                	jne    129d4 <add_l_z+0x7b>
   129ac:	48 8d 05 ed a5 00 00 	lea    0xa5ed(%rip),%rax        # 1cfa0 <__PRETTY_FUNCTION__.13>
   129b3:	48 89 c1             	mov    %rax,%rcx
   129b6:	ba cd 00 00 00       	mov    $0xcd,%edx
   129bb:	48 8d 05 d6 a2 00 00 	lea    0xa2d6(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   129c2:	48 89 c6             	mov    %rax,%rsi
   129c5:	48 8d 05 34 a3 00 00 	lea    0xa334(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   129cc:	48 89 c7             	mov    %rax,%rdi
   129cf:	e8 fc f9 fe ff       	call   23d0 <__assert_fail@plt>
   129d4:	48 8b 05 3d fd 00 00 	mov    0xfd3d(%rip),%rax        # 22718 <global_stackmng>
   129db:	48 8b 00             	mov    (%rax),%rax
   129de:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   129e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   129e6:	8b 40 08             	mov    0x8(%rax),%eax
   129e9:	8d 50 04             	lea    0x4(%rax),%edx
   129ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   129f0:	89 50 08             	mov    %edx,0x8(%rax)
   129f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   129f7:	8b 40 08             	mov    0x8(%rax),%eax
   129fa:	89 45 ec             	mov    %eax,-0x14(%rbp)
   129fd:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   12a01:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12a04:	ba 04 00 00 00       	mov    $0x4,%edx
   12a09:	48 89 ce             	mov    %rcx,%rsi
   12a0c:	89 c7                	mov    %eax,%edi
   12a0e:	e8 6b 0e 00 00       	call   1387e <init_stack_node>
   12a13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12a17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a1b:	48 8b 40 20          	mov    0x20(%rax),%rax
   12a1f:	48 85 c0             	test   %rax,%rax
   12a22:	75 1b                	jne    12a3f <add_l_z+0xe6>
   12a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a28:	be 04 00 00 00       	mov    $0x4,%esi
   12a2d:	48 89 c7             	mov    %rax,%rdi
   12a30:	e8 c6 57 ff ff       	call   81fb <CreateListNode>
   12a35:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a39:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12a3d:	eb 2f                	jmp    12a6e <add_l_z+0x115>
   12a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a43:	be 04 00 00 00       	mov    $0x4,%esi
   12a48:	48 89 c7             	mov    %rax,%rdi
   12a4b:	e8 ab 57 ff ff       	call   81fb <CreateListNode>
   12a50:	48 89 c2             	mov    %rax,%rdx
   12a53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a57:	48 8b 40 20          	mov    0x20(%rax),%rax
   12a5b:	48 89 d6             	mov    %rdx,%rsi
   12a5e:	48 89 c7             	mov    %rax,%rdi
   12a61:	e8 61 58 ff ff       	call   82c7 <PushListNodeBack>
   12a66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a6a:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12a6e:	48 8b 05 eb f5 00 00 	mov    0xf5eb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12a75:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   12a78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12a7c:	48 8d 35 e5 a2 00 00 	lea    0xa2e5(%rip),%rsi        # 1cd68 <__PRETTY_FUNCTION__.0+0x118>
   12a83:	48 89 c7             	mov    %rax,%rdi
   12a86:	b8 00 00 00 00       	mov    $0x0,%eax
   12a8b:	e8 e0 f9 fe ff       	call   2470 <fprintf@plt>
   12a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a94:	c9                   	leave
   12a95:	c3                   	ret

0000000000012a96 <get_reg_stack>:
   12a96:	f3 0f 1e fa          	endbr64
   12a9a:	55                   	push   %rbp
   12a9b:	48 89 e5             	mov    %rsp,%rbp
   12a9e:	48 8b 05 73 fc 00 00 	mov    0xfc73(%rip),%rax        # 22718 <global_stackmng>
   12aa5:	48 85 c0             	test   %rax,%rax
   12aa8:	75 28                	jne    12ad2 <get_reg_stack+0x3c>
   12aaa:	48 8d 05 f7 a4 00 00 	lea    0xa4f7(%rip),%rax        # 1cfa8 <__PRETTY_FUNCTION__.12>
   12ab1:	48 89 c1             	mov    %rax,%rcx
   12ab4:	ba ef 00 00 00       	mov    $0xef,%edx
   12ab9:	48 8d 05 d8 a1 00 00 	lea    0xa1d8(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12ac0:	48 89 c6             	mov    %rax,%rsi
   12ac3:	48 8d 05 1c a2 00 00 	lea    0xa21c(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12aca:	48 89 c7             	mov    %rax,%rdi
   12acd:	e8 fe f8 fe ff       	call   23d0 <__assert_fail@plt>
   12ad2:	48 8b 05 3f fc 00 00 	mov    0xfc3f(%rip),%rax        # 22718 <global_stackmng>
   12ad9:	48 8b 40 08          	mov    0x8(%rax),%rax
   12add:	48 85 c0             	test   %rax,%rax
   12ae0:	75 28                	jne    12b0a <get_reg_stack+0x74>
   12ae2:	48 8d 05 bf a4 00 00 	lea    0xa4bf(%rip),%rax        # 1cfa8 <__PRETTY_FUNCTION__.12>
   12ae9:	48 89 c1             	mov    %rax,%rcx
   12aec:	ba f0 00 00 00       	mov    $0xf0,%edx
   12af1:	48 8d 05 a0 a1 00 00 	lea    0xa1a0(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12af8:	48 89 c6             	mov    %rax,%rsi
   12afb:	48 8d 05 86 a2 00 00 	lea    0xa286(%rip),%rax        # 1cd88 <__PRETTY_FUNCTION__.0+0x138>
   12b02:	48 89 c7             	mov    %rax,%rdi
   12b05:	e8 c6 f8 fe ff       	call   23d0 <__assert_fail@plt>
   12b0a:	48 8b 05 07 fc 00 00 	mov    0xfc07(%rip),%rax        # 22718 <global_stackmng>
   12b11:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b15:	5d                   	pop    %rbp
   12b16:	c3                   	ret

0000000000012b17 <find_in_temp>:
   12b17:	f3 0f 1e fa          	endbr64
   12b1b:	55                   	push   %rbp
   12b1c:	48 89 e5             	mov    %rsp,%rbp
   12b1f:	48 83 ec 20          	sub    $0x20,%rsp
   12b23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b27:	48 8b 05 ea fb 00 00 	mov    0xfbea(%rip),%rax        # 22718 <global_stackmng>
   12b2e:	48 85 c0             	test   %rax,%rax
   12b31:	75 28                	jne    12b5b <find_in_temp+0x44>
   12b33:	48 8d 05 7e a4 00 00 	lea    0xa47e(%rip),%rax        # 1cfb8 <__PRETTY_FUNCTION__.11>
   12b3a:	48 89 c1             	mov    %rax,%rcx
   12b3d:	ba f9 00 00 00       	mov    $0xf9,%edx
   12b42:	48 8d 05 4f a1 00 00 	lea    0xa14f(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12b49:	48 89 c6             	mov    %rax,%rsi
   12b4c:	48 8d 05 93 a1 00 00 	lea    0xa193(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12b53:	48 89 c7             	mov    %rax,%rdi
   12b56:	e8 75 f8 fe ff       	call   23d0 <__assert_fail@plt>
   12b5b:	48 8b 05 b6 fb 00 00 	mov    0xfbb6(%rip),%rax        # 22718 <global_stackmng>
   12b62:	48 8b 00             	mov    (%rax),%rax
   12b65:	48 85 c0             	test   %rax,%rax
   12b68:	75 28                	jne    12b92 <find_in_temp+0x7b>
   12b6a:	48 8d 05 47 a4 00 00 	lea    0xa447(%rip),%rax        # 1cfb8 <__PRETTY_FUNCTION__.11>
   12b71:	48 89 c1             	mov    %rax,%rcx
   12b74:	ba fa 00 00 00       	mov    $0xfa,%edx
   12b79:	48 8d 05 18 a1 00 00 	lea    0xa118(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12b80:	48 89 c6             	mov    %rax,%rsi
   12b83:	48 8d 05 76 a1 00 00 	lea    0xa176(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   12b8a:	48 89 c7             	mov    %rax,%rdi
   12b8d:	e8 3e f8 fe ff       	call   23d0 <__assert_fail@plt>
   12b92:	48 8b 05 7f fb 00 00 	mov    0xfb7f(%rip),%rax        # 22718 <global_stackmng>
   12b99:	48 8b 00             	mov    (%rax),%rax
   12b9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12ba0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12ba4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ba8:	48 89 d6             	mov    %rdx,%rsi
   12bab:	48 89 c7             	mov    %rax,%rdi
   12bae:	e8 6a 0a 00 00       	call   1361d <stackscope_find_t>
   12bb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12bb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bbb:	c9                   	leave
   12bbc:	c3                   	ret

0000000000012bbd <find_label>:
   12bbd:	f3 0f 1e fa          	endbr64
   12bc1:	55                   	push   %rbp
   12bc2:	48 89 e5             	mov    %rsp,%rbp
   12bc5:	48 83 ec 20          	sub    $0x20,%rsp
   12bc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12bcd:	48 8b 05 44 fb 00 00 	mov    0xfb44(%rip),%rax        # 22718 <global_stackmng>
   12bd4:	48 85 c0             	test   %rax,%rax
   12bd7:	75 28                	jne    12c01 <find_label+0x44>
   12bd9:	48 8d 05 e8 a3 00 00 	lea    0xa3e8(%rip),%rax        # 1cfc8 <__PRETTY_FUNCTION__.10>
   12be0:	48 89 c1             	mov    %rax,%rcx
   12be3:	ba 08 01 00 00       	mov    $0x108,%edx
   12be8:	48 8d 05 a9 a0 00 00 	lea    0xa0a9(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12bef:	48 89 c6             	mov    %rax,%rsi
   12bf2:	48 8d 05 ed a0 00 00 	lea    0xa0ed(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12bf9:	48 89 c7             	mov    %rax,%rdi
   12bfc:	e8 cf f7 fe ff       	call   23d0 <__assert_fail@plt>
   12c01:	48 8b 05 10 fb 00 00 	mov    0xfb10(%rip),%rax        # 22718 <global_stackmng>
   12c08:	48 8b 00             	mov    (%rax),%rax
   12c0b:	48 85 c0             	test   %rax,%rax
   12c0e:	75 28                	jne    12c38 <find_label+0x7b>
   12c10:	48 8d 05 b1 a3 00 00 	lea    0xa3b1(%rip),%rax        # 1cfc8 <__PRETTY_FUNCTION__.10>
   12c17:	48 89 c1             	mov    %rax,%rcx
   12c1a:	ba 09 01 00 00       	mov    $0x109,%edx
   12c1f:	48 8d 05 72 a0 00 00 	lea    0xa072(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12c26:	48 89 c6             	mov    %rax,%rsi
   12c29:	48 8d 05 d0 a0 00 00 	lea    0xa0d0(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.0+0xb0>
   12c30:	48 89 c7             	mov    %rax,%rdi
   12c33:	e8 98 f7 fe ff       	call   23d0 <__assert_fail@plt>
   12c38:	48 8b 05 d9 fa 00 00 	mov    0xfad9(%rip),%rax        # 22718 <global_stackmng>
   12c3f:	48 8b 00             	mov    (%rax),%rax
   12c42:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12c46:	eb 78                	jmp    12cc0 <find_label+0x103>
   12c48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c50:	48 89 d6             	mov    %rdx,%rsi
   12c53:	48 89 c7             	mov    %rax,%rdi
   12c56:	e8 94 0a 00 00       	call   136ef <stackscope_find_z>
   12c5b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12c5f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12c64:	74 06                	je     12c6c <find_label+0xaf>
   12c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c6a:	eb 60                	jmp    12ccc <find_label+0x10f>
   12c6c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c74:	48 89 d6             	mov    %rdx,%rsi
   12c77:	48 89 c7             	mov    %rax,%rdi
   12c7a:	e8 07 0a 00 00       	call   13686 <stackscope_find_x>
   12c7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12c83:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12c88:	74 06                	je     12c90 <find_label+0xd3>
   12c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c8e:	eb 3c                	jmp    12ccc <find_label+0x10f>
   12c90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c98:	48 89 d6             	mov    %rdx,%rsi
   12c9b:	48 89 c7             	mov    %rax,%rdi
   12c9e:	e8 7a 09 00 00       	call   1361d <stackscope_find_t>
   12ca3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12ca7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12cac:	74 06                	je     12cb4 <find_label+0xf7>
   12cae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cb2:	eb 18                	jmp    12ccc <find_label+0x10f>
   12cb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cb8:	48 8b 40 28          	mov    0x28(%rax),%rax
   12cbc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12cc0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12cc5:	75 81                	jne    12c48 <find_label+0x8b>
   12cc7:	b8 00 00 00 00       	mov    $0x0,%eax
   12ccc:	c9                   	leave
   12ccd:	c3                   	ret

0000000000012cce <free_stackmng>:
   12cce:	f3 0f 1e fa          	endbr64
   12cd2:	55                   	push   %rbp
   12cd3:	48 89 e5             	mov    %rsp,%rbp
   12cd6:	48 8b 05 3b fa 00 00 	mov    0xfa3b(%rip),%rax        # 22718 <global_stackmng>
   12cdd:	48 85 c0             	test   %rax,%rax
   12ce0:	75 28                	jne    12d0a <free_stackmng+0x3c>
   12ce2:	48 8d 05 ef a2 00 00 	lea    0xa2ef(%rip),%rax        # 1cfd8 <__PRETTY_FUNCTION__.9>
   12ce9:	48 89 c1             	mov    %rax,%rcx
   12cec:	ba 2c 01 00 00       	mov    $0x12c,%edx
   12cf1:	48 8d 05 a0 9f 00 00 	lea    0x9fa0(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12cf8:	48 89 c6             	mov    %rax,%rsi
   12cfb:	48 8d 05 e4 9f 00 00 	lea    0x9fe4(%rip),%rax        # 1cce6 <__PRETTY_FUNCTION__.0+0x96>
   12d02:	48 89 c7             	mov    %rax,%rdi
   12d05:	e8 c6 f6 fe ff       	call   23d0 <__assert_fail@plt>
   12d0a:	48 8b 05 07 fa 00 00 	mov    0xfa07(%rip),%rax        # 22718 <global_stackmng>
   12d11:	48 8b 00             	mov    (%rax),%rax
   12d14:	48 89 c7             	mov    %rax,%rdi
   12d17:	e8 a9 0a 00 00       	call   137c5 <free_all_stackscopes>
   12d1c:	48 8b 05 f5 f9 00 00 	mov    0xf9f5(%rip),%rax        # 22718 <global_stackmng>
   12d23:	48 8b 40 08          	mov    0x8(%rax),%rax
   12d27:	48 89 c7             	mov    %rax,%rdi
   12d2a:	e8 0f 07 00 00       	call   1343e <free_reg_stack>
   12d2f:	48 8b 05 e2 f9 00 00 	mov    0xf9e2(%rip),%rax        # 22718 <global_stackmng>
   12d36:	48 89 c7             	mov    %rax,%rdi
   12d39:	e8 b2 f5 fe ff       	call   22f0 <free@plt>
   12d3e:	48 c7 05 cf f9 00 00 	movq   $0x0,0xf9cf(%rip)        # 22718 <global_stackmng>
   12d45:	00 00 00 00
   12d49:	90                   	nop
   12d4a:	5d                   	pop    %rbp
   12d4b:	c3                   	ret

0000000000012d4c <init_reg_stack>:
   12d4c:	f3 0f 1e fa          	endbr64
   12d50:	55                   	push   %rbp
   12d51:	48 89 e5             	mov    %rsp,%rbp
   12d54:	48 83 ec 20          	sub    $0x20,%rsp
   12d58:	bf 18 00 00 00       	mov    $0x18,%edi
   12d5d:	e8 6e f7 fe ff       	call   24d0 <malloc@plt>
   12d62:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12d66:	bf 10 00 00 00       	mov    $0x10,%edi
   12d6b:	e8 60 f7 fe ff       	call   24d0 <malloc@plt>
   12d70:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12d74:	48 8d 05 30 a0 00 00 	lea    0xa030(%rip),%rax        # 1cdab <__PRETTY_FUNCTION__.0+0x15b>
   12d7b:	48 89 c7             	mov    %rax,%rdi
   12d7e:	e8 dd f7 fe ff       	call   2560 <strdup@plt>
   12d83:	48 89 c2             	mov    %rax,%rdx
   12d86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d8a:	48 89 10             	mov    %rdx,(%rax)
   12d8d:	48 8d 05 1c a0 00 00 	lea    0xa01c(%rip),%rax        # 1cdb0 <__PRETTY_FUNCTION__.0+0x160>
   12d94:	48 89 c7             	mov    %rax,%rdi
   12d97:	e8 c4 f7 fe ff       	call   2560 <strdup@plt>
   12d9c:	48 89 c2             	mov    %rax,%rdx
   12d9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12da3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12da7:	bf 10 00 00 00       	mov    $0x10,%edi
   12dac:	e8 1f f7 fe ff       	call   24d0 <malloc@plt>
   12db1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12db5:	48 8d 05 b4 9e 00 00 	lea    0x9eb4(%rip),%rax        # 1cc70 <__PRETTY_FUNCTION__.0+0x20>
   12dbc:	48 89 c7             	mov    %rax,%rdi
   12dbf:	e8 9c f7 fe ff       	call   2560 <strdup@plt>
   12dc4:	48 89 c2             	mov    %rax,%rdx
   12dc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12dcb:	48 89 10             	mov    %rdx,(%rax)
   12dce:	48 8d 05 af 9e 00 00 	lea    0x9eaf(%rip),%rax        # 1cc84 <__PRETTY_FUNCTION__.0+0x34>
   12dd5:	48 89 c7             	mov    %rax,%rdi
   12dd8:	e8 83 f7 fe ff       	call   2560 <strdup@plt>
   12ddd:	48 89 c2             	mov    %rax,%rdx
   12de0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12de4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12dec:	be 04 00 00 00       	mov    $0x4,%esi
   12df1:	48 89 c7             	mov    %rax,%rdi
   12df4:	e8 02 54 ff ff       	call   81fb <CreateListNode>
   12df9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12dfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e01:	be 04 00 00 00       	mov    $0x4,%esi
   12e06:	48 89 c7             	mov    %rax,%rdi
   12e09:	e8 ed 53 ff ff       	call   81fb <CreateListNode>
   12e0e:	48 89 c2             	mov    %rax,%rdx
   12e11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e15:	48 89 d6             	mov    %rdx,%rsi
   12e18:	48 89 c7             	mov    %rax,%rdi
   12e1b:	e8 a7 54 ff ff       	call   82c7 <PushListNodeBack>
   12e20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12e24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e28:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12e2f:	00
   12e30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e38:	48 89 10             	mov    %rdx,(%rax)
   12e3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e3f:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%rax)
   12e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e4a:	c9                   	leave
   12e4b:	c3                   	ret

0000000000012e4c <get_register_64bit>:
   12e4c:	f3 0f 1e fa          	endbr64
   12e50:	55                   	push   %rbp
   12e51:	48 89 e5             	mov    %rsp,%rbp
   12e54:	48 83 ec 40          	sub    $0x40,%rsp
   12e58:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12e5c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12e60:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12e64:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12e69:	75 28                	jne    12e93 <get_register_64bit+0x47>
   12e6b:	48 8d 05 7e a1 00 00 	lea    0xa17e(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.8>
   12e72:	48 89 c1             	mov    %rax,%rcx
   12e75:	ba 68 01 00 00       	mov    $0x168,%edx
   12e7a:	48 8d 05 17 9e 00 00 	lea    0x9e17(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12e81:	48 89 c6             	mov    %rax,%rsi
   12e84:	48 8d 05 2a 9f 00 00 	lea    0x9f2a(%rip),%rax        # 1cdb5 <__PRETTY_FUNCTION__.0+0x165>
   12e8b:	48 89 c7             	mov    %rax,%rdi
   12e8e:	e8 3d f5 fe ff       	call   23d0 <__assert_fail@plt>
   12e93:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12e98:	75 28                	jne    12ec2 <get_register_64bit+0x76>
   12e9a:	48 8d 05 4f a1 00 00 	lea    0xa14f(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.8>
   12ea1:	48 89 c1             	mov    %rax,%rcx
   12ea4:	ba 69 01 00 00       	mov    $0x169,%edx
   12ea9:	48 8d 05 e8 9d 00 00 	lea    0x9de8(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12eb0:	48 89 c6             	mov    %rax,%rsi
   12eb3:	48 8d 05 0c 9f 00 00 	lea    0x9f0c(%rip),%rax        # 1cdc6 <__PRETTY_FUNCTION__.0+0x176>
   12eba:	48 89 c7             	mov    %rax,%rdi
   12ebd:	e8 0e f5 fe ff       	call   23d0 <__assert_fail@plt>
   12ec2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ec6:	48 8b 00             	mov    (%rax),%rax
   12ec9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12ecd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12ed4:	00
   12ed5:	e9 90 00 00 00       	jmp    12f6a <get_register_64bit+0x11e>
   12eda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ede:	48 8b 40 08          	mov    0x8(%rax),%rax
   12ee2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eea:	48 8b 00             	mov    (%rax),%rax
   12eed:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12ef1:	48 89 d6             	mov    %rdx,%rsi
   12ef4:	48 89 c7             	mov    %rax,%rdi
   12ef7:	e8 54 f5 fe ff       	call   2450 <strcmp@plt>
   12efc:	85 c0                	test   %eax,%eax
   12efe:	75 56                	jne    12f56 <get_register_64bit+0x10a>
   12f00:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12f05:	75 11                	jne    12f18 <get_register_64bit+0xcc>
   12f07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f0b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f13:	48 89 10             	mov    %rdx,(%rax)
   12f16:	eb 10                	jmp    12f28 <get_register_64bit+0xdc>
   12f18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f1c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f24:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12f28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f2c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12f30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f34:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12f38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12f40:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12f44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f4c:	48 89 10             	mov    %rdx,(%rax)
   12f4f:	b8 00 00 00 00       	mov    $0x0,%eax
   12f54:	eb 4c                	jmp    12fa2 <get_register_64bit+0x156>
   12f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f5a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12f5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f62:	48 8b 40 10          	mov    0x10(%rax),%rax
   12f66:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12f6a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12f6f:	0f 85 65 ff ff ff    	jne    12eda <get_register_64bit+0x8e>
   12f75:	48 8b 05 e4 f0 00 00 	mov    0xf0e4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12f7c:	48 89 c1             	mov    %rax,%rcx
   12f7f:	ba 40 00 00 00       	mov    $0x40,%edx
   12f84:	be 01 00 00 00       	mov    $0x1,%esi
   12f89:	48 8d 05 48 9e 00 00 	lea    0x9e48(%rip),%rax        # 1cdd8 <__PRETTY_FUNCTION__.0+0x188>
   12f90:	48 89 c7             	mov    %rax,%rdi
   12f93:	e8 b8 f5 fe ff       	call   2550 <fwrite@plt>
   12f98:	bf 01 00 00 00       	mov    $0x1,%edi
   12f9d:	e8 9e f5 fe ff       	call   2540 <exit@plt>
   12fa2:	c9                   	leave
   12fa3:	c3                   	ret

0000000000012fa4 <get_register_32bit>:
   12fa4:	f3 0f 1e fa          	endbr64
   12fa8:	55                   	push   %rbp
   12fa9:	48 89 e5             	mov    %rsp,%rbp
   12fac:	48 83 ec 40          	sub    $0x40,%rsp
   12fb0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12fb4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12fb8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12fbc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12fc1:	75 28                	jne    12feb <get_register_32bit+0x47>
   12fc3:	48 8d 05 46 a0 00 00 	lea    0xa046(%rip),%rax        # 1d010 <__PRETTY_FUNCTION__.7>
   12fca:	48 89 c1             	mov    %rax,%rcx
   12fcd:	ba 8e 01 00 00       	mov    $0x18e,%edx
   12fd2:	48 8d 05 bf 9c 00 00 	lea    0x9cbf(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   12fd9:	48 89 c6             	mov    %rax,%rsi
   12fdc:	48 8d 05 d2 9d 00 00 	lea    0x9dd2(%rip),%rax        # 1cdb5 <__PRETTY_FUNCTION__.0+0x165>
   12fe3:	48 89 c7             	mov    %rax,%rdi
   12fe6:	e8 e5 f3 fe ff       	call   23d0 <__assert_fail@plt>
   12feb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12ff0:	75 28                	jne    1301a <get_register_32bit+0x76>
   12ff2:	48 8d 05 17 a0 00 00 	lea    0xa017(%rip),%rax        # 1d010 <__PRETTY_FUNCTION__.7>
   12ff9:	48 89 c1             	mov    %rax,%rcx
   12ffc:	ba 8f 01 00 00       	mov    $0x18f,%edx
   13001:	48 8d 05 90 9c 00 00 	lea    0x9c90(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   13008:	48 89 c6             	mov    %rax,%rsi
   1300b:	48 8d 05 07 9e 00 00 	lea    0x9e07(%rip),%rax        # 1ce19 <__PRETTY_FUNCTION__.0+0x1c9>
   13012:	48 89 c7             	mov    %rax,%rdi
   13015:	e8 b6 f3 fe ff       	call   23d0 <__assert_fail@plt>
   1301a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1301e:	48 8b 00             	mov    (%rax),%rax
   13021:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13025:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1302c:	00
   1302d:	e9 91 00 00 00       	jmp    130c3 <get_register_32bit+0x11f>
   13032:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13036:	48 8b 40 08          	mov    0x8(%rax),%rax
   1303a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1303e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13042:	48 8b 40 08          	mov    0x8(%rax),%rax
   13046:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1304a:	48 89 d6             	mov    %rdx,%rsi
   1304d:	48 89 c7             	mov    %rax,%rdi
   13050:	e8 fb f3 fe ff       	call   2450 <strcmp@plt>
   13055:	85 c0                	test   %eax,%eax
   13057:	75 56                	jne    130af <get_register_32bit+0x10b>
   13059:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1305e:	75 11                	jne    13071 <get_register_32bit+0xcd>
   13060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13064:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13068:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1306c:	48 89 10             	mov    %rdx,(%rax)
   1306f:	eb 10                	jmp    13081 <get_register_32bit+0xdd>
   13071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13075:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13079:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1307d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13081:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13085:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13089:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1308d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13091:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13095:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13099:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1309d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   130a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   130a5:	48 89 10             	mov    %rdx,(%rax)
   130a8:	b8 00 00 00 00       	mov    $0x0,%eax
   130ad:	eb 4c                	jmp    130fb <get_register_32bit+0x157>
   130af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130b3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   130b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130bb:	48 8b 40 10          	mov    0x10(%rax),%rax
   130bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   130c3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   130c8:	0f 85 64 ff ff ff    	jne    13032 <get_register_32bit+0x8e>
   130ce:	48 8b 05 8b ef 00 00 	mov    0xef8b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   130d5:	48 89 c1             	mov    %rax,%rcx
   130d8:	ba 40 00 00 00       	mov    $0x40,%edx
   130dd:	be 01 00 00 00       	mov    $0x1,%esi
   130e2:	48 8d 05 ef 9c 00 00 	lea    0x9cef(%rip),%rax        # 1cdd8 <__PRETTY_FUNCTION__.0+0x188>
   130e9:	48 89 c7             	mov    %rax,%rdi
   130ec:	e8 5f f4 fe ff       	call   2550 <fwrite@plt>
   130f1:	bf 01 00 00 00       	mov    $0x1,%edi
   130f6:	e8 45 f4 fe ff       	call   2540 <exit@plt>
   130fb:	c9                   	leave
   130fc:	c3                   	ret

00000000000130fd <free_reg>:
   130fd:	f3 0f 1e fa          	endbr64
   13101:	55                   	push   %rbp
   13102:	48 89 e5             	mov    %rsp,%rbp
   13105:	48 83 ec 20          	sub    $0x20,%rsp
   13109:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1310d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13111:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13116:	75 28                	jne    13140 <free_reg+0x43>
   13118:	48 8d 05 09 9f 00 00 	lea    0x9f09(%rip),%rax        # 1d028 <__PRETTY_FUNCTION__.6>
   1311f:	48 89 c1             	mov    %rax,%rcx
   13122:	ba b1 01 00 00       	mov    $0x1b1,%edx
   13127:	48 8d 05 6a 9b 00 00 	lea    0x9b6a(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1312e:	48 89 c6             	mov    %rax,%rsi
   13131:	48 8d 05 f0 9c 00 00 	lea    0x9cf0(%rip),%rax        # 1ce28 <__PRETTY_FUNCTION__.0+0x1d8>
   13138:	48 89 c7             	mov    %rax,%rdi
   1313b:	e8 90 f2 fe ff       	call   23d0 <__assert_fail@plt>
   13140:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   13145:	75 28                	jne    1316f <free_reg+0x72>
   13147:	48 8d 05 da 9e 00 00 	lea    0x9eda(%rip),%rax        # 1d028 <__PRETTY_FUNCTION__.6>
   1314e:	48 89 c1             	mov    %rax,%rcx
   13151:	ba b2 01 00 00       	mov    $0x1b2,%edx
   13156:	48 8d 05 3b 9b 00 00 	lea    0x9b3b(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1315d:	48 89 c6             	mov    %rax,%rsi
   13160:	48 8d 05 d3 9c 00 00 	lea    0x9cd3(%rip),%rax        # 1ce3a <__PRETTY_FUNCTION__.0+0x1ea>
   13167:	48 89 c7             	mov    %rax,%rdi
   1316a:	e8 61 f2 fe ff       	call   23d0 <__assert_fail@plt>
   1316f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13173:	48 8b 40 08          	mov    0x8(%rax),%rax
   13177:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1317b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   13182:	00
   13183:	eb 67                	jmp    131ec <free_reg+0xef>
   13185:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13189:	48 8b 40 08          	mov    0x8(%rax),%rax
   1318d:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   13191:	75 45                	jne    131d8 <free_reg+0xdb>
   13193:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13198:	75 12                	jne    131ac <free_reg+0xaf>
   1319a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1319e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   131a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131a6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   131aa:	eb 10                	jmp    131bc <free_reg+0xbf>
   131ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131b0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   131b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131b8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   131bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131c0:	48 8b 10             	mov    (%rax),%rdx
   131c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131c7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   131cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   131d3:	48 89 10             	mov    %rdx,(%rax)
   131d6:	eb 48                	jmp    13220 <free_reg+0x123>
   131d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   131e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131e4:	48 8b 40 10          	mov    0x10(%rax),%rax
   131e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   131ec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   131f1:	75 92                	jne    13185 <free_reg+0x88>
   131f3:	48 8b 05 66 ee 00 00 	mov    0xee66(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   131fa:	48 89 c1             	mov    %rax,%rcx
   131fd:	ba 33 00 00 00       	mov    $0x33,%edx
   13202:	be 01 00 00 00       	mov    $0x1,%esi
   13207:	48 8d 05 3a 9c 00 00 	lea    0x9c3a(%rip),%rax        # 1ce48 <__PRETTY_FUNCTION__.0+0x1f8>
   1320e:	48 89 c7             	mov    %rax,%rdi
   13211:	e8 3a f3 fe ff       	call   2550 <fwrite@plt>
   13216:	bf 01 00 00 00       	mov    $0x1,%edi
   1321b:	e8 20 f3 fe ff       	call   2540 <exit@plt>
   13220:	c9                   	leave
   13221:	c3                   	ret

0000000000013222 <swap_reg_stack>:
   13222:	f3 0f 1e fa          	endbr64
   13226:	55                   	push   %rbp
   13227:	48 89 e5             	mov    %rsp,%rbp
   1322a:	48 83 ec 20          	sub    $0x20,%rsp
   1322e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13232:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13237:	75 28                	jne    13261 <swap_reg_stack+0x3f>
   13239:	48 8d 05 f8 9d 00 00 	lea    0x9df8(%rip),%rax        # 1d038 <__PRETTY_FUNCTION__.5>
   13240:	48 89 c1             	mov    %rax,%rcx
   13243:	ba d0 01 00 00       	mov    $0x1d0,%edx
   13248:	48 8d 05 49 9a 00 00 	lea    0x9a49(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1324f:	48 89 c6             	mov    %rax,%rsi
   13252:	48 8d 05 cf 9b 00 00 	lea    0x9bcf(%rip),%rax        # 1ce28 <__PRETTY_FUNCTION__.0+0x1d8>
   13259:	48 89 c7             	mov    %rax,%rdi
   1325c:	e8 6f f1 fe ff       	call   23d0 <__assert_fail@plt>
   13261:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13265:	48 8b 00             	mov    (%rax),%rax
   13268:	48 85 c0             	test   %rax,%rax
   1326b:	75 28                	jne    13295 <swap_reg_stack+0x73>
   1326d:	48 8d 05 c4 9d 00 00 	lea    0x9dc4(%rip),%rax        # 1d038 <__PRETTY_FUNCTION__.5>
   13274:	48 89 c1             	mov    %rax,%rcx
   13277:	ba d1 01 00 00       	mov    $0x1d1,%edx
   1327c:	48 8d 05 15 9a 00 00 	lea    0x9a15(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   13283:	48 89 c6             	mov    %rax,%rsi
   13286:	48 8d 05 f3 9b 00 00 	lea    0x9bf3(%rip),%rax        # 1ce80 <__PRETTY_FUNCTION__.0+0x230>
   1328d:	48 89 c7             	mov    %rax,%rdi
   13290:	e8 3b f1 fe ff       	call   23d0 <__assert_fail@plt>
   13295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13299:	48 8b 00             	mov    (%rax),%rax
   1329c:	48 8b 40 10          	mov    0x10(%rax),%rax
   132a0:	48 85 c0             	test   %rax,%rax
   132a3:	75 28                	jne    132cd <swap_reg_stack+0xab>
   132a5:	48 8d 05 8c 9d 00 00 	lea    0x9d8c(%rip),%rax        # 1d038 <__PRETTY_FUNCTION__.5>
   132ac:	48 89 c1             	mov    %rax,%rcx
   132af:	ba d2 01 00 00       	mov    $0x1d2,%edx
   132b4:	48 8d 05 dd 99 00 00 	lea    0x99dd(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   132bb:	48 89 c6             	mov    %rax,%rsi
   132be:	48 8d 05 e3 9b 00 00 	lea    0x9be3(%rip),%rax        # 1cea8 <__PRETTY_FUNCTION__.0+0x258>
   132c5:	48 89 c7             	mov    %rax,%rdi
   132c8:	e8 03 f1 fe ff       	call   23d0 <__assert_fail@plt>
   132cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132d1:	48 8b 00             	mov    (%rax),%rax
   132d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   132d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132dc:	48 8b 40 10          	mov    0x10(%rax),%rax
   132e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   132e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   132ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
   132f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   132fc:	48 89 50 10          	mov    %rdx,0x10(%rax)
   13300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13304:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13308:	48 89 10             	mov    %rdx,(%rax)
   1330b:	90                   	nop
   1330c:	c9                   	leave
   1330d:	c3                   	ret

000000000001330e <front_reg_stack>:
   1330e:	f3 0f 1e fa          	endbr64
   13312:	55                   	push   %rbp
   13313:	48 89 e5             	mov    %rsp,%rbp
   13316:	48 83 ec 10          	sub    $0x10,%rsp
   1331a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1331e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13323:	75 28                	jne    1334d <front_reg_stack+0x3f>
   13325:	48 8d 05 24 9d 00 00 	lea    0x9d24(%rip),%rax        # 1d050 <__PRETTY_FUNCTION__.4>
   1332c:	48 89 c1             	mov    %rax,%rcx
   1332f:	ba df 01 00 00       	mov    $0x1df,%edx
   13334:	48 8d 05 5d 99 00 00 	lea    0x995d(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1333b:	48 89 c6             	mov    %rax,%rsi
   1333e:	48 8d 05 e3 9a 00 00 	lea    0x9ae3(%rip),%rax        # 1ce28 <__PRETTY_FUNCTION__.0+0x1d8>
   13345:	48 89 c7             	mov    %rax,%rdi
   13348:	e8 83 f0 fe ff       	call   23d0 <__assert_fail@plt>
   1334d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13351:	48 8b 00             	mov    (%rax),%rax
   13354:	48 8b 40 08          	mov    0x8(%rax),%rax
   13358:	c9                   	leave
   13359:	c3                   	ret

000000000001335a <get_free_reg>:
   1335a:	f3 0f 1e fa          	endbr64
   1335e:	55                   	push   %rbp
   1335f:	48 89 e5             	mov    %rsp,%rbp
   13362:	48 83 ec 20          	sub    $0x20,%rsp
   13366:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1336a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1336e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13373:	75 28                	jne    1339d <get_free_reg+0x43>
   13375:	48 8d 05 e4 9c 00 00 	lea    0x9ce4(%rip),%rax        # 1d060 <__PRETTY_FUNCTION__.3>
   1337c:	48 89 c1             	mov    %rax,%rcx
   1337f:	ba e7 01 00 00       	mov    $0x1e7,%edx
   13384:	48 8d 05 0d 99 00 00 	lea    0x990d(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1338b:	48 89 c6             	mov    %rax,%rsi
   1338e:	48 8d 05 93 9a 00 00 	lea    0x9a93(%rip),%rax        # 1ce28 <__PRETTY_FUNCTION__.0+0x1d8>
   13395:	48 89 c7             	mov    %rax,%rdi
   13398:	e8 33 f0 fe ff       	call   23d0 <__assert_fail@plt>
   1339d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133a1:	48 8b 00             	mov    (%rax),%rax
   133a4:	48 85 c0             	test   %rax,%rax
   133a7:	74 4b                	je     133f4 <get_free_reg+0x9a>
   133a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133ad:	48 8b 00             	mov    (%rax),%rax
   133b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   133b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133b8:	48 8b 00             	mov    (%rax),%rax
   133bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   133bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133c3:	48 89 10             	mov    %rdx,(%rax)
   133c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
   133ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   133d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   133de:	48 89 50 08          	mov    %rdx,0x8(%rax)
   133e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133e6:	48 8b 40 08          	mov    0x8(%rax),%rax
   133ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   133ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133f2:	eb 05                	jmp    133f9 <get_free_reg+0x9f>
   133f4:	b8 00 00 00 00       	mov    $0x0,%eax
   133f9:	c9                   	leave
   133fa:	c3                   	ret

00000000000133fb <get_num_registers_free>:
   133fb:	f3 0f 1e fa          	endbr64
   133ff:	55                   	push   %rbp
   13400:	48 89 e5             	mov    %rsp,%rbp
   13403:	48 83 ec 10          	sub    $0x10,%rsp
   13407:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1340b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1340f:	48 8b 00             	mov    (%rax),%rax
   13412:	48 89 c7             	mov    %rax,%rdi
   13415:	e8 7d 51 ff ff       	call   8597 <ListLength>
   1341a:	c9                   	leave
   1341b:	c3                   	ret

000000000001341c <get_num_registers_alloced>:
   1341c:	f3 0f 1e fa          	endbr64
   13420:	55                   	push   %rbp
   13421:	48 89 e5             	mov    %rsp,%rbp
   13424:	48 83 ec 10          	sub    $0x10,%rsp
   13428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1342c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13430:	48 8b 40 08          	mov    0x8(%rax),%rax
   13434:	48 89 c7             	mov    %rax,%rdi
   13437:	e8 5b 51 ff ff       	call   8597 <ListLength>
   1343c:	c9                   	leave
   1343d:	c3                   	ret

000000000001343e <free_reg_stack>:
   1343e:	f3 0f 1e fa          	endbr64
   13442:	55                   	push   %rbp
   13443:	48 89 e5             	mov    %rsp,%rbp
   13446:	48 83 ec 20          	sub    $0x20,%rsp
   1344a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1344e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13453:	75 28                	jne    1347d <free_reg_stack+0x3f>
   13455:	48 8d 05 14 9c 00 00 	lea    0x9c14(%rip),%rax        # 1d070 <__PRETTY_FUNCTION__.2>
   1345c:	48 89 c1             	mov    %rax,%rcx
   1345f:	ba 0a 02 00 00       	mov    $0x20a,%edx
   13464:	48 8d 05 2d 98 00 00 	lea    0x982d(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1346b:	48 89 c6             	mov    %rax,%rsi
   1346e:	48 8d 05 b3 99 00 00 	lea    0x99b3(%rip),%rax        # 1ce28 <__PRETTY_FUNCTION__.0+0x1d8>
   13475:	48 89 c7             	mov    %rax,%rdi
   13478:	e8 53 ef fe ff       	call   23d0 <__assert_fail@plt>
   1347d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13481:	48 8b 40 08          	mov    0x8(%rax),%rax
   13485:	48 89 c7             	mov    %rax,%rdi
   13488:	e8 0a 51 ff ff       	call   8597 <ListLength>
   1348d:	85 c0                	test   %eax,%eax
   1348f:	0f 84 8f 00 00 00    	je     13524 <free_reg_stack+0xe6>
   13495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13499:	48 8b 40 08          	mov    0x8(%rax),%rax
   1349d:	48 89 c7             	mov    %rax,%rdi
   134a0:	e8 f2 50 ff ff       	call   8597 <ListLength>
   134a5:	89 c2                	mov    %eax,%edx
   134a7:	48 8b 05 b2 eb 00 00 	mov    0xebb2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   134ae:	48 8d 0d 1b 9a 00 00 	lea    0x9a1b(%rip),%rcx        # 1ced0 <__PRETTY_FUNCTION__.0+0x280>
   134b5:	48 89 ce             	mov    %rcx,%rsi
   134b8:	48 89 c7             	mov    %rax,%rdi
   134bb:	b8 00 00 00 00       	mov    $0x0,%eax
   134c0:	e8 ab ef fe ff       	call   2470 <fprintf@plt>
   134c5:	eb 5d                	jmp    13524 <free_reg_stack+0xe6>
   134c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134cb:	48 8b 00             	mov    (%rax),%rax
   134ce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   134d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   134d6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   134da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134de:	48 89 10             	mov    %rdx,(%rax)
   134e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   134e5:	48 8b 40 08          	mov    0x8(%rax),%rax
   134e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   134ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134f1:	48 8b 00             	mov    (%rax),%rax
   134f4:	48 89 c7             	mov    %rax,%rdi
   134f7:	e8 f4 ed fe ff       	call   22f0 <free@plt>
   134fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13500:	48 8b 40 08          	mov    0x8(%rax),%rax
   13504:	48 89 c7             	mov    %rax,%rdi
   13507:	e8 e4 ed fe ff       	call   22f0 <free@plt>
   1350c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13510:	48 89 c7             	mov    %rax,%rdi
   13513:	e8 d8 ed fe ff       	call   22f0 <free@plt>
   13518:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1351c:	48 89 c7             	mov    %rax,%rdi
   1351f:	e8 cc ed fe ff       	call   22f0 <free@plt>
   13524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13528:	48 8b 00             	mov    (%rax),%rax
   1352b:	48 85 c0             	test   %rax,%rax
   1352e:	75 97                	jne    134c7 <free_reg_stack+0x89>
   13530:	eb 5f                	jmp    13591 <free_reg_stack+0x153>
   13532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13536:	48 8b 40 08          	mov    0x8(%rax),%rax
   1353a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1353e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13542:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1354a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1354e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13552:	48 8b 40 08          	mov    0x8(%rax),%rax
   13556:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1355a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1355e:	48 8b 00             	mov    (%rax),%rax
   13561:	48 89 c7             	mov    %rax,%rdi
   13564:	e8 87 ed fe ff       	call   22f0 <free@plt>
   13569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1356d:	48 8b 40 08          	mov    0x8(%rax),%rax
   13571:	48 89 c7             	mov    %rax,%rdi
   13574:	e8 77 ed fe ff       	call   22f0 <free@plt>
   13579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1357d:	48 89 c7             	mov    %rax,%rdi
   13580:	e8 6b ed fe ff       	call   22f0 <free@plt>
   13585:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13589:	48 89 c7             	mov    %rax,%rdi
   1358c:	e8 5f ed fe ff       	call   22f0 <free@plt>
   13591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13595:	48 8b 40 08          	mov    0x8(%rax),%rax
   13599:	48 85 c0             	test   %rax,%rax
   1359c:	75 94                	jne    13532 <free_reg_stack+0xf4>
   1359e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135a2:	48 89 c7             	mov    %rax,%rdi
   135a5:	e8 46 ed fe ff       	call   22f0 <free@plt>
   135aa:	90                   	nop
   135ab:	c9                   	leave
   135ac:	c3                   	ret

00000000000135ad <init_stackscope>:
   135ad:	f3 0f 1e fa          	endbr64
   135b1:	55                   	push   %rbp
   135b2:	48 89 e5             	mov    %rsp,%rbp
   135b5:	48 83 ec 10          	sub    $0x10,%rsp
   135b9:	bf 30 00 00 00       	mov    $0x30,%edi
   135be:	e8 0d ef fe ff       	call   24d0 <malloc@plt>
   135c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   135c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135cb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   135d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135d5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   135dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135e0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   135e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   135f2:	00
   135f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135f7:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   135fe:	00
   135ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13603:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1360a:	00
   1360b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1360f:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   13616:	00
   13617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1361b:	c9                   	leave
   1361c:	c3                   	ret

000000000001361d <stackscope_find_t>:
   1361d:	f3 0f 1e fa          	endbr64
   13621:	55                   	push   %rbp
   13622:	48 89 e5             	mov    %rsp,%rbp
   13625:	48 83 ec 20          	sub    $0x20,%rsp
   13629:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1362d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13635:	48 8b 40 10          	mov    0x10(%rax),%rax
   13639:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1363d:	eb 39                	jmp    13678 <stackscope_find_t+0x5b>
   1363f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13643:	48 8b 40 08          	mov    0x8(%rax),%rax
   13647:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1364b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1364f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13653:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13657:	48 89 d6             	mov    %rdx,%rsi
   1365a:	48 89 c7             	mov    %rax,%rdi
   1365d:	e8 ee ed fe ff       	call   2450 <strcmp@plt>
   13662:	85 c0                	test   %eax,%eax
   13664:	75 06                	jne    1366c <stackscope_find_t+0x4f>
   13666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1366a:	eb 18                	jmp    13684 <stackscope_find_t+0x67>
   1366c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13670:	48 8b 40 10          	mov    0x10(%rax),%rax
   13674:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13678:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1367d:	75 c0                	jne    1363f <stackscope_find_t+0x22>
   1367f:	b8 00 00 00 00       	mov    $0x0,%eax
   13684:	c9                   	leave
   13685:	c3                   	ret

0000000000013686 <stackscope_find_x>:
   13686:	f3 0f 1e fa          	endbr64
   1368a:	55                   	push   %rbp
   1368b:	48 89 e5             	mov    %rsp,%rbp
   1368e:	48 83 ec 20          	sub    $0x20,%rsp
   13692:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13696:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1369a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1369e:	48 8b 40 18          	mov    0x18(%rax),%rax
   136a2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   136a6:	eb 39                	jmp    136e1 <stackscope_find_x+0x5b>
   136a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   136ac:	48 8b 40 08          	mov    0x8(%rax),%rax
   136b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   136b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136b8:	48 8b 40 08          	mov    0x8(%rax),%rax
   136bc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   136c0:	48 89 d6             	mov    %rdx,%rsi
   136c3:	48 89 c7             	mov    %rax,%rdi
   136c6:	e8 85 ed fe ff       	call   2450 <strcmp@plt>
   136cb:	85 c0                	test   %eax,%eax
   136cd:	75 06                	jne    136d5 <stackscope_find_x+0x4f>
   136cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136d3:	eb 18                	jmp    136ed <stackscope_find_x+0x67>
   136d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   136d9:	48 8b 40 10          	mov    0x10(%rax),%rax
   136dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   136e1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   136e6:	75 c0                	jne    136a8 <stackscope_find_x+0x22>
   136e8:	b8 00 00 00 00       	mov    $0x0,%eax
   136ed:	c9                   	leave
   136ee:	c3                   	ret

00000000000136ef <stackscope_find_z>:
   136ef:	f3 0f 1e fa          	endbr64
   136f3:	55                   	push   %rbp
   136f4:	48 89 e5             	mov    %rsp,%rbp
   136f7:	48 83 ec 20          	sub    $0x20,%rsp
   136fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13703:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13707:	48 8b 40 20          	mov    0x20(%rax),%rax
   1370b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1370f:	eb 39                	jmp    1374a <stackscope_find_z+0x5b>
   13711:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13715:	48 8b 40 08          	mov    0x8(%rax),%rax
   13719:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1371d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13721:	48 8b 40 08          	mov    0x8(%rax),%rax
   13725:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13729:	48 89 d6             	mov    %rdx,%rsi
   1372c:	48 89 c7             	mov    %rax,%rdi
   1372f:	e8 1c ed fe ff       	call   2450 <strcmp@plt>
   13734:	85 c0                	test   %eax,%eax
   13736:	75 06                	jne    1373e <stackscope_find_z+0x4f>
   13738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1373c:	eb 18                	jmp    13756 <stackscope_find_z+0x67>
   1373e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13742:	48 8b 40 10          	mov    0x10(%rax),%rax
   13746:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1374a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1374f:	75 c0                	jne    13711 <stackscope_find_z+0x22>
   13751:	b8 00 00 00 00       	mov    $0x0,%eax
   13756:	c9                   	leave
   13757:	c3                   	ret

0000000000013758 <free_stackscope>:
   13758:	f3 0f 1e fa          	endbr64
   1375c:	55                   	push   %rbp
   1375d:	48 89 e5             	mov    %rsp,%rbp
   13760:	48 83 ec 20          	sub    $0x20,%rsp
   13764:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13768:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1376f:	00
   13770:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13775:	74 48                	je     137bf <free_stackscope+0x67>
   13777:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1377b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1377f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13783:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13787:	48 8b 40 10          	mov    0x10(%rax),%rax
   1378b:	48 89 c7             	mov    %rax,%rdi
   1378e:	e8 9f 00 00 00       	call   13832 <free_stackscope_list>
   13793:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13797:	48 8b 40 18          	mov    0x18(%rax),%rax
   1379b:	48 89 c7             	mov    %rax,%rdi
   1379e:	e8 8f 00 00 00       	call   13832 <free_stackscope_list>
   137a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137a7:	48 8b 40 20          	mov    0x20(%rax),%rax
   137ab:	48 89 c7             	mov    %rax,%rdi
   137ae:	e8 7f 00 00 00       	call   13832 <free_stackscope_list>
   137b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137b7:	48 89 c7             	mov    %rax,%rdi
   137ba:	e8 31 eb fe ff       	call   22f0 <free@plt>
   137bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137c3:	c9                   	leave
   137c4:	c3                   	ret

00000000000137c5 <free_all_stackscopes>:
   137c5:	f3 0f 1e fa          	endbr64
   137c9:	55                   	push   %rbp
   137ca:	48 89 e5             	mov    %rsp,%rbp
   137cd:	48 83 ec 20          	sub    $0x20,%rsp
   137d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   137d5:	eb 50                	jmp    13827 <free_all_stackscopes+0x62>
   137d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137db:	48 8b 40 28          	mov    0x28(%rax),%rax
   137df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   137e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137e7:	48 8b 40 10          	mov    0x10(%rax),%rax
   137eb:	48 89 c7             	mov    %rax,%rdi
   137ee:	e8 3f 00 00 00       	call   13832 <free_stackscope_list>
   137f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137f7:	48 8b 40 18          	mov    0x18(%rax),%rax
   137fb:	48 89 c7             	mov    %rax,%rdi
   137fe:	e8 2f 00 00 00       	call   13832 <free_stackscope_list>
   13803:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13807:	48 8b 40 20          	mov    0x20(%rax),%rax
   1380b:	48 89 c7             	mov    %rax,%rdi
   1380e:	e8 1f 00 00 00       	call   13832 <free_stackscope_list>
   13813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13817:	48 89 c7             	mov    %rax,%rdi
   1381a:	e8 d1 ea fe ff       	call   22f0 <free@plt>
   1381f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13823:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13827:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1382c:	75 a9                	jne    137d7 <free_all_stackscopes+0x12>
   1382e:	90                   	nop
   1382f:	90                   	nop
   13830:	c9                   	leave
   13831:	c3                   	ret

0000000000013832 <free_stackscope_list>:
   13832:	f3 0f 1e fa          	endbr64
   13836:	55                   	push   %rbp
   13837:	48 89 e5             	mov    %rsp,%rbp
   1383a:	48 83 ec 20          	sub    $0x20,%rsp
   1383e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13842:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13846:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1384a:	eb 1c                	jmp    13868 <free_stackscope_list+0x36>
   1384c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13850:	48 8b 40 08          	mov    0x8(%rax),%rax
   13854:	48 89 c7             	mov    %rax,%rdi
   13857:	e8 a5 00 00 00       	call   13901 <destroy_stack_node>
   1385c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13860:	48 8b 40 10          	mov    0x10(%rax),%rax
   13864:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13868:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1386d:	75 dd                	jne    1384c <free_stackscope_list+0x1a>
   1386f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13873:	48 89 c7             	mov    %rax,%rdi
   13876:	e8 1b 4c ff ff       	call   8496 <DestroyList>
   1387b:	90                   	nop
   1387c:	c9                   	leave
   1387d:	c3                   	ret

000000000001387e <init_stack_node>:
   1387e:	f3 0f 1e fa          	endbr64
   13882:	55                   	push   %rbp
   13883:	48 89 e5             	mov    %rsp,%rbp
   13886:	48 83 ec 20          	sub    $0x20,%rsp
   1388a:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1388d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13891:	89 55 e8             	mov    %edx,-0x18(%rbp)
   13894:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   13899:	75 28                	jne    138c3 <init_stack_node+0x45>
   1389b:	48 8d 05 de 97 00 00 	lea    0x97de(%rip),%rax        # 1d080 <__PRETTY_FUNCTION__.1>
   138a2:	48 89 c1             	mov    %rax,%rcx
   138a5:	ba b9 02 00 00       	mov    $0x2b9,%edx
   138aa:	48 8d 05 e7 93 00 00 	lea    0x93e7(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   138b1:	48 89 c6             	mov    %rax,%rsi
   138b4:	48 8d 05 4c 96 00 00 	lea    0x964c(%rip),%rax        # 1cf07 <__PRETTY_FUNCTION__.0+0x2b7>
   138bb:	48 89 c7             	mov    %rax,%rdi
   138be:	e8 0d eb fe ff       	call   23d0 <__assert_fail@plt>
   138c3:	bf 18 00 00 00       	mov    $0x18,%edi
   138c8:	e8 03 ec fe ff       	call   24d0 <malloc@plt>
   138cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   138d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138d5:	8b 55 ec             	mov    -0x14(%rbp),%edx
   138d8:	89 10                	mov    %edx,(%rax)
   138da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   138de:	48 89 c7             	mov    %rax,%rdi
   138e1:	e8 7a ec fe ff       	call   2560 <strdup@plt>
   138e6:	48 89 c2             	mov    %rax,%rdx
   138e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
   138f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138f5:	8b 55 e8             	mov    -0x18(%rbp),%edx
   138f8:	89 50 10             	mov    %edx,0x10(%rax)
   138fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ff:	c9                   	leave
   13900:	c3                   	ret

0000000000013901 <destroy_stack_node>:
   13901:	f3 0f 1e fa          	endbr64
   13905:	55                   	push   %rbp
   13906:	48 89 e5             	mov    %rsp,%rbp
   13909:	48 83 ec 10          	sub    $0x10,%rsp
   1390d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13911:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13916:	75 28                	jne    13940 <destroy_stack_node+0x3f>
   13918:	48 8d 05 71 97 00 00 	lea    0x9771(%rip),%rax        # 1d090 <__PRETTY_FUNCTION__.0>
   1391f:	48 89 c1             	mov    %rax,%rcx
   13922:	ba c7 02 00 00       	mov    $0x2c7,%edx
   13927:	48 8d 05 6a 93 00 00 	lea    0x936a(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   1392e:	48 89 c6             	mov    %rax,%rsi
   13931:	48 8d 05 dd 95 00 00 	lea    0x95dd(%rip),%rax        # 1cf15 <__PRETTY_FUNCTION__.0+0x2c5>
   13938:	48 89 c7             	mov    %rax,%rdi
   1393b:	e8 90 ea fe ff       	call   23d0 <__assert_fail@plt>
   13940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13944:	48 8b 40 08          	mov    0x8(%rax),%rax
   13948:	48 85 c0             	test   %rax,%rax
   1394b:	75 28                	jne    13975 <destroy_stack_node+0x74>
   1394d:	48 8d 05 3c 97 00 00 	lea    0x973c(%rip),%rax        # 1d090 <__PRETTY_FUNCTION__.0>
   13954:	48 89 c1             	mov    %rax,%rcx
   13957:	ba c8 02 00 00       	mov    $0x2c8,%edx
   1395c:	48 8d 05 35 93 00 00 	lea    0x9335(%rip),%rax        # 1cc98 <__PRETTY_FUNCTION__.0+0x48>
   13963:	48 89 c6             	mov    %rax,%rsi
   13966:	48 8d 05 b5 95 00 00 	lea    0x95b5(%rip),%rax        # 1cf22 <__PRETTY_FUNCTION__.0+0x2d2>
   1396d:	48 89 c7             	mov    %rax,%rdi
   13970:	e8 5b ea fe ff       	call   23d0 <__assert_fail@plt>
   13975:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13979:	48 8b 40 08          	mov    0x8(%rax),%rax
   1397d:	48 89 c7             	mov    %rax,%rdi
   13980:	e8 6b e9 fe ff       	call   22f0 <free@plt>
   13985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13989:	48 89 c7             	mov    %rax,%rdi
   1398c:	e8 5f e9 fe ff       	call   22f0 <free@plt>
   13991:	90                   	nop
   13992:	c9                   	leave
   13993:	c3                   	ret

0000000000013994 <build_expr_tree>:
   13994:	f3 0f 1e fa          	endbr64
   13998:	55                   	push   %rbp
   13999:	48 89 e5             	mov    %rsp,%rbp
   1399c:	48 83 ec 20          	sub    $0x20,%rsp
   139a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   139a4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   139a9:	75 28                	jne    139d3 <build_expr_tree+0x3f>
   139ab:	48 8d 05 4e 9c 00 00 	lea    0x9c4e(%rip),%rax        # 1d600 <__PRETTY_FUNCTION__.11>
   139b2:	48 89 c1             	mov    %rax,%rcx
   139b5:	ba 2c 00 00 00       	mov    $0x2c,%edx
   139ba:	48 8d 05 ef 96 00 00 	lea    0x96ef(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   139c1:	48 89 c6             	mov    %rax,%rsi
   139c4:	48 8d 05 1d 97 00 00 	lea    0x971d(%rip),%rax        # 1d0e8 <__PRETTY_FUNCTION__.0+0x58>
   139cb:	48 89 c7             	mov    %rax,%rdi
   139ce:	e8 fd e9 fe ff       	call   23d0 <__assert_fail@plt>
   139d3:	bf 28 00 00 00       	mov    $0x28,%edi
   139d8:	e8 f3 ea fe ff       	call   24d0 <malloc@plt>
   139dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   139e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   139e9:	48 89 50 18          	mov    %rdx,0x18(%rax)
   139ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139f1:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   139f8:	00
   139f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139fd:	8b 40 04             	mov    0x4(%rax),%eax
   13a00:	83 f8 09             	cmp    $0x9,%eax
   13a03:	0f 87 3a 01 00 00    	ja     13b43 <build_expr_tree+0x1af>
   13a09:	89 c0                	mov    %eax,%eax
   13a0b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   13a12:	00
   13a13:	48 8d 05 36 97 00 00 	lea    0x9736(%rip),%rax        # 1d150 <__PRETTY_FUNCTION__.0+0xc0>
   13a1a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   13a1d:	48 98                	cltq
   13a1f:	48 8d 15 2a 97 00 00 	lea    0x972a(%rip),%rdx        # 1d150 <__PRETTY_FUNCTION__.0+0xc0>
   13a26:	48 01 d0             	add    %rdx,%rax
   13a29:	3e ff e0             	notrack jmp *%rax
   13a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a30:	48 8b 40 10          	mov    0x10(%rax),%rax
   13a34:	48 89 c7             	mov    %rax,%rdi
   13a37:	e8 58 ff ff ff       	call   13994 <build_expr_tree>
   13a3c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a40:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a48:	48 8b 40 18          	mov    0x18(%rax),%rax
   13a4c:	48 89 c7             	mov    %rax,%rdi
   13a4f:	e8 40 ff ff ff       	call   13994 <build_expr_tree>
   13a54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a58:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13a5c:	e9 11 01 00 00       	jmp    13b72 <build_expr_tree+0x1de>
   13a61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a65:	48 8b 40 10          	mov    0x10(%rax),%rax
   13a69:	48 89 c7             	mov    %rax,%rdi
   13a6c:	e8 23 ff ff ff       	call   13994 <build_expr_tree>
   13a71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a75:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13a79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a7d:	48 8b 40 18          	mov    0x18(%rax),%rax
   13a81:	48 89 c7             	mov    %rax,%rdi
   13a84:	e8 0b ff ff ff       	call   13994 <build_expr_tree>
   13a89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a8d:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13a91:	e9 dc 00 00 00       	jmp    13b72 <build_expr_tree+0x1de>
   13a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a9a:	48 8b 40 08          	mov    0x8(%rax),%rax
   13a9e:	48 89 c7             	mov    %rax,%rdi
   13aa1:	e8 ee fe ff ff       	call   13994 <build_expr_tree>
   13aa6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13aaa:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ab2:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13ab9:	00
   13aba:	e9 b3 00 00 00       	jmp    13b72 <build_expr_tree+0x1de>
   13abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ac3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13aca:	00
   13acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13acf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13ad6:	00
   13ad7:	e9 96 00 00 00       	jmp    13b72 <build_expr_tree+0x1de>
   13adc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ae0:	48 8b 40 10          	mov    0x10(%rax),%rax
   13ae4:	48 89 c7             	mov    %rax,%rdi
   13ae7:	e8 a8 fe ff ff       	call   13994 <build_expr_tree>
   13aec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13af0:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13af4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13af8:	48 8b 40 18          	mov    0x18(%rax),%rax
   13afc:	48 85 c0             	test   %rax,%rax
   13aff:	75 28                	jne    13b29 <build_expr_tree+0x195>
   13b01:	48 8d 05 f8 9a 00 00 	lea    0x9af8(%rip),%rax        # 1d600 <__PRETTY_FUNCTION__.11>
   13b08:	48 89 c1             	mov    %rax,%rcx
   13b0b:	ba 4f 00 00 00       	mov    $0x4f,%edx
   13b10:	48 8d 05 99 95 00 00 	lea    0x9599(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   13b17:	48 89 c6             	mov    %rax,%rsi
   13b1a:	48 8d 05 d7 95 00 00 	lea    0x95d7(%rip),%rax        # 1d0f8 <__PRETTY_FUNCTION__.0+0x68>
   13b21:	48 89 c7             	mov    %rax,%rdi
   13b24:	e8 a7 e8 fe ff       	call   23d0 <__assert_fail@plt>
   13b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b2d:	48 8b 40 18          	mov    0x18(%rax),%rax
   13b31:	48 89 c7             	mov    %rax,%rdi
   13b34:	e8 5b fe ff ff       	call   13994 <build_expr_tree>
   13b39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b3d:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13b41:	eb 2f                	jmp    13b72 <build_expr_tree+0x1de>
   13b43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b47:	8b 50 04             	mov    0x4(%rax),%edx
   13b4a:	48 8b 05 0f e5 00 00 	mov    0xe50f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   13b51:	48 8d 0d d0 95 00 00 	lea    0x95d0(%rip),%rcx        # 1d128 <__PRETTY_FUNCTION__.0+0x98>
   13b58:	48 89 ce             	mov    %rcx,%rsi
   13b5b:	48 89 c7             	mov    %rax,%rdi
   13b5e:	b8 00 00 00 00       	mov    $0x0,%eax
   13b63:	e8 08 e9 fe ff       	call   2470 <fprintf@plt>
   13b68:	bf 01 00 00 00       	mov    $0x1,%edi
   13b6d:	e8 ce e9 fe ff       	call   2540 <exit@plt>
   13b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b76:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b7a:	48 85 c0             	test   %rax,%rax
   13b7d:	74 23                	je     13ba2 <build_expr_tree+0x20e>
   13b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b83:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b87:	48 89 c7             	mov    %rax,%rdi
   13b8a:	e8 41 05 00 00       	call   140d0 <expr_tree_is_leaf>
   13b8f:	83 f8 01             	cmp    $0x1,%eax
   13b92:	75 0e                	jne    13ba2 <build_expr_tree+0x20e>
   13b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b98:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b9c:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   13ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ba6:	48 8b 40 08          	mov    0x8(%rax),%rax
   13baa:	48 85 c0             	test   %rax,%rax
   13bad:	75 1c                	jne    13bcb <build_expr_tree+0x237>
   13baf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bb3:	48 8b 40 10          	mov    0x10(%rax),%rax
   13bb7:	48 85 c0             	test   %rax,%rax
   13bba:	75 0f                	jne    13bcb <build_expr_tree+0x237>
   13bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bc0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   13bc6:	e9 a8 00 00 00       	jmp    13c73 <build_expr_tree+0x2df>
   13bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bcf:	48 8b 40 08          	mov    0x8(%rax),%rax
   13bd3:	48 85 c0             	test   %rax,%rax
   13bd6:	75 15                	jne    13bed <build_expr_tree+0x259>
   13bd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bdc:	48 8b 40 10          	mov    0x10(%rax),%rax
   13be0:	8b 10                	mov    (%rax),%edx
   13be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13be6:	89 10                	mov    %edx,(%rax)
   13be8:	e9 86 00 00 00       	jmp    13c73 <build_expr_tree+0x2df>
   13bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bf1:	48 8b 40 10          	mov    0x10(%rax),%rax
   13bf5:	48 85 c0             	test   %rax,%rax
   13bf8:	75 12                	jne    13c0c <build_expr_tree+0x278>
   13bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bfe:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c02:	8b 10                	mov    (%rax),%edx
   13c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c08:	89 10                	mov    %edx,(%rax)
   13c0a:	eb 67                	jmp    13c73 <build_expr_tree+0x2df>
   13c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c10:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c14:	8b 10                	mov    (%rax),%edx
   13c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c1a:	48 8b 40 10          	mov    0x10(%rax),%rax
   13c1e:	8b 00                	mov    (%rax),%eax
   13c20:	39 c2                	cmp    %eax,%edx
   13c22:	7e 12                	jle    13c36 <build_expr_tree+0x2a2>
   13c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c28:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c2c:	8b 10                	mov    (%rax),%edx
   13c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c32:	89 10                	mov    %edx,(%rax)
   13c34:	eb 3d                	jmp    13c73 <build_expr_tree+0x2df>
   13c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c3a:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c3e:	8b 10                	mov    (%rax),%edx
   13c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c44:	48 8b 40 10          	mov    0x10(%rax),%rax
   13c48:	8b 00                	mov    (%rax),%eax
   13c4a:	39 c2                	cmp    %eax,%edx
   13c4c:	7d 12                	jge    13c60 <build_expr_tree+0x2cc>
   13c4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c52:	48 8b 40 10          	mov    0x10(%rax),%rax
   13c56:	8b 10                	mov    (%rax),%edx
   13c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c5c:	89 10                	mov    %edx,(%rax)
   13c5e:	eb 13                	jmp    13c73 <build_expr_tree+0x2df>
   13c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c64:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c68:	8b 00                	mov    (%rax),%eax
   13c6a:	8d 50 01             	lea    0x1(%rax),%edx
   13c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c71:	89 10                	mov    %edx,(%rax)
   13c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c77:	c9                   	leave
   13c78:	c3                   	ret

0000000000013c79 <gencode_expr_tree>:
   13c79:	f3 0f 1e fa          	endbr64
   13c7d:	55                   	push   %rbp
   13c7e:	48 89 e5             	mov    %rsp,%rbp
   13c81:	48 83 ec 60          	sub    $0x60,%rsp
   13c85:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   13c89:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   13c8d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   13c91:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   13c95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13c9c:	00 00
   13c9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13ca2:	31 c0                	xor    %eax,%eax
   13ca4:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   13ca9:	75 28                	jne    13cd3 <gencode_expr_tree+0x5a>
   13cab:	48 8d 05 5e 99 00 00 	lea    0x995e(%rip),%rax        # 1d610 <__PRETTY_FUNCTION__.10>
   13cb2:	48 89 c1             	mov    %rax,%rcx
   13cb5:	ba 80 00 00 00       	mov    $0x80,%edx
   13cba:	48 8d 05 ef 93 00 00 	lea    0x93ef(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   13cc1:	48 89 c6             	mov    %rax,%rsi
   13cc4:	48 8d 05 ad 94 00 00 	lea    0x94ad(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   13ccb:	48 89 c7             	mov    %rax,%rdi
   13cce:	e8 fd e6 fe ff       	call   23d0 <__assert_fail@plt>
   13cd3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cd7:	48 8b 40 18          	mov    0x18(%rax),%rax
   13cdb:	48 85 c0             	test   %rax,%rax
   13cde:	75 28                	jne    13d08 <gencode_expr_tree+0x8f>
   13ce0:	48 8d 05 29 99 00 00 	lea    0x9929(%rip),%rax        # 1d610 <__PRETTY_FUNCTION__.10>
   13ce7:	48 89 c1             	mov    %rax,%rcx
   13cea:	ba 81 00 00 00       	mov    $0x81,%edx
   13cef:	48 8d 05 ba 93 00 00 	lea    0x93ba(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   13cf6:	48 89 c6             	mov    %rax,%rsi
   13cf9:	48 8d 05 85 94 00 00 	lea    0x9485(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   13d00:	48 89 c7             	mov    %rax,%rdi
   13d03:	e8 c8 e6 fe ff       	call   23d0 <__assert_fail@plt>
   13d08:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d0c:	48 8b 40 18          	mov    0x18(%rax),%rax
   13d10:	8b 50 04             	mov    0x4(%rax),%edx
   13d13:	48 8b 05 46 e3 00 00 	mov    0xe346(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   13d1a:	48 8d 0d 77 94 00 00 	lea    0x9477(%rip),%rcx        # 1d198 <__PRETTY_FUNCTION__.0+0x108>
   13d21:	48 89 ce             	mov    %rcx,%rsi
   13d24:	48 89 c7             	mov    %rax,%rdi
   13d27:	b8 00 00 00 00       	mov    $0x0,%eax
   13d2c:	e8 3f e7 fe ff       	call   2470 <fprintf@plt>
   13d31:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d35:	48 8b 40 20          	mov    0x20(%rax),%rax
   13d39:	48 85 c0             	test   %rax,%rax
   13d3c:	74 57                	je     13d95 <gencode_expr_tree+0x11c>
   13d3e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13d42:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13d46:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d4a:	48 8b 40 20          	mov    0x20(%rax),%rax
   13d4e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13d52:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13d56:	49 89 c8             	mov    %rcx,%r8
   13d59:	48 89 d1             	mov    %rdx,%rcx
   13d5c:	48 8d 15 5f 94 00 00 	lea    0x945f(%rip),%rdx        # 1d1c2 <__PRETTY_FUNCTION__.0+0x132>
   13d63:	be 32 00 00 00       	mov    $0x32,%esi
   13d68:	48 89 c7             	mov    %rax,%rdi
   13d6b:	b8 00 00 00 00       	mov    $0x0,%eax
   13d70:	e8 3b e6 fe ff       	call   23b0 <snprintf@plt>
   13d75:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13d79:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13d7d:	48 89 d6             	mov    %rdx,%rsi
   13d80:	48 89 c7             	mov    %rax,%rdi
   13d83:	e8 3e b7 ff ff       	call   f4c6 <add_inst>
   13d88:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13d8c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13d90:	e9 41 01 00 00       	jmp    13ed6 <gencode_expr_tree+0x25d>
   13d95:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d99:	48 8b 40 18          	mov    0x18(%rax),%rax
   13d9d:	8b 40 04             	mov    0x4(%rax),%eax
   13da0:	83 f8 01             	cmp    $0x1,%eax
   13da3:	75 21                	jne    13dc6 <gencode_expr_tree+0x14d>
   13da5:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13da9:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13dad:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13db1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13db5:	48 89 c7             	mov    %rax,%rdi
   13db8:	e8 98 05 00 00       	call   14355 <gencode_sign_term>
   13dbd:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13dc1:	e9 0c 01 00 00       	jmp    13ed2 <gencode_expr_tree+0x259>
   13dc6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13dca:	48 89 c7             	mov    %rax,%rdi
   13dcd:	e8 fe 02 00 00       	call   140d0 <expr_tree_is_leaf>
   13dd2:	83 f8 01             	cmp    $0x1,%eax
   13dd5:	75 2d                	jne    13e04 <gencode_expr_tree+0x18b>
   13dd7:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13ddb:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13ddf:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13de3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13de7:	48 89 c7             	mov    %rax,%rdi
   13dea:	e8 a6 06 00 00       	call   14495 <gencode_case0>
   13def:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13df3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13df7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   13dfb:	48 89 50 20          	mov    %rdx,0x20(%rax)
   13dff:	e9 ce 00 00 00       	jmp    13ed2 <gencode_expr_tree+0x259>
   13e04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e08:	48 8b 40 10          	mov    0x10(%rax),%rax
   13e0c:	48 89 c7             	mov    %rax,%rdi
   13e0f:	e8 bc 02 00 00       	call   140d0 <expr_tree_is_leaf>
   13e14:	85 c0                	test   %eax,%eax
   13e16:	74 21                	je     13e39 <gencode_expr_tree+0x1c0>
   13e18:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13e1c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13e20:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13e24:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e28:	48 89 c7             	mov    %rax,%rdi
   13e2b:	e8 14 0a 00 00       	call   14844 <gencode_case1>
   13e30:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13e34:	e9 99 00 00 00       	jmp    13ed2 <gencode_expr_tree+0x259>
   13e39:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e3d:	48 8b 40 08          	mov    0x8(%rax),%rax
   13e41:	8b 10                	mov    (%rax),%edx
   13e43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e47:	48 8b 40 10          	mov    0x10(%rax),%rax
   13e4b:	8b 00                	mov    (%rax),%eax
   13e4d:	39 c2                	cmp    %eax,%edx
   13e4f:	7d 1e                	jge    13e6f <gencode_expr_tree+0x1f6>
   13e51:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13e55:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13e59:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13e5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e61:	48 89 c7             	mov    %rax,%rdi
   13e64:	e8 bd 0b 00 00       	call   14a26 <gencode_case2>
   13e69:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13e6d:	eb 63                	jmp    13ed2 <gencode_expr_tree+0x259>
   13e6f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e73:	48 8b 40 08          	mov    0x8(%rax),%rax
   13e77:	8b 10                	mov    (%rax),%edx
   13e79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e7d:	48 8b 40 10          	mov    0x10(%rax),%rax
   13e81:	8b 00                	mov    (%rax),%eax
   13e83:	39 c2                	cmp    %eax,%edx
   13e85:	7c 1e                	jl     13ea5 <gencode_expr_tree+0x22c>
   13e87:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13e8b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13e8f:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13e93:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e97:	48 89 c7             	mov    %rax,%rdi
   13e9a:	e8 12 0e 00 00       	call   14cb1 <gencode_case3>
   13e9f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13ea3:	eb 2d                	jmp    13ed2 <gencode_expr_tree+0x259>
   13ea5:	48 8b 05 b4 e1 00 00 	mov    0xe1b4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   13eac:	48 89 c1             	mov    %rax,%rcx
   13eaf:	ba 24 00 00 00       	mov    $0x24,%edx
   13eb4:	be 01 00 00 00       	mov    $0x1,%esi
   13eb9:	48 8d 05 10 93 00 00 	lea    0x9310(%rip),%rax        # 1d1d0 <__PRETTY_FUNCTION__.0+0x140>
   13ec0:	48 89 c7             	mov    %rax,%rdi
   13ec3:	e8 88 e6 fe ff       	call   2550 <fwrite@plt>
   13ec8:	bf 01 00 00 00       	mov    $0x1,%edi
   13ecd:	e8 6e e6 fe ff       	call   2540 <exit@plt>
   13ed2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13ed6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13eda:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   13ee1:	00 00
   13ee3:	74 05                	je     13eea <gencode_expr_tree+0x271>
   13ee5:	e8 b6 e4 fe ff       	call   23a0 <__stack_chk_fail@plt>
   13eea:	c9                   	leave
   13eeb:	c3                   	ret

0000000000013eec <gencode_modulus>:
   13eec:	f3 0f 1e fa          	endbr64
   13ef0:	55                   	push   %rbp
   13ef1:	48 89 e5             	mov    %rsp,%rbp
   13ef4:	48 83 ec 70          	sub    $0x70,%rsp
   13ef8:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   13efc:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   13f00:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   13f04:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13f0b:	00 00
   13f0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13f11:	31 c0                	xor    %eax,%eax
   13f13:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   13f17:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13f1b:	48 89 d1             	mov    %rdx,%rcx
   13f1e:	48 8d 15 d0 92 00 00 	lea    0x92d0(%rip),%rdx        # 1d1f5 <__PRETTY_FUNCTION__.0+0x165>
   13f25:	be 32 00 00 00       	mov    $0x32,%esi
   13f2a:	48 89 c7             	mov    %rax,%rdi
   13f2d:	b8 00 00 00 00       	mov    $0x0,%eax
   13f32:	e8 79 e4 fe ff       	call   23b0 <snprintf@plt>
   13f37:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13f3b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13f3f:	48 89 d6             	mov    %rdx,%rsi
   13f42:	48 89 c7             	mov    %rax,%rdi
   13f45:	e8 7c b5 ff ff       	call   f4c6 <add_inst>
   13f4a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13f4e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13f52:	48 8d 15 ad 92 00 00 	lea    0x92ad(%rip),%rdx        # 1d206 <__PRETTY_FUNCTION__.0+0x176>
   13f59:	be 32 00 00 00       	mov    $0x32,%esi
   13f5e:	48 89 c7             	mov    %rax,%rdi
   13f61:	b8 00 00 00 00       	mov    $0x0,%eax
   13f66:	e8 45 e4 fe ff       	call   23b0 <snprintf@plt>
   13f6b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13f6f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13f73:	48 89 d6             	mov    %rdx,%rsi
   13f76:	48 89 c7             	mov    %rax,%rdi
   13f79:	e8 48 b5 ff ff       	call   f4c6 <add_inst>
   13f7e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13f82:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13f86:	0f b6 00             	movzbl (%rax),%eax
   13f89:	3c 24                	cmp    $0x24,%al
   13f8b:	0f 85 af 00 00 00    	jne    14040 <gencode_modulus+0x154>
   13f91:	48 8d 05 75 92 00 00 	lea    0x9275(%rip),%rax        # 1d20d <__PRETTY_FUNCTION__.0+0x17d>
   13f98:	48 89 c7             	mov    %rax,%rdi
   13f9b:	e8 77 eb ff ff       	call   12b17 <find_in_temp>
   13fa0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   13fa4:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   13fa9:	75 13                	jne    13fbe <gencode_modulus+0xd2>
   13fab:	48 8d 05 5b 92 00 00 	lea    0x925b(%rip),%rax        # 1d20d <__PRETTY_FUNCTION__.0+0x17d>
   13fb2:	48 89 c7             	mov    %rax,%rdi
   13fb5:	e8 06 e7 ff ff       	call   126c0 <add_l_t>
   13fba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   13fbe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13fc2:	8b 08                	mov    (%rax),%ecx
   13fc4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13fc8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13fcc:	41 89 c8             	mov    %ecx,%r8d
   13fcf:	48 89 d1             	mov    %rdx,%rcx
   13fd2:	48 8d 15 3d 92 00 00 	lea    0x923d(%rip),%rdx        # 1d216 <__PRETTY_FUNCTION__.0+0x186>
   13fd9:	be 32 00 00 00       	mov    $0x32,%esi
   13fde:	48 89 c7             	mov    %rax,%rdi
   13fe1:	b8 00 00 00 00       	mov    $0x0,%eax
   13fe6:	e8 c5 e3 fe ff       	call   23b0 <snprintf@plt>
   13feb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13fef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13ff3:	48 89 d6             	mov    %rdx,%rsi
   13ff6:	48 89 c7             	mov    %rax,%rdi
   13ff9:	e8 c8 b4 ff ff       	call   f4c6 <add_inst>
   13ffe:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14002:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14006:	8b 10                	mov    (%rax),%edx
   14008:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1400c:	89 d1                	mov    %edx,%ecx
   1400e:	48 8d 15 17 92 00 00 	lea    0x9217(%rip),%rdx        # 1d22c <__PRETTY_FUNCTION__.0+0x19c>
   14015:	be 32 00 00 00       	mov    $0x32,%esi
   1401a:	48 89 c7             	mov    %rax,%rdi
   1401d:	b8 00 00 00 00       	mov    $0x0,%eax
   14022:	e8 89 e3 fe ff       	call   23b0 <snprintf@plt>
   14027:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1402b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1402f:	48 89 d6             	mov    %rdx,%rsi
   14032:	48 89 c7             	mov    %rax,%rdi
   14035:	e8 8c b4 ff ff       	call   f4c6 <add_inst>
   1403a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1403e:	eb 3b                	jmp    1407b <gencode_modulus+0x18f>
   14040:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14044:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14048:	48 89 d1             	mov    %rdx,%rcx
   1404b:	48 8d 15 ed 91 00 00 	lea    0x91ed(%rip),%rdx        # 1d23f <__PRETTY_FUNCTION__.0+0x1af>
   14052:	be 32 00 00 00       	mov    $0x32,%esi
   14057:	48 89 c7             	mov    %rax,%rdi
   1405a:	b8 00 00 00 00       	mov    $0x0,%eax
   1405f:	e8 4c e3 fe ff       	call   23b0 <snprintf@plt>
   14064:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14068:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1406c:	48 89 d6             	mov    %rdx,%rsi
   1406f:	48 89 c7             	mov    %rax,%rdi
   14072:	e8 4f b4 ff ff       	call   f4c6 <add_inst>
   14077:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1407b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1407f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14083:	48 89 d1             	mov    %rdx,%rcx
   14086:	48 8d 15 bd 91 00 00 	lea    0x91bd(%rip),%rdx        # 1d24a <__PRETTY_FUNCTION__.0+0x1ba>
   1408d:	be 32 00 00 00       	mov    $0x32,%esi
   14092:	48 89 c7             	mov    %rax,%rdi
   14095:	b8 00 00 00 00       	mov    $0x0,%eax
   1409a:	e8 11 e3 fe ff       	call   23b0 <snprintf@plt>
   1409f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   140a3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   140a7:	48 89 d6             	mov    %rdx,%rsi
   140aa:	48 89 c7             	mov    %rax,%rdi
   140ad:	e8 14 b4 ff ff       	call   f4c6 <add_inst>
   140b2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   140b6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   140ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   140be:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   140c5:	00 00
   140c7:	74 05                	je     140ce <gencode_modulus+0x1e2>
   140c9:	e8 d2 e2 fe ff       	call   23a0 <__stack_chk_fail@plt>
   140ce:	c9                   	leave
   140cf:	c3                   	ret

00000000000140d0 <expr_tree_is_leaf>:
   140d0:	f3 0f 1e fa          	endbr64
   140d4:	55                   	push   %rbp
   140d5:	48 89 e5             	mov    %rsp,%rbp
   140d8:	48 83 ec 10          	sub    $0x10,%rsp
   140dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140e0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   140e5:	75 28                	jne    1410f <expr_tree_is_leaf+0x3f>
   140e7:	48 8d 05 42 95 00 00 	lea    0x9542(%rip),%rax        # 1d630 <__PRETTY_FUNCTION__.9>
   140ee:	48 89 c1             	mov    %rax,%rcx
   140f1:	ba e3 00 00 00       	mov    $0xe3,%edx
   140f6:	48 8d 05 b3 8f 00 00 	lea    0x8fb3(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   140fd:	48 89 c6             	mov    %rax,%rsi
   14100:	48 8d 05 71 90 00 00 	lea    0x9071(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   14107:	48 89 c7             	mov    %rax,%rdi
   1410a:	e8 c1 e2 fe ff       	call   23d0 <__assert_fail@plt>
   1410f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14113:	48 8b 40 08          	mov    0x8(%rax),%rax
   14117:	48 85 c0             	test   %rax,%rax
   1411a:	75 14                	jne    14130 <expr_tree_is_leaf+0x60>
   1411c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14120:	48 8b 40 10          	mov    0x10(%rax),%rax
   14124:	48 85 c0             	test   %rax,%rax
   14127:	75 07                	jne    14130 <expr_tree_is_leaf+0x60>
   14129:	b8 01 00 00 00       	mov    $0x1,%eax
   1412e:	eb 05                	jmp    14135 <expr_tree_is_leaf+0x65>
   14130:	b8 00 00 00 00       	mov    $0x0,%eax
   14135:	c9                   	leave
   14136:	c3                   	ret

0000000000014137 <print_expr_tree>:
   14137:	f3 0f 1e fa          	endbr64
   1413b:	55                   	push   %rbp
   1413c:	48 89 e5             	mov    %rsp,%rbp
   1413f:	48 83 ec 30          	sub    $0x30,%rsp
   14143:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14147:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1414a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1414e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   14153:	75 28                	jne    1417d <print_expr_tree+0x46>
   14155:	48 8d 05 f4 94 00 00 	lea    0x94f4(%rip),%rax        # 1d650 <__PRETTY_FUNCTION__.8>
   1415c:	48 89 c1             	mov    %rax,%rcx
   1415f:	ba ee 00 00 00       	mov    $0xee,%edx
   14164:	48 8d 05 45 8f 00 00 	lea    0x8f45(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   1416b:	48 89 c6             	mov    %rax,%rsi
   1416e:	48 8d 05 03 90 00 00 	lea    0x9003(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   14175:	48 89 c7             	mov    %rax,%rdi
   14178:	e8 53 e2 fe ff       	call   23d0 <__assert_fail@plt>
   1417d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14181:	48 8b 40 18          	mov    0x18(%rax),%rax
   14185:	48 85 c0             	test   %rax,%rax
   14188:	75 28                	jne    141b2 <print_expr_tree+0x7b>
   1418a:	48 8d 05 bf 94 00 00 	lea    0x94bf(%rip),%rax        # 1d650 <__PRETTY_FUNCTION__.8>
   14191:	48 89 c1             	mov    %rax,%rcx
   14194:	ba ef 00 00 00       	mov    $0xef,%edx
   14199:	48 8d 05 10 8f 00 00 	lea    0x8f10(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   141a0:	48 89 c6             	mov    %rax,%rsi
   141a3:	48 8d 05 db 8f 00 00 	lea    0x8fdb(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   141aa:	48 89 c7             	mov    %rax,%rdi
   141ad:	e8 1e e2 fe ff       	call   23d0 <__assert_fail@plt>
   141b2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   141b9:	eb 24                	jmp    141df <print_expr_tree+0xa8>
   141bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141bf:	48 89 c1             	mov    %rax,%rcx
   141c2:	ba 02 00 00 00       	mov    $0x2,%edx
   141c7:	be 01 00 00 00       	mov    $0x1,%esi
   141cc:	48 8d 05 88 90 00 00 	lea    0x9088(%rip),%rax        # 1d25b <__PRETTY_FUNCTION__.0+0x1cb>
   141d3:	48 89 c7             	mov    %rax,%rdi
   141d6:	e8 75 e3 fe ff       	call   2550 <fwrite@plt>
   141db:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   141df:	8b 45 fc             	mov    -0x4(%rbp),%eax
   141e2:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   141e5:	7c d4                	jl     141bb <print_expr_tree+0x84>
   141e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141eb:	8b 08                	mov    (%rax),%ecx
   141ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141f1:	48 8b 40 18          	mov    0x18(%rax),%rax
   141f5:	8b 50 04             	mov    0x4(%rax),%edx
   141f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141fc:	48 8d 35 5b 90 00 00 	lea    0x905b(%rip),%rsi        # 1d25e <__PRETTY_FUNCTION__.0+0x1ce>
   14203:	48 89 c7             	mov    %rax,%rdi
   14206:	b8 00 00 00 00       	mov    $0x0,%eax
   1420b:	e8 60 e2 fe ff       	call   2470 <fprintf@plt>
   14210:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14214:	48 8b 40 08          	mov    0x8(%rax),%rax
   14218:	48 85 c0             	test   %rax,%rax
   1421b:	74 71                	je     1428e <print_expr_tree+0x157>
   1421d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   14224:	eb 24                	jmp    1424a <print_expr_tree+0x113>
   14226:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1422a:	48 89 c1             	mov    %rax,%rcx
   1422d:	ba 02 00 00 00       	mov    $0x2,%edx
   14232:	be 01 00 00 00       	mov    $0x1,%esi
   14237:	48 8d 05 1d 90 00 00 	lea    0x901d(%rip),%rax        # 1d25b <__PRETTY_FUNCTION__.0+0x1cb>
   1423e:	48 89 c7             	mov    %rax,%rdi
   14241:	e8 0a e3 fe ff       	call   2550 <fwrite@plt>
   14246:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   1424a:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1424d:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   14250:	7c d4                	jl     14226 <print_expr_tree+0xef>
   14252:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14256:	48 89 c1             	mov    %rax,%rcx
   14259:	ba 07 00 00 00       	mov    $0x7,%edx
   1425e:	be 01 00 00 00       	mov    $0x1,%esi
   14263:	48 8d 05 05 90 00 00 	lea    0x9005(%rip),%rax        # 1d26f <__PRETTY_FUNCTION__.0+0x1df>
   1426a:	48 89 c7             	mov    %rax,%rdi
   1426d:	e8 de e2 fe ff       	call   2550 <fwrite@plt>
   14272:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14275:	8d 48 01             	lea    0x1(%rax),%ecx
   14278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1427c:	48 8b 40 08          	mov    0x8(%rax),%rax
   14280:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14284:	89 ce                	mov    %ecx,%esi
   14286:	48 89 c7             	mov    %rax,%rdi
   14289:	e8 a9 fe ff ff       	call   14137 <print_expr_tree>
   1428e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14292:	48 8b 40 10          	mov    0x10(%rax),%rax
   14296:	48 85 c0             	test   %rax,%rax
   14299:	74 71                	je     1430c <print_expr_tree+0x1d5>
   1429b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   142a2:	eb 24                	jmp    142c8 <print_expr_tree+0x191>
   142a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142a8:	48 89 c1             	mov    %rax,%rcx
   142ab:	ba 02 00 00 00       	mov    $0x2,%edx
   142b0:	be 01 00 00 00       	mov    $0x1,%esi
   142b5:	48 8d 05 9f 8f 00 00 	lea    0x8f9f(%rip),%rax        # 1d25b <__PRETTY_FUNCTION__.0+0x1cb>
   142bc:	48 89 c7             	mov    %rax,%rdi
   142bf:	e8 8c e2 fe ff       	call   2550 <fwrite@plt>
   142c4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   142c8:	8b 45 fc             	mov    -0x4(%rbp),%eax
   142cb:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   142ce:	7c d4                	jl     142a4 <print_expr_tree+0x16d>
   142d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142d4:	48 89 c1             	mov    %rax,%rcx
   142d7:	ba 08 00 00 00       	mov    $0x8,%edx
   142dc:	be 01 00 00 00       	mov    $0x1,%esi
   142e1:	48 8d 05 8f 8f 00 00 	lea    0x8f8f(%rip),%rax        # 1d277 <__PRETTY_FUNCTION__.0+0x1e7>
   142e8:	48 89 c7             	mov    %rax,%rdi
   142eb:	e8 60 e2 fe ff       	call   2550 <fwrite@plt>
   142f0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   142f3:	8d 48 01             	lea    0x1(%rax),%ecx
   142f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142fa:	48 8b 40 10          	mov    0x10(%rax),%rax
   142fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14302:	89 ce                	mov    %ecx,%esi
   14304:	48 89 c7             	mov    %rax,%rdi
   14307:	e8 2b fe ff ff       	call   14137 <print_expr_tree>
   1430c:	90                   	nop
   1430d:	c9                   	leave
   1430e:	c3                   	ret

000000000001430f <free_expr_tree>:
   1430f:	f3 0f 1e fa          	endbr64
   14313:	55                   	push   %rbp
   14314:	48 89 e5             	mov    %rsp,%rbp
   14317:	48 83 ec 10          	sub    $0x10,%rsp
   1431b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1431f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14324:	74 2c                	je     14352 <free_expr_tree+0x43>
   14326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1432a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1432e:	48 89 c7             	mov    %rax,%rdi
   14331:	e8 d9 ff ff ff       	call   1430f <free_expr_tree>
   14336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1433a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1433e:	48 89 c7             	mov    %rax,%rdi
   14341:	e8 c9 ff ff ff       	call   1430f <free_expr_tree>
   14346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1434a:	48 89 c7             	mov    %rax,%rdi
   1434d:	e8 9e df fe ff       	call   22f0 <free@plt>
   14352:	90                   	nop
   14353:	c9                   	leave
   14354:	c3                   	ret

0000000000014355 <gencode_sign_term>:
   14355:	f3 0f 1e fa          	endbr64
   14359:	55                   	push   %rbp
   1435a:	48 89 e5             	mov    %rsp,%rbp
   1435d:	48 83 ec 60          	sub    $0x60,%rsp
   14361:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   14365:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   14369:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1436d:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   14371:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14378:	00 00
   1437a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1437e:	31 c0                	xor    %eax,%eax
   14380:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14385:	75 28                	jne    143af <gencode_sign_term+0x5a>
   14387:	48 8d 05 d2 92 00 00 	lea    0x92d2(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.7>
   1438e:	48 89 c1             	mov    %rax,%rcx
   14391:	ba 16 01 00 00       	mov    $0x116,%edx
   14396:	48 8d 05 13 8d 00 00 	lea    0x8d13(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   1439d:	48 89 c6             	mov    %rax,%rsi
   143a0:	48 8d 05 d1 8d 00 00 	lea    0x8dd1(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   143a7:	48 89 c7             	mov    %rax,%rdi
   143aa:	e8 21 e0 fe ff       	call   23d0 <__assert_fail@plt>
   143af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   143b3:	48 8b 40 18          	mov    0x18(%rax),%rax
   143b7:	48 85 c0             	test   %rax,%rax
   143ba:	75 28                	jne    143e4 <gencode_sign_term+0x8f>
   143bc:	48 8d 05 9d 92 00 00 	lea    0x929d(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.7>
   143c3:	48 89 c1             	mov    %rax,%rcx
   143c6:	ba 17 01 00 00       	mov    $0x117,%edx
   143cb:	48 8d 05 de 8c 00 00 	lea    0x8cde(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   143d2:	48 89 c6             	mov    %rax,%rsi
   143d5:	48 8d 05 a9 8d 00 00 	lea    0x8da9(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   143dc:	48 89 c7             	mov    %rax,%rdi
   143df:	e8 ec df fe ff       	call   23d0 <__assert_fail@plt>
   143e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   143e8:	48 8b 40 18          	mov    0x18(%rax),%rax
   143ec:	8b 40 04             	mov    0x4(%rax),%eax
   143ef:	83 f8 01             	cmp    $0x1,%eax
   143f2:	74 28                	je     1441c <gencode_sign_term+0xc7>
   143f4:	48 8d 05 65 92 00 00 	lea    0x9265(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.7>
   143fb:	48 89 c1             	mov    %rax,%rcx
   143fe:	ba 18 01 00 00       	mov    $0x118,%edx
   14403:	48 8d 05 a6 8c 00 00 	lea    0x8ca6(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   1440a:	48 89 c6             	mov    %rax,%rsi
   1440d:	48 8d 05 6c 8e 00 00 	lea    0x8e6c(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x1f0>
   14414:	48 89 c7             	mov    %rax,%rdi
   14417:	e8 b4 df fe ff       	call   23d0 <__assert_fail@plt>
   1441c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14420:	48 8b 40 08          	mov    0x8(%rax),%rax
   14424:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14428:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1442c:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   14430:	48 89 c7             	mov    %rax,%rdi
   14433:	e8 41 f8 ff ff       	call   13c79 <gencode_expr_tree>
   14438:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1443c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14440:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14444:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14448:	48 89 d1             	mov    %rdx,%rcx
   1444b:	48 8d 15 51 8e 00 00 	lea    0x8e51(%rip),%rdx        # 1d2a3 <__PRETTY_FUNCTION__.0+0x213>
   14452:	be 32 00 00 00       	mov    $0x32,%esi
   14457:	48 89 c7             	mov    %rax,%rdi
   1445a:	b8 00 00 00 00       	mov    $0x0,%eax
   1445f:	e8 4c df fe ff       	call   23b0 <snprintf@plt>
   14464:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14468:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1446c:	48 89 d6             	mov    %rdx,%rsi
   1446f:	48 89 c7             	mov    %rax,%rdi
   14472:	e8 4f b0 ff ff       	call   f4c6 <add_inst>
   14477:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1447b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1447f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14483:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1448a:	00 00
   1448c:	74 05                	je     14493 <gencode_sign_term+0x13e>
   1448e:	e8 0d df fe ff       	call   23a0 <__stack_chk_fail@plt>
   14493:	c9                   	leave
   14494:	c3                   	ret

0000000000014495 <gencode_case0>:
   14495:	f3 0f 1e fa          	endbr64
   14499:	55                   	push   %rbp
   1449a:	48 89 e5             	mov    %rsp,%rbp
   1449d:	48 81 ec a0 04 00 00 	sub    $0x4a0,%rsp
   144a4:	48 89 bd 78 fb ff ff 	mov    %rdi,-0x488(%rbp)
   144ab:	48 89 b5 70 fb ff ff 	mov    %rsi,-0x490(%rbp)
   144b2:	48 89 95 68 fb ff ff 	mov    %rdx,-0x498(%rbp)
   144b9:	48 89 8d 60 fb ff ff 	mov    %rcx,-0x4a0(%rbp)
   144c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   144c7:	00 00
   144c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   144cd:	31 c0                	xor    %eax,%eax
   144cf:	48 8b 05 8a db 00 00 	mov    0xdb8a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   144d6:	48 89 c1             	mov    %rax,%rcx
   144d9:	ba 0e 00 00 00       	mov    $0xe,%edx
   144de:	be 01 00 00 00       	mov    $0x1,%esi
   144e3:	48 8d 05 c3 8d 00 00 	lea    0x8dc3(%rip),%rax        # 1d2ad <__PRETTY_FUNCTION__.0+0x21d>
   144ea:	48 89 c7             	mov    %rax,%rdi
   144ed:	e8 5e e0 fe ff       	call   2550 <fwrite@plt>
   144f2:	48 83 bd 78 fb ff ff 	cmpq   $0x0,-0x488(%rbp)
   144f9:	00
   144fa:	75 28                	jne    14524 <gencode_case0+0x8f>
   144fc:	48 8d 05 75 91 00 00 	lea    0x9175(%rip),%rax        # 1d678 <__PRETTY_FUNCTION__.6>
   14503:	48 89 c1             	mov    %rax,%rcx
   14506:	ba 2a 01 00 00       	mov    $0x12a,%edx
   1450b:	48 8d 05 9e 8b 00 00 	lea    0x8b9e(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14512:	48 89 c6             	mov    %rax,%rsi
   14515:	48 8d 05 5c 8c 00 00 	lea    0x8c5c(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   1451c:	48 89 c7             	mov    %rax,%rdi
   1451f:	e8 ac de fe ff       	call   23d0 <__assert_fail@plt>
   14524:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
   1452b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1452f:	48 85 c0             	test   %rax,%rax
   14532:	75 28                	jne    1455c <gencode_case0+0xc7>
   14534:	48 8d 05 3d 91 00 00 	lea    0x913d(%rip),%rax        # 1d678 <__PRETTY_FUNCTION__.6>
   1453b:	48 89 c1             	mov    %rax,%rcx
   1453e:	ba 2b 01 00 00       	mov    $0x12b,%edx
   14543:	48 8d 05 66 8b 00 00 	lea    0x8b66(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   1454a:	48 89 c6             	mov    %rax,%rsi
   1454d:	48 8d 05 31 8c 00 00 	lea    0x8c31(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   14554:	48 89 c7             	mov    %rax,%rdi
   14557:	e8 74 de fe ff       	call   23d0 <__assert_fail@plt>
   1455c:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
   14563:	48 8b 40 18          	mov    0x18(%rax),%rax
   14567:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
   1456e:	48 83 bd 60 fb ff ff 	cmpq   $0x0,-0x4a0(%rbp)
   14575:	00
   14576:	75 28                	jne    145a0 <gencode_case0+0x10b>
   14578:	48 8d 05 f9 90 00 00 	lea    0x90f9(%rip),%rax        # 1d678 <__PRETTY_FUNCTION__.6>
   1457f:	48 89 c1             	mov    %rax,%rcx
   14582:	ba 32 01 00 00       	mov    $0x132,%edx
   14587:	48 8d 05 22 8b 00 00 	lea    0x8b22(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   1458e:	48 89 c6             	mov    %rax,%rsi
   14591:	48 8d 05 24 8d 00 00 	lea    0x8d24(%rip),%rax        # 1d2bc <__PRETTY_FUNCTION__.0+0x22c>
   14598:	48 89 c7             	mov    %rax,%rdi
   1459b:	e8 30 de fe ff       	call   23d0 <__assert_fail@plt>
   145a0:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   145a7:	8b 40 04             	mov    0x4(%rax),%eax
   145aa:	83 f8 06             	cmp    $0x6,%eax
   145ad:	0f 85 db 00 00 00    	jne    1468e <gencode_case0+0x1f9>
   145b3:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   145ba:	48 8b 48 20          	mov    0x20(%rax),%rcx
   145be:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   145c5:	48 8b 40 18          	mov    0x18(%rax),%rax
   145c9:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
   145d0:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
   145d7:	48 89 c7             	mov    %rax,%rdi
   145da:	e8 a2 d9 ff ff       	call   11f81 <codegen_pass_arguments>
   145df:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   145e6:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   145ed:	48 8b 50 10          	mov    0x10(%rax),%rdx
   145f1:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   145f8:	48 89 d1             	mov    %rdx,%rcx
   145fb:	48 8d 15 cd 8c 00 00 	lea    0x8ccd(%rip),%rdx        # 1d2cf <__PRETTY_FUNCTION__.0+0x23f>
   14602:	be 32 00 00 00       	mov    $0x32,%esi
   14607:	48 89 c7             	mov    %rax,%rdi
   1460a:	b8 00 00 00 00       	mov    $0x0,%eax
   1460f:	e8 9c dd fe ff       	call   23b0 <snprintf@plt>
   14614:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   1461b:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14622:	48 89 d6             	mov    %rdx,%rsi
   14625:	48 89 c7             	mov    %rax,%rdi
   14628:	e8 99 ae ff ff       	call   f4c6 <add_inst>
   1462d:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   14634:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   1463b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1463f:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   14646:	48 89 d1             	mov    %rdx,%rcx
   14649:	48 8d 15 89 8c 00 00 	lea    0x8c89(%rip),%rdx        # 1d2d9 <__PRETTY_FUNCTION__.0+0x249>
   14650:	be 32 00 00 00       	mov    $0x32,%esi
   14655:	48 89 c7             	mov    %rax,%rdi
   14658:	b8 00 00 00 00       	mov    $0x0,%eax
   1465d:	e8 4e dd fe ff       	call   23b0 <snprintf@plt>
   14662:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14669:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14670:	48 89 d6             	mov    %rdx,%rsi
   14673:	48 89 c7             	mov    %rax,%rdi
   14676:	e8 4b ae ff ff       	call   f4c6 <add_inst>
   1467b:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   14682:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14689:	e9 a0 01 00 00       	jmp    1482e <gencode_case0+0x399>
   1468e:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   14695:	8b 40 04             	mov    0x4(%rax),%eax
   14698:	83 f8 09             	cmp    $0x9,%eax
   1469b:	0f 85 e6 00 00 00    	jne    14787 <gencode_case0+0x2f2>
   146a1:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   146a8:	8b 40 04             	mov    0x4(%rax),%eax
   146ab:	8d 48 01             	lea    0x1(%rax),%ecx
   146ae:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
   146b5:	89 4a 04             	mov    %ecx,0x4(%rdx)
   146b8:	48 8d bd 90 fb ff ff 	lea    -0x470(%rbp),%rdi
   146bf:	89 c1                	mov    %eax,%ecx
   146c1:	48 8d 05 22 8c 00 00 	lea    0x8c22(%rip),%rax        # 1d2ea <__PRETTY_FUNCTION__.0+0x25a>
   146c8:	48 89 c2             	mov    %rax,%rdx
   146cb:	be 14 00 00 00       	mov    $0x14,%esi
   146d0:	b8 00 00 00 00       	mov    $0x0,%eax
   146d5:	e8 d6 dc fe ff       	call   23b0 <snprintf@plt>
   146da:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   146e1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   146e5:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
   146ec:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   146f3:	49 89 c8             	mov    %rcx,%r8
   146f6:	48 89 d1             	mov    %rdx,%rcx
   146f9:	48 8d 15 f0 8b 00 00 	lea    0x8bf0(%rip),%rdx        # 1d2f0 <__PRETTY_FUNCTION__.0+0x260>
   14700:	be 00 04 00 00       	mov    $0x400,%esi
   14705:	48 89 c7             	mov    %rax,%rdi
   14708:	b8 00 00 00 00       	mov    $0x0,%eax
   1470d:	e8 9e dc fe ff       	call   23b0 <snprintf@plt>
   14712:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   14719:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14720:	48 89 d6             	mov    %rdx,%rsi
   14723:	48 89 c7             	mov    %rax,%rdi
   14726:	e8 9b ad ff ff       	call   f4c6 <add_inst>
   1472b:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   14732:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   14739:	48 8b 08             	mov    (%rax),%rcx
   1473c:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
   14743:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   1474a:	49 89 c8             	mov    %rcx,%r8
   1474d:	48 89 d1             	mov    %rdx,%rcx
   14750:	48 8d 15 c5 8b 00 00 	lea    0x8bc5(%rip),%rdx        # 1d31c <__PRETTY_FUNCTION__.0+0x28c>
   14757:	be 32 00 00 00       	mov    $0x32,%esi
   1475c:	48 89 c7             	mov    %rax,%rdi
   1475f:	b8 00 00 00 00       	mov    $0x0,%eax
   14764:	e8 47 dc fe ff       	call   23b0 <snprintf@plt>
   14769:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14770:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14777:	48 89 d6             	mov    %rdx,%rsi
   1477a:	48 89 c7             	mov    %rax,%rdi
   1477d:	e8 44 ad ff ff       	call   f4c6 <add_inst>
   14782:	e9 a7 00 00 00       	jmp    1482e <gencode_case0+0x399>
   14787:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   1478e:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
   14795:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   1479c:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   147a1:	48 89 c7             	mov    %rax,%rdi
   147a4:	e8 6a 07 00 00       	call   14f13 <gencode_leaf_var>
   147a9:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   147b0:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   147b7:	48 8b 48 08          	mov    0x8(%rax),%rcx
   147bb:	48 8b 05 9e d8 00 00 	mov    0xd89e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   147c2:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   147c9:	48 8d 35 68 8b 00 00 	lea    0x8b68(%rip),%rsi        # 1d338 <__PRETTY_FUNCTION__.0+0x2a8>
   147d0:	48 89 c7             	mov    %rax,%rdi
   147d3:	b8 00 00 00 00       	mov    $0x0,%eax
   147d8:	e8 93 dc fe ff       	call   2470 <fprintf@plt>
   147dd:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   147e4:	48 8b 48 08          	mov    0x8(%rax),%rcx
   147e8:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   147ef:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   147f6:	49 89 c8             	mov    %rcx,%r8
   147f9:	48 89 d1             	mov    %rdx,%rcx
   147fc:	48 8d 15 bf 89 00 00 	lea    0x89bf(%rip),%rdx        # 1d1c2 <__PRETTY_FUNCTION__.0+0x132>
   14803:	be 32 00 00 00       	mov    $0x32,%esi
   14808:	48 89 c7             	mov    %rax,%rdi
   1480b:	b8 00 00 00 00       	mov    $0x0,%eax
   14810:	e8 9b db fe ff       	call   23b0 <snprintf@plt>
   14815:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   1481c:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14823:	48 89 d6             	mov    %rdx,%rsi
   14826:	48 89 c7             	mov    %rax,%rdi
   14829:	e8 98 ac ff ff       	call   f4c6 <add_inst>
   1482e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14832:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14839:	00 00
   1483b:	74 05                	je     14842 <gencode_case0+0x3ad>
   1483d:	e8 5e db fe ff       	call   23a0 <__stack_chk_fail@plt>
   14842:	c9                   	leave
   14843:	c3                   	ret

0000000000014844 <gencode_case1>:
   14844:	f3 0f 1e fa          	endbr64
   14848:	55                   	push   %rbp
   14849:	48 89 e5             	mov    %rsp,%rbp
   1484c:	48 83 ec 60          	sub    $0x60,%rsp
   14850:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   14854:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   14858:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1485c:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   14860:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14867:	00 00
   14869:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1486d:	31 c0                	xor    %eax,%eax
   1486f:	48 8b 05 ea d7 00 00 	mov    0xd7ea(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14876:	48 89 c1             	mov    %rax,%rcx
   14879:	ba 0e 00 00 00       	mov    $0xe,%edx
   1487e:	be 01 00 00 00       	mov    $0x1,%esi
   14883:	48 8d 05 d8 8a 00 00 	lea    0x8ad8(%rip),%rax        # 1d362 <__PRETTY_FUNCTION__.0+0x2d2>
   1488a:	48 89 c7             	mov    %rax,%rdi
   1488d:	e8 be dc fe ff       	call   2550 <fwrite@plt>
   14892:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14897:	75 28                	jne    148c1 <gencode_case1+0x7d>
   14899:	48 8d 05 e8 8d 00 00 	lea    0x8de8(%rip),%rax        # 1d688 <__PRETTY_FUNCTION__.5>
   148a0:	48 89 c1             	mov    %rax,%rcx
   148a3:	ba 5a 01 00 00       	mov    $0x15a,%edx
   148a8:	48 8d 05 01 88 00 00 	lea    0x8801(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   148af:	48 89 c6             	mov    %rax,%rsi
   148b2:	48 8d 05 bf 88 00 00 	lea    0x88bf(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   148b9:	48 89 c7             	mov    %rax,%rdi
   148bc:	e8 0f db fe ff       	call   23d0 <__assert_fail@plt>
   148c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   148c5:	48 8b 40 18          	mov    0x18(%rax),%rax
   148c9:	48 85 c0             	test   %rax,%rax
   148cc:	75 28                	jne    148f6 <gencode_case1+0xb2>
   148ce:	48 8d 05 b3 8d 00 00 	lea    0x8db3(%rip),%rax        # 1d688 <__PRETTY_FUNCTION__.5>
   148d5:	48 89 c1             	mov    %rax,%rcx
   148d8:	ba 5b 01 00 00       	mov    $0x15b,%edx
   148dd:	48 8d 05 cc 87 00 00 	lea    0x87cc(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   148e4:	48 89 c6             	mov    %rax,%rsi
   148e7:	48 8d 05 97 88 00 00 	lea    0x8897(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   148ee:	48 89 c7             	mov    %rax,%rdi
   148f1:	e8 da da fe ff       	call   23d0 <__assert_fail@plt>
   148f6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   148fa:	48 8b 40 10          	mov    0x10(%rax),%rax
   148fe:	48 85 c0             	test   %rax,%rax
   14901:	75 28                	jne    1492b <gencode_case1+0xe7>
   14903:	48 8d 05 7e 8d 00 00 	lea    0x8d7e(%rip),%rax        # 1d688 <__PRETTY_FUNCTION__.5>
   1490a:	48 89 c1             	mov    %rax,%rcx
   1490d:	ba 5c 01 00 00       	mov    $0x15c,%edx
   14912:	48 8d 05 97 87 00 00 	lea    0x8797(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14919:	48 89 c6             	mov    %rax,%rsi
   1491c:	48 8d 05 4e 8a 00 00 	lea    0x8a4e(%rip),%rax        # 1d371 <__PRETTY_FUNCTION__.0+0x2e1>
   14923:	48 89 c7             	mov    %rax,%rdi
   14926:	e8 a5 da fe ff       	call   23d0 <__assert_fail@plt>
   1492b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1492f:	48 8b 40 10          	mov    0x10(%rax),%rax
   14933:	48 8b 40 18          	mov    0x18(%rax),%rax
   14937:	48 85 c0             	test   %rax,%rax
   1493a:	75 28                	jne    14964 <gencode_case1+0x120>
   1493c:	48 8d 05 45 8d 00 00 	lea    0x8d45(%rip),%rax        # 1d688 <__PRETTY_FUNCTION__.5>
   14943:	48 89 c1             	mov    %rax,%rcx
   14946:	ba 5d 01 00 00       	mov    $0x15d,%edx
   1494b:	48 8d 05 5e 87 00 00 	lea    0x875e(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14952:	48 89 c6             	mov    %rax,%rsi
   14955:	48 8d 05 34 8a 00 00 	lea    0x8a34(%rip),%rax        # 1d390 <__PRETTY_FUNCTION__.0+0x300>
   1495c:	48 89 c7             	mov    %rax,%rdi
   1495f:	e8 6c da fe ff       	call   23d0 <__assert_fail@plt>
   14964:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14968:	48 8b 40 08          	mov    0x8(%rax),%rax
   1496c:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14970:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14974:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   14978:	48 89 c7             	mov    %rax,%rdi
   1497b:	e8 f9 f2 ff ff       	call   13c79 <gencode_expr_tree>
   14980:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14984:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14988:	48 8b 40 18          	mov    0x18(%rax),%rax
   1498c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14990:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14994:	48 8b 40 10          	mov    0x10(%rax),%rax
   14998:	48 8b 40 18          	mov    0x18(%rax),%rax
   1499c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   149a0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   149a5:	75 28                	jne    149cf <gencode_case1+0x18b>
   149a7:	48 8d 05 da 8c 00 00 	lea    0x8cda(%rip),%rax        # 1d688 <__PRETTY_FUNCTION__.5>
   149ae:	48 89 c1             	mov    %rax,%rcx
   149b1:	ba 66 01 00 00       	mov    $0x166,%edx
   149b6:	48 8d 05 f3 86 00 00 	lea    0x86f3(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   149bd:	48 89 c6             	mov    %rax,%rsi
   149c0:	48 8d 05 e8 89 00 00 	lea    0x89e8(%rip),%rax        # 1d3af <__PRETTY_FUNCTION__.0+0x31f>
   149c7:	48 89 c7             	mov    %rax,%rdi
   149ca:	e8 01 da fe ff       	call   23d0 <__assert_fail@plt>
   149cf:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   149d3:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   149d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149db:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   149e0:	48 89 c7             	mov    %rax,%rdi
   149e3:	e8 2b 05 00 00       	call   14f13 <gencode_leaf_var>
   149e8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   149ec:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   149f0:	48 8b 70 08          	mov    0x8(%rax),%rsi
   149f4:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   149f8:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   149fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14a00:	48 89 c7             	mov    %rax,%rdi
   14a03:	e8 29 07 00 00       	call   15131 <gencode_op>
   14a08:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14a0c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14a10:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a14:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14a1b:	00 00
   14a1d:	74 05                	je     14a24 <gencode_case1+0x1e0>
   14a1f:	e8 7c d9 fe ff       	call   23a0 <__stack_chk_fail@plt>
   14a24:	c9                   	leave
   14a25:	c3                   	ret

0000000000014a26 <gencode_case2>:
   14a26:	f3 0f 1e fa          	endbr64
   14a2a:	55                   	push   %rbp
   14a2b:	48 89 e5             	mov    %rsp,%rbp
   14a2e:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   14a35:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   14a39:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   14a3d:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   14a44:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   14a4b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14a52:	00 00
   14a54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14a58:	31 c0                	xor    %eax,%eax
   14a5a:	48 8b 05 ff d5 00 00 	mov    0xd5ff(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14a61:	48 89 c1             	mov    %rax,%rcx
   14a64:	ba 0e 00 00 00       	mov    $0xe,%edx
   14a69:	be 01 00 00 00       	mov    $0x1,%esi
   14a6e:	48 8d 05 4d 89 00 00 	lea    0x894d(%rip),%rax        # 1d3c2 <__PRETTY_FUNCTION__.0+0x332>
   14a75:	48 89 c7             	mov    %rax,%rdi
   14a78:	e8 d3 da fe ff       	call   2550 <fwrite@plt>
   14a7d:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   14a82:	75 28                	jne    14aac <gencode_case2+0x86>
   14a84:	48 8d 05 0d 8c 00 00 	lea    0x8c0d(%rip),%rax        # 1d698 <__PRETTY_FUNCTION__.4>
   14a8b:	48 89 c1             	mov    %rax,%rcx
   14a8e:	ba 74 01 00 00       	mov    $0x174,%edx
   14a93:	48 8d 05 16 86 00 00 	lea    0x8616(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14a9a:	48 89 c6             	mov    %rax,%rsi
   14a9d:	48 8d 05 d4 86 00 00 	lea    0x86d4(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   14aa4:	48 89 c7             	mov    %rax,%rdi
   14aa7:	e8 24 d9 fe ff       	call   23d0 <__assert_fail@plt>
   14aac:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14ab0:	48 8b 40 18          	mov    0x18(%rax),%rax
   14ab4:	48 85 c0             	test   %rax,%rax
   14ab7:	75 28                	jne    14ae1 <gencode_case2+0xbb>
   14ab9:	48 8d 05 d8 8b 00 00 	lea    0x8bd8(%rip),%rax        # 1d698 <__PRETTY_FUNCTION__.4>
   14ac0:	48 89 c1             	mov    %rax,%rcx
   14ac3:	ba 75 01 00 00       	mov    $0x175,%edx
   14ac8:	48 8d 05 e1 85 00 00 	lea    0x85e1(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14acf:	48 89 c6             	mov    %rax,%rsi
   14ad2:	48 8d 05 ac 86 00 00 	lea    0x86ac(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   14ad9:	48 89 c7             	mov    %rax,%rdi
   14adc:	e8 ef d8 fe ff       	call   23d0 <__assert_fail@plt>
   14ae1:	b8 00 00 00 00       	mov    $0x0,%eax
   14ae6:	e8 ab df ff ff       	call   12a96 <get_reg_stack>
   14aeb:	48 89 c2             	mov    %rax,%rdx
   14aee:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   14af2:	48 89 c6             	mov    %rax,%rsi
   14af5:	48 89 d7             	mov    %rdx,%rdi
   14af8:	e8 5d e8 ff ff       	call   1335a <get_free_reg>
   14afd:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14b01:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   14b06:	0f 85 fb 00 00 00    	jne    14c07 <gencode_case2+0x1e1>
   14b0c:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14b10:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14b14:	48 8b 40 10          	mov    0x10(%rax),%rax
   14b18:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14b1f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14b26:	48 89 c7             	mov    %rax,%rdi
   14b29:	e8 4b f1 ff ff       	call   13c79 <gencode_expr_tree>
   14b2e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14b32:	48 8d 05 98 88 00 00 	lea    0x8898(%rip),%rax        # 1d3d1 <__PRETTY_FUNCTION__.0+0x341>
   14b39:	48 89 c7             	mov    %rax,%rdi
   14b3c:	e8 7f db ff ff       	call   126c0 <add_l_t>
   14b41:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14b45:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14b49:	8b 08                	mov    (%rax),%ecx
   14b4b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14b52:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14b56:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14b5a:	41 89 c8             	mov    %ecx,%r8d
   14b5d:	48 89 d1             	mov    %rdx,%rcx
   14b60:	48 8d 15 af 86 00 00 	lea    0x86af(%rip),%rdx        # 1d216 <__PRETTY_FUNCTION__.0+0x186>
   14b67:	be 32 00 00 00       	mov    $0x32,%esi
   14b6c:	48 89 c7             	mov    %rax,%rdi
   14b6f:	b8 00 00 00 00       	mov    $0x0,%eax
   14b74:	e8 37 d8 fe ff       	call   23b0 <snprintf@plt>
   14b79:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14b7d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14b81:	48 89 d6             	mov    %rdx,%rsi
   14b84:	48 89 c7             	mov    %rax,%rdi
   14b87:	e8 3a a9 ff ff       	call   f4c6 <add_inst>
   14b8c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14b90:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14b94:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14b98:	48 8b 40 08          	mov    0x8(%rax),%rax
   14b9c:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14ba3:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14baa:	48 89 c7             	mov    %rax,%rdi
   14bad:	e8 c7 f0 ff ff       	call   13c79 <gencode_expr_tree>
   14bb2:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14bb6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14bba:	8b 10                	mov    (%rax),%edx
   14bbc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14bc0:	89 d1                	mov    %edx,%ecx
   14bc2:	48 8d 15 0e 88 00 00 	lea    0x880e(%rip),%rdx        # 1d3d7 <__PRETTY_FUNCTION__.0+0x347>
   14bc9:	be 1e 00 00 00       	mov    $0x1e,%esi
   14bce:	48 89 c7             	mov    %rax,%rdi
   14bd1:	b8 00 00 00 00       	mov    $0x0,%eax
   14bd6:	e8 d5 d7 fe ff       	call   23b0 <snprintf@plt>
   14bdb:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14bdf:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14be6:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14bea:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14bee:	48 8b 40 18          	mov    0x18(%rax),%rax
   14bf2:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   14bf6:	48 89 c7             	mov    %rax,%rdi
   14bf9:	e8 33 05 00 00       	call   15131 <gencode_op>
   14bfe:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14c02:	e9 90 00 00 00       	jmp    14c97 <gencode_case2+0x271>
   14c07:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14c0b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14c0f:	48 8b 40 10          	mov    0x10(%rax),%rax
   14c13:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   14c17:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14c1e:	48 89 c7             	mov    %rax,%rdi
   14c21:	e8 53 f0 ff ff       	call   13c79 <gencode_expr_tree>
   14c26:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14c2a:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14c2e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14c32:	48 8b 40 08          	mov    0x8(%rax),%rax
   14c36:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14c3d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14c44:	48 89 c7             	mov    %rax,%rdi
   14c47:	e8 2d f0 ff ff       	call   13c79 <gencode_expr_tree>
   14c4c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14c50:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14c54:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14c58:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14c5c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14c63:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14c67:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14c6b:	48 8b 40 18          	mov    0x18(%rax),%rax
   14c6f:	48 89 c7             	mov    %rax,%rdi
   14c72:	e8 ba 04 00 00       	call   15131 <gencode_op>
   14c77:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14c7b:	b8 00 00 00 00       	mov    $0x0,%eax
   14c80:	e8 11 de ff ff       	call   12a96 <get_reg_stack>
   14c85:	48 89 c2             	mov    %rax,%rdx
   14c88:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14c8c:	48 89 c6             	mov    %rax,%rsi
   14c8f:	48 89 d7             	mov    %rdx,%rdi
   14c92:	e8 66 e4 ff ff       	call   130fd <free_reg>
   14c97:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14c9b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c9f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14ca6:	00 00
   14ca8:	74 05                	je     14caf <gencode_case2+0x289>
   14caa:	e8 f1 d6 fe ff       	call   23a0 <__stack_chk_fail@plt>
   14caf:	c9                   	leave
   14cb0:	c3                   	ret

0000000000014cb1 <gencode_case3>:
   14cb1:	f3 0f 1e fa          	endbr64
   14cb5:	55                   	push   %rbp
   14cb6:	48 89 e5             	mov    %rsp,%rbp
   14cb9:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   14cc0:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   14cc4:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   14cc8:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   14ccf:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   14cd6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14cdd:	00 00
   14cdf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14ce3:	31 c0                	xor    %eax,%eax
   14ce5:	48 8b 05 74 d3 00 00 	mov    0xd374(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14cec:	48 89 c1             	mov    %rax,%rcx
   14cef:	ba 0e 00 00 00       	mov    $0xe,%edx
   14cf4:	be 01 00 00 00       	mov    $0x1,%esi
   14cf9:	48 8d 05 e2 86 00 00 	lea    0x86e2(%rip),%rax        # 1d3e2 <__PRETTY_FUNCTION__.0+0x352>
   14d00:	48 89 c7             	mov    %rax,%rdi
   14d03:	e8 48 d8 fe ff       	call   2550 <fwrite@plt>
   14d08:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   14d0d:	75 28                	jne    14d37 <gencode_case3+0x86>
   14d0f:	48 8d 05 92 89 00 00 	lea    0x8992(%rip),%rax        # 1d6a8 <__PRETTY_FUNCTION__.3>
   14d16:	48 89 c1             	mov    %rax,%rcx
   14d19:	ba 99 01 00 00       	mov    $0x199,%edx
   14d1e:	48 8d 05 8b 83 00 00 	lea    0x838b(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14d25:	48 89 c6             	mov    %rax,%rsi
   14d28:	48 8d 05 49 84 00 00 	lea    0x8449(%rip),%rax        # 1d178 <__PRETTY_FUNCTION__.0+0xe8>
   14d2f:	48 89 c7             	mov    %rax,%rdi
   14d32:	e8 99 d6 fe ff       	call   23d0 <__assert_fail@plt>
   14d37:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14d3b:	48 8b 40 18          	mov    0x18(%rax),%rax
   14d3f:	48 85 c0             	test   %rax,%rax
   14d42:	75 28                	jne    14d6c <gencode_case3+0xbb>
   14d44:	48 8d 05 5d 89 00 00 	lea    0x895d(%rip),%rax        # 1d6a8 <__PRETTY_FUNCTION__.3>
   14d4b:	48 89 c1             	mov    %rax,%rcx
   14d4e:	ba 9a 01 00 00       	mov    $0x19a,%edx
   14d53:	48 8d 05 56 83 00 00 	lea    0x8356(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14d5a:	48 89 c6             	mov    %rax,%rsi
   14d5d:	48 8d 05 21 84 00 00 	lea    0x8421(%rip),%rax        # 1d185 <__PRETTY_FUNCTION__.0+0xf5>
   14d64:	48 89 c7             	mov    %rax,%rdi
   14d67:	e8 64 d6 fe ff       	call   23d0 <__assert_fail@plt>
   14d6c:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14d70:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14d74:	48 8b 40 08          	mov    0x8(%rax),%rax
   14d78:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14d7f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14d86:	48 89 c7             	mov    %rax,%rdi
   14d89:	e8 eb ee ff ff       	call   13c79 <gencode_expr_tree>
   14d8e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14d92:	b8 00 00 00 00       	mov    $0x0,%eax
   14d97:	e8 fa dc ff ff       	call   12a96 <get_reg_stack>
   14d9c:	48 89 c2             	mov    %rax,%rdx
   14d9f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   14da3:	48 89 c6             	mov    %rax,%rsi
   14da6:	48 89 d7             	mov    %rdx,%rdi
   14da9:	e8 ac e5 ff ff       	call   1335a <get_free_reg>
   14dae:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14db2:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   14db7:	0f 85 d2 00 00 00    	jne    14e8f <gencode_case3+0x1de>
   14dbd:	48 8d 05 0d 86 00 00 	lea    0x860d(%rip),%rax        # 1d3d1 <__PRETTY_FUNCTION__.0+0x341>
   14dc4:	48 89 c7             	mov    %rax,%rdi
   14dc7:	e8 f4 d8 ff ff       	call   126c0 <add_l_t>
   14dcc:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14dd0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14dd4:	8b 08                	mov    (%rax),%ecx
   14dd6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14ddd:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14de1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14de5:	41 89 c8             	mov    %ecx,%r8d
   14de8:	48 89 d1             	mov    %rdx,%rcx
   14deb:	48 8d 15 24 84 00 00 	lea    0x8424(%rip),%rdx        # 1d216 <__PRETTY_FUNCTION__.0+0x186>
   14df2:	be 32 00 00 00       	mov    $0x32,%esi
   14df7:	48 89 c7             	mov    %rax,%rdi
   14dfa:	b8 00 00 00 00       	mov    $0x0,%eax
   14dff:	e8 ac d5 fe ff       	call   23b0 <snprintf@plt>
   14e04:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14e08:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14e0c:	48 89 d6             	mov    %rdx,%rsi
   14e0f:	48 89 c7             	mov    %rax,%rdi
   14e12:	e8 af a6 ff ff       	call   f4c6 <add_inst>
   14e17:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14e1b:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14e1f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14e23:	48 8b 40 10          	mov    0x10(%rax),%rax
   14e27:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14e2e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14e35:	48 89 c7             	mov    %rax,%rdi
   14e38:	e8 3c ee ff ff       	call   13c79 <gencode_expr_tree>
   14e3d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14e41:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14e45:	8b 10                	mov    (%rax),%edx
   14e47:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14e4b:	89 d1                	mov    %edx,%ecx
   14e4d:	48 8d 15 83 85 00 00 	lea    0x8583(%rip),%rdx        # 1d3d7 <__PRETTY_FUNCTION__.0+0x347>
   14e54:	be 1e 00 00 00       	mov    $0x1e,%esi
   14e59:	48 89 c7             	mov    %rax,%rdi
   14e5c:	b8 00 00 00 00       	mov    $0x0,%eax
   14e61:	e8 4a d5 fe ff       	call   23b0 <snprintf@plt>
   14e66:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14e6a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14e71:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14e75:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14e79:	48 8b 40 18          	mov    0x18(%rax),%rax
   14e7d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   14e81:	48 89 c7             	mov    %rax,%rdi
   14e84:	e8 a8 02 00 00       	call   15131 <gencode_op>
   14e89:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14e8d:	eb 6a                	jmp    14ef9 <gencode_case3+0x248>
   14e8f:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14e93:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14e97:	48 8b 40 10          	mov    0x10(%rax),%rax
   14e9b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   14e9f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14ea6:	48 89 c7             	mov    %rax,%rdi
   14ea9:	e8 cb ed ff ff       	call   13c79 <gencode_expr_tree>
   14eae:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14eb2:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14eb6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14eba:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14ebe:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14ec5:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14ec9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14ecd:	48 8b 40 18          	mov    0x18(%rax),%rax
   14ed1:	48 89 c7             	mov    %rax,%rdi
   14ed4:	e8 58 02 00 00       	call   15131 <gencode_op>
   14ed9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14edd:	b8 00 00 00 00       	mov    $0x0,%eax
   14ee2:	e8 af db ff ff       	call   12a96 <get_reg_stack>
   14ee7:	48 89 c2             	mov    %rax,%rdx
   14eea:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14eee:	48 89 c6             	mov    %rax,%rsi
   14ef1:	48 89 d7             	mov    %rdx,%rdi
   14ef4:	e8 04 e2 ff ff       	call   130fd <free_reg>
   14ef9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14efd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14f01:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14f08:	00 00
   14f0a:	74 05                	je     14f11 <gencode_case3+0x260>
   14f0c:	e8 8f d4 fe ff       	call   23a0 <__stack_chk_fail@plt>
   14f11:	c9                   	leave
   14f12:	c3                   	ret

0000000000014f13 <gencode_leaf_var>:
   14f13:	f3 0f 1e fa          	endbr64
   14f17:	55                   	push   %rbp
   14f18:	48 89 e5             	mov    %rsp,%rbp
   14f1b:	48 83 ec 40          	sub    $0x40,%rsp
   14f1f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14f23:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14f27:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14f2b:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
   14f2e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14f35:	00 00
   14f37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14f3b:	31 c0                	xor    %eax,%eax
   14f3d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   14f42:	75 28                	jne    14f6c <gencode_leaf_var+0x59>
   14f44:	48 8d 05 75 87 00 00 	lea    0x8775(%rip),%rax        # 1d6c0 <__PRETTY_FUNCTION__.2>
   14f4b:	48 89 c1             	mov    %rax,%rcx
   14f4e:	ba bd 01 00 00       	mov    $0x1bd,%edx
   14f53:	48 8d 05 56 81 00 00 	lea    0x8156(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   14f5a:	48 89 c6             	mov    %rax,%rsi
   14f5d:	48 8d 05 84 81 00 00 	lea    0x8184(%rip),%rax        # 1d0e8 <__PRETTY_FUNCTION__.0+0x58>
   14f64:	48 89 c7             	mov    %rax,%rdi
   14f67:	e8 64 d4 fe ff       	call   23d0 <__assert_fail@plt>
   14f6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f70:	8b 40 04             	mov    0x4(%rax),%eax
   14f73:	83 f8 04             	cmp    $0x4,%eax
   14f76:	74 0e                	je     14f86 <gencode_leaf_var+0x73>
   14f78:	83 f8 07             	cmp    $0x7,%eax
   14f7b:	0f 84 40 01 00 00    	je     150c1 <gencode_leaf_var+0x1ae>
   14f81:	e9 64 01 00 00       	jmp    150ea <gencode_leaf_var+0x1d7>
   14f86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f8a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14f8e:	48 8b 05 cb d0 00 00 	mov    0xd0cb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14f95:	48 8d 0d 5c 84 00 00 	lea    0x845c(%rip),%rcx        # 1d3f8 <__PRETTY_FUNCTION__.0+0x368>
   14f9c:	48 89 ce             	mov    %rcx,%rsi
   14f9f:	48 89 c7             	mov    %rax,%rdi
   14fa2:	b8 00 00 00 00       	mov    $0x0,%eax
   14fa7:	e8 c4 d4 fe ff       	call   2470 <fprintf@plt>
   14fac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14fb0:	48 8b 40 08          	mov    0x8(%rax),%rax
   14fb4:	48 89 c7             	mov    %rax,%rdi
   14fb7:	e8 01 dc ff ff       	call   12bbd <find_label>
   14fbc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14fc0:	48 8b 05 99 d0 00 00 	mov    0xd099(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14fc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14fcb:	48 8d 0d 4e 84 00 00 	lea    0x844e(%rip),%rcx        # 1d420 <__PRETTY_FUNCTION__.0+0x390>
   14fd2:	48 89 ce             	mov    %rcx,%rsi
   14fd5:	48 89 c7             	mov    %rax,%rdi
   14fd8:	b8 00 00 00 00       	mov    $0x0,%eax
   14fdd:	e8 8e d4 fe ff       	call   2470 <fprintf@plt>
   14fe2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14fe7:	74 2b                	je     15014 <gencode_leaf_var+0x101>
   14fe9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14fed:	8b 10                	mov    (%rax),%edx
   14fef:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14ff2:	48 63 f0             	movslq %eax,%rsi
   14ff5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ff9:	89 d1                	mov    %edx,%ecx
   14ffb:	48 8d 15 d5 83 00 00 	lea    0x83d5(%rip),%rdx        # 1d3d7 <__PRETTY_FUNCTION__.0+0x347>
   15002:	48 89 c7             	mov    %rax,%rdi
   15005:	b8 00 00 00 00       	mov    $0x0,%eax
   1500a:	e8 a1 d3 fe ff       	call   23b0 <snprintf@plt>
   1500f:	e9 03 01 00 00       	jmp    15117 <gencode_leaf_var+0x204>
   15014:	b8 00 00 00 00       	mov    $0x0,%eax
   15019:	e8 64 30 ff ff       	call   8082 <nonlocal_flag>
   1501e:	83 f8 01             	cmp    $0x1,%eax
   15021:	75 4e                	jne    15071 <gencode_leaf_var+0x15e>
   15023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15027:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1502b:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   1502f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15033:	48 89 ce             	mov    %rcx,%rsi
   15036:	48 89 c7             	mov    %rax,%rdi
   15039:	e8 0f ce ff ff       	call   11e4d <codegen_get_nonlocal>
   1503e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   15042:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15045:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   15048:	48 63 f0             	movslq %eax,%rsi
   1504b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1504f:	4c 8d 05 f4 83 00 00 	lea    0x83f4(%rip),%r8        # 1d44a <__PRETTY_FUNCTION__.0+0x3ba>
   15056:	89 d1                	mov    %edx,%ecx
   15058:	48 8d 15 f0 83 00 00 	lea    0x83f0(%rip),%rdx        # 1d44f <__PRETTY_FUNCTION__.0+0x3bf>
   1505f:	48 89 c7             	mov    %rax,%rdi
   15062:	b8 00 00 00 00       	mov    $0x0,%eax
   15067:	e8 44 d3 fe ff       	call   23b0 <snprintf@plt>
   1506c:	e9 a6 00 00 00       	jmp    15117 <gencode_leaf_var+0x204>
   15071:	48 8b 05 e8 cf 00 00 	mov    0xcfe8(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15078:	48 89 c1             	mov    %rax,%rcx
   1507b:	ba 33 00 00 00       	mov    $0x33,%edx
   15080:	be 01 00 00 00       	mov    $0x1,%esi
   15085:	48 8d 05 cc 83 00 00 	lea    0x83cc(%rip),%rax        # 1d458 <__PRETTY_FUNCTION__.0+0x3c8>
   1508c:	48 89 c7             	mov    %rax,%rdi
   1508f:	e8 bc d4 fe ff       	call   2550 <fwrite@plt>
   15094:	48 8b 05 c5 cf 00 00 	mov    0xcfc5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1509b:	48 89 c1             	mov    %rax,%rcx
   1509e:	ba 33 00 00 00       	mov    $0x33,%edx
   150a3:	be 01 00 00 00       	mov    $0x1,%esi
   150a8:	48 8d 05 e1 83 00 00 	lea    0x83e1(%rip),%rax        # 1d490 <__PRETTY_FUNCTION__.0+0x400>
   150af:	48 89 c7             	mov    %rax,%rdi
   150b2:	e8 99 d4 fe ff       	call   2550 <fwrite@plt>
   150b7:	bf 01 00 00 00       	mov    $0x1,%edi
   150bc:	e8 7f d4 fe ff       	call   2540 <exit@plt>
   150c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   150c5:	8b 50 08             	mov    0x8(%rax),%edx
   150c8:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   150cb:	48 63 f0             	movslq %eax,%rsi
   150ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   150d2:	89 d1                	mov    %edx,%ecx
   150d4:	48 8d 15 e9 83 00 00 	lea    0x83e9(%rip),%rdx        # 1d4c4 <__PRETTY_FUNCTION__.0+0x434>
   150db:	48 89 c7             	mov    %rax,%rdi
   150de:	b8 00 00 00 00       	mov    $0x0,%eax
   150e3:	e8 c8 d2 fe ff       	call   23b0 <snprintf@plt>
   150e8:	eb 2d                	jmp    15117 <gencode_leaf_var+0x204>
   150ea:	48 8b 05 6f cf 00 00 	mov    0xcf6f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   150f1:	48 89 c1             	mov    %rax,%rcx
   150f4:	ba 29 00 00 00       	mov    $0x29,%edx
   150f9:	be 01 00 00 00       	mov    $0x1,%esi
   150fe:	48 8d 05 c3 83 00 00 	lea    0x83c3(%rip),%rax        # 1d4c8 <__PRETTY_FUNCTION__.0+0x438>
   15105:	48 89 c7             	mov    %rax,%rdi
   15108:	e8 43 d4 fe ff       	call   2550 <fwrite@plt>
   1510d:	bf 01 00 00 00       	mov    $0x1,%edi
   15112:	e8 29 d4 fe ff       	call   2540 <exit@plt>
   15117:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1511b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1511f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   15126:	00 00
   15128:	74 05                	je     1512f <gencode_leaf_var+0x21c>
   1512a:	e8 71 d2 fe ff       	call   23a0 <__stack_chk_fail@plt>
   1512f:	c9                   	leave
   15130:	c3                   	ret

0000000000015131 <gencode_op>:
   15131:	f3 0f 1e fa          	endbr64
   15135:	55                   	push   %rbp
   15136:	48 89 e5             	mov    %rsp,%rbp
   15139:	48 83 ec 70          	sub    $0x70,%rsp
   1513d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   15141:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   15145:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   15149:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   1514d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15154:	00 00
   15156:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1515a:	31 c0                	xor    %eax,%eax
   1515c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   15161:	75 28                	jne    1518b <gencode_op+0x5a>
   15163:	48 8d 05 6e 85 00 00 	lea    0x856e(%rip),%rax        # 1d6d8 <__PRETTY_FUNCTION__.1>
   1516a:	48 89 c1             	mov    %rax,%rcx
   1516d:	ba ef 01 00 00       	mov    $0x1ef,%edx
   15172:	48 8d 05 37 7f 00 00 	lea    0x7f37(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   15179:	48 89 c6             	mov    %rax,%rsi
   1517c:	48 8d 05 65 7f 00 00 	lea    0x7f65(%rip),%rax        # 1d0e8 <__PRETTY_FUNCTION__.0+0x58>
   15183:	48 89 c7             	mov    %rax,%rdi
   15186:	e8 45 d2 fe ff       	call   23d0 <__assert_fail@plt>
   1518b:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   15190:	75 28                	jne    151ba <gencode_op+0x89>
   15192:	48 8d 05 3f 85 00 00 	lea    0x853f(%rip),%rax        # 1d6d8 <__PRETTY_FUNCTION__.1>
   15199:	48 89 c1             	mov    %rax,%rcx
   1519c:	ba f0 01 00 00       	mov    $0x1f0,%edx
   151a1:	48 8d 05 08 7f 00 00 	lea    0x7f08(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   151a8:	48 89 c6             	mov    %rax,%rsi
   151ab:	48 8d 05 40 83 00 00 	lea    0x8340(%rip),%rax        # 1d4f2 <__PRETTY_FUNCTION__.0+0x462>
   151b2:	48 89 c7             	mov    %rax,%rdi
   151b5:	e8 16 d2 fe ff       	call   23d0 <__assert_fail@plt>
   151ba:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   151bf:	75 28                	jne    151e9 <gencode_op+0xb8>
   151c1:	48 8d 05 10 85 00 00 	lea    0x8510(%rip),%rax        # 1d6d8 <__PRETTY_FUNCTION__.1>
   151c8:	48 89 c1             	mov    %rax,%rcx
   151cb:	ba f1 01 00 00       	mov    $0x1f1,%edx
   151d0:	48 8d 05 d9 7e 00 00 	lea    0x7ed9(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   151d7:	48 89 c6             	mov    %rax,%rsi
   151da:	48 8d 05 1e 83 00 00 	lea    0x831e(%rip),%rax        # 1d4ff <__PRETTY_FUNCTION__.0+0x46f>
   151e1:	48 89 c7             	mov    %rax,%rdi
   151e4:	e8 e7 d1 fe ff       	call   23d0 <__assert_fail@plt>
   151e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151ed:	8b 40 04             	mov    0x4(%rax),%eax
   151f0:	83 f8 03             	cmp    $0x3,%eax
   151f3:	0f 84 f5 00 00 00    	je     152ee <gencode_op+0x1bd>
   151f9:	83 f8 03             	cmp    $0x3,%eax
   151fc:	0f 87 89 05 00 00    	ja     1578b <gencode_op+0x65a>
   15202:	85 c0                	test   %eax,%eax
   15204:	0f 84 3d 05 00 00    	je     15747 <gencode_op+0x616>
   1520a:	83 f8 02             	cmp    $0x2,%eax
   1520d:	0f 85 78 05 00 00    	jne    1578b <gencode_op+0x65a>
   15213:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15217:	8b 40 08             	mov    0x8(%rax),%eax
   1521a:	89 45 b0             	mov    %eax,-0x50(%rbp)
   1521d:	81 7d b0 2e 01 00 00 	cmpl   $0x12e,-0x50(%rbp)
   15224:	74 0e                	je     15234 <gencode_op+0x103>
   15226:	81 7d b0 2f 01 00 00 	cmpl   $0x12f,-0x50(%rbp)
   1522d:	74 49                	je     15278 <gencode_op+0x147>
   1522f:	e9 88 00 00 00       	jmp    152bc <gencode_op+0x18b>
   15234:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   15238:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1523c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15240:	49 89 c8             	mov    %rcx,%r8
   15243:	48 89 d1             	mov    %rdx,%rcx
   15246:	48 8d 15 c0 82 00 00 	lea    0x82c0(%rip),%rdx        # 1d50d <__PRETTY_FUNCTION__.0+0x47d>
   1524d:	be 32 00 00 00       	mov    $0x32,%esi
   15252:	48 89 c7             	mov    %rax,%rdi
   15255:	b8 00 00 00 00       	mov    $0x0,%eax
   1525a:	e8 51 d1 fe ff       	call   23b0 <snprintf@plt>
   1525f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15263:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15267:	48 89 d6             	mov    %rdx,%rsi
   1526a:	48 89 c7             	mov    %rax,%rdi
   1526d:	e8 54 a2 ff ff       	call   f4c6 <add_inst>
   15272:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15276:	eb 71                	jmp    152e9 <gencode_op+0x1b8>
   15278:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1527c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15280:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15284:	49 89 c8             	mov    %rcx,%r8
   15287:	48 89 d1             	mov    %rdx,%rcx
   1528a:	48 8d 15 8a 82 00 00 	lea    0x828a(%rip),%rdx        # 1d51b <__PRETTY_FUNCTION__.0+0x48b>
   15291:	be 32 00 00 00       	mov    $0x32,%esi
   15296:	48 89 c7             	mov    %rax,%rdi
   15299:	b8 00 00 00 00       	mov    $0x0,%eax
   1529e:	e8 0d d1 fe ff       	call   23b0 <snprintf@plt>
   152a3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   152a7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   152ab:	48 89 d6             	mov    %rdx,%rsi
   152ae:	48 89 c7             	mov    %rax,%rdi
   152b1:	e8 10 a2 ff ff       	call   f4c6 <add_inst>
   152b6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   152ba:	eb 2d                	jmp    152e9 <gencode_op+0x1b8>
   152bc:	48 8b 05 9d cd 00 00 	mov    0xcd9d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   152c3:	48 89 c1             	mov    %rax,%rcx
   152c6:	ba 17 00 00 00       	mov    $0x17,%edx
   152cb:	be 01 00 00 00       	mov    $0x1,%esi
   152d0:	48 8d 05 52 82 00 00 	lea    0x8252(%rip),%rax        # 1d529 <__PRETTY_FUNCTION__.0+0x499>
   152d7:	48 89 c7             	mov    %rax,%rdi
   152da:	e8 71 d2 fe ff       	call   2550 <fwrite@plt>
   152df:	bf 01 00 00 00       	mov    $0x1,%edi
   152e4:	e8 57 d2 fe ff       	call   2540 <exit@plt>
   152e9:	e9 ca 04 00 00       	jmp    157b8 <gencode_op+0x687>
   152ee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152f2:	8b 40 08             	mov    0x8(%rax),%eax
   152f5:	89 45 b0             	mov    %eax,-0x50(%rbp)
   152f8:	81 7d b0 32 01 00 00 	cmpl   $0x132,-0x50(%rbp)
   152ff:	75 47                	jne    15348 <gencode_op+0x217>
   15301:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   15305:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15309:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1530d:	49 89 c8             	mov    %rcx,%r8
   15310:	48 89 d1             	mov    %rdx,%rcx
   15313:	48 8d 15 27 82 00 00 	lea    0x8227(%rip),%rdx        # 1d541 <__PRETTY_FUNCTION__.0+0x4b1>
   1531a:	be 32 00 00 00       	mov    $0x32,%esi
   1531f:	48 89 c7             	mov    %rax,%rdi
   15322:	b8 00 00 00 00       	mov    $0x0,%eax
   15327:	e8 84 d0 fe ff       	call   23b0 <snprintf@plt>
   1532c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15330:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15334:	48 89 d6             	mov    %rdx,%rsi
   15337:	48 89 c7             	mov    %rax,%rdi
   1533a:	e8 87 a1 ff ff       	call   f4c6 <add_inst>
   1533f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15343:	e9 70 04 00 00       	jmp    157b8 <gencode_op+0x687>
   15348:	81 7d b0 35 01 00 00 	cmpl   $0x135,-0x50(%rbp)
   1534f:	0f 85 49 01 00 00    	jne    1549e <gencode_op+0x36d>
   15355:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15359:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1535d:	48 89 d1             	mov    %rdx,%rcx
   15360:	48 8d 15 8e 7e 00 00 	lea    0x7e8e(%rip),%rdx        # 1d1f5 <__PRETTY_FUNCTION__.0+0x165>
   15367:	be 32 00 00 00       	mov    $0x32,%esi
   1536c:	48 89 c7             	mov    %rax,%rdi
   1536f:	b8 00 00 00 00       	mov    $0x0,%eax
   15374:	e8 37 d0 fe ff       	call   23b0 <snprintf@plt>
   15379:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1537d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15381:	48 89 d6             	mov    %rdx,%rsi
   15384:	48 89 c7             	mov    %rax,%rdi
   15387:	e8 3a a1 ff ff       	call   f4c6 <add_inst>
   1538c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15390:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15394:	48 8d 15 b5 81 00 00 	lea    0x81b5(%rip),%rdx        # 1d550 <__PRETTY_FUNCTION__.0+0x4c0>
   1539b:	be 32 00 00 00       	mov    $0x32,%esi
   153a0:	48 89 c7             	mov    %rax,%rdi
   153a3:	b8 00 00 00 00       	mov    $0x0,%eax
   153a8:	e8 03 d0 fe ff       	call   23b0 <snprintf@plt>
   153ad:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   153b1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   153b5:	48 89 d6             	mov    %rdx,%rsi
   153b8:	48 89 c7             	mov    %rax,%rdi
   153bb:	e8 06 a1 ff ff       	call   f4c6 <add_inst>
   153c0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   153c4:	48 8d 45 b6          	lea    -0x4a(%rbp),%rax
   153c8:	48 8d 15 87 81 00 00 	lea    0x8187(%rip),%rdx        # 1d556 <__PRETTY_FUNCTION__.0+0x4c6>
   153cf:	be 0a 00 00 00       	mov    $0xa,%esi
   153d4:	48 89 c7             	mov    %rax,%rdi
   153d7:	b8 00 00 00 00       	mov    $0x0,%eax
   153dc:	e8 cf cf fe ff       	call   23b0 <snprintf@plt>
   153e1:	48 8d 4d b6          	lea    -0x4a(%rbp),%rcx
   153e5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   153e9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   153ed:	49 89 c8             	mov    %rcx,%r8
   153f0:	48 89 d1             	mov    %rdx,%rcx
   153f3:	48 8d 15 c8 7d 00 00 	lea    0x7dc8(%rip),%rdx        # 1d1c2 <__PRETTY_FUNCTION__.0+0x132>
   153fa:	be 32 00 00 00       	mov    $0x32,%esi
   153ff:	48 89 c7             	mov    %rax,%rdi
   15402:	b8 00 00 00 00       	mov    $0x0,%eax
   15407:	e8 a4 cf fe ff       	call   23b0 <snprintf@plt>
   1540c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15410:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15414:	48 89 d6             	mov    %rdx,%rsi
   15417:	48 89 c7             	mov    %rax,%rdi
   1541a:	e8 a7 a0 ff ff       	call   f4c6 <add_inst>
   1541f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15423:	48 8d 55 b6          	lea    -0x4a(%rbp),%rdx
   15427:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1542b:	48 89 d1             	mov    %rdx,%rcx
   1542e:	48 8d 15 0a 7e 00 00 	lea    0x7e0a(%rip),%rdx        # 1d23f <__PRETTY_FUNCTION__.0+0x1af>
   15435:	be 32 00 00 00       	mov    $0x32,%esi
   1543a:	48 89 c7             	mov    %rax,%rdi
   1543d:	b8 00 00 00 00       	mov    $0x0,%eax
   15442:	e8 69 cf fe ff       	call   23b0 <snprintf@plt>
   15447:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1544b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1544f:	48 89 d6             	mov    %rdx,%rsi
   15452:	48 89 c7             	mov    %rax,%rdi
   15455:	e8 6c a0 ff ff       	call   f4c6 <add_inst>
   1545a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1545e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15462:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15466:	48 89 d1             	mov    %rdx,%rcx
   15469:	48 8d 15 da 7d 00 00 	lea    0x7dda(%rip),%rdx        # 1d24a <__PRETTY_FUNCTION__.0+0x1ba>
   15470:	be 32 00 00 00       	mov    $0x32,%esi
   15475:	48 89 c7             	mov    %rax,%rdi
   15478:	b8 00 00 00 00       	mov    $0x0,%eax
   1547d:	e8 2e cf fe ff       	call   23b0 <snprintf@plt>
   15482:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15486:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1548a:	48 89 d6             	mov    %rdx,%rsi
   1548d:	48 89 c7             	mov    %rax,%rdi
   15490:	e8 31 a0 ff ff       	call   f4c6 <add_inst>
   15495:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15499:	e9 1a 03 00 00       	jmp    157b8 <gencode_op+0x687>
   1549e:	81 7d b0 33 01 00 00 	cmpl   $0x133,-0x50(%rbp)
   154a5:	74 0d                	je     154b4 <gencode_op+0x383>
   154a7:	81 7d b0 36 01 00 00 	cmpl   $0x136,-0x50(%rbp)
   154ae:	0f 85 3d 02 00 00    	jne    156f1 <gencode_op+0x5c0>
   154b4:	48 8b 05 a5 cb 00 00 	mov    0xcba5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   154bb:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   154bf:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   154c3:	48 8d 35 96 80 00 00 	lea    0x8096(%rip),%rsi        # 1d560 <__PRETTY_FUNCTION__.0+0x4d0>
   154ca:	48 89 c7             	mov    %rax,%rdi
   154cd:	b8 00 00 00 00       	mov    $0x0,%eax
   154d2:	e8 99 cf fe ff       	call   2470 <fprintf@plt>
   154d7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   154db:	48 8d 15 a8 80 00 00 	lea    0x80a8(%rip),%rdx        # 1d58a <__PRETTY_FUNCTION__.0+0x4fa>
   154e2:	be 32 00 00 00       	mov    $0x32,%esi
   154e7:	48 89 c7             	mov    %rax,%rdi
   154ea:	b8 00 00 00 00       	mov    $0x0,%eax
   154ef:	e8 bc ce fe ff       	call   23b0 <snprintf@plt>
   154f4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   154f8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   154fc:	48 89 d6             	mov    %rdx,%rsi
   154ff:	48 89 c7             	mov    %rax,%rdi
   15502:	e8 bf 9f ff ff       	call   f4c6 <add_inst>
   15507:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1550b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1550f:	48 8d 15 82 80 00 00 	lea    0x8082(%rip),%rdx        # 1d598 <__PRETTY_FUNCTION__.0+0x508>
   15516:	be 32 00 00 00       	mov    $0x32,%esi
   1551b:	48 89 c7             	mov    %rax,%rdi
   1551e:	b8 00 00 00 00       	mov    $0x0,%eax
   15523:	e8 88 ce fe ff       	call   23b0 <snprintf@plt>
   15528:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1552c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15530:	48 89 d6             	mov    %rdx,%rsi
   15533:	48 89 c7             	mov    %rax,%rdi
   15536:	e8 8b 9f ff ff       	call   f4c6 <add_inst>
   1553b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1553f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15543:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15547:	48 89 d1             	mov    %rdx,%rcx
   1554a:	48 8d 15 a4 7c 00 00 	lea    0x7ca4(%rip),%rdx        # 1d1f5 <__PRETTY_FUNCTION__.0+0x165>
   15551:	be 32 00 00 00       	mov    $0x32,%esi
   15556:	48 89 c7             	mov    %rax,%rdi
   15559:	b8 00 00 00 00       	mov    $0x0,%eax
   1555e:	e8 4d ce fe ff       	call   23b0 <snprintf@plt>
   15563:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15567:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1556b:	48 89 d6             	mov    %rdx,%rsi
   1556e:	48 89 c7             	mov    %rax,%rdi
   15571:	e8 50 9f ff ff       	call   f4c6 <add_inst>
   15576:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1557a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1557e:	48 8d 15 cb 7f 00 00 	lea    0x7fcb(%rip),%rdx        # 1d550 <__PRETTY_FUNCTION__.0+0x4c0>
   15585:	be 32 00 00 00       	mov    $0x32,%esi
   1558a:	48 89 c7             	mov    %rax,%rdi
   1558d:	b8 00 00 00 00       	mov    $0x0,%eax
   15592:	e8 19 ce fe ff       	call   23b0 <snprintf@plt>
   15597:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1559b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1559f:	48 89 d6             	mov    %rdx,%rsi
   155a2:	48 89 c7             	mov    %rax,%rdi
   155a5:	e8 1c 9f ff ff       	call   f4c6 <add_inst>
   155aa:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   155ae:	48 8d 45 b6          	lea    -0x4a(%rbp),%rax
   155b2:	48 8d 15 9d 7f 00 00 	lea    0x7f9d(%rip),%rdx        # 1d556 <__PRETTY_FUNCTION__.0+0x4c6>
   155b9:	be 0a 00 00 00       	mov    $0xa,%esi
   155be:	48 89 c7             	mov    %rax,%rdi
   155c1:	b8 00 00 00 00       	mov    $0x0,%eax
   155c6:	e8 e5 cd fe ff       	call   23b0 <snprintf@plt>
   155cb:	48 8d 4d b6          	lea    -0x4a(%rbp),%rcx
   155cf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   155d3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   155d7:	49 89 c8             	mov    %rcx,%r8
   155da:	48 89 d1             	mov    %rdx,%rcx
   155dd:	48 8d 15 de 7b 00 00 	lea    0x7bde(%rip),%rdx        # 1d1c2 <__PRETTY_FUNCTION__.0+0x132>
   155e4:	be 32 00 00 00       	mov    $0x32,%esi
   155e9:	48 89 c7             	mov    %rax,%rdi
   155ec:	b8 00 00 00 00       	mov    $0x0,%eax
   155f1:	e8 ba cd fe ff       	call   23b0 <snprintf@plt>
   155f6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   155fa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   155fe:	48 89 d6             	mov    %rdx,%rsi
   15601:	48 89 c7             	mov    %rax,%rdi
   15604:	e8 bd 9e ff ff       	call   f4c6 <add_inst>
   15609:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1560d:	48 8d 55 b6          	lea    -0x4a(%rbp),%rdx
   15611:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15615:	48 89 d1             	mov    %rdx,%rcx
   15618:	48 8d 15 20 7c 00 00 	lea    0x7c20(%rip),%rdx        # 1d23f <__PRETTY_FUNCTION__.0+0x1af>
   1561f:	be 32 00 00 00       	mov    $0x32,%esi
   15624:	48 89 c7             	mov    %rax,%rdi
   15627:	b8 00 00 00 00       	mov    $0x0,%eax
   1562c:	e8 7f cd fe ff       	call   23b0 <snprintf@plt>
   15631:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15635:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15639:	48 89 d6             	mov    %rdx,%rsi
   1563c:	48 89 c7             	mov    %rax,%rdi
   1563f:	e8 82 9e ff ff       	call   f4c6 <add_inst>
   15644:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15648:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1564c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15650:	48 89 d1             	mov    %rdx,%rcx
   15653:	48 8d 15 7f 7c 00 00 	lea    0x7c7f(%rip),%rdx        # 1d2d9 <__PRETTY_FUNCTION__.0+0x249>
   1565a:	be 32 00 00 00       	mov    $0x32,%esi
   1565f:	48 89 c7             	mov    %rax,%rdi
   15662:	b8 00 00 00 00       	mov    $0x0,%eax
   15667:	e8 44 cd fe ff       	call   23b0 <snprintf@plt>
   1566c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15670:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15674:	48 89 d6             	mov    %rdx,%rsi
   15677:	48 89 c7             	mov    %rax,%rdi
   1567a:	e8 47 9e ff ff       	call   f4c6 <add_inst>
   1567f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15683:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15687:	48 8d 15 18 7f 00 00 	lea    0x7f18(%rip),%rdx        # 1d5a6 <__PRETTY_FUNCTION__.0+0x516>
   1568e:	be 32 00 00 00       	mov    $0x32,%esi
   15693:	48 89 c7             	mov    %rax,%rdi
   15696:	b8 00 00 00 00       	mov    $0x0,%eax
   1569b:	e8 10 cd fe ff       	call   23b0 <snprintf@plt>
   156a0:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   156a4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   156a8:	48 89 d6             	mov    %rdx,%rsi
   156ab:	48 89 c7             	mov    %rax,%rdi
   156ae:	e8 13 9e ff ff       	call   f4c6 <add_inst>
   156b3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   156b7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   156bb:	48 8d 15 f1 7e 00 00 	lea    0x7ef1(%rip),%rdx        # 1d5b3 <__PRETTY_FUNCTION__.0+0x523>
   156c2:	be 32 00 00 00       	mov    $0x32,%esi
   156c7:	48 89 c7             	mov    %rax,%rdi
   156ca:	b8 00 00 00 00       	mov    $0x0,%eax
   156cf:	e8 dc cc fe ff       	call   23b0 <snprintf@plt>
   156d4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   156d8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   156dc:	48 89 d6             	mov    %rdx,%rsi
   156df:	48 89 c7             	mov    %rax,%rdi
   156e2:	e8 df 9d ff ff       	call   f4c6 <add_inst>
   156e7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   156eb:	90                   	nop
   156ec:	e9 c7 00 00 00       	jmp    157b8 <gencode_op+0x687>
   156f1:	81 7d b0 35 01 00 00 	cmpl   $0x135,-0x50(%rbp)
   156f8:	75 20                	jne    1571a <gencode_op+0x5e9>
   156fa:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   156fe:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   15702:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15706:	48 89 ce             	mov    %rcx,%rsi
   15709:	48 89 c7             	mov    %rax,%rdi
   1570c:	e8 db e7 ff ff       	call   13eec <gencode_modulus>
   15711:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15715:	e9 9e 00 00 00       	jmp    157b8 <gencode_op+0x687>
   1571a:	48 8b 05 3f c9 00 00 	mov    0xc93f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15721:	48 89 c1             	mov    %rax,%rcx
   15724:	ba 17 00 00 00       	mov    $0x17,%edx
   15729:	be 01 00 00 00       	mov    $0x1,%esi
   1572e:	48 8d 05 8b 7e 00 00 	lea    0x7e8b(%rip),%rax        # 1d5c0 <__PRETTY_FUNCTION__.0+0x530>
   15735:	48 89 c7             	mov    %rax,%rdi
   15738:	e8 13 ce fe ff       	call   2550 <fwrite@plt>
   1573d:	bf 01 00 00 00       	mov    $0x1,%edi
   15742:	e8 f9 cd fe ff       	call   2540 <exit@plt>
   15747:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   1574b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1574f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15753:	49 89 c8             	mov    %rcx,%r8
   15756:	48 89 d1             	mov    %rdx,%rcx
   15759:	48 8d 15 78 7e 00 00 	lea    0x7e78(%rip),%rdx        # 1d5d8 <__PRETTY_FUNCTION__.0+0x548>
   15760:	be 32 00 00 00       	mov    $0x32,%esi
   15765:	48 89 c7             	mov    %rax,%rdi
   15768:	b8 00 00 00 00       	mov    $0x0,%eax
   1576d:	e8 3e cc fe ff       	call   23b0 <snprintf@plt>
   15772:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15776:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1577a:	48 89 d6             	mov    %rdx,%rsi
   1577d:	48 89 c7             	mov    %rax,%rdi
   15780:	e8 41 9d ff ff       	call   f4c6 <add_inst>
   15785:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15789:	eb 2d                	jmp    157b8 <gencode_op+0x687>
   1578b:	48 8b 05 ce c8 00 00 	mov    0xc8ce(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15792:	48 89 c1             	mov    %rax,%rcx
   15795:	ba 29 00 00 00       	mov    $0x29,%edx
   1579a:	be 01 00 00 00       	mov    $0x1,%esi
   1579f:	48 8d 05 22 7d 00 00 	lea    0x7d22(%rip),%rax        # 1d4c8 <__PRETTY_FUNCTION__.0+0x438>
   157a6:	48 89 c7             	mov    %rax,%rdi
   157a9:	e8 a2 cd fe ff       	call   2550 <fwrite@plt>
   157ae:	bf 01 00 00 00       	mov    $0x1,%edi
   157b3:	e8 88 cd fe ff       	call   2540 <exit@plt>
   157b8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   157bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   157c0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   157c7:	00 00
   157c9:	74 05                	je     157d0 <gencode_op+0x69f>
   157cb:	e8 d0 cb fe ff       	call   23a0 <__stack_chk_fail@plt>
   157d0:	c9                   	leave
   157d1:	c3                   	ret

00000000000157d2 <gencode_op_deprecated>:
   157d2:	f3 0f 1e fa          	endbr64
   157d6:	55                   	push   %rbp
   157d7:	48 89 e5             	mov    %rsp,%rbp
   157da:	48 83 ec 30          	sub    $0x30,%rsp
   157de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   157e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   157e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   157ea:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   157ed:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   157f2:	75 28                	jne    1581c <gencode_op_deprecated+0x4a>
   157f4:	48 8d 05 f5 7e 00 00 	lea    0x7ef5(%rip),%rax        # 1d6f0 <__PRETTY_FUNCTION__.0>
   157fb:	48 89 c1             	mov    %rax,%rcx
   157fe:	ba 64 02 00 00       	mov    $0x264,%edx
   15803:	48 8d 05 a6 78 00 00 	lea    0x78a6(%rip),%rax        # 1d0b0 <__PRETTY_FUNCTION__.0+0x20>
   1580a:	48 89 c6             	mov    %rax,%rsi
   1580d:	48 8d 05 d4 78 00 00 	lea    0x78d4(%rip),%rax        # 1d0e8 <__PRETTY_FUNCTION__.0+0x58>
   15814:	48 89 c7             	mov    %rax,%rdi
   15817:	e8 b4 cb fe ff       	call   23d0 <__assert_fail@plt>
   1581c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15820:	8b 40 04             	mov    0x4(%rax),%eax
   15823:	83 f8 02             	cmp    $0x2,%eax
   15826:	74 0e                	je     15836 <gencode_op_deprecated+0x64>
   15828:	83 f8 03             	cmp    $0x3,%eax
   1582b:	0f 84 9a 00 00 00    	je     158cb <gencode_op_deprecated+0xf9>
   15831:	e9 f8 00 00 00       	jmp    1592e <gencode_op_deprecated+0x15c>
   15836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1583a:	8b 40 08             	mov    0x8(%rax),%eax
   1583d:	89 45 fc             	mov    %eax,-0x4(%rbp)
   15840:	81 7d fc 2e 01 00 00 	cmpl   $0x12e,-0x4(%rbp)
   15847:	75 26                	jne    1586f <gencode_op_deprecated+0x9d>
   15849:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1584c:	48 63 c8             	movslq %eax,%rcx
   1584f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15853:	48 8d 15 8c 7d 00 00 	lea    0x7d8c(%rip),%rdx        # 1d5e6 <__PRETTY_FUNCTION__.0+0x556>
   1585a:	48 89 ce             	mov    %rcx,%rsi
   1585d:	48 89 c7             	mov    %rax,%rdi
   15860:	b8 00 00 00 00       	mov    $0x0,%eax
   15865:	e8 46 cb fe ff       	call   23b0 <snprintf@plt>
   1586a:	e9 ec 00 00 00       	jmp    1595b <gencode_op_deprecated+0x189>
   1586f:	81 7d fc 2f 01 00 00 	cmpl   $0x12f,-0x4(%rbp)
   15876:	75 26                	jne    1589e <gencode_op_deprecated+0xcc>
   15878:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1587b:	48 63 c8             	movslq %eax,%rcx
   1587e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15882:	48 8d 15 62 7d 00 00 	lea    0x7d62(%rip),%rdx        # 1d5eb <__PRETTY_FUNCTION__.0+0x55b>
   15889:	48 89 ce             	mov    %rcx,%rsi
   1588c:	48 89 c7             	mov    %rax,%rdi
   1588f:	b8 00 00 00 00       	mov    $0x0,%eax
   15894:	e8 17 cb fe ff       	call   23b0 <snprintf@plt>
   15899:	e9 bd 00 00 00       	jmp    1595b <gencode_op_deprecated+0x189>
   1589e:	48 8b 05 bb c7 00 00 	mov    0xc7bb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   158a5:	48 89 c1             	mov    %rax,%rcx
   158a8:	ba 17 00 00 00       	mov    $0x17,%edx
   158ad:	be 01 00 00 00       	mov    $0x1,%esi
   158b2:	48 8d 05 70 7c 00 00 	lea    0x7c70(%rip),%rax        # 1d529 <__PRETTY_FUNCTION__.0+0x499>
   158b9:	48 89 c7             	mov    %rax,%rdi
   158bc:	e8 8f cc fe ff       	call   2550 <fwrite@plt>
   158c1:	bf 01 00 00 00       	mov    $0x1,%edi
   158c6:	e8 75 cc fe ff       	call   2540 <exit@plt>
   158cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158cf:	8b 40 08             	mov    0x8(%rax),%eax
   158d2:	89 45 fc             	mov    %eax,-0x4(%rbp)
   158d5:	81 7d fc 32 01 00 00 	cmpl   $0x132,-0x4(%rbp)
   158dc:	75 23                	jne    15901 <gencode_op_deprecated+0x12f>
   158de:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   158e1:	48 63 c8             	movslq %eax,%rcx
   158e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   158e8:	48 8d 15 01 7d 00 00 	lea    0x7d01(%rip),%rdx        # 1d5f0 <__PRETTY_FUNCTION__.0+0x560>
   158ef:	48 89 ce             	mov    %rcx,%rsi
   158f2:	48 89 c7             	mov    %rax,%rdi
   158f5:	b8 00 00 00 00       	mov    $0x0,%eax
   158fa:	e8 b1 ca fe ff       	call   23b0 <snprintf@plt>
   158ff:	eb 5a                	jmp    1595b <gencode_op_deprecated+0x189>
   15901:	48 8b 05 58 c7 00 00 	mov    0xc758(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15908:	48 89 c1             	mov    %rax,%rcx
   1590b:	ba 17 00 00 00       	mov    $0x17,%edx
   15910:	be 01 00 00 00       	mov    $0x1,%esi
   15915:	48 8d 05 a4 7c 00 00 	lea    0x7ca4(%rip),%rax        # 1d5c0 <__PRETTY_FUNCTION__.0+0x530>
   1591c:	48 89 c7             	mov    %rax,%rdi
   1591f:	e8 2c cc fe ff       	call   2550 <fwrite@plt>
   15924:	bf 01 00 00 00       	mov    $0x1,%edi
   15929:	e8 12 cc fe ff       	call   2540 <exit@plt>
   1592e:	48 8b 05 2b c7 00 00 	mov    0xc72b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15935:	48 89 c1             	mov    %rax,%rcx
   15938:	ba 29 00 00 00       	mov    $0x29,%edx
   1593d:	be 01 00 00 00       	mov    $0x1,%esi
   15942:	48 8d 05 7f 7b 00 00 	lea    0x7b7f(%rip),%rax        # 1d4c8 <__PRETTY_FUNCTION__.0+0x438>
   15949:	48 89 c7             	mov    %rax,%rdi
   1594c:	e8 ff cb fe ff       	call   2550 <fwrite@plt>
   15951:	bf 01 00 00 00       	mov    $0x1,%edi
   15956:	e8 e5 cb fe ff       	call   2540 <exit@plt>
   1595b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1595f:	c9                   	leave
   15960:	c3                   	ret

0000000000015961 <optimize>:
   15961:	f3 0f 1e fa          	endbr64
   15965:	55                   	push   %rbp
   15966:	48 89 e5             	mov    %rsp,%rbp
   15969:	48 83 ec 10          	sub    $0x10,%rsp
   1596d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15971:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15975:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1597a:	75 28                	jne    159a4 <optimize+0x43>
   1597c:	48 8d 05 a5 81 00 00 	lea    0x81a5(%rip),%rax        # 1db28 <__PRETTY_FUNCTION__.12>
   15983:	48 89 c1             	mov    %rax,%rcx
   15986:	ba 32 00 00 00       	mov    $0x32,%edx
   1598b:	48 8d 05 8e 7d 00 00 	lea    0x7d8e(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15992:	48 89 c6             	mov    %rax,%rsi
   15995:	48 8d 05 a1 7d 00 00 	lea    0x7da1(%rip),%rax        # 1d73d <__PRETTY_FUNCTION__.0+0x4d>
   1599c:	48 89 c7             	mov    %rax,%rdi
   1599f:	e8 2c ca fe ff       	call   23d0 <__assert_fail@plt>
   159a4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   159a9:	75 28                	jne    159d3 <optimize+0x72>
   159ab:	48 8d 05 76 81 00 00 	lea    0x8176(%rip),%rax        # 1db28 <__PRETTY_FUNCTION__.12>
   159b2:	48 89 c1             	mov    %rax,%rcx
   159b5:	ba 33 00 00 00       	mov    $0x33,%edx
   159ba:	48 8d 05 5f 7d 00 00 	lea    0x7d5f(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   159c1:	48 89 c6             	mov    %rax,%rsi
   159c4:	48 8d 05 81 7d 00 00 	lea    0x7d81(%rip),%rax        # 1d74c <__PRETTY_FUNCTION__.0+0x5c>
   159cb:	48 89 c7             	mov    %rax,%rdi
   159ce:	e8 fd c9 fe ff       	call   23d0 <__assert_fail@plt>
   159d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159d7:	8b 40 04             	mov    0x4(%rax),%eax
   159da:	85 c0                	test   %eax,%eax
   159dc:	74 07                	je     159e5 <optimize+0x84>
   159de:	83 f8 01             	cmp    $0x1,%eax
   159e1:	74 17                	je     159fa <optimize+0x99>
   159e3:	eb 2a                	jmp    15a0f <optimize+0xae>
   159e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   159e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159ed:	48 89 d6             	mov    %rdx,%rsi
   159f0:	48 89 c7             	mov    %rax,%rdi
   159f3:	e8 3d 00 00 00       	call   15a35 <optimize_prog>
   159f8:	eb 39                	jmp    15a33 <optimize+0xd2>
   159fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   159fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a02:	48 89 d6             	mov    %rdx,%rsi
   15a05:	48 89 c7             	mov    %rax,%rdi
   15a08:	e8 73 02 00 00       	call   15c80 <optimize_subprog>
   15a0d:	eb 24                	jmp    15a33 <optimize+0xd2>
   15a0f:	48 8b 05 4a c6 00 00 	mov    0xc64a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15a16:	48 89 c1             	mov    %rax,%rcx
   15a19:	ba 3e 00 00 00       	mov    $0x3e,%edx
   15a1e:	be 01 00 00 00       	mov    $0x1,%esi
   15a23:	48 8d 05 36 7d 00 00 	lea    0x7d36(%rip),%rax        # 1d760 <__PRETTY_FUNCTION__.0+0x70>
   15a2a:	48 89 c7             	mov    %rax,%rdi
   15a2d:	e8 1e cb fe ff       	call   2550 <fwrite@plt>
   15a32:	90                   	nop
   15a33:	c9                   	leave
   15a34:	c3                   	ret

0000000000015a35 <optimize_prog>:
   15a35:	f3 0f 1e fa          	endbr64
   15a39:	55                   	push   %rbp
   15a3a:	48 89 e5             	mov    %rsp,%rbp
   15a3d:	48 83 ec 40          	sub    $0x40,%rsp
   15a41:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15a45:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15a49:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15a50:	00 00
   15a52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15a56:	31 c0                	xor    %eax,%eax
   15a58:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   15a5d:	75 28                	jne    15a87 <optimize_prog+0x52>
   15a5f:	48 8d 05 d2 80 00 00 	lea    0x80d2(%rip),%rax        # 1db38 <__PRETTY_FUNCTION__.11>
   15a66:	48 89 c1             	mov    %rax,%rcx
   15a69:	ba 48 00 00 00       	mov    $0x48,%edx
   15a6e:	48 8d 05 ab 7c 00 00 	lea    0x7cab(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15a75:	48 89 c6             	mov    %rax,%rsi
   15a78:	48 8d 05 be 7c 00 00 	lea    0x7cbe(%rip),%rax        # 1d73d <__PRETTY_FUNCTION__.0+0x4d>
   15a7f:	48 89 c7             	mov    %rax,%rdi
   15a82:	e8 49 c9 fe ff       	call   23d0 <__assert_fail@plt>
   15a87:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15a8c:	75 28                	jne    15ab6 <optimize_prog+0x81>
   15a8e:	48 8d 05 a3 80 00 00 	lea    0x80a3(%rip),%rax        # 1db38 <__PRETTY_FUNCTION__.11>
   15a95:	48 89 c1             	mov    %rax,%rcx
   15a98:	ba 49 00 00 00       	mov    $0x49,%edx
   15a9d:	48 8d 05 7c 7c 00 00 	lea    0x7c7c(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15aa4:	48 89 c6             	mov    %rax,%rsi
   15aa7:	48 8d 05 f1 7c 00 00 	lea    0x7cf1(%rip),%rax        # 1d79f <__PRETTY_FUNCTION__.0+0xaf>
   15aae:	48 89 c7             	mov    %rax,%rdi
   15ab1:	e8 1a c9 fe ff       	call   23d0 <__assert_fail@plt>
   15ab6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15aba:	8b 40 04             	mov    0x4(%rax),%eax
   15abd:	85 c0                	test   %eax,%eax
   15abf:	74 28                	je     15ae9 <optimize_prog+0xb4>
   15ac1:	48 8d 05 70 80 00 00 	lea    0x8070(%rip),%rax        # 1db38 <__PRETTY_FUNCTION__.11>
   15ac8:	48 89 c1             	mov    %rax,%rcx
   15acb:	ba 4a 00 00 00       	mov    $0x4a,%edx
   15ad0:	48 8d 05 49 7c 00 00 	lea    0x7c49(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15ad7:	48 89 c6             	mov    %rax,%rsi
   15ada:	48 8d 05 cf 7c 00 00 	lea    0x7ccf(%rip),%rax        # 1d7b0 <__PRETTY_FUNCTION__.0+0xc0>
   15ae1:	48 89 c7             	mov    %rax,%rdi
   15ae4:	e8 e7 c8 fe ff       	call   23d0 <__assert_fail@plt>
   15ae9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15aed:	48 83 c0 08          	add    $0x8,%rax
   15af1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15af5:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   15afc:	00
   15afd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b01:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15b05:	b8 00 00 00 00       	mov    $0x0,%eax
   15b0a:	e8 83 25 ff ff       	call   8092 <optimize_flag>
   15b0f:	83 f8 01             	cmp    $0x1,%eax
   15b12:	0f 8e 33 01 00 00    	jle    15c4b <optimize_prog+0x216>
   15b18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b1c:	48 8b 50 28          	mov    0x28(%rax),%rdx
   15b20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b24:	48 89 d6             	mov    %rdx,%rsi
   15b27:	48 89 c7             	mov    %rax,%rdi
   15b2a:	e8 9d 03 00 00       	call   15ecc <decrement_self_references>
   15b2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b33:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15b37:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15b3b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15b3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b43:	48 89 c7             	mov    %rax,%rdi
   15b46:	e8 ee 11 00 00       	call   16d39 <set_vars_lists>
   15b4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b4f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15b53:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15b5a:	8b 45 d0             	mov    -0x30(%rbp),%eax
   15b5d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15b60:	e9 c3 00 00 00       	jmp    15c28 <optimize_prog+0x1f3>
   15b65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b69:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15b6d:	48 8b 05 ec c4 00 00 	mov    0xc4ec(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15b74:	48 8d 0d 55 7c 00 00 	lea    0x7c55(%rip),%rcx        # 1d7d0 <__PRETTY_FUNCTION__.0+0xe0>
   15b7b:	48 89 ce             	mov    %rcx,%rsi
   15b7e:	48 89 c7             	mov    %rax,%rdi
   15b81:	b8 00 00 00 00       	mov    $0x0,%eax
   15b86:	e8 e5 c8 fe ff       	call   2470 <fprintf@plt>
   15b8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b8f:	48 8b 50 28          	mov    0x28(%rax),%rdx
   15b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b97:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15b9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b9f:	48 89 ce             	mov    %rcx,%rsi
   15ba2:	48 89 c7             	mov    %rax,%rdi
   15ba5:	e8 a5 05 00 00       	call   1614f <remove_mutation_statement>
   15baa:	01 45 d0             	add    %eax,-0x30(%rbp)
   15bad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15bb1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15bb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bb9:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15bbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15bc1:	48 89 ce             	mov    %rcx,%rsi
   15bc4:	48 89 c7             	mov    %rax,%rdi
   15bc7:	e8 67 04 00 00       	call   16033 <remove_var_decls>
   15bcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bd0:	48 8b 40 10          	mov    0x10(%rax),%rax
   15bd4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15bd8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15bdd:	75 49                	jne    15c28 <optimize_prog+0x1f3>
   15bdf:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   15be3:	7e 43                	jle    15c28 <optimize_prog+0x1f3>
   15be5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15be9:	48 89 c7             	mov    %rax,%rdi
   15bec:	e8 a5 28 ff ff       	call   8496 <DestroyList>
   15bf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15bf5:	48 89 c7             	mov    %rax,%rdi
   15bf8:	e8 99 28 ff ff       	call   8496 <DestroyList>
   15bfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c01:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15c05:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15c09:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15c0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c11:	48 89 c7             	mov    %rax,%rdi
   15c14:	e8 20 11 00 00       	call   16d39 <set_vars_lists>
   15c19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15c1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15c21:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15c28:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15c2d:	0f 85 32 ff ff ff    	jne    15b65 <optimize_prog+0x130>
   15c33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c37:	48 89 c7             	mov    %rax,%rdi
   15c3a:	e8 57 28 ff ff       	call   8496 <DestroyList>
   15c3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15c43:	48 89 c7             	mov    %rax,%rdi
   15c46:	e8 4b 28 ff ff       	call   8496 <DestroyList>
   15c4b:	b8 00 00 00 00       	mov    $0x0,%eax
   15c50:	e8 3d 24 ff ff       	call   8092 <optimize_flag>
   15c55:	85 c0                	test   %eax,%eax
   15c57:	7e 10                	jle    15c69 <optimize_prog+0x234>
   15c59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c5d:	48 8b 40 28          	mov    0x28(%rax),%rax
   15c61:	48 89 c7             	mov    %rax,%rdi
   15c64:	e8 c0 08 00 00       	call   16529 <simplify_stmt_expr>
   15c69:	90                   	nop
   15c6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c6e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   15c75:	00 00
   15c77:	74 05                	je     15c7e <optimize_prog+0x249>
   15c79:	e8 22 c7 fe ff       	call   23a0 <__stack_chk_fail@plt>
   15c7e:	c9                   	leave
   15c7f:	c3                   	ret

0000000000015c80 <optimize_subprog>:
   15c80:	f3 0f 1e fa          	endbr64
   15c84:	55                   	push   %rbp
   15c85:	48 89 e5             	mov    %rsp,%rbp
   15c88:	48 83 ec 40          	sub    $0x40,%rsp
   15c8c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15c90:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15c94:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15c9b:	00 00
   15c9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15ca1:	31 c0                	xor    %eax,%eax
   15ca3:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   15ca8:	75 28                	jne    15cd2 <optimize_subprog+0x52>
   15caa:	48 8d 05 9f 7e 00 00 	lea    0x7e9f(%rip),%rax        # 1db50 <__PRETTY_FUNCTION__.10>
   15cb1:	48 89 c1             	mov    %rax,%rcx
   15cb4:	ba 7e 00 00 00       	mov    $0x7e,%edx
   15cb9:	48 8d 05 60 7a 00 00 	lea    0x7a60(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15cc0:	48 89 c6             	mov    %rax,%rsi
   15cc3:	48 8d 05 73 7a 00 00 	lea    0x7a73(%rip),%rax        # 1d73d <__PRETTY_FUNCTION__.0+0x4d>
   15cca:	48 89 c7             	mov    %rax,%rdi
   15ccd:	e8 fe c6 fe ff       	call   23d0 <__assert_fail@plt>
   15cd2:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15cd7:	75 28                	jne    15d01 <optimize_subprog+0x81>
   15cd9:	48 8d 05 70 7e 00 00 	lea    0x7e70(%rip),%rax        # 1db50 <__PRETTY_FUNCTION__.10>
   15ce0:	48 89 c1             	mov    %rax,%rcx
   15ce3:	ba 7f 00 00 00       	mov    $0x7f,%edx
   15ce8:	48 8d 05 31 7a 00 00 	lea    0x7a31(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15cef:	48 89 c6             	mov    %rax,%rsi
   15cf2:	48 8d 05 05 7b 00 00 	lea    0x7b05(%rip),%rax        # 1d7fe <__PRETTY_FUNCTION__.0+0x10e>
   15cf9:	48 89 c7             	mov    %rax,%rdi
   15cfc:	e8 cf c6 fe ff       	call   23d0 <__assert_fail@plt>
   15d01:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15d05:	8b 40 04             	mov    0x4(%rax),%eax
   15d08:	83 f8 01             	cmp    $0x1,%eax
   15d0b:	74 28                	je     15d35 <optimize_subprog+0xb5>
   15d0d:	48 8d 05 3c 7e 00 00 	lea    0x7e3c(%rip),%rax        # 1db50 <__PRETTY_FUNCTION__.10>
   15d14:	48 89 c1             	mov    %rax,%rcx
   15d17:	ba 80 00 00 00       	mov    $0x80,%edx
   15d1c:	48 8d 05 fd 79 00 00 	lea    0x79fd(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15d23:	48 89 c6             	mov    %rax,%rsi
   15d26:	48 8d 05 dd 7a 00 00 	lea    0x7add(%rip),%rax        # 1d80a <__PRETTY_FUNCTION__.0+0x11a>
   15d2d:	48 89 c7             	mov    %rax,%rdi
   15d30:	e8 9b c6 fe ff       	call   23d0 <__assert_fail@plt>
   15d35:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15d39:	48 83 c0 08          	add    $0x8,%rax
   15d3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15d41:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   15d48:	00
   15d49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d4d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15d51:	b8 00 00 00 00       	mov    $0x0,%eax
   15d56:	e8 37 23 ff ff       	call   8092 <optimize_flag>
   15d5b:	83 f8 01             	cmp    $0x1,%eax
   15d5e:	0f 8e 33 01 00 00    	jle    15e97 <optimize_subprog+0x217>
   15d64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d68:	48 8b 50 48          	mov    0x48(%rax),%rdx
   15d6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d70:	48 89 d6             	mov    %rdx,%rsi
   15d73:	48 89 c7             	mov    %rax,%rdi
   15d76:	e8 51 01 00 00       	call   15ecc <decrement_self_references>
   15d7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d7f:	48 8b 70 38          	mov    0x38(%rax),%rsi
   15d83:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15d87:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15d8b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d8f:	48 89 c7             	mov    %rax,%rdi
   15d92:	e8 a2 0f 00 00       	call   16d39 <set_vars_lists>
   15d97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d9b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15d9f:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15da6:	8b 45 d0             	mov    -0x30(%rbp),%eax
   15da9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15dac:	e9 c3 00 00 00       	jmp    15e74 <optimize_subprog+0x1f4>
   15db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15db5:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15db9:	48 8b 05 a0 c2 00 00 	mov    0xc2a0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15dc0:	48 8d 0d 09 7a 00 00 	lea    0x7a09(%rip),%rcx        # 1d7d0 <__PRETTY_FUNCTION__.0+0xe0>
   15dc7:	48 89 ce             	mov    %rcx,%rsi
   15dca:	48 89 c7             	mov    %rax,%rdi
   15dcd:	b8 00 00 00 00       	mov    $0x0,%eax
   15dd2:	e8 99 c6 fe ff       	call   2470 <fprintf@plt>
   15dd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ddb:	48 8b 50 48          	mov    0x48(%rax),%rdx
   15ddf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15de3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15de7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15deb:	48 89 ce             	mov    %rcx,%rsi
   15dee:	48 89 c7             	mov    %rax,%rdi
   15df1:	e8 59 03 00 00       	call   1614f <remove_mutation_statement>
   15df6:	01 45 d0             	add    %eax,-0x30(%rbp)
   15df9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15dfd:	48 8b 50 38          	mov    0x38(%rax),%rdx
   15e01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e05:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15e09:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e0d:	48 89 ce             	mov    %rcx,%rsi
   15e10:	48 89 c7             	mov    %rax,%rdi
   15e13:	e8 1b 02 00 00       	call   16033 <remove_var_decls>
   15e18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e1c:	48 8b 40 10          	mov    0x10(%rax),%rax
   15e20:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15e24:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15e29:	75 49                	jne    15e74 <optimize_subprog+0x1f4>
   15e2b:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   15e2f:	7e 43                	jle    15e74 <optimize_subprog+0x1f4>
   15e31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e35:	48 89 c7             	mov    %rax,%rdi
   15e38:	e8 59 26 ff ff       	call   8496 <DestroyList>
   15e3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e41:	48 89 c7             	mov    %rax,%rdi
   15e44:	e8 4d 26 ff ff       	call   8496 <DestroyList>
   15e49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e4d:	48 8b 70 38          	mov    0x38(%rax),%rsi
   15e51:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15e55:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15e59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e5d:	48 89 c7             	mov    %rax,%rdi
   15e60:	e8 d4 0e 00 00       	call   16d39 <set_vars_lists>
   15e65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e69:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15e6d:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15e74:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15e79:	0f 85 32 ff ff ff    	jne    15db1 <optimize_subprog+0x131>
   15e7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e83:	48 89 c7             	mov    %rax,%rdi
   15e86:	e8 0b 26 ff ff       	call   8496 <DestroyList>
   15e8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e8f:	48 89 c7             	mov    %rax,%rdi
   15e92:	e8 ff 25 ff ff       	call   8496 <DestroyList>
   15e97:	b8 00 00 00 00       	mov    $0x0,%eax
   15e9c:	e8 f1 21 ff ff       	call   8092 <optimize_flag>
   15ea1:	85 c0                	test   %eax,%eax
   15ea3:	7e 10                	jle    15eb5 <optimize_subprog+0x235>
   15ea5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ea9:	48 8b 40 48          	mov    0x48(%rax),%rax
   15ead:	48 89 c7             	mov    %rax,%rdi
   15eb0:	e8 74 06 00 00       	call   16529 <simplify_stmt_expr>
   15eb5:	90                   	nop
   15eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15eba:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   15ec1:	00 00
   15ec3:	74 05                	je     15eca <optimize_subprog+0x24a>
   15ec5:	e8 d6 c4 fe ff       	call   23a0 <__stack_chk_fail@plt>
   15eca:	c9                   	leave
   15ecb:	c3                   	ret

0000000000015ecc <decrement_self_references>:
   15ecc:	f3 0f 1e fa          	endbr64
   15ed0:	55                   	push   %rbp
   15ed1:	48 89 e5             	mov    %rsp,%rbp
   15ed4:	48 83 ec 30          	sub    $0x30,%rsp
   15ed8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15edc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15ee0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   15ee5:	75 28                	jne    15f0f <decrement_self_references+0x43>
   15ee7:	48 8d 05 82 7c 00 00 	lea    0x7c82(%rip),%rax        # 1db70 <__PRETTY_FUNCTION__.9>
   15eee:	48 89 c1             	mov    %rax,%rcx
   15ef1:	ba b5 00 00 00       	mov    $0xb5,%edx
   15ef6:	48 8d 05 23 78 00 00 	lea    0x7823(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15efd:	48 89 c6             	mov    %rax,%rsi
   15f00:	48 8d 05 36 78 00 00 	lea    0x7836(%rip),%rax        # 1d73d <__PRETTY_FUNCTION__.0+0x4d>
   15f07:	48 89 c7             	mov    %rax,%rdi
   15f0a:	e8 c1 c4 fe ff       	call   23d0 <__assert_fail@plt>
   15f0f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15f14:	75 28                	jne    15f3e <decrement_self_references+0x72>
   15f16:	48 8d 05 53 7c 00 00 	lea    0x7c53(%rip),%rax        # 1db70 <__PRETTY_FUNCTION__.9>
   15f1d:	48 89 c1             	mov    %rax,%rcx
   15f20:	ba b6 00 00 00       	mov    $0xb6,%edx
   15f25:	48 8d 05 f4 77 00 00 	lea    0x77f4(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15f2c:	48 89 c6             	mov    %rax,%rsi
   15f2f:	48 8d 05 f1 78 00 00 	lea    0x78f1(%rip),%rax        # 1d827 <__PRETTY_FUNCTION__.0+0x137>
   15f36:	48 89 c7             	mov    %rax,%rdi
   15f39:	e8 92 c4 fe ff       	call   23d0 <__assert_fail@plt>
   15f3e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15f42:	8b 40 04             	mov    0x4(%rax),%eax
   15f45:	85 c0                	test   %eax,%eax
   15f47:	74 0e                	je     15f57 <decrement_self_references+0x8b>
   15f49:	83 f8 02             	cmp    $0x2,%eax
   15f4c:	0f 84 a5 00 00 00    	je     15ff7 <decrement_self_references+0x12b>
   15f52:	e9 d9 00 00 00       	jmp    16030 <decrement_self_references+0x164>
   15f57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15f5b:	48 8b 40 08          	mov    0x8(%rax),%rax
   15f5f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15f63:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15f68:	75 28                	jne    15f92 <decrement_self_references+0xc6>
   15f6a:	48 8d 05 ff 7b 00 00 	lea    0x7bff(%rip),%rax        # 1db70 <__PRETTY_FUNCTION__.9>
   15f71:	48 89 c1             	mov    %rax,%rcx
   15f74:	ba c1 00 00 00       	mov    $0xc1,%edx
   15f79:	48 8d 05 a0 77 00 00 	lea    0x77a0(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15f80:	48 89 c6             	mov    %rax,%rsi
   15f83:	48 8d 05 aa 78 00 00 	lea    0x78aa(%rip),%rax        # 1d834 <__PRETTY_FUNCTION__.0+0x144>
   15f8a:	48 89 c7             	mov    %rax,%rdi
   15f8d:	e8 3e c4 fe ff       	call   23d0 <__assert_fail@plt>
   15f92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f96:	8b 40 04             	mov    0x4(%rax),%eax
   15f99:	83 f8 04             	cmp    $0x4,%eax
   15f9c:	74 28                	je     15fc6 <decrement_self_references+0xfa>
   15f9e:	48 8d 05 cb 7b 00 00 	lea    0x7bcb(%rip),%rax        # 1db70 <__PRETTY_FUNCTION__.9>
   15fa5:	48 89 c1             	mov    %rax,%rcx
   15fa8:	ba c2 00 00 00       	mov    $0xc2,%edx
   15fad:	48 8d 05 6c 77 00 00 	lea    0x776c(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   15fb4:	48 89 c6             	mov    %rax,%rsi
   15fb7:	48 8d 05 83 78 00 00 	lea    0x7883(%rip),%rax        # 1d841 <__PRETTY_FUNCTION__.0+0x151>
   15fbe:	48 89 c7             	mov    %rax,%rdi
   15fc1:	e8 0a c4 fe ff       	call   23d0 <__assert_fail@plt>
   15fc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15fca:	48 8b 40 08          	mov    0x8(%rax),%rax
   15fce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15fd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15fd6:	48 8b 40 10          	mov    0x10(%rax),%rax
   15fda:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15fde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15fe2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   15fe6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15fea:	48 89 ce             	mov    %rcx,%rsi
   15fed:	48 89 c7             	mov    %rax,%rdi
   15ff0:	e8 01 09 00 00       	call   168f6 <decrement_reference_id_expr>
   15ff5:	eb 39                	jmp    16030 <decrement_self_references+0x164>
   15ff7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15ffb:	48 8b 40 08          	mov    0x8(%rax),%rax
   15fff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16003:	eb 23                	jmp    16028 <decrement_self_references+0x15c>
   16005:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16009:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1600d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16011:	48 89 d6             	mov    %rdx,%rsi
   16014:	48 89 c7             	mov    %rax,%rdi
   16017:	e8 b0 fe ff ff       	call   15ecc <decrement_self_references>
   1601c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16020:	48 8b 40 10          	mov    0x10(%rax),%rax
   16024:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16028:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1602d:	75 d6                	jne    16005 <decrement_self_references+0x139>
   1602f:	90                   	nop
   16030:	90                   	nop
   16031:	c9                   	leave
   16032:	c3                   	ret

0000000000016033 <remove_var_decls>:
   16033:	f3 0f 1e fa          	endbr64
   16037:	55                   	push   %rbp
   16038:	48 89 e5             	mov    %rsp,%rbp
   1603b:	48 83 ec 40          	sub    $0x40,%rsp
   1603f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16043:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16047:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1604b:	e9 f2 00 00 00       	jmp    16142 <remove_var_decls+0x10f>
   16050:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16054:	48 8b 40 08          	mov    0x8(%rax),%rax
   16058:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1605c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16060:	8b 40 04             	mov    0x4(%rax),%eax
   16063:	83 f8 02             	cmp    $0x2,%eax
   16066:	74 28                	je     16090 <remove_var_decls+0x5d>
   16068:	48 8d 05 21 7b 00 00 	lea    0x7b21(%rip),%rax        # 1db90 <__PRETTY_FUNCTION__.8>
   1606f:	48 89 c1             	mov    %rax,%rcx
   16072:	ba e2 00 00 00       	mov    $0xe2,%edx
   16077:	48 8d 05 a2 76 00 00 	lea    0x76a2(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   1607e:	48 89 c6             	mov    %rax,%rsi
   16081:	48 8d 05 d8 77 00 00 	lea    0x77d8(%rip),%rax        # 1d860 <__PRETTY_FUNCTION__.0+0x170>
   16088:	48 89 c7             	mov    %rax,%rdi
   1608b:	e8 40 c3 fe ff       	call   23d0 <__assert_fail@plt>
   16090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16094:	48 8b 40 08          	mov    0x8(%rax),%rax
   16098:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1609c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   160a3:	00
   160a4:	e9 82 00 00 00       	jmp    1612b <remove_var_decls+0xf8>
   160a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   160b1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   160b5:	48 89 d6             	mov    %rdx,%rsi
   160b8:	48 89 c7             	mov    %rax,%rdi
   160bb:	e8 90 c3 fe ff       	call   2450 <strcmp@plt>
   160c0:	85 c0                	test   %eax,%eax
   160c2:	75 53                	jne    16117 <remove_var_decls+0xe4>
   160c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   160cc:	48 89 c7             	mov    %rax,%rdi
   160cf:	e8 1c c2 fe ff       	call   22f0 <free@plt>
   160d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160d8:	48 8b 40 10          	mov    0x10(%rax),%rax
   160dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   160e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160e4:	48 89 c7             	mov    %rax,%rdi
   160e7:	e8 04 c2 fe ff       	call   22f0 <free@plt>
   160ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   160f4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   160f9:	75 0e                	jne    16109 <remove_var_decls+0xd6>
   160fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   160ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16103:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16107:	eb 44                	jmp    1614d <remove_var_decls+0x11a>
   16109:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1610d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16111:	48 89 50 10          	mov    %rdx,0x10(%rax)
   16115:	eb 36                	jmp    1614d <remove_var_decls+0x11a>
   16117:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1611b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1611f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16123:	48 8b 40 10          	mov    0x10(%rax),%rax
   16127:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1612b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   16130:	0f 85 73 ff ff ff    	jne    160a9 <remove_var_decls+0x76>
   16136:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1613a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1613e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   16142:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   16147:	0f 85 03 ff ff ff    	jne    16050 <remove_var_decls+0x1d>
   1614d:	c9                   	leave
   1614e:	c3                   	ret

000000000001614f <remove_mutation_statement>:
   1614f:	f3 0f 1e fa          	endbr64
   16153:	55                   	push   %rbp
   16154:	48 89 e5             	mov    %rsp,%rbp
   16157:	48 83 ec 20          	sub    $0x20,%rsp
   1615b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1615f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16163:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16167:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1616c:	75 28                	jne    16196 <remove_mutation_statement+0x47>
   1616e:	48 8d 05 3b 7a 00 00 	lea    0x7a3b(%rip),%rax        # 1dbb0 <__PRETTY_FUNCTION__.7>
   16175:	48 89 c1             	mov    %rax,%rcx
   16178:	ba 06 01 00 00       	mov    $0x106,%edx
   1617d:	48 8d 05 9c 75 00 00 	lea    0x759c(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16184:	48 89 c6             	mov    %rax,%rsi
   16187:	48 8d 05 af 75 00 00 	lea    0x75af(%rip),%rax        # 1d73d <__PRETTY_FUNCTION__.0+0x4d>
   1618e:	48 89 c7             	mov    %rax,%rdi
   16191:	e8 3a c2 fe ff       	call   23d0 <__assert_fail@plt>
   16196:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1619b:	75 28                	jne    161c5 <remove_mutation_statement+0x76>
   1619d:	48 8d 05 0c 7a 00 00 	lea    0x7a0c(%rip),%rax        # 1dbb0 <__PRETTY_FUNCTION__.7>
   161a4:	48 89 c1             	mov    %rax,%rcx
   161a7:	ba 07 01 00 00       	mov    $0x107,%edx
   161ac:	48 8d 05 6d 75 00 00 	lea    0x756d(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   161b3:	48 89 c6             	mov    %rax,%rsi
   161b6:	48 8d 05 6a 76 00 00 	lea    0x766a(%rip),%rax        # 1d827 <__PRETTY_FUNCTION__.0+0x137>
   161bd:	48 89 c7             	mov    %rax,%rdi
   161c0:	e8 0b c2 fe ff       	call   23d0 <__assert_fail@plt>
   161c5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   161ca:	75 28                	jne    161f4 <remove_mutation_statement+0xa5>
   161cc:	48 8d 05 dd 79 00 00 	lea    0x79dd(%rip),%rax        # 1dbb0 <__PRETTY_FUNCTION__.7>
   161d3:	48 89 c1             	mov    %rax,%rcx
   161d6:	ba 08 01 00 00       	mov    $0x108,%edx
   161db:	48 8d 05 3e 75 00 00 	lea    0x753e(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   161e2:	48 89 c6             	mov    %rax,%rsi
   161e5:	48 8d 05 94 76 00 00 	lea    0x7694(%rip),%rax        # 1d880 <__PRETTY_FUNCTION__.0+0x190>
   161ec:	48 89 c7             	mov    %rax,%rdi
   161ef:	e8 dc c1 fe ff       	call   23d0 <__assert_fail@plt>
   161f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161f8:	8b 40 04             	mov    0x4(%rax),%eax
   161fb:	83 f8 02             	cmp    $0x2,%eax
   161fe:	74 29                	je     16229 <remove_mutation_statement+0xda>
   16200:	83 f8 02             	cmp    $0x2,%eax
   16203:	77 44                	ja     16249 <remove_mutation_statement+0xfa>
   16205:	85 c0                	test   %eax,%eax
   16207:	74 07                	je     16210 <remove_mutation_statement+0xc1>
   16209:	83 f8 01             	cmp    $0x1,%eax
   1620c:	74 34                	je     16242 <remove_mutation_statement+0xf3>
   1620e:	eb 39                	jmp    16249 <remove_mutation_statement+0xfa>
   16210:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16214:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1621c:	48 89 ce             	mov    %rcx,%rsi
   1621f:	48 89 c7             	mov    %rax,%rdi
   16222:	e8 4d 00 00 00       	call   16274 <remove_mutation_var_assign>
   16227:	eb 49                	jmp    16272 <remove_mutation_statement+0x123>
   16229:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1622d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16235:	48 89 ce             	mov    %rcx,%rsi
   16238:	48 89 c7             	mov    %rax,%rdi
   1623b:	e8 8d 01 00 00       	call   163cd <remove_mutation_compound_statement>
   16240:	eb 30                	jmp    16272 <remove_mutation_statement+0x123>
   16242:	b8 00 00 00 00       	mov    $0x0,%eax
   16247:	eb 29                	jmp    16272 <remove_mutation_statement+0x123>
   16249:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1624d:	8b 10                	mov    (%rax),%edx
   1624f:	48 8b 05 0a be 00 00 	mov    0xbe0a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16256:	48 8d 0d 33 76 00 00 	lea    0x7633(%rip),%rcx        # 1d890 <__PRETTY_FUNCTION__.0+0x1a0>
   1625d:	48 89 ce             	mov    %rcx,%rsi
   16260:	48 89 c7             	mov    %rax,%rdi
   16263:	b8 00 00 00 00       	mov    $0x0,%eax
   16268:	e8 03 c2 fe ff       	call   2470 <fprintf@plt>
   1626d:	b8 00 00 00 00       	mov    $0x0,%eax
   16272:	c9                   	leave
   16273:	c3                   	ret

0000000000016274 <remove_mutation_var_assign>:
   16274:	f3 0f 1e fa          	endbr64
   16278:	55                   	push   %rbp
   16279:	48 89 e5             	mov    %rsp,%rbp
   1627c:	48 83 ec 30          	sub    $0x30,%rsp
   16280:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16284:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16288:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1628c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   16291:	75 28                	jne    162bb <remove_mutation_var_assign+0x47>
   16293:	48 8d 05 36 79 00 00 	lea    0x7936(%rip),%rax        # 1dbd0 <__PRETTY_FUNCTION__.6>
   1629a:	48 89 c1             	mov    %rax,%rcx
   1629d:	ba 21 01 00 00       	mov    $0x121,%edx
   162a2:	48 8d 05 77 74 00 00 	lea    0x7477(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   162a9:	48 89 c6             	mov    %rax,%rsi
   162ac:	48 8d 05 0a 76 00 00 	lea    0x760a(%rip),%rax        # 1d8bd <__PRETTY_FUNCTION__.0+0x1cd>
   162b3:	48 89 c7             	mov    %rax,%rdi
   162b6:	e8 15 c1 fe ff       	call   23d0 <__assert_fail@plt>
   162bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162bf:	8b 40 04             	mov    0x4(%rax),%eax
   162c2:	85 c0                	test   %eax,%eax
   162c4:	74 28                	je     162ee <remove_mutation_var_assign+0x7a>
   162c6:	48 8d 05 03 79 00 00 	lea    0x7903(%rip),%rax        # 1dbd0 <__PRETTY_FUNCTION__.6>
   162cd:	48 89 c1             	mov    %rax,%rcx
   162d0:	ba 22 01 00 00       	mov    $0x122,%edx
   162d5:	48 8d 05 44 74 00 00 	lea    0x7444(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   162dc:	48 89 c6             	mov    %rax,%rsi
   162df:	48 8d 05 ea 75 00 00 	lea    0x75ea(%rip),%rax        # 1d8d0 <__PRETTY_FUNCTION__.0+0x1e0>
   162e6:	48 89 c7             	mov    %rax,%rdi
   162e9:	e8 e2 c0 fe ff       	call   23d0 <__assert_fail@plt>
   162ee:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   162f3:	75 28                	jne    1631d <remove_mutation_var_assign+0xa9>
   162f5:	48 8d 05 d4 78 00 00 	lea    0x78d4(%rip),%rax        # 1dbd0 <__PRETTY_FUNCTION__.6>
   162fc:	48 89 c1             	mov    %rax,%rcx
   162ff:	ba 23 01 00 00       	mov    $0x123,%edx
   16304:	48 8d 05 15 74 00 00 	lea    0x7415(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   1630b:	48 89 c6             	mov    %rax,%rsi
   1630e:	48 8d 05 6b 75 00 00 	lea    0x756b(%rip),%rax        # 1d880 <__PRETTY_FUNCTION__.0+0x190>
   16315:	48 89 c7             	mov    %rax,%rdi
   16318:	e8 b3 c0 fe ff       	call   23d0 <__assert_fail@plt>
   1631d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16321:	48 8b 40 08          	mov    0x8(%rax),%rax
   16325:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1632d:	8b 40 04             	mov    0x4(%rax),%eax
   16330:	83 f8 04             	cmp    $0x4,%eax
   16333:	74 28                	je     1635d <remove_mutation_var_assign+0xe9>
   16335:	48 8d 05 94 78 00 00 	lea    0x7894(%rip),%rax        # 1dbd0 <__PRETTY_FUNCTION__.6>
   1633c:	48 89 c1             	mov    %rax,%rcx
   1633f:	ba 28 01 00 00       	mov    $0x128,%edx
   16344:	48 8d 05 d5 73 00 00 	lea    0x73d5(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   1634b:	48 89 c6             	mov    %rax,%rsi
   1634e:	48 8d 05 9f 75 00 00 	lea    0x759f(%rip),%rax        # 1d8f4 <__PRETTY_FUNCTION__.0+0x204>
   16355:	48 89 c7             	mov    %rax,%rdi
   16358:	e8 73 c0 fe ff       	call   23d0 <__assert_fail@plt>
   1635d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16361:	48 8b 40 08          	mov    0x8(%rax),%rax
   16365:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16369:	48 89 d6             	mov    %rdx,%rsi
   1636c:	48 89 c7             	mov    %rax,%rdi
   1636f:	e8 dc c0 fe ff       	call   2450 <strcmp@plt>
   16374:	85 c0                	test   %eax,%eax
   16376:	75 4e                	jne    163c6 <remove_mutation_var_assign+0x152>
   16378:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1637c:	8b 10                	mov    (%rax),%edx
   1637e:	48 8b 05 db bc 00 00 	mov    0xbcdb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16385:	48 8d 0d 84 75 00 00 	lea    0x7584(%rip),%rcx        # 1d910 <__PRETTY_FUNCTION__.0+0x220>
   1638c:	48 89 ce             	mov    %rcx,%rsi
   1638f:	48 89 c7             	mov    %rax,%rdi
   16392:	b8 00 00 00 00       	mov    $0x0,%eax
   16397:	e8 d4 c0 fe ff       	call   2470 <fprintf@plt>
   1639c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   163a0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   163a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163a8:	48 89 d6             	mov    %rdx,%rsi
   163ab:	48 89 c7             	mov    %rax,%rdi
   163ae:	e8 84 07 00 00       	call   16b37 <decrement_reference_expr>
   163b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   163b7:	48 89 c7             	mov    %rax,%rdi
   163ba:	e8 e1 35 ff ff       	call   99a0 <destroy_stmt>
   163bf:	b8 01 00 00 00       	mov    $0x1,%eax
   163c4:	eb 05                	jmp    163cb <remove_mutation_var_assign+0x157>
   163c6:	b8 00 00 00 00       	mov    $0x0,%eax
   163cb:	c9                   	leave
   163cc:	c3                   	ret

00000000000163cd <remove_mutation_compound_statement>:
   163cd:	f3 0f 1e fa          	endbr64
   163d1:	55                   	push   %rbp
   163d2:	48 89 e5             	mov    %rsp,%rbp
   163d5:	48 83 ec 50          	sub    $0x50,%rsp
   163d9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   163dd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   163e1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   163e5:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   163ea:	75 28                	jne    16414 <remove_mutation_compound_statement+0x47>
   163ec:	48 8d 05 0d 78 00 00 	lea    0x780d(%rip),%rax        # 1dc00 <__PRETTY_FUNCTION__.5>
   163f3:	48 89 c1             	mov    %rax,%rcx
   163f6:	ba 3b 01 00 00       	mov    $0x13b,%edx
   163fb:	48 8d 05 1e 73 00 00 	lea    0x731e(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16402:	48 89 c6             	mov    %rax,%rsi
   16405:	48 8d 05 2f 75 00 00 	lea    0x752f(%rip),%rax        # 1d93b <__PRETTY_FUNCTION__.0+0x24b>
   1640c:	48 89 c7             	mov    %rax,%rdi
   1640f:	e8 bc bf fe ff       	call   23d0 <__assert_fail@plt>
   16414:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16418:	8b 40 04             	mov    0x4(%rax),%eax
   1641b:	83 f8 02             	cmp    $0x2,%eax
   1641e:	74 28                	je     16448 <remove_mutation_compound_statement+0x7b>
   16420:	48 8d 05 d9 77 00 00 	lea    0x77d9(%rip),%rax        # 1dc00 <__PRETTY_FUNCTION__.5>
   16427:	48 89 c1             	mov    %rax,%rcx
   1642a:	ba 3c 01 00 00       	mov    $0x13c,%edx
   1642f:	48 8d 05 ea 72 00 00 	lea    0x72ea(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16436:	48 89 c6             	mov    %rax,%rsi
   16439:	48 8d 05 18 75 00 00 	lea    0x7518(%rip),%rax        # 1d958 <__PRETTY_FUNCTION__.0+0x268>
   16440:	48 89 c7             	mov    %rax,%rdi
   16443:	e8 88 bf fe ff       	call   23d0 <__assert_fail@plt>
   16448:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1644d:	75 28                	jne    16477 <remove_mutation_compound_statement+0xaa>
   1644f:	48 8d 05 aa 77 00 00 	lea    0x77aa(%rip),%rax        # 1dc00 <__PRETTY_FUNCTION__.5>
   16456:	48 89 c1             	mov    %rax,%rcx
   16459:	ba 3d 01 00 00       	mov    $0x13d,%edx
   1645e:	48 8d 05 bb 72 00 00 	lea    0x72bb(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16465:	48 89 c6             	mov    %rax,%rsi
   16468:	48 8d 05 11 74 00 00 	lea    0x7411(%rip),%rax        # 1d880 <__PRETTY_FUNCTION__.0+0x190>
   1646f:	48 89 c7             	mov    %rax,%rdi
   16472:	e8 59 bf fe ff       	call   23d0 <__assert_fail@plt>
   16477:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1647b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1647f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16483:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1648a:	00
   1648b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   16492:	e9 82 00 00 00       	jmp    16519 <remove_mutation_compound_statement+0x14c>
   16497:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1649b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1649f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   164a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   164a7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   164ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164af:	48 89 ce             	mov    %rcx,%rsi
   164b2:	48 89 c7             	mov    %rax,%rdi
   164b5:	e8 95 fc ff ff       	call   1614f <remove_mutation_statement>
   164ba:	85 c0                	test   %eax,%eax
   164bc:	7e 47                	jle    16505 <remove_mutation_compound_statement+0x138>
   164be:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   164c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164c6:	48 8b 40 10          	mov    0x10(%rax),%rax
   164ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   164ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164d2:	48 89 c7             	mov    %rax,%rdi
   164d5:	e8 16 be fe ff       	call   22f0 <free@plt>
   164da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164de:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   164e2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   164e7:	75 0e                	jne    164f7 <remove_mutation_compound_statement+0x12a>
   164e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   164ed:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   164f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   164f5:	eb 22                	jmp    16519 <remove_mutation_compound_statement+0x14c>
   164f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164fb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   164ff:	48 89 50 10          	mov    %rdx,0x10(%rax)
   16503:	eb 14                	jmp    16519 <remove_mutation_compound_statement+0x14c>
   16505:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16509:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1650d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16511:	48 8b 40 10          	mov    0x10(%rax),%rax
   16515:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16519:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1651e:	0f 85 73 ff ff ff    	jne    16497 <remove_mutation_compound_statement+0xca>
   16524:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16527:	c9                   	leave
   16528:	c3                   	ret

0000000000016529 <simplify_stmt_expr>:
   16529:	f3 0f 1e fa          	endbr64
   1652d:	55                   	push   %rbp
   1652e:	48 89 e5             	mov    %rsp,%rbp
   16531:	48 83 ec 20          	sub    $0x20,%rsp
   16535:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16539:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1653e:	75 28                	jne    16568 <simplify_stmt_expr+0x3f>
   16540:	48 8d 05 e9 76 00 00 	lea    0x76e9(%rip),%rax        # 1dc30 <__PRETTY_FUNCTION__.4>
   16547:	48 89 c1             	mov    %rax,%rcx
   1654a:	ba 67 01 00 00       	mov    $0x167,%edx
   1654f:	48 8d 05 ca 71 00 00 	lea    0x71ca(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16556:	48 89 c6             	mov    %rax,%rsi
   16559:	48 8d 05 c7 72 00 00 	lea    0x72c7(%rip),%rax        # 1d827 <__PRETTY_FUNCTION__.0+0x137>
   16560:	48 89 c7             	mov    %rax,%rdi
   16563:	e8 68 be fe ff       	call   23d0 <__assert_fail@plt>
   16568:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1656c:	8b 40 04             	mov    0x4(%rax),%eax
   1656f:	85 c0                	test   %eax,%eax
   16571:	74 07                	je     1657a <simplify_stmt_expr+0x51>
   16573:	83 f8 02             	cmp    $0x2,%eax
   16576:	74 14                	je     1658c <simplify_stmt_expr+0x63>
   16578:	eb 44                	jmp    165be <simplify_stmt_expr+0x95>
   1657a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1657e:	48 83 c0 10          	add    $0x10,%rax
   16582:	48 89 c7             	mov    %rax,%rdi
   16585:	e8 37 00 00 00       	call   165c1 <simplify_expr>
   1658a:	eb 32                	jmp    165be <simplify_stmt_expr+0x95>
   1658c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16590:	48 8b 40 08          	mov    0x8(%rax),%rax
   16594:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16598:	eb 1c                	jmp    165b6 <simplify_stmt_expr+0x8d>
   1659a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1659e:	48 8b 40 08          	mov    0x8(%rax),%rax
   165a2:	48 89 c7             	mov    %rax,%rdi
   165a5:	e8 7f ff ff ff       	call   16529 <simplify_stmt_expr>
   165aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165ae:	48 8b 40 10          	mov    0x10(%rax),%rax
   165b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   165b6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   165bb:	75 dd                	jne    1659a <simplify_stmt_expr+0x71>
   165bd:	90                   	nop
   165be:	90                   	nop
   165bf:	c9                   	leave
   165c0:	c3                   	ret

00000000000165c1 <simplify_expr>:
   165c1:	f3 0f 1e fa          	endbr64
   165c5:	55                   	push   %rbp
   165c6:	48 89 e5             	mov    %rsp,%rbp
   165c9:	48 83 ec 30          	sub    $0x30,%rsp
   165cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   165d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165d5:	48 8b 00             	mov    (%rax),%rax
   165d8:	8b 40 04             	mov    0x4(%rax),%eax
   165db:	83 f8 08             	cmp    $0x8,%eax
   165de:	0f 87 0b 03 00 00    	ja     168ef <simplify_expr+0x32e>
   165e4:	83 f8 07             	cmp    $0x7,%eax
   165e7:	73 25                	jae    1660e <simplify_expr+0x4d>
   165e9:	83 f8 03             	cmp    $0x3,%eax
   165ec:	0f 84 fe 01 00 00    	je     167f0 <simplify_expr+0x22f>
   165f2:	83 f8 03             	cmp    $0x3,%eax
   165f5:	0f 87 f4 02 00 00    	ja     168ef <simplify_expr+0x32e>
   165fb:	83 f8 01             	cmp    $0x1,%eax
   165fe:	74 18                	je     16618 <simplify_expr+0x57>
   16600:	83 f8 02             	cmp    $0x2,%eax
   16603:	0f 84 e4 00 00 00    	je     166ed <simplify_expr+0x12c>
   16609:	e9 e1 02 00 00       	jmp    168ef <simplify_expr+0x32e>
   1660e:	b8 01 00 00 00       	mov    $0x1,%eax
   16613:	e9 dc 02 00 00       	jmp    168f4 <simplify_expr+0x333>
   16618:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1661c:	48 8b 00             	mov    (%rax),%rax
   1661f:	48 83 c0 08          	add    $0x8,%rax
   16623:	48 89 c7             	mov    %rax,%rdi
   16626:	e8 96 ff ff ff       	call   165c1 <simplify_expr>
   1662b:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1662e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16632:	48 8b 00             	mov    (%rax),%rax
   16635:	48 8b 40 08          	mov    0x8(%rax),%rax
   16639:	48 85 c0             	test   %rax,%rax
   1663c:	75 28                	jne    16666 <simplify_expr+0xa5>
   1663e:	48 8d 05 03 76 00 00 	lea    0x7603(%rip),%rax        # 1dc48 <__PRETTY_FUNCTION__.3>
   16645:	48 89 c1             	mov    %rax,%rcx
   16648:	ba 92 01 00 00       	mov    $0x192,%edx
   1664d:	48 8d 05 cc 70 00 00 	lea    0x70cc(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16654:	48 89 c6             	mov    %rax,%rsi
   16657:	48 8d 05 2a 73 00 00 	lea    0x732a(%rip),%rax        # 1d988 <__PRETTY_FUNCTION__.0+0x298>
   1665e:	48 89 c7             	mov    %rax,%rdi
   16661:	e8 6a bd fe ff       	call   23d0 <__assert_fail@plt>
   16666:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   1666a:	75 77                	jne    166e3 <simplify_expr+0x122>
   1666c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16670:	48 8b 00             	mov    (%rax),%rax
   16673:	8b 10                	mov    (%rax),%edx
   16675:	48 8b 05 e4 b9 00 00 	mov    0xb9e4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1667c:	48 8d 0d 2d 73 00 00 	lea    0x732d(%rip),%rcx        # 1d9b0 <__PRETTY_FUNCTION__.0+0x2c0>
   16683:	48 89 ce             	mov    %rcx,%rsi
   16686:	48 89 c7             	mov    %rax,%rdi
   16689:	b8 00 00 00 00       	mov    $0x0,%eax
   1668e:	e8 dd bd fe ff       	call   2470 <fprintf@plt>
   16693:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16697:	48 8b 00             	mov    (%rax),%rax
   1669a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1669e:	8b 40 08             	mov    0x8(%rax),%eax
   166a1:	f7 d8                	neg    %eax
   166a3:	89 45 ec             	mov    %eax,-0x14(%rbp)
   166a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166aa:	48 8b 00             	mov    (%rax),%rax
   166ad:	8b 00                	mov    (%rax),%eax
   166af:	8b 55 ec             	mov    -0x14(%rbp),%edx
   166b2:	89 d6                	mov    %edx,%esi
   166b4:	89 c7                	mov    %eax,%edi
   166b6:	e8 e2 3e ff ff       	call   a59d <mk_inum>
   166bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   166bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166c3:	48 8b 00             	mov    (%rax),%rax
   166c6:	48 89 c7             	mov    %rax,%rdi
   166c9:	e8 b4 34 ff ff       	call   9b82 <destroy_expr>
   166ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166d6:	48 89 10             	mov    %rdx,(%rax)
   166d9:	b8 01 00 00 00       	mov    $0x1,%eax
   166de:	e9 11 02 00 00       	jmp    168f4 <simplify_expr+0x333>
   166e3:	b8 00 00 00 00       	mov    $0x0,%eax
   166e8:	e9 07 02 00 00       	jmp    168f4 <simplify_expr+0x333>
   166ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166f1:	48 8b 00             	mov    (%rax),%rax
   166f4:	48 83 c0 10          	add    $0x10,%rax
   166f8:	48 89 c7             	mov    %rax,%rdi
   166fb:	e8 c1 fe ff ff       	call   165c1 <simplify_expr>
   16700:	89 45 f0             	mov    %eax,-0x10(%rbp)
   16703:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16707:	48 8b 00             	mov    (%rax),%rax
   1670a:	48 83 c0 18          	add    $0x18,%rax
   1670e:	48 89 c7             	mov    %rax,%rdi
   16711:	e8 ab fe ff ff       	call   165c1 <simplify_expr>
   16716:	89 45 f4             	mov    %eax,-0xc(%rbp)
   16719:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   1671d:	0f 85 c3 00 00 00    	jne    167e6 <simplify_expr+0x225>
   16723:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   16727:	0f 85 b9 00 00 00    	jne    167e6 <simplify_expr+0x225>
   1672d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16731:	48 8b 00             	mov    (%rax),%rax
   16734:	8b 10                	mov    (%rax),%edx
   16736:	48 8b 05 23 b9 00 00 	mov    0xb923(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1673d:	48 8d 0d a4 72 00 00 	lea    0x72a4(%rip),%rcx        # 1d9e8 <__PRETTY_FUNCTION__.0+0x2f8>
   16744:	48 89 ce             	mov    %rcx,%rsi
   16747:	48 89 c7             	mov    %rax,%rdi
   1674a:	b8 00 00 00 00       	mov    $0x0,%eax
   1674f:	e8 1c bd fe ff       	call   2470 <fprintf@plt>
   16754:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16758:	48 8b 00             	mov    (%rax),%rax
   1675b:	8b 40 08             	mov    0x8(%rax),%eax
   1675e:	3d 2e 01 00 00       	cmp    $0x12e,%eax
   16763:	75 23                	jne    16788 <simplify_expr+0x1c7>
   16765:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16769:	48 8b 00             	mov    (%rax),%rax
   1676c:	48 8b 40 10          	mov    0x10(%rax),%rax
   16770:	8b 50 08             	mov    0x8(%rax),%edx
   16773:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16777:	48 8b 00             	mov    (%rax),%rax
   1677a:	48 8b 40 18          	mov    0x18(%rax),%rax
   1677e:	8b 40 08             	mov    0x8(%rax),%eax
   16781:	01 d0                	add    %edx,%eax
   16783:	89 45 ec             	mov    %eax,-0x14(%rbp)
   16786:	eb 21                	jmp    167a9 <simplify_expr+0x1e8>
   16788:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1678c:	48 8b 00             	mov    (%rax),%rax
   1678f:	48 8b 40 10          	mov    0x10(%rax),%rax
   16793:	8b 50 08             	mov    0x8(%rax),%edx
   16796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1679a:	48 8b 00             	mov    (%rax),%rax
   1679d:	48 8b 40 18          	mov    0x18(%rax),%rax
   167a1:	8b 40 08             	mov    0x8(%rax),%eax
   167a4:	29 c2                	sub    %eax,%edx
   167a6:	89 55 ec             	mov    %edx,-0x14(%rbp)
   167a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167ad:	48 8b 00             	mov    (%rax),%rax
   167b0:	8b 00                	mov    (%rax),%eax
   167b2:	8b 55 ec             	mov    -0x14(%rbp),%edx
   167b5:	89 d6                	mov    %edx,%esi
   167b7:	89 c7                	mov    %eax,%edi
   167b9:	e8 df 3d ff ff       	call   a59d <mk_inum>
   167be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   167c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167c6:	48 8b 00             	mov    (%rax),%rax
   167c9:	48 89 c7             	mov    %rax,%rdi
   167cc:	e8 b1 33 ff ff       	call   9b82 <destroy_expr>
   167d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   167d9:	48 89 10             	mov    %rdx,(%rax)
   167dc:	b8 01 00 00 00       	mov    $0x1,%eax
   167e1:	e9 0e 01 00 00       	jmp    168f4 <simplify_expr+0x333>
   167e6:	b8 00 00 00 00       	mov    $0x0,%eax
   167eb:	e9 04 01 00 00       	jmp    168f4 <simplify_expr+0x333>
   167f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167f4:	48 8b 00             	mov    (%rax),%rax
   167f7:	48 83 c0 10          	add    $0x10,%rax
   167fb:	48 89 c7             	mov    %rax,%rdi
   167fe:	e8 be fd ff ff       	call   165c1 <simplify_expr>
   16803:	89 45 f0             	mov    %eax,-0x10(%rbp)
   16806:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1680a:	48 8b 00             	mov    (%rax),%rax
   1680d:	48 83 c0 18          	add    $0x18,%rax
   16811:	48 89 c7             	mov    %rax,%rdi
   16814:	e8 a8 fd ff ff       	call   165c1 <simplify_expr>
   16819:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1681c:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   16820:	0f 85 c2 00 00 00    	jne    168e8 <simplify_expr+0x327>
   16826:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   1682a:	0f 85 b8 00 00 00    	jne    168e8 <simplify_expr+0x327>
   16830:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16834:	48 8b 00             	mov    (%rax),%rax
   16837:	8b 10                	mov    (%rax),%edx
   16839:	48 8b 05 20 b8 00 00 	mov    0xb820(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16840:	48 8d 0d d9 71 00 00 	lea    0x71d9(%rip),%rcx        # 1da20 <__PRETTY_FUNCTION__.0+0x330>
   16847:	48 89 ce             	mov    %rcx,%rsi
   1684a:	48 89 c7             	mov    %rax,%rdi
   1684d:	b8 00 00 00 00       	mov    $0x0,%eax
   16852:	e8 19 bc fe ff       	call   2470 <fprintf@plt>
   16857:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1685b:	48 8b 00             	mov    (%rax),%rax
   1685e:	8b 40 08             	mov    0x8(%rax),%eax
   16861:	3d 32 01 00 00       	cmp    $0x132,%eax
   16866:	75 24                	jne    1688c <simplify_expr+0x2cb>
   16868:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1686c:	48 8b 00             	mov    (%rax),%rax
   1686f:	48 8b 40 10          	mov    0x10(%rax),%rax
   16873:	8b 50 08             	mov    0x8(%rax),%edx
   16876:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1687a:	48 8b 00             	mov    (%rax),%rax
   1687d:	48 8b 40 18          	mov    0x18(%rax),%rax
   16881:	8b 40 08             	mov    0x8(%rax),%eax
   16884:	0f af c2             	imul   %edx,%eax
   16887:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1688a:	eb 22                	jmp    168ae <simplify_expr+0x2ed>
   1688c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16890:	48 8b 00             	mov    (%rax),%rax
   16893:	48 8b 40 10          	mov    0x10(%rax),%rax
   16897:	8b 40 08             	mov    0x8(%rax),%eax
   1689a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1689e:	48 8b 12             	mov    (%rdx),%rdx
   168a1:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   168a5:	8b 4a 08             	mov    0x8(%rdx),%ecx
   168a8:	99                   	cltd
   168a9:	f7 f9                	idiv   %ecx
   168ab:	89 45 ec             	mov    %eax,-0x14(%rbp)
   168ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168b2:	48 8b 00             	mov    (%rax),%rax
   168b5:	8b 00                	mov    (%rax),%eax
   168b7:	8b 55 ec             	mov    -0x14(%rbp),%edx
   168ba:	89 d6                	mov    %edx,%esi
   168bc:	89 c7                	mov    %eax,%edi
   168be:	e8 da 3c ff ff       	call   a59d <mk_inum>
   168c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   168c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168cb:	48 8b 00             	mov    (%rax),%rax
   168ce:	48 89 c7             	mov    %rax,%rdi
   168d1:	e8 ac 32 ff ff       	call   9b82 <destroy_expr>
   168d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168da:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   168de:	48 89 10             	mov    %rdx,(%rax)
   168e1:	b8 01 00 00 00       	mov    $0x1,%eax
   168e6:	eb 0c                	jmp    168f4 <simplify_expr+0x333>
   168e8:	b8 00 00 00 00       	mov    $0x0,%eax
   168ed:	eb 05                	jmp    168f4 <simplify_expr+0x333>
   168ef:	b8 00 00 00 00       	mov    $0x0,%eax
   168f4:	c9                   	leave
   168f5:	c3                   	ret

00000000000168f6 <decrement_reference_id_expr>:
   168f6:	f3 0f 1e fa          	endbr64
   168fa:	55                   	push   %rbp
   168fb:	48 89 e5             	mov    %rsp,%rbp
   168fe:	48 83 ec 30          	sub    $0x30,%rsp
   16902:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16906:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1690a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1690e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16915:	00 00
   16917:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1691b:	31 c0                	xor    %eax,%eax
   1691d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   16922:	75 28                	jne    1694c <decrement_reference_id_expr+0x56>
   16924:	48 8d 05 35 73 00 00 	lea    0x7335(%rip),%rax        # 1dc60 <__PRETTY_FUNCTION__.2>
   1692b:	48 89 c1             	mov    %rax,%rcx
   1692e:	ba ee 01 00 00       	mov    $0x1ee,%edx
   16933:	48 8d 05 e6 6d 00 00 	lea    0x6de6(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   1693a:	48 89 c6             	mov    %rax,%rsi
   1693d:	48 8d 05 f0 6e 00 00 	lea    0x6ef0(%rip),%rax        # 1d834 <__PRETTY_FUNCTION__.0+0x144>
   16944:	48 89 c7             	mov    %rax,%rdi
   16947:	e8 84 ba fe ff       	call   23d0 <__assert_fail@plt>
   1694c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16950:	8b 40 04             	mov    0x4(%rax),%eax
   16953:	83 f8 04             	cmp    $0x4,%eax
   16956:	0f 87 c3 01 00 00    	ja     16b1f <decrement_reference_id_expr+0x229>
   1695c:	89 c0                	mov    %eax,%eax
   1695e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16965:	00
   16966:	48 8d 05 63 71 00 00 	lea    0x7163(%rip),%rax        # 1dad0 <__PRETTY_FUNCTION__.0+0x3e0>
   1696d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   16970:	48 98                	cltq
   16972:	48 8d 15 57 71 00 00 	lea    0x7157(%rip),%rdx        # 1dad0 <__PRETTY_FUNCTION__.0+0x3e0>
   16979:	48 01 d0             	add    %rdx,%rax
   1697c:	3e ff e0             	notrack jmp *%rax
   1697f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16983:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16987:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1698b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1698f:	48 89 ce             	mov    %rcx,%rsi
   16992:	48 89 c7             	mov    %rax,%rdi
   16995:	e8 5c ff ff ff       	call   168f6 <decrement_reference_id_expr>
   1699a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1699e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   169a2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   169a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169aa:	48 89 ce             	mov    %rcx,%rsi
   169ad:	48 89 c7             	mov    %rax,%rdi
   169b0:	e8 41 ff ff ff       	call   168f6 <decrement_reference_id_expr>
   169b5:	e9 66 01 00 00       	jmp    16b20 <decrement_reference_id_expr+0x22a>
   169ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   169be:	48 8b 50 08          	mov    0x8(%rax),%rdx
   169c2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   169c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169ca:	48 89 ce             	mov    %rcx,%rsi
   169cd:	48 89 c7             	mov    %rax,%rdi
   169d0:	e8 21 ff ff ff       	call   168f6 <decrement_reference_id_expr>
   169d5:	e9 46 01 00 00       	jmp    16b20 <decrement_reference_id_expr+0x22a>
   169da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   169de:	48 8b 50 10          	mov    0x10(%rax),%rdx
   169e2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   169e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169ea:	48 89 ce             	mov    %rcx,%rsi
   169ed:	48 89 c7             	mov    %rax,%rdi
   169f0:	e8 01 ff ff ff       	call   168f6 <decrement_reference_id_expr>
   169f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   169f9:	48 8b 50 18          	mov    0x18(%rax),%rdx
   169fd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16a01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a05:	48 89 ce             	mov    %rcx,%rsi
   16a08:	48 89 c7             	mov    %rax,%rdi
   16a0b:	e8 e6 fe ff ff       	call   168f6 <decrement_reference_id_expr>
   16a10:	e9 0b 01 00 00       	jmp    16b20 <decrement_reference_id_expr+0x22a>
   16a15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a19:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16a1d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a25:	48 89 ce             	mov    %rcx,%rsi
   16a28:	48 89 c7             	mov    %rax,%rdi
   16a2b:	e8 c6 fe ff ff       	call   168f6 <decrement_reference_id_expr>
   16a30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a34:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16a38:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16a3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a40:	48 89 ce             	mov    %rcx,%rsi
   16a43:	48 89 c7             	mov    %rax,%rdi
   16a46:	e8 ab fe ff ff       	call   168f6 <decrement_reference_id_expr>
   16a4b:	e9 d0 00 00 00       	jmp    16b20 <decrement_reference_id_expr+0x22a>
   16a50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a54:	48 8b 40 08          	mov    0x8(%rax),%rax
   16a58:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16a5c:	48 89 d6             	mov    %rdx,%rsi
   16a5f:	48 89 c7             	mov    %rax,%rdi
   16a62:	e8 e9 b9 fe ff       	call   2450 <strcmp@plt>
   16a67:	85 c0                	test   %eax,%eax
   16a69:	0f 85 b0 00 00 00    	jne    16b1f <decrement_reference_id_expr+0x229>
   16a6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a73:	8b 08                	mov    (%rax),%ecx
   16a75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a79:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16a7d:	48 8b 05 dc b5 00 00 	mov    0xb5dc(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16a84:	48 8d 35 cd 6f 00 00 	lea    0x6fcd(%rip),%rsi        # 1da58 <__PRETTY_FUNCTION__.0+0x368>
   16a8b:	48 89 c7             	mov    %rax,%rdi
   16a8e:	b8 00 00 00 00       	mov    $0x0,%eax
   16a93:	e8 d8 b9 fe ff       	call   2470 <fprintf@plt>
   16a98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a9c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16aa0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16aa4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   16aa8:	48 89 ce             	mov    %rcx,%rsi
   16aab:	48 89 c7             	mov    %rax,%rdi
   16aae:	e8 28 56 ff ff       	call   c0db <FindIdent>
   16ab3:	85 c0                	test   %eax,%eax
   16ab5:	74 28                	je     16adf <decrement_reference_id_expr+0x1e9>
   16ab7:	48 8d 05 a2 71 00 00 	lea    0x71a2(%rip),%rax        # 1dc60 <__PRETTY_FUNCTION__.2>
   16abe:	48 89 c1             	mov    %rax,%rcx
   16ac1:	ba 0f 02 00 00       	mov    $0x20f,%edx
   16ac6:	48 8d 05 53 6c 00 00 	lea    0x6c53(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16acd:	48 89 c6             	mov    %rax,%rsi
   16ad0:	48 8d 05 b9 6f 00 00 	lea    0x6fb9(%rip),%rax        # 1da90 <__PRETTY_FUNCTION__.0+0x3a0>
   16ad7:	48 89 c7             	mov    %rax,%rdi
   16ada:	e8 f1 b8 fe ff       	call   23d0 <__assert_fail@plt>
   16adf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ae3:	48 85 c0             	test   %rax,%rax
   16ae6:	75 28                	jne    16b10 <decrement_reference_id_expr+0x21a>
   16ae8:	48 8d 05 71 71 00 00 	lea    0x7171(%rip),%rax        # 1dc60 <__PRETTY_FUNCTION__.2>
   16aef:	48 89 c1             	mov    %rax,%rcx
   16af2:	ba 10 02 00 00       	mov    $0x210,%edx
   16af7:	48 8d 05 22 6c 00 00 	lea    0x6c22(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16afe:	48 89 c6             	mov    %rax,%rsi
   16b01:	48 8d 05 ba 6f 00 00 	lea    0x6fba(%rip),%rax        # 1dac2 <__PRETTY_FUNCTION__.0+0x3d2>
   16b08:	48 89 c7             	mov    %rax,%rdi
   16b0b:	e8 c0 b8 fe ff       	call   23d0 <__assert_fail@plt>
   16b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16b14:	8b 50 20             	mov    0x20(%rax),%edx
   16b17:	83 ea 01             	sub    $0x1,%edx
   16b1a:	89 50 20             	mov    %edx,0x20(%rax)
   16b1d:	eb 01                	jmp    16b20 <decrement_reference_id_expr+0x22a>
   16b1f:	90                   	nop
   16b20:	90                   	nop
   16b21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b25:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16b2c:	00 00
   16b2e:	74 05                	je     16b35 <decrement_reference_id_expr+0x23f>
   16b30:	e8 6b b8 fe ff       	call   23a0 <__stack_chk_fail@plt>
   16b35:	c9                   	leave
   16b36:	c3                   	ret

0000000000016b37 <decrement_reference_expr>:
   16b37:	f3 0f 1e fa          	endbr64
   16b3b:	55                   	push   %rbp
   16b3c:	48 89 e5             	mov    %rsp,%rbp
   16b3f:	48 83 ec 20          	sub    $0x20,%rsp
   16b43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16b4b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16b52:	00 00
   16b54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16b58:	31 c0                	xor    %eax,%eax
   16b5a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16b5f:	75 28                	jne    16b89 <decrement_reference_expr+0x52>
   16b61:	48 8d 05 18 71 00 00 	lea    0x7118(%rip),%rax        # 1dc80 <__PRETTY_FUNCTION__.1>
   16b68:	48 89 c1             	mov    %rax,%rcx
   16b6b:	ba 20 02 00 00       	mov    $0x220,%edx
   16b70:	48 8d 05 a9 6b 00 00 	lea    0x6ba9(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16b77:	48 89 c6             	mov    %rax,%rsi
   16b7a:	48 8d 05 b3 6c 00 00 	lea    0x6cb3(%rip),%rax        # 1d834 <__PRETTY_FUNCTION__.0+0x144>
   16b81:	48 89 c7             	mov    %rax,%rdi
   16b84:	e8 47 b8 fe ff       	call   23d0 <__assert_fail@plt>
   16b89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b8d:	8b 40 04             	mov    0x4(%rax),%eax
   16b90:	83 f8 04             	cmp    $0x4,%eax
   16b93:	0f 87 88 01 00 00    	ja     16d21 <decrement_reference_expr+0x1ea>
   16b99:	89 c0                	mov    %eax,%eax
   16b9b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16ba2:	00
   16ba3:	48 8d 05 3a 6f 00 00 	lea    0x6f3a(%rip),%rax        # 1dae4 <__PRETTY_FUNCTION__.0+0x3f4>
   16baa:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   16bad:	48 98                	cltq
   16baf:	48 8d 15 2e 6f 00 00 	lea    0x6f2e(%rip),%rdx        # 1dae4 <__PRETTY_FUNCTION__.0+0x3f4>
   16bb6:	48 01 d0             	add    %rdx,%rax
   16bb9:	3e ff e0             	notrack jmp *%rax
   16bbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16bc0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16bc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bc8:	48 89 d6             	mov    %rdx,%rsi
   16bcb:	48 89 c7             	mov    %rax,%rdi
   16bce:	e8 64 ff ff ff       	call   16b37 <decrement_reference_expr>
   16bd3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16bd7:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16bdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bdf:	48 89 d6             	mov    %rdx,%rsi
   16be2:	48 89 c7             	mov    %rax,%rdi
   16be5:	e8 4d ff ff ff       	call   16b37 <decrement_reference_expr>
   16bea:	e9 33 01 00 00       	jmp    16d22 <decrement_reference_expr+0x1eb>
   16bef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16bf3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16bf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bfb:	48 89 d6             	mov    %rdx,%rsi
   16bfe:	48 89 c7             	mov    %rax,%rdi
   16c01:	e8 31 ff ff ff       	call   16b37 <decrement_reference_expr>
   16c06:	e9 17 01 00 00       	jmp    16d22 <decrement_reference_expr+0x1eb>
   16c0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c0f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c17:	48 89 d6             	mov    %rdx,%rsi
   16c1a:	48 89 c7             	mov    %rax,%rdi
   16c1d:	e8 15 ff ff ff       	call   16b37 <decrement_reference_expr>
   16c22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c26:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16c2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c2e:	48 89 d6             	mov    %rdx,%rsi
   16c31:	48 89 c7             	mov    %rax,%rdi
   16c34:	e8 fe fe ff ff       	call   16b37 <decrement_reference_expr>
   16c39:	e9 e4 00 00 00       	jmp    16d22 <decrement_reference_expr+0x1eb>
   16c3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c42:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16c46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c4a:	48 89 d6             	mov    %rdx,%rsi
   16c4d:	48 89 c7             	mov    %rax,%rdi
   16c50:	e8 e2 fe ff ff       	call   16b37 <decrement_reference_expr>
   16c55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c59:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16c5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c61:	48 89 d6             	mov    %rdx,%rsi
   16c64:	48 89 c7             	mov    %rax,%rdi
   16c67:	e8 cb fe ff ff       	call   16b37 <decrement_reference_expr>
   16c6c:	e9 b1 00 00 00       	jmp    16d22 <decrement_reference_expr+0x1eb>
   16c71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c75:	8b 08                	mov    (%rax),%ecx
   16c77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c7b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16c7f:	48 8b 05 da b3 00 00 	mov    0xb3da(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16c86:	48 8d 35 cb 6d 00 00 	lea    0x6dcb(%rip),%rsi        # 1da58 <__PRETTY_FUNCTION__.0+0x368>
   16c8d:	48 89 c7             	mov    %rax,%rdi
   16c90:	b8 00 00 00 00       	mov    $0x0,%eax
   16c95:	e8 d6 b7 fe ff       	call   2470 <fprintf@plt>
   16c9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c9e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16ca2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16ca6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   16caa:	48 89 ce             	mov    %rcx,%rsi
   16cad:	48 89 c7             	mov    %rax,%rdi
   16cb0:	e8 26 54 ff ff       	call   c0db <FindIdent>
   16cb5:	85 c0                	test   %eax,%eax
   16cb7:	74 28                	je     16ce1 <decrement_reference_expr+0x1aa>
   16cb9:	48 8d 05 c0 6f 00 00 	lea    0x6fc0(%rip),%rax        # 1dc80 <__PRETTY_FUNCTION__.1>
   16cc0:	48 89 c1             	mov    %rax,%rcx
   16cc3:	ba 3f 02 00 00       	mov    $0x23f,%edx
   16cc8:	48 8d 05 51 6a 00 00 	lea    0x6a51(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16ccf:	48 89 c6             	mov    %rax,%rsi
   16cd2:	48 8d 05 b7 6d 00 00 	lea    0x6db7(%rip),%rax        # 1da90 <__PRETTY_FUNCTION__.0+0x3a0>
   16cd9:	48 89 c7             	mov    %rax,%rdi
   16cdc:	e8 ef b6 fe ff       	call   23d0 <__assert_fail@plt>
   16ce1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ce5:	48 85 c0             	test   %rax,%rax
   16ce8:	75 28                	jne    16d12 <decrement_reference_expr+0x1db>
   16cea:	48 8d 05 8f 6f 00 00 	lea    0x6f8f(%rip),%rax        # 1dc80 <__PRETTY_FUNCTION__.1>
   16cf1:	48 89 c1             	mov    %rax,%rcx
   16cf4:	ba 40 02 00 00       	mov    $0x240,%edx
   16cf9:	48 8d 05 20 6a 00 00 	lea    0x6a20(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16d00:	48 89 c6             	mov    %rax,%rsi
   16d03:	48 8d 05 b8 6d 00 00 	lea    0x6db8(%rip),%rax        # 1dac2 <__PRETTY_FUNCTION__.0+0x3d2>
   16d0a:	48 89 c7             	mov    %rax,%rdi
   16d0d:	e8 be b6 fe ff       	call   23d0 <__assert_fail@plt>
   16d12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d16:	8b 50 20             	mov    0x20(%rax),%edx
   16d19:	83 ea 01             	sub    $0x1,%edx
   16d1c:	89 50 20             	mov    %edx,0x20(%rax)
   16d1f:	eb 01                	jmp    16d22 <decrement_reference_expr+0x1eb>
   16d21:	90                   	nop
   16d22:	90                   	nop
   16d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d27:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16d2e:	00 00
   16d30:	74 05                	je     16d37 <decrement_reference_expr+0x200>
   16d32:	e8 69 b6 fe ff       	call   23a0 <__stack_chk_fail@plt>
   16d37:	c9                   	leave
   16d38:	c3                   	ret

0000000000016d39 <set_vars_lists>:
   16d39:	f3 0f 1e fa          	endbr64
   16d3d:	55                   	push   %rbp
   16d3e:	48 89 e5             	mov    %rsp,%rbp
   16d41:	48 83 ec 40          	sub    $0x40,%rsp
   16d45:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16d49:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16d4d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16d51:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   16d55:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16d5c:	00 00
   16d5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16d62:	31 c0                	xor    %eax,%eax
   16d64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16d68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16d6f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16d73:	48 8b 10             	mov    (%rax),%rdx
   16d76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d7a:	48 89 10             	mov    %rdx,(%rax)
   16d7d:	e9 4f 01 00 00       	jmp    16ed1 <set_vars_lists+0x198>
   16d82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16d86:	48 8b 40 08          	mov    0x8(%rax),%rax
   16d8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16d8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d92:	8b 40 04             	mov    0x4(%rax),%eax
   16d95:	83 f8 03             	cmp    $0x3,%eax
   16d98:	0f 84 27 01 00 00    	je     16ec5 <set_vars_lists+0x18c>
   16d9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16da2:	8b 40 04             	mov    0x4(%rax),%eax
   16da5:	83 f8 02             	cmp    $0x2,%eax
   16da8:	74 28                	je     16dd2 <set_vars_lists+0x99>
   16daa:	48 8d 05 ef 6e 00 00 	lea    0x6eef(%rip),%rax        # 1dca0 <__PRETTY_FUNCTION__.0>
   16db1:	48 89 c1             	mov    %rax,%rcx
   16db4:	ba 5d 02 00 00       	mov    $0x25d,%edx
   16db9:	48 8d 05 60 69 00 00 	lea    0x6960(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16dc0:	48 89 c6             	mov    %rax,%rsi
   16dc3:	48 8d 05 96 6a 00 00 	lea    0x6a96(%rip),%rax        # 1d860 <__PRETTY_FUNCTION__.0+0x170>
   16dca:	48 89 c7             	mov    %rax,%rdi
   16dcd:	e8 fe b5 fe ff       	call   23d0 <__assert_fail@plt>
   16dd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16dd6:	48 8b 40 08          	mov    0x8(%rax),%rax
   16dda:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16dde:	e9 d7 00 00 00       	jmp    16eba <set_vars_lists+0x181>
   16de3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16de7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16deb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   16def:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16df3:	48 89 ce             	mov    %rcx,%rsi
   16df6:	48 89 c7             	mov    %rax,%rdi
   16df9:	e8 dd 52 ff ff       	call   c0db <FindIdent>
   16dfe:	85 c0                	test   %eax,%eax
   16e00:	74 28                	je     16e2a <set_vars_lists+0xf1>
   16e02:	48 8d 05 97 6e 00 00 	lea    0x6e97(%rip),%rax        # 1dca0 <__PRETTY_FUNCTION__.0>
   16e09:	48 89 c1             	mov    %rax,%rcx
   16e0c:	ba 62 02 00 00       	mov    $0x262,%edx
   16e11:	48 8d 05 08 69 00 00 	lea    0x6908(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16e18:	48 89 c6             	mov    %rax,%rsi
   16e1b:	48 8d 05 d6 6c 00 00 	lea    0x6cd6(%rip),%rax        # 1daf8 <__PRETTY_FUNCTION__.0+0x408>
   16e22:	48 89 c7             	mov    %rax,%rdi
   16e25:	e8 a6 b5 fe ff       	call   23d0 <__assert_fail@plt>
   16e2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e2e:	48 85 c0             	test   %rax,%rax
   16e31:	75 28                	jne    16e5b <set_vars_lists+0x122>
   16e33:	48 8d 05 66 6e 00 00 	lea    0x6e66(%rip),%rax        # 1dca0 <__PRETTY_FUNCTION__.0>
   16e3a:	48 89 c1             	mov    %rax,%rcx
   16e3d:	ba 63 02 00 00       	mov    $0x263,%edx
   16e42:	48 8d 05 d7 68 00 00 	lea    0x68d7(%rip),%rax        # 1d720 <__PRETTY_FUNCTION__.0+0x30>
   16e49:	48 89 c6             	mov    %rax,%rsi
   16e4c:	48 8d 05 6f 6c 00 00 	lea    0x6c6f(%rip),%rax        # 1dac2 <__PRETTY_FUNCTION__.0+0x3d2>
   16e53:	48 89 c7             	mov    %rax,%rdi
   16e56:	e8 75 b5 fe ff       	call   23d0 <__assert_fail@plt>
   16e5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e5f:	8b 40 20             	mov    0x20(%rax),%eax
   16e62:	85 c0                	test   %eax,%eax
   16e64:	75 25                	jne    16e8b <set_vars_lists+0x152>
   16e66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e6a:	8b 40 10             	mov    0x10(%rax),%eax
   16e6d:	83 f8 04             	cmp    $0x4,%eax
   16e70:	74 19                	je     16e8b <set_vars_lists+0x152>
   16e72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e76:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16e7a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16e7e:	48 89 d6             	mov    %rdx,%rsi
   16e81:	48 89 c7             	mov    %rax,%rdi
   16e84:	e8 6a 00 00 00       	call   16ef3 <add_to_list>
   16e89:	eb 23                	jmp    16eae <set_vars_lists+0x175>
   16e8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e8f:	8b 40 10             	mov    0x10(%rax),%eax
   16e92:	83 f8 04             	cmp    $0x4,%eax
   16e95:	74 17                	je     16eae <set_vars_lists+0x175>
   16e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e9b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16e9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ea3:	48 89 d6             	mov    %rdx,%rsi
   16ea6:	48 89 c7             	mov    %rax,%rdi
   16ea9:	e8 45 00 00 00       	call   16ef3 <add_to_list>
   16eae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16eb2:	48 8b 40 10          	mov    0x10(%rax),%rax
   16eb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16eba:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   16ebf:	0f 85 1e ff ff ff    	jne    16de3 <set_vars_lists+0xaa>
   16ec5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16ec9:	48 8b 40 10          	mov    0x10(%rax),%rax
   16ecd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16ed1:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   16ed6:	0f 85 a6 fe ff ff    	jne    16d82 <set_vars_lists+0x49>
   16edc:	90                   	nop
   16edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ee1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16ee8:	00 00
   16eea:	74 05                	je     16ef1 <set_vars_lists+0x1b8>
   16eec:	e8 af b4 fe ff       	call   23a0 <__stack_chk_fail@plt>
   16ef1:	c9                   	leave
   16ef2:	c3                   	ret

0000000000016ef3 <add_to_list>:
   16ef3:	f3 0f 1e fa          	endbr64
   16ef7:	55                   	push   %rbp
   16ef8:	48 89 e5             	mov    %rsp,%rbp
   16efb:	48 83 ec 10          	sub    $0x10,%rsp
   16eff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f0b:	48 8b 00             	mov    (%rax),%rax
   16f0e:	48 85 c0             	test   %rax,%rax
   16f11:	75 1a                	jne    16f2d <add_to_list+0x3a>
   16f13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f17:	be 04 00 00 00       	mov    $0x4,%esi
   16f1c:	48 89 c7             	mov    %rax,%rdi
   16f1f:	e8 d7 12 ff ff       	call   81fb <CreateListNode>
   16f24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f28:	48 89 02             	mov    %rax,(%rdx)
   16f2b:	eb 2d                	jmp    16f5a <add_to_list+0x67>
   16f2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f31:	be 04 00 00 00       	mov    $0x4,%esi
   16f36:	48 89 c7             	mov    %rax,%rdi
   16f39:	e8 bd 12 ff ff       	call   81fb <CreateListNode>
   16f3e:	48 89 c2             	mov    %rax,%rdx
   16f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f45:	48 8b 00             	mov    (%rax),%rax
   16f48:	48 89 d6             	mov    %rdx,%rsi
   16f4b:	48 89 c7             	mov    %rax,%rdi
   16f4e:	e8 74 13 ff ff       	call   82c7 <PushListNodeBack>
   16f53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f57:	48 89 02             	mov    %rax,(%rdx)
   16f5a:	90                   	nop
   16f5b:	c9                   	leave
   16f5c:	c3                   	ret

0000000000016f5d <stack_trace_handler>:
   16f5d:	f3 0f 1e fa          	endbr64
   16f61:	55                   	push   %rbp
   16f62:	48 89 e5             	mov    %rsp,%rbp
   16f65:	48 81 ec 00 09 00 00 	sub    $0x900,%rsp
   16f6c:	89 bd 0c f7 ff ff    	mov    %edi,-0x8f4(%rbp)
   16f72:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16f79:	00 00
   16f7b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16f7f:	31 c0                	xor    %eax,%eax
   16f81:	48 8b 05 d8 b0 00 00 	mov    0xb0d8(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16f88:	8b 95 0c f7 ff ff    	mov    -0x8f4(%rbp),%edx
   16f8e:	48 8d 0d 1b 6d 00 00 	lea    0x6d1b(%rip),%rcx        # 1dcb0 <__PRETTY_FUNCTION__.0+0x10>
   16f95:	48 89 ce             	mov    %rcx,%rsi
   16f98:	48 89 c7             	mov    %rax,%rdi
   16f9b:	b8 00 00 00 00       	mov    $0x0,%eax
   16fa0:	e8 cb b4 fe ff       	call   2470 <fprintf@plt>
   16fa5:	48 8d 85 20 f7 ff ff 	lea    -0x8e0(%rbp),%rax
   16fac:	48 89 c7             	mov    %rax,%rdi
   16faf:	e8 0c b4 fe ff       	call   23c0 <_Ux86_64_getcontext@plt>
   16fb4:	48 8d 95 20 f7 ff ff 	lea    -0x8e0(%rbp),%rdx
   16fbb:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   16fc2:	48 89 d6             	mov    %rdx,%rsi
   16fc5:	48 89 c7             	mov    %rax,%rdi
   16fc8:	e8 33 b4 fe ff       	call   2400 <_Ux86_64_init_local@plt>
   16fcd:	48 8b 05 8c b0 00 00 	mov    0xb08c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16fd4:	48 89 c1             	mov    %rax,%rcx
   16fd7:	ba 0d 00 00 00       	mov    $0xd,%edx
   16fdc:	be 01 00 00 00       	mov    $0x1,%esi
   16fe1:	48 8d 05 da 6c 00 00 	lea    0x6cda(%rip),%rax        # 1dcc2 <__PRETTY_FUNCTION__.0+0x22>
   16fe8:	48 89 c7             	mov    %rax,%rdi
   16feb:	e8 60 b5 fe ff       	call   2550 <fwrite@plt>
   16ff0:	e9 d9 00 00 00       	jmp    170ce <stack_trace_handler+0x171>
   16ff5:	48 8d 95 10 f7 ff ff 	lea    -0x8f0(%rbp),%rdx
   16ffc:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   17003:	be 10 00 00 00       	mov    $0x10,%esi
   17008:	48 89 c7             	mov    %rax,%rdi
   1700b:	e8 00 b4 fe ff       	call   2410 <_Ux86_64_get_reg@plt>
   17010:	85 c0                	test   %eax,%eax
   17012:	74 28                	je     1703c <stack_trace_handler+0xdf>
   17014:	48 8b 05 45 b0 00 00 	mov    0xb045(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1701b:	48 89 c1             	mov    %rax,%rcx
   1701e:	ba 26 00 00 00       	mov    $0x26,%edx
   17023:	be 01 00 00 00       	mov    $0x1,%esi
   17028:	48 8d 05 a1 6c 00 00 	lea    0x6ca1(%rip),%rax        # 1dcd0 <__PRETTY_FUNCTION__.0+0x30>
   1702f:	48 89 c7             	mov    %rax,%rdi
   17032:	e8 19 b5 fe ff       	call   2550 <fwrite@plt>
   17037:	e9 92 00 00 00       	jmp    170ce <stack_trace_handler+0x171>
   1703c:	48 8d 95 18 f7 ff ff 	lea    -0x8e8(%rbp),%rdx
   17043:	48 8d b5 f0 fe ff ff 	lea    -0x110(%rbp),%rsi
   1704a:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   17051:	48 89 d1             	mov    %rdx,%rcx
   17054:	ba 00 01 00 00       	mov    $0x100,%edx
   17059:	48 89 c7             	mov    %rax,%rdi
   1705c:	e8 9f b4 fe ff       	call   2500 <_Ux86_64_get_proc_name@plt>
   17061:	85 c0                	test   %eax,%eax
   17063:	75 41                	jne    170a6 <stack_trace_handler+0x149>
   17065:	48 8b 85 18 f7 ff ff 	mov    -0x8e8(%rbp),%rax
   1706c:	48 89 c1             	mov    %rax,%rcx
   1706f:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
   17076:	48 89 c6             	mov    %rax,%rsi
   17079:	48 8b 05 e0 af 00 00 	mov    0xafe0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   17080:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   17087:	49 89 c8             	mov    %rcx,%r8
   1708a:	48 89 d1             	mov    %rdx,%rcx
   1708d:	48 89 f2             	mov    %rsi,%rdx
   17090:	48 8d 35 60 6c 00 00 	lea    0x6c60(%rip),%rsi        # 1dcf7 <__PRETTY_FUNCTION__.0+0x57>
   17097:	48 89 c7             	mov    %rax,%rdi
   1709a:	b8 00 00 00 00       	mov    $0x0,%eax
   1709f:	e8 cc b3 fe ff       	call   2470 <fprintf@plt>
   170a4:	eb 28                	jmp    170ce <stack_trace_handler+0x171>
   170a6:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
   170ad:	48 89 c2             	mov    %rax,%rdx
   170b0:	48 8b 05 a9 af 00 00 	mov    0xafa9(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   170b7:	48 8d 0d 52 6c 00 00 	lea    0x6c52(%rip),%rcx        # 1dd10 <__PRETTY_FUNCTION__.0+0x70>
   170be:	48 89 ce             	mov    %rcx,%rsi
   170c1:	48 89 c7             	mov    %rax,%rdi
   170c4:	b8 00 00 00 00       	mov    $0x0,%eax
   170c9:	e8 a2 b3 fe ff       	call   2470 <fprintf@plt>
   170ce:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   170d5:	48 89 c7             	mov    %rax,%rdi
   170d8:	e8 83 b3 fe ff       	call   2460 <_Ux86_64_step@plt>
   170dd:	85 c0                	test   %eax,%eax
   170df:	0f 8f 10 ff ff ff    	jg     16ff5 <stack_trace_handler+0x98>
   170e5:	8b 85 0c f7 ff ff    	mov    -0x8f4(%rbp),%eax
   170eb:	89 c7                	mov    %eax,%edi
   170ed:	e8 4e b4 fe ff       	call   2540 <exit@plt>

00000000000170f2 <install_stack_trace_handler>:
   170f2:	f3 0f 1e fa          	endbr64
   170f6:	55                   	push   %rbp
   170f7:	48 89 e5             	mov    %rsp,%rbp
   170fa:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   17101:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17108:	00 00
   1710a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1710e:	31 c0                	xor    %eax,%eax
   17110:	48 8d 05 46 fe ff ff 	lea    -0x1ba(%rip),%rax        # 16f5d <stack_trace_handler>
   17117:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1711e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17125:	48 83 c0 08          	add    $0x8,%rax
   17129:	48 89 c7             	mov    %rax,%rdi
   1712c:	e8 4f b3 fe ff       	call   2480 <sigemptyset@plt>
   17131:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   17138:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1713f:	ba 00 00 00 00       	mov    $0x0,%edx
   17144:	48 89 c6             	mov    %rax,%rsi
   17147:	bf 0b 00 00 00       	mov    $0xb,%edi
   1714c:	e8 ff b1 fe ff       	call   2350 <sigaction@plt>
   17151:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17158:	ba 00 00 00 00       	mov    $0x0,%edx
   1715d:	48 89 c6             	mov    %rax,%rsi
   17160:	bf 08 00 00 00       	mov    $0x8,%edi
   17165:	e8 e6 b1 fe ff       	call   2350 <sigaction@plt>
   1716a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17171:	ba 00 00 00 00       	mov    $0x0,%edx
   17176:	48 89 c6             	mov    %rax,%rsi
   17179:	bf 06 00 00 00       	mov    $0x6,%edi
   1717e:	e8 cd b1 fe ff       	call   2350 <sigaction@plt>
   17183:	90                   	nop
   17184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17188:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   1718f:	00 00
   17191:	74 05                	je     17198 <install_stack_trace_handler+0xa6>
   17193:	e8 08 b2 fe ff       	call   23a0 <__stack_chk_fail@plt>
   17198:	c9                   	leave
   17199:	c3                   	ret

Disassembly of section .fini:

000000000001719c <_fini>:
   1719c:	f3 0f 1e fa          	endbr64
   171a0:	48 83 ec 08          	sub    $0x8,%rsp
   171a4:	48 83 c4 08          	add    $0x8,%rsp
   171a8:	c3                   	ret
