
builddir/GPC/gpc:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 c1 ff 01 00 	mov    0x1ffc1(%rip),%rax        # 21fd0 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 32 fe 01 00    	push   0x1fe32(%rip)        # 21e58 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 34 fe 01 00    	jmp    *0x1fe34(%rip)        # 21e60 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)
    2030:	f3 0f 1e fa          	endbr64
    2034:	68 00 00 00 00       	push   $0x0
    2039:	e9 e2 ff ff ff       	jmp    2020 <_init+0x20>
    203e:	66 90                	xchg   %ax,%ax
    2040:	f3 0f 1e fa          	endbr64
    2044:	68 01 00 00 00       	push   $0x1
    2049:	e9 d2 ff ff ff       	jmp    2020 <_init+0x20>
    204e:	66 90                	xchg   %ax,%ax
    2050:	f3 0f 1e fa          	endbr64
    2054:	68 02 00 00 00       	push   $0x2
    2059:	e9 c2 ff ff ff       	jmp    2020 <_init+0x20>
    205e:	66 90                	xchg   %ax,%ax
    2060:	f3 0f 1e fa          	endbr64
    2064:	68 03 00 00 00       	push   $0x3
    2069:	e9 b2 ff ff ff       	jmp    2020 <_init+0x20>
    206e:	66 90                	xchg   %ax,%ax
    2070:	f3 0f 1e fa          	endbr64
    2074:	68 04 00 00 00       	push   $0x4
    2079:	e9 a2 ff ff ff       	jmp    2020 <_init+0x20>
    207e:	66 90                	xchg   %ax,%ax
    2080:	f3 0f 1e fa          	endbr64
    2084:	68 05 00 00 00       	push   $0x5
    2089:	e9 92 ff ff ff       	jmp    2020 <_init+0x20>
    208e:	66 90                	xchg   %ax,%ax
    2090:	f3 0f 1e fa          	endbr64
    2094:	68 06 00 00 00       	push   $0x6
    2099:	e9 82 ff ff ff       	jmp    2020 <_init+0x20>
    209e:	66 90                	xchg   %ax,%ax
    20a0:	f3 0f 1e fa          	endbr64
    20a4:	68 07 00 00 00       	push   $0x7
    20a9:	e9 72 ff ff ff       	jmp    2020 <_init+0x20>
    20ae:	66 90                	xchg   %ax,%ax
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	68 08 00 00 00       	push   $0x8
    20b9:	e9 62 ff ff ff       	jmp    2020 <_init+0x20>
    20be:	66 90                	xchg   %ax,%ax
    20c0:	f3 0f 1e fa          	endbr64
    20c4:	68 09 00 00 00       	push   $0x9
    20c9:	e9 52 ff ff ff       	jmp    2020 <_init+0x20>
    20ce:	66 90                	xchg   %ax,%ax
    20d0:	f3 0f 1e fa          	endbr64
    20d4:	68 0a 00 00 00       	push   $0xa
    20d9:	e9 42 ff ff ff       	jmp    2020 <_init+0x20>
    20de:	66 90                	xchg   %ax,%ax
    20e0:	f3 0f 1e fa          	endbr64
    20e4:	68 0b 00 00 00       	push   $0xb
    20e9:	e9 32 ff ff ff       	jmp    2020 <_init+0x20>
    20ee:	66 90                	xchg   %ax,%ax
    20f0:	f3 0f 1e fa          	endbr64
    20f4:	68 0c 00 00 00       	push   $0xc
    20f9:	e9 22 ff ff ff       	jmp    2020 <_init+0x20>
    20fe:	66 90                	xchg   %ax,%ax
    2100:	f3 0f 1e fa          	endbr64
    2104:	68 0d 00 00 00       	push   $0xd
    2109:	e9 12 ff ff ff       	jmp    2020 <_init+0x20>
    210e:	66 90                	xchg   %ax,%ax
    2110:	f3 0f 1e fa          	endbr64
    2114:	68 0e 00 00 00       	push   $0xe
    2119:	e9 02 ff ff ff       	jmp    2020 <_init+0x20>
    211e:	66 90                	xchg   %ax,%ax
    2120:	f3 0f 1e fa          	endbr64
    2124:	68 0f 00 00 00       	push   $0xf
    2129:	e9 f2 fe ff ff       	jmp    2020 <_init+0x20>
    212e:	66 90                	xchg   %ax,%ax
    2130:	f3 0f 1e fa          	endbr64
    2134:	68 10 00 00 00       	push   $0x10
    2139:	e9 e2 fe ff ff       	jmp    2020 <_init+0x20>
    213e:	66 90                	xchg   %ax,%ax
    2140:	f3 0f 1e fa          	endbr64
    2144:	68 11 00 00 00       	push   $0x11
    2149:	e9 d2 fe ff ff       	jmp    2020 <_init+0x20>
    214e:	66 90                	xchg   %ax,%ax
    2150:	f3 0f 1e fa          	endbr64
    2154:	68 12 00 00 00       	push   $0x12
    2159:	e9 c2 fe ff ff       	jmp    2020 <_init+0x20>
    215e:	66 90                	xchg   %ax,%ax
    2160:	f3 0f 1e fa          	endbr64
    2164:	68 13 00 00 00       	push   $0x13
    2169:	e9 b2 fe ff ff       	jmp    2020 <_init+0x20>
    216e:	66 90                	xchg   %ax,%ax
    2170:	f3 0f 1e fa          	endbr64
    2174:	68 14 00 00 00       	push   $0x14
    2179:	e9 a2 fe ff ff       	jmp    2020 <_init+0x20>
    217e:	66 90                	xchg   %ax,%ax
    2180:	f3 0f 1e fa          	endbr64
    2184:	68 15 00 00 00       	push   $0x15
    2189:	e9 92 fe ff ff       	jmp    2020 <_init+0x20>
    218e:	66 90                	xchg   %ax,%ax
    2190:	f3 0f 1e fa          	endbr64
    2194:	68 16 00 00 00       	push   $0x16
    2199:	e9 82 fe ff ff       	jmp    2020 <_init+0x20>
    219e:	66 90                	xchg   %ax,%ax
    21a0:	f3 0f 1e fa          	endbr64
    21a4:	68 17 00 00 00       	push   $0x17
    21a9:	e9 72 fe ff ff       	jmp    2020 <_init+0x20>
    21ae:	66 90                	xchg   %ax,%ax
    21b0:	f3 0f 1e fa          	endbr64
    21b4:	68 18 00 00 00       	push   $0x18
    21b9:	e9 62 fe ff ff       	jmp    2020 <_init+0x20>
    21be:	66 90                	xchg   %ax,%ax
    21c0:	f3 0f 1e fa          	endbr64
    21c4:	68 19 00 00 00       	push   $0x19
    21c9:	e9 52 fe ff ff       	jmp    2020 <_init+0x20>
    21ce:	66 90                	xchg   %ax,%ax
    21d0:	f3 0f 1e fa          	endbr64
    21d4:	68 1a 00 00 00       	push   $0x1a
    21d9:	e9 42 fe ff ff       	jmp    2020 <_init+0x20>
    21de:	66 90                	xchg   %ax,%ax
    21e0:	f3 0f 1e fa          	endbr64
    21e4:	68 1b 00 00 00       	push   $0x1b
    21e9:	e9 32 fe ff ff       	jmp    2020 <_init+0x20>
    21ee:	66 90                	xchg   %ax,%ax
    21f0:	f3 0f 1e fa          	endbr64
    21f4:	68 1c 00 00 00       	push   $0x1c
    21f9:	e9 22 fe ff ff       	jmp    2020 <_init+0x20>
    21fe:	66 90                	xchg   %ax,%ax
    2200:	f3 0f 1e fa          	endbr64
    2204:	68 1d 00 00 00       	push   $0x1d
    2209:	e9 12 fe ff ff       	jmp    2020 <_init+0x20>
    220e:	66 90                	xchg   %ax,%ax
    2210:	f3 0f 1e fa          	endbr64
    2214:	68 1e 00 00 00       	push   $0x1e
    2219:	e9 02 fe ff ff       	jmp    2020 <_init+0x20>
    221e:	66 90                	xchg   %ax,%ax
    2220:	f3 0f 1e fa          	endbr64
    2224:	68 1f 00 00 00       	push   $0x1f
    2229:	e9 f2 fd ff ff       	jmp    2020 <_init+0x20>
    222e:	66 90                	xchg   %ax,%ax
    2230:	f3 0f 1e fa          	endbr64
    2234:	68 20 00 00 00       	push   $0x20
    2239:	e9 e2 fd ff ff       	jmp    2020 <_init+0x20>
    223e:	66 90                	xchg   %ax,%ax
    2240:	f3 0f 1e fa          	endbr64
    2244:	68 21 00 00 00       	push   $0x21
    2249:	e9 d2 fd ff ff       	jmp    2020 <_init+0x20>
    224e:	66 90                	xchg   %ax,%ax
    2250:	f3 0f 1e fa          	endbr64
    2254:	68 22 00 00 00       	push   $0x22
    2259:	e9 c2 fd ff ff       	jmp    2020 <_init+0x20>
    225e:	66 90                	xchg   %ax,%ax
    2260:	f3 0f 1e fa          	endbr64
    2264:	68 23 00 00 00       	push   $0x23
    2269:	e9 b2 fd ff ff       	jmp    2020 <_init+0x20>
    226e:	66 90                	xchg   %ax,%ax
    2270:	f3 0f 1e fa          	endbr64
    2274:	68 24 00 00 00       	push   $0x24
    2279:	e9 a2 fd ff ff       	jmp    2020 <_init+0x20>
    227e:	66 90                	xchg   %ax,%ax
    2280:	f3 0f 1e fa          	endbr64
    2284:	68 25 00 00 00       	push   $0x25
    2289:	e9 92 fd ff ff       	jmp    2020 <_init+0x20>
    228e:	66 90                	xchg   %ax,%ax
    2290:	f3 0f 1e fa          	endbr64
    2294:	68 26 00 00 00       	push   $0x26
    2299:	e9 82 fd ff ff       	jmp    2020 <_init+0x20>
    229e:	66 90                	xchg   %ax,%ax
    22a0:	f3 0f 1e fa          	endbr64
    22a4:	68 27 00 00 00       	push   $0x27
    22a9:	e9 72 fd ff ff       	jmp    2020 <_init+0x20>
    22ae:	66 90                	xchg   %ax,%ax
    22b0:	f3 0f 1e fa          	endbr64
    22b4:	68 28 00 00 00       	push   $0x28
    22b9:	e9 62 fd ff ff       	jmp    2020 <_init+0x20>
    22be:	66 90                	xchg   %ax,%ax
    22c0:	f3 0f 1e fa          	endbr64
    22c4:	68 29 00 00 00       	push   $0x29
    22c9:	e9 52 fd ff ff       	jmp    2020 <_init+0x20>
    22ce:	66 90                	xchg   %ax,%ax
    22d0:	f3 0f 1e fa          	endbr64
    22d4:	68 2a 00 00 00       	push   $0x2a
    22d9:	e9 42 fd ff ff       	jmp    2020 <_init+0x20>
    22de:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

00000000000022e0 <__cxa_finalize@plt>:
    22e0:	f3 0f 1e fa          	endbr64
    22e4:	ff 25 f6 fc 01 00    	jmp    *0x1fcf6(%rip)        # 21fe0 <__cxa_finalize@GLIBC_2.2.5>
    22ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000022f0 <free@plt>:
    22f0:	f3 0f 1e fa          	endbr64
    22f4:	ff 25 6e fb 01 00    	jmp    *0x1fb6e(%rip)        # 21e68 <free@GLIBC_2.2.5>
    22fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002300 <__errno_location@plt>:
    2300:	f3 0f 1e fa          	endbr64
    2304:	ff 25 66 fb 01 00    	jmp    *0x1fb66(%rip)        # 21e70 <__errno_location@GLIBC_2.2.5>
    230a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002310 <strncpy@plt>:
    2310:	f3 0f 1e fa          	endbr64
    2314:	ff 25 5e fb 01 00    	jmp    *0x1fb5e(%rip)        # 21e78 <strncpy@GLIBC_2.2.5>
    231a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002320 <strcpy@plt>:
    2320:	f3 0f 1e fa          	endbr64
    2324:	ff 25 56 fb 01 00    	jmp    *0x1fb56(%rip)        # 21e80 <strcpy@GLIBC_2.2.5>
    232a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002330 <ferror@plt>:
    2330:	f3 0f 1e fa          	endbr64
    2334:	ff 25 4e fb 01 00    	jmp    *0x1fb4e(%rip)        # 21e88 <ferror@GLIBC_2.2.5>
    233a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002340 <isatty@plt>:
    2340:	f3 0f 1e fa          	endbr64
    2344:	ff 25 46 fb 01 00    	jmp    *0x1fb46(%rip)        # 21e90 <isatty@GLIBC_2.2.5>
    234a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002350 <sigaction@plt>:
    2350:	f3 0f 1e fa          	endbr64
    2354:	ff 25 3e fb 01 00    	jmp    *0x1fb3e(%rip)        # 21e98 <sigaction@GLIBC_2.2.5>
    235a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002360 <fread@plt>:
    2360:	f3 0f 1e fa          	endbr64
    2364:	ff 25 36 fb 01 00    	jmp    *0x1fb36(%rip)        # 21ea0 <fread@GLIBC_2.2.5>
    236a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002370 <atof@plt>:
    2370:	f3 0f 1e fa          	endbr64
    2374:	ff 25 2e fb 01 00    	jmp    *0x1fb2e(%rip)        # 21ea8 <atof@GLIBC_2.2.5>
    237a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002380 <fclose@plt>:
    2380:	f3 0f 1e fa          	endbr64
    2384:	ff 25 26 fb 01 00    	jmp    *0x1fb26(%rip)        # 21eb0 <fclose@GLIBC_2.2.5>
    238a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002390 <strlen@plt>:
    2390:	f3 0f 1e fa          	endbr64
    2394:	ff 25 1e fb 01 00    	jmp    *0x1fb1e(%rip)        # 21eb8 <strlen@GLIBC_2.2.5>
    239a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023a0 <__stack_chk_fail@plt>:
    23a0:	f3 0f 1e fa          	endbr64
    23a4:	ff 25 16 fb 01 00    	jmp    *0x1fb16(%rip)        # 21ec0 <__stack_chk_fail@GLIBC_2.4>
    23aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023b0 <snprintf@plt>:
    23b0:	f3 0f 1e fa          	endbr64
    23b4:	ff 25 0e fb 01 00    	jmp    *0x1fb0e(%rip)        # 21ec8 <snprintf@GLIBC_2.2.5>
    23ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023c0 <_Ux86_64_getcontext@plt>:
    23c0:	f3 0f 1e fa          	endbr64
    23c4:	ff 25 06 fb 01 00    	jmp    *0x1fb06(%rip)        # 21ed0 <_Ux86_64_getcontext@Base>
    23ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023d0 <__assert_fail@plt>:
    23d0:	f3 0f 1e fa          	endbr64
    23d4:	ff 25 fe fa 01 00    	jmp    *0x1fafe(%rip)        # 21ed8 <__assert_fail@GLIBC_2.2.5>
    23da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023e0 <fputs@plt>:
    23e0:	f3 0f 1e fa          	endbr64
    23e4:	ff 25 f6 fa 01 00    	jmp    *0x1faf6(%rip)        # 21ee0 <fputs@GLIBC_2.2.5>
    23ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000023f0 <memset@plt>:
    23f0:	f3 0f 1e fa          	endbr64
    23f4:	ff 25 ee fa 01 00    	jmp    *0x1faee(%rip)        # 21ee8 <memset@GLIBC_2.2.5>
    23fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002400 <_Ux86_64_init_local@plt>:
    2400:	f3 0f 1e fa          	endbr64
    2404:	ff 25 e6 fa 01 00    	jmp    *0x1fae6(%rip)        # 21ef0 <_Ux86_64_init_local@Base>
    240a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002410 <_Ux86_64_get_reg@plt>:
    2410:	f3 0f 1e fa          	endbr64
    2414:	ff 25 de fa 01 00    	jmp    *0x1fade(%rip)        # 21ef8 <_Ux86_64_get_reg@Base>
    241a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002420 <fputc@plt>:
    2420:	f3 0f 1e fa          	endbr64
    2424:	ff 25 d6 fa 01 00    	jmp    *0x1fad6(%rip)        # 21f00 <fputc@GLIBC_2.2.5>
    242a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002430 <strcspn@plt>:
    2430:	f3 0f 1e fa          	endbr64
    2434:	ff 25 ce fa 01 00    	jmp    *0x1face(%rip)        # 21f08 <strcspn@GLIBC_2.2.5>
    243a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002440 <fgets@plt>:
    2440:	f3 0f 1e fa          	endbr64
    2444:	ff 25 c6 fa 01 00    	jmp    *0x1fac6(%rip)        # 21f10 <fgets@GLIBC_2.2.5>
    244a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002450 <strcmp@plt>:
    2450:	f3 0f 1e fa          	endbr64
    2454:	ff 25 be fa 01 00    	jmp    *0x1fabe(%rip)        # 21f18 <strcmp@GLIBC_2.2.5>
    245a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002460 <_Ux86_64_step@plt>:
    2460:	f3 0f 1e fa          	endbr64
    2464:	ff 25 b6 fa 01 00    	jmp    *0x1fab6(%rip)        # 21f20 <_Ux86_64_step@Base>
    246a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002470 <fprintf@plt>:
    2470:	f3 0f 1e fa          	endbr64
    2474:	ff 25 ae fa 01 00    	jmp    *0x1faae(%rip)        # 21f28 <fprintf@GLIBC_2.2.5>
    247a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002480 <sigemptyset@plt>:
    2480:	f3 0f 1e fa          	endbr64
    2484:	ff 25 a6 fa 01 00    	jmp    *0x1faa6(%rip)        # 21f30 <sigemptyset@GLIBC_2.2.5>
    248a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002490 <fopen64@plt>:
    2490:	f3 0f 1e fa          	endbr64
    2494:	ff 25 9e fa 01 00    	jmp    *0x1fa9e(%rip)        # 21f38 <fopen64@GLIBC_2.2.5>
    249a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024a0 <clearerr@plt>:
    24a0:	f3 0f 1e fa          	endbr64
    24a4:	ff 25 96 fa 01 00    	jmp    *0x1fa96(%rip)        # 21f40 <clearerr@GLIBC_2.2.5>
    24aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024b0 <memcpy@plt>:
    24b0:	f3 0f 1e fa          	endbr64
    24b4:	ff 25 8e fa 01 00    	jmp    *0x1fa8e(%rip)        # 21f48 <memcpy@GLIBC_2.14>
    24ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024c0 <fileno@plt>:
    24c0:	f3 0f 1e fa          	endbr64
    24c4:	ff 25 86 fa 01 00    	jmp    *0x1fa86(%rip)        # 21f50 <fileno@GLIBC_2.2.5>
    24ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024d0 <malloc@plt>:
    24d0:	f3 0f 1e fa          	endbr64
    24d4:	ff 25 7e fa 01 00    	jmp    *0x1fa7e(%rip)        # 21f58 <malloc@GLIBC_2.2.5>
    24da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024e0 <__isoc99_sscanf@plt>:
    24e0:	f3 0f 1e fa          	endbr64
    24e4:	ff 25 76 fa 01 00    	jmp    *0x1fa76(%rip)        # 21f60 <__isoc99_sscanf@GLIBC_2.7>
    24ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024f0 <realloc@plt>:
    24f0:	f3 0f 1e fa          	endbr64
    24f4:	ff 25 6e fa 01 00    	jmp    *0x1fa6e(%rip)        # 21f68 <realloc@GLIBC_2.2.5>
    24fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002500 <_Ux86_64_get_proc_name@plt>:
    2500:	f3 0f 1e fa          	endbr64
    2504:	ff 25 66 fa 01 00    	jmp    *0x1fa66(%rip)        # 21f70 <_Ux86_64_get_proc_name@Base>
    250a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002510 <atoi@plt>:
    2510:	f3 0f 1e fa          	endbr64
    2514:	ff 25 5e fa 01 00    	jmp    *0x1fa5e(%rip)        # 21f78 <atoi@GLIBC_2.2.5>
    251a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002520 <strcat@plt>:
    2520:	f3 0f 1e fa          	endbr64
    2524:	ff 25 56 fa 01 00    	jmp    *0x1fa56(%rip)        # 21f80 <strcat@GLIBC_2.2.5>
    252a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002530 <sprintf@plt>:
    2530:	f3 0f 1e fa          	endbr64
    2534:	ff 25 4e fa 01 00    	jmp    *0x1fa4e(%rip)        # 21f88 <sprintf@GLIBC_2.2.5>
    253a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002540 <exit@plt>:
    2540:	f3 0f 1e fa          	endbr64
    2544:	ff 25 46 fa 01 00    	jmp    *0x1fa46(%rip)        # 21f90 <exit@GLIBC_2.2.5>
    254a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002550 <fwrite@plt>:
    2550:	f3 0f 1e fa          	endbr64
    2554:	ff 25 3e fa 01 00    	jmp    *0x1fa3e(%rip)        # 21f98 <fwrite@GLIBC_2.2.5>
    255a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002560 <strdup@plt>:
    2560:	f3 0f 1e fa          	endbr64
    2564:	ff 25 36 fa 01 00    	jmp    *0x1fa36(%rip)        # 21fa0 <strdup@GLIBC_2.2.5>
    256a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002570 <getc@plt>:
    2570:	f3 0f 1e fa          	endbr64
    2574:	ff 25 2e fa 01 00    	jmp    *0x1fa2e(%rip)        # 21fa8 <getc@GLIBC_2.2.5>
    257a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002580 <strstr@plt>:
    2580:	f3 0f 1e fa          	endbr64
    2584:	ff 25 26 fa 01 00    	jmp    *0x1fa26(%rip)        # 21fb0 <strstr@GLIBC_2.2.5>
    258a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002590 <__ctype_b_loc@plt>:
    2590:	f3 0f 1e fa          	endbr64
    2594:	ff 25 1e fa 01 00    	jmp    *0x1fa1e(%rip)        # 21fb8 <__ctype_b_loc@GLIBC_2.3>
    259a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000025a0 <_start>:
    25a0:	f3 0f 1e fa          	endbr64
    25a4:	31 ed                	xor    %ebp,%ebp
    25a6:	49 89 d1             	mov    %rdx,%r9
    25a9:	5e                   	pop    %rsi
    25aa:	48 89 e2             	mov    %rsp,%rdx
    25ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    25b1:	50                   	push   %rax
    25b2:	54                   	push   %rsp
    25b3:	45 31 c0             	xor    %r8d,%r8d
    25b6:	31 c9                	xor    %ecx,%ecx
    25b8:	48 8d 3d be 55 00 00 	lea    0x55be(%rip),%rdi        # 7b7d <main>
    25bf:	ff 15 fb f9 01 00    	call   *0x1f9fb(%rip)        # 21fc0 <__libc_start_main@GLIBC_2.34>
    25c5:	f4                   	hlt
    25c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25cd:	00 00 00

00000000000025d0 <deregister_tm_clones>:
    25d0:	48 8d 3d 61 fa 01 00 	lea    0x1fa61(%rip),%rdi        # 22038 <__TMC_END__>
    25d7:	48 8d 05 5a fa 01 00 	lea    0x1fa5a(%rip),%rax        # 22038 <__TMC_END__>
    25de:	48 39 f8             	cmp    %rdi,%rax
    25e1:	74 15                	je     25f8 <deregister_tm_clones+0x28>
    25e3:	48 8b 05 de f9 01 00 	mov    0x1f9de(%rip),%rax        # 21fc8 <_ITM_deregisterTMCloneTable@Base>
    25ea:	48 85 c0             	test   %rax,%rax
    25ed:	74 09                	je     25f8 <deregister_tm_clones+0x28>
    25ef:	ff e0                	jmp    *%rax
    25f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    25f8:	c3                   	ret
    25f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002600 <register_tm_clones>:
    2600:	48 8d 3d 31 fa 01 00 	lea    0x1fa31(%rip),%rdi        # 22038 <__TMC_END__>
    2607:	48 8d 35 2a fa 01 00 	lea    0x1fa2a(%rip),%rsi        # 22038 <__TMC_END__>
    260e:	48 29 fe             	sub    %rdi,%rsi
    2611:	48 89 f0             	mov    %rsi,%rax
    2614:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2618:	48 c1 f8 03          	sar    $0x3,%rax
    261c:	48 01 c6             	add    %rax,%rsi
    261f:	48 d1 fe             	sar    $1,%rsi
    2622:	74 14                	je     2638 <register_tm_clones+0x38>
    2624:	48 8b 05 ad f9 01 00 	mov    0x1f9ad(%rip),%rax        # 21fd8 <_ITM_registerTMCloneTable@Base>
    262b:	48 85 c0             	test   %rax,%rax
    262e:	74 08                	je     2638 <register_tm_clones+0x38>
    2630:	ff e0                	jmp    *%rax
    2632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2638:	c3                   	ret
    2639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002640 <__do_global_dtors_aux>:
    2640:	f3 0f 1e fa          	endbr64
    2644:	80 3d 1d fa 01 00 00 	cmpb   $0x0,0x1fa1d(%rip)        # 22068 <completed.0>
    264b:	75 2b                	jne    2678 <__do_global_dtors_aux+0x38>
    264d:	55                   	push   %rbp
    264e:	48 83 3d 8a f9 01 00 	cmpq   $0x0,0x1f98a(%rip)        # 21fe0 <__cxa_finalize@GLIBC_2.2.5>
    2655:	00
    2656:	48 89 e5             	mov    %rsp,%rbp
    2659:	74 0c                	je     2667 <__do_global_dtors_aux+0x27>
    265b:	48 8b 3d a6 f9 01 00 	mov    0x1f9a6(%rip),%rdi        # 22008 <__dso_handle>
    2662:	e8 79 fc ff ff       	call   22e0 <__cxa_finalize@plt>
    2667:	e8 64 ff ff ff       	call   25d0 <deregister_tm_clones>
    266c:	c6 05 f5 f9 01 00 01 	movb   $0x1,0x1f9f5(%rip)        # 22068 <completed.0>
    2673:	5d                   	pop    %rbp
    2674:	c3                   	ret
    2675:	0f 1f 00             	nopl   (%rax)
    2678:	c3                   	ret
    2679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002680 <frame_dummy>:
    2680:	f3 0f 1e fa          	endbr64
    2684:	e9 77 ff ff ff       	jmp    2600 <register_tm_clones>

0000000000002689 <yysymbol_name>:
    2689:	f3 0f 1e fa          	endbr64
    268d:	55                   	push   %rbp
    268e:	48 89 e5             	mov    %rsp,%rbp
    2691:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2694:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2697:	48 98                	cltq
    2699:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    26a0:	00
    26a1:	48 8d 05 f8 f1 01 00 	lea    0x1f1f8(%rip),%rax        # 218a0 <yytname>
    26a8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    26ac:	5d                   	pop    %rbp
    26ad:	c3                   	ret

00000000000026ae <yypcontext_expected_tokens>:
    26ae:	f3 0f 1e fa          	endbr64
    26b2:	55                   	push   %rbp
    26b3:	48 89 e5             	mov    %rsp,%rbp
    26b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    26ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    26be:	89 55 cc             	mov    %edx,-0x34(%rbp)
    26c1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    26c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26cc:	48 8b 00             	mov    (%rax),%rax
    26cf:	0f b6 00             	movzbl (%rax),%eax
    26d2:	0f b6 c0             	movzbl %al,%eax
    26d5:	48 98                	cltq
    26d7:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    26db:	48 8d 05 9e 5e 01 00 	lea    0x15e9e(%rip),%rax        # 18580 <yypact>
    26e2:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    26e6:	98                   	cwtl
    26e7:	89 45 f0             	mov    %eax,-0x10(%rbp)
    26ea:	83 7d f0 a2          	cmpl   $0xffffffa2,-0x10(%rbp)
    26ee:	0f 84 a4 00 00 00    	je     2798 <yypcontext_expected_tokens+0xea>
    26f4:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    26f8:	79 07                	jns    2701 <yypcontext_expected_tokens+0x53>
    26fa:	8b 45 f0             	mov    -0x10(%rbp),%eax
    26fd:	f7 d8                	neg    %eax
    26ff:	eb 05                	jmp    2706 <yypcontext_expected_tokens+0x58>
    2701:	b8 00 00 00 00       	mov    $0x0,%eax
    2706:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2709:	b8 ca 00 00 00       	mov    $0xca,%eax
    270e:	2b 45 f0             	sub    -0x10(%rbp),%eax
    2711:	89 45 f8             	mov    %eax,-0x8(%rbp)
    2714:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2717:	ba 46 00 00 00       	mov    $0x46,%edx
    271c:	39 d0                	cmp    %edx,%eax
    271e:	0f 4f c2             	cmovg  %edx,%eax
    2721:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2724:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2727:	89 45 ec             	mov    %eax,-0x14(%rbp)
    272a:	eb 64                	jmp    2790 <yypcontext_expected_tokens+0xe2>
    272c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    272f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2732:	01 d0                	add    %edx,%eax
    2734:	48 98                	cltq
    2736:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    273a:	48 8d 05 ff 62 01 00 	lea    0x162ff(%rip),%rax        # 18a40 <yycheck>
    2741:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2745:	98                   	cwtl
    2746:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2749:	75 41                	jne    278c <yypcontext_expected_tokens+0xde>
    274b:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    274f:	74 3b                	je     278c <yypcontext_expected_tokens+0xde>
    2751:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    2756:	75 06                	jne    275e <yypcontext_expected_tokens+0xb0>
    2758:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    275c:	eb 2e                	jmp    278c <yypcontext_expected_tokens+0xde>
    275e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2761:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    2764:	75 07                	jne    276d <yypcontext_expected_tokens+0xbf>
    2766:	b8 00 00 00 00       	mov    $0x0,%eax
    276b:	eb 4b                	jmp    27b8 <yypcontext_expected_tokens+0x10a>
    276d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2770:	8d 50 01             	lea    0x1(%rax),%edx
    2773:	89 55 e8             	mov    %edx,-0x18(%rbp)
    2776:	48 98                	cltq
    2778:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    277f:	00
    2780:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2784:	48 01 c2             	add    %rax,%rdx
    2787:	8b 45 ec             	mov    -0x14(%rbp),%eax
    278a:	89 02                	mov    %eax,(%rdx)
    278c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2790:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2793:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    2796:	7c 94                	jl     272c <yypcontext_expected_tokens+0x7e>
    2798:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    279d:	74 16                	je     27b5 <yypcontext_expected_tokens+0x107>
    279f:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
    27a3:	75 10                	jne    27b5 <yypcontext_expected_tokens+0x107>
    27a5:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    27a9:	7e 0a                	jle    27b5 <yypcontext_expected_tokens+0x107>
    27ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    27af:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%rax)
    27b5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    27b8:	5d                   	pop    %rbp
    27b9:	c3                   	ret

00000000000027ba <yystpcpy>:
    27ba:	f3 0f 1e fa          	endbr64
    27be:	55                   	push   %rbp
    27bf:	48 89 e5             	mov    %rsp,%rbp
    27c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    27c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    27ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    27ce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    27d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    27d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    27da:	eb 01                	jmp    27dd <yystpcpy+0x23>
    27dc:	90                   	nop
    27dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    27e1:	48 8d 42 01          	lea    0x1(%rdx),%rax
    27e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    27e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    27ed:	48 8d 48 01          	lea    0x1(%rax),%rcx
    27f1:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    27f5:	0f b6 12             	movzbl (%rdx),%edx
    27f8:	88 10                	mov    %dl,(%rax)
    27fa:	0f b6 00             	movzbl (%rax),%eax
    27fd:	84 c0                	test   %al,%al
    27ff:	75 db                	jne    27dc <yystpcpy+0x22>
    2801:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2805:	48 83 e8 01          	sub    $0x1,%rax
    2809:	5d                   	pop    %rbp
    280a:	c3                   	ret

000000000000280b <yytnamerr>:
    280b:	f3 0f 1e fa          	endbr64
    280f:	55                   	push   %rbp
    2810:	48 89 e5             	mov    %rsp,%rbp
    2813:	48 83 ec 20          	sub    $0x20,%rsp
    2817:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    281b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    281f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2823:	0f b6 00             	movzbl (%rax),%eax
    2826:	3c 22                	cmp    $0x22,%al
    2828:	0f 85 93 00 00 00    	jne    28c1 <yytnamerr+0xb6>
    282e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2835:	00
    2836:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    283a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    283e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    2843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2847:	0f b6 00             	movzbl (%rax),%eax
    284a:	0f be c0             	movsbl %al,%eax
    284d:	83 f8 5c             	cmp    $0x5c,%eax
    2850:	74 1b                	je     286d <yytnamerr+0x62>
    2852:	83 f8 5c             	cmp    $0x5c,%eax
    2855:	7f 27                	jg     287e <yytnamerr+0x73>
    2857:	83 f8 2c             	cmp    $0x2c,%eax
    285a:	74 61                	je     28bd <yytnamerr+0xb2>
    285c:	83 f8 2c             	cmp    $0x2c,%eax
    285f:	7f 1d                	jg     287e <yytnamerr+0x73>
    2861:	83 f8 22             	cmp    $0x22,%eax
    2864:	74 3a                	je     28a0 <yytnamerr+0x95>
    2866:	83 f8 27             	cmp    $0x27,%eax
    2869:	75 13                	jne    287e <yytnamerr+0x73>
    286b:	eb 50                	jmp    28bd <yytnamerr+0xb2>
    286d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    2872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2876:	0f b6 00             	movzbl (%rax),%eax
    2879:	3c 5c                	cmp    $0x5c,%al
    287b:	75 43                	jne    28c0 <yytnamerr+0xb5>
    287d:	90                   	nop
    287e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2883:	74 14                	je     2899 <yytnamerr+0x8e>
    2885:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2889:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    288d:	48 01 c2             	add    %rax,%rdx
    2890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2894:	0f b6 00             	movzbl (%rax),%eax
    2897:	88 02                	mov    %al,(%rdx)
    2899:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    289e:	eb 1b                	jmp    28bb <yytnamerr+0xb0>
    28a0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    28a5:	74 0e                	je     28b5 <yytnamerr+0xaa>
    28a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    28ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28af:	48 01 d0             	add    %rdx,%rax
    28b2:	c6 00 00             	movb   $0x0,(%rax)
    28b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28b9:	eb 32                	jmp    28ed <yytnamerr+0xe2>
    28bb:	eb 81                	jmp    283e <yytnamerr+0x33>
    28bd:	90                   	nop
    28be:	eb 01                	jmp    28c1 <yytnamerr+0xb6>
    28c0:	90                   	nop
    28c1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    28c6:	74 19                	je     28e1 <yytnamerr+0xd6>
    28c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    28cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28d0:	48 89 d6             	mov    %rdx,%rsi
    28d3:	48 89 c7             	mov    %rax,%rdi
    28d6:	e8 df fe ff ff       	call   27ba <yystpcpy>
    28db:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    28df:	eb 0c                	jmp    28ed <yytnamerr+0xe2>
    28e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    28e5:	48 89 c7             	mov    %rax,%rdi
    28e8:	e8 a3 fa ff ff       	call   2390 <strlen@plt>
    28ed:	c9                   	leave
    28ee:	c3                   	ret

00000000000028ef <yy_syntax_error_arguments>:
    28ef:	f3 0f 1e fa          	endbr64
    28f3:	55                   	push   %rbp
    28f4:	48 89 e5             	mov    %rsp,%rbp
    28f7:	48 83 ec 28          	sub    $0x28,%rsp
    28fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    28ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2903:	89 55 dc             	mov    %edx,-0x24(%rbp)
    2906:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    290d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2911:	8b 40 08             	mov    0x8(%rax),%eax
    2914:	83 f8 fe             	cmp    $0xfffffffe,%eax
    2917:	74 68                	je     2981 <yy_syntax_error_arguments+0x92>
    2919:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    291e:	74 1d                	je     293d <yy_syntax_error_arguments+0x4e>
    2920:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2923:	48 98                	cltq
    2925:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    292c:	00
    292d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2931:	48 01 c2             	add    %rax,%rdx
    2934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2938:	8b 40 08             	mov    0x8(%rax),%eax
    293b:	89 02                	mov    %eax,(%rdx)
    293d:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    2941:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2944:	8d 50 ff             	lea    -0x1(%rax),%edx
    2947:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    294c:	74 0a                	je     2958 <yy_syntax_error_arguments+0x69>
    294e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2952:	48 83 c0 04          	add    $0x4,%rax
    2956:	eb 04                	jmp    295c <yy_syntax_error_arguments+0x6d>
    2958:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    295c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2960:	48 89 c6             	mov    %rax,%rsi
    2963:	48 89 cf             	mov    %rcx,%rdi
    2966:	e8 43 fd ff ff       	call   26ae <yypcontext_expected_tokens>
    296b:	89 45 fc             	mov    %eax,-0x4(%rbp)
    296e:	83 7d fc fe          	cmpl   $0xfffffffe,-0x4(%rbp)
    2972:	75 07                	jne    297b <yy_syntax_error_arguments+0x8c>
    2974:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    2979:	eb 09                	jmp    2984 <yy_syntax_error_arguments+0x95>
    297b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    297e:	01 45 f8             	add    %eax,-0x8(%rbp)
    2981:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2984:	c9                   	leave
    2985:	c3                   	ret

0000000000002986 <yysyntax_error>:
    2986:	f3 0f 1e fa          	endbr64
    298a:	55                   	push   %rbp
    298b:	48 89 e5             	mov    %rsp,%rbp
    298e:	48 83 ec 70          	sub    $0x70,%rsp
    2992:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    2996:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    299a:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    299e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    29a5:	00 00
    29a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    29ab:	31 c0                	xor    %eax,%eax
    29ad:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    29b4:	00
    29b5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    29bc:	00
    29bd:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    29c1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    29c5:	ba 05 00 00 00       	mov    $0x5,%edx
    29ca:	48 89 ce             	mov    %rcx,%rsi
    29cd:	48 89 c7             	mov    %rax,%rdi
    29d0:	e8 1a ff ff ff       	call   28ef <yy_syntax_error_arguments>
    29d5:	89 45 bc             	mov    %eax,-0x44(%rbp)
    29d8:	83 7d bc fe          	cmpl   $0xfffffffe,-0x44(%rbp)
    29dc:	75 0a                	jne    29e8 <yysyntax_error+0x62>
    29de:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    29e3:	e9 e3 01 00 00       	jmp    2bcb <yysyntax_error+0x245>
    29e8:	83 7d bc 05          	cmpl   $0x5,-0x44(%rbp)
    29ec:	77 24                	ja     2a12 <yysyntax_error+0x8c>
    29ee:	8b 45 bc             	mov    -0x44(%rbp),%eax
    29f1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    29f8:	00
    29f9:	48 8d 05 a4 64 01 00 	lea    0x164a4(%rip),%rax        # 18ea4 <yyr2+0x164>
    2a00:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    2a03:	48 98                	cltq
    2a05:	48 8d 15 98 64 01 00 	lea    0x16498(%rip),%rdx        # 18ea4 <yyr2+0x164>
    2a0c:	48 01 d0             	add    %rdx,%rax
    2a0f:	3e ff e0             	notrack jmp *%rax
    2a12:	48 8d 05 88 63 01 00 	lea    0x16388(%rip),%rax        # 18da1 <yyr2+0x61>
    2a19:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a1d:	eb 3f                	jmp    2a5e <yysyntax_error+0xd8>
    2a1f:	48 8d 05 88 63 01 00 	lea    0x16388(%rip),%rax        # 18dae <yyr2+0x6e>
    2a26:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a2a:	eb 32                	jmp    2a5e <yysyntax_error+0xd8>
    2a2c:	48 8d 05 9d 63 01 00 	lea    0x1639d(%rip),%rax        # 18dd0 <yyr2+0x90>
    2a33:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a37:	eb 25                	jmp    2a5e <yysyntax_error+0xd8>
    2a39:	48 8d 05 c0 63 01 00 	lea    0x163c0(%rip),%rax        # 18e00 <yyr2+0xc0>
    2a40:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a44:	eb 18                	jmp    2a5e <yysyntax_error+0xd8>
    2a46:	48 8d 05 e3 63 01 00 	lea    0x163e3(%rip),%rax        # 18e30 <yyr2+0xf0>
    2a4d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a51:	eb 0b                	jmp    2a5e <yysyntax_error+0xd8>
    2a53:	48 8d 05 0e 64 01 00 	lea    0x1640e(%rip),%rax        # 18e68 <yyr2+0x128>
    2a5a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2a62:	48 89 c7             	mov    %rax,%rdi
    2a65:	e8 26 f9 ff ff       	call   2390 <strlen@plt>
    2a6a:	48 89 c2             	mov    %rax,%rdx
    2a6d:	8b 45 bc             	mov    -0x44(%rbp),%eax
    2a70:	01 c0                	add    %eax,%eax
    2a72:	48 98                	cltq
    2a74:	48 29 c2             	sub    %rax,%rdx
    2a77:	48 8d 42 01          	lea    0x1(%rdx),%rax
    2a7b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2a7f:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    2a86:	eb 58                	jmp    2ae0 <yysyntax_error+0x15a>
    2a88:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    2a8b:	48 98                	cltq
    2a8d:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    2a91:	48 98                	cltq
    2a93:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a9a:	00
    2a9b:	48 8d 05 fe ed 01 00 	lea    0x1edfe(%rip),%rax        # 218a0 <yytname>
    2aa2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    2aa6:	48 89 c6             	mov    %rax,%rsi
    2aa9:	bf 00 00 00 00       	mov    $0x0,%edi
    2aae:	e8 58 fd ff ff       	call   280b <yytnamerr>
    2ab3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2ab7:	48 01 d0             	add    %rdx,%rax
    2aba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2abe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ac2:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    2ac6:	7f 0a                	jg     2ad2 <yysyntax_error+0x14c>
    2ac8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2acc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2ad0:	eb 0a                	jmp    2adc <yysyntax_error+0x156>
    2ad2:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    2ad7:	e9 ef 00 00 00       	jmp    2bcb <yysyntax_error+0x245>
    2adc:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    2ae0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    2ae3:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    2ae6:	7c a0                	jl     2a88 <yysyntax_error+0x102>
    2ae8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2aec:	48 8b 00             	mov    (%rax),%rax
    2aef:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    2af3:	7e 37                	jle    2b2c <yysyntax_error+0x1a6>
    2af5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2af9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2afd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2b01:	48 89 10             	mov    %rdx,(%rax)
    2b04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2b08:	48 8b 00             	mov    (%rax),%rax
    2b0b:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    2b0f:	7e 11                	jle    2b22 <yysyntax_error+0x19c>
    2b11:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2b15:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
    2b1c:	ff ff 7f
    2b1f:	48 89 08             	mov    %rcx,(%rax)
    2b22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2b27:	e9 9f 00 00 00       	jmp    2bcb <yysyntax_error+0x245>
    2b2c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2b30:	48 8b 00             	mov    (%rax),%rax
    2b33:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2b37:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    2b3e:	eb 6a                	jmp    2baa <yysyntax_error+0x224>
    2b40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b44:	0f b6 00             	movzbl (%rax),%eax
    2b47:	3c 25                	cmp    $0x25,%al
    2b49:	75 55                	jne    2ba0 <yysyntax_error+0x21a>
    2b4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2b4f:	48 83 c0 01          	add    $0x1,%rax
    2b53:	0f b6 00             	movzbl (%rax),%eax
    2b56:	3c 73                	cmp    $0x73,%al
    2b58:	75 46                	jne    2ba0 <yysyntax_error+0x21a>
    2b5a:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2b5d:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    2b60:	7d 3e                	jge    2ba0 <yysyntax_error+0x21a>
    2b62:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2b65:	8d 50 01             	lea    0x1(%rax),%edx
    2b68:	89 55 b8             	mov    %edx,-0x48(%rbp)
    2b6b:	48 98                	cltq
    2b6d:	8b 44 85 e0          	mov    -0x20(%rbp,%rax,4),%eax
    2b71:	48 98                	cltq
    2b73:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2b7a:	00
    2b7b:	48 8d 05 1e ed 01 00 	lea    0x1ed1e(%rip),%rax        # 218a0 <yytname>
    2b82:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
    2b86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b8a:	48 89 d6             	mov    %rdx,%rsi
    2b8d:	48 89 c7             	mov    %rax,%rdi
    2b90:	e8 76 fc ff ff       	call   280b <yytnamerr>
    2b95:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    2b99:	48 83 45 c0 02       	addq   $0x2,-0x40(%rbp)
    2b9e:	eb 0a                	jmp    2baa <yysyntax_error+0x224>
    2ba0:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    2ba5:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    2baa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2bae:	0f b6 10             	movzbl (%rax),%edx
    2bb1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2bb5:	88 10                	mov    %dl,(%rax)
    2bb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2bbb:	0f b6 00             	movzbl (%rax),%eax
    2bbe:	84 c0                	test   %al,%al
    2bc0:	0f 85 7a ff ff ff    	jne    2b40 <yysyntax_error+0x1ba>
    2bc6:	b8 00 00 00 00       	mov    $0x0,%eax
    2bcb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2bcf:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    2bd6:	00 00
    2bd8:	74 05                	je     2bdf <yysyntax_error+0x259>
    2bda:	e8 c1 f7 ff ff       	call   23a0 <__stack_chk_fail@plt>
    2bdf:	c9                   	leave
    2be0:	c3                   	ret

0000000000002be1 <yydestruct>:
    2be1:	f3 0f 1e fa          	endbr64
    2be5:	55                   	push   %rbp
    2be6:	48 89 e5             	mov    %rsp,%rbp
    2be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2bed:	89 75 f4             	mov    %esi,-0xc(%rbp)
    2bf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    2bf4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2bf9:	75 0b                	jne    2c06 <yydestruct+0x25>
    2bfb:	48 8d 05 ba 62 01 00 	lea    0x162ba(%rip),%rax        # 18ebc <yyr2+0x17c>
    2c02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c06:	90                   	nop
    2c07:	5d                   	pop    %rbp
    2c08:	c3                   	ret

0000000000002c09 <yyparse>:
    2c09:	f3 0f 1e fa          	endbr64
    2c0d:	55                   	push   %rbp
    2c0e:	48 89 e5             	mov    %rsp,%rbp
    2c11:	53                   	push   %rbx
    2c12:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    2c19:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    2c1e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    2c25:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    2c2a:	48 81 ec c8 07 00 00 	sub    $0x7c8,%rsp
    2c31:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c38:	00 00
    2c3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2c3e:	31 c0                	xor    %eax,%eax
    2c40:	c7 85 34 d8 ff ff 00 	movl   $0x0,-0x27cc(%rbp)
    2c47:	00 00 00
    2c4a:	c7 85 38 d8 ff ff 00 	movl   $0x0,-0x27c8(%rbp)
    2c51:	00 00 00
    2c54:	48 c7 85 68 d8 ff ff 	movq   $0xc8,-0x2798(%rbp)
    2c5b:	c8 00 00 00
    2c5f:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    2c66:	48 89 85 70 d8 ff ff 	mov    %rax,-0x2790(%rbp)
    2c6d:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2c74:	48 89 85 78 d8 ff ff 	mov    %rax,-0x2788(%rbp)
    2c7b:	48 8d 85 20 d9 ff ff 	lea    -0x26e0(%rbp),%rax
    2c82:	48 89 85 80 d8 ff ff 	mov    %rax,-0x2780(%rbp)
    2c89:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    2c90:	48 89 85 88 d8 ff ff 	mov    %rax,-0x2778(%rbp)
    2c97:	c7 85 44 d8 ff ff fe 	movl   $0xfffffffe,-0x27bc(%rbp)
    2c9e:	ff ff ff
    2ca1:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    2ca8:	48 89 85 58 d8 ff ff 	mov    %rax,-0x27a8(%rbp)
    2caf:	48 c7 85 60 d8 ff ff 	movq   $0x80,-0x27a0(%rbp)
    2cb6:	80 00 00 00
    2cba:	c7 85 48 d8 ff ff 00 	movl   $0x0,-0x27b8(%rbp)
    2cc1:	00 00 00
    2cc4:	c7 05 b2 f3 01 00 fe 	movl   $0xfffffffe,0x1f3b2(%rip)        # 22080 <yychar>
    2ccb:	ff ff ff
    2cce:	eb 08                	jmp    2cd8 <yyparse+0xcf>
    2cd0:	48 83 85 78 d8 ff ff 	addq   $0x1,-0x2788(%rbp)
    2cd7:	01
    2cd8:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    2cde:	89 c2                	mov    %eax,%edx
    2ce0:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    2ce7:	88 10                	mov    %dl,(%rax)
    2ce9:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    2cf0:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2cf4:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2cfb:	48 01 d0             	add    %rdx,%rax
    2cfe:	48 39 85 78 d8 ff ff 	cmp    %rax,-0x2788(%rbp)
    2d05:	0f 82 2d 02 00 00    	jb     2f38 <yyparse+0x32f>
    2d0b:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    2d12:	48 2b 85 70 d8 ff ff 	sub    -0x2790(%rbp),%rax
    2d19:	48 83 c0 01          	add    $0x1,%rax
    2d1d:	48 89 85 b8 d8 ff ff 	mov    %rax,-0x2748(%rbp)
    2d24:	48 81 bd 68 d8 ff ff 	cmpq   $0x270f,-0x2798(%rbp)
    2d2b:	0f 27 00 00
    2d2f:	0f 8f 31 20 00 00    	jg     4d66 <yyparse+0x215d>
    2d35:	48 d1 a5 68 d8 ff ff 	shlq   $1,-0x2798(%rbp)
    2d3c:	48 81 bd 68 d8 ff ff 	cmpq   $0x2710,-0x2798(%rbp)
    2d43:	10 27 00 00
    2d47:	7e 0b                	jle    2d54 <yyparse+0x14b>
    2d49:	48 c7 85 68 d8 ff ff 	movq   $0x2710,-0x2798(%rbp)
    2d50:	10 27 00 00
    2d54:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2d5b:	48 89 85 c0 d8 ff ff 	mov    %rax,-0x2740(%rbp)
    2d62:	48 8b 95 68 d8 ff ff 	mov    -0x2798(%rbp),%rdx
    2d69:	48 89 d0             	mov    %rdx,%rax
    2d6c:	48 01 c0             	add    %rax,%rax
    2d6f:	48 01 d0             	add    %rdx,%rax
    2d72:	48 c1 e0 04          	shl    $0x4,%rax
    2d76:	48 01 d0             	add    %rdx,%rax
    2d79:	48 83 c0 2f          	add    $0x2f,%rax
    2d7d:	48 89 c7             	mov    %rax,%rdi
    2d80:	e8 4b f7 ff ff       	call   24d0 <malloc@plt>
    2d85:	48 89 85 c8 d8 ff ff 	mov    %rax,-0x2738(%rbp)
    2d8c:	48 83 bd c8 d8 ff ff 	cmpq   $0x0,-0x2738(%rbp)
    2d93:	00
    2d94:	0f 84 cf 1f 00 00    	je     4d69 <yyparse+0x2160>
    2d9a:	48 8b 85 b8 d8 ff ff 	mov    -0x2748(%rbp),%rax
    2da1:	48 8b 8d c8 d8 ff ff 	mov    -0x2738(%rbp),%rcx
    2da8:	48 8b 95 70 d8 ff ff 	mov    -0x2790(%rbp),%rdx
    2daf:	48 89 d6             	mov    %rdx,%rsi
    2db2:	48 89 c2             	mov    %rax,%rdx
    2db5:	48 89 cf             	mov    %rcx,%rdi
    2db8:	e8 f3 f6 ff ff       	call   24b0 <memcpy@plt>
    2dbd:	48 8b 85 c8 d8 ff ff 	mov    -0x2738(%rbp),%rax
    2dc4:	48 89 85 70 d8 ff ff 	mov    %rax,-0x2790(%rbp)
    2dcb:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    2dd2:	48 83 c0 2f          	add    $0x2f,%rax
    2dd6:	48 89 85 d0 d8 ff ff 	mov    %rax,-0x2730(%rbp)
    2ddd:	48 8b 8d d0 d8 ff ff 	mov    -0x2730(%rbp),%rcx
    2de4:	48 ba ab aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaab,%rdx
    2deb:	aa aa 2a
    2dee:	48 89 c8             	mov    %rcx,%rax
    2df1:	48 f7 ea             	imul   %rdx
    2df4:	48 c1 fa 03          	sar    $0x3,%rdx
    2df8:	48 89 c8             	mov    %rcx,%rax
    2dfb:	48 c1 f8 3f          	sar    $0x3f,%rax
    2dff:	48 29 c2             	sub    %rax,%rdx
    2e02:	48 89 d0             	mov    %rdx,%rax
    2e05:	48 01 c0             	add    %rax,%rax
    2e08:	48 01 d0             	add    %rdx,%rax
    2e0b:	48 c1 e0 04          	shl    $0x4,%rax
    2e0f:	48 01 85 c8 d8 ff ff 	add    %rax,-0x2738(%rbp)
    2e16:	48 8b 95 b8 d8 ff ff 	mov    -0x2748(%rbp),%rdx
    2e1d:	48 89 d0             	mov    %rdx,%rax
    2e20:	48 01 c0             	add    %rax,%rax
    2e23:	48 01 d0             	add    %rdx,%rax
    2e26:	48 c1 e0 04          	shl    $0x4,%rax
    2e2a:	48 89 c6             	mov    %rax,%rsi
    2e2d:	48 8b 95 c8 d8 ff ff 	mov    -0x2738(%rbp),%rdx
    2e34:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    2e3b:	48 89 d1             	mov    %rdx,%rcx
    2e3e:	48 89 f2             	mov    %rsi,%rdx
    2e41:	48 89 c6             	mov    %rax,%rsi
    2e44:	48 89 cf             	mov    %rcx,%rdi
    2e47:	e8 64 f6 ff ff       	call   24b0 <memcpy@plt>
    2e4c:	48 8b 85 c8 d8 ff ff 	mov    -0x2738(%rbp),%rax
    2e53:	48 89 85 80 d8 ff ff 	mov    %rax,-0x2780(%rbp)
    2e5a:	48 8b 95 68 d8 ff ff 	mov    -0x2798(%rbp),%rdx
    2e61:	48 89 d0             	mov    %rdx,%rax
    2e64:	48 01 c0             	add    %rax,%rax
    2e67:	48 01 d0             	add    %rdx,%rax
    2e6a:	48 c1 e0 04          	shl    $0x4,%rax
    2e6e:	48 83 c0 2f          	add    $0x2f,%rax
    2e72:	48 89 85 d8 d8 ff ff 	mov    %rax,-0x2728(%rbp)
    2e79:	48 8b 8d d8 d8 ff ff 	mov    -0x2728(%rbp),%rcx
    2e80:	48 ba ab aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaab,%rdx
    2e87:	aa aa 2a
    2e8a:	48 89 c8             	mov    %rcx,%rax
    2e8d:	48 f7 ea             	imul   %rdx
    2e90:	48 c1 fa 03          	sar    $0x3,%rdx
    2e94:	48 89 c8             	mov    %rcx,%rax
    2e97:	48 c1 f8 3f          	sar    $0x3f,%rax
    2e9b:	48 29 c2             	sub    %rax,%rdx
    2e9e:	48 89 d0             	mov    %rdx,%rax
    2ea1:	48 01 c0             	add    %rax,%rax
    2ea4:	48 01 d0             	add    %rdx,%rax
    2ea7:	48 c1 e0 04          	shl    $0x4,%rax
    2eab:	48 01 85 c8 d8 ff ff 	add    %rax,-0x2738(%rbp)
    2eb2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    2eb9:	48 39 85 c0 d8 ff ff 	cmp    %rax,-0x2740(%rbp)
    2ec0:	74 0f                	je     2ed1 <yyparse+0x2c8>
    2ec2:	48 8b 85 c0 d8 ff ff 	mov    -0x2740(%rbp),%rax
    2ec9:	48 89 c7             	mov    %rax,%rdi
    2ecc:	e8 1f f4 ff ff       	call   22f0 <free@plt>
    2ed1:	48 8b 85 b8 d8 ff ff 	mov    -0x2748(%rbp),%rax
    2ed8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2edc:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2ee3:	48 01 d0             	add    %rdx,%rax
    2ee6:	48 89 85 78 d8 ff ff 	mov    %rax,-0x2788(%rbp)
    2eed:	48 8b 95 b8 d8 ff ff 	mov    -0x2748(%rbp),%rdx
    2ef4:	48 89 d0             	mov    %rdx,%rax
    2ef7:	48 01 c0             	add    %rax,%rax
    2efa:	48 01 d0             	add    %rdx,%rax
    2efd:	48 c1 e0 04          	shl    $0x4,%rax
    2f01:	48 8d 50 d0          	lea    -0x30(%rax),%rdx
    2f05:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
    2f0c:	48 01 d0             	add    %rdx,%rax
    2f0f:	48 89 85 88 d8 ff ff 	mov    %rax,-0x2778(%rbp)
    2f16:	48 8b 85 68 d8 ff ff 	mov    -0x2798(%rbp),%rax
    2f1d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2f21:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    2f28:	48 01 d0             	add    %rdx,%rax
    2f2b:	48 39 85 78 d8 ff ff 	cmp    %rax,-0x2788(%rbp)
    2f32:	0f 83 1e 1e 00 00    	jae    4d56 <yyparse+0x214d>
    2f38:	83 bd 34 d8 ff ff 05 	cmpl   $0x5,-0x27cc(%rbp)
    2f3f:	0f 84 04 1e 00 00    	je     4d49 <yyparse+0x2140>
    2f45:	90                   	nop
    2f46:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    2f4c:	48 98                	cltq
    2f4e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2f52:	48 8d 05 27 56 01 00 	lea    0x15627(%rip),%rax        # 18580 <yypact>
    2f59:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2f5d:	98                   	cwtl
    2f5e:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    2f64:	83 bd 3c d8 ff ff a2 	cmpl   $0xffffffa2,-0x27c4(%rbp)
    2f6b:	0f 84 90 01 00 00    	je     3101 <yyparse+0x4f8>
    2f71:	8b 05 09 f1 01 00    	mov    0x1f109(%rip),%eax        # 22080 <yychar>
    2f77:	83 f8 fe             	cmp    $0xfffffffe,%eax
    2f7a:	75 0b                	jne    2f87 <yyparse+0x37e>
    2f7c:	e8 33 24 00 00       	call   53b4 <yylex>
    2f81:	89 05 f9 f0 01 00    	mov    %eax,0x1f0f9(%rip)        # 22080 <yychar>
    2f87:	8b 05 f3 f0 01 00    	mov    0x1f0f3(%rip),%eax        # 22080 <yychar>
    2f8d:	85 c0                	test   %eax,%eax
    2f8f:	7f 16                	jg     2fa7 <yyparse+0x39e>
    2f91:	c7 05 e5 f0 01 00 00 	movl   $0x0,0x1f0e5(%rip)        # 22080 <yychar>
    2f98:	00 00 00
    2f9b:	c7 85 44 d8 ff ff 00 	movl   $0x0,-0x27bc(%rbp)
    2fa2:	00 00 00
    2fa5:	eb 60                	jmp    3007 <yyparse+0x3fe>
    2fa7:	8b 05 d3 f0 01 00    	mov    0x1f0d3(%rip),%eax        # 22080 <yychar>
    2fad:	3d 00 01 00 00       	cmp    $0x100,%eax
    2fb2:	75 19                	jne    2fcd <yyparse+0x3c4>
    2fb4:	c7 05 c2 f0 01 00 01 	movl   $0x101,0x1f0c2(%rip)        # 22080 <yychar>
    2fbb:	01 00 00
    2fbe:	c7 85 44 d8 ff ff 01 	movl   $0x1,-0x27bc(%rbp)
    2fc5:	00 00 00
    2fc8:	e9 1f 1c 00 00       	jmp    4bec <yyparse+0x1fe3>
    2fcd:	8b 05 ad f0 01 00    	mov    0x1f0ad(%rip),%eax        # 22080 <yychar>
    2fd3:	85 c0                	test   %eax,%eax
    2fd5:	78 25                	js     2ffc <yyparse+0x3f3>
    2fd7:	8b 05 a3 f0 01 00    	mov    0x1f0a3(%rip),%eax        # 22080 <yychar>
    2fdd:	3d 3c 01 00 00       	cmp    $0x13c,%eax
    2fe2:	7f 18                	jg     2ffc <yyparse+0x3f3>
    2fe4:	8b 05 96 f0 01 00    	mov    0x1f096(%rip),%eax        # 22080 <yychar>
    2fea:	48 98                	cltq
    2fec:	48 8d 15 2d 50 01 00 	lea    0x1502d(%rip),%rdx        # 18020 <yytranslate>
    2ff3:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    2ff7:	0f be c0             	movsbl %al,%eax
    2ffa:	eb 05                	jmp    3001 <yyparse+0x3f8>
    2ffc:	b8 02 00 00 00       	mov    $0x2,%eax
    3001:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    3007:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    300d:	01 85 3c d8 ff ff    	add    %eax,-0x27c4(%rbp)
    3013:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    301a:	0f 88 e4 00 00 00    	js     3104 <yyparse+0x4fb>
    3020:	81 bd 3c d8 ff ff c9 	cmpl   $0xc9,-0x27c4(%rbp)
    3027:	00 00 00
    302a:	0f 8f d4 00 00 00    	jg     3104 <yyparse+0x4fb>
    3030:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    3036:	48 98                	cltq
    3038:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    303c:	48 8d 05 fd 59 01 00 	lea    0x159fd(%rip),%rax        # 18a40 <yycheck>
    3043:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    3047:	98                   	cwtl
    3048:	39 85 44 d8 ff ff    	cmp    %eax,-0x27bc(%rbp)
    304e:	0f 85 b0 00 00 00    	jne    3104 <yyparse+0x4fb>
    3054:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    305a:	48 98                	cltq
    305c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    3060:	48 8d 05 39 58 01 00 	lea    0x15839(%rip),%rax        # 188a0 <yytable>
    3067:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    306b:	98                   	cwtl
    306c:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    3072:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    3079:	7f 0b                	jg     3086 <yyparse+0x47d>
    307b:	f7 9d 3c d8 ff ff    	negl   -0x27c4(%rbp)
    3081:	e9 a9 00 00 00       	jmp    312f <yyparse+0x526>
    3086:	83 bd 38 d8 ff ff 00 	cmpl   $0x0,-0x27c8(%rbp)
    308d:	74 07                	je     3096 <yyparse+0x48d>
    308f:	83 ad 38 d8 ff ff 01 	subl   $0x1,-0x27c8(%rbp)
    3096:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    309c:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    30a2:	48 83 85 88 d8 ff ff 	addq   $0x30,-0x2778(%rbp)
    30a9:	30
    30aa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    30b1:	48 8b 0d e8 ef 01 00 	mov    0x1efe8(%rip),%rcx        # 220a0 <yylval>
    30b8:	48 8b 1d e9 ef 01 00 	mov    0x1efe9(%rip),%rbx        # 220a8 <yylval+0x8>
    30bf:	48 89 08             	mov    %rcx,(%rax)
    30c2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    30c6:	48 8b 0d e3 ef 01 00 	mov    0x1efe3(%rip),%rcx        # 220b0 <yylval+0x10>
    30cd:	48 8b 1d e4 ef 01 00 	mov    0x1efe4(%rip),%rbx        # 220b8 <yylval+0x18>
    30d4:	48 89 48 10          	mov    %rcx,0x10(%rax)
    30d8:	48 89 58 18          	mov    %rbx,0x18(%rax)
    30dc:	48 8b 0d dd ef 01 00 	mov    0x1efdd(%rip),%rcx        # 220c0 <yylval+0x20>
    30e3:	48 8b 1d de ef 01 00 	mov    0x1efde(%rip),%rbx        # 220c8 <yylval+0x28>
    30ea:	48 89 48 20          	mov    %rcx,0x20(%rax)
    30ee:	48 89 58 28          	mov    %rbx,0x28(%rax)
    30f2:	c7 05 84 ef 01 00 fe 	movl   $0xfffffffe,0x1ef84(%rip)        # 22080 <yychar>
    30f9:	ff ff ff
    30fc:	e9 cf fb ff ff       	jmp    2cd0 <yyparse+0xc7>
    3101:	90                   	nop
    3102:	eb 01                	jmp    3105 <yyparse+0x4fc>
    3104:	90                   	nop
    3105:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    310b:	48 98                	cltq
    310d:	48 8d 15 0c 56 01 00 	lea    0x1560c(%rip),%rdx        # 18720 <yydefact>
    3114:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    3118:	0f be c0             	movsbl %al,%eax
    311b:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    3121:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    3128:	0f 84 da 18 00 00    	je     4a08 <yyparse+0x1dff>
    312e:	90                   	nop
    312f:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    3135:	48 98                	cltq
    3137:	48 8d 15 02 5c 01 00 	lea    0x15c02(%rip),%rdx        # 18d40 <yyr2>
    313e:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    3142:	0f be c0             	movsbl %al,%eax
    3145:	89 85 48 d8 ff ff    	mov    %eax,-0x27b8(%rbp)
    314b:	b8 01 00 00 00       	mov    $0x1,%eax
    3150:	2b 85 48 d8 ff ff    	sub    -0x27b8(%rbp),%eax
    3156:	48 63 d0             	movslq %eax,%rdx
    3159:	48 89 d0             	mov    %rdx,%rax
    315c:	48 01 c0             	add    %rax,%rax
    315f:	48 01 d0             	add    %rdx,%rax
    3162:	48 c1 e0 04          	shl    $0x4,%rax
    3166:	48 89 c2             	mov    %rax,%rdx
    3169:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3170:	48 01 d0             	add    %rdx,%rax
    3173:	48 8b 08             	mov    (%rax),%rcx
    3176:	48 8b 58 08          	mov    0x8(%rax),%rbx
    317a:	48 89 8d f0 d8 ff ff 	mov    %rcx,-0x2710(%rbp)
    3181:	48 89 9d f8 d8 ff ff 	mov    %rbx,-0x2708(%rbp)
    3188:	48 8b 48 10          	mov    0x10(%rax),%rcx
    318c:	48 8b 58 18          	mov    0x18(%rax),%rbx
    3190:	48 89 8d 00 d9 ff ff 	mov    %rcx,-0x2700(%rbp)
    3197:	48 89 9d 08 d9 ff ff 	mov    %rbx,-0x26f8(%rbp)
    319e:	48 8b 50 28          	mov    0x28(%rax),%rdx
    31a2:	48 8b 40 20          	mov    0x20(%rax),%rax
    31a6:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    31ad:	48 89 95 18 d9 ff ff 	mov    %rdx,-0x26e8(%rbp)
    31b4:	83 bd 3c d8 ff ff 60 	cmpl   $0x60,-0x27c4(%rbp)
    31bb:	0f 87 f1 16 00 00    	ja     48b2 <yyparse+0x1ca9>
    31c1:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    31c7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    31ce:	00
    31cf:	48 8d 05 76 5d 01 00 	lea    0x15d76(%rip),%rax        # 18f4c <yyr2+0x20c>
    31d6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    31d9:	48 98                	cltq
    31db:	48 8d 15 6a 5d 01 00 	lea    0x15d6a(%rip),%rdx        # 18f4c <yyr2+0x20c>
    31e2:	48 01 d0             	add    %rdx,%rax
    31e5:	3e ff e0             	notrack jmp *%rax
    31e8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    31ef:	48 83 e8 30          	sub    $0x30,%rax
    31f3:	48 8b 00             	mov    (%rax),%rax
    31f6:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    31fd:	e9 b1 16 00 00       	jmp    48b3 <yyparse+0x1caa>
    3202:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    3209:	00 00 00 00
    320d:	e9 a1 16 00 00       	jmp    48b3 <yyparse+0x1caa>
    3212:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3219:	48 83 e8 60          	sub    $0x60,%rax
    321d:	48 8b 38             	mov    (%rax),%rdi
    3220:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3227:	48 2d 90 00 00 00    	sub    $0x90,%rax
    322d:	4c 8b 08             	mov    (%rax),%r9
    3230:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3237:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    323d:	4c 8b 00             	mov    (%rax),%r8
    3240:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3247:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    324d:	48 8b 08             	mov    (%rax),%rcx
    3250:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3257:	48 2d 50 01 00 00    	sub    $0x150,%rax
    325d:	48 8b 10             	mov    (%rax),%rdx
    3260:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3267:	48 2d 80 01 00 00    	sub    $0x180,%rax
    326d:	48 8b 30             	mov    (%rax),%rsi
    3270:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3277:	48 2d 80 01 00 00    	sub    $0x180,%rax
    327d:	8b 40 08             	mov    0x8(%rax),%eax
    3280:	48 83 ec 08          	sub    $0x8,%rsp
    3284:	57                   	push   %rdi
    3285:	89 c7                	mov    %eax,%edi
    3287:	e8 65 6a 00 00       	call   9cf1 <mk_program>
    328c:	48 83 c4 10          	add    $0x10,%rsp
    3290:	48 89 05 61 f4 01 00 	mov    %rax,0x1f461(%rip)        # 226f8 <parse_tree>
    3297:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    329c:	e9 19 1c 00 00       	jmp    4eba <yyparse+0x22b1>
    32a1:	48 8b 05 f8 ed 01 00 	mov    0x1edf8(%rip),%rax        # 220a0 <yylval>
    32a8:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    32af:	8b 05 7b ed 01 00    	mov    0x1ed7b(%rip),%eax        # 22030 <line_num>
    32b5:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    32bb:	e9 f3 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32c0:	8b 05 da ed 01 00    	mov    0x1edda(%rip),%eax        # 220a0 <yylval>
    32c6:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    32cc:	e9 e2 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32d1:	f3 0f 10 05 c7 ed 01 	movss  0x1edc7(%rip),%xmm0        # 220a0 <yylval>
    32d8:	00
    32d9:	f3 0f 11 85 f0 d8 ff 	movss  %xmm0,-0x2710(%rbp)
    32e0:	ff
    32e1:	e9 cd 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32e6:	48 8b 05 b3 ed 01 00 	mov    0x1edb3(%rip),%rax        # 220a0 <yylval>
    32ed:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    32f4:	e9 ba 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    32f9:	8b 05 a1 ed 01 00    	mov    0x1eda1(%rip),%eax        # 220a0 <yylval>
    32ff:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3305:	e9 a9 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    330a:	8b 05 90 ed 01 00    	mov    0x1ed90(%rip),%eax        # 220a0 <yylval>
    3310:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3316:	e9 98 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    331b:	8b 05 7f ed 01 00    	mov    0x1ed7f(%rip),%eax        # 220a0 <yylval>
    3321:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3327:	e9 87 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    332c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3333:	48 8b 00             	mov    (%rax),%rax
    3336:	be 03 00 00 00       	mov    $0x3,%esi
    333b:	48 89 c7             	mov    %rax,%rdi
    333e:	e8 b8 4e 00 00       	call   81fb <CreateListNode>
    3343:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    334a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3351:	8b 40 08             	mov    0x8(%rax),%eax
    3354:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    335a:	e9 54 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    335f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3366:	48 8b 00             	mov    (%rax),%rax
    3369:	be 03 00 00 00       	mov    $0x3,%esi
    336e:	48 89 c7             	mov    %rax,%rdi
    3371:	e8 85 4e 00 00       	call   81fb <CreateListNode>
    3376:	48 89 c2             	mov    %rax,%rdx
    3379:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3380:	48 83 e8 60          	sub    $0x60,%rax
    3384:	48 8b 00             	mov    (%rax),%rax
    3387:	48 89 d6             	mov    %rdx,%rsi
    338a:	48 89 c7             	mov    %rax,%rdi
    338d:	e8 35 4f 00 00       	call   82c7 <PushListNodeBack>
    3392:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3399:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33a0:	48 83 e8 60          	sub    $0x60,%rax
    33a4:	8b 40 08             	mov    0x8(%rax),%eax
    33a7:	89 85 f8 d8 ff ff    	mov    %eax,-0x2708(%rbp)
    33ad:	e9 01 15 00 00       	jmp    48b3 <yyparse+0x1caa>
    33b2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33b9:	48 8b 00             	mov    (%rax),%rax
    33bc:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    33c3:	e9 eb 14 00 00       	jmp    48b3 <yyparse+0x1caa>
    33c8:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    33cf:	00 00 00 00
    33d3:	e9 db 14 00 00       	jmp    48b3 <yyparse+0x1caa>
    33d8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33df:	48 83 e8 30          	sub    $0x30,%rax
    33e3:	8b 00                	mov    (%rax),%eax
    33e5:	3d 13 01 00 00       	cmp    $0x113,%eax
    33ea:	75 5d                	jne    3449 <yyparse+0x840>
    33ec:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    33f3:	48 83 e8 30          	sub    $0x30,%rax
    33f7:	8b 78 14             	mov    0x14(%rax),%edi
    33fa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3401:	48 83 e8 30          	sub    $0x30,%rax
    3405:	8b 48 10             	mov    0x10(%rax),%ecx
    3408:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    340f:	48 83 e8 30          	sub    $0x30,%rax
    3413:	8b 50 04             	mov    0x4(%rax),%edx
    3416:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    341d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3423:	48 8b 30             	mov    (%rax),%rsi
    3426:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    342d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3433:	8b 40 08             	mov    0x8(%rax),%eax
    3436:	41 89 f8             	mov    %edi,%r8d
    3439:	89 c7                	mov    %eax,%edi
    343b:	e8 a8 6b 00 00       	call   9fe8 <mk_arraydecl>
    3440:	48 89 85 90 d8 ff ff 	mov    %rax,-0x2770(%rbp)
    3447:	eb 51                	jmp    349a <yyparse+0x891>
    3449:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3450:	48 83 e8 30          	sub    $0x30,%rax
    3454:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3458:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    345f:	48 83 e8 30          	sub    $0x30,%rax
    3463:	8b 50 04             	mov    0x4(%rax),%edx
    3466:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    346d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3473:	48 8b 30             	mov    (%rax),%rsi
    3476:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    347d:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3483:	8b 40 08             	mov    0x8(%rax),%eax
    3486:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    348c:	89 c7                	mov    %eax,%edi
    348e:	e8 e3 6a 00 00       	call   9f76 <mk_vardecl>
    3493:	48 89 85 90 d8 ff ff 	mov    %rax,-0x2770(%rbp)
    349a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    34a1:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    34a7:	48 8b 00             	mov    (%rax),%rax
    34aa:	48 85 c0             	test   %rax,%rax
    34ad:	75 20                	jne    34cf <yyparse+0x8c6>
    34af:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    34b6:	be 00 00 00 00       	mov    $0x0,%esi
    34bb:	48 89 c7             	mov    %rax,%rdi
    34be:	e8 38 4d 00 00       	call   81fb <CreateListNode>
    34c3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    34ca:	e9 e4 13 00 00       	jmp    48b3 <yyparse+0x1caa>
    34cf:	48 8b 85 90 d8 ff ff 	mov    -0x2770(%rbp),%rax
    34d6:	be 00 00 00 00       	mov    $0x0,%esi
    34db:	48 89 c7             	mov    %rax,%rdi
    34de:	e8 18 4d 00 00       	call   81fb <CreateListNode>
    34e3:	48 89 c2             	mov    %rax,%rdx
    34e6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    34ed:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    34f3:	48 8b 00             	mov    (%rax),%rax
    34f6:	48 89 d6             	mov    %rdx,%rsi
    34f9:	48 89 c7             	mov    %rax,%rdi
    34fc:	e8 c6 4d 00 00       	call   82c7 <PushListNodeBack>
    3501:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3508:	e9 a6 13 00 00       	jmp    48b3 <yyparse+0x1caa>
    350d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3514:	48 83 e8 30          	sub    $0x30,%rax
    3518:	8b 00                	mov    (%rax),%eax
    351a:	3d 13 01 00 00       	cmp    $0x113,%eax
    351f:	75 5d                	jne    357e <yyparse+0x975>
    3521:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3528:	48 83 e8 30          	sub    $0x30,%rax
    352c:	8b 78 14             	mov    0x14(%rax),%edi
    352f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3536:	48 83 e8 30          	sub    $0x30,%rax
    353a:	8b 48 10             	mov    0x10(%rax),%ecx
    353d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3544:	48 83 e8 30          	sub    $0x30,%rax
    3548:	8b 50 04             	mov    0x4(%rax),%edx
    354b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3552:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3558:	48 8b 30             	mov    (%rax),%rsi
    355b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3562:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3568:	8b 40 08             	mov    0x8(%rax),%eax
    356b:	41 89 f8             	mov    %edi,%r8d
    356e:	89 c7                	mov    %eax,%edi
    3570:	e8 73 6a 00 00       	call   9fe8 <mk_arraydecl>
    3575:	48 89 85 98 d8 ff ff 	mov    %rax,-0x2768(%rbp)
    357c:	eb 51                	jmp    35cf <yyparse+0x9c6>
    357e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3585:	48 83 e8 30          	sub    $0x30,%rax
    3589:	48 8b 48 08          	mov    0x8(%rax),%rcx
    358d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3594:	48 83 e8 30          	sub    $0x30,%rax
    3598:	8b 50 04             	mov    0x4(%rax),%edx
    359b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    35a2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    35a8:	48 8b 30             	mov    (%rax),%rsi
    35ab:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    35b2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    35b8:	8b 40 08             	mov    0x8(%rax),%eax
    35bb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    35c1:	89 c7                	mov    %eax,%edi
    35c3:	e8 ae 69 00 00       	call   9f76 <mk_vardecl>
    35c8:	48 89 85 98 d8 ff ff 	mov    %rax,-0x2768(%rbp)
    35cf:	48 8b 85 98 d8 ff ff 	mov    -0x2768(%rbp),%rax
    35d6:	be 00 00 00 00       	mov    $0x0,%esi
    35db:	48 89 c7             	mov    %rax,%rdi
    35de:	e8 18 4c 00 00       	call   81fb <CreateListNode>
    35e3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    35ea:	e9 c4 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    35ef:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    35f6:	48 8b 00             	mov    (%rax),%rax
    35f9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3600:	e9 ae 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3605:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    360c:	00 00 00 00
    3610:	e9 9e 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3615:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    361c:	48 8b 00             	mov    (%rax),%rax
    361f:	be 00 00 00 00       	mov    $0x0,%esi
    3624:	48 89 c7             	mov    %rax,%rdi
    3627:	e8 cf 4b 00 00       	call   81fb <CreateListNode>
    362c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3633:	e9 7b 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3638:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    363f:	48 8b 00             	mov    (%rax),%rax
    3642:	be 00 00 00 00       	mov    $0x0,%esi
    3647:	48 89 c7             	mov    %rax,%rdi
    364a:	e8 ac 4b 00 00       	call   81fb <CreateListNode>
    364f:	48 89 c2             	mov    %rax,%rdx
    3652:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3659:	48 83 e8 30          	sub    $0x30,%rax
    365d:	48 8b 00             	mov    (%rax),%rax
    3660:	48 89 d6             	mov    %rdx,%rsi
    3663:	48 89 c7             	mov    %rax,%rdi
    3666:	e8 5c 4c 00 00       	call   82c7 <PushListNodeBack>
    366b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3672:	e9 3c 12 00 00       	jmp    48b3 <yyparse+0x1caa>
    3677:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    367e:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3684:	8b 00                	mov    (%rax),%eax
    3686:	3d 27 01 00 00       	cmp    $0x127,%eax
    368b:	74 0f                	je     369c <yyparse+0xa93>
    368d:	48 8d 05 34 58 01 00 	lea    0x15834(%rip),%rax        # 18ec8 <yyr2+0x188>
    3694:	48 89 c7             	mov    %rax,%rdi
    3697:	e8 38 18 00 00       	call   4ed4 <yyerror>
    369c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36a3:	48 83 e8 30          	sub    $0x30,%rax
    36a7:	8b 08                	mov    (%rax),%ecx
    36a9:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36b0:	48 2d 90 00 00 00    	sub    $0x90,%rax
    36b6:	8b 10                	mov    (%rax),%edx
    36b8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36bf:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    36c5:	48 8b 30             	mov    (%rax),%rsi
    36c8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36cf:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    36d5:	8b 40 08             	mov    0x8(%rax),%eax
    36d8:	89 c7                	mov    %eax,%edi
    36da:	e8 a5 66 00 00       	call   9d84 <mk_typedecl>
    36df:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    36e6:	e9 c8 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    36eb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    36f2:	8b 00                	mov    (%rax),%eax
    36f4:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    36fa:	e9 b4 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    36ff:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3706:	48 83 e8 30          	sub    $0x30,%rax
    370a:	8b 00                	mov    (%rax),%eax
    370c:	3d 2f 01 00 00       	cmp    $0x12f,%eax
    3711:	75 16                	jne    3729 <yyparse+0xb20>
    3713:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    371a:	8b 00                	mov    (%rax),%eax
    371c:	f7 d8                	neg    %eax
    371e:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3724:	e9 8a 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    3729:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3730:	8b 00                	mov    (%rax),%eax
    3732:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    3738:	e9 76 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    373d:	c7 85 f0 d8 ff ff 18 	movl   $0x118,-0x2710(%rbp)
    3744:	01 00 00
    3747:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    374e:	8b 00                	mov    (%rax),%eax
    3750:	89 85 f4 d8 ff ff    	mov    %eax,-0x270c(%rbp)
    3756:	48 c7 85 f8 d8 ff ff 	movq   $0x0,-0x2708(%rbp)
    375d:	00 00 00 00
    3761:	e9 4d 11 00 00       	jmp    48b3 <yyparse+0x1caa>
    3766:	c7 85 f0 d8 ff ff 13 	movl   $0x113,-0x2710(%rbp)
    376d:	01 00 00
    3770:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3777:	8b 00                	mov    (%rax),%eax
    3779:	89 85 f4 d8 ff ff    	mov    %eax,-0x270c(%rbp)
    377f:	48 c7 85 f8 d8 ff ff 	movq   $0x0,-0x2708(%rbp)
    3786:	00 00 00 00
    378a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3791:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3797:	8b 00                	mov    (%rax),%eax
    3799:	89 85 00 d9 ff ff    	mov    %eax,-0x2700(%rbp)
    379f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    37a6:	48 2d 90 00 00 00    	sub    $0x90,%rax
    37ac:	8b 00                	mov    (%rax),%eax
    37ae:	89 85 04 d9 ff ff    	mov    %eax,-0x26fc(%rbp)
    37b4:	e9 fa 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    37b9:	c7 85 f0 d8 ff ff 11 	movl   $0x111,-0x2710(%rbp)
    37c0:	01 00 00
    37c3:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    37ca:	48 8b 00             	mov    (%rax),%rax
    37cd:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    37d4:	c7 85 f4 d8 ff ff ff 	movl   $0xffffffff,-0x270c(%rbp)
    37db:	ff ff ff
    37de:	e9 d0 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    37e3:	c7 85 f0 d8 ff ff 0b 	movl   $0x10b,-0x2710(%rbp)
    37ea:	01 00 00
    37ed:	e9 c1 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    37f2:	c7 85 f0 d8 ff ff 0c 	movl   $0x10c,-0x2710(%rbp)
    37f9:	01 00 00
    37fc:	e9 b2 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    3801:	c7 85 f0 d8 ff ff 0d 	movl   $0x10d,-0x2710(%rbp)
    3808:	01 00 00
    380b:	e9 a3 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    3810:	c7 85 f0 d8 ff ff 0e 	movl   $0x10e,-0x2710(%rbp)
    3817:	01 00 00
    381a:	e9 94 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    381f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3826:	48 83 e8 60          	sub    $0x60,%rax
    382a:	48 8b 00             	mov    (%rax),%rax
    382d:	48 85 c0             	test   %rax,%rax
    3830:	75 27                	jne    3859 <yyparse+0xc50>
    3832:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3839:	48 83 e8 30          	sub    $0x30,%rax
    383d:	48 8b 00             	mov    (%rax),%rax
    3840:	be 00 00 00 00       	mov    $0x0,%esi
    3845:	48 89 c7             	mov    %rax,%rdi
    3848:	e8 ae 49 00 00       	call   81fb <CreateListNode>
    384d:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3854:	e9 5a 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    3859:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3860:	48 83 e8 30          	sub    $0x30,%rax
    3864:	48 8b 00             	mov    (%rax),%rax
    3867:	be 00 00 00 00       	mov    $0x0,%esi
    386c:	48 89 c7             	mov    %rax,%rdi
    386f:	e8 87 49 00 00       	call   81fb <CreateListNode>
    3874:	48 89 c2             	mov    %rax,%rdx
    3877:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    387e:	48 83 e8 60          	sub    $0x60,%rax
    3882:	48 8b 00             	mov    (%rax),%rax
    3885:	48 89 d6             	mov    %rdx,%rsi
    3888:	48 89 c7             	mov    %rax,%rdi
    388b:	e8 37 4a 00 00       	call   82c7 <PushListNodeBack>
    3890:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3897:	e9 17 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    389c:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    38a3:	00 00 00 00
    38a7:	e9 07 10 00 00       	jmp    48b3 <yyparse+0x1caa>
    38ac:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38b3:	48 2d 90 00 00 00    	sub    $0x90,%rax
    38b9:	8b 00                	mov    (%rax),%eax
    38bb:	3d 04 01 00 00       	cmp    $0x104,%eax
    38c0:	0f 85 96 00 00 00    	jne    395c <yyparse+0xd53>
    38c6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38cd:	48 2d 90 00 00 00    	sub    $0x90,%rax
    38d3:	44 8b 40 2c          	mov    0x2c(%rax),%r8d
    38d7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38de:	48 2d 90 00 00 00    	sub    $0x90,%rax
    38e4:	8b 78 28             	mov    0x28(%rax),%edi
    38e7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38ee:	4c 8b 08             	mov    (%rax),%r9
    38f1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    38f8:	48 83 e8 30          	sub    $0x30,%rax
    38fc:	4c 8b 10             	mov    (%rax),%r10
    38ff:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3906:	48 83 e8 60          	sub    $0x60,%rax
    390a:	48 8b 08             	mov    (%rax),%rcx
    390d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3914:	48 2d 90 00 00 00    	sub    $0x90,%rax
    391a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    391e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3925:	48 2d 90 00 00 00    	sub    $0x90,%rax
    392b:	48 8b 70 08          	mov    0x8(%rax),%rsi
    392f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3936:	48 2d 90 00 00 00    	sub    $0x90,%rax
    393c:	8b 40 18             	mov    0x18(%rax),%eax
    393f:	41 50                	push   %r8
    3941:	57                   	push   %rdi
    3942:	4d 89 d0             	mov    %r10,%r8
    3945:	89 c7                	mov    %eax,%edi
    3947:	e8 99 64 00 00       	call   9de5 <mk_procedure>
    394c:	48 83 c4 10          	add    $0x10,%rsp
    3950:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3957:	e9 57 0f 00 00       	jmp    48b3 <yyparse+0x1caa>
    395c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3963:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3969:	44 8b 50 2c          	mov    0x2c(%rax),%r10d
    396d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3974:	48 2d 90 00 00 00    	sub    $0x90,%rax
    397a:	44 8b 48 28          	mov    0x28(%rax),%r9d
    397e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3985:	48 2d 90 00 00 00    	sub    $0x90,%rax
    398b:	4c 8b 40 20          	mov    0x20(%rax),%r8
    398f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3996:	48 2d 90 00 00 00    	sub    $0x90,%rax
    399c:	8b 78 1c             	mov    0x1c(%rax),%edi
    399f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39a6:	48 8b 18             	mov    (%rax),%rbx
    39a9:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39b0:	48 83 e8 30          	sub    $0x30,%rax
    39b4:	4c 8b 18             	mov    (%rax),%r11
    39b7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39be:	48 83 e8 60          	sub    $0x60,%rax
    39c2:	48 8b 08             	mov    (%rax),%rcx
    39c5:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39cc:	48 2d 90 00 00 00    	sub    $0x90,%rax
    39d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    39d6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39dd:	48 2d 90 00 00 00    	sub    $0x90,%rax
    39e3:	48 8b 70 08          	mov    0x8(%rax),%rsi
    39e7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    39ee:	48 2d 90 00 00 00    	sub    $0x90,%rax
    39f4:	8b 40 18             	mov    0x18(%rax),%eax
    39f7:	41 52                	push   %r10
    39f9:	41 51                	push   %r9
    39fb:	41 50                	push   %r8
    39fd:	57                   	push   %rdi
    39fe:	49 89 d9             	mov    %rbx,%r9
    3a01:	4d 89 d8             	mov    %r11,%r8
    3a04:	89 c7                	mov    %eax,%edi
    3a06:	e8 a3 64 00 00       	call   9eae <mk_function>
    3a0b:	48 83 c4 20          	add    $0x20,%rsp
    3a0f:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3a16:	e9 98 0e 00 00       	jmp    48b3 <yyparse+0x1caa>
    3a1b:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3a22:	01 00 00
    3a25:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a2c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3a32:	48 8b 00             	mov    (%rax),%rax
    3a35:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3a3c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a43:	48 83 e8 30          	sub    $0x30,%rax
    3a47:	8b 00                	mov    (%rax),%eax
    3a49:	3d 11 01 00 00       	cmp    $0x111,%eax
    3a4e:	75 22                	jne    3a72 <yyparse+0xe69>
    3a50:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3a57:	ff ff ff
    3a5a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a61:	48 83 e8 30          	sub    $0x30,%rax
    3a65:	48 8b 40 08          	mov    0x8(%rax),%rax
    3a69:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3a70:	eb 1f                	jmp    3a91 <yyparse+0xe88>
    3a72:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a79:	48 83 e8 30          	sub    $0x30,%rax
    3a7d:	8b 40 04             	mov    0x4(%rax),%eax
    3a80:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3a86:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3a8d:	00 00 00 00
    3a91:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3a98:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3a9e:	48 8b 00             	mov    (%rax),%rax
    3aa1:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3aa8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3aaf:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3ab5:	8b 40 08             	mov    0x8(%rax),%eax
    3ab8:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3abe:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3ac5:	00 00 00
    3ac8:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3acf:	00 00 00
    3ad2:	e9 dc 0d 00 00       	jmp    48b3 <yyparse+0x1caa>
    3ad7:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3ade:	01 00 00
    3ae1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ae8:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3aee:	48 8b 00             	mov    (%rax),%rax
    3af1:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3af8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3aff:	48 83 e8 60          	sub    $0x60,%rax
    3b03:	8b 00                	mov    (%rax),%eax
    3b05:	3d 11 01 00 00       	cmp    $0x111,%eax
    3b0a:	75 22                	jne    3b2e <yyparse+0xf25>
    3b0c:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3b13:	ff ff ff
    3b16:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b1d:	48 83 e8 60          	sub    $0x60,%rax
    3b21:	48 8b 40 08          	mov    0x8(%rax),%rax
    3b25:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3b2c:	eb 1f                	jmp    3b4d <yyparse+0xf44>
    3b2e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b35:	48 83 e8 60          	sub    $0x60,%rax
    3b39:	8b 40 04             	mov    0x4(%rax),%eax
    3b3c:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3b42:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3b49:	00 00 00 00
    3b4d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b54:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3b5a:	48 8b 00             	mov    (%rax),%rax
    3b5d:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3b64:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3b6b:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3b71:	8b 40 08             	mov    0x8(%rax),%eax
    3b74:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3b7a:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3b81:	00 00 00
    3b84:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3b8b:	00 00 00
    3b8e:	e9 20 0d 00 00       	jmp    48b3 <yyparse+0x1caa>
    3b93:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3b9a:	01 00 00
    3b9d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ba4:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3baa:	48 8b 00             	mov    (%rax),%rax
    3bad:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3bb4:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3bbb:	48 83 e8 60          	sub    $0x60,%rax
    3bbf:	8b 00                	mov    (%rax),%eax
    3bc1:	3d 11 01 00 00       	cmp    $0x111,%eax
    3bc6:	75 22                	jne    3bea <yyparse+0xfe1>
    3bc8:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3bcf:	ff ff ff
    3bd2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3bd9:	48 83 e8 60          	sub    $0x60,%rax
    3bdd:	48 8b 40 08          	mov    0x8(%rax),%rax
    3be1:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3be8:	eb 1f                	jmp    3c09 <yyparse+0x1000>
    3bea:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3bf1:	48 83 e8 60          	sub    $0x60,%rax
    3bf5:	8b 40 04             	mov    0x4(%rax),%eax
    3bf8:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3bfe:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3c05:	00 00 00 00
    3c09:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c10:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3c16:	48 8b 00             	mov    (%rax),%rax
    3c19:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3c20:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c27:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3c2d:	8b 40 08             	mov    0x8(%rax),%eax
    3c30:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3c36:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3c3d:	00 00 00
    3c40:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3c47:	00 00 00
    3c4a:	e9 64 0c 00 00       	jmp    48b3 <yyparse+0x1caa>
    3c4f:	c7 85 f0 d8 ff ff 05 	movl   $0x105,-0x2710(%rbp)
    3c56:	01 00 00
    3c59:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c60:	48 2d f0 00 00 00    	sub    $0xf0,%rax
    3c66:	48 8b 00             	mov    (%rax),%rax
    3c69:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3c70:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c77:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3c7d:	8b 00                	mov    (%rax),%eax
    3c7f:	3d 11 01 00 00       	cmp    $0x111,%eax
    3c84:	75 24                	jne    3caa <yyparse+0x10a1>
    3c86:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3c8d:	ff ff ff
    3c90:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3c97:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3c9d:	48 8b 40 08          	mov    0x8(%rax),%rax
    3ca1:	48 89 85 10 d9 ff ff 	mov    %rax,-0x26f0(%rbp)
    3ca8:	eb 21                	jmp    3ccb <yyparse+0x10c2>
    3caa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3cb1:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3cb7:	8b 40 04             	mov    0x4(%rax),%eax
    3cba:	89 85 0c d9 ff ff    	mov    %eax,-0x26f4(%rbp)
    3cc0:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3cc7:	00 00 00 00
    3ccb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3cd2:	48 2d 20 01 00 00    	sub    $0x120,%rax
    3cd8:	48 8b 00             	mov    (%rax),%rax
    3cdb:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3ce2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ce9:	48 2d 20 01 00 00    	sub    $0x120,%rax
    3cef:	8b 40 08             	mov    0x8(%rax),%eax
    3cf2:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3cf8:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3cff:	00 00 00
    3d02:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3d09:	00 00 00
    3d0c:	e9 a2 0b 00 00       	jmp    48b3 <yyparse+0x1caa>
    3d11:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3d18:	01 00 00
    3d1b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d22:	48 83 e8 30          	sub    $0x30,%rax
    3d26:	48 8b 00             	mov    (%rax),%rax
    3d29:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3d30:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3d37:	ff ff ff
    3d3a:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3d41:	00 00 00 00
    3d45:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d4c:	48 83 e8 60          	sub    $0x60,%rax
    3d50:	48 8b 00             	mov    (%rax),%rax
    3d53:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3d5a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d61:	48 83 e8 60          	sub    $0x60,%rax
    3d65:	8b 40 08             	mov    0x8(%rax),%eax
    3d68:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3d6e:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3d75:	00 00 00
    3d78:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3d7f:	00 00 00
    3d82:	e9 2c 0b 00 00       	jmp    48b3 <yyparse+0x1caa>
    3d87:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3d8e:	01 00 00
    3d91:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3d98:	48 83 e8 60          	sub    $0x60,%rax
    3d9c:	48 8b 00             	mov    (%rax),%rax
    3d9f:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3da6:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3dad:	ff ff ff
    3db0:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3db7:	00 00 00 00
    3dbb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3dc2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3dc8:	48 8b 00             	mov    (%rax),%rax
    3dcb:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3dd2:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3dd9:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3ddf:	8b 40 08             	mov    0x8(%rax),%eax
    3de2:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3de8:	c7 85 18 d9 ff ff 00 	movl   $0x0,-0x26e8(%rbp)
    3def:	00 00 00
    3df2:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3df9:	00 00 00
    3dfc:	e9 b2 0a 00 00       	jmp    48b3 <yyparse+0x1caa>
    3e01:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3e08:	01 00 00
    3e0b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e12:	48 83 e8 60          	sub    $0x60,%rax
    3e16:	48 8b 00             	mov    (%rax),%rax
    3e19:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3e20:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3e27:	ff ff ff
    3e2a:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3e31:	00 00 00 00
    3e35:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e3c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3e42:	48 8b 00             	mov    (%rax),%rax
    3e45:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3e4c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e53:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3e59:	8b 40 08             	mov    0x8(%rax),%eax
    3e5c:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3e62:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3e69:	00 00 00
    3e6c:	c7 85 1c d9 ff ff 00 	movl   $0x0,-0x26e4(%rbp)
    3e73:	00 00 00
    3e76:	e9 38 0a 00 00       	jmp    48b3 <yyparse+0x1caa>
    3e7b:	c7 85 f0 d8 ff ff 04 	movl   $0x104,-0x2710(%rbp)
    3e82:	01 00 00
    3e85:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3e8c:	48 2d 90 00 00 00    	sub    $0x90,%rax
    3e92:	48 8b 00             	mov    (%rax),%rax
    3e95:	48 89 85 00 d9 ff ff 	mov    %rax,-0x2700(%rbp)
    3e9c:	c7 85 0c d9 ff ff ff 	movl   $0xffffffff,-0x26f4(%rbp)
    3ea3:	ff ff ff
    3ea6:	48 c7 85 10 d9 ff ff 	movq   $0x0,-0x26f0(%rbp)
    3ead:	00 00 00 00
    3eb1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3eb8:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3ebe:	48 8b 00             	mov    (%rax),%rax
    3ec1:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    3ec8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ecf:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    3ed5:	8b 40 08             	mov    0x8(%rax),%eax
    3ed8:	89 85 08 d9 ff ff    	mov    %eax,-0x26f8(%rbp)
    3ede:	c7 85 18 d9 ff ff 01 	movl   $0x1,-0x26e8(%rbp)
    3ee5:	00 00 00
    3ee8:	c7 85 1c d9 ff ff 01 	movl   $0x1,-0x26e4(%rbp)
    3eef:	00 00 00
    3ef2:	e9 bc 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3ef7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3efe:	48 83 e8 30          	sub    $0x30,%rax
    3f02:	48 8b 00             	mov    (%rax),%rax
    3f05:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3f0c:	e9 a2 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f11:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    3f18:	00 00 00 00
    3f1c:	e9 92 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f21:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f28:	48 8b 00             	mov    (%rax),%rax
    3f2b:	be 00 00 00 00       	mov    $0x0,%esi
    3f30:	48 89 c7             	mov    %rax,%rdi
    3f33:	e8 c3 42 00 00       	call   81fb <CreateListNode>
    3f38:	48 89 c2             	mov    %rax,%rdx
    3f3b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f42:	48 83 e8 60          	sub    $0x60,%rax
    3f46:	48 8b 00             	mov    (%rax),%rax
    3f49:	48 89 d6             	mov    %rdx,%rsi
    3f4c:	48 89 c7             	mov    %rax,%rdi
    3f4f:	e8 73 43 00 00       	call   82c7 <PushListNodeBack>
    3f54:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3f5b:	e9 53 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f60:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f67:	48 8b 00             	mov    (%rax),%rax
    3f6a:	be 00 00 00 00       	mov    $0x0,%esi
    3f6f:	48 89 c7             	mov    %rax,%rdi
    3f72:	e8 84 42 00 00       	call   81fb <CreateListNode>
    3f77:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    3f7e:	e9 30 09 00 00       	jmp    48b3 <yyparse+0x1caa>
    3f83:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f8a:	8b 00                	mov    (%rax),%eax
    3f8c:	3d 13 01 00 00       	cmp    $0x113,%eax
    3f91:	75 4d                	jne    3fe0 <yyparse+0x13d7>
    3f93:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3f9a:	8b 78 14             	mov    0x14(%rax),%edi
    3f9d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fa4:	8b 48 10             	mov    0x10(%rax),%ecx
    3fa7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fae:	8b 50 04             	mov    0x4(%rax),%edx
    3fb1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fb8:	48 83 e8 60          	sub    $0x60,%rax
    3fbc:	48 8b 30             	mov    (%rax),%rsi
    3fbf:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fc6:	48 83 e8 60          	sub    $0x60,%rax
    3fca:	8b 40 08             	mov    0x8(%rax),%eax
    3fcd:	41 89 f8             	mov    %edi,%r8d
    3fd0:	89 c7                	mov    %eax,%edi
    3fd2:	e8 11 60 00 00       	call   9fe8 <mk_arraydecl>
    3fd7:	48 89 85 a0 d8 ff ff 	mov    %rax,-0x2760(%rbp)
    3fde:	eb 45                	jmp    4025 <yyparse+0x141c>
    3fe0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3fe7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3feb:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ff2:	8b 50 04             	mov    0x4(%rax),%edx
    3ff5:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    3ffc:	48 83 e8 60          	sub    $0x60,%rax
    4000:	48 8b 30             	mov    (%rax),%rsi
    4003:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    400a:	48 83 e8 60          	sub    $0x60,%rax
    400e:	8b 40 08             	mov    0x8(%rax),%eax
    4011:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    4017:	89 c7                	mov    %eax,%edi
    4019:	e8 58 5f 00 00       	call   9f76 <mk_vardecl>
    401e:	48 89 85 a0 d8 ff ff 	mov    %rax,-0x2760(%rbp)
    4025:	48 8b 85 a0 d8 ff ff 	mov    -0x2760(%rbp),%rax
    402c:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4033:	e9 7b 08 00 00       	jmp    48b3 <yyparse+0x1caa>
    4038:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    403f:	8b 00                	mov    (%rax),%eax
    4041:	3d 13 01 00 00       	cmp    $0x113,%eax
    4046:	75 4d                	jne    4095 <yyparse+0x148c>
    4048:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    404f:	8b 78 14             	mov    0x14(%rax),%edi
    4052:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4059:	8b 48 10             	mov    0x10(%rax),%ecx
    405c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4063:	8b 50 04             	mov    0x4(%rax),%edx
    4066:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    406d:	48 83 e8 60          	sub    $0x60,%rax
    4071:	48 8b 30             	mov    (%rax),%rsi
    4074:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    407b:	48 83 e8 60          	sub    $0x60,%rax
    407f:	8b 40 08             	mov    0x8(%rax),%eax
    4082:	41 89 f8             	mov    %edi,%r8d
    4085:	89 c7                	mov    %eax,%edi
    4087:	e8 5c 5f 00 00       	call   9fe8 <mk_arraydecl>
    408c:	48 89 85 a8 d8 ff ff 	mov    %rax,-0x2758(%rbp)
    4093:	eb 45                	jmp    40da <yyparse+0x14d1>
    4095:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    409c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    40a0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40a7:	8b 50 04             	mov    0x4(%rax),%edx
    40aa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40b1:	48 83 e8 60          	sub    $0x60,%rax
    40b5:	48 8b 30             	mov    (%rax),%rsi
    40b8:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40bf:	48 83 e8 60          	sub    $0x60,%rax
    40c3:	8b 40 08             	mov    0x8(%rax),%eax
    40c6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    40cc:	89 c7                	mov    %eax,%edi
    40ce:	e8 a3 5e 00 00       	call   9f76 <mk_vardecl>
    40d3:	48 89 85 a8 d8 ff ff 	mov    %rax,-0x2758(%rbp)
    40da:	48 8b 85 a8 d8 ff ff 	mov    -0x2758(%rbp),%rax
    40e1:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    40e8:	e9 c6 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    40ed:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    40f4:	48 83 e8 30          	sub    $0x30,%rax
    40f8:	48 8b 10             	mov    (%rax),%rdx
    40fb:	8b 05 2f df 01 00    	mov    0x1df2f(%rip),%eax        # 22030 <line_num>
    4101:	48 89 d6             	mov    %rdx,%rsi
    4104:	89 c7                	mov    %eax,%edi
    4106:	e8 fa 5f 00 00       	call   a105 <mk_compoundstatement>
    410b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4112:	e9 9c 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    4117:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    411e:	48 8b 10             	mov    (%rax),%rdx
    4121:	8b 05 09 df 01 00    	mov    0x1df09(%rip),%eax        # 22030 <line_num>
    4127:	48 89 d6             	mov    %rdx,%rsi
    412a:	89 c7                	mov    %eax,%edi
    412c:	e8 bd 61 00 00       	call   a2ee <mk_asmblock>
    4131:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4138:	e9 76 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    413d:	48 c7 85 f0 d8 ff ff 	movq   $0x0,-0x2710(%rbp)
    4144:	00 00 00 00
    4148:	e9 66 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    414d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4154:	48 8b 00             	mov    (%rax),%rax
    4157:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    415e:	e9 50 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    4163:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    416a:	48 83 e8 30          	sub    $0x30,%rax
    416e:	48 8b 00             	mov    (%rax),%rax
    4171:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4178:	e9 36 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    417d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4184:	48 8b 00             	mov    (%rax),%rax
    4187:	be 01 00 00 00       	mov    $0x1,%esi
    418c:	48 89 c7             	mov    %rax,%rdi
    418f:	e8 67 40 00 00       	call   81fb <CreateListNode>
    4194:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    419b:	e9 13 07 00 00       	jmp    48b3 <yyparse+0x1caa>
    41a0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41a7:	48 8b 00             	mov    (%rax),%rax
    41aa:	be 01 00 00 00       	mov    $0x1,%esi
    41af:	48 89 c7             	mov    %rax,%rdi
    41b2:	e8 44 40 00 00       	call   81fb <CreateListNode>
    41b7:	48 89 c2             	mov    %rax,%rdx
    41ba:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41c1:	48 83 e8 60          	sub    $0x60,%rax
    41c5:	48 8b 00             	mov    (%rax),%rax
    41c8:	48 89 d6             	mov    %rdx,%rsi
    41cb:	48 89 c7             	mov    %rax,%rdi
    41ce:	e8 f4 40 00 00       	call   82c7 <PushListNodeBack>
    41d3:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    41da:	e9 d4 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    41df:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41e6:	48 8b 00             	mov    (%rax),%rax
    41e9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    41f0:	e9 be 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    41f5:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    41fc:	48 8b 00             	mov    (%rax),%rax
    41ff:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4206:	e9 a8 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    420b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4212:	48 8b 00             	mov    (%rax),%rax
    4215:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    421c:	e9 92 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    4221:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4228:	48 8b 00             	mov    (%rax),%rax
    422b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4232:	e9 7c 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    4237:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    423e:	48 8b 10             	mov    (%rax),%rdx
    4241:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4248:	48 83 e8 60          	sub    $0x60,%rax
    424c:	48 8b 08             	mov    (%rax),%rcx
    424f:	8b 05 db dd 01 00    	mov    0x1dddb(%rip),%eax        # 22030 <line_num>
    4255:	48 89 ce             	mov    %rcx,%rsi
    4258:	89 c7                	mov    %eax,%edi
    425a:	e8 54 5f 00 00       	call   a1b3 <mk_while>
    425f:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4266:	e9 48 06 00 00       	jmp    48b3 <yyparse+0x1caa>
    426b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4272:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    4278:	8b 00                	mov    (%rax),%eax
    427a:	3d 38 01 00 00       	cmp    $0x138,%eax
    427f:	75 42                	jne    42c3 <yyparse+0x16ba>
    4281:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4288:	48 8b 08             	mov    (%rax),%rcx
    428b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4292:	48 83 e8 60          	sub    $0x60,%rax
    4296:	48 8b 10             	mov    (%rax),%rdx
    4299:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42a0:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    42a6:	48 8b 70 08          	mov    0x8(%rax),%rsi
    42aa:	8b 05 80 dd 01 00    	mov    0x1dd80(%rip),%eax        # 22030 <line_num>
    42b0:	89 c7                	mov    %eax,%edi
    42b2:	e8 53 5f 00 00       	call   a20a <mk_forassign>
    42b7:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    42be:	e9 f0 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    42c3:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42ca:	48 8b 08             	mov    (%rax),%rcx
    42cd:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42d4:	48 83 e8 60          	sub    $0x60,%rax
    42d8:	48 8b 10             	mov    (%rax),%rdx
    42db:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    42e2:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    42e8:	48 8b 70 08          	mov    0x8(%rax),%rsi
    42ec:	8b 05 3e dd 01 00    	mov    0x1dd3e(%rip),%eax        # 22030 <line_num>
    42f2:	89 c7                	mov    %eax,%edi
    42f4:	e8 83 5f 00 00       	call   a27c <mk_forvar>
    42f9:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4300:	e9 ae 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    4305:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    430c:	48 8b 10             	mov    (%rax),%rdx
    430f:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4316:	48 83 e8 60          	sub    $0x60,%rax
    431a:	48 8b 30             	mov    (%rax),%rsi
    431d:	8b 05 0d dd 01 00    	mov    0x1dd0d(%rip),%eax        # 22030 <line_num>
    4323:	b9 00 00 00 00       	mov    $0x0,%ecx
    4328:	89 c7                	mov    %eax,%edi
    432a:	e8 1d 5e 00 00       	call   a14c <mk_ifthen>
    432f:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4336:	e9 78 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    433b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4342:	48 8b 08             	mov    (%rax),%rcx
    4345:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    434c:	48 83 e8 60          	sub    $0x60,%rax
    4350:	48 8b 10             	mov    (%rax),%rdx
    4353:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    435a:	48 2d c0 00 00 00    	sub    $0xc0,%rax
    4360:	48 8b 30             	mov    (%rax),%rsi
    4363:	8b 05 c7 dc 01 00    	mov    0x1dcc7(%rip),%eax        # 22030 <line_num>
    4369:	89 c7                	mov    %eax,%edi
    436b:	e8 dc 5d 00 00       	call   a14c <mk_ifthen>
    4370:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4377:	e9 37 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    437c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4383:	48 8b 10             	mov    (%rax),%rdx
    4386:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    438d:	48 83 e8 60          	sub    $0x60,%rax
    4391:	48 8b 08             	mov    (%rax),%rcx
    4394:	8b 05 96 dc 01 00    	mov    0x1dc96(%rip),%eax        # 22030 <line_num>
    439a:	48 89 ce             	mov    %rcx,%rsi
    439d:	89 c7                	mov    %eax,%edi
    439f:	e8 b3 5c 00 00       	call   a057 <mk_varassign>
    43a4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    43ab:	e9 03 05 00 00       	jmp    48b3 <yyparse+0x1caa>
    43b0:	c7 85 f0 d8 ff ff 38 	movl   $0x138,-0x2710(%rbp)
    43b7:	01 00 00
    43ba:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    43c1:	48 8b 00             	mov    (%rax),%rax
    43c4:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    43cb:	e9 e3 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    43d0:	c7 85 f0 d8 ff ff 39 	movl   $0x139,-0x2710(%rbp)
    43d7:	01 00 00
    43da:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    43e1:	48 8b 00             	mov    (%rax),%rax
    43e4:	48 89 85 f8 d8 ff ff 	mov    %rax,-0x2708(%rbp)
    43eb:	e9 c3 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    43f0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    43f7:	48 8b 10             	mov    (%rax),%rdx
    43fa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4401:	8b 40 08             	mov    0x8(%rax),%eax
    4404:	48 89 d6             	mov    %rdx,%rsi
    4407:	89 c7                	mov    %eax,%edi
    4409:	e8 9a 60 00 00       	call   a4a8 <mk_varid>
    440e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4415:	e9 99 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    441a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4421:	48 83 e8 30          	sub    $0x30,%rax
    4425:	48 8b 10             	mov    (%rax),%rdx
    4428:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    442f:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4435:	48 8b 08             	mov    (%rax),%rcx
    4438:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    443f:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4445:	8b 40 08             	mov    0x8(%rax),%eax
    4448:	48 89 ce             	mov    %rcx,%rsi
    444b:	89 c7                	mov    %eax,%edi
    444d:	e8 9d 60 00 00       	call   a4ef <mk_arrayaccess>
    4452:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4459:	e9 55 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    445e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4465:	48 8b 08             	mov    (%rax),%rcx
    4468:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    446f:	8b 40 08             	mov    0x8(%rax),%eax
    4472:	ba 00 00 00 00       	mov    $0x0,%edx
    4477:	48 89 ce             	mov    %rcx,%rsi
    447a:	89 c7                	mov    %eax,%edi
    447c:	e8 2d 5c 00 00       	call   a0ae <mk_procedurecall>
    4481:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4488:	e9 26 04 00 00       	jmp    48b3 <yyparse+0x1caa>
    448d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4494:	48 83 e8 30          	sub    $0x30,%rax
    4498:	48 8b 10             	mov    (%rax),%rdx
    449b:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44a2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    44a8:	48 8b 08             	mov    (%rax),%rcx
    44ab:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44b2:	48 2d 90 00 00 00    	sub    $0x90,%rax
    44b8:	8b 40 08             	mov    0x8(%rax),%eax
    44bb:	48 89 ce             	mov    %rcx,%rsi
    44be:	89 c7                	mov    %eax,%edi
    44c0:	e8 e9 5b 00 00       	call   a0ae <mk_procedurecall>
    44c5:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    44cc:	e9 e2 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    44d1:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44d8:	48 8b 08             	mov    (%rax),%rcx
    44db:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    44e2:	48 83 e8 60          	sub    $0x60,%rax
    44e6:	48 8b 10             	mov    (%rax),%rdx
    44e9:	8b 05 41 db 01 00    	mov    0x1db41(%rip),%eax        # 22030 <line_num>
    44ef:	be 30 01 00 00       	mov    $0x130,%esi
    44f4:	89 c7                	mov    %eax,%edi
    44f6:	e8 3a 5e 00 00       	call   a335 <mk_relop>
    44fb:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4502:	e9 ac 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4507:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    450e:	48 8b 00             	mov    (%rax),%rax
    4511:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4518:	e9 96 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    451d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4524:	48 8b 08             	mov    (%rax),%rcx
    4527:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    452e:	48 83 e8 60          	sub    $0x60,%rax
    4532:	48 8b 10             	mov    (%rax),%rdx
    4535:	8b 05 f5 da 01 00    	mov    0x1daf5(%rip),%eax        # 22030 <line_num>
    453b:	be 34 01 00 00       	mov    $0x134,%esi
    4540:	89 c7                	mov    %eax,%edi
    4542:	e8 ee 5d 00 00       	call   a335 <mk_relop>
    4547:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    454e:	e9 60 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4553:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    455a:	48 8b 00             	mov    (%rax),%rax
    455d:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4564:	e9 4a 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4569:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4570:	48 8b 10             	mov    (%rax),%rdx
    4573:	8b 05 b7 da 01 00    	mov    0x1dab7(%rip),%eax        # 22030 <line_num>
    4579:	b9 00 00 00 00       	mov    $0x0,%ecx
    457e:	be 20 01 00 00       	mov    $0x120,%esi
    4583:	89 c7                	mov    %eax,%edi
    4585:	e8 ab 5d 00 00       	call   a335 <mk_relop>
    458a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4591:	e9 1d 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    4596:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    459d:	48 8b 00             	mov    (%rax),%rax
    45a0:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    45a7:	e9 07 03 00 00       	jmp    48b3 <yyparse+0x1caa>
    45ac:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45b3:	48 83 e8 30          	sub    $0x30,%rax
    45b7:	48 8b 00             	mov    (%rax),%rax
    45ba:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    45c1:	e9 ed 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    45c6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45cd:	48 8b 00             	mov    (%rax),%rax
    45d0:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    45d7:	e9 d7 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    45dc:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45e3:	48 8b 08             	mov    (%rax),%rcx
    45e6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45ed:	48 83 e8 60          	sub    $0x60,%rax
    45f1:	48 8b 10             	mov    (%rax),%rdx
    45f4:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    45fb:	48 83 e8 30          	sub    $0x30,%rax
    45ff:	8b 30                	mov    (%rax),%esi
    4601:	8b 05 29 da 01 00    	mov    0x1da29(%rip),%eax        # 22030 <line_num>
    4607:	89 c7                	mov    %eax,%edi
    4609:	e8 27 5d 00 00       	call   a335 <mk_relop>
    460e:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4615:	e9 99 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    461a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4621:	48 8b 00             	mov    (%rax),%rax
    4624:	be 02 00 00 00       	mov    $0x2,%esi
    4629:	48 89 c7             	mov    %rax,%rdi
    462c:	e8 ca 3b 00 00       	call   81fb <CreateListNode>
    4631:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4638:	e9 76 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    463d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4644:	48 8b 00             	mov    (%rax),%rax
    4647:	be 02 00 00 00       	mov    $0x2,%esi
    464c:	48 89 c7             	mov    %rax,%rdi
    464f:	e8 a7 3b 00 00       	call   81fb <CreateListNode>
    4654:	48 89 c2             	mov    %rax,%rdx
    4657:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    465e:	48 83 e8 60          	sub    $0x60,%rax
    4662:	48 8b 00             	mov    (%rax),%rax
    4665:	48 89 d6             	mov    %rdx,%rsi
    4668:	48 89 c7             	mov    %rax,%rdi
    466b:	e8 57 3c 00 00       	call   82c7 <PushListNodeBack>
    4670:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4677:	e9 37 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    467c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4683:	48 8b 00             	mov    (%rax),%rax
    4686:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    468d:	e9 21 02 00 00       	jmp    48b3 <yyparse+0x1caa>
    4692:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4699:	48 8b 08             	mov    (%rax),%rcx
    469c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46a3:	48 83 e8 60          	sub    $0x60,%rax
    46a7:	48 8b 10             	mov    (%rax),%rdx
    46aa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46b1:	48 83 e8 30          	sub    $0x30,%rax
    46b5:	8b 30                	mov    (%rax),%esi
    46b7:	8b 05 73 d9 01 00    	mov    0x1d973(%rip),%eax        # 22030 <line_num>
    46bd:	89 c7                	mov    %eax,%edi
    46bf:	e8 1c 5d 00 00       	call   a3e0 <mk_addop>
    46c4:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    46cb:	e9 e3 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    46d0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46d7:	48 8b 00             	mov    (%rax),%rax
    46da:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    46e1:	e9 cd 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    46e6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46ed:	48 8b 08             	mov    (%rax),%rcx
    46f0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    46f7:	48 83 e8 60          	sub    $0x60,%rax
    46fb:	48 8b 10             	mov    (%rax),%rdx
    46fe:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4705:	48 83 e8 30          	sub    $0x30,%rax
    4709:	8b 30                	mov    (%rax),%esi
    470b:	8b 05 1f d9 01 00    	mov    0x1d91f(%rip),%eax        # 22030 <line_num>
    4711:	89 c7                	mov    %eax,%edi
    4713:	e8 2c 5d 00 00       	call   a444 <mk_mulop>
    4718:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    471f:	e9 8f 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    4724:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    472b:	48 8b 10             	mov    (%rax),%rdx
    472e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4735:	8b 40 08             	mov    0x8(%rax),%eax
    4738:	48 89 d6             	mov    %rdx,%rsi
    473b:	89 c7                	mov    %eax,%edi
    473d:	e8 66 5d 00 00       	call   a4a8 <mk_varid>
    4742:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4749:	e9 65 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    474e:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4755:	48 83 e8 30          	sub    $0x30,%rax
    4759:	48 8b 10             	mov    (%rax),%rdx
    475c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4763:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4769:	48 8b 08             	mov    (%rax),%rcx
    476c:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4773:	48 2d 90 00 00 00    	sub    $0x90,%rax
    4779:	8b 40 08             	mov    0x8(%rax),%eax
    477c:	48 89 ce             	mov    %rcx,%rsi
    477f:	89 c7                	mov    %eax,%edi
    4781:	e8 69 5d 00 00       	call   a4ef <mk_arrayaccess>
    4786:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    478d:	e9 21 01 00 00       	jmp    48b3 <yyparse+0x1caa>
    4792:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4799:	48 83 e8 30          	sub    $0x30,%rax
    479d:	48 8b 10             	mov    (%rax),%rdx
    47a0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    47a7:	48 2d 90 00 00 00    	sub    $0x90,%rax
    47ad:	48 8b 08             	mov    (%rax),%rcx
    47b0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    47b7:	48 2d 90 00 00 00    	sub    $0x90,%rax
    47bd:	8b 40 08             	mov    0x8(%rax),%eax
    47c0:	48 89 ce             	mov    %rcx,%rsi
    47c3:	89 c7                	mov    %eax,%edi
    47c5:	e8 7c 5d 00 00       	call   a546 <mk_functioncall>
    47ca:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    47d1:	e9 dd 00 00 00       	jmp    48b3 <yyparse+0x1caa>
    47d6:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    47dd:	8b 10                	mov    (%rax),%edx
    47df:	8b 05 4b d8 01 00    	mov    0x1d84b(%rip),%eax        # 22030 <line_num>
    47e5:	89 d6                	mov    %edx,%esi
    47e7:	89 c7                	mov    %eax,%edi
    47e9:	e8 af 5d 00 00       	call   a59d <mk_inum>
    47ee:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    47f5:	e9 b9 00 00 00       	jmp    48b3 <yyparse+0x1caa>
    47fa:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4801:	8b 10                	mov    (%rax),%edx
    4803:	8b 05 27 d8 01 00    	mov    0x1d827(%rip),%eax        # 22030 <line_num>
    4809:	66 0f 6e c2          	movd   %edx,%xmm0
    480d:	89 c7                	mov    %eax,%edi
    480f:	e8 3f 5e 00 00       	call   a653 <mk_rnum>
    4814:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    481b:	e9 93 00 00 00       	jmp    48b3 <yyparse+0x1caa>
    4820:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4827:	48 8b 10             	mov    (%rax),%rdx
    482a:	8b 05 00 d8 01 00    	mov    0x1d800(%rip),%eax        # 22030 <line_num>
    4830:	48 89 d6             	mov    %rdx,%rsi
    4833:	89 c7                	mov    %eax,%edi
    4835:	e8 a7 5d 00 00       	call   a5e1 <mk_string>
    483a:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4841:	eb 70                	jmp    48b3 <yyparse+0x1caa>
    4843:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    484a:	48 83 e8 30          	sub    $0x30,%rax
    484e:	8b 00                	mov    (%rax),%eax
    4850:	3d 2f 01 00 00       	cmp    $0x12f,%eax
    4855:	75 23                	jne    487a <yyparse+0x1c71>
    4857:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    485e:	48 8b 10             	mov    (%rax),%rdx
    4861:	8b 05 c9 d7 01 00    	mov    0x1d7c9(%rip),%eax        # 22030 <line_num>
    4867:	48 89 d6             	mov    %rdx,%rsi
    486a:	89 c7                	mov    %eax,%edi
    486c:	e8 28 5b 00 00       	call   a399 <mk_signterm>
    4871:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    4878:	eb 39                	jmp    48b3 <yyparse+0x1caa>
    487a:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4881:	48 8b 00             	mov    (%rax),%rax
    4884:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    488b:	eb 26                	jmp    48b3 <yyparse+0x1caa>
    488d:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4894:	48 83 e8 30          	sub    $0x30,%rax
    4898:	48 8b 00             	mov    (%rax),%rax
    489b:	48 89 85 f0 d8 ff ff 	mov    %rax,-0x2710(%rbp)
    48a2:	eb 0f                	jmp    48b3 <yyparse+0x1caa>
    48a4:	8b 05 f6 d7 01 00    	mov    0x1d7f6(%rip),%eax        # 220a0 <yylval>
    48aa:	89 85 f0 d8 ff ff    	mov    %eax,-0x2710(%rbp)
    48b0:	eb 01                	jmp    48b3 <yyparse+0x1caa>
    48b2:	90                   	nop
    48b3:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    48b9:	48 63 d0             	movslq %eax,%rdx
    48bc:	48 89 d0             	mov    %rdx,%rax
    48bf:	48 01 c0             	add    %rax,%rax
    48c2:	48 01 d0             	add    %rdx,%rax
    48c5:	48 c1 e0 04          	shl    $0x4,%rax
    48c9:	48 f7 d8             	neg    %rax
    48cc:	48 01 85 88 d8 ff ff 	add    %rax,-0x2778(%rbp)
    48d3:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    48d9:	48 98                	cltq
    48db:	48 f7 d8             	neg    %rax
    48de:	48 01 85 78 d8 ff ff 	add    %rax,-0x2788(%rbp)
    48e5:	c7 85 48 d8 ff ff 00 	movl   $0x0,-0x27b8(%rbp)
    48ec:	00 00 00
    48ef:	48 83 85 88 d8 ff ff 	addq   $0x30,-0x2778(%rbp)
    48f6:	30
    48f7:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    48fe:	48 8b 8d f0 d8 ff ff 	mov    -0x2710(%rbp),%rcx
    4905:	48 8b 9d f8 d8 ff ff 	mov    -0x2708(%rbp),%rbx
    490c:	48 89 08             	mov    %rcx,(%rax)
    490f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    4913:	48 8b 8d 00 d9 ff ff 	mov    -0x2700(%rbp),%rcx
    491a:	48 8b 9d 08 d9 ff ff 	mov    -0x26f8(%rbp),%rbx
    4921:	48 89 48 10          	mov    %rcx,0x10(%rax)
    4925:	48 89 58 18          	mov    %rbx,0x18(%rax)
    4929:	48 8b 8d 10 d9 ff ff 	mov    -0x26f0(%rbp),%rcx
    4930:	48 8b 9d 18 d9 ff ff 	mov    -0x26e8(%rbp),%rbx
    4937:	48 89 48 20          	mov    %rcx,0x20(%rax)
    493b:	48 89 58 28          	mov    %rbx,0x28(%rax)
    493f:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4945:	48 98                	cltq
    4947:	48 8d 15 72 43 01 00 	lea    0x14372(%rip),%rdx        # 18cc0 <yyr1>
    494e:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4952:	0f be c0             	movsbl %al,%eax
    4955:	83 e8 46             	sub    $0x46,%eax
    4958:	89 85 50 d8 ff ff    	mov    %eax,-0x27b0(%rbp)
    495e:	8b 85 50 d8 ff ff    	mov    -0x27b0(%rbp),%eax
    4964:	48 98                	cltq
    4966:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    496a:	48 8d 05 8f 3e 01 00 	lea    0x13e8f(%rip),%rax        # 18800 <yypgoto>
    4971:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4975:	0f bf d0             	movswl %ax,%edx
    4978:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    497f:	0f b6 00             	movzbl (%rax),%eax
    4982:	0f b6 c0             	movzbl %al,%eax
    4985:	01 d0                	add    %edx,%eax
    4987:	89 85 54 d8 ff ff    	mov    %eax,-0x27ac(%rbp)
    498d:	83 bd 54 d8 ff ff 00 	cmpl   $0x0,-0x27ac(%rbp)
    4994:	78 51                	js     49e7 <yyparse+0x1dde>
    4996:	81 bd 54 d8 ff ff c9 	cmpl   $0xc9,-0x27ac(%rbp)
    499d:	00 00 00
    49a0:	7f 45                	jg     49e7 <yyparse+0x1dde>
    49a2:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    49a8:	48 98                	cltq
    49aa:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    49ae:	48 8d 05 8b 40 01 00 	lea    0x1408b(%rip),%rax        # 18a40 <yycheck>
    49b5:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    49b9:	0f bf d0             	movswl %ax,%edx
    49bc:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    49c3:	0f b6 00             	movzbl (%rax),%eax
    49c6:	0f b6 c0             	movzbl %al,%eax
    49c9:	39 c2                	cmp    %eax,%edx
    49cb:	75 1a                	jne    49e7 <yyparse+0x1dde>
    49cd:	8b 85 54 d8 ff ff    	mov    -0x27ac(%rbp),%eax
    49d3:	48 98                	cltq
    49d5:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    49d9:	48 8d 05 c0 3e 01 00 	lea    0x13ec0(%rip),%rax        # 188a0 <yytable>
    49e0:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    49e4:	98                   	cwtl
    49e5:	eb 16                	jmp    49fd <yyparse+0x1df4>
    49e7:	8b 85 50 d8 ff ff    	mov    -0x27b0(%rbp),%eax
    49ed:	48 98                	cltq
    49ef:	48 8d 15 6a 3e 01 00 	lea    0x13e6a(%rip),%rdx        # 18860 <yydefgoto>
    49f6:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    49fa:	0f b6 c0             	movzbl %al,%eax
    49fd:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    4a03:	e9 c8 e2 ff ff       	jmp    2cd0 <yyparse+0xc7>
    4a08:	90                   	nop
    4a09:	8b 05 71 d6 01 00    	mov    0x1d671(%rip),%eax        # 22080 <yychar>
    4a0f:	83 f8 fe             	cmp    $0xfffffffe,%eax
    4a12:	74 36                	je     4a4a <yyparse+0x1e41>
    4a14:	8b 05 66 d6 01 00    	mov    0x1d666(%rip),%eax        # 22080 <yychar>
    4a1a:	85 c0                	test   %eax,%eax
    4a1c:	78 25                	js     4a43 <yyparse+0x1e3a>
    4a1e:	8b 05 5c d6 01 00    	mov    0x1d65c(%rip),%eax        # 22080 <yychar>
    4a24:	3d 3c 01 00 00       	cmp    $0x13c,%eax
    4a29:	7f 18                	jg     4a43 <yyparse+0x1e3a>
    4a2b:	8b 05 4f d6 01 00    	mov    0x1d64f(%rip),%eax        # 22080 <yychar>
    4a31:	48 98                	cltq
    4a33:	48 8d 15 e6 35 01 00 	lea    0x135e6(%rip),%rdx        # 18020 <yytranslate>
    4a3a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4a3e:	0f be c0             	movsbl %al,%eax
    4a41:	eb 0c                	jmp    4a4f <yyparse+0x1e46>
    4a43:	b8 02 00 00 00       	mov    $0x2,%eax
    4a48:	eb 05                	jmp    4a4f <yyparse+0x1e46>
    4a4a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    4a4f:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    4a55:	83 bd 38 d8 ff ff 00 	cmpl   $0x0,-0x27c8(%rbp)
    4a5c:	0f 85 3f 01 00 00    	jne    4ba1 <yyparse+0x1f98>
    4a62:	8b 05 68 d6 01 00    	mov    0x1d668(%rip),%eax        # 220d0 <yynerrs>
    4a68:	83 c0 01             	add    $0x1,%eax
    4a6b:	89 05 5f d6 01 00    	mov    %eax,0x1d65f(%rip)        # 220d0 <yynerrs>
    4a71:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4a78:	48 89 85 e0 d8 ff ff 	mov    %rax,-0x2720(%rbp)
    4a7f:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    4a85:	89 85 e8 d8 ff ff    	mov    %eax,-0x2718(%rbp)
    4a8b:	48 8d 05 0f 43 01 00 	lea    0x1430f(%rip),%rax        # 18da1 <yyr2+0x61>
    4a92:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    4a99:	48 8d 95 e0 d8 ff ff 	lea    -0x2720(%rbp),%rdx
    4aa0:	48 8d 8d 58 d8 ff ff 	lea    -0x27a8(%rbp),%rcx
    4aa7:	48 8d 85 60 d8 ff ff 	lea    -0x27a0(%rbp),%rax
    4aae:	48 89 ce             	mov    %rcx,%rsi
    4ab1:	48 89 c7             	mov    %rax,%rdi
    4ab4:	e8 cd de ff ff       	call   2986 <yysyntax_error>
    4ab9:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    4abf:	83 bd 4c d8 ff ff 00 	cmpl   $0x0,-0x27b4(%rbp)
    4ac6:	75 13                	jne    4adb <yyparse+0x1ed2>
    4ac8:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4acf:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    4ad6:	e9 aa 00 00 00       	jmp    4b85 <yyparse+0x1f7c>
    4adb:	83 bd 4c d8 ff ff ff 	cmpl   $0xffffffff,-0x27b4(%rbp)
    4ae2:	0f 85 9d 00 00 00    	jne    4b85 <yyparse+0x1f7c>
    4ae8:	48 8b 95 58 d8 ff ff 	mov    -0x27a8(%rbp),%rdx
    4aef:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4af6:	48 39 c2             	cmp    %rax,%rdx
    4af9:	74 0f                	je     4b0a <yyparse+0x1f01>
    4afb:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4b02:	48 89 c7             	mov    %rax,%rdi
    4b05:	e8 e6 d7 ff ff       	call   22f0 <free@plt>
    4b0a:	48 8b 85 60 d8 ff ff 	mov    -0x27a0(%rbp),%rax
    4b11:	48 89 c7             	mov    %rax,%rdi
    4b14:	e8 b7 d9 ff ff       	call   24d0 <malloc@plt>
    4b19:	48 89 85 58 d8 ff ff 	mov    %rax,-0x27a8(%rbp)
    4b20:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4b27:	48 85 c0             	test   %rax,%rax
    4b2a:	74 36                	je     4b62 <yyparse+0x1f59>
    4b2c:	48 8d 95 e0 d8 ff ff 	lea    -0x2720(%rbp),%rdx
    4b33:	48 8d 8d 58 d8 ff ff 	lea    -0x27a8(%rbp),%rcx
    4b3a:	48 8d 85 60 d8 ff ff 	lea    -0x27a0(%rbp),%rax
    4b41:	48 89 ce             	mov    %rcx,%rsi
    4b44:	48 89 c7             	mov    %rax,%rdi
    4b47:	e8 3a de ff ff       	call   2986 <yysyntax_error>
    4b4c:	89 85 4c d8 ff ff    	mov    %eax,-0x27b4(%rbp)
    4b52:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4b59:	48 89 85 b0 d8 ff ff 	mov    %rax,-0x2750(%rbp)
    4b60:	eb 23                	jmp    4b85 <yyparse+0x1f7c>
    4b62:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4b69:	48 89 85 58 d8 ff ff 	mov    %rax,-0x27a8(%rbp)
    4b70:	48 c7 85 60 d8 ff ff 	movq   $0x80,-0x27a0(%rbp)
    4b77:	80 00 00 00
    4b7b:	c7 85 4c d8 ff ff fe 	movl   $0xfffffffe,-0x27b4(%rbp)
    4b82:	ff ff ff
    4b85:	48 8b 85 b0 d8 ff ff 	mov    -0x2750(%rbp),%rax
    4b8c:	48 89 c7             	mov    %rax,%rdi
    4b8f:	e8 40 03 00 00       	call   4ed4 <yyerror>
    4b94:	83 bd 4c d8 ff ff fe 	cmpl   $0xfffffffe,-0x27b4(%rbp)
    4b9b:	0f 84 cb 01 00 00    	je     4d6c <yyparse+0x2163>
    4ba1:	83 bd 38 d8 ff ff 03 	cmpl   $0x3,-0x27c8(%rbp)
    4ba8:	75 41                	jne    4beb <yyparse+0x1fe2>
    4baa:	8b 05 d0 d4 01 00    	mov    0x1d4d0(%rip),%eax        # 22080 <yychar>
    4bb0:	85 c0                	test   %eax,%eax
    4bb2:	7f 0f                	jg     4bc3 <yyparse+0x1fba>
    4bb4:	8b 05 c6 d4 01 00    	mov    0x1d4c6(%rip),%eax        # 22080 <yychar>
    4bba:	85 c0                	test   %eax,%eax
    4bbc:	75 2d                	jne    4beb <yyparse+0x1fe2>
    4bbe:	e9 97 01 00 00       	jmp    4d5a <yyparse+0x2151>
    4bc3:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    4bc9:	48 8d 15 d0 d4 01 00 	lea    0x1d4d0(%rip),%rdx        # 220a0 <yylval>
    4bd0:	89 c6                	mov    %eax,%esi
    4bd2:	48 8d 05 10 43 01 00 	lea    0x14310(%rip),%rax        # 18ee9 <yyr2+0x1a9>
    4bd9:	48 89 c7             	mov    %rax,%rdi
    4bdc:	e8 00 e0 ff ff       	call   2be1 <yydestruct>
    4be1:	c7 05 95 d4 01 00 fe 	movl   $0xfffffffe,0x1d495(%rip)        # 22080 <yychar>
    4be8:	ff ff ff
    4beb:	90                   	nop
    4bec:	c7 85 38 d8 ff ff 03 	movl   $0x3,-0x27c8(%rbp)
    4bf3:	00 00 00
    4bf6:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    4bfc:	48 98                	cltq
    4bfe:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4c02:	48 8d 05 77 39 01 00 	lea    0x13977(%rip),%rax        # 18580 <yypact>
    4c09:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4c0d:	98                   	cwtl
    4c0e:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    4c14:	83 bd 3c d8 ff ff a2 	cmpl   $0xffffffa2,-0x27c4(%rbp)
    4c1b:	74 60                	je     4c7d <yyparse+0x2074>
    4c1d:	83 85 3c d8 ff ff 01 	addl   $0x1,-0x27c4(%rbp)
    4c24:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    4c2b:	78 50                	js     4c7d <yyparse+0x2074>
    4c2d:	81 bd 3c d8 ff ff c9 	cmpl   $0xc9,-0x27c4(%rbp)
    4c34:	00 00 00
    4c37:	7f 44                	jg     4c7d <yyparse+0x2074>
    4c39:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4c3f:	48 98                	cltq
    4c41:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4c45:	48 8d 05 f4 3d 01 00 	lea    0x13df4(%rip),%rax        # 18a40 <yycheck>
    4c4c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4c50:	66 83 f8 01          	cmp    $0x1,%ax
    4c54:	75 27                	jne    4c7d <yyparse+0x2074>
    4c56:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4c5c:	48 98                	cltq
    4c5e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    4c62:	48 8d 05 37 3c 01 00 	lea    0x13c37(%rip),%rax        # 188a0 <yytable>
    4c69:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    4c6d:	98                   	cwtl
    4c6e:	89 85 3c d8 ff ff    	mov    %eax,-0x27c4(%rbp)
    4c74:	83 bd 3c d8 ff ff 00 	cmpl   $0x0,-0x27c4(%rbp)
    4c7b:	7f 6a                	jg     4ce7 <yyparse+0x20de>
    4c7d:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4c84:	48 3b 85 70 d8 ff ff 	cmp    -0x2790(%rbp),%rax
    4c8b:	0f 84 c8 00 00 00    	je     4d59 <yyparse+0x2150>
    4c91:	8b 85 34 d8 ff ff    	mov    -0x27cc(%rbp),%eax
    4c97:	48 98                	cltq
    4c99:	48 8d 15 40 3f 01 00 	lea    0x13f40(%rip),%rdx        # 18be0 <yystos>
    4ca0:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4ca4:	0f be c0             	movsbl %al,%eax
    4ca7:	48 8b 95 88 d8 ff ff 	mov    -0x2778(%rbp),%rdx
    4cae:	89 c6                	mov    %eax,%esi
    4cb0:	48 8d 05 44 42 01 00 	lea    0x14244(%rip),%rax        # 18efb <yyr2+0x1bb>
    4cb7:	48 89 c7             	mov    %rax,%rdi
    4cba:	e8 22 df ff ff       	call   2be1 <yydestruct>
    4cbf:	48 83 ad 88 d8 ff ff 	subq   $0x30,-0x2778(%rbp)
    4cc6:	30
    4cc7:	48 83 ad 78 d8 ff ff 	subq   $0x1,-0x2788(%rbp)
    4cce:	01
    4ccf:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4cd6:	0f b6 00             	movzbl (%rax),%eax
    4cd9:	0f b6 c0             	movzbl %al,%eax
    4cdc:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    4ce2:	e9 0f ff ff ff       	jmp    4bf6 <yyparse+0x1fed>
    4ce7:	90                   	nop
    4ce8:	48 83 85 88 d8 ff ff 	addq   $0x30,-0x2778(%rbp)
    4cef:	30
    4cf0:	48 8b 85 88 d8 ff ff 	mov    -0x2778(%rbp),%rax
    4cf7:	48 8b 0d a2 d3 01 00 	mov    0x1d3a2(%rip),%rcx        # 220a0 <yylval>
    4cfe:	48 8b 1d a3 d3 01 00 	mov    0x1d3a3(%rip),%rbx        # 220a8 <yylval+0x8>
    4d05:	48 89 08             	mov    %rcx,(%rax)
    4d08:	48 89 58 08          	mov    %rbx,0x8(%rax)
    4d0c:	48 8b 0d 9d d3 01 00 	mov    0x1d39d(%rip),%rcx        # 220b0 <yylval+0x10>
    4d13:	48 8b 1d 9e d3 01 00 	mov    0x1d39e(%rip),%rbx        # 220b8 <yylval+0x18>
    4d1a:	48 89 48 10          	mov    %rcx,0x10(%rax)
    4d1e:	48 89 58 18          	mov    %rbx,0x18(%rax)
    4d22:	48 8b 0d 97 d3 01 00 	mov    0x1d397(%rip),%rcx        # 220c0 <yylval+0x20>
    4d29:	48 8b 1d 98 d3 01 00 	mov    0x1d398(%rip),%rbx        # 220c8 <yylval+0x28>
    4d30:	48 89 48 20          	mov    %rcx,0x20(%rax)
    4d34:	48 89 58 28          	mov    %rbx,0x28(%rax)
    4d38:	8b 85 3c d8 ff ff    	mov    -0x27c4(%rbp),%eax
    4d3e:	89 85 34 d8 ff ff    	mov    %eax,-0x27cc(%rbp)
    4d44:	e9 87 df ff ff       	jmp    2cd0 <yyparse+0xc7>
    4d49:	90                   	nop
    4d4a:	c7 85 40 d8 ff ff 00 	movl   $0x0,-0x27c0(%rbp)
    4d51:	00 00 00
    4d54:	eb 31                	jmp    4d87 <yyparse+0x217e>
    4d56:	90                   	nop
    4d57:	eb 01                	jmp    4d5a <yyparse+0x2151>
    4d59:	90                   	nop
    4d5a:	c7 85 40 d8 ff ff 01 	movl   $0x1,-0x27c0(%rbp)
    4d61:	00 00 00
    4d64:	eb 21                	jmp    4d87 <yyparse+0x217e>
    4d66:	90                   	nop
    4d67:	eb 04                	jmp    4d6d <yyparse+0x2164>
    4d69:	90                   	nop
    4d6a:	eb 01                	jmp    4d6d <yyparse+0x2164>
    4d6c:	90                   	nop
    4d6d:	48 8d 05 96 41 01 00 	lea    0x14196(%rip),%rax        # 18f0a <yyr2+0x1ca>
    4d74:	48 89 c7             	mov    %rax,%rdi
    4d77:	e8 58 01 00 00       	call   4ed4 <yyerror>
    4d7c:	c7 85 40 d8 ff ff 02 	movl   $0x2,-0x27c0(%rbp)
    4d83:	00 00 00
    4d86:	90                   	nop
    4d87:	8b 05 f3 d2 01 00    	mov    0x1d2f3(%rip),%eax        # 22080 <yychar>
    4d8d:	83 f8 fe             	cmp    $0xfffffffe,%eax
    4d90:	74 58                	je     4dea <yyparse+0x21e1>
    4d92:	8b 05 e8 d2 01 00    	mov    0x1d2e8(%rip),%eax        # 22080 <yychar>
    4d98:	85 c0                	test   %eax,%eax
    4d9a:	78 25                	js     4dc1 <yyparse+0x21b8>
    4d9c:	8b 05 de d2 01 00    	mov    0x1d2de(%rip),%eax        # 22080 <yychar>
    4da2:	3d 3c 01 00 00       	cmp    $0x13c,%eax
    4da7:	7f 18                	jg     4dc1 <yyparse+0x21b8>
    4da9:	8b 05 d1 d2 01 00    	mov    0x1d2d1(%rip),%eax        # 22080 <yychar>
    4daf:	48 98                	cltq
    4db1:	48 8d 15 68 32 01 00 	lea    0x13268(%rip),%rdx        # 18020 <yytranslate>
    4db8:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4dbc:	0f be c0             	movsbl %al,%eax
    4dbf:	eb 05                	jmp    4dc6 <yyparse+0x21bd>
    4dc1:	b8 02 00 00 00       	mov    $0x2,%eax
    4dc6:	89 85 44 d8 ff ff    	mov    %eax,-0x27bc(%rbp)
    4dcc:	8b 85 44 d8 ff ff    	mov    -0x27bc(%rbp),%eax
    4dd2:	48 8d 15 c7 d2 01 00 	lea    0x1d2c7(%rip),%rdx        # 220a0 <yylval>
    4dd9:	89 c6                	mov    %eax,%esi
    4ddb:	48 8d 05 39 41 01 00 	lea    0x14139(%rip),%rax        # 18f1b <yyr2+0x1db>
    4de2:	48 89 c7             	mov    %rax,%rdi
    4de5:	e8 f7 dd ff ff       	call   2be1 <yydestruct>
    4dea:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    4df0:	48 63 d0             	movslq %eax,%rdx
    4df3:	48 89 d0             	mov    %rdx,%rax
    4df6:	48 01 c0             	add    %rax,%rax
    4df9:	48 01 d0             	add    %rdx,%rax
    4dfc:	48 c1 e0 04          	shl    $0x4,%rax
    4e00:	48 f7 d8             	neg    %rax
    4e03:	48 01 85 88 d8 ff ff 	add    %rax,-0x2778(%rbp)
    4e0a:	8b 85 48 d8 ff ff    	mov    -0x27b8(%rbp),%eax
    4e10:	48 98                	cltq
    4e12:	48 f7 d8             	neg    %rax
    4e15:	48 01 85 78 d8 ff ff 	add    %rax,-0x2788(%rbp)
    4e1c:	eb 45                	jmp    4e63 <yyparse+0x225a>
    4e1e:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4e25:	0f b6 00             	movzbl (%rax),%eax
    4e28:	0f b6 c0             	movzbl %al,%eax
    4e2b:	48 98                	cltq
    4e2d:	48 8d 15 ac 3d 01 00 	lea    0x13dac(%rip),%rdx        # 18be0 <yystos>
    4e34:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    4e38:	0f be c0             	movsbl %al,%eax
    4e3b:	48 8b 95 88 d8 ff ff 	mov    -0x2778(%rbp),%rdx
    4e42:	89 c6                	mov    %eax,%esi
    4e44:	48 8d 05 ee 40 01 00 	lea    0x140ee(%rip),%rax        # 18f39 <yyr2+0x1f9>
    4e4b:	48 89 c7             	mov    %rax,%rdi
    4e4e:	e8 8e dd ff ff       	call   2be1 <yydestruct>
    4e53:	48 83 ad 88 d8 ff ff 	subq   $0x30,-0x2778(%rbp)
    4e5a:	30
    4e5b:	48 83 ad 78 d8 ff ff 	subq   $0x1,-0x2788(%rbp)
    4e62:	01
    4e63:	48 8b 85 78 d8 ff ff 	mov    -0x2788(%rbp),%rax
    4e6a:	48 3b 85 70 d8 ff ff 	cmp    -0x2790(%rbp),%rax
    4e71:	75 ab                	jne    4e1e <yyparse+0x2215>
    4e73:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    4e7a:	48 39 85 70 d8 ff ff 	cmp    %rax,-0x2790(%rbp)
    4e81:	74 0f                	je     4e92 <yyparse+0x2289>
    4e83:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
    4e8a:	48 89 c7             	mov    %rax,%rdi
    4e8d:	e8 5e d4 ff ff       	call   22f0 <free@plt>
    4e92:	48 8b 95 58 d8 ff ff 	mov    -0x27a8(%rbp),%rdx
    4e99:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4ea0:	48 39 c2             	cmp    %rax,%rdx
    4ea3:	74 0f                	je     4eb4 <yyparse+0x22ab>
    4ea5:	48 8b 85 58 d8 ff ff 	mov    -0x27a8(%rbp),%rax
    4eac:	48 89 c7             	mov    %rax,%rdi
    4eaf:	e8 3c d4 ff ff       	call   22f0 <free@plt>
    4eb4:	8b 85 40 d8 ff ff    	mov    -0x27c0(%rbp),%eax
    4eba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4ebe:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    4ec5:	00 00
    4ec7:	74 05                	je     4ece <yyparse+0x22c5>
    4ec9:	e8 d2 d4 ff ff       	call   23a0 <__stack_chk_fail@plt>
    4ece:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ed2:	c9                   	leave
    4ed3:	c3                   	ret

0000000000004ed4 <yyerror>:
    4ed4:	f3 0f 1e fa          	endbr64
    4ed8:	55                   	push   %rbp
    4ed9:	48 89 e5             	mov    %rsp,%rbp
    4edc:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
    4ee3:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    4eea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4ef1:	00 00
    4ef3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ef7:	31 c0                	xor    %eax,%eax
    4ef9:	48 8b 05 08 d8 01 00 	mov    0x1d808(%rip),%rax        # 22708 <file_to_parse>
    4f00:	48 85 c0             	test   %rax,%rax
    4f03:	74 09                	je     4f0e <yyerror+0x3a>
    4f05:	48 8b 15 fc d7 01 00 	mov    0x1d7fc(%rip),%rdx        # 22708 <file_to_parse>
    4f0c:	eb 07                	jmp    4f15 <yyerror+0x41>
    4f0e:	48 8d 15 bb 41 01 00 	lea    0x141bb(%rip),%rdx        # 190d0 <yyr2+0x390>
    4f15:	8b 0d 19 d1 01 00    	mov    0x1d119(%rip),%ecx        # 22034 <col_num>
    4f1b:	44 8b 0d 0e d1 01 00 	mov    0x1d10e(%rip),%r9d        # 22030 <line_num>
    4f22:	44 8b 05 b7 d1 01 00 	mov    0x1d1b7(%rip),%r8d        # 220e0 <yyleng>
    4f29:	48 8b 05 d0 d1 01 00 	mov    0x1d1d0(%rip),%rax        # 22100 <yytext>
    4f30:	48 85 c0             	test   %rax,%rax
    4f33:	74 09                	je     4f3e <yyerror+0x6a>
    4f35:	48 8b 05 c4 d1 01 00 	mov    0x1d1c4(%rip),%rax        # 22100 <yytext>
    4f3c:	eb 07                	jmp    4f45 <yyerror+0x71>
    4f3e:	48 8d 05 8b 41 01 00 	lea    0x1418b(%rip),%rax        # 190d0 <yyr2+0x390>
    4f45:	48 8b 3d 14 d1 01 00 	mov    0x1d114(%rip),%rdi        # 22060 <stderr@GLIBC_2.2.5>
    4f4c:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
    4f53:	52                   	push   %rdx
    4f54:	51                   	push   %rcx
    4f55:	48 89 c1             	mov    %rax,%rcx
    4f58:	48 89 f2             	mov    %rsi,%rdx
    4f5b:	48 8d 05 76 41 01 00 	lea    0x14176(%rip),%rax        # 190d8 <yyr2+0x398>
    4f62:	48 89 c6             	mov    %rax,%rsi
    4f65:	b8 00 00 00 00       	mov    $0x0,%eax
    4f6a:	e8 01 d5 ff ff       	call   2470 <fprintf@plt>
    4f6f:	48 83 c4 10          	add    $0x10,%rsp
    4f73:	48 8b 05 e6 d0 01 00 	mov    0x1d0e6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    4f7a:	48 89 c1             	mov    %rax,%rcx
    4f7d:	ba 05 00 00 00       	mov    $0x5,%edx
    4f82:	be 01 00 00 00       	mov    $0x1,%esi
    4f87:	48 8d 05 b0 41 01 00 	lea    0x141b0(%rip),%rax        # 1913e <yyr2+0x3fe>
    4f8e:	48 89 c7             	mov    %rax,%rdi
    4f91:	e8 ba d5 ff ff       	call   2550 <fwrite@plt>
    4f96:	48 8b 05 6b d7 01 00 	mov    0x1d76b(%rip),%rax        # 22708 <file_to_parse>
    4f9d:	48 85 c0             	test   %rax,%rax
    4fa0:	74 33                	je     4fd5 <yyerror+0x101>
    4fa2:	48 8b 05 5f d7 01 00 	mov    0x1d75f(%rip),%rax        # 22708 <file_to_parse>
    4fa9:	0f b6 00             	movzbl (%rax),%eax
    4fac:	84 c0                	test   %al,%al
    4fae:	74 25                	je     4fd5 <yyerror+0x101>
    4fb0:	48 8b 15 51 d7 01 00 	mov    0x1d751(%rip),%rdx        # 22708 <file_to_parse>
    4fb7:	48 8b 05 a2 d0 01 00 	mov    0x1d0a2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    4fbe:	48 8d 0d 7f 41 01 00 	lea    0x1417f(%rip),%rcx        # 19144 <yyr2+0x404>
    4fc5:	48 89 ce             	mov    %rcx,%rsi
    4fc8:	48 89 c7             	mov    %rax,%rdi
    4fcb:	b8 00 00 00 00       	mov    $0x0,%eax
    4fd0:	e8 9b d4 ff ff       	call   2470 <fprintf@plt>
    4fd5:	48 8b 05 24 d1 01 00 	mov    0x1d124(%rip),%rax        # 22100 <yytext>
    4fdc:	48 85 c0             	test   %rax,%rax
    4fdf:	74 08                	je     4fe9 <yyerror+0x115>
    4fe1:	8b 05 f9 d0 01 00    	mov    0x1d0f9(%rip),%eax        # 220e0 <yyleng>
    4fe7:	eb 05                	jmp    4fee <yyerror+0x11a>
    4fe9:	b8 00 00 00 00       	mov    $0x0,%eax
    4fee:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
    4ff4:	8b 05 3a d0 01 00    	mov    0x1d03a(%rip),%eax        # 22034 <col_num>
    4ffa:	39 85 d8 fe ff ff    	cmp    %eax,-0x128(%rbp)
    5000:	7d 11                	jge    5013 <yyerror+0x13f>
    5002:	8b 05 2c d0 01 00    	mov    0x1d02c(%rip),%eax        # 22034 <col_num>
    5008:	2b 85 d8 fe ff ff    	sub    -0x128(%rbp),%eax
    500e:	83 c0 01             	add    $0x1,%eax
    5011:	eb 05                	jmp    5018 <yyerror+0x144>
    5013:	b8 01 00 00 00       	mov    $0x1,%eax
    5018:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
    501e:	8b 15 0c d0 01 00    	mov    0x1d00c(%rip),%edx        # 22030 <line_num>
    5024:	48 8b 05 35 d0 01 00 	mov    0x1d035(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    502b:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
    5031:	48 8d 35 15 41 01 00 	lea    0x14115(%rip),%rsi        # 1914d <yyr2+0x40d>
    5038:	48 89 c7             	mov    %rax,%rdi
    503b:	b8 00 00 00 00       	mov    $0x0,%eax
    5040:	e8 2b d4 ff ff       	call   2470 <fprintf@plt>
    5045:	48 8b 05 14 d0 01 00 	mov    0x1d014(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    504c:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    5053:	48 8d 0d 09 41 01 00 	lea    0x14109(%rip),%rcx        # 19163 <yyr2+0x423>
    505a:	48 89 ce             	mov    %rcx,%rsi
    505d:	48 89 c7             	mov    %rax,%rdi
    5060:	b8 00 00 00 00       	mov    $0x0,%eax
    5065:	e8 06 d4 ff ff       	call   2470 <fprintf@plt>
    506a:	48 8b 05 8f d0 01 00 	mov    0x1d08f(%rip),%rax        # 22100 <yytext>
    5071:	48 85 c0             	test   %rax,%rax
    5074:	0f 84 0e 01 00 00    	je     5188 <yyerror+0x2b4>
    507a:	48 8b 05 7f d0 01 00 	mov    0x1d07f(%rip),%rax        # 22100 <yytext>
    5081:	0f b6 00             	movzbl (%rax),%eax
    5084:	84 c0                	test   %al,%al
    5086:	0f 84 fc 00 00 00    	je     5188 <yyerror+0x2b4>
    508c:	48 8b 0d 6d d0 01 00 	mov    0x1d06d(%rip),%rcx        # 22100 <yytext>
    5093:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    509a:	ba 63 00 00 00       	mov    $0x63,%edx
    509f:	48 89 ce             	mov    %rcx,%rsi
    50a2:	48 89 c7             	mov    %rax,%rdi
    50a5:	e8 66 d2 ff ff       	call   2310 <strncpy@plt>
    50aa:	c6 85 53 ff ff ff 00 	movb   $0x0,-0xad(%rbp)
    50b1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    50b8:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    50bf:	eb 58                	jmp    5119 <yyerror+0x245>
    50c1:	e8 ca d4 ff ff       	call   2590 <__ctype_b_loc@plt>
    50c6:	48 8b 10             	mov    (%rax),%rdx
    50c9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    50d0:	0f b6 00             	movzbl (%rax),%eax
    50d3:	0f b6 c0             	movzbl %al,%eax
    50d6:	48 01 c0             	add    %rax,%rax
    50d9:	48 01 d0             	add    %rdx,%rax
    50dc:	0f b7 00             	movzwl (%rax),%eax
    50df:	0f b7 c0             	movzwl %ax,%eax
    50e2:	25 00 40 00 00       	and    $0x4000,%eax
    50e7:	85 c0                	test   %eax,%eax
    50e9:	75 26                	jne    5111 <yyerror+0x23d>
    50eb:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    50f2:	0f b6 00             	movzbl (%rax),%eax
    50f5:	3c 0a                	cmp    $0xa,%al
    50f7:	74 18                	je     5111 <yyerror+0x23d>
    50f9:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5100:	0f b6 00             	movzbl (%rax),%eax
    5103:	3c 09                	cmp    $0x9,%al
    5105:	74 0a                	je     5111 <yyerror+0x23d>
    5107:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    510e:	c6 00 3f             	movb   $0x3f,(%rax)
    5111:	48 83 85 e0 fe ff ff 	addq   $0x1,-0x120(%rbp)
    5118:	01
    5119:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5120:	0f b6 00             	movzbl (%rax),%eax
    5123:	84 c0                	test   %al,%al
    5125:	75 9a                	jne    50c1 <yyerror+0x1ed>
    5127:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    512e:	48 8d 15 34 40 01 00 	lea    0x14034(%rip),%rdx        # 19169 <yyr2+0x429>
    5135:	48 89 d6             	mov    %rdx,%rsi
    5138:	48 89 c7             	mov    %rax,%rdi
    513b:	e8 40 d4 ff ff       	call   2580 <strstr@plt>
    5140:	48 85 c0             	test   %rax,%rax
    5143:	74 1e                	je     5163 <yyerror+0x28f>
    5145:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    514c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    5153:	48 89 d6             	mov    %rdx,%rsi
    5156:	48 89 c7             	mov    %rax,%rdi
    5159:	e8 22 d4 ff ff       	call   2580 <strstr@plt>
    515e:	48 85 c0             	test   %rax,%rax
    5161:	75 25                	jne    5188 <yyerror+0x2b4>
    5163:	48 8b 05 f6 ce 01 00 	mov    0x1cef6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    516a:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    5171:	48 8d 0d fc 3f 01 00 	lea    0x13ffc(%rip),%rcx        # 19174 <yyr2+0x434>
    5178:	48 89 ce             	mov    %rcx,%rsi
    517b:	48 89 c7             	mov    %rax,%rdi
    517e:	b8 00 00 00 00       	mov    $0x0,%eax
    5183:	e8 e8 d2 ff ff       	call   2470 <fprintf@plt>
    5188:	48 8b 05 79 d5 01 00 	mov    0x1d579(%rip),%rax        # 22708 <file_to_parse>
    518f:	48 85 c0             	test   %rax,%rax
    5192:	0f 84 7e 01 00 00    	je     5316 <yyerror+0x442>
    5198:	48 8b 05 69 d5 01 00 	mov    0x1d569(%rip),%rax        # 22708 <file_to_parse>
    519f:	48 8d 15 e8 3f 01 00 	lea    0x13fe8(%rip),%rdx        # 1918e <yyr2+0x44e>
    51a6:	48 89 d6             	mov    %rdx,%rsi
    51a9:	48 89 c7             	mov    %rax,%rdi
    51ac:	e8 df d2 ff ff       	call   2490 <fopen64@plt>
    51b1:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    51b8:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
    51bf:	00
    51c0:	0f 84 50 01 00 00    	je     5316 <yyerror+0x442>
    51c6:	c7 85 d0 fe ff ff 01 	movl   $0x1,-0x130(%rbp)
    51cd:	00 00 00
    51d0:	eb 07                	jmp    51d9 <yyerror+0x305>
    51d2:	83 85 d0 fe ff ff 01 	addl   $0x1,-0x130(%rbp)
    51d9:	8b 05 51 ce 01 00    	mov    0x1ce51(%rip),%eax        # 22030 <line_num>
    51df:	39 85 d0 fe ff ff    	cmp    %eax,-0x130(%rbp)
    51e5:	7d 20                	jge    5207 <yyerror+0x333>
    51e7:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    51ee:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    51f5:	be 00 01 00 00       	mov    $0x100,%esi
    51fa:	48 89 c7             	mov    %rax,%rdi
    51fd:	e8 3e d2 ff ff       	call   2440 <fgets@plt>
    5202:	48 85 c0             	test   %rax,%rax
    5205:	75 cb                	jne    51d2 <yyerror+0x2fe>
    5207:	8b 05 23 ce 01 00    	mov    0x1ce23(%rip),%eax        # 22030 <line_num>
    520d:	39 85 d0 fe ff ff    	cmp    %eax,-0x130(%rbp)
    5213:	0f 85 ee 00 00 00    	jne    5307 <yyerror+0x433>
    5219:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    5220:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5227:	be 00 01 00 00       	mov    $0x100,%esi
    522c:	48 89 c7             	mov    %rax,%rdi
    522f:	e8 0c d2 ff ff       	call   2440 <fgets@plt>
    5234:	48 85 c0             	test   %rax,%rax
    5237:	0f 84 ca 00 00 00    	je     5307 <yyerror+0x433>
    523d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5244:	48 8d 15 45 3f 01 00 	lea    0x13f45(%rip),%rdx        # 19190 <yyr2+0x450>
    524b:	48 89 d6             	mov    %rdx,%rsi
    524e:	48 89 c7             	mov    %rax,%rdi
    5251:	e8 da d1 ff ff       	call   2430 <strcspn@plt>
    5256:	c6 84 05 f0 fe ff ff 	movb   $0x0,-0x110(%rbp,%rax,1)
    525d:	00
    525e:	48 8b 05 fb cd 01 00 	mov    0x1cdfb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    5265:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    526c:	48 8d 0d 20 3f 01 00 	lea    0x13f20(%rip),%rcx        # 19193 <yyr2+0x453>
    5273:	48 89 ce             	mov    %rcx,%rsi
    5276:	48 89 c7             	mov    %rax,%rdi
    5279:	b8 00 00 00 00       	mov    $0x0,%eax
    527e:	e8 ed d1 ff ff       	call   2470 <fprintf@plt>
    5283:	83 bd dc fe ff ff 00 	cmpl   $0x0,-0x124(%rbp)
    528a:	7e 7b                	jle    5307 <yyerror+0x433>
    528c:	48 8b 05 cd cd 01 00 	mov    0x1cdcd(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    5293:	48 89 c1             	mov    %rax,%rcx
    5296:	ba 0b 00 00 00       	mov    $0xb,%edx
    529b:	be 01 00 00 00       	mov    $0x1,%esi
    52a0:	48 8d 05 fb 3e 01 00 	lea    0x13efb(%rip),%rax        # 191a2 <yyr2+0x462>
    52a7:	48 89 c7             	mov    %rax,%rdi
    52aa:	e8 a1 d2 ff ff       	call   2550 <fwrite@plt>
    52af:	c7 85 d4 fe ff ff 01 	movl   $0x1,-0x12c(%rbp)
    52b6:	00 00 00
    52b9:	eb 1b                	jmp    52d6 <yyerror+0x402>
    52bb:	48 8b 05 9e cd 01 00 	mov    0x1cd9e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    52c2:	48 89 c6             	mov    %rax,%rsi
    52c5:	bf 20 00 00 00       	mov    $0x20,%edi
    52ca:	e8 51 d1 ff ff       	call   2420 <fputc@plt>
    52cf:	83 85 d4 fe ff ff 01 	addl   $0x1,-0x12c(%rbp)
    52d6:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
    52dc:	3b 85 dc fe ff ff    	cmp    -0x124(%rbp),%eax
    52e2:	7c d7                	jl     52bb <yyerror+0x3e7>
    52e4:	48 8b 05 75 cd 01 00 	mov    0x1cd75(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    52eb:	48 89 c1             	mov    %rax,%rcx
    52ee:	ba 02 00 00 00       	mov    $0x2,%edx
    52f3:	be 01 00 00 00       	mov    $0x1,%esi
    52f8:	48 8d 05 af 3e 01 00 	lea    0x13eaf(%rip),%rax        # 191ae <yyr2+0x46e>
    52ff:	48 89 c7             	mov    %rax,%rdi
    5302:	e8 49 d2 ff ff       	call   2550 <fwrite@plt>
    5307:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    530e:	48 89 c7             	mov    %rax,%rdi
    5311:	e8 6a d0 ff ff       	call   2380 <fclose@plt>
    5316:	48 8b 05 43 cd 01 00 	mov    0x1cd43(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    531d:	48 89 c6             	mov    %rax,%rsi
    5320:	bf 0a 00 00 00       	mov    $0xa,%edi
    5325:	e8 f6 d0 ff ff       	call   2420 <fputc@plt>
    532a:	90                   	nop
    532b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5336:	00 00
    5338:	74 05                	je     533f <yyerror+0x46b>
    533a:	e8 61 d0 ff ff       	call   23a0 <__stack_chk_fail@plt>
    533f:	c9                   	leave
    5340:	c3                   	ret

0000000000005341 <is_defined>:
    5341:	f3 0f 1e fa          	endbr64
    5345:	55                   	push   %rbp
    5346:	48 89 e5             	mov    %rsp,%rbp
    5349:	48 83 ec 20          	sub    $0x20,%rsp
    534d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5351:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    5358:	eb 36                	jmp    5390 <is_defined+0x4f>
    535a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    535d:	48 98                	cltq
    535f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5366:	00
    5367:	48 8d 05 b2 cc 01 00 	lea    0x1ccb2(%rip),%rax        # 22020 <defined_symbols>
    536e:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    5372:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5376:	48 89 d6             	mov    %rdx,%rsi
    5379:	48 89 c7             	mov    %rax,%rdi
    537c:	e8 cf d0 ff ff       	call   2450 <strcmp@plt>
    5381:	85 c0                	test   %eax,%eax
    5383:	75 07                	jne    538c <is_defined+0x4b>
    5385:	b8 01 00 00 00       	mov    $0x1,%eax
    538a:	eb 26                	jmp    53b2 <is_defined+0x71>
    538c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    5390:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5393:	48 98                	cltq
    5395:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    539c:	00
    539d:	48 8d 05 7c cc 01 00 	lea    0x1cc7c(%rip),%rax        # 22020 <defined_symbols>
    53a4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    53a8:	48 85 c0             	test   %rax,%rax
    53ab:	75 ad                	jne    535a <is_defined+0x19>
    53ad:	b8 00 00 00 00       	mov    $0x0,%eax
    53b2:	c9                   	leave
    53b3:	c3                   	ret

00000000000053b4 <yylex>:
    53b4:	f3 0f 1e fa          	endbr64
    53b8:	55                   	push   %rbp
    53b9:	48 89 e5             	mov    %rsp,%rbp
    53bc:	53                   	push   %rbx
    53bd:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    53c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    53cb:	00 00
    53cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    53d1:	31 c0                	xor    %eax,%eax
    53d3:	8b 05 07 d3 01 00    	mov    0x1d307(%rip),%eax        # 226e0 <yy_init>
    53d9:	85 c0                	test   %eax,%eax
    53db:	0f 85 b2 00 00 00    	jne    5493 <yylex+0xdf>
    53e1:	c7 05 f5 d2 01 00 01 	movl   $0x1,0x1d2f5(%rip)        # 226e0 <yy_init>
    53e8:	00 00 00
    53eb:	8b 05 f3 d2 01 00    	mov    0x1d2f3(%rip),%eax        # 226e4 <yy_start>
    53f1:	85 c0                	test   %eax,%eax
    53f3:	75 0a                	jne    53ff <yylex+0x4b>
    53f5:	c7 05 e5 d2 01 00 01 	movl   $0x1,0x1d2e5(%rip)        # 226e4 <yy_start>
    53fc:	00 00 00
    53ff:	48 8b 05 e2 cc 01 00 	mov    0x1cce2(%rip),%rax        # 220e8 <yyin>
    5406:	48 85 c0             	test   %rax,%rax
    5409:	75 0e                	jne    5419 <yylex+0x65>
    540b:	48 8b 05 3e cc 01 00 	mov    0x1cc3e(%rip),%rax        # 22050 <stdin@GLIBC_2.2.5>
    5412:	48 89 05 cf cc 01 00 	mov    %rax,0x1cccf(%rip)        # 220e8 <yyin>
    5419:	48 8b 05 d0 cc 01 00 	mov    0x1ccd0(%rip),%rax        # 220f0 <yyout>
    5420:	48 85 c0             	test   %rax,%rax
    5423:	75 0e                	jne    5433 <yylex+0x7f>
    5425:	48 8b 05 14 cc 01 00 	mov    0x1cc14(%rip),%rax        # 22040 <stdout@GLIBC_2.2.5>
    542c:	48 89 05 bd cc 01 00 	mov    %rax,0x1ccbd(%rip)        # 220f0 <yyout>
    5433:	48 8b 05 8e d2 01 00 	mov    0x1d28e(%rip),%rax        # 226c8 <yy_buffer_stack>
    543a:	48 85 c0             	test   %rax,%rax
    543d:	74 1d                	je     545c <yylex+0xa8>
    543f:	48 8b 05 82 d2 01 00 	mov    0x1d282(%rip),%rax        # 226c8 <yy_buffer_stack>
    5446:	48 8b 15 6b d2 01 00 	mov    0x1d26b(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    544d:	48 c1 e2 03          	shl    $0x3,%rdx
    5451:	48 01 d0             	add    %rdx,%rax
    5454:	48 8b 00             	mov    (%rax),%rax
    5457:	48 85 c0             	test   %rax,%rax
    545a:	75 32                	jne    548e <yylex+0xda>
    545c:	e8 59 21 00 00       	call   75ba <yyensure_buffer_stack>
    5461:	48 8b 05 80 cc 01 00 	mov    0x1cc80(%rip),%rax        # 220e8 <yyin>
    5468:	48 8b 15 59 d2 01 00 	mov    0x1d259(%rip),%rdx        # 226c8 <yy_buffer_stack>
    546f:	48 8b 0d 42 d2 01 00 	mov    0x1d242(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    5476:	48 c1 e1 03          	shl    $0x3,%rcx
    547a:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
    547e:	be 00 40 00 00       	mov    $0x4000,%esi
    5483:	48 89 c7             	mov    %rax,%rdi
    5486:	e8 b1 1c 00 00       	call   713c <yy_create_buffer>
    548b:	48 89 03             	mov    %rax,(%rbx)
    548e:	e8 1a 1c 00 00       	call   70ad <yy_load_buffer_state>
    5493:	48 8b 05 3e d2 01 00 	mov    0x1d23e(%rip),%rax        # 226d8 <yy_c_buf_p>
    549a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    54a1:	0f b6 15 28 d2 01 00 	movzbl 0x1d228(%rip),%edx        # 226d0 <yy_hold_char>
    54a8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    54af:	88 10                	mov    %dl,(%rax)
    54b1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    54b8:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    54bf:	8b 05 1f d2 01 00    	mov    0x1d21f(%rip),%eax        # 226e4 <yy_start>
    54c5:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    54cb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    54d2:	0f b6 00             	movzbl (%rax),%eax
    54d5:	0f b6 c0             	movzbl %al,%eax
    54d8:	48 98                	cltq
    54da:	48 8d 15 bf 3e 01 00 	lea    0x13ebf(%rip),%rdx        # 193a0 <yy_ec>
    54e1:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    54e5:	88 85 43 ff ff ff    	mov    %al,-0xbd(%rbp)
    54eb:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    54f1:	48 98                	cltq
    54f3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    54f7:	48 8d 05 c2 3c 01 00 	lea    0x13cc2(%rip),%rax        # 191c0 <yy_accept>
    54fe:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5502:	66 85 c0             	test   %ax,%ax
    5505:	74 60                	je     5567 <yylex+0x1b3>
    5507:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    550d:	89 05 d9 d1 01 00    	mov    %eax,0x1d1d9(%rip)        # 226ec <yy_last_accepting_state>
    5513:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    551a:	48 89 05 cf d1 01 00 	mov    %rax,0x1d1cf(%rip)        # 226f0 <yy_last_accepting_cpos>
    5521:	eb 44                	jmp    5567 <yylex+0x1b3>
    5523:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    5529:	48 98                	cltq
    552b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    552f:	48 8d 05 aa 41 01 00 	lea    0x141aa(%rip),%rax        # 196e0 <yy_def>
    5536:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    553a:	98                   	cwtl
    553b:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    5541:	81 bd 44 ff ff ff e4 	cmpl   $0xe4,-0xbc(%rbp)
    5548:	00 00 00
    554b:	7e 1a                	jle    5567 <yylex+0x1b3>
    554d:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    5554:	48 98                	cltq
    5556:	48 8d 15 43 3f 01 00 	lea    0x13f43(%rip),%rdx        # 194a0 <yy_meta>
    555d:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    5561:	88 85 43 ff ff ff    	mov    %al,-0xbd(%rbp)
    5567:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    556d:	48 98                	cltq
    556f:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5573:	48 8d 05 66 3f 01 00 	lea    0x13f66(%rip),%rax        # 194e0 <yy_base>
    557a:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    557e:	0f bf d0             	movswl %ax,%edx
    5581:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    5588:	01 d0                	add    %edx,%eax
    558a:	48 98                	cltq
    558c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5590:	48 8d 05 e9 45 01 00 	lea    0x145e9(%rip),%rax        # 19b80 <yy_chk>
    5597:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    559b:	98                   	cwtl
    559c:	39 85 44 ff ff ff    	cmp    %eax,-0xbc(%rbp)
    55a2:	0f 85 7b ff ff ff    	jne    5523 <yylex+0x16f>
    55a8:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    55ae:	48 98                	cltq
    55b0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    55b4:	48 8d 05 25 3f 01 00 	lea    0x13f25(%rip),%rax        # 194e0 <yy_base>
    55bb:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    55bf:	0f bf d0             	movswl %ax,%edx
    55c2:	0f b6 85 43 ff ff ff 	movzbl -0xbd(%rbp),%eax
    55c9:	01 d0                	add    %edx,%eax
    55cb:	48 98                	cltq
    55cd:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    55d1:	48 8d 05 08 43 01 00 	lea    0x14308(%rip),%rax        # 198e0 <yy_nxt>
    55d8:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    55dc:	98                   	cwtl
    55dd:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    55e3:	48 83 85 58 ff ff ff 	addq   $0x1,-0xa8(%rbp)
    55ea:	01
    55eb:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    55f1:	48 98                	cltq
    55f3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    55f7:	48 8d 05 e2 3e 01 00 	lea    0x13ee2(%rip),%rax        # 194e0 <yy_base>
    55fe:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5602:	66 3d 20 01          	cmp    $0x120,%ax
    5606:	0f 85 bf fe ff ff    	jne    54cb <yylex+0x117>
    560c:	90                   	nop
    560d:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    5613:	48 98                	cltq
    5615:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5619:	48 8d 05 a0 3b 01 00 	lea    0x13ba0(%rip),%rax        # 191c0 <yy_accept>
    5620:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5624:	98                   	cwtl
    5625:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    562b:	83 bd 48 ff ff ff 00 	cmpl   $0x0,-0xb8(%rbp)
    5632:	75 38                	jne    566c <yylex+0x2b8>
    5634:	48 8b 05 b5 d0 01 00 	mov    0x1d0b5(%rip),%rax        # 226f0 <yy_last_accepting_cpos>
    563b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5642:	8b 05 a4 d0 01 00    	mov    0x1d0a4(%rip),%eax        # 226ec <yy_last_accepting_state>
    5648:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    564e:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    5654:	48 98                	cltq
    5656:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    565a:	48 8d 05 5f 3b 01 00 	lea    0x13b5f(%rip),%rax        # 191c0 <yy_accept>
    5661:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    5665:	98                   	cwtl
    5666:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    566c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5673:	48 89 05 86 ca 01 00 	mov    %rax,0x1ca86(%rip)        # 22100 <yytext>
    567a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5681:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
    5688:	89 05 52 ca 01 00    	mov    %eax,0x1ca52(%rip)        # 220e0 <yyleng>
    568e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5695:	0f b6 00             	movzbl (%rax),%eax
    5698:	88 05 32 d0 01 00    	mov    %al,0x1d032(%rip)        # 226d0 <yy_hold_char>
    569e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    56a5:	c6 00 00             	movb   $0x0,(%rax)
    56a8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    56af:	48 89 05 22 d0 01 00 	mov    %rax,0x1d022(%rip)        # 226d8 <yy_c_buf_p>
    56b6:	83 bd 48 ff ff ff 45 	cmpl   $0x45,-0xb8(%rbp)
    56bd:	0f 87 69 0c 00 00    	ja     632c <yylex+0xf78>
    56c3:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    56c9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    56d0:	00
    56d1:	48 8d 05 bc 47 01 00 	lea    0x147bc(%rip),%rax        # 19e94 <yy_chk+0x314>
    56d8:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    56db:	48 98                	cltq
    56dd:	48 8d 15 b0 47 01 00 	lea    0x147b0(%rip),%rdx        # 19e94 <yy_chk+0x314>
    56e4:	48 01 d0             	add    %rdx,%rax
    56e7:	3e ff e0             	notrack jmp *%rax
    56ea:	0f b6 15 df cf 01 00 	movzbl 0x1cfdf(%rip),%edx        # 226d0 <yy_hold_char>
    56f1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    56f8:	88 10                	mov    %dl,(%rax)
    56fa:	48 8b 05 ef cf 01 00 	mov    0x1cfef(%rip),%rax        # 226f0 <yy_last_accepting_cpos>
    5701:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5708:	8b 05 de cf 01 00    	mov    0x1cfde(%rip),%eax        # 226ec <yy_last_accepting_state>
    570e:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    5714:	e9 f4 fe ff ff       	jmp    560d <yylex+0x259>
    5719:	0f b6 15 b0 cf 01 00 	movzbl 0x1cfb0(%rip),%edx        # 226d0 <yy_hold_char>
    5720:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5727:	88 10                	mov    %dl,(%rax)
    5729:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5730:	48 83 c0 01          	add    $0x1,%rax
    5734:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    573b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5742:	48 89 05 8f cf 01 00 	mov    %rax,0x1cf8f(%rip)        # 226d8 <yy_c_buf_p>
    5749:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5750:	48 89 05 a9 c9 01 00 	mov    %rax,0x1c9a9(%rip)        # 22100 <yytext>
    5757:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    575e:	48 2b 85 60 ff ff ff 	sub    -0xa0(%rbp),%rax
    5765:	89 05 75 c9 01 00    	mov    %eax,0x1c975(%rip)        # 220e0 <yyleng>
    576b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5772:	0f b6 00             	movzbl (%rax),%eax
    5775:	88 05 55 cf 01 00    	mov    %al,0x1cf55(%rip)        # 226d0 <yy_hold_char>
    577b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5782:	c6 00 00             	movb   $0x0,(%rax)
    5785:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    578c:	48 89 05 45 cf 01 00 	mov    %rax,0x1cf45(%rip)        # 226d8 <yy_c_buf_p>
    5793:	c7 05 47 cf 01 00 05 	movl   $0x5,0x1cf47(%rip)        # 226e4 <yy_start>
    579a:	00 00 00
    579d:	e9 ca 0b 00 00       	jmp    636c <yylex+0xfb8>
    57a2:	c7 05 38 cf 01 00 01 	movl   $0x1,0x1cf38(%rip)        # 226e4 <yy_start>
    57a9:	00 00 00
    57ac:	e9 bb 0b 00 00       	jmp    636c <yylex+0xfb8>
    57b1:	48 8b 05 48 c9 01 00 	mov    0x1c948(%rip),%rax        # 22100 <yytext>
    57b8:	0f b6 00             	movzbl (%rax),%eax
    57bb:	3c 0a                	cmp    $0xa,%al
    57bd:	0f 85 7e 0b 00 00    	jne    6341 <yylex+0xf8d>
    57c3:	8b 05 67 c8 01 00    	mov    0x1c867(%rip),%eax        # 22030 <line_num>
    57c9:	83 c0 01             	add    $0x1,%eax
    57cc:	89 05 5e c8 01 00    	mov    %eax,0x1c85e(%rip)        # 22030 <line_num>
    57d2:	e9 6a 0b 00 00       	jmp    6341 <yylex+0xf8d>
    57d7:	48 8b 05 22 c9 01 00 	mov    0x1c922(%rip),%rax        # 22100 <yytext>
    57de:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    57e2:	48 8d 0d 3f 46 01 00 	lea    0x1463f(%rip),%rcx        # 19e28 <yy_chk+0x2a8>
    57e9:	48 89 ce             	mov    %rcx,%rsi
    57ec:	48 89 c7             	mov    %rax,%rdi
    57ef:	b8 00 00 00 00       	mov    $0x0,%eax
    57f4:	e8 e7 cc ff ff       	call   24e0 <__isoc99_sscanf@plt>
    57f9:	8b 05 b1 ce 01 00    	mov    0x1ceb1(%rip),%eax        # 226b0 <if_stack_ptr>
    57ff:	85 c0                	test   %eax,%eax
    5801:	7e 4a                	jle    584d <yylex+0x499>
    5803:	8b 05 a7 ce 01 00    	mov    0x1cea7(%rip),%eax        # 226b0 <if_stack_ptr>
    5809:	83 e8 01             	sub    $0x1,%eax
    580c:	48 98                	cltq
    580e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5815:	00
    5816:	48 8d 05 03 cd 01 00 	lea    0x1cd03(%rip),%rax        # 22520 <if_stack>
    581d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5820:	85 c0                	test   %eax,%eax
    5822:	75 29                	jne    584d <yylex+0x499>
    5824:	8b 05 86 ce 01 00    	mov    0x1ce86(%rip),%eax        # 226b0 <if_stack_ptr>
    582a:	8d 50 01             	lea    0x1(%rax),%edx
    582d:	89 15 7d ce 01 00    	mov    %edx,0x1ce7d(%rip)        # 226b0 <if_stack_ptr>
    5833:	48 98                	cltq
    5835:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    583c:	00
    583d:	48 8d 05 dc cc 01 00 	lea    0x1ccdc(%rip),%rax        # 22520 <if_stack>
    5844:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
    584b:	eb 30                	jmp    587d <yylex+0x4c9>
    584d:	8b 1d 5d ce 01 00    	mov    0x1ce5d(%rip),%ebx        # 226b0 <if_stack_ptr>
    5853:	8d 43 01             	lea    0x1(%rbx),%eax
    5856:	89 05 54 ce 01 00    	mov    %eax,0x1ce54(%rip)        # 226b0 <if_stack_ptr>
    585c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5860:	48 89 c7             	mov    %rax,%rdi
    5863:	e8 d9 fa ff ff       	call   5341 <is_defined>
    5868:	48 63 d3             	movslq %ebx,%rdx
    586b:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    5872:	00
    5873:	48 8d 15 a6 cc 01 00 	lea    0x1cca6(%rip),%rdx        # 22520 <if_stack>
    587a:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
    587d:	8b 05 2d ce 01 00    	mov    0x1ce2d(%rip),%eax        # 226b0 <if_stack_ptr>
    5883:	83 e8 01             	sub    $0x1,%eax
    5886:	48 98                	cltq
    5888:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    588f:	00
    5890:	48 8d 05 89 cc 01 00 	lea    0x1cc89(%rip),%rax        # 22520 <if_stack>
    5897:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    589a:	85 c0                	test   %eax,%eax
    589c:	0f 85 a5 0a 00 00    	jne    6347 <yylex+0xf93>
    58a2:	c7 05 38 ce 01 00 07 	movl   $0x7,0x1ce38(%rip)        # 226e4 <yy_start>
    58a9:	00 00 00
    58ac:	e9 96 0a 00 00       	jmp    6347 <yylex+0xf93>
    58b1:	48 8b 05 48 c8 01 00 	mov    0x1c848(%rip),%rax        # 22100 <yytext>
    58b8:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    58bc:	48 8d 0d 73 45 01 00 	lea    0x14573(%rip),%rcx        # 19e36 <yy_chk+0x2b6>
    58c3:	48 89 ce             	mov    %rcx,%rsi
    58c6:	48 89 c7             	mov    %rax,%rdi
    58c9:	b8 00 00 00 00       	mov    $0x0,%eax
    58ce:	e8 0d cc ff ff       	call   24e0 <__isoc99_sscanf@plt>
    58d3:	8b 05 d7 cd 01 00    	mov    0x1cdd7(%rip),%eax        # 226b0 <if_stack_ptr>
    58d9:	85 c0                	test   %eax,%eax
    58db:	7e 4a                	jle    5927 <yylex+0x573>
    58dd:	8b 05 cd cd 01 00    	mov    0x1cdcd(%rip),%eax        # 226b0 <if_stack_ptr>
    58e3:	83 e8 01             	sub    $0x1,%eax
    58e6:	48 98                	cltq
    58e8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    58ef:	00
    58f0:	48 8d 05 29 cc 01 00 	lea    0x1cc29(%rip),%rax        # 22520 <if_stack>
    58f7:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    58fa:	85 c0                	test   %eax,%eax
    58fc:	75 29                	jne    5927 <yylex+0x573>
    58fe:	8b 05 ac cd 01 00    	mov    0x1cdac(%rip),%eax        # 226b0 <if_stack_ptr>
    5904:	8d 50 01             	lea    0x1(%rax),%edx
    5907:	89 15 a3 cd 01 00    	mov    %edx,0x1cda3(%rip)        # 226b0 <if_stack_ptr>
    590d:	48 98                	cltq
    590f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5916:	00
    5917:	48 8d 05 02 cc 01 00 	lea    0x1cc02(%rip),%rax        # 22520 <if_stack>
    591e:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
    5925:	eb 37                	jmp    595e <yylex+0x5aa>
    5927:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    592b:	48 89 c7             	mov    %rax,%rdi
    592e:	e8 0e fa ff ff       	call   5341 <is_defined>
    5933:	85 c0                	test   %eax,%eax
    5935:	0f 94 c1             	sete   %cl
    5938:	8b 05 72 cd 01 00    	mov    0x1cd72(%rip),%eax        # 226b0 <if_stack_ptr>
    593e:	8d 50 01             	lea    0x1(%rax),%edx
    5941:	89 15 69 cd 01 00    	mov    %edx,0x1cd69(%rip)        # 226b0 <if_stack_ptr>
    5947:	0f b6 d1             	movzbl %cl,%edx
    594a:	48 98                	cltq
    594c:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    5953:	00
    5954:	48 8d 05 c5 cb 01 00 	lea    0x1cbc5(%rip),%rax        # 22520 <if_stack>
    595b:	89 14 01             	mov    %edx,(%rcx,%rax,1)
    595e:	8b 05 4c cd 01 00    	mov    0x1cd4c(%rip),%eax        # 226b0 <if_stack_ptr>
    5964:	83 e8 01             	sub    $0x1,%eax
    5967:	48 98                	cltq
    5969:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5970:	00
    5971:	48 8d 05 a8 cb 01 00 	lea    0x1cba8(%rip),%rax        # 22520 <if_stack>
    5978:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    597b:	85 c0                	test   %eax,%eax
    597d:	0f 85 ca 09 00 00    	jne    634d <yylex+0xf99>
    5983:	c7 05 57 cd 01 00 07 	movl   $0x7,0x1cd57(%rip)        # 226e4 <yy_start>
    598a:	00 00 00
    598d:	e9 bb 09 00 00       	jmp    634d <yylex+0xf99>
    5992:	8b 05 18 cd 01 00    	mov    0x1cd18(%rip),%eax        # 226b0 <if_stack_ptr>
    5998:	85 c0                	test   %eax,%eax
    599a:	0f 8e b3 09 00 00    	jle    6353 <yylex+0xf9f>
    59a0:	8b 05 0a cd 01 00    	mov    0x1cd0a(%rip),%eax        # 226b0 <if_stack_ptr>
    59a6:	83 e8 01             	sub    $0x1,%eax
    59a9:	48 98                	cltq
    59ab:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    59b2:	00
    59b3:	48 8d 05 66 cb 01 00 	lea    0x1cb66(%rip),%rax        # 22520 <if_stack>
    59ba:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    59bd:	83 f8 01             	cmp    $0x1,%eax
    59c0:	75 0f                	jne    59d1 <yylex+0x61d>
    59c2:	c7 05 18 cd 01 00 07 	movl   $0x7,0x1cd18(%rip)        # 226e4 <yy_start>
    59c9:	00 00 00
    59cc:	e9 82 09 00 00       	jmp    6353 <yylex+0xf9f>
    59d1:	8b 05 d9 cc 01 00    	mov    0x1ccd9(%rip),%eax        # 226b0 <if_stack_ptr>
    59d7:	83 f8 01             	cmp    $0x1,%eax
    59da:	7e 21                	jle    59fd <yylex+0x649>
    59dc:	8b 05 ce cc 01 00    	mov    0x1ccce(%rip),%eax        # 226b0 <if_stack_ptr>
    59e2:	83 e8 02             	sub    $0x2,%eax
    59e5:	48 98                	cltq
    59e7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    59ee:	00
    59ef:	48 8d 05 2a cb 01 00 	lea    0x1cb2a(%rip),%rax        # 22520 <if_stack>
    59f6:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    59f9:	85 c0                	test   %eax,%eax
    59fb:	74 0f                	je     5a0c <yylex+0x658>
    59fd:	c7 05 dd cc 01 00 01 	movl   $0x1,0x1ccdd(%rip)        # 226e4 <yy_start>
    5a04:	00 00 00
    5a07:	e9 47 09 00 00       	jmp    6353 <yylex+0xf9f>
    5a0c:	e9 42 09 00 00       	jmp    6353 <yylex+0xf9f>
    5a11:	8b 05 99 cc 01 00    	mov    0x1cc99(%rip),%eax        # 226b0 <if_stack_ptr>
    5a17:	85 c0                	test   %eax,%eax
    5a19:	0f 8e 3a 09 00 00    	jle    6359 <yylex+0xfa5>
    5a1f:	8b 05 8b cc 01 00    	mov    0x1cc8b(%rip),%eax        # 226b0 <if_stack_ptr>
    5a25:	83 e8 01             	sub    $0x1,%eax
    5a28:	89 05 82 cc 01 00    	mov    %eax,0x1cc82(%rip)        # 226b0 <if_stack_ptr>
    5a2e:	8b 05 7c cc 01 00    	mov    0x1cc7c(%rip),%eax        # 226b0 <if_stack_ptr>
    5a34:	85 c0                	test   %eax,%eax
    5a36:	74 26                	je     5a5e <yylex+0x6aa>
    5a38:	8b 05 72 cc 01 00    	mov    0x1cc72(%rip),%eax        # 226b0 <if_stack_ptr>
    5a3e:	83 e8 01             	sub    $0x1,%eax
    5a41:	48 98                	cltq
    5a43:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5a4a:	00
    5a4b:	48 8d 05 ce ca 01 00 	lea    0x1cace(%rip),%rax        # 22520 <if_stack>
    5a52:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5a55:	83 f8 01             	cmp    $0x1,%eax
    5a58:	0f 85 fb 08 00 00    	jne    6359 <yylex+0xfa5>
    5a5e:	c7 05 7c cc 01 00 01 	movl   $0x1,0x1cc7c(%rip)        # 226e4 <yy_start>
    5a65:	00 00 00
    5a68:	e9 ec 08 00 00       	jmp    6359 <yylex+0xfa5>
    5a6d:	8b 05 3d cc 01 00    	mov    0x1cc3d(%rip),%eax        # 226b0 <if_stack_ptr>
    5a73:	83 c0 01             	add    $0x1,%eax
    5a76:	89 05 34 cc 01 00    	mov    %eax,0x1cc34(%rip)        # 226b0 <if_stack_ptr>
    5a7c:	e9 eb 08 00 00       	jmp    636c <yylex+0xfb8>
    5a81:	8b 05 29 cc 01 00    	mov    0x1cc29(%rip),%eax        # 226b0 <if_stack_ptr>
    5a87:	83 c0 01             	add    $0x1,%eax
    5a8a:	89 05 20 cc 01 00    	mov    %eax,0x1cc20(%rip)        # 226b0 <if_stack_ptr>
    5a90:	e9 d7 08 00 00       	jmp    636c <yylex+0xfb8>
    5a95:	8b 05 15 cc 01 00    	mov    0x1cc15(%rip),%eax        # 226b0 <if_stack_ptr>
    5a9b:	85 c0                	test   %eax,%eax
    5a9d:	0f 8e bc 08 00 00    	jle    635f <yylex+0xfab>
    5aa3:	8b 05 07 cc 01 00    	mov    0x1cc07(%rip),%eax        # 226b0 <if_stack_ptr>
    5aa9:	83 e8 01             	sub    $0x1,%eax
    5aac:	48 98                	cltq
    5aae:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5ab5:	00
    5ab6:	48 8d 05 63 ca 01 00 	lea    0x1ca63(%rip),%rax        # 22520 <if_stack>
    5abd:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5ac0:	85 c0                	test   %eax,%eax
    5ac2:	0f 85 97 08 00 00    	jne    635f <yylex+0xfab>
    5ac8:	8b 05 e2 cb 01 00    	mov    0x1cbe2(%rip),%eax        # 226b0 <if_stack_ptr>
    5ace:	83 f8 01             	cmp    $0x1,%eax
    5ad1:	7e 21                	jle    5af4 <yylex+0x740>
    5ad3:	8b 05 d7 cb 01 00    	mov    0x1cbd7(%rip),%eax        # 226b0 <if_stack_ptr>
    5ad9:	83 e8 02             	sub    $0x2,%eax
    5adc:	48 98                	cltq
    5ade:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5ae5:	00
    5ae6:	48 8d 05 33 ca 01 00 	lea    0x1ca33(%rip),%rax        # 22520 <if_stack>
    5aed:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5af0:	85 c0                	test   %eax,%eax
    5af2:	74 0f                	je     5b03 <yylex+0x74f>
    5af4:	c7 05 e6 cb 01 00 01 	movl   $0x1,0x1cbe6(%rip)        # 226e4 <yy_start>
    5afb:	00 00 00
    5afe:	e9 5c 08 00 00       	jmp    635f <yylex+0xfab>
    5b03:	e9 57 08 00 00       	jmp    635f <yylex+0xfab>
    5b08:	8b 05 a2 cb 01 00    	mov    0x1cba2(%rip),%eax        # 226b0 <if_stack_ptr>
    5b0e:	85 c0                	test   %eax,%eax
    5b10:	7e 0f                	jle    5b21 <yylex+0x76d>
    5b12:	8b 05 98 cb 01 00    	mov    0x1cb98(%rip),%eax        # 226b0 <if_stack_ptr>
    5b18:	83 e8 01             	sub    $0x1,%eax
    5b1b:	89 05 8f cb 01 00    	mov    %eax,0x1cb8f(%rip)        # 226b0 <if_stack_ptr>
    5b21:	8b 05 89 cb 01 00    	mov    0x1cb89(%rip),%eax        # 226b0 <if_stack_ptr>
    5b27:	85 c0                	test   %eax,%eax
    5b29:	74 26                	je     5b51 <yylex+0x79d>
    5b2b:	8b 05 7f cb 01 00    	mov    0x1cb7f(%rip),%eax        # 226b0 <if_stack_ptr>
    5b31:	83 e8 01             	sub    $0x1,%eax
    5b34:	48 98                	cltq
    5b36:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5b3d:	00
    5b3e:	48 8d 05 db c9 01 00 	lea    0x1c9db(%rip),%rax        # 22520 <if_stack>
    5b45:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5b48:	83 f8 01             	cmp    $0x1,%eax
    5b4b:	0f 85 14 08 00 00    	jne    6365 <yylex+0xfb1>
    5b51:	c7 05 89 cb 01 00 01 	movl   $0x1,0x1cb89(%rip)        # 226e4 <yy_start>
    5b58:	00 00 00
    5b5b:	e9 05 08 00 00       	jmp    6365 <yylex+0xfb1>
    5b60:	b8 7d 00 00 00       	mov    $0x7d,%eax
    5b65:	e9 07 08 00 00       	jmp    6371 <yylex+0xfbd>
    5b6a:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    5b71:	00 00 00
    5b74:	eb 2f                	jmp    5ba5 <yylex+0x7f1>
    5b76:	48 8b 15 83 c5 01 00 	mov    0x1c583(%rip),%rdx        # 22100 <yytext>
    5b7d:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5b83:	48 98                	cltq
    5b85:	48 01 d0             	add    %rdx,%rax
    5b88:	0f b6 00             	movzbl (%rax),%eax
    5b8b:	3c 0a                	cmp    $0xa,%al
    5b8d:	75 0f                	jne    5b9e <yylex+0x7ea>
    5b8f:	8b 05 9b c4 01 00    	mov    0x1c49b(%rip),%eax        # 22030 <line_num>
    5b95:	83 c0 01             	add    $0x1,%eax
    5b98:	89 05 92 c4 01 00    	mov    %eax,0x1c492(%rip)        # 22030 <line_num>
    5b9e:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    5ba5:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    5bab:	48 63 d8             	movslq %eax,%rbx
    5bae:	48 8b 05 4b c5 01 00 	mov    0x1c54b(%rip),%rax        # 22100 <yytext>
    5bb5:	48 89 c7             	mov    %rax,%rdi
    5bb8:	e8 d3 c7 ff ff       	call   2390 <strlen@plt>
    5bbd:	48 39 c3             	cmp    %rax,%rbx
    5bc0:	72 b4                	jb     5b76 <yylex+0x7c2>
    5bc2:	e9 a5 07 00 00       	jmp    636c <yylex+0xfb8>
    5bc7:	8b 05 63 c4 01 00    	mov    0x1c463(%rip),%eax        # 22030 <line_num>
    5bcd:	83 c0 01             	add    $0x1,%eax
    5bd0:	89 05 5a c4 01 00    	mov    %eax,0x1c45a(%rip)        # 22030 <line_num>
    5bd6:	e9 91 07 00 00       	jmp    636c <yylex+0xfb8>
    5bdb:	b8 24 01 00 00       	mov    $0x124,%eax
    5be0:	e9 8c 07 00 00       	jmp    6371 <yylex+0xfbd>
    5be5:	b8 02 01 00 00       	mov    $0x102,%eax
    5bea:	e9 82 07 00 00       	jmp    6371 <yylex+0xfbd>
    5bef:	b8 04 01 00 00       	mov    $0x104,%eax
    5bf4:	e9 78 07 00 00       	jmp    6371 <yylex+0xfbd>
    5bf9:	b8 05 01 00 00       	mov    $0x105,%eax
    5bfe:	e9 6e 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c03:	b8 07 01 00 00       	mov    $0x107,%eax
    5c08:	e9 64 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c0d:	b8 08 01 00 00       	mov    $0x108,%eax
    5c12:	e9 5a 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c17:	c6 05 02 c5 01 00 00 	movb   $0x0,0x1c502(%rip)        # 22120 <asm_buffer>
    5c1e:	c7 05 bc ca 01 00 03 	movl   $0x3,0x1cabc(%rip)        # 226e4 <yy_start>
    5c25:	00 00 00
    5c28:	b8 15 01 00 00       	mov    $0x115,%eax
    5c2d:	e9 3f 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c32:	48 8d 05 e7 c4 01 00 	lea    0x1c4e7(%rip),%rax        # 22120 <asm_buffer>
    5c39:	48 89 c7             	mov    %rax,%rdi
    5c3c:	e8 1f c9 ff ff       	call   2560 <strdup@plt>
    5c41:	48 89 05 58 c4 01 00 	mov    %rax,0x1c458(%rip)        # 220a0 <yylval>
    5c48:	c7 05 92 ca 01 00 01 	movl   $0x1,0x1ca92(%rip)        # 226e4 <yy_start>
    5c4f:	00 00 00
    5c52:	b8 10 01 00 00       	mov    $0x110,%eax
    5c57:	e9 15 07 00 00       	jmp    6371 <yylex+0xfbd>
    5c5c:	48 8d 05 bd c4 01 00 	lea    0x1c4bd(%rip),%rax        # 22120 <asm_buffer>
    5c63:	48 89 c7             	mov    %rax,%rdi
    5c66:	e8 25 c7 ff ff       	call   2390 <strlen@plt>
    5c6b:	48 89 c3             	mov    %rax,%rbx
    5c6e:	48 8b 05 8b c4 01 00 	mov    0x1c48b(%rip),%rax        # 22100 <yytext>
    5c75:	48 89 c7             	mov    %rax,%rdi
    5c78:	e8 13 c7 ff ff       	call   2390 <strlen@plt>
    5c7d:	48 01 d8             	add    %rbx,%rax
    5c80:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    5c86:	77 1e                	ja     5ca6 <yylex+0x8f2>
    5c88:	48 8b 05 71 c4 01 00 	mov    0x1c471(%rip),%rax        # 22100 <yytext>
    5c8f:	48 89 c6             	mov    %rax,%rsi
    5c92:	48 8d 05 87 c4 01 00 	lea    0x1c487(%rip),%rax        # 22120 <asm_buffer>
    5c99:	48 89 c7             	mov    %rax,%rdi
    5c9c:	e8 7f c8 ff ff       	call   2520 <strcat@plt>
    5ca1:	e9 c6 06 00 00       	jmp    636c <yylex+0xfb8>
    5ca6:	48 8b 05 b3 c3 01 00 	mov    0x1c3b3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    5cad:	48 89 c1             	mov    %rax,%rcx
    5cb0:	ba 14 00 00 00       	mov    $0x14,%edx
    5cb5:	be 01 00 00 00       	mov    $0x1,%esi
    5cba:	48 8d 05 84 41 01 00 	lea    0x14184(%rip),%rax        # 19e45 <yy_chk+0x2c5>
    5cc1:	48 89 c7             	mov    %rax,%rdi
    5cc4:	e8 87 c8 ff ff       	call   2550 <fwrite@plt>
    5cc9:	bf 01 00 00 00       	mov    $0x1,%edi
    5cce:	e8 6d c8 ff ff       	call   2540 <exit@plt>
    5cd3:	b8 14 01 00 00       	mov    $0x114,%eax
    5cd8:	e9 94 06 00 00       	jmp    6371 <yylex+0xfbd>
    5cdd:	b8 16 01 00 00       	mov    $0x116,%eax
    5ce2:	e9 8a 06 00 00       	jmp    6371 <yylex+0xfbd>
    5ce7:	b8 12 01 00 00       	mov    $0x112,%eax
    5cec:	e9 80 06 00 00       	jmp    6371 <yylex+0xfbd>
    5cf1:	b8 03 01 00 00       	mov    $0x103,%eax
    5cf6:	e9 76 06 00 00       	jmp    6371 <yylex+0xfbd>
    5cfb:	b8 13 01 00 00       	mov    $0x113,%eax
    5d00:	e9 6c 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d05:	b8 1a 01 00 00       	mov    $0x11a,%eax
    5d0a:	e9 62 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d0f:	b8 19 01 00 00       	mov    $0x119,%eax
    5d14:	e9 58 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d19:	b8 06 01 00 00       	mov    $0x106,%eax
    5d1e:	e9 4e 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d23:	b8 1b 01 00 00       	mov    $0x11b,%eax
    5d28:	e9 44 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d2d:	b8 1c 01 00 00       	mov    $0x11c,%eax
    5d32:	e9 3a 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d37:	b8 1d 01 00 00       	mov    $0x11d,%eax
    5d3c:	e9 30 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d41:	b8 21 01 00 00       	mov    $0x121,%eax
    5d46:	e9 26 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d4b:	b8 22 01 00 00       	mov    $0x122,%eax
    5d50:	e9 1c 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d55:	b8 1f 01 00 00       	mov    $0x11f,%eax
    5d5a:	e9 12 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d5f:	b8 23 01 00 00       	mov    $0x123,%eax
    5d64:	e9 08 06 00 00       	jmp    6371 <yylex+0xfbd>
    5d69:	b8 1e 01 00 00       	mov    $0x11e,%eax
    5d6e:	e9 fe 05 00 00       	jmp    6371 <yylex+0xfbd>
    5d73:	b8 25 01 00 00       	mov    $0x125,%eax
    5d78:	e9 f4 05 00 00       	jmp    6371 <yylex+0xfbd>
    5d7d:	c7 05 19 c3 01 00 2b 	movl   $0x12b,0x1c319(%rip)        # 220a0 <yylval>
    5d84:	01 00 00
    5d87:	b8 26 01 00 00       	mov    $0x126,%eax
    5d8c:	e9 e0 05 00 00       	jmp    6371 <yylex+0xfbd>
    5d91:	c7 05 05 c3 01 00 2c 	movl   $0x12c,0x1c305(%rip)        # 220a0 <yylval>
    5d98:	01 00 00
    5d9b:	b8 26 01 00 00       	mov    $0x126,%eax
    5da0:	e9 cc 05 00 00       	jmp    6371 <yylex+0xfbd>
    5da5:	c7 05 f1 c2 01 00 29 	movl   $0x129,0x1c2f1(%rip)        # 220a0 <yylval>
    5dac:	01 00 00
    5daf:	b8 26 01 00 00       	mov    $0x126,%eax
    5db4:	e9 b8 05 00 00       	jmp    6371 <yylex+0xfbd>
    5db9:	c7 05 dd c2 01 00 2a 	movl   $0x12a,0x1c2dd(%rip)        # 220a0 <yylval>
    5dc0:	01 00 00
    5dc3:	b8 26 01 00 00       	mov    $0x126,%eax
    5dc8:	e9 a4 05 00 00       	jmp    6371 <yylex+0xfbd>
    5dcd:	c7 05 c9 c2 01 00 27 	movl   $0x127,0x1c2c9(%rip)        # 220a0 <yylval>
    5dd4:	01 00 00
    5dd7:	b8 26 01 00 00       	mov    $0x126,%eax
    5ddc:	e9 90 05 00 00       	jmp    6371 <yylex+0xfbd>
    5de1:	c7 05 b5 c2 01 00 28 	movl   $0x128,0x1c2b5(%rip)        # 220a0 <yylval>
    5de8:	01 00 00
    5deb:	b8 26 01 00 00       	mov    $0x126,%eax
    5df0:	e9 7c 05 00 00       	jmp    6371 <yylex+0xfbd>
    5df5:	b8 34 01 00 00       	mov    $0x134,%eax
    5dfa:	e9 72 05 00 00       	jmp    6371 <yylex+0xfbd>
    5dff:	b8 30 01 00 00       	mov    $0x130,%eax
    5e04:	e9 68 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e09:	c7 05 8d c2 01 00 32 	movl   $0x132,0x1c28d(%rip)        # 220a0 <yylval>
    5e10:	01 00 00
    5e13:	b8 31 01 00 00       	mov    $0x131,%eax
    5e18:	e9 54 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e1d:	c7 05 79 c2 01 00 33 	movl   $0x133,0x1c279(%rip)        # 220a0 <yylval>
    5e24:	01 00 00
    5e27:	b8 31 01 00 00       	mov    $0x131,%eax
    5e2c:	e9 40 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e31:	c7 05 65 c2 01 00 35 	movl   $0x135,0x1c265(%rip)        # 220a0 <yylval>
    5e38:	01 00 00
    5e3b:	b8 31 01 00 00       	mov    $0x131,%eax
    5e40:	e9 2c 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e45:	c7 05 51 c2 01 00 2e 	movl   $0x12e,0x1c251(%rip)        # 220a0 <yylval>
    5e4c:	01 00 00
    5e4f:	b8 2d 01 00 00       	mov    $0x12d,%eax
    5e54:	e9 18 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e59:	c7 05 3d c2 01 00 2f 	movl   $0x12f,0x1c23d(%rip)        # 220a0 <yylval>
    5e60:	01 00 00
    5e63:	b8 2d 01 00 00       	mov    $0x12d,%eax
    5e68:	e9 04 05 00 00       	jmp    6371 <yylex+0xfbd>
    5e6d:	b8 0b 01 00 00       	mov    $0x10b,%eax
    5e72:	e9 fa 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e77:	b8 0c 01 00 00       	mov    $0x10c,%eax
    5e7c:	e9 f0 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e81:	b8 0d 01 00 00       	mov    $0x10d,%eax
    5e86:	e9 e6 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e8b:	b8 0e 01 00 00       	mov    $0x10e,%eax
    5e90:	e9 dc 04 00 00       	jmp    6371 <yylex+0xfbd>
    5e95:	48 8b 05 64 c2 01 00 	mov    0x1c264(%rip),%rax        # 22100 <yytext>
    5e9c:	48 89 c7             	mov    %rax,%rdi
    5e9f:	e8 6c c6 ff ff       	call   2510 <atoi@plt>
    5ea4:	89 05 f6 c1 01 00    	mov    %eax,0x1c1f6(%rip)        # 220a0 <yylval>
    5eaa:	b8 09 01 00 00       	mov    $0x109,%eax
    5eaf:	e9 bd 04 00 00       	jmp    6371 <yylex+0xfbd>
    5eb4:	48 8b 05 45 c2 01 00 	mov    0x1c245(%rip),%rax        # 22100 <yytext>
    5ebb:	48 89 c7             	mov    %rax,%rdi
    5ebe:	e8 ad c4 ff ff       	call   2370 <atof@plt>
    5ec3:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5ec7:	f3 0f 11 05 d1 c1 01 	movss  %xmm0,0x1c1d1(%rip)        # 220a0 <yylval>
    5ece:	00
    5ecf:	b8 0a 01 00 00       	mov    $0x10a,%eax
    5ed4:	e9 98 04 00 00       	jmp    6371 <yylex+0xfbd>
    5ed9:	48 8b 05 20 c2 01 00 	mov    0x1c220(%rip),%rax        # 22100 <yytext>
    5ee0:	48 89 c7             	mov    %rax,%rdi
    5ee3:	e8 78 c6 ff ff       	call   2560 <strdup@plt>
    5ee8:	48 89 05 b1 c1 01 00 	mov    %rax,0x1c1b1(%rip)        # 220a0 <yylval>
    5eef:	b8 11 01 00 00       	mov    $0x111,%eax
    5ef4:	e9 78 04 00 00       	jmp    6371 <yylex+0xfbd>
    5ef9:	48 8b 05 00 c2 01 00 	mov    0x1c200(%rip),%rax        # 22100 <yytext>
    5f00:	48 83 c0 01          	add    $0x1,%rax
    5f04:	48 89 c7             	mov    %rax,%rdi
    5f07:	e8 54 c6 ff ff       	call   2560 <strdup@plt>
    5f0c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    5f13:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f1a:	48 89 c7             	mov    %rax,%rdi
    5f1d:	e8 6e c4 ff ff       	call   2390 <strlen@plt>
    5f22:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5f26:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f2d:	48 01 d0             	add    %rdx,%rax
    5f30:	c6 00 00             	movb   $0x0,(%rax)
    5f33:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f3a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5f41:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5f48:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    5f4f:	e9 f5 00 00 00       	jmp    6049 <yylex+0xc95>
    5f54:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5f5b:	0f b6 00             	movzbl (%rax),%eax
    5f5e:	3c 5c                	cmp    $0x5c,%al
    5f60:	0f 85 ba 00 00 00    	jne    6020 <yylex+0xc6c>
    5f66:	48 83 85 68 ff ff ff 	addq   $0x1,-0x98(%rbp)
    5f6d:	01
    5f6e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5f75:	0f b6 00             	movzbl (%rax),%eax
    5f78:	0f be c0             	movsbl %al,%eax
    5f7b:	83 f8 74             	cmp    $0x74,%eax
    5f7e:	74 32                	je     5fb2 <yylex+0xbfe>
    5f80:	83 f8 74             	cmp    $0x74,%eax
    5f83:	7f 72                	jg     5ff7 <yylex+0xc43>
    5f85:	83 f8 6e             	cmp    $0x6e,%eax
    5f88:	74 11                	je     5f9b <yylex+0xbe7>
    5f8a:	83 f8 6e             	cmp    $0x6e,%eax
    5f8d:	7f 68                	jg     5ff7 <yylex+0xc43>
    5f8f:	83 f8 22             	cmp    $0x22,%eax
    5f92:	74 4c                	je     5fe0 <yylex+0xc2c>
    5f94:	83 f8 5c             	cmp    $0x5c,%eax
    5f97:	74 30                	je     5fc9 <yylex+0xc15>
    5f99:	eb 5c                	jmp    5ff7 <yylex+0xc43>
    5f9b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fa2:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5fa6:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5fad:	c6 00 0a             	movb   $0xa,(%rax)
    5fb0:	eb 64                	jmp    6016 <yylex+0xc62>
    5fb2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fb9:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5fbd:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5fc4:	c6 00 09             	movb   $0x9,(%rax)
    5fc7:	eb 4d                	jmp    6016 <yylex+0xc62>
    5fc9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fd0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5fd4:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5fdb:	c6 00 5c             	movb   $0x5c,(%rax)
    5fde:	eb 36                	jmp    6016 <yylex+0xc62>
    5fe0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5fe7:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5feb:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    5ff2:	c6 00 22             	movb   $0x22,(%rax)
    5ff5:	eb 1f                	jmp    6016 <yylex+0xc62>
    5ff7:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    5ffe:	48 8d 50 01          	lea    0x1(%rax),%rdx
    6002:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    6009:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6010:	0f b6 12             	movzbl (%rdx),%edx
    6013:	88 10                	mov    %dl,(%rax)
    6015:	90                   	nop
    6016:	48 83 85 68 ff ff ff 	addq   $0x1,-0x98(%rbp)
    601d:	01
    601e:	eb 29                	jmp    6049 <yylex+0xc95>
    6020:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6027:	48 8d 42 01          	lea    0x1(%rdx),%rax
    602b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    6032:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6039:	48 8d 48 01          	lea    0x1(%rax),%rcx
    603d:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    6044:	0f b6 12             	movzbl (%rdx),%edx
    6047:	88 10                	mov    %dl,(%rax)
    6049:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    6050:	0f b6 00             	movzbl (%rax),%eax
    6053:	84 c0                	test   %al,%al
    6055:	0f 85 f9 fe ff ff    	jne    5f54 <yylex+0xba0>
    605b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6062:	c6 00 00             	movb   $0x0,(%rax)
    6065:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    606c:	48 89 05 2d c0 01 00 	mov    %rax,0x1c02d(%rip)        # 220a0 <yylval>
    6073:	b8 0f 01 00 00       	mov    $0x10f,%eax
    6078:	e9 f4 02 00 00       	jmp    6371 <yylex+0xfbd>
    607d:	48 8b 05 7c c0 01 00 	mov    0x1c07c(%rip),%rax        # 22100 <yytext>
    6084:	0f b6 00             	movzbl (%rax),%eax
    6087:	0f be c0             	movsbl %al,%eax
    608a:	e9 e2 02 00 00       	jmp    6371 <yylex+0xfbd>
    608f:	48 8b 15 5a c0 01 00 	mov    0x1c05a(%rip),%rdx        # 220f0 <yyout>
    6096:	8b 05 44 c0 01 00    	mov    0x1c044(%rip),%eax        # 220e0 <yyleng>
    609c:	48 63 f0             	movslq %eax,%rsi
    609f:	48 8b 05 5a c0 01 00 	mov    0x1c05a(%rip),%rax        # 22100 <yytext>
    60a6:	48 89 d1             	mov    %rdx,%rcx
    60a9:	ba 01 00 00 00       	mov    $0x1,%edx
    60ae:	48 89 c7             	mov    %rax,%rdi
    60b1:	e8 9a c4 ff ff       	call   2550 <fwrite@plt>
    60b6:	e9 b1 02 00 00       	jmp    636c <yylex+0xfb8>
    60bb:	48 8b 05 3e c0 01 00 	mov    0x1c03e(%rip),%rax        # 22100 <yytext>
    60c2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    60c9:	48 29 c2             	sub    %rax,%rdx
    60cc:	89 d0                	mov    %edx,%eax
    60ce:	83 e8 01             	sub    $0x1,%eax
    60d1:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
    60d7:	0f b6 15 f2 c5 01 00 	movzbl 0x1c5f2(%rip),%edx        # 226d0 <yy_hold_char>
    60de:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    60e5:	88 10                	mov    %dl,(%rax)
    60e7:	48 8b 05 da c5 01 00 	mov    0x1c5da(%rip),%rax        # 226c8 <yy_buffer_stack>
    60ee:	48 8b 15 c3 c5 01 00 	mov    0x1c5c3(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    60f5:	48 c1 e2 03          	shl    $0x3,%rdx
    60f9:	48 01 d0             	add    %rdx,%rax
    60fc:	48 8b 00             	mov    (%rax),%rax
    60ff:	8b 40 38             	mov    0x38(%rax),%eax
    6102:	85 c0                	test   %eax,%eax
    6104:	75 62                	jne    6168 <yylex+0xdb4>
    6106:	48 8b 05 bb c5 01 00 	mov    0x1c5bb(%rip),%rax        # 226c8 <yy_buffer_stack>
    610d:	48 8b 15 a4 c5 01 00 	mov    0x1c5a4(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6114:	48 c1 e2 03          	shl    $0x3,%rdx
    6118:	48 01 d0             	add    %rdx,%rax
    611b:	48 8b 00             	mov    (%rax),%rax
    611e:	8b 40 1c             	mov    0x1c(%rax),%eax
    6121:	89 05 ad c5 01 00    	mov    %eax,0x1c5ad(%rip)        # 226d4 <yy_n_chars>
    6127:	48 8b 05 9a c5 01 00 	mov    0x1c59a(%rip),%rax        # 226c8 <yy_buffer_stack>
    612e:	48 8b 15 83 c5 01 00 	mov    0x1c583(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6135:	48 c1 e2 03          	shl    $0x3,%rdx
    6139:	48 01 d0             	add    %rdx,%rax
    613c:	48 8b 00             	mov    (%rax),%rax
    613f:	48 8b 15 a2 bf 01 00 	mov    0x1bfa2(%rip),%rdx        # 220e8 <yyin>
    6146:	48 89 10             	mov    %rdx,(%rax)
    6149:	48 8b 05 78 c5 01 00 	mov    0x1c578(%rip),%rax        # 226c8 <yy_buffer_stack>
    6150:	48 8b 15 61 c5 01 00 	mov    0x1c561(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6157:	48 c1 e2 03          	shl    $0x3,%rdx
    615b:	48 01 d0             	add    %rdx,%rax
    615e:	48 8b 00             	mov    (%rax),%rax
    6161:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%rax)
    6168:	48 8b 05 59 c5 01 00 	mov    0x1c559(%rip),%rax        # 226c8 <yy_buffer_stack>
    616f:	48 8b 15 42 c5 01 00 	mov    0x1c542(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6176:	48 c1 e2 03          	shl    $0x3,%rdx
    617a:	48 01 d0             	add    %rdx,%rax
    617d:	48 8b 00             	mov    (%rax),%rax
    6180:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6184:	8b 05 4a c5 01 00    	mov    0x1c54a(%rip),%eax        # 226d4 <yy_n_chars>
    618a:	48 98                	cltq
    618c:	48 01 c2             	add    %rax,%rdx
    618f:	48 8b 05 42 c5 01 00 	mov    0x1c542(%rip),%rax        # 226d8 <yy_c_buf_p>
    6196:	48 39 c2             	cmp    %rax,%rdx
    6199:	0f 82 92 00 00 00    	jb     6231 <yylex+0xe7d>
    619f:	48 8b 15 5a bf 01 00 	mov    0x1bf5a(%rip),%rdx        # 22100 <yytext>
    61a6:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    61ac:	48 98                	cltq
    61ae:	48 01 d0             	add    %rdx,%rax
    61b1:	48 89 05 20 c5 01 00 	mov    %rax,0x1c520(%rip)        # 226d8 <yy_c_buf_p>
    61b8:	e8 23 08 00 00       	call   69e0 <yy_get_previous_state>
    61bd:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    61c3:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    61c9:	89 c7                	mov    %eax,%edi
    61cb:	e8 42 09 00 00       	call   6b12 <yy_try_NUL_trans>
    61d0:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    61d6:	48 8b 05 23 bf 01 00 	mov    0x1bf23(%rip),%rax        # 22100 <yytext>
    61dd:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    61e4:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
    61eb:	74 31                	je     621e <yylex+0xe6a>
    61ed:	48 8b 05 e4 c4 01 00 	mov    0x1c4e4(%rip),%rax        # 226d8 <yy_c_buf_p>
    61f4:	48 83 c0 01          	add    $0x1,%rax
    61f8:	48 89 05 d9 c4 01 00 	mov    %rax,0x1c4d9(%rip)        # 226d8 <yy_c_buf_p>
    61ff:	48 8b 05 d2 c4 01 00 	mov    0x1c4d2(%rip),%rax        # 226d8 <yy_c_buf_p>
    6206:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    620d:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    6213:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    6219:	e9 ad f2 ff ff       	jmp    54cb <yylex+0x117>
    621e:	48 8b 05 b3 c4 01 00 	mov    0x1c4b3(%rip),%rax        # 226d8 <yy_c_buf_p>
    6225:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    622c:	e9 dc f3 ff ff       	jmp    560d <yylex+0x259>
    6231:	e8 55 01 00 00       	call   638b <yy_get_next_buffer>
    6236:	83 f8 02             	cmp    $0x2,%eax
    6239:	0f 84 93 00 00 00    	je     62d2 <yylex+0xf1e>
    623f:	83 f8 02             	cmp    $0x2,%eax
    6242:	0f 8f 23 01 00 00    	jg     636b <yylex+0xfb7>
    6248:	85 c0                	test   %eax,%eax
    624a:	74 41                	je     628d <yylex+0xed9>
    624c:	83 f8 01             	cmp    $0x1,%eax
    624f:	0f 85 16 01 00 00    	jne    636b <yylex+0xfb7>
    6255:	c7 05 89 c4 01 00 00 	movl   $0x0,0x1c489(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    625c:	00 00 00
    625f:	48 8b 05 9a be 01 00 	mov    0x1be9a(%rip),%rax        # 22100 <yytext>
    6266:	48 89 05 6b c4 01 00 	mov    %rax,0x1c46b(%rip)        # 226d8 <yy_c_buf_p>
    626d:	8b 05 71 c4 01 00    	mov    0x1c471(%rip),%eax        # 226e4 <yy_start>
    6273:	83 e8 01             	sub    $0x1,%eax
    6276:	89 c2                	mov    %eax,%edx
    6278:	c1 ea 1f             	shr    $0x1f,%edx
    627b:	01 d0                	add    %edx,%eax
    627d:	d1 f8                	sar    $1,%eax
    627f:	83 c0 42             	add    $0x42,%eax
    6282:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    6288:	e9 29 f4 ff ff       	jmp    56b6 <yylex+0x302>
    628d:	48 8b 15 6c be 01 00 	mov    0x1be6c(%rip),%rdx        # 22100 <yytext>
    6294:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    629a:	48 98                	cltq
    629c:	48 01 d0             	add    %rdx,%rax
    629f:	48 89 05 32 c4 01 00 	mov    %rax,0x1c432(%rip)        # 226d8 <yy_c_buf_p>
    62a6:	e8 35 07 00 00       	call   69e0 <yy_get_previous_state>
    62ab:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    62b1:	48 8b 05 20 c4 01 00 	mov    0x1c420(%rip),%rax        # 226d8 <yy_c_buf_p>
    62b8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    62bf:	48 8b 05 3a be 01 00 	mov    0x1be3a(%rip),%rax        # 22100 <yytext>
    62c6:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    62cd:	e9 f9 f1 ff ff       	jmp    54cb <yylex+0x117>
    62d2:	48 8b 05 ef c3 01 00 	mov    0x1c3ef(%rip),%rax        # 226c8 <yy_buffer_stack>
    62d9:	48 8b 15 d8 c3 01 00 	mov    0x1c3d8(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    62e0:	48 c1 e2 03          	shl    $0x3,%rdx
    62e4:	48 01 d0             	add    %rdx,%rax
    62e7:	48 8b 00             	mov    (%rax),%rax
    62ea:	48 8b 50 08          	mov    0x8(%rax),%rdx
    62ee:	8b 05 e0 c3 01 00    	mov    0x1c3e0(%rip),%eax        # 226d4 <yy_n_chars>
    62f4:	48 98                	cltq
    62f6:	48 01 d0             	add    %rdx,%rax
    62f9:	48 89 05 d8 c3 01 00 	mov    %rax,0x1c3d8(%rip)        # 226d8 <yy_c_buf_p>
    6300:	e8 db 06 00 00       	call   69e0 <yy_get_previous_state>
    6305:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    630b:	48 8b 05 c6 c3 01 00 	mov    0x1c3c6(%rip),%rax        # 226d8 <yy_c_buf_p>
    6312:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    6319:	48 8b 05 e0 bd 01 00 	mov    0x1bde0(%rip),%rax        # 22100 <yytext>
    6320:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6327:	e9 e1 f2 ff ff       	jmp    560d <yylex+0x259>
    632c:	48 8d 05 2d 3b 01 00 	lea    0x13b2d(%rip),%rax        # 19e60 <yy_chk+0x2e0>
    6333:	48 89 c7             	mov    %rax,%rdi
    6336:	e8 c9 15 00 00       	call   7904 <yy_fatal_error>
    633b:	90                   	nop
    633c:	e9 52 f1 ff ff       	jmp    5493 <yylex+0xdf>
    6341:	90                   	nop
    6342:	e9 4c f1 ff ff       	jmp    5493 <yylex+0xdf>
    6347:	90                   	nop
    6348:	e9 46 f1 ff ff       	jmp    5493 <yylex+0xdf>
    634d:	90                   	nop
    634e:	e9 40 f1 ff ff       	jmp    5493 <yylex+0xdf>
    6353:	90                   	nop
    6354:	e9 3a f1 ff ff       	jmp    5493 <yylex+0xdf>
    6359:	90                   	nop
    635a:	e9 34 f1 ff ff       	jmp    5493 <yylex+0xdf>
    635f:	90                   	nop
    6360:	e9 2e f1 ff ff       	jmp    5493 <yylex+0xdf>
    6365:	90                   	nop
    6366:	e9 28 f1 ff ff       	jmp    5493 <yylex+0xdf>
    636b:	90                   	nop
    636c:	e9 22 f1 ff ff       	jmp    5493 <yylex+0xdf>
    6371:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6375:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    637c:	00 00
    637e:	74 05                	je     6385 <yylex+0xfd1>
    6380:	e8 1b c0 ff ff       	call   23a0 <__stack_chk_fail@plt>
    6385:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6389:	c9                   	leave
    638a:	c3                   	ret

000000000000638b <yy_get_next_buffer>:
    638b:	f3 0f 1e fa          	endbr64
    638f:	55                   	push   %rbp
    6390:	48 89 e5             	mov    %rsp,%rbp
    6393:	53                   	push   %rbx
    6394:	48 83 ec 48          	sub    $0x48,%rsp
    6398:	48 8b 05 29 c3 01 00 	mov    0x1c329(%rip),%rax        # 226c8 <yy_buffer_stack>
    639f:	48 8b 15 12 c3 01 00 	mov    0x1c312(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    63a6:	48 c1 e2 03          	shl    $0x3,%rdx
    63aa:	48 01 d0             	add    %rdx,%rax
    63ad:	48 8b 00             	mov    (%rax),%rax
    63b0:	48 8b 40 08          	mov    0x8(%rax),%rax
    63b4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    63b8:	48 8b 05 41 bd 01 00 	mov    0x1bd41(%rip),%rax        # 22100 <yytext>
    63bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    63c3:	48 8b 05 fe c2 01 00 	mov    0x1c2fe(%rip),%rax        # 226c8 <yy_buffer_stack>
    63ca:	48 8b 15 e7 c2 01 00 	mov    0x1c2e7(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    63d1:	48 c1 e2 03          	shl    $0x3,%rdx
    63d5:	48 01 d0             	add    %rdx,%rax
    63d8:	48 8b 00             	mov    (%rax),%rax
    63db:	48 8b 40 08          	mov    0x8(%rax),%rax
    63df:	8b 15 ef c2 01 00    	mov    0x1c2ef(%rip),%edx        # 226d4 <yy_n_chars>
    63e5:	48 63 d2             	movslq %edx,%rdx
    63e8:	48 83 c2 01          	add    $0x1,%rdx
    63ec:	48 01 c2             	add    %rax,%rdx
    63ef:	48 8b 05 e2 c2 01 00 	mov    0x1c2e2(%rip),%rax        # 226d8 <yy_c_buf_p>
    63f6:	48 39 c2             	cmp    %rax,%rdx
    63f9:	73 0f                	jae    640a <yy_get_next_buffer+0x7f>
    63fb:	48 8d 05 ae 3b 01 00 	lea    0x13bae(%rip),%rax        # 19fb0 <yy_chk+0x430>
    6402:	48 89 c7             	mov    %rax,%rdi
    6405:	e8 fa 14 00 00       	call   7904 <yy_fatal_error>
    640a:	48 8b 05 b7 c2 01 00 	mov    0x1c2b7(%rip),%rax        # 226c8 <yy_buffer_stack>
    6411:	48 8b 15 a0 c2 01 00 	mov    0x1c2a0(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6418:	48 c1 e2 03          	shl    $0x3,%rdx
    641c:	48 01 d0             	add    %rdx,%rax
    641f:	48 8b 00             	mov    (%rax),%rax
    6422:	8b 40 34             	mov    0x34(%rax),%eax
    6425:	85 c0                	test   %eax,%eax
    6427:	75 2b                	jne    6454 <yy_get_next_buffer+0xc9>
    6429:	48 8b 15 a8 c2 01 00 	mov    0x1c2a8(%rip),%rdx        # 226d8 <yy_c_buf_p>
    6430:	48 8b 05 c9 bc 01 00 	mov    0x1bcc9(%rip),%rax        # 22100 <yytext>
    6437:	48 29 c2             	sub    %rax,%rdx
    643a:	48 83 fa 01          	cmp    $0x1,%rdx
    643e:	75 0a                	jne    644a <yy_get_next_buffer+0xbf>
    6440:	b8 01 00 00 00       	mov    $0x1,%eax
    6445:	e9 90 05 00 00       	jmp    69da <yy_get_next_buffer+0x64f>
    644a:	b8 02 00 00 00       	mov    $0x2,%eax
    644f:	e9 86 05 00 00       	jmp    69da <yy_get_next_buffer+0x64f>
    6454:	48 8b 15 7d c2 01 00 	mov    0x1c27d(%rip),%rdx        # 226d8 <yy_c_buf_p>
    645b:	48 8b 05 9e bc 01 00 	mov    0x1bc9e(%rip),%rax        # 22100 <yytext>
    6462:	48 29 c2             	sub    %rax,%rdx
    6465:	89 d0                	mov    %edx,%eax
    6467:	83 e8 01             	sub    $0x1,%eax
    646a:	89 45 c8             	mov    %eax,-0x38(%rbp)
    646d:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    6474:	eb 21                	jmp    6497 <yy_get_next_buffer+0x10c>
    6476:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    647a:	48 8d 42 01          	lea    0x1(%rdx),%rax
    647e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6482:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6486:	48 8d 48 01          	lea    0x1(%rax),%rcx
    648a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    648e:	0f b6 12             	movzbl (%rdx),%edx
    6491:	88 10                	mov    %dl,(%rax)
    6493:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    6497:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    649a:	3b 45 c8             	cmp    -0x38(%rbp),%eax
    649d:	7c d7                	jl     6476 <yy_get_next_buffer+0xeb>
    649f:	48 8b 05 22 c2 01 00 	mov    0x1c222(%rip),%rax        # 226c8 <yy_buffer_stack>
    64a6:	48 8b 15 0b c2 01 00 	mov    0x1c20b(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    64ad:	48 c1 e2 03          	shl    $0x3,%rdx
    64b1:	48 01 d0             	add    %rdx,%rax
    64b4:	48 8b 00             	mov    (%rax),%rax
    64b7:	8b 40 38             	mov    0x38(%rax),%eax
    64ba:	83 f8 02             	cmp    $0x2,%eax
    64bd:	75 30                	jne    64ef <yy_get_next_buffer+0x164>
    64bf:	c7 05 0b c2 01 00 00 	movl   $0x0,0x1c20b(%rip)        # 226d4 <yy_n_chars>
    64c6:	00 00 00
    64c9:	48 8b 05 f8 c1 01 00 	mov    0x1c1f8(%rip),%rax        # 226c8 <yy_buffer_stack>
    64d0:	48 8b 15 e1 c1 01 00 	mov    0x1c1e1(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    64d7:	48 c1 e2 03          	shl    $0x3,%rdx
    64db:	48 01 d0             	add    %rdx,%rax
    64de:	48 8b 00             	mov    (%rax),%rax
    64e1:	8b 15 ed c1 01 00    	mov    0x1c1ed(%rip),%edx        # 226d4 <yy_n_chars>
    64e7:	89 50 1c             	mov    %edx,0x1c(%rax)
    64ea:	e9 23 03 00 00       	jmp    6812 <yy_get_next_buffer+0x487>
    64ef:	48 8b 05 d2 c1 01 00 	mov    0x1c1d2(%rip),%rax        # 226c8 <yy_buffer_stack>
    64f6:	48 8b 15 bb c1 01 00 	mov    0x1c1bb(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    64fd:	48 c1 e2 03          	shl    $0x3,%rdx
    6501:	48 01 d0             	add    %rdx,%rax
    6504:	48 8b 00             	mov    (%rax),%rax
    6507:	8b 40 18             	mov    0x18(%rax),%eax
    650a:	2b 45 c8             	sub    -0x38(%rbp),%eax
    650d:	83 e8 01             	sub    $0x1,%eax
    6510:	89 45 bc             	mov    %eax,-0x44(%rbp)
    6513:	e9 10 01 00 00       	jmp    6628 <yy_get_next_buffer+0x29d>
    6518:	48 8b 05 a9 c1 01 00 	mov    0x1c1a9(%rip),%rax        # 226c8 <yy_buffer_stack>
    651f:	48 8b 15 92 c1 01 00 	mov    0x1c192(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6526:	48 c1 e2 03          	shl    $0x3,%rdx
    652a:	48 01 d0             	add    %rdx,%rax
    652d:	48 8b 00             	mov    (%rax),%rax
    6530:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6534:	48 8b 15 9d c1 01 00 	mov    0x1c19d(%rip),%rdx        # 226d8 <yy_c_buf_p>
    653b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    653f:	48 8b 40 08          	mov    0x8(%rax),%rax
    6543:	48 29 c2             	sub    %rax,%rdx
    6546:	89 55 cc             	mov    %edx,-0x34(%rbp)
    6549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    654d:	8b 40 20             	mov    0x20(%rax),%eax
    6550:	85 c0                	test   %eax,%eax
    6552:	74 71                	je     65c5 <yy_get_next_buffer+0x23a>
    6554:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6558:	8b 40 18             	mov    0x18(%rax),%eax
    655b:	01 c0                	add    %eax,%eax
    655d:	89 45 d0             	mov    %eax,-0x30(%rbp)
    6560:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    6564:	7f 24                	jg     658a <yy_get_next_buffer+0x1ff>
    6566:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    656a:	8b 50 18             	mov    0x18(%rax),%edx
    656d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6571:	8b 40 18             	mov    0x18(%rax),%eax
    6574:	8d 48 07             	lea    0x7(%rax),%ecx
    6577:	85 c0                	test   %eax,%eax
    6579:	0f 48 c1             	cmovs  %ecx,%eax
    657c:	c1 f8 03             	sar    $0x3,%eax
    657f:	01 c2                	add    %eax,%edx
    6581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6585:	89 50 18             	mov    %edx,0x18(%rax)
    6588:	eb 11                	jmp    659b <yy_get_next_buffer+0x210>
    658a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    658e:	8b 40 18             	mov    0x18(%rax),%eax
    6591:	8d 14 00             	lea    (%rax,%rax,1),%edx
    6594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6598:	89 50 18             	mov    %edx,0x18(%rax)
    659b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    659f:	8b 40 18             	mov    0x18(%rax),%eax
    65a2:	83 c0 02             	add    $0x2,%eax
    65a5:	48 63 d0             	movslq %eax,%rdx
    65a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65ac:	48 8b 40 08          	mov    0x8(%rax),%rax
    65b0:	48 89 d6             	mov    %rdx,%rsi
    65b3:	48 89 c7             	mov    %rax,%rdi
    65b6:	e8 7a 15 00 00       	call   7b35 <yyrealloc>
    65bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65bf:	48 89 42 08          	mov    %rax,0x8(%rdx)
    65c3:	eb 0c                	jmp    65d1 <yy_get_next_buffer+0x246>
    65c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65c9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    65d0:	00
    65d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65d5:	48 8b 40 08          	mov    0x8(%rax),%rax
    65d9:	48 85 c0             	test   %rax,%rax
    65dc:	75 0f                	jne    65ed <yy_get_next_buffer+0x262>
    65de:	48 8d 05 03 3a 01 00 	lea    0x13a03(%rip),%rax        # 19fe8 <yy_chk+0x468>
    65e5:	48 89 c7             	mov    %rax,%rdi
    65e8:	e8 17 13 00 00       	call   7904 <yy_fatal_error>
    65ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65f1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    65f5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    65f8:	48 98                	cltq
    65fa:	48 01 d0             	add    %rdx,%rax
    65fd:	48 89 05 d4 c0 01 00 	mov    %rax,0x1c0d4(%rip)        # 226d8 <yy_c_buf_p>
    6604:	48 8b 05 bd c0 01 00 	mov    0x1c0bd(%rip),%rax        # 226c8 <yy_buffer_stack>
    660b:	48 8b 15 a6 c0 01 00 	mov    0x1c0a6(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6612:	48 c1 e2 03          	shl    $0x3,%rdx
    6616:	48 01 d0             	add    %rdx,%rax
    6619:	48 8b 00             	mov    (%rax),%rax
    661c:	8b 40 18             	mov    0x18(%rax),%eax
    661f:	2b 45 c8             	sub    -0x38(%rbp),%eax
    6622:	83 e8 01             	sub    $0x1,%eax
    6625:	89 45 bc             	mov    %eax,-0x44(%rbp)
    6628:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    662c:	0f 8e e6 fe ff ff    	jle    6518 <yy_get_next_buffer+0x18d>
    6632:	81 7d bc 00 20 00 00 	cmpl   $0x2000,-0x44(%rbp)
    6639:	7e 07                	jle    6642 <yy_get_next_buffer+0x2b7>
    663b:	c7 45 bc 00 20 00 00 	movl   $0x2000,-0x44(%rbp)
    6642:	48 8b 05 7f c0 01 00 	mov    0x1c07f(%rip),%rax        # 226c8 <yy_buffer_stack>
    6649:	48 8b 15 68 c0 01 00 	mov    0x1c068(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6650:	48 c1 e2 03          	shl    $0x3,%rdx
    6654:	48 01 d0             	add    %rdx,%rax
    6657:	48 8b 00             	mov    (%rax),%rax
    665a:	8b 40 24             	mov    0x24(%rax),%eax
    665d:	85 c0                	test   %eax,%eax
    665f:	0f 84 e1 00 00 00    	je     6746 <yy_get_next_buffer+0x3bb>
    6665:	c7 45 c0 2a 00 00 00 	movl   $0x2a,-0x40(%rbp)
    666c:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    6673:	eb 37                	jmp    66ac <yy_get_next_buffer+0x321>
    6675:	48 8b 05 4c c0 01 00 	mov    0x1c04c(%rip),%rax        # 226c8 <yy_buffer_stack>
    667c:	48 8b 15 35 c0 01 00 	mov    0x1c035(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6683:	48 c1 e2 03          	shl    $0x3,%rdx
    6687:	48 01 d0             	add    %rdx,%rax
    668a:	48 8b 00             	mov    (%rax),%rax
    668d:	48 8b 40 08          	mov    0x8(%rax),%rax
    6691:	8b 55 c8             	mov    -0x38(%rbp),%edx
    6694:	48 63 ca             	movslq %edx,%rcx
    6697:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    669a:	48 63 d2             	movslq %edx,%rdx
    669d:	48 01 ca             	add    %rcx,%rdx
    66a0:	48 01 d0             	add    %rdx,%rax
    66a3:	8b 55 c0             	mov    -0x40(%rbp),%edx
    66a6:	88 10                	mov    %dl,(%rax)
    66a8:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    66ac:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    66af:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    66b2:	7d 1e                	jge    66d2 <yy_get_next_buffer+0x347>
    66b4:	48 8b 05 2d ba 01 00 	mov    0x1ba2d(%rip),%rax        # 220e8 <yyin>
    66bb:	48 89 c7             	mov    %rax,%rdi
    66be:	e8 ad be ff ff       	call   2570 <getc@plt>
    66c3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    66c6:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%rbp)
    66ca:	74 06                	je     66d2 <yy_get_next_buffer+0x347>
    66cc:	83 7d c0 0a          	cmpl   $0xa,-0x40(%rbp)
    66d0:	75 a3                	jne    6675 <yy_get_next_buffer+0x2ea>
    66d2:	83 7d c0 0a          	cmpl   $0xa,-0x40(%rbp)
    66d6:	75 38                	jne    6710 <yy_get_next_buffer+0x385>
    66d8:	48 8b 05 e9 bf 01 00 	mov    0x1bfe9(%rip),%rax        # 226c8 <yy_buffer_stack>
    66df:	48 8b 15 d2 bf 01 00 	mov    0x1bfd2(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    66e6:	48 c1 e2 03          	shl    $0x3,%rdx
    66ea:	48 01 d0             	add    %rdx,%rax
    66ed:	48 8b 00             	mov    (%rax),%rax
    66f0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    66f4:	8b 45 c8             	mov    -0x38(%rbp),%eax
    66f7:	48 63 f0             	movslq %eax,%rsi
    66fa:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    66fd:	8d 50 01             	lea    0x1(%rax),%edx
    6700:	89 55 c4             	mov    %edx,-0x3c(%rbp)
    6703:	48 98                	cltq
    6705:	48 01 f0             	add    %rsi,%rax
    6708:	48 01 c8             	add    %rcx,%rax
    670b:	8b 55 c0             	mov    -0x40(%rbp),%edx
    670e:	88 10                	mov    %dl,(%rax)
    6710:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%rbp)
    6714:	75 22                	jne    6738 <yy_get_next_buffer+0x3ad>
    6716:	48 8b 05 cb b9 01 00 	mov    0x1b9cb(%rip),%rax        # 220e8 <yyin>
    671d:	48 89 c7             	mov    %rax,%rdi
    6720:	e8 0b bc ff ff       	call   2330 <ferror@plt>
    6725:	85 c0                	test   %eax,%eax
    6727:	74 0f                	je     6738 <yy_get_next_buffer+0x3ad>
    6729:	48 8d 05 e4 38 01 00 	lea    0x138e4(%rip),%rax        # 1a014 <yy_chk+0x494>
    6730:	48 89 c7             	mov    %rax,%rdi
    6733:	e8 cc 11 00 00       	call   7904 <yy_fatal_error>
    6738:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    673b:	89 05 93 bf 01 00    	mov    %eax,0x1bf93(%rip)        # 226d4 <yy_n_chars>
    6741:	e9 ab 00 00 00       	jmp    67f1 <yy_get_next_buffer+0x466>
    6746:	e8 b5 bb ff ff       	call   2300 <__errno_location@plt>
    674b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    6751:	eb 35                	jmp    6788 <yy_get_next_buffer+0x3fd>
    6753:	e8 a8 bb ff ff       	call   2300 <__errno_location@plt>
    6758:	8b 00                	mov    (%rax),%eax
    675a:	83 f8 04             	cmp    $0x4,%eax
    675d:	74 0f                	je     676e <yy_get_next_buffer+0x3e3>
    675f:	48 8d 05 ae 38 01 00 	lea    0x138ae(%rip),%rax        # 1a014 <yy_chk+0x494>
    6766:	48 89 c7             	mov    %rax,%rdi
    6769:	e8 96 11 00 00       	call   7904 <yy_fatal_error>
    676e:	e8 8d bb ff ff       	call   2300 <__errno_location@plt>
    6773:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    6779:	48 8b 05 68 b9 01 00 	mov    0x1b968(%rip),%rax        # 220e8 <yyin>
    6780:	48 89 c7             	mov    %rax,%rdi
    6783:	e8 18 bd ff ff       	call   24a0 <clearerr@plt>
    6788:	48 8b 15 59 b9 01 00 	mov    0x1b959(%rip),%rdx        # 220e8 <yyin>
    678f:	8b 45 bc             	mov    -0x44(%rbp),%eax
    6792:	48 98                	cltq
    6794:	48 8b 0d 2d bf 01 00 	mov    0x1bf2d(%rip),%rcx        # 226c8 <yy_buffer_stack>
    679b:	48 8b 35 16 bf 01 00 	mov    0x1bf16(%rip),%rsi        # 226b8 <yy_buffer_stack_top>
    67a2:	48 c1 e6 03          	shl    $0x3,%rsi
    67a6:	48 01 f1             	add    %rsi,%rcx
    67a9:	48 8b 09             	mov    (%rcx),%rcx
    67ac:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    67b0:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    67b3:	48 63 c9             	movslq %ecx,%rcx
    67b6:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    67ba:	48 89 d1             	mov    %rdx,%rcx
    67bd:	48 89 c2             	mov    %rax,%rdx
    67c0:	be 01 00 00 00       	mov    $0x1,%esi
    67c5:	e8 96 bb ff ff       	call   2360 <fread@plt>
    67ca:	89 05 04 bf 01 00    	mov    %eax,0x1bf04(%rip)        # 226d4 <yy_n_chars>
    67d0:	8b 05 fe be 01 00    	mov    0x1befe(%rip),%eax        # 226d4 <yy_n_chars>
    67d6:	85 c0                	test   %eax,%eax
    67d8:	75 17                	jne    67f1 <yy_get_next_buffer+0x466>
    67da:	48 8b 05 07 b9 01 00 	mov    0x1b907(%rip),%rax        # 220e8 <yyin>
    67e1:	48 89 c7             	mov    %rax,%rdi
    67e4:	e8 47 bb ff ff       	call   2330 <ferror@plt>
    67e9:	85 c0                	test   %eax,%eax
    67eb:	0f 85 62 ff ff ff    	jne    6753 <yy_get_next_buffer+0x3c8>
    67f1:	48 8b 05 d0 be 01 00 	mov    0x1bed0(%rip),%rax        # 226c8 <yy_buffer_stack>
    67f8:	48 8b 15 b9 be 01 00 	mov    0x1beb9(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    67ff:	48 c1 e2 03          	shl    $0x3,%rdx
    6803:	48 01 d0             	add    %rdx,%rax
    6806:	48 8b 00             	mov    (%rax),%rax
    6809:	8b 15 c5 be 01 00    	mov    0x1bec5(%rip),%edx        # 226d4 <yy_n_chars>
    680f:	89 50 1c             	mov    %edx,0x1c(%rax)
    6812:	8b 05 bc be 01 00    	mov    0x1bebc(%rip),%eax        # 226d4 <yy_n_chars>
    6818:	85 c0                	test   %eax,%eax
    681a:	75 46                	jne    6862 <yy_get_next_buffer+0x4d7>
    681c:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    6820:	75 18                	jne    683a <yy_get_next_buffer+0x4af>
    6822:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
    6829:	48 8b 05 b8 b8 01 00 	mov    0x1b8b8(%rip),%rax        # 220e8 <yyin>
    6830:	48 89 c7             	mov    %rax,%rdi
    6833:	e8 cc 06 00 00       	call   6f04 <yyrestart>
    6838:	eb 2f                	jmp    6869 <yy_get_next_buffer+0x4de>
    683a:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    6841:	48 8b 05 80 be 01 00 	mov    0x1be80(%rip),%rax        # 226c8 <yy_buffer_stack>
    6848:	48 8b 15 69 be 01 00 	mov    0x1be69(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    684f:	48 c1 e2 03          	shl    $0x3,%rdx
    6853:	48 01 d0             	add    %rdx,%rax
    6856:	48 8b 00             	mov    (%rax),%rax
    6859:	c7 40 38 02 00 00 00 	movl   $0x2,0x38(%rax)
    6860:	eb 07                	jmp    6869 <yy_get_next_buffer+0x4de>
    6862:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    6869:	8b 15 65 be 01 00    	mov    0x1be65(%rip),%edx        # 226d4 <yy_n_chars>
    686f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    6872:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    6875:	48 8b 05 4c be 01 00 	mov    0x1be4c(%rip),%rax        # 226c8 <yy_buffer_stack>
    687c:	48 8b 15 35 be 01 00 	mov    0x1be35(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6883:	48 c1 e2 03          	shl    $0x3,%rdx
    6887:	48 01 d0             	add    %rdx,%rax
    688a:	48 8b 00             	mov    (%rax),%rax
    688d:	8b 40 18             	mov    0x18(%rax),%eax
    6890:	39 c1                	cmp    %eax,%ecx
    6892:	0f 8e b2 00 00 00    	jle    694a <yy_get_next_buffer+0x5bf>
    6898:	8b 15 36 be 01 00    	mov    0x1be36(%rip),%edx        # 226d4 <yy_n_chars>
    689e:	8b 45 c8             	mov    -0x38(%rbp),%eax
    68a1:	01 c2                	add    %eax,%edx
    68a3:	8b 05 2b be 01 00    	mov    0x1be2b(%rip),%eax        # 226d4 <yy_n_chars>
    68a9:	d1 f8                	sar    $1,%eax
    68ab:	01 d0                	add    %edx,%eax
    68ad:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    68b0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    68b3:	48 63 d0             	movslq %eax,%rdx
    68b6:	48 8b 05 0b be 01 00 	mov    0x1be0b(%rip),%rax        # 226c8 <yy_buffer_stack>
    68bd:	48 8b 0d f4 bd 01 00 	mov    0x1bdf4(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    68c4:	48 c1 e1 03          	shl    $0x3,%rcx
    68c8:	48 01 c8             	add    %rcx,%rax
    68cb:	48 8b 00             	mov    (%rax),%rax
    68ce:	48 8b 40 08          	mov    0x8(%rax),%rax
    68d2:	48 8b 0d ef bd 01 00 	mov    0x1bdef(%rip),%rcx        # 226c8 <yy_buffer_stack>
    68d9:	48 8b 35 d8 bd 01 00 	mov    0x1bdd8(%rip),%rsi        # 226b8 <yy_buffer_stack_top>
    68e0:	48 c1 e6 03          	shl    $0x3,%rsi
    68e4:	48 01 f1             	add    %rsi,%rcx
    68e7:	48 8b 19             	mov    (%rcx),%rbx
    68ea:	48 89 d6             	mov    %rdx,%rsi
    68ed:	48 89 c7             	mov    %rax,%rdi
    68f0:	e8 40 12 00 00       	call   7b35 <yyrealloc>
    68f5:	48 89 43 08          	mov    %rax,0x8(%rbx)
    68f9:	48 8b 05 c8 bd 01 00 	mov    0x1bdc8(%rip),%rax        # 226c8 <yy_buffer_stack>
    6900:	48 8b 15 b1 bd 01 00 	mov    0x1bdb1(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6907:	48 c1 e2 03          	shl    $0x3,%rdx
    690b:	48 01 d0             	add    %rdx,%rax
    690e:	48 8b 00             	mov    (%rax),%rax
    6911:	48 8b 40 08          	mov    0x8(%rax),%rax
    6915:	48 85 c0             	test   %rax,%rax
    6918:	75 0f                	jne    6929 <yy_get_next_buffer+0x59e>
    691a:	48 8d 05 17 37 01 00 	lea    0x13717(%rip),%rax        # 1a038 <yy_chk+0x4b8>
    6921:	48 89 c7             	mov    %rax,%rdi
    6924:	e8 db 0f 00 00       	call   7904 <yy_fatal_error>
    6929:	48 8b 05 98 bd 01 00 	mov    0x1bd98(%rip),%rax        # 226c8 <yy_buffer_stack>
    6930:	48 8b 15 81 bd 01 00 	mov    0x1bd81(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6937:	48 c1 e2 03          	shl    $0x3,%rdx
    693b:	48 01 d0             	add    %rdx,%rax
    693e:	48 8b 00             	mov    (%rax),%rax
    6941:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    6944:	83 ea 02             	sub    $0x2,%edx
    6947:	89 50 18             	mov    %edx,0x18(%rax)
    694a:	8b 15 84 bd 01 00    	mov    0x1bd84(%rip),%edx        # 226d4 <yy_n_chars>
    6950:	8b 45 c8             	mov    -0x38(%rbp),%eax
    6953:	01 d0                	add    %edx,%eax
    6955:	89 05 79 bd 01 00    	mov    %eax,0x1bd79(%rip)        # 226d4 <yy_n_chars>
    695b:	48 8b 05 66 bd 01 00 	mov    0x1bd66(%rip),%rax        # 226c8 <yy_buffer_stack>
    6962:	48 8b 15 4f bd 01 00 	mov    0x1bd4f(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6969:	48 c1 e2 03          	shl    $0x3,%rdx
    696d:	48 01 d0             	add    %rdx,%rax
    6970:	48 8b 00             	mov    (%rax),%rax
    6973:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6977:	8b 05 57 bd 01 00    	mov    0x1bd57(%rip),%eax        # 226d4 <yy_n_chars>
    697d:	48 98                	cltq
    697f:	48 01 d0             	add    %rdx,%rax
    6982:	c6 00 00             	movb   $0x0,(%rax)
    6985:	48 8b 05 3c bd 01 00 	mov    0x1bd3c(%rip),%rax        # 226c8 <yy_buffer_stack>
    698c:	48 8b 15 25 bd 01 00 	mov    0x1bd25(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6993:	48 c1 e2 03          	shl    $0x3,%rdx
    6997:	48 01 d0             	add    %rdx,%rax
    699a:	48 8b 00             	mov    (%rax),%rax
    699d:	48 8b 40 08          	mov    0x8(%rax),%rax
    69a1:	8b 15 2d bd 01 00    	mov    0x1bd2d(%rip),%edx        # 226d4 <yy_n_chars>
    69a7:	48 63 d2             	movslq %edx,%rdx
    69aa:	48 83 c2 01          	add    $0x1,%rdx
    69ae:	48 01 d0             	add    %rdx,%rax
    69b1:	c6 00 00             	movb   $0x0,(%rax)
    69b4:	48 8b 05 0d bd 01 00 	mov    0x1bd0d(%rip),%rax        # 226c8 <yy_buffer_stack>
    69bb:	48 8b 15 f6 bc 01 00 	mov    0x1bcf6(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    69c2:	48 c1 e2 03          	shl    $0x3,%rdx
    69c6:	48 01 d0             	add    %rdx,%rax
    69c9:	48 8b 00             	mov    (%rax),%rax
    69cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    69d0:	48 89 05 29 b7 01 00 	mov    %rax,0x1b729(%rip)        # 22100 <yytext>
    69d7:	8b 45 b8             	mov    -0x48(%rbp),%eax
    69da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    69de:	c9                   	leave
    69df:	c3                   	ret

00000000000069e0 <yy_get_previous_state>:
    69e0:	f3 0f 1e fa          	endbr64
    69e4:	55                   	push   %rbp
    69e5:	48 89 e5             	mov    %rsp,%rbp
    69e8:	8b 05 f6 bc 01 00    	mov    0x1bcf6(%rip),%eax        # 226e4 <yy_start>
    69ee:	89 45 f4             	mov    %eax,-0xc(%rbp)
    69f1:	48 8b 05 08 b7 01 00 	mov    0x1b708(%rip),%rax        # 22100 <yytext>
    69f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    69fc:	e9 fb 00 00 00       	jmp    6afc <yy_get_previous_state+0x11c>
    6a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a05:	0f b6 00             	movzbl (%rax),%eax
    6a08:	84 c0                	test   %al,%al
    6a0a:	74 19                	je     6a25 <yy_get_previous_state+0x45>
    6a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a10:	0f b6 00             	movzbl (%rax),%eax
    6a13:	0f b6 c0             	movzbl %al,%eax
    6a16:	48 98                	cltq
    6a18:	48 8d 15 81 29 01 00 	lea    0x12981(%rip),%rdx        # 193a0 <yy_ec>
    6a1f:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6a23:	eb 05                	jmp    6a2a <yy_get_previous_state+0x4a>
    6a25:	b8 01 00 00 00       	mov    $0x1,%eax
    6a2a:	88 45 f3             	mov    %al,-0xd(%rbp)
    6a2d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a30:	48 98                	cltq
    6a32:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6a36:	48 8d 05 83 27 01 00 	lea    0x12783(%rip),%rax        # 191c0 <yy_accept>
    6a3d:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6a41:	66 85 c0             	test   %ax,%ax
    6a44:	74 4b                	je     6a91 <yy_get_previous_state+0xb1>
    6a46:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a49:	89 05 9d bc 01 00    	mov    %eax,0x1bc9d(%rip)        # 226ec <yy_last_accepting_state>
    6a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a53:	48 89 05 96 bc 01 00 	mov    %rax,0x1bc96(%rip)        # 226f0 <yy_last_accepting_cpos>
    6a5a:	eb 35                	jmp    6a91 <yy_get_previous_state+0xb1>
    6a5c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a5f:	48 98                	cltq
    6a61:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6a65:	48 8d 05 74 2c 01 00 	lea    0x12c74(%rip),%rax        # 196e0 <yy_def>
    6a6c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6a70:	98                   	cwtl
    6a71:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6a74:	81 7d f4 e4 00 00 00 	cmpl   $0xe4,-0xc(%rbp)
    6a7b:	7e 14                	jle    6a91 <yy_get_previous_state+0xb1>
    6a7d:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6a81:	48 98                	cltq
    6a83:	48 8d 15 16 2a 01 00 	lea    0x12a16(%rip),%rdx        # 194a0 <yy_meta>
    6a8a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6a8e:	88 45 f3             	mov    %al,-0xd(%rbp)
    6a91:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6a94:	48 98                	cltq
    6a96:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6a9a:	48 8d 05 3f 2a 01 00 	lea    0x12a3f(%rip),%rax        # 194e0 <yy_base>
    6aa1:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6aa5:	0f bf d0             	movswl %ax,%edx
    6aa8:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6aac:	01 d0                	add    %edx,%eax
    6aae:	48 98                	cltq
    6ab0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6ab4:	48 8d 05 c5 30 01 00 	lea    0x130c5(%rip),%rax        # 19b80 <yy_chk>
    6abb:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6abf:	98                   	cwtl
    6ac0:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    6ac3:	75 97                	jne    6a5c <yy_get_previous_state+0x7c>
    6ac5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6ac8:	48 98                	cltq
    6aca:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6ace:	48 8d 05 0b 2a 01 00 	lea    0x12a0b(%rip),%rax        # 194e0 <yy_base>
    6ad5:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6ad9:	0f bf d0             	movswl %ax,%edx
    6adc:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6ae0:	01 d0                	add    %edx,%eax
    6ae2:	48 98                	cltq
    6ae4:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6ae8:	48 8d 05 f1 2d 01 00 	lea    0x12df1(%rip),%rax        # 198e0 <yy_nxt>
    6aef:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6af3:	98                   	cwtl
    6af4:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6af7:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    6afc:	48 8b 05 d5 bb 01 00 	mov    0x1bbd5(%rip),%rax        # 226d8 <yy_c_buf_p>
    6b03:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    6b07:	0f 82 f4 fe ff ff    	jb     6a01 <yy_get_previous_state+0x21>
    6b0d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6b10:	5d                   	pop    %rbp
    6b11:	c3                   	ret

0000000000006b12 <yy_try_NUL_trans>:
    6b12:	f3 0f 1e fa          	endbr64
    6b16:	55                   	push   %rbp
    6b17:	48 89 e5             	mov    %rsp,%rbp
    6b1a:	89 7d ec             	mov    %edi,-0x14(%rbp)
    6b1d:	48 8b 05 b4 bb 01 00 	mov    0x1bbb4(%rip),%rax        # 226d8 <yy_c_buf_p>
    6b24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6b28:	c6 45 f3 01          	movb   $0x1,-0xd(%rbp)
    6b2c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b2f:	48 98                	cltq
    6b31:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6b35:	48 8d 05 84 26 01 00 	lea    0x12684(%rip),%rax        # 191c0 <yy_accept>
    6b3c:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6b40:	66 85 c0             	test   %ax,%ax
    6b43:	74 4b                	je     6b90 <yy_try_NUL_trans+0x7e>
    6b45:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b48:	89 05 9e bb 01 00    	mov    %eax,0x1bb9e(%rip)        # 226ec <yy_last_accepting_state>
    6b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b52:	48 89 05 97 bb 01 00 	mov    %rax,0x1bb97(%rip)        # 226f0 <yy_last_accepting_cpos>
    6b59:	eb 35                	jmp    6b90 <yy_try_NUL_trans+0x7e>
    6b5b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b5e:	48 98                	cltq
    6b60:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6b64:	48 8d 05 75 2b 01 00 	lea    0x12b75(%rip),%rax        # 196e0 <yy_def>
    6b6b:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6b6f:	98                   	cwtl
    6b70:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6b73:	81 7d ec e4 00 00 00 	cmpl   $0xe4,-0x14(%rbp)
    6b7a:	7e 14                	jle    6b90 <yy_try_NUL_trans+0x7e>
    6b7c:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6b80:	48 98                	cltq
    6b82:	48 8d 15 17 29 01 00 	lea    0x12917(%rip),%rdx        # 194a0 <yy_meta>
    6b89:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    6b8d:	88 45 f3             	mov    %al,-0xd(%rbp)
    6b90:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b93:	48 98                	cltq
    6b95:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6b99:	48 8d 05 40 29 01 00 	lea    0x12940(%rip),%rax        # 194e0 <yy_base>
    6ba0:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6ba4:	0f bf d0             	movswl %ax,%edx
    6ba7:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6bab:	01 d0                	add    %edx,%eax
    6bad:	48 98                	cltq
    6baf:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6bb3:	48 8d 05 c6 2f 01 00 	lea    0x12fc6(%rip),%rax        # 19b80 <yy_chk>
    6bba:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6bbe:	98                   	cwtl
    6bbf:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6bc2:	75 97                	jne    6b5b <yy_try_NUL_trans+0x49>
    6bc4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6bc7:	48 98                	cltq
    6bc9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6bcd:	48 8d 05 0c 29 01 00 	lea    0x1290c(%rip),%rax        # 194e0 <yy_base>
    6bd4:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6bd8:	0f bf d0             	movswl %ax,%edx
    6bdb:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    6bdf:	01 d0                	add    %edx,%eax
    6be1:	48 98                	cltq
    6be3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6be7:	48 8d 05 f2 2c 01 00 	lea    0x12cf2(%rip),%rax        # 198e0 <yy_nxt>
    6bee:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    6bf2:	98                   	cwtl
    6bf3:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6bf6:	81 7d ec e4 00 00 00 	cmpl   $0xe4,-0x14(%rbp)
    6bfd:	0f 94 c0             	sete   %al
    6c00:	0f b6 c0             	movzbl %al,%eax
    6c03:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6c06:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    6c0a:	75 05                	jne    6c11 <yy_try_NUL_trans+0xff>
    6c0c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6c0f:	eb 05                	jmp    6c16 <yy_try_NUL_trans+0x104>
    6c11:	b8 00 00 00 00       	mov    $0x0,%eax
    6c16:	5d                   	pop    %rbp
    6c17:	c3                   	ret

0000000000006c18 <yyunput>:
    6c18:	f3 0f 1e fa          	endbr64
    6c1c:	55                   	push   %rbp
    6c1d:	48 89 e5             	mov    %rsp,%rbp
    6c20:	48 83 ec 30          	sub    $0x30,%rsp
    6c24:	89 7d dc             	mov    %edi,-0x24(%rbp)
    6c27:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6c2b:	48 8b 05 a6 ba 01 00 	mov    0x1baa6(%rip),%rax        # 226d8 <yy_c_buf_p>
    6c32:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6c36:	0f b6 15 93 ba 01 00 	movzbl 0x1ba93(%rip),%edx        # 226d0 <yy_hold_char>
    6c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c41:	88 10                	mov    %dl,(%rax)
    6c43:	48 8b 05 7e ba 01 00 	mov    0x1ba7e(%rip),%rax        # 226c8 <yy_buffer_stack>
    6c4a:	48 8b 15 67 ba 01 00 	mov    0x1ba67(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6c51:	48 c1 e2 03          	shl    $0x3,%rdx
    6c55:	48 01 d0             	add    %rdx,%rax
    6c58:	48 8b 00             	mov    (%rax),%rax
    6c5b:	48 8b 40 08          	mov    0x8(%rax),%rax
    6c5f:	48 83 c0 02          	add    $0x2,%rax
    6c63:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    6c67:	0f 83 46 01 00 00    	jae    6db3 <yyunput+0x19b>
    6c6d:	8b 05 61 ba 01 00    	mov    0x1ba61(%rip),%eax        # 226d4 <yy_n_chars>
    6c73:	83 c0 02             	add    $0x2,%eax
    6c76:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    6c79:	48 8b 05 48 ba 01 00 	mov    0x1ba48(%rip),%rax        # 226c8 <yy_buffer_stack>
    6c80:	48 8b 15 31 ba 01 00 	mov    0x1ba31(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6c87:	48 c1 e2 03          	shl    $0x3,%rdx
    6c8b:	48 01 d0             	add    %rdx,%rax
    6c8e:	48 8b 00             	mov    (%rax),%rax
    6c91:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6c95:	48 8b 05 2c ba 01 00 	mov    0x1ba2c(%rip),%rax        # 226c8 <yy_buffer_stack>
    6c9c:	48 8b 0d 15 ba 01 00 	mov    0x1ba15(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    6ca3:	48 c1 e1 03          	shl    $0x3,%rcx
    6ca7:	48 01 c8             	add    %rcx,%rax
    6caa:	48 8b 00             	mov    (%rax),%rax
    6cad:	8b 40 18             	mov    0x18(%rax),%eax
    6cb0:	48 98                	cltq
    6cb2:	48 83 c0 02          	add    $0x2,%rax
    6cb6:	48 01 d0             	add    %rdx,%rax
    6cb9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6cbd:	48 8b 05 04 ba 01 00 	mov    0x1ba04(%rip),%rax        # 226c8 <yy_buffer_stack>
    6cc4:	48 8b 15 ed b9 01 00 	mov    0x1b9ed(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6ccb:	48 c1 e2 03          	shl    $0x3,%rdx
    6ccf:	48 01 d0             	add    %rdx,%rax
    6cd2:	48 8b 00             	mov    (%rax),%rax
    6cd5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6cd9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    6cdc:	48 98                	cltq
    6cde:	48 01 d0             	add    %rdx,%rax
    6ce1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6ce5:	eb 17                	jmp    6cfe <yyunput+0xe6>
    6ce7:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    6cec:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
    6cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cf5:	0f b6 10             	movzbl (%rax),%edx
    6cf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6cfc:	88 10                	mov    %dl,(%rax)
    6cfe:	48 8b 05 c3 b9 01 00 	mov    0x1b9c3(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d05:	48 8b 15 ac b9 01 00 	mov    0x1b9ac(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d0c:	48 c1 e2 03          	shl    $0x3,%rdx
    6d10:	48 01 d0             	add    %rdx,%rax
    6d13:	48 8b 00             	mov    (%rax),%rax
    6d16:	48 8b 40 08          	mov    0x8(%rax),%rax
    6d1a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    6d1e:	72 c7                	jb     6ce7 <yyunput+0xcf>
    6d20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d24:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6d28:	48 98                	cltq
    6d2a:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    6d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d32:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6d36:	48 98                	cltq
    6d38:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    6d3c:	48 8b 05 85 b9 01 00 	mov    0x1b985(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d43:	48 8b 15 6e b9 01 00 	mov    0x1b96e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d4a:	48 c1 e2 03          	shl    $0x3,%rdx
    6d4e:	48 01 d0             	add    %rdx,%rax
    6d51:	48 8b 00             	mov    (%rax),%rax
    6d54:	8b 40 18             	mov    0x18(%rax),%eax
    6d57:	89 05 77 b9 01 00    	mov    %eax,0x1b977(%rip)        # 226d4 <yy_n_chars>
    6d5d:	48 8b 05 64 b9 01 00 	mov    0x1b964(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d64:	48 8b 15 4d b9 01 00 	mov    0x1b94d(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d6b:	48 c1 e2 03          	shl    $0x3,%rdx
    6d6f:	48 01 d0             	add    %rdx,%rax
    6d72:	48 8b 00             	mov    (%rax),%rax
    6d75:	8b 15 59 b9 01 00    	mov    0x1b959(%rip),%edx        # 226d4 <yy_n_chars>
    6d7b:	89 50 1c             	mov    %edx,0x1c(%rax)
    6d7e:	48 8b 05 43 b9 01 00 	mov    0x1b943(%rip),%rax        # 226c8 <yy_buffer_stack>
    6d85:	48 8b 15 2c b9 01 00 	mov    0x1b92c(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6d8c:	48 c1 e2 03          	shl    $0x3,%rdx
    6d90:	48 01 d0             	add    %rdx,%rax
    6d93:	48 8b 00             	mov    (%rax),%rax
    6d96:	48 8b 40 08          	mov    0x8(%rax),%rax
    6d9a:	48 83 c0 02          	add    $0x2,%rax
    6d9e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    6da2:	73 0f                	jae    6db3 <yyunput+0x19b>
    6da4:	48 8d 05 bd 32 01 00 	lea    0x132bd(%rip),%rax        # 1a068 <yy_chk+0x4e8>
    6dab:	48 89 c7             	mov    %rax,%rdi
    6dae:	e8 51 0b 00 00       	call   7904 <yy_fatal_error>
    6db3:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
    6db8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6dbb:	89 c2                	mov    %eax,%edx
    6dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dc1:	88 10                	mov    %dl,(%rax)
    6dc3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6dc7:	48 89 05 32 b3 01 00 	mov    %rax,0x1b332(%rip)        # 22100 <yytext>
    6dce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dd2:	0f b6 00             	movzbl (%rax),%eax
    6dd5:	88 05 f5 b8 01 00    	mov    %al,0x1b8f5(%rip)        # 226d0 <yy_hold_char>
    6ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ddf:	48 89 05 f2 b8 01 00 	mov    %rax,0x1b8f2(%rip)        # 226d8 <yy_c_buf_p>
    6de6:	90                   	nop
    6de7:	c9                   	leave
    6de8:	c3                   	ret

0000000000006de9 <input>:
    6de9:	f3 0f 1e fa          	endbr64
    6ded:	55                   	push   %rbp
    6dee:	48 89 e5             	mov    %rsp,%rbp
    6df1:	48 83 ec 10          	sub    $0x10,%rsp
    6df5:	48 8b 05 dc b8 01 00 	mov    0x1b8dc(%rip),%rax        # 226d8 <yy_c_buf_p>
    6dfc:	0f b6 15 cd b8 01 00 	movzbl 0x1b8cd(%rip),%edx        # 226d0 <yy_hold_char>
    6e03:	88 10                	mov    %dl,(%rax)
    6e05:	48 8b 05 cc b8 01 00 	mov    0x1b8cc(%rip),%rax        # 226d8 <yy_c_buf_p>
    6e0c:	0f b6 00             	movzbl (%rax),%eax
    6e0f:	84 c0                	test   %al,%al
    6e11:	0f 85 ac 00 00 00    	jne    6ec3 <input+0xda>
    6e17:	48 8b 05 aa b8 01 00 	mov    0x1b8aa(%rip),%rax        # 226c8 <yy_buffer_stack>
    6e1e:	48 8b 15 93 b8 01 00 	mov    0x1b893(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6e25:	48 c1 e2 03          	shl    $0x3,%rdx
    6e29:	48 01 d0             	add    %rdx,%rax
    6e2c:	48 8b 00             	mov    (%rax),%rax
    6e2f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6e33:	8b 05 9b b8 01 00    	mov    0x1b89b(%rip),%eax        # 226d4 <yy_n_chars>
    6e39:	48 98                	cltq
    6e3b:	48 01 d0             	add    %rdx,%rax
    6e3e:	48 8b 15 93 b8 01 00 	mov    0x1b893(%rip),%rdx        # 226d8 <yy_c_buf_p>
    6e45:	48 39 c2             	cmp    %rax,%rdx
    6e48:	73 0c                	jae    6e56 <input+0x6d>
    6e4a:	48 8b 05 87 b8 01 00 	mov    0x1b887(%rip),%rax        # 226d8 <yy_c_buf_p>
    6e51:	c6 00 00             	movb   $0x0,(%rax)
    6e54:	eb 6d                	jmp    6ec3 <input+0xda>
    6e56:	48 8b 15 7b b8 01 00 	mov    0x1b87b(%rip),%rdx        # 226d8 <yy_c_buf_p>
    6e5d:	48 8b 05 9c b2 01 00 	mov    0x1b29c(%rip),%rax        # 22100 <yytext>
    6e64:	48 29 c2             	sub    %rax,%rdx
    6e67:	89 55 f8             	mov    %edx,-0x8(%rbp)
    6e6a:	48 8b 05 67 b8 01 00 	mov    0x1b867(%rip),%rax        # 226d8 <yy_c_buf_p>
    6e71:	48 83 c0 01          	add    $0x1,%rax
    6e75:	48 89 05 5c b8 01 00 	mov    %rax,0x1b85c(%rip)        # 226d8 <yy_c_buf_p>
    6e7c:	e8 0a f5 ff ff       	call   638b <yy_get_next_buffer>
    6e81:	83 f8 02             	cmp    $0x2,%eax
    6e84:	74 10                	je     6e96 <input+0xad>
    6e86:	83 f8 02             	cmp    $0x2,%eax
    6e89:	7f 38                	jg     6ec3 <input+0xda>
    6e8b:	85 c0                	test   %eax,%eax
    6e8d:	74 1d                	je     6eac <input+0xc3>
    6e8f:	83 f8 01             	cmp    $0x1,%eax
    6e92:	74 11                	je     6ea5 <input+0xbc>
    6e94:	eb 2d                	jmp    6ec3 <input+0xda>
    6e96:	48 8b 05 4b b2 01 00 	mov    0x1b24b(%rip),%rax        # 220e8 <yyin>
    6e9d:	48 89 c7             	mov    %rax,%rdi
    6ea0:	e8 5f 00 00 00       	call   6f04 <yyrestart>
    6ea5:	b8 00 00 00 00       	mov    $0x0,%eax
    6eaa:	eb 56                	jmp    6f02 <input+0x119>
    6eac:	48 8b 15 4d b2 01 00 	mov    0x1b24d(%rip),%rdx        # 22100 <yytext>
    6eb3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    6eb6:	48 98                	cltq
    6eb8:	48 01 d0             	add    %rdx,%rax
    6ebb:	48 89 05 16 b8 01 00 	mov    %rax,0x1b816(%rip)        # 226d8 <yy_c_buf_p>
    6ec2:	90                   	nop
    6ec3:	48 8b 05 0e b8 01 00 	mov    0x1b80e(%rip),%rax        # 226d8 <yy_c_buf_p>
    6eca:	0f b6 00             	movzbl (%rax),%eax
    6ecd:	0f b6 c0             	movzbl %al,%eax
    6ed0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    6ed3:	48 8b 05 fe b7 01 00 	mov    0x1b7fe(%rip),%rax        # 226d8 <yy_c_buf_p>
    6eda:	c6 00 00             	movb   $0x0,(%rax)
    6edd:	48 8b 05 f4 b7 01 00 	mov    0x1b7f4(%rip),%rax        # 226d8 <yy_c_buf_p>
    6ee4:	48 83 c0 01          	add    $0x1,%rax
    6ee8:	48 89 05 e9 b7 01 00 	mov    %rax,0x1b7e9(%rip)        # 226d8 <yy_c_buf_p>
    6eef:	48 8b 05 e2 b7 01 00 	mov    0x1b7e2(%rip),%rax        # 226d8 <yy_c_buf_p>
    6ef6:	0f b6 00             	movzbl (%rax),%eax
    6ef9:	88 05 d1 b7 01 00    	mov    %al,0x1b7d1(%rip)        # 226d0 <yy_hold_char>
    6eff:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6f02:	c9                   	leave
    6f03:	c3                   	ret

0000000000006f04 <yyrestart>:
    6f04:	f3 0f 1e fa          	endbr64
    6f08:	55                   	push   %rbp
    6f09:	48 89 e5             	mov    %rsp,%rbp
    6f0c:	53                   	push   %rbx
    6f0d:	48 83 ec 18          	sub    $0x18,%rsp
    6f11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f15:	48 8b 05 ac b7 01 00 	mov    0x1b7ac(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f1c:	48 85 c0             	test   %rax,%rax
    6f1f:	74 1d                	je     6f3e <yyrestart+0x3a>
    6f21:	48 8b 05 a0 b7 01 00 	mov    0x1b7a0(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f28:	48 8b 15 89 b7 01 00 	mov    0x1b789(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6f2f:	48 c1 e2 03          	shl    $0x3,%rdx
    6f33:	48 01 d0             	add    %rdx,%rax
    6f36:	48 8b 00             	mov    (%rax),%rax
    6f39:	48 85 c0             	test   %rax,%rax
    6f3c:	75 32                	jne    6f70 <yyrestart+0x6c>
    6f3e:	e8 77 06 00 00       	call   75ba <yyensure_buffer_stack>
    6f43:	48 8b 05 9e b1 01 00 	mov    0x1b19e(%rip),%rax        # 220e8 <yyin>
    6f4a:	48 8b 15 77 b7 01 00 	mov    0x1b777(%rip),%rdx        # 226c8 <yy_buffer_stack>
    6f51:	48 8b 0d 60 b7 01 00 	mov    0x1b760(%rip),%rcx        # 226b8 <yy_buffer_stack_top>
    6f58:	48 c1 e1 03          	shl    $0x3,%rcx
    6f5c:	48 8d 1c 0a          	lea    (%rdx,%rcx,1),%rbx
    6f60:	be 00 40 00 00       	mov    $0x4000,%esi
    6f65:	48 89 c7             	mov    %rax,%rdi
    6f68:	e8 cf 01 00 00       	call   713c <yy_create_buffer>
    6f6d:	48 89 03             	mov    %rax,(%rbx)
    6f70:	48 8b 05 51 b7 01 00 	mov    0x1b751(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f77:	48 85 c0             	test   %rax,%rax
    6f7a:	74 1a                	je     6f96 <yyrestart+0x92>
    6f7c:	48 8b 05 45 b7 01 00 	mov    0x1b745(%rip),%rax        # 226c8 <yy_buffer_stack>
    6f83:	48 8b 15 2e b7 01 00 	mov    0x1b72e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6f8a:	48 c1 e2 03          	shl    $0x3,%rdx
    6f8e:	48 01 d0             	add    %rdx,%rax
    6f91:	48 8b 00             	mov    (%rax),%rax
    6f94:	eb 05                	jmp    6f9b <yyrestart+0x97>
    6f96:	b8 00 00 00 00       	mov    $0x0,%eax
    6f9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f9f:	48 89 d6             	mov    %rdx,%rsi
    6fa2:	48 89 c7             	mov    %rax,%rdi
    6fa5:	e8 bf 02 00 00       	call   7269 <yy_init_buffer>
    6faa:	e8 fe 00 00 00       	call   70ad <yy_load_buffer_state>
    6faf:	90                   	nop
    6fb0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fb4:	c9                   	leave
    6fb5:	c3                   	ret

0000000000006fb6 <yy_switch_to_buffer>:
    6fb6:	f3 0f 1e fa          	endbr64
    6fba:	55                   	push   %rbp
    6fbb:	48 89 e5             	mov    %rsp,%rbp
    6fbe:	48 83 ec 10          	sub    $0x10,%rsp
    6fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fc6:	e8 ef 05 00 00       	call   75ba <yyensure_buffer_stack>
    6fcb:	48 8b 05 f6 b6 01 00 	mov    0x1b6f6(%rip),%rax        # 226c8 <yy_buffer_stack>
    6fd2:	48 85 c0             	test   %rax,%rax
    6fd5:	74 1a                	je     6ff1 <yy_switch_to_buffer+0x3b>
    6fd7:	48 8b 05 ea b6 01 00 	mov    0x1b6ea(%rip),%rax        # 226c8 <yy_buffer_stack>
    6fde:	48 8b 15 d3 b6 01 00 	mov    0x1b6d3(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    6fe5:	48 c1 e2 03          	shl    $0x3,%rdx
    6fe9:	48 01 d0             	add    %rdx,%rax
    6fec:	48 8b 00             	mov    (%rax),%rax
    6fef:	eb 05                	jmp    6ff6 <yy_switch_to_buffer+0x40>
    6ff1:	b8 00 00 00 00       	mov    $0x0,%eax
    6ff6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    6ffa:	0f 84 aa 00 00 00    	je     70aa <yy_switch_to_buffer+0xf4>
    7000:	48 8b 05 c1 b6 01 00 	mov    0x1b6c1(%rip),%rax        # 226c8 <yy_buffer_stack>
    7007:	48 85 c0             	test   %rax,%rax
    700a:	74 71                	je     707d <yy_switch_to_buffer+0xc7>
    700c:	48 8b 05 b5 b6 01 00 	mov    0x1b6b5(%rip),%rax        # 226c8 <yy_buffer_stack>
    7013:	48 8b 15 9e b6 01 00 	mov    0x1b69e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    701a:	48 c1 e2 03          	shl    $0x3,%rdx
    701e:	48 01 d0             	add    %rdx,%rax
    7021:	48 8b 00             	mov    (%rax),%rax
    7024:	48 85 c0             	test   %rax,%rax
    7027:	74 54                	je     707d <yy_switch_to_buffer+0xc7>
    7029:	48 8b 05 a8 b6 01 00 	mov    0x1b6a8(%rip),%rax        # 226d8 <yy_c_buf_p>
    7030:	0f b6 15 99 b6 01 00 	movzbl 0x1b699(%rip),%edx        # 226d0 <yy_hold_char>
    7037:	88 10                	mov    %dl,(%rax)
    7039:	48 8b 05 88 b6 01 00 	mov    0x1b688(%rip),%rax        # 226c8 <yy_buffer_stack>
    7040:	48 8b 15 71 b6 01 00 	mov    0x1b671(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7047:	48 c1 e2 03          	shl    $0x3,%rdx
    704b:	48 01 d0             	add    %rdx,%rax
    704e:	48 8b 00             	mov    (%rax),%rax
    7051:	48 8b 15 80 b6 01 00 	mov    0x1b680(%rip),%rdx        # 226d8 <yy_c_buf_p>
    7058:	48 89 50 10          	mov    %rdx,0x10(%rax)
    705c:	48 8b 05 65 b6 01 00 	mov    0x1b665(%rip),%rax        # 226c8 <yy_buffer_stack>
    7063:	48 8b 15 4e b6 01 00 	mov    0x1b64e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    706a:	48 c1 e2 03          	shl    $0x3,%rdx
    706e:	48 01 d0             	add    %rdx,%rax
    7071:	48 8b 00             	mov    (%rax),%rax
    7074:	8b 15 5a b6 01 00    	mov    0x1b65a(%rip),%edx        # 226d4 <yy_n_chars>
    707a:	89 50 1c             	mov    %edx,0x1c(%rax)
    707d:	48 8b 05 44 b6 01 00 	mov    0x1b644(%rip),%rax        # 226c8 <yy_buffer_stack>
    7084:	48 8b 15 2d b6 01 00 	mov    0x1b62d(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    708b:	48 c1 e2 03          	shl    $0x3,%rdx
    708f:	48 01 c2             	add    %rax,%rdx
    7092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7096:	48 89 02             	mov    %rax,(%rdx)
    7099:	e8 0f 00 00 00       	call   70ad <yy_load_buffer_state>
    709e:	c7 05 40 b6 01 00 01 	movl   $0x1,0x1b640(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    70a5:	00 00 00
    70a8:	eb 01                	jmp    70ab <yy_switch_to_buffer+0xf5>
    70aa:	90                   	nop
    70ab:	c9                   	leave
    70ac:	c3                   	ret

00000000000070ad <yy_load_buffer_state>:
    70ad:	f3 0f 1e fa          	endbr64
    70b1:	55                   	push   %rbp
    70b2:	48 89 e5             	mov    %rsp,%rbp
    70b5:	48 8b 05 0c b6 01 00 	mov    0x1b60c(%rip),%rax        # 226c8 <yy_buffer_stack>
    70bc:	48 8b 15 f5 b5 01 00 	mov    0x1b5f5(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    70c3:	48 c1 e2 03          	shl    $0x3,%rdx
    70c7:	48 01 d0             	add    %rdx,%rax
    70ca:	48 8b 00             	mov    (%rax),%rax
    70cd:	8b 40 1c             	mov    0x1c(%rax),%eax
    70d0:	89 05 fe b5 01 00    	mov    %eax,0x1b5fe(%rip)        # 226d4 <yy_n_chars>
    70d6:	48 8b 05 eb b5 01 00 	mov    0x1b5eb(%rip),%rax        # 226c8 <yy_buffer_stack>
    70dd:	48 8b 15 d4 b5 01 00 	mov    0x1b5d4(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    70e4:	48 c1 e2 03          	shl    $0x3,%rdx
    70e8:	48 01 d0             	add    %rdx,%rax
    70eb:	48 8b 00             	mov    (%rax),%rax
    70ee:	48 8b 40 10          	mov    0x10(%rax),%rax
    70f2:	48 89 05 df b5 01 00 	mov    %rax,0x1b5df(%rip)        # 226d8 <yy_c_buf_p>
    70f9:	48 8b 05 d8 b5 01 00 	mov    0x1b5d8(%rip),%rax        # 226d8 <yy_c_buf_p>
    7100:	48 89 05 f9 af 01 00 	mov    %rax,0x1aff9(%rip)        # 22100 <yytext>
    7107:	48 8b 05 ba b5 01 00 	mov    0x1b5ba(%rip),%rax        # 226c8 <yy_buffer_stack>
    710e:	48 8b 15 a3 b5 01 00 	mov    0x1b5a3(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7115:	48 c1 e2 03          	shl    $0x3,%rdx
    7119:	48 01 d0             	add    %rdx,%rax
    711c:	48 8b 00             	mov    (%rax),%rax
    711f:	48 8b 00             	mov    (%rax),%rax
    7122:	48 89 05 bf af 01 00 	mov    %rax,0x1afbf(%rip)        # 220e8 <yyin>
    7129:	48 8b 05 a8 b5 01 00 	mov    0x1b5a8(%rip),%rax        # 226d8 <yy_c_buf_p>
    7130:	0f b6 00             	movzbl (%rax),%eax
    7133:	88 05 97 b5 01 00    	mov    %al,0x1b597(%rip)        # 226d0 <yy_hold_char>
    7139:	90                   	nop
    713a:	5d                   	pop    %rbp
    713b:	c3                   	ret

000000000000713c <yy_create_buffer>:
    713c:	f3 0f 1e fa          	endbr64
    7140:	55                   	push   %rbp
    7141:	48 89 e5             	mov    %rsp,%rbp
    7144:	48 83 ec 20          	sub    $0x20,%rsp
    7148:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    714c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    714f:	bf 40 00 00 00       	mov    $0x40,%edi
    7154:	e8 be 09 00 00       	call   7b17 <yyalloc>
    7159:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    715d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7162:	75 0f                	jne    7173 <yy_create_buffer+0x37>
    7164:	48 8d 05 1d 2f 01 00 	lea    0x12f1d(%rip),%rax        # 1a088 <yy_chk+0x508>
    716b:	48 89 c7             	mov    %rax,%rdi
    716e:	e8 91 07 00 00       	call   7904 <yy_fatal_error>
    7173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7177:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    717a:	89 50 18             	mov    %edx,0x18(%rax)
    717d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7181:	8b 40 18             	mov    0x18(%rax),%eax
    7184:	83 c0 02             	add    $0x2,%eax
    7187:	48 98                	cltq
    7189:	48 89 c7             	mov    %rax,%rdi
    718c:	e8 86 09 00 00       	call   7b17 <yyalloc>
    7191:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7195:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    719d:	48 8b 40 08          	mov    0x8(%rax),%rax
    71a1:	48 85 c0             	test   %rax,%rax
    71a4:	75 0f                	jne    71b5 <yy_create_buffer+0x79>
    71a6:	48 8d 05 db 2e 01 00 	lea    0x12edb(%rip),%rax        # 1a088 <yy_chk+0x508>
    71ad:	48 89 c7             	mov    %rax,%rdi
    71b0:	e8 4f 07 00 00       	call   7904 <yy_fatal_error>
    71b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71b9:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
    71c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    71c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c8:	48 89 d6             	mov    %rdx,%rsi
    71cb:	48 89 c7             	mov    %rax,%rdi
    71ce:	e8 96 00 00 00       	call   7269 <yy_init_buffer>
    71d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d7:	c9                   	leave
    71d8:	c3                   	ret

00000000000071d9 <yy_delete_buffer>:
    71d9:	f3 0f 1e fa          	endbr64
    71dd:	55                   	push   %rbp
    71de:	48 89 e5             	mov    %rsp,%rbp
    71e1:	48 83 ec 10          	sub    $0x10,%rsp
    71e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71e9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    71ee:	74 76                	je     7266 <yy_delete_buffer+0x8d>
    71f0:	48 8b 05 d1 b4 01 00 	mov    0x1b4d1(%rip),%rax        # 226c8 <yy_buffer_stack>
    71f7:	48 85 c0             	test   %rax,%rax
    71fa:	74 1a                	je     7216 <yy_delete_buffer+0x3d>
    71fc:	48 8b 05 c5 b4 01 00 	mov    0x1b4c5(%rip),%rax        # 226c8 <yy_buffer_stack>
    7203:	48 8b 15 ae b4 01 00 	mov    0x1b4ae(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    720a:	48 c1 e2 03          	shl    $0x3,%rdx
    720e:	48 01 d0             	add    %rdx,%rax
    7211:	48 8b 00             	mov    (%rax),%rax
    7214:	eb 05                	jmp    721b <yy_delete_buffer+0x42>
    7216:	b8 00 00 00 00       	mov    $0x0,%eax
    721b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    721f:	75 1c                	jne    723d <yy_delete_buffer+0x64>
    7221:	48 8b 05 a0 b4 01 00 	mov    0x1b4a0(%rip),%rax        # 226c8 <yy_buffer_stack>
    7228:	48 8b 15 89 b4 01 00 	mov    0x1b489(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    722f:	48 c1 e2 03          	shl    $0x3,%rdx
    7233:	48 01 d0             	add    %rdx,%rax
    7236:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    723d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7241:	8b 40 20             	mov    0x20(%rax),%eax
    7244:	85 c0                	test   %eax,%eax
    7246:	74 10                	je     7258 <yy_delete_buffer+0x7f>
    7248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    724c:	48 8b 40 08          	mov    0x8(%rax),%rax
    7250:	48 89 c7             	mov    %rax,%rdi
    7253:	e8 06 09 00 00       	call   7b5e <yyfree>
    7258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    725c:	48 89 c7             	mov    %rax,%rdi
    725f:	e8 fa 08 00 00       	call   7b5e <yyfree>
    7264:	eb 01                	jmp    7267 <yy_delete_buffer+0x8e>
    7266:	90                   	nop
    7267:	c9                   	leave
    7268:	c3                   	ret

0000000000007269 <yy_init_buffer>:
    7269:	f3 0f 1e fa          	endbr64
    726d:	55                   	push   %rbp
    726e:	48 89 e5             	mov    %rsp,%rbp
    7271:	48 83 ec 20          	sub    $0x20,%rsp
    7275:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7279:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    727d:	e8 7e b0 ff ff       	call   2300 <__errno_location@plt>
    7282:	8b 00                	mov    (%rax),%eax
    7284:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7287:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    728b:	48 89 c7             	mov    %rax,%rdi
    728e:	e8 9b 00 00 00       	call   732e <yy_flush_buffer>
    7293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7297:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    729b:	48 89 10             	mov    %rdx,(%rax)
    729e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72a2:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)
    72a9:	48 8b 05 18 b4 01 00 	mov    0x1b418(%rip),%rax        # 226c8 <yy_buffer_stack>
    72b0:	48 85 c0             	test   %rax,%rax
    72b3:	74 1a                	je     72cf <yy_init_buffer+0x66>
    72b5:	48 8b 05 0c b4 01 00 	mov    0x1b40c(%rip),%rax        # 226c8 <yy_buffer_stack>
    72bc:	48 8b 15 f5 b3 01 00 	mov    0x1b3f5(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    72c3:	48 c1 e2 03          	shl    $0x3,%rdx
    72c7:	48 01 d0             	add    %rdx,%rax
    72ca:	48 8b 00             	mov    (%rax),%rax
    72cd:	eb 05                	jmp    72d4 <yy_init_buffer+0x6b>
    72cf:	b8 00 00 00 00       	mov    $0x0,%eax
    72d4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    72d8:	74 16                	je     72f0 <yy_init_buffer+0x87>
    72da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72de:	c7 40 2c 01 00 00 00 	movl   $0x1,0x2c(%rax)
    72e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72e9:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    72f0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    72f5:	74 1e                	je     7315 <yy_init_buffer+0xac>
    72f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72fb:	48 89 c7             	mov    %rax,%rdi
    72fe:	e8 bd b1 ff ff       	call   24c0 <fileno@plt>
    7303:	89 c7                	mov    %eax,%edi
    7305:	e8 36 b0 ff ff       	call   2340 <isatty@plt>
    730a:	85 c0                	test   %eax,%eax
    730c:	7e 07                	jle    7315 <yy_init_buffer+0xac>
    730e:	ba 01 00 00 00       	mov    $0x1,%edx
    7313:	eb 05                	jmp    731a <yy_init_buffer+0xb1>
    7315:	ba 00 00 00 00       	mov    $0x0,%edx
    731a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    731e:	89 50 24             	mov    %edx,0x24(%rax)
    7321:	e8 da af ff ff       	call   2300 <__errno_location@plt>
    7326:	8b 55 fc             	mov    -0x4(%rbp),%edx
    7329:	89 10                	mov    %edx,(%rax)
    732b:	90                   	nop
    732c:	c9                   	leave
    732d:	c3                   	ret

000000000000732e <yy_flush_buffer>:
    732e:	f3 0f 1e fa          	endbr64
    7332:	55                   	push   %rbp
    7333:	48 89 e5             	mov    %rsp,%rbp
    7336:	48 83 ec 08          	sub    $0x8,%rsp
    733a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    733e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7343:	0f 84 83 00 00 00    	je     73cc <yy_flush_buffer+0x9e>
    7349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    734d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    7354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7358:	48 8b 40 08          	mov    0x8(%rax),%rax
    735c:	c6 00 00             	movb   $0x0,(%rax)
    735f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7363:	48 8b 40 08          	mov    0x8(%rax),%rax
    7367:	48 83 c0 01          	add    $0x1,%rax
    736b:	c6 00 00             	movb   $0x0,(%rax)
    736e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7372:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    737a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    737e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7382:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    7389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738d:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    7394:	48 8b 05 2d b3 01 00 	mov    0x1b32d(%rip),%rax        # 226c8 <yy_buffer_stack>
    739b:	48 85 c0             	test   %rax,%rax
    739e:	74 1a                	je     73ba <yy_flush_buffer+0x8c>
    73a0:	48 8b 05 21 b3 01 00 	mov    0x1b321(%rip),%rax        # 226c8 <yy_buffer_stack>
    73a7:	48 8b 15 0a b3 01 00 	mov    0x1b30a(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    73ae:	48 c1 e2 03          	shl    $0x3,%rdx
    73b2:	48 01 d0             	add    %rdx,%rax
    73b5:	48 8b 00             	mov    (%rax),%rax
    73b8:	eb 05                	jmp    73bf <yy_flush_buffer+0x91>
    73ba:	b8 00 00 00 00       	mov    $0x0,%eax
    73bf:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    73c3:	75 08                	jne    73cd <yy_flush_buffer+0x9f>
    73c5:	e8 e3 fc ff ff       	call   70ad <yy_load_buffer_state>
    73ca:	eb 01                	jmp    73cd <yy_flush_buffer+0x9f>
    73cc:	90                   	nop
    73cd:	c9                   	leave
    73ce:	c3                   	ret

00000000000073cf <yypush_buffer_state>:
    73cf:	f3 0f 1e fa          	endbr64
    73d3:	55                   	push   %rbp
    73d4:	48 89 e5             	mov    %rsp,%rbp
    73d7:	48 83 ec 10          	sub    $0x10,%rsp
    73db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73df:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    73e4:	0f 84 ea 00 00 00    	je     74d4 <yypush_buffer_state+0x105>
    73ea:	e8 cb 01 00 00       	call   75ba <yyensure_buffer_stack>
    73ef:	48 8b 05 d2 b2 01 00 	mov    0x1b2d2(%rip),%rax        # 226c8 <yy_buffer_stack>
    73f6:	48 85 c0             	test   %rax,%rax
    73f9:	74 71                	je     746c <yypush_buffer_state+0x9d>
    73fb:	48 8b 05 c6 b2 01 00 	mov    0x1b2c6(%rip),%rax        # 226c8 <yy_buffer_stack>
    7402:	48 8b 15 af b2 01 00 	mov    0x1b2af(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7409:	48 c1 e2 03          	shl    $0x3,%rdx
    740d:	48 01 d0             	add    %rdx,%rax
    7410:	48 8b 00             	mov    (%rax),%rax
    7413:	48 85 c0             	test   %rax,%rax
    7416:	74 54                	je     746c <yypush_buffer_state+0x9d>
    7418:	48 8b 05 b9 b2 01 00 	mov    0x1b2b9(%rip),%rax        # 226d8 <yy_c_buf_p>
    741f:	0f b6 15 aa b2 01 00 	movzbl 0x1b2aa(%rip),%edx        # 226d0 <yy_hold_char>
    7426:	88 10                	mov    %dl,(%rax)
    7428:	48 8b 05 99 b2 01 00 	mov    0x1b299(%rip),%rax        # 226c8 <yy_buffer_stack>
    742f:	48 8b 15 82 b2 01 00 	mov    0x1b282(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7436:	48 c1 e2 03          	shl    $0x3,%rdx
    743a:	48 01 d0             	add    %rdx,%rax
    743d:	48 8b 00             	mov    (%rax),%rax
    7440:	48 8b 15 91 b2 01 00 	mov    0x1b291(%rip),%rdx        # 226d8 <yy_c_buf_p>
    7447:	48 89 50 10          	mov    %rdx,0x10(%rax)
    744b:	48 8b 05 76 b2 01 00 	mov    0x1b276(%rip),%rax        # 226c8 <yy_buffer_stack>
    7452:	48 8b 15 5f b2 01 00 	mov    0x1b25f(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7459:	48 c1 e2 03          	shl    $0x3,%rdx
    745d:	48 01 d0             	add    %rdx,%rax
    7460:	48 8b 00             	mov    (%rax),%rax
    7463:	8b 15 6b b2 01 00    	mov    0x1b26b(%rip),%edx        # 226d4 <yy_n_chars>
    7469:	89 50 1c             	mov    %edx,0x1c(%rax)
    746c:	48 8b 05 55 b2 01 00 	mov    0x1b255(%rip),%rax        # 226c8 <yy_buffer_stack>
    7473:	48 85 c0             	test   %rax,%rax
    7476:	74 2f                	je     74a7 <yypush_buffer_state+0xd8>
    7478:	48 8b 05 49 b2 01 00 	mov    0x1b249(%rip),%rax        # 226c8 <yy_buffer_stack>
    747f:	48 8b 15 32 b2 01 00 	mov    0x1b232(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7486:	48 c1 e2 03          	shl    $0x3,%rdx
    748a:	48 01 d0             	add    %rdx,%rax
    748d:	48 8b 00             	mov    (%rax),%rax
    7490:	48 85 c0             	test   %rax,%rax
    7493:	74 12                	je     74a7 <yypush_buffer_state+0xd8>
    7495:	48 8b 05 1c b2 01 00 	mov    0x1b21c(%rip),%rax        # 226b8 <yy_buffer_stack_top>
    749c:	48 83 c0 01          	add    $0x1,%rax
    74a0:	48 89 05 11 b2 01 00 	mov    %rax,0x1b211(%rip)        # 226b8 <yy_buffer_stack_top>
    74a7:	48 8b 05 1a b2 01 00 	mov    0x1b21a(%rip),%rax        # 226c8 <yy_buffer_stack>
    74ae:	48 8b 15 03 b2 01 00 	mov    0x1b203(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    74b5:	48 c1 e2 03          	shl    $0x3,%rdx
    74b9:	48 01 c2             	add    %rax,%rdx
    74bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c0:	48 89 02             	mov    %rax,(%rdx)
    74c3:	e8 e5 fb ff ff       	call   70ad <yy_load_buffer_state>
    74c8:	c7 05 16 b2 01 00 01 	movl   $0x1,0x1b216(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    74cf:	00 00 00
    74d2:	eb 01                	jmp    74d5 <yypush_buffer_state+0x106>
    74d4:	90                   	nop
    74d5:	c9                   	leave
    74d6:	c3                   	ret

00000000000074d7 <yypop_buffer_state>:
    74d7:	f3 0f 1e fa          	endbr64
    74db:	55                   	push   %rbp
    74dc:	48 89 e5             	mov    %rsp,%rbp
    74df:	48 8b 05 e2 b1 01 00 	mov    0x1b1e2(%rip),%rax        # 226c8 <yy_buffer_stack>
    74e6:	48 85 c0             	test   %rax,%rax
    74e9:	0f 84 c8 00 00 00    	je     75b7 <yypop_buffer_state+0xe0>
    74ef:	48 8b 05 d2 b1 01 00 	mov    0x1b1d2(%rip),%rax        # 226c8 <yy_buffer_stack>
    74f6:	48 8b 15 bb b1 01 00 	mov    0x1b1bb(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    74fd:	48 c1 e2 03          	shl    $0x3,%rdx
    7501:	48 01 d0             	add    %rdx,%rax
    7504:	48 8b 00             	mov    (%rax),%rax
    7507:	48 85 c0             	test   %rax,%rax
    750a:	0f 84 a7 00 00 00    	je     75b7 <yypop_buffer_state+0xe0>
    7510:	48 8b 05 b1 b1 01 00 	mov    0x1b1b1(%rip),%rax        # 226c8 <yy_buffer_stack>
    7517:	48 85 c0             	test   %rax,%rax
    751a:	74 1a                	je     7536 <yypop_buffer_state+0x5f>
    751c:	48 8b 05 a5 b1 01 00 	mov    0x1b1a5(%rip),%rax        # 226c8 <yy_buffer_stack>
    7523:	48 8b 15 8e b1 01 00 	mov    0x1b18e(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    752a:	48 c1 e2 03          	shl    $0x3,%rdx
    752e:	48 01 d0             	add    %rdx,%rax
    7531:	48 8b 00             	mov    (%rax),%rax
    7534:	eb 05                	jmp    753b <yypop_buffer_state+0x64>
    7536:	b8 00 00 00 00       	mov    $0x0,%eax
    753b:	48 89 c7             	mov    %rax,%rdi
    753e:	e8 96 fc ff ff       	call   71d9 <yy_delete_buffer>
    7543:	48 8b 05 7e b1 01 00 	mov    0x1b17e(%rip),%rax        # 226c8 <yy_buffer_stack>
    754a:	48 8b 15 67 b1 01 00 	mov    0x1b167(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7551:	48 c1 e2 03          	shl    $0x3,%rdx
    7555:	48 01 d0             	add    %rdx,%rax
    7558:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    755f:	48 8b 05 52 b1 01 00 	mov    0x1b152(%rip),%rax        # 226b8 <yy_buffer_stack_top>
    7566:	48 85 c0             	test   %rax,%rax
    7569:	74 12                	je     757d <yypop_buffer_state+0xa6>
    756b:	48 8b 05 46 b1 01 00 	mov    0x1b146(%rip),%rax        # 226b8 <yy_buffer_stack_top>
    7572:	48 83 e8 01          	sub    $0x1,%rax
    7576:	48 89 05 3b b1 01 00 	mov    %rax,0x1b13b(%rip)        # 226b8 <yy_buffer_stack_top>
    757d:	48 8b 05 44 b1 01 00 	mov    0x1b144(%rip),%rax        # 226c8 <yy_buffer_stack>
    7584:	48 85 c0             	test   %rax,%rax
    7587:	74 2f                	je     75b8 <yypop_buffer_state+0xe1>
    7589:	48 8b 05 38 b1 01 00 	mov    0x1b138(%rip),%rax        # 226c8 <yy_buffer_stack>
    7590:	48 8b 15 21 b1 01 00 	mov    0x1b121(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7597:	48 c1 e2 03          	shl    $0x3,%rdx
    759b:	48 01 d0             	add    %rdx,%rax
    759e:	48 8b 00             	mov    (%rax),%rax
    75a1:	48 85 c0             	test   %rax,%rax
    75a4:	74 12                	je     75b8 <yypop_buffer_state+0xe1>
    75a6:	e8 02 fb ff ff       	call   70ad <yy_load_buffer_state>
    75ab:	c7 05 33 b1 01 00 01 	movl   $0x1,0x1b133(%rip)        # 226e8 <yy_did_buffer_switch_on_eof>
    75b2:	00 00 00
    75b5:	eb 01                	jmp    75b8 <yypop_buffer_state+0xe1>
    75b7:	90                   	nop
    75b8:	5d                   	pop    %rbp
    75b9:	c3                   	ret

00000000000075ba <yyensure_buffer_stack>:
    75ba:	f3 0f 1e fa          	endbr64
    75be:	55                   	push   %rbp
    75bf:	48 89 e5             	mov    %rsp,%rbp
    75c2:	48 83 ec 10          	sub    $0x10,%rsp
    75c6:	48 8b 05 fb b0 01 00 	mov    0x1b0fb(%rip),%rax        # 226c8 <yy_buffer_stack>
    75cd:	48 85 c0             	test   %rax,%rax
    75d0:	75 75                	jne    7647 <yyensure_buffer_stack+0x8d>
    75d2:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
    75d9:	00
    75da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75de:	48 c1 e0 03          	shl    $0x3,%rax
    75e2:	48 89 c7             	mov    %rax,%rdi
    75e5:	e8 2d 05 00 00       	call   7b17 <yyalloc>
    75ea:	48 89 05 d7 b0 01 00 	mov    %rax,0x1b0d7(%rip)        # 226c8 <yy_buffer_stack>
    75f1:	48 8b 05 d0 b0 01 00 	mov    0x1b0d0(%rip),%rax        # 226c8 <yy_buffer_stack>
    75f8:	48 85 c0             	test   %rax,%rax
    75fb:	75 0f                	jne    760c <yyensure_buffer_stack+0x52>
    75fd:	48 8d 05 b4 2a 01 00 	lea    0x12ab4(%rip),%rax        # 1a0b8 <yy_chk+0x538>
    7604:	48 89 c7             	mov    %rax,%rdi
    7607:	e8 f8 02 00 00       	call   7904 <yy_fatal_error>
    760c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7610:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7617:	00
    7618:	48 8b 05 a9 b0 01 00 	mov    0x1b0a9(%rip),%rax        # 226c8 <yy_buffer_stack>
    761f:	be 00 00 00 00       	mov    $0x0,%esi
    7624:	48 89 c7             	mov    %rax,%rdi
    7627:	e8 c4 ad ff ff       	call   23f0 <memset@plt>
    762c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7630:	48 89 05 89 b0 01 00 	mov    %rax,0x1b089(%rip)        # 226c0 <yy_buffer_stack_max>
    7637:	48 c7 05 76 b0 01 00 	movq   $0x0,0x1b076(%rip)        # 226b8 <yy_buffer_stack_top>
    763e:	00 00 00 00
    7642:	e9 ae 00 00 00       	jmp    76f5 <yyensure_buffer_stack+0x13b>
    7647:	48 8b 05 72 b0 01 00 	mov    0x1b072(%rip),%rax        # 226c0 <yy_buffer_stack_max>
    764e:	48 83 e8 01          	sub    $0x1,%rax
    7652:	48 8b 15 5f b0 01 00 	mov    0x1b05f(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7659:	48 39 c2             	cmp    %rax,%rdx
    765c:	0f 82 93 00 00 00    	jb     76f5 <yyensure_buffer_stack+0x13b>
    7662:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    7669:	00
    766a:	48 8b 15 4f b0 01 00 	mov    0x1b04f(%rip),%rdx        # 226c0 <yy_buffer_stack_max>
    7671:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7675:	48 01 d0             	add    %rdx,%rax
    7678:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    767c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7680:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7687:	00
    7688:	48 8b 05 39 b0 01 00 	mov    0x1b039(%rip),%rax        # 226c8 <yy_buffer_stack>
    768f:	48 89 d6             	mov    %rdx,%rsi
    7692:	48 89 c7             	mov    %rax,%rdi
    7695:	e8 9b 04 00 00       	call   7b35 <yyrealloc>
    769a:	48 89 05 27 b0 01 00 	mov    %rax,0x1b027(%rip)        # 226c8 <yy_buffer_stack>
    76a1:	48 8b 05 20 b0 01 00 	mov    0x1b020(%rip),%rax        # 226c8 <yy_buffer_stack>
    76a8:	48 85 c0             	test   %rax,%rax
    76ab:	75 0f                	jne    76bc <yyensure_buffer_stack+0x102>
    76ad:	48 8d 05 04 2a 01 00 	lea    0x12a04(%rip),%rax        # 1a0b8 <yy_chk+0x538>
    76b4:	48 89 c7             	mov    %rax,%rdi
    76b7:	e8 48 02 00 00       	call   7904 <yy_fatal_error>
    76bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    76c0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    76c7:	00
    76c8:	48 8b 05 f9 af 01 00 	mov    0x1aff9(%rip),%rax        # 226c8 <yy_buffer_stack>
    76cf:	48 8b 0d ea af 01 00 	mov    0x1afea(%rip),%rcx        # 226c0 <yy_buffer_stack_max>
    76d6:	48 c1 e1 03          	shl    $0x3,%rcx
    76da:	48 01 c8             	add    %rcx,%rax
    76dd:	be 00 00 00 00       	mov    $0x0,%esi
    76e2:	48 89 c7             	mov    %rax,%rdi
    76e5:	e8 06 ad ff ff       	call   23f0 <memset@plt>
    76ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ee:	48 89 05 cb af 01 00 	mov    %rax,0x1afcb(%rip)        # 226c0 <yy_buffer_stack_max>
    76f5:	c9                   	leave
    76f6:	c3                   	ret

00000000000076f7 <yy_scan_buffer>:
    76f7:	f3 0f 1e fa          	endbr64
    76fb:	55                   	push   %rbp
    76fc:	48 89 e5             	mov    %rsp,%rbp
    76ff:	48 83 ec 20          	sub    $0x20,%rsp
    7703:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7707:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    770b:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
    7710:	76 2c                	jbe    773e <yy_scan_buffer+0x47>
    7712:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7716:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    771a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    771e:	48 01 d0             	add    %rdx,%rax
    7721:	0f b6 00             	movzbl (%rax),%eax
    7724:	84 c0                	test   %al,%al
    7726:	75 16                	jne    773e <yy_scan_buffer+0x47>
    7728:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    772c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    7730:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7734:	48 01 d0             	add    %rdx,%rax
    7737:	0f b6 00             	movzbl (%rax),%eax
    773a:	84 c0                	test   %al,%al
    773c:	74 0a                	je     7748 <yy_scan_buffer+0x51>
    773e:	b8 00 00 00 00       	mov    $0x0,%eax
    7743:	e9 b0 00 00 00       	jmp    77f8 <yy_scan_buffer+0x101>
    7748:	bf 40 00 00 00       	mov    $0x40,%edi
    774d:	e8 c5 03 00 00       	call   7b17 <yyalloc>
    7752:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7756:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    775b:	75 0f                	jne    776c <yy_scan_buffer+0x75>
    775d:	48 8d 05 8c 29 01 00 	lea    0x1298c(%rip),%rax        # 1a0f0 <yy_chk+0x570>
    7764:	48 89 c7             	mov    %rax,%rdi
    7767:	e8 98 01 00 00       	call   7904 <yy_fatal_error>
    776c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7770:	83 e8 02             	sub    $0x2,%eax
    7773:	89 c2                	mov    %eax,%edx
    7775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7779:	89 50 18             	mov    %edx,0x18(%rax)
    777c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7780:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7784:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    778c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7794:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    779c:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    77a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    77ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77b2:	8b 50 18             	mov    0x18(%rax),%edx
    77b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77b9:	89 50 1c             	mov    %edx,0x1c(%rax)
    77bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77c0:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    77c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77cb:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    77d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77d6:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
    77dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77e1:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    77e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ec:	48 89 c7             	mov    %rax,%rdi
    77ef:	e8 c2 f7 ff ff       	call   6fb6 <yy_switch_to_buffer>
    77f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77f8:	c9                   	leave
    77f9:	c3                   	ret

00000000000077fa <yy_scan_string>:
    77fa:	f3 0f 1e fa          	endbr64
    77fe:	55                   	push   %rbp
    77ff:	48 89 e5             	mov    %rsp,%rbp
    7802:	48 83 ec 10          	sub    $0x10,%rsp
    7806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    780a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    780e:	48 89 c7             	mov    %rax,%rdi
    7811:	e8 7a ab ff ff       	call   2390 <strlen@plt>
    7816:	89 c2                	mov    %eax,%edx
    7818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    781c:	89 d6                	mov    %edx,%esi
    781e:	48 89 c7             	mov    %rax,%rdi
    7821:	e8 02 00 00 00       	call   7828 <yy_scan_bytes>
    7826:	c9                   	leave
    7827:	c3                   	ret

0000000000007828 <yy_scan_bytes>:
    7828:	f3 0f 1e fa          	endbr64
    782c:	55                   	push   %rbp
    782d:	48 89 e5             	mov    %rsp,%rbp
    7830:	48 83 ec 30          	sub    $0x30,%rsp
    7834:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7838:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    783b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    783e:	83 c0 02             	add    $0x2,%eax
    7841:	48 98                	cltq
    7843:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7847:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    784b:	48 89 c7             	mov    %rax,%rdi
    784e:	e8 c4 02 00 00       	call   7b17 <yyalloc>
    7853:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7857:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    785c:	75 0f                	jne    786d <yy_scan_bytes+0x45>
    785e:	48 8d 05 bb 28 01 00 	lea    0x128bb(%rip),%rax        # 1a120 <yy_chk+0x5a0>
    7865:	48 89 c7             	mov    %rax,%rdi
    7868:	e8 97 00 00 00       	call   7904 <yy_fatal_error>
    786d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    7874:	eb 23                	jmp    7899 <yy_scan_bytes+0x71>
    7876:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    7879:	48 63 d0             	movslq %eax,%rdx
    787c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7880:	48 01 d0             	add    %rdx,%rax
    7883:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    7886:	48 63 ca             	movslq %edx,%rcx
    7889:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    788d:	48 01 ca             	add    %rcx,%rdx
    7890:	0f b6 00             	movzbl (%rax),%eax
    7893:	88 02                	mov    %al,(%rdx)
    7895:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    7899:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    789c:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    789f:	7c d5                	jl     7876 <yy_scan_bytes+0x4e>
    78a1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    78a4:	48 98                	cltq
    78a6:	48 8d 50 01          	lea    0x1(%rax),%rdx
    78aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    78ae:	48 01 d0             	add    %rdx,%rax
    78b1:	c6 00 00             	movb   $0x0,(%rax)
    78b4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    78b7:	48 63 ca             	movslq %edx,%rcx
    78ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78be:	48 01 ca             	add    %rcx,%rdx
    78c1:	0f b6 00             	movzbl (%rax),%eax
    78c4:	88 02                	mov    %al,(%rdx)
    78c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    78ce:	48 89 d6             	mov    %rdx,%rsi
    78d1:	48 89 c7             	mov    %rax,%rdi
    78d4:	e8 1e fe ff ff       	call   76f7 <yy_scan_buffer>
    78d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    78dd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    78e2:	75 0f                	jne    78f3 <yy_scan_bytes+0xcb>
    78e4:	48 8d 05 5e 28 01 00 	lea    0x1285e(%rip),%rax        # 1a149 <yy_chk+0x5c9>
    78eb:	48 89 c7             	mov    %rax,%rdi
    78ee:	e8 11 00 00 00       	call   7904 <yy_fatal_error>
    78f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f7:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
    78fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7902:	c9                   	leave
    7903:	c3                   	ret

0000000000007904 <yy_fatal_error>:
    7904:	f3 0f 1e fa          	endbr64
    7908:	55                   	push   %rbp
    7909:	48 89 e5             	mov    %rsp,%rbp
    790c:	48 83 ec 10          	sub    $0x10,%rsp
    7910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7914:	48 8b 05 45 a7 01 00 	mov    0x1a745(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    791b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    791f:	48 8d 0d 41 28 01 00 	lea    0x12841(%rip),%rcx        # 1a167 <yy_chk+0x5e7>
    7926:	48 89 ce             	mov    %rcx,%rsi
    7929:	48 89 c7             	mov    %rax,%rdi
    792c:	b8 00 00 00 00       	mov    $0x0,%eax
    7931:	e8 3a ab ff ff       	call   2470 <fprintf@plt>
    7936:	bf 02 00 00 00       	mov    $0x2,%edi
    793b:	e8 00 ac ff ff       	call   2540 <exit@plt>

0000000000007940 <yyget_lineno>:
    7940:	f3 0f 1e fa          	endbr64
    7944:	55                   	push   %rbp
    7945:	48 89 e5             	mov    %rsp,%rbp
    7948:	8b 05 c2 a6 01 00    	mov    0x1a6c2(%rip),%eax        # 22010 <yylineno>
    794e:	5d                   	pop    %rbp
    794f:	c3                   	ret

0000000000007950 <yyget_in>:
    7950:	f3 0f 1e fa          	endbr64
    7954:	55                   	push   %rbp
    7955:	48 89 e5             	mov    %rsp,%rbp
    7958:	48 8b 05 89 a7 01 00 	mov    0x1a789(%rip),%rax        # 220e8 <yyin>
    795f:	5d                   	pop    %rbp
    7960:	c3                   	ret

0000000000007961 <yyget_out>:
    7961:	f3 0f 1e fa          	endbr64
    7965:	55                   	push   %rbp
    7966:	48 89 e5             	mov    %rsp,%rbp
    7969:	48 8b 05 80 a7 01 00 	mov    0x1a780(%rip),%rax        # 220f0 <yyout>
    7970:	5d                   	pop    %rbp
    7971:	c3                   	ret

0000000000007972 <yyget_leng>:
    7972:	f3 0f 1e fa          	endbr64
    7976:	55                   	push   %rbp
    7977:	48 89 e5             	mov    %rsp,%rbp
    797a:	8b 05 60 a7 01 00    	mov    0x1a760(%rip),%eax        # 220e0 <yyleng>
    7980:	5d                   	pop    %rbp
    7981:	c3                   	ret

0000000000007982 <yyget_text>:
    7982:	f3 0f 1e fa          	endbr64
    7986:	55                   	push   %rbp
    7987:	48 89 e5             	mov    %rsp,%rbp
    798a:	48 8b 05 6f a7 01 00 	mov    0x1a76f(%rip),%rax        # 22100 <yytext>
    7991:	5d                   	pop    %rbp
    7992:	c3                   	ret

0000000000007993 <yyset_lineno>:
    7993:	f3 0f 1e fa          	endbr64
    7997:	55                   	push   %rbp
    7998:	48 89 e5             	mov    %rsp,%rbp
    799b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    799e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    79a1:	89 05 69 a6 01 00    	mov    %eax,0x1a669(%rip)        # 22010 <yylineno>
    79a7:	90                   	nop
    79a8:	5d                   	pop    %rbp
    79a9:	c3                   	ret

00000000000079aa <yyset_in>:
    79aa:	f3 0f 1e fa          	endbr64
    79ae:	55                   	push   %rbp
    79af:	48 89 e5             	mov    %rsp,%rbp
    79b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ba:	48 89 05 27 a7 01 00 	mov    %rax,0x1a727(%rip)        # 220e8 <yyin>
    79c1:	90                   	nop
    79c2:	5d                   	pop    %rbp
    79c3:	c3                   	ret

00000000000079c4 <yyset_out>:
    79c4:	f3 0f 1e fa          	endbr64
    79c8:	55                   	push   %rbp
    79c9:	48 89 e5             	mov    %rsp,%rbp
    79cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79d4:	48 89 05 15 a7 01 00 	mov    %rax,0x1a715(%rip)        # 220f0 <yyout>
    79db:	90                   	nop
    79dc:	5d                   	pop    %rbp
    79dd:	c3                   	ret

00000000000079de <yyget_debug>:
    79de:	f3 0f 1e fa          	endbr64
    79e2:	55                   	push   %rbp
    79e3:	48 89 e5             	mov    %rsp,%rbp
    79e6:	8b 05 0c a7 01 00    	mov    0x1a70c(%rip),%eax        # 220f8 <yy_flex_debug>
    79ec:	5d                   	pop    %rbp
    79ed:	c3                   	ret

00000000000079ee <yyset_debug>:
    79ee:	f3 0f 1e fa          	endbr64
    79f2:	55                   	push   %rbp
    79f3:	48 89 e5             	mov    %rsp,%rbp
    79f6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    79f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    79fc:	89 05 f6 a6 01 00    	mov    %eax,0x1a6f6(%rip)        # 220f8 <yy_flex_debug>
    7a02:	90                   	nop
    7a03:	5d                   	pop    %rbp
    7a04:	c3                   	ret

0000000000007a05 <yy_init_globals>:
    7a05:	f3 0f 1e fa          	endbr64
    7a09:	55                   	push   %rbp
    7a0a:	48 89 e5             	mov    %rsp,%rbp
    7a0d:	48 c7 05 b0 ac 01 00 	movq   $0x0,0x1acb0(%rip)        # 226c8 <yy_buffer_stack>
    7a14:	00 00 00 00
    7a18:	48 c7 05 95 ac 01 00 	movq   $0x0,0x1ac95(%rip)        # 226b8 <yy_buffer_stack_top>
    7a1f:	00 00 00 00
    7a23:	48 c7 05 92 ac 01 00 	movq   $0x0,0x1ac92(%rip)        # 226c0 <yy_buffer_stack_max>
    7a2a:	00 00 00 00
    7a2e:	48 c7 05 9f ac 01 00 	movq   $0x0,0x1ac9f(%rip)        # 226d8 <yy_c_buf_p>
    7a35:	00 00 00 00
    7a39:	c7 05 9d ac 01 00 00 	movl   $0x0,0x1ac9d(%rip)        # 226e0 <yy_init>
    7a40:	00 00 00
    7a43:	c7 05 97 ac 01 00 00 	movl   $0x0,0x1ac97(%rip)        # 226e4 <yy_start>
    7a4a:	00 00 00
    7a4d:	48 c7 05 90 a6 01 00 	movq   $0x0,0x1a690(%rip)        # 220e8 <yyin>
    7a54:	00 00 00 00
    7a58:	48 c7 05 8d a6 01 00 	movq   $0x0,0x1a68d(%rip)        # 220f0 <yyout>
    7a5f:	00 00 00 00
    7a63:	b8 00 00 00 00       	mov    $0x0,%eax
    7a68:	5d                   	pop    %rbp
    7a69:	c3                   	ret

0000000000007a6a <yylex_destroy>:
    7a6a:	f3 0f 1e fa          	endbr64
    7a6e:	55                   	push   %rbp
    7a6f:	48 89 e5             	mov    %rsp,%rbp
    7a72:	eb 54                	jmp    7ac8 <yylex_destroy+0x5e>
    7a74:	48 8b 05 4d ac 01 00 	mov    0x1ac4d(%rip),%rax        # 226c8 <yy_buffer_stack>
    7a7b:	48 85 c0             	test   %rax,%rax
    7a7e:	74 1a                	je     7a9a <yylex_destroy+0x30>
    7a80:	48 8b 05 41 ac 01 00 	mov    0x1ac41(%rip),%rax        # 226c8 <yy_buffer_stack>
    7a87:	48 8b 15 2a ac 01 00 	mov    0x1ac2a(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7a8e:	48 c1 e2 03          	shl    $0x3,%rdx
    7a92:	48 01 d0             	add    %rdx,%rax
    7a95:	48 8b 00             	mov    (%rax),%rax
    7a98:	eb 05                	jmp    7a9f <yylex_destroy+0x35>
    7a9a:	b8 00 00 00 00       	mov    $0x0,%eax
    7a9f:	48 89 c7             	mov    %rax,%rdi
    7aa2:	e8 32 f7 ff ff       	call   71d9 <yy_delete_buffer>
    7aa7:	48 8b 05 1a ac 01 00 	mov    0x1ac1a(%rip),%rax        # 226c8 <yy_buffer_stack>
    7aae:	48 8b 15 03 ac 01 00 	mov    0x1ac03(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7ab5:	48 c1 e2 03          	shl    $0x3,%rdx
    7ab9:	48 01 d0             	add    %rdx,%rax
    7abc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7ac3:	e8 0f fa ff ff       	call   74d7 <yypop_buffer_state>
    7ac8:	48 8b 05 f9 ab 01 00 	mov    0x1abf9(%rip),%rax        # 226c8 <yy_buffer_stack>
    7acf:	48 85 c0             	test   %rax,%rax
    7ad2:	74 1d                	je     7af1 <yylex_destroy+0x87>
    7ad4:	48 8b 05 ed ab 01 00 	mov    0x1abed(%rip),%rax        # 226c8 <yy_buffer_stack>
    7adb:	48 8b 15 d6 ab 01 00 	mov    0x1abd6(%rip),%rdx        # 226b8 <yy_buffer_stack_top>
    7ae2:	48 c1 e2 03          	shl    $0x3,%rdx
    7ae6:	48 01 d0             	add    %rdx,%rax
    7ae9:	48 8b 00             	mov    (%rax),%rax
    7aec:	48 85 c0             	test   %rax,%rax
    7aef:	75 83                	jne    7a74 <yylex_destroy+0xa>
    7af1:	48 8b 05 d0 ab 01 00 	mov    0x1abd0(%rip),%rax        # 226c8 <yy_buffer_stack>
    7af8:	48 89 c7             	mov    %rax,%rdi
    7afb:	e8 5e 00 00 00       	call   7b5e <yyfree>
    7b00:	48 c7 05 bd ab 01 00 	movq   $0x0,0x1abbd(%rip)        # 226c8 <yy_buffer_stack>
    7b07:	00 00 00 00
    7b0b:	e8 f5 fe ff ff       	call   7a05 <yy_init_globals>
    7b10:	b8 00 00 00 00       	mov    $0x0,%eax
    7b15:	5d                   	pop    %rbp
    7b16:	c3                   	ret

0000000000007b17 <yyalloc>:
    7b17:	f3 0f 1e fa          	endbr64
    7b1b:	55                   	push   %rbp
    7b1c:	48 89 e5             	mov    %rsp,%rbp
    7b1f:	48 83 ec 10          	sub    $0x10,%rsp
    7b23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b2b:	48 89 c7             	mov    %rax,%rdi
    7b2e:	e8 9d a9 ff ff       	call   24d0 <malloc@plt>
    7b33:	c9                   	leave
    7b34:	c3                   	ret

0000000000007b35 <yyrealloc>:
    7b35:	f3 0f 1e fa          	endbr64
    7b39:	55                   	push   %rbp
    7b3a:	48 89 e5             	mov    %rsp,%rbp
    7b3d:	48 83 ec 10          	sub    $0x10,%rsp
    7b41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b51:	48 89 d6             	mov    %rdx,%rsi
    7b54:	48 89 c7             	mov    %rax,%rdi
    7b57:	e8 94 a9 ff ff       	call   24f0 <realloc@plt>
    7b5c:	c9                   	leave
    7b5d:	c3                   	ret

0000000000007b5e <yyfree>:
    7b5e:	f3 0f 1e fa          	endbr64
    7b62:	55                   	push   %rbp
    7b63:	48 89 e5             	mov    %rsp,%rbp
    7b66:	48 83 ec 10          	sub    $0x10,%rsp
    7b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b72:	48 89 c7             	mov    %rax,%rdi
    7b75:	e8 76 a7 ff ff       	call   22f0 <free@plt>
    7b7a:	90                   	nop
    7b7b:	c9                   	leave
    7b7c:	c3                   	ret

0000000000007b7d <main>:
    7b7d:	f3 0f 1e fa          	endbr64
    7b81:	55                   	push   %rbp
    7b82:	48 89 e5             	mov    %rsp,%rbp
    7b85:	48 83 ec 70          	sub    $0x70,%rsp
    7b89:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    7b8c:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    7b90:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b97:	00 00
    7b99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7b9d:	31 c0                	xor    %eax,%eax
    7b9f:	e8 49 f4 00 00       	call   16fed <install_stack_trace_handler>
    7ba4:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
    7ba8:	7e 35                	jle    7bdf <main+0x62>
    7baa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7bae:	48 83 c0 08          	add    $0x8,%rax
    7bb2:	48 8b 00             	mov    (%rax),%rax
    7bb5:	48 8d 15 b4 25 01 00 	lea    0x125b4(%rip),%rdx        # 1a170 <yy_chk+0x5f0>
    7bbc:	48 89 d6             	mov    %rdx,%rsi
    7bbf:	48 89 c7             	mov    %rax,%rdi
    7bc2:	e8 89 a8 ff ff       	call   2450 <strcmp@plt>
    7bc7:	85 c0                	test   %eax,%eax
    7bc9:	75 14                	jne    7bdf <main+0x62>
    7bcb:	b8 00 00 00 00       	mov    $0x0,%eax
    7bd0:	e8 68 a7 00 00       	call   1233d <init_stackmng>
    7bd5:	b8 00 00 00 00       	mov    $0x0,%eax
    7bda:	e9 88 02 00 00       	jmp    7e67 <main+0x2ea>
    7bdf:	c7 45 a8 03 00 00 00 	movl   $0x3,-0x58(%rbp)
    7be6:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7be9:	3b 45 a8             	cmp    -0x58(%rbp),%eax
    7bec:	7d 2d                	jge    7c1b <main+0x9e>
    7bee:	48 8b 05 6b a4 01 00 	mov    0x1a46b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7bf5:	48 89 c1             	mov    %rax,%rcx
    7bf8:	ba 3f 00 00 00       	mov    $0x3f,%edx
    7bfd:	be 01 00 00 00       	mov    $0x1,%esi
    7c02:	48 8d 05 77 25 01 00 	lea    0x12577(%rip),%rax        # 1a180 <yy_chk+0x600>
    7c09:	48 89 c7             	mov    %rax,%rdi
    7c0c:	e8 3f a9 ff ff       	call   2550 <fwrite@plt>
    7c11:	bf 01 00 00 00       	mov    $0x1,%edi
    7c16:	e8 25 a9 ff ff       	call   2540 <exit@plt>
    7c1b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7c1e:	2b 45 a8             	sub    -0x58(%rbp),%eax
    7c21:	89 45 ac             	mov    %eax,-0x54(%rbp)
    7c24:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
    7c28:	7e 21                	jle    7c4b <main+0xce>
    7c2a:	8b 45 a8             	mov    -0x58(%rbp),%eax
    7c2d:	48 98                	cltq
    7c2f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7c36:	00
    7c37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7c3b:	48 01 c2             	add    %rax,%rdx
    7c3e:	8b 45 ac             	mov    -0x54(%rbp),%eax
    7c41:	89 c6                	mov    %eax,%esi
    7c43:	48 89 d7             	mov    %rdx,%rdi
    7c46:	e8 32 02 00 00       	call   7e7d <set_flags>
    7c4b:	48 8d 05 6e 25 01 00 	lea    0x1256e(%rip),%rax        # 1a1c0 <yy_chk+0x640>
    7c52:	48 89 05 af aa 01 00 	mov    %rax,0x1aaaf(%rip)        # 22708 <file_to_parse>
    7c59:	48 8d 05 60 25 01 00 	lea    0x12560(%rip),%rax        # 1a1c0 <yy_chk+0x640>
    7c60:	48 89 c7             	mov    %rax,%rdi
    7c63:	e8 3a 04 00 00       	call   80a2 <ParsePascalOnly>
    7c68:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7c6c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7c70:	48 8b 40 08          	mov    0x8(%rax),%rax
    7c74:	48 89 05 8d aa 01 00 	mov    %rax,0x1aa8d(%rip)        # 22708 <file_to_parse>
    7c7b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7c7f:	48 83 c0 08          	add    $0x8,%rax
    7c83:	48 8b 00             	mov    (%rax),%rax
    7c86:	48 89 c7             	mov    %rax,%rdi
    7c89:	e8 14 04 00 00       	call   80a2 <ParsePascalOnly>
    7c8e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7c92:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    7c97:	0f 84 8f 01 00 00    	je     7e2c <main+0x2af>
    7c9d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    7ca2:	0f 84 84 01 00 00    	je     7e2c <main+0x2af>
    7ca8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7cac:	48 8b 40 28          	mov    0x28(%rax),%rax
    7cb0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7cb4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7cb8:	48 8b 40 28          	mov    0x28(%rax),%rax
    7cbc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7cc0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    7cc5:	74 3b                	je     7d02 <main+0x185>
    7cc7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ccb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7ccf:	eb 0c                	jmp    7cdd <main+0x160>
    7cd1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7cd5:	48 8b 40 10          	mov    0x10(%rax),%rax
    7cd9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7cdd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7ce1:	48 8b 40 10          	mov    0x10(%rax),%rax
    7ce5:	48 85 c0             	test   %rax,%rax
    7ce8:	75 e7                	jne    7cd1 <main+0x154>
    7cea:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7cee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7cf2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7cf6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7cfa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7cfe:	48 89 50 28          	mov    %rdx,0x28(%rax)
    7d02:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    7d07:	74 0c                	je     7d15 <main+0x198>
    7d09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7d0d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    7d14:	00
    7d15:	48 8d 55 a4          	lea    -0x5c(%rbp),%rdx
    7d19:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7d1d:	48 89 d6             	mov    %rdx,%rsi
    7d20:	48 89 c7             	mov    %rax,%rdi
    7d23:	e8 d0 29 00 00       	call   a6f8 <start_semcheck>
    7d28:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7d2c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    7d2f:	85 c0                	test   %eax,%eax
    7d31:	0f 85 bf 00 00 00    	jne    7df6 <main+0x279>
    7d37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7d3b:	48 83 c0 10          	add    $0x10,%rax
    7d3f:	48 8b 10             	mov    (%rax),%rdx
    7d42:	48 8b 05 17 a3 01 00 	mov    0x1a317(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7d49:	48 8d 0d 7d 24 01 00 	lea    0x1247d(%rip),%rcx        # 1a1cd <yy_chk+0x64d>
    7d50:	48 89 ce             	mov    %rcx,%rsi
    7d53:	48 89 c7             	mov    %rax,%rdi
    7d56:	b8 00 00 00 00       	mov    $0x0,%eax
    7d5b:	e8 10 a7 ff ff       	call   2470 <fprintf@plt>
    7d60:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7d64:	48 83 c0 10          	add    $0x10,%rax
    7d68:	48 8b 00             	mov    (%rax),%rax
    7d6b:	48 8d 15 78 24 01 00 	lea    0x12478(%rip),%rdx        # 1a1ea <yy_chk+0x66a>
    7d72:	48 89 d6             	mov    %rdx,%rsi
    7d75:	48 89 c7             	mov    %rax,%rdi
    7d78:	e8 13 a7 ff ff       	call   2490 <fopen64@plt>
    7d7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7d81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d85:	48 85 c0             	test   %rax,%rax
    7d88:	75 33                	jne    7dbd <main+0x240>
    7d8a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7d8e:	48 83 c0 10          	add    $0x10,%rax
    7d92:	48 8b 10             	mov    (%rax),%rdx
    7d95:	48 8b 05 c4 a2 01 00 	mov    0x1a2c4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7d9c:	48 8d 0d 4d 24 01 00 	lea    0x1244d(%rip),%rcx        # 1a1f0 <yy_chk+0x670>
    7da3:	48 89 ce             	mov    %rcx,%rsi
    7da6:	48 89 c7             	mov    %rax,%rdi
    7da9:	b8 00 00 00 00       	mov    $0x0,%eax
    7dae:	e8 bd a6 ff ff       	call   2470 <fprintf@plt>
    7db3:	bf 01 00 00 00       	mov    $0x1,%edi
    7db8:	e8 83 a7 ff ff       	call   2540 <exit@plt>
    7dbd:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    7dc4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    7dcb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7dcf:	48 83 c0 08          	add    $0x8,%rax
    7dd3:	48 8b 30             	mov    (%rax),%rsi
    7dd6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7dda:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    7dde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7de2:	48 89 c7             	mov    %rax,%rdi
    7de5:	e8 e4 7a 00 00       	call   f8ce <codegen>
    7dea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dee:	48 89 c7             	mov    %rax,%rdi
    7df1:	e8 8a a5 ff ff       	call   2380 <fclose@plt>
    7df6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dfa:	48 89 c7             	mov    %rax,%rdi
    7dfd:	e8 f1 45 00 00       	call   c3f3 <DestroySymTab>
    7e02:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7e06:	48 89 c7             	mov    %rax,%rdi
    7e09:	e8 db 19 00 00       	call   97e9 <destroy_tree>
    7e0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7e12:	48 89 c7             	mov    %rax,%rdi
    7e15:	e8 cf 19 00 00       	call   97e9 <destroy_tree>
    7e1a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7e21:	00
    7e22:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    7e29:	00
    7e2a:	eb 36                	jmp    7e62 <main+0x2e5>
    7e2c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    7e31:	74 14                	je     7e47 <main+0x2ca>
    7e33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7e37:	48 89 c7             	mov    %rax,%rdi
    7e3a:	e8 aa 19 00 00       	call   97e9 <destroy_tree>
    7e3f:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7e46:	00
    7e47:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    7e4c:	74 14                	je     7e62 <main+0x2e5>
    7e4e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7e52:	48 89 c7             	mov    %rax,%rdi
    7e55:	e8 8f 19 00 00       	call   97e9 <destroy_tree>
    7e5a:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    7e61:	00
    7e62:	b8 00 00 00 00       	mov    $0x0,%eax
    7e67:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7e6b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    7e72:	00 00
    7e74:	74 05                	je     7e7b <main+0x2fe>
    7e76:	e8 25 a5 ff ff       	call   23a0 <__stack_chk_fail@plt>
    7e7b:	c9                   	leave
    7e7c:	c3                   	ret

0000000000007e7d <set_flags>:
    7e7d:	f3 0f 1e fa          	endbr64
    7e81:	55                   	push   %rbp
    7e82:	48 89 e5             	mov    %rsp,%rbp
    7e85:	48 83 ec 20          	sub    $0x20,%rsp
    7e89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e8d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    7e90:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    7e97:	e9 84 01 00 00       	jmp    8020 <set_flags+0x1a3>
    7e9c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7e9f:	48 98                	cltq
    7ea1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ea8:	00
    7ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ead:	48 01 d0             	add    %rdx,%rax
    7eb0:	48 8b 00             	mov    (%rax),%rax
    7eb3:	48 8d 15 5d 23 01 00 	lea    0x1235d(%rip),%rdx        # 1a217 <yy_chk+0x697>
    7eba:	48 89 d6             	mov    %rdx,%rsi
    7ebd:	48 89 c7             	mov    %rax,%rdi
    7ec0:	e8 8b a5 ff ff       	call   2450 <strcmp@plt>
    7ec5:	85 c0                	test   %eax,%eax
    7ec7:	75 55                	jne    7f1e <set_flags+0xa1>
    7ec9:	48 8b 05 90 a1 01 00 	mov    0x1a190(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7ed0:	48 89 c1             	mov    %rax,%rcx
    7ed3:	ba 22 00 00 00       	mov    $0x22,%edx
    7ed8:	be 01 00 00 00       	mov    $0x1,%esi
    7edd:	48 8d 05 44 23 01 00 	lea    0x12344(%rip),%rax        # 1a228 <yy_chk+0x6a8>
    7ee4:	48 89 c7             	mov    %rax,%rdi
    7ee7:	e8 64 a6 ff ff       	call   2550 <fwrite@plt>
    7eec:	48 8b 05 6d a1 01 00 	mov    0x1a16d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7ef3:	48 89 c1             	mov    %rax,%rcx
    7ef6:	ba 3f 00 00 00       	mov    $0x3f,%edx
    7efb:	be 01 00 00 00       	mov    $0x1,%esi
    7f00:	48 8d 05 49 23 01 00 	lea    0x12349(%rip),%rax        # 1a250 <yy_chk+0x6d0>
    7f07:	48 89 c7             	mov    %rax,%rdi
    7f0a:	e8 41 a6 ff ff       	call   2550 <fwrite@plt>
    7f0f:	b8 00 00 00 00       	mov    $0x0,%eax
    7f14:	e8 15 01 00 00       	call   802e <set_nonlocal_flag>
    7f19:	e9 fa 00 00 00       	jmp    8018 <set_flags+0x19b>
    7f1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7f21:	48 98                	cltq
    7f23:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7f2a:	00
    7f2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f2f:	48 01 d0             	add    %rdx,%rax
    7f32:	48 8b 00             	mov    (%rax),%rax
    7f35:	48 8d 15 54 23 01 00 	lea    0x12354(%rip),%rdx        # 1a290 <yy_chk+0x710>
    7f3c:	48 89 d6             	mov    %rdx,%rsi
    7f3f:	48 89 c7             	mov    %rax,%rdi
    7f42:	e8 09 a5 ff ff       	call   2450 <strcmp@plt>
    7f47:	85 c0                	test   %eax,%eax
    7f49:	75 32                	jne    7f7d <set_flags+0x100>
    7f4b:	48 8b 05 0e a1 01 00 	mov    0x1a10e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7f52:	48 89 c1             	mov    %rax,%rcx
    7f55:	ba 1b 00 00 00       	mov    $0x1b,%edx
    7f5a:	be 01 00 00 00       	mov    $0x1,%esi
    7f5f:	48 8d 05 2e 23 01 00 	lea    0x1232e(%rip),%rax        # 1a294 <yy_chk+0x714>
    7f66:	48 89 c7             	mov    %rax,%rdi
    7f69:	e8 e2 a5 ff ff       	call   2550 <fwrite@plt>
    7f6e:	b8 00 00 00 00       	mov    $0x0,%eax
    7f73:	e8 cb 00 00 00       	call   8043 <set_o1_flag>
    7f78:	e9 9b 00 00 00       	jmp    8018 <set_flags+0x19b>
    7f7d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7f80:	48 98                	cltq
    7f82:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7f89:	00
    7f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f8e:	48 01 d0             	add    %rdx,%rax
    7f91:	48 8b 00             	mov    (%rax),%rax
    7f94:	48 8d 15 15 23 01 00 	lea    0x12315(%rip),%rdx        # 1a2b0 <yy_chk+0x730>
    7f9b:	48 89 d6             	mov    %rdx,%rsi
    7f9e:	48 89 c7             	mov    %rax,%rdi
    7fa1:	e8 aa a4 ff ff       	call   2450 <strcmp@plt>
    7fa6:	85 c0                	test   %eax,%eax
    7fa8:	75 2f                	jne    7fd9 <set_flags+0x15c>
    7faa:	48 8b 05 af a0 01 00 	mov    0x1a0af(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7fb1:	48 89 c1             	mov    %rax,%rcx
    7fb4:	ba 1b 00 00 00       	mov    $0x1b,%edx
    7fb9:	be 01 00 00 00       	mov    $0x1,%esi
    7fbe:	48 8d 05 ef 22 01 00 	lea    0x122ef(%rip),%rax        # 1a2b4 <yy_chk+0x734>
    7fc5:	48 89 c7             	mov    %rax,%rdi
    7fc8:	e8 83 a5 ff ff       	call   2550 <fwrite@plt>
    7fcd:	b8 00 00 00 00       	mov    $0x0,%eax
    7fd2:	e8 8b 00 00 00       	call   8062 <set_o2_flag>
    7fd7:	eb 3f                	jmp    8018 <set_flags+0x19b>
    7fd9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7fdc:	48 98                	cltq
    7fde:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7fe5:	00
    7fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fea:	48 01 d0             	add    %rdx,%rax
    7fed:	48 8b 10             	mov    (%rax),%rdx
    7ff0:	48 8b 05 69 a0 01 00 	mov    0x1a069(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    7ff7:	48 8d 0d d2 22 01 00 	lea    0x122d2(%rip),%rcx        # 1a2d0 <yy_chk+0x750>
    7ffe:	48 89 ce             	mov    %rcx,%rsi
    8001:	48 89 c7             	mov    %rax,%rdi
    8004:	b8 00 00 00 00       	mov    $0x0,%eax
    8009:	e8 62 a4 ff ff       	call   2470 <fprintf@plt>
    800e:	bf 01 00 00 00       	mov    $0x1,%edi
    8013:	e8 28 a5 ff ff       	call   2540 <exit@plt>
    8018:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
    801c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    8020:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    8024:	0f 8f 72 fe ff ff    	jg     7e9c <set_flags+0x1f>
    802a:	90                   	nop
    802b:	90                   	nop
    802c:	c9                   	leave
    802d:	c3                   	ret

000000000000802e <set_nonlocal_flag>:
    802e:	f3 0f 1e fa          	endbr64
    8032:	55                   	push   %rbp
    8033:	48 89 e5             	mov    %rsp,%rbp
    8036:	c7 05 d0 a6 01 00 01 	movl   $0x1,0x1a6d0(%rip)        # 22710 <FLAG_NON_LOCAL_CHASING>
    803d:	00 00 00
    8040:	90                   	nop
    8041:	5d                   	pop    %rbp
    8042:	c3                   	ret

0000000000008043 <set_o1_flag>:
    8043:	f3 0f 1e fa          	endbr64
    8047:	55                   	push   %rbp
    8048:	48 89 e5             	mov    %rsp,%rbp
    804b:	8b 05 c3 a6 01 00    	mov    0x1a6c3(%rip),%eax        # 22714 <FLAG_OPTIMIZE>
    8051:	85 c0                	test   %eax,%eax
    8053:	7f 0a                	jg     805f <set_o1_flag+0x1c>
    8055:	c7 05 b5 a6 01 00 01 	movl   $0x1,0x1a6b5(%rip)        # 22714 <FLAG_OPTIMIZE>
    805c:	00 00 00
    805f:	90                   	nop
    8060:	5d                   	pop    %rbp
    8061:	c3                   	ret

0000000000008062 <set_o2_flag>:
    8062:	f3 0f 1e fa          	endbr64
    8066:	55                   	push   %rbp
    8067:	48 89 e5             	mov    %rsp,%rbp
    806a:	8b 05 a4 a6 01 00    	mov    0x1a6a4(%rip),%eax        # 22714 <FLAG_OPTIMIZE>
    8070:	83 f8 01             	cmp    $0x1,%eax
    8073:	7f 0a                	jg     807f <set_o2_flag+0x1d>
    8075:	c7 05 95 a6 01 00 02 	movl   $0x2,0x1a695(%rip)        # 22714 <FLAG_OPTIMIZE>
    807c:	00 00 00
    807f:	90                   	nop
    8080:	5d                   	pop    %rbp
    8081:	c3                   	ret

0000000000008082 <nonlocal_flag>:
    8082:	f3 0f 1e fa          	endbr64
    8086:	55                   	push   %rbp
    8087:	48 89 e5             	mov    %rsp,%rbp
    808a:	8b 05 80 a6 01 00    	mov    0x1a680(%rip),%eax        # 22710 <FLAG_NON_LOCAL_CHASING>
    8090:	5d                   	pop    %rbp
    8091:	c3                   	ret

0000000000008092 <optimize_flag>:
    8092:	f3 0f 1e fa          	endbr64
    8096:	55                   	push   %rbp
    8097:	48 89 e5             	mov    %rsp,%rbp
    809a:	8b 05 74 a6 01 00    	mov    0x1a674(%rip),%eax        # 22714 <FLAG_OPTIMIZE>
    80a0:	5d                   	pop    %rbp
    80a1:	c3                   	ret

00000000000080a2 <ParsePascalOnly>:
    80a2:	f3 0f 1e fa          	endbr64
    80a6:	55                   	push   %rbp
    80a7:	48 89 e5             	mov    %rsp,%rbp
    80aa:	48 83 ec 10          	sub    $0x10,%rsp
    80ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80b2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    80b7:	74 62                	je     811b <ParsePascalOnly+0x79>
    80b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80bd:	48 8d 15 2a 22 01 00 	lea    0x1222a(%rip),%rdx        # 1a2ee <yy_chk+0x76e>
    80c4:	48 89 d6             	mov    %rdx,%rsi
    80c7:	48 89 c7             	mov    %rax,%rdi
    80ca:	e8 c1 a3 ff ff       	call   2490 <fopen64@plt>
    80cf:	48 89 05 12 a0 01 00 	mov    %rax,0x1a012(%rip)        # 220e8 <yyin>
    80d6:	48 8b 05 0b a0 01 00 	mov    0x1a00b(%rip),%rax        # 220e8 <yyin>
    80dd:	48 85 c0             	test   %rax,%rax
    80e0:	75 2c                	jne    810e <ParsePascalOnly+0x6c>
    80e2:	48 8b 05 77 9f 01 00 	mov    0x19f77(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    80e9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80ed:	48 8d 0d fc 21 01 00 	lea    0x121fc(%rip),%rcx        # 1a2f0 <yy_chk+0x770>
    80f4:	48 89 ce             	mov    %rcx,%rsi
    80f7:	48 89 c7             	mov    %rax,%rdi
    80fa:	b8 00 00 00 00       	mov    $0x0,%eax
    80ff:	e8 6c a3 ff ff       	call   2470 <fprintf@plt>
    8104:	bf 01 00 00 00       	mov    $0x1,%edi
    8109:	e8 32 a4 ff ff       	call   2540 <exit@plt>
    810e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8112:	48 89 05 ef a5 01 00 	mov    %rax,0x1a5ef(%rip)        # 22708 <file_to_parse>
    8119:	eb 0b                	jmp    8126 <ParsePascalOnly+0x84>
    811b:	48 c7 05 e2 a5 01 00 	movq   $0x0,0x1a5e2(%rip)        # 22708 <file_to_parse>
    8122:	00 00 00 00
    8126:	b8 00 00 00 00       	mov    $0x0,%eax
    812b:	e8 a1 00 00 00       	call   81d1 <InitParser>
    8130:	e8 d4 aa ff ff       	call   2c09 <yyparse>
    8135:	48 8b 05 bc a5 01 00 	mov    0x1a5bc(%rip),%rax        # 226f8 <parse_tree>
    813c:	c9                   	leave
    813d:	c3                   	ret

000000000000813e <ParsePascal>:
    813e:	f3 0f 1e fa          	endbr64
    8142:	55                   	push   %rbp
    8143:	48 89 e5             	mov    %rsp,%rbp
    8146:	48 83 ec 30          	sub    $0x30,%rsp
    814a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    814e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8155:	00 00
    8157:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    815b:	31 c0                	xor    %eax,%eax
    815d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8161:	48 89 c7             	mov    %rax,%rdi
    8164:	e8 39 ff ff ff       	call   80a2 <ParsePascalOnly>
    8169:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    816d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    8172:	74 43                	je     81b7 <ParsePascal+0x79>
    8174:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    8178:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    817c:	48 89 d6             	mov    %rdx,%rsi
    817f:	48 89 c7             	mov    %rax,%rdi
    8182:	e8 71 25 00 00       	call   a6f8 <start_semcheck>
    8187:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    818b:	8b 45 e0             	mov    -0x20(%rbp),%eax
    818e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    8191:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8195:	48 89 c7             	mov    %rax,%rdi
    8198:	e8 56 42 00 00       	call   c3f3 <DestroySymTab>
    819d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    81a1:	7e 14                	jle    81b7 <ParsePascal+0x79>
    81a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81a7:	48 89 c7             	mov    %rax,%rdi
    81aa:	e8 3a 16 00 00       	call   97e9 <destroy_tree>
    81af:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    81b6:	00
    81b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    81bf:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    81c6:	00 00
    81c8:	74 05                	je     81cf <ParsePascal+0x91>
    81ca:	e8 d1 a1 ff ff       	call   23a0 <__stack_chk_fail@plt>
    81cf:	c9                   	leave
    81d0:	c3                   	ret

00000000000081d1 <InitParser>:
    81d1:	f3 0f 1e fa          	endbr64
    81d5:	55                   	push   %rbp
    81d6:	48 89 e5             	mov    %rsp,%rbp
    81d9:	c7 05 4d 9e 01 00 01 	movl   $0x1,0x19e4d(%rip)        # 22030 <line_num>
    81e0:	00 00 00
    81e3:	c7 05 47 9e 01 00 01 	movl   $0x1,0x19e47(%rip)        # 22034 <col_num>
    81ea:	00 00 00
    81ed:	48 c7 05 00 a5 01 00 	movq   $0x0,0x1a500(%rip)        # 226f8 <parse_tree>
    81f4:	00 00 00 00
    81f8:	90                   	nop
    81f9:	5d                   	pop    %rbp
    81fa:	c3                   	ret

00000000000081fb <CreateListNode>:
    81fb:	f3 0f 1e fa          	endbr64
    81ff:	55                   	push   %rbp
    8200:	48 89 e5             	mov    %rsp,%rbp
    8203:	48 83 ec 20          	sub    $0x20,%rsp
    8207:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    820b:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    820e:	bf 18 00 00 00       	mov    $0x18,%edi
    8213:	e8 b8 a2 ff ff       	call   24d0 <malloc@plt>
    8218:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    821c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8220:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    8223:	89 10                	mov    %edx,(%rax)
    8225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8229:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    822d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8235:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    823c:	00
    823d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8241:	c9                   	leave
    8242:	c3                   	ret

0000000000008243 <PushListNodeFront>:
    8243:	f3 0f 1e fa          	endbr64
    8247:	55                   	push   %rbp
    8248:	48 89 e5             	mov    %rsp,%rbp
    824b:	48 83 ec 10          	sub    $0x10,%rsp
    824f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8253:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8257:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    825c:	75 28                	jne    8286 <PushListNodeFront+0x43>
    825e:	48 8d 05 2b 21 01 00 	lea    0x1212b(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    8265:	48 89 c1             	mov    %rax,%rcx
    8268:	ba 1d 00 00 00       	mov    $0x1d,%edx
    826d:	48 8d 05 9c 20 01 00 	lea    0x1209c(%rip),%rax        # 1a310 <yy_chk+0x790>
    8274:	48 89 c6             	mov    %rax,%rsi
    8277:	48 8d 05 ac 20 01 00 	lea    0x120ac(%rip),%rax        # 1a32a <yy_chk+0x7aa>
    827e:	48 89 c7             	mov    %rax,%rdi
    8281:	e8 4a a1 ff ff       	call   23d0 <__assert_fail@plt>
    8286:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    828b:	75 28                	jne    82b5 <PushListNodeFront+0x72>
    828d:	48 8d 05 fc 20 01 00 	lea    0x120fc(%rip),%rax        # 1a390 <__PRETTY_FUNCTION__.3>
    8294:	48 89 c1             	mov    %rax,%rcx
    8297:	ba 1e 00 00 00       	mov    $0x1e,%edx
    829c:	48 8d 05 6d 20 01 00 	lea    0x1206d(%rip),%rax        # 1a310 <yy_chk+0x790>
    82a3:	48 89 c6             	mov    %rax,%rsi
    82a6:	48 8d 05 8f 20 01 00 	lea    0x1208f(%rip),%rax        # 1a33c <yy_chk+0x7bc>
    82ad:	48 89 c7             	mov    %rax,%rdi
    82b0:	e8 1b a1 ff ff       	call   23d0 <__assert_fail@plt>
    82b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    82bd:	48 89 50 10          	mov    %rdx,0x10(%rax)
    82c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82c5:	c9                   	leave
    82c6:	c3                   	ret

00000000000082c7 <PushListNodeBack>:
    82c7:	f3 0f 1e fa          	endbr64
    82cb:	55                   	push   %rbp
    82cc:	48 89 e5             	mov    %rsp,%rbp
    82cf:	48 83 ec 20          	sub    $0x20,%rsp
    82d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82db:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    82e0:	75 28                	jne    830a <PushListNodeBack+0x43>
    82e2:	48 8d 05 c7 20 01 00 	lea    0x120c7(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.2>
    82e9:	48 89 c1             	mov    %rax,%rcx
    82ec:	ba 29 00 00 00       	mov    $0x29,%edx
    82f1:	48 8d 05 18 20 01 00 	lea    0x12018(%rip),%rax        # 1a310 <yy_chk+0x790>
    82f8:	48 89 c6             	mov    %rax,%rsi
    82fb:	48 8d 05 4b 20 01 00 	lea    0x1204b(%rip),%rax        # 1a34d <yy_chk+0x7cd>
    8302:	48 89 c7             	mov    %rax,%rdi
    8305:	e8 c6 a0 ff ff       	call   23d0 <__assert_fail@plt>
    830a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    830f:	75 28                	jne    8339 <PushListNodeBack+0x72>
    8311:	48 8d 05 98 20 01 00 	lea    0x12098(%rip),%rax        # 1a3b0 <__PRETTY_FUNCTION__.2>
    8318:	48 89 c1             	mov    %rax,%rcx
    831b:	ba 2a 00 00 00       	mov    $0x2a,%edx
    8320:	48 8d 05 e9 1f 01 00 	lea    0x11fe9(%rip),%rax        # 1a310 <yy_chk+0x790>
    8327:	48 89 c6             	mov    %rax,%rsi
    832a:	48 8d 05 f9 1f 01 00 	lea    0x11ff9(%rip),%rax        # 1a32a <yy_chk+0x7aa>
    8331:	48 89 c7             	mov    %rax,%rdi
    8334:	e8 97 a0 ff ff       	call   23d0 <__assert_fail@plt>
    8339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    833d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8341:	eb 0c                	jmp    834f <PushListNodeBack+0x88>
    8343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8347:	48 8b 40 10          	mov    0x10(%rax),%rax
    834b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    834f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8353:	48 8b 40 10          	mov    0x10(%rax),%rax
    8357:	48 85 c0             	test   %rax,%rax
    835a:	75 e7                	jne    8343 <PushListNodeBack+0x7c>
    835c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8360:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8364:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    836c:	c9                   	leave
    836d:	c3                   	ret

000000000000836e <InsertListNode>:
    836e:	f3 0f 1e fa          	endbr64
    8372:	55                   	push   %rbp
    8373:	48 89 e5             	mov    %rsp,%rbp
    8376:	48 83 ec 10          	sub    $0x10,%rsp
    837a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    837e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8382:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8387:	75 28                	jne    83b1 <InsertListNode+0x43>
    8389:	48 8d 05 38 20 01 00 	lea    0x12038(%rip),%rax        # 1a3c8 <__PRETTY_FUNCTION__.1>
    8390:	48 89 c1             	mov    %rax,%rcx
    8393:	ba 36 00 00 00       	mov    $0x36,%edx
    8398:	48 8d 05 71 1f 01 00 	lea    0x11f71(%rip),%rax        # 1a310 <yy_chk+0x790>
    839f:	48 89 c6             	mov    %rax,%rsi
    83a2:	48 8d 05 b5 1f 01 00 	lea    0x11fb5(%rip),%rax        # 1a35e <yy_chk+0x7de>
    83a9:	48 89 c7             	mov    %rax,%rdi
    83ac:	e8 1f a0 ff ff       	call   23d0 <__assert_fail@plt>
    83b1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    83b6:	75 28                	jne    83e0 <InsertListNode+0x72>
    83b8:	48 8d 05 09 20 01 00 	lea    0x12009(%rip),%rax        # 1a3c8 <__PRETTY_FUNCTION__.1>
    83bf:	48 89 c1             	mov    %rax,%rcx
    83c2:	ba 37 00 00 00       	mov    $0x37,%edx
    83c7:	48 8d 05 42 1f 01 00 	lea    0x11f42(%rip),%rax        # 1a310 <yy_chk+0x790>
    83ce:	48 89 c6             	mov    %rax,%rsi
    83d1:	48 8d 05 75 1f 01 00 	lea    0x11f75(%rip),%rax        # 1a34d <yy_chk+0x7cd>
    83d8:	48 89 c7             	mov    %rax,%rdi
    83db:	e8 f0 9f ff ff       	call   23d0 <__assert_fail@plt>
    83e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83e4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    83e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    83ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
    83f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    83f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    83fc:	90                   	nop
    83fd:	c9                   	leave
    83fe:	c3                   	ret

00000000000083ff <PopListHeadNode>:
    83ff:	f3 0f 1e fa          	endbr64
    8403:	55                   	push   %rbp
    8404:	48 89 e5             	mov    %rsp,%rbp
    8407:	48 83 ec 10          	sub    $0x10,%rsp
    840b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8413:	be 00 00 00 00       	mov    $0x0,%esi
    8418:	48 89 c7             	mov    %rax,%rdi
    841b:	e8 02 00 00 00       	call   8422 <DeleteListNode>
    8420:	c9                   	leave
    8421:	c3                   	ret

0000000000008422 <DeleteListNode>:
    8422:	f3 0f 1e fa          	endbr64
    8426:	55                   	push   %rbp
    8427:	48 89 e5             	mov    %rsp,%rbp
    842a:	48 83 ec 20          	sub    $0x20,%rsp
    842e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8432:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8436:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    843b:	75 28                	jne    8465 <DeleteListNode+0x43>
    843d:	48 8d 05 94 1f 01 00 	lea    0x11f94(%rip),%rax        # 1a3d8 <__PRETTY_FUNCTION__.0>
    8444:	48 89 c1             	mov    %rax,%rcx
    8447:	ba 46 00 00 00       	mov    $0x46,%edx
    844c:	48 8d 05 bd 1e 01 00 	lea    0x11ebd(%rip),%rax        # 1a310 <yy_chk+0x790>
    8453:	48 89 c6             	mov    %rax,%rsi
    8456:	48 8d 05 0e 1f 01 00 	lea    0x11f0e(%rip),%rax        # 1a36b <yy_chk+0x7eb>
    845d:	48 89 c7             	mov    %rax,%rdi
    8460:	e8 6b 9f ff ff       	call   23d0 <__assert_fail@plt>
    8465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8469:	48 8b 40 10          	mov    0x10(%rax),%rax
    846d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8471:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    8476:	74 0c                	je     8484 <DeleteListNode+0x62>
    8478:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    847c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8480:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8488:	48 89 c7             	mov    %rax,%rdi
    848b:	e8 60 9e ff ff       	call   22f0 <free@plt>
    8490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8494:	c9                   	leave
    8495:	c3                   	ret

0000000000008496 <DestroyList>:
    8496:	f3 0f 1e fa          	endbr64
    849a:	55                   	push   %rbp
    849b:	48 89 e5             	mov    %rsp,%rbp
    849e:	48 83 ec 20          	sub    $0x20,%rsp
    84a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    84ae:	eb 15                	jmp    84c5 <DestroyList+0x2f>
    84b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b4:	be 00 00 00 00       	mov    $0x0,%esi
    84b9:	48 89 c7             	mov    %rax,%rdi
    84bc:	e8 61 ff ff ff       	call   8422 <DeleteListNode>
    84c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    84c5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    84ca:	75 e4                	jne    84b0 <DestroyList+0x1a>
    84cc:	90                   	nop
    84cd:	90                   	nop
    84ce:	c9                   	leave
    84cf:	c3                   	ret

00000000000084d0 <PrintList>:
    84d0:	f3 0f 1e fa          	endbr64
    84d4:	55                   	push   %rbp
    84d5:	48 89 e5             	mov    %rsp,%rbp
    84d8:	48 83 ec 30          	sub    $0x30,%rsp
    84dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    84e4:	89 55 dc             	mov    %edx,-0x24(%rbp)
    84e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    84ee:	eb 24                	jmp    8514 <PrintList+0x44>
    84f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84f4:	48 89 c1             	mov    %rax,%rcx
    84f7:	ba 02 00 00 00       	mov    $0x2,%edx
    84fc:	be 01 00 00 00       	mov    $0x1,%esi
    8501:	48 8d 05 70 1e 01 00 	lea    0x11e70(%rip),%rax        # 1a378 <yy_chk+0x7f8>
    8508:	48 89 c7             	mov    %rax,%rdi
    850b:	e8 40 a0 ff ff       	call   2550 <fwrite@plt>
    8510:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    8514:	8b 45 f4             	mov    -0xc(%rbp),%eax
    8517:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    851a:	7c d4                	jl     84f0 <PrintList+0x20>
    851c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8520:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8524:	eb 56                	jmp    857c <PrintList+0xac>
    8526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    852e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8532:	48 8d 0d 42 1e 01 00 	lea    0x11e42(%rip),%rcx        # 1a37b <yy_chk+0x7fb>
    8539:	48 89 ce             	mov    %rcx,%rsi
    853c:	48 89 c7             	mov    %rax,%rdi
    853f:	b8 00 00 00 00       	mov    $0x0,%eax
    8544:	e8 27 9f ff ff       	call   2470 <fprintf@plt>
    8549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    854d:	48 8b 40 10          	mov    0x10(%rax),%rax
    8551:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8555:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    855a:	74 20                	je     857c <PrintList+0xac>
    855c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8560:	48 89 c1             	mov    %rax,%rcx
    8563:	ba 04 00 00 00       	mov    $0x4,%edx
    8568:	be 01 00 00 00       	mov    $0x1,%esi
    856d:	48 8d 05 0a 1e 01 00 	lea    0x11e0a(%rip),%rax        # 1a37e <yy_chk+0x7fe>
    8574:	48 89 c7             	mov    %rax,%rdi
    8577:	e8 d4 9f ff ff       	call   2550 <fwrite@plt>
    857c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8581:	75 a3                	jne    8526 <PrintList+0x56>
    8583:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8587:	48 89 c6             	mov    %rax,%rsi
    858a:	bf 0a 00 00 00       	mov    $0xa,%edi
    858f:	e8 8c 9e ff ff       	call   2420 <fputc@plt>
    8594:	90                   	nop
    8595:	c9                   	leave
    8596:	c3                   	ret

0000000000008597 <ListLength>:
    8597:	f3 0f 1e fa          	endbr64
    859b:	55                   	push   %rbp
    859c:	48 89 e5             	mov    %rsp,%rbp
    859f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85a3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    85aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    85b2:	eb 10                	jmp    85c4 <ListLength+0x2d>
    85b4:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    85b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85bc:	48 8b 40 10          	mov    0x10(%rax),%rax
    85c0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    85c4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    85c9:	75 e9                	jne    85b4 <ListLength+0x1d>
    85cb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    85ce:	5d                   	pop    %rbp
    85cf:	c3                   	ret

00000000000085d0 <print_indent>:
    85d0:	f3 0f 1e fa          	endbr64
    85d4:	55                   	push   %rbp
    85d5:	48 89 e5             	mov    %rsp,%rbp
    85d8:	48 83 ec 20          	sub    $0x20,%rsp
    85dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85e0:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    85e3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    85ea:	eb 24                	jmp    8610 <print_indent+0x40>
    85ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85f0:	48 89 c1             	mov    %rax,%rcx
    85f3:	ba 02 00 00 00       	mov    $0x2,%edx
    85f8:	be 01 00 00 00       	mov    $0x1,%esi
    85fd:	48 8d 05 e4 1d 01 00 	lea    0x11de4(%rip),%rax        # 1a3e8 <__PRETTY_FUNCTION__.0+0x10>
    8604:	48 89 c7             	mov    %rax,%rdi
    8607:	e8 44 9f ff ff       	call   2550 <fwrite@plt>
    860c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    8610:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8613:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    8616:	7c d4                	jl     85ec <print_indent+0x1c>
    8618:	90                   	nop
    8619:	90                   	nop
    861a:	c9                   	leave
    861b:	c3                   	ret

000000000000861c <list_print>:
    861c:	f3 0f 1e fa          	endbr64
    8620:	55                   	push   %rbp
    8621:	48 89 e5             	mov    %rsp,%rbp
    8624:	48 83 ec 30          	sub    $0x30,%rsp
    8628:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    862c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8630:	89 55 dc             	mov    %edx,-0x24(%rbp)
    8633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8637:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    863b:	e9 2b 01 00 00       	jmp    876b <list_print+0x14f>
    8640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8644:	48 8b 40 08          	mov    0x8(%rax),%rax
    8648:	48 85 c0             	test   %rax,%rax
    864b:	75 28                	jne    8675 <list_print+0x59>
    864d:	48 8d 05 fc 21 01 00 	lea    0x121fc(%rip),%rax        # 1a850 <__PRETTY_FUNCTION__.2>
    8654:	48 89 c1             	mov    %rax,%rcx
    8657:	ba 1e 00 00 00       	mov    $0x1e,%edx
    865c:	48 8d 05 8d 1d 01 00 	lea    0x11d8d(%rip),%rax        # 1a3f0 <__PRETTY_FUNCTION__.0+0x18>
    8663:	48 89 c6             	mov    %rax,%rsi
    8666:	48 8d 05 a2 1d 01 00 	lea    0x11da2(%rip),%rax        # 1a40f <__PRETTY_FUNCTION__.0+0x37>
    866d:	48 89 c7             	mov    %rax,%rdi
    8670:	e8 5b 9d ff ff       	call   23d0 <__assert_fail@plt>
    8675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8679:	8b 00                	mov    (%rax),%eax
    867b:	83 f8 03             	cmp    $0x3,%eax
    867e:	74 7c                	je     86fc <list_print+0xe0>
    8680:	83 f8 03             	cmp    $0x3,%eax
    8683:	0f 87 a9 00 00 00    	ja     8732 <list_print+0x116>
    8689:	83 f8 02             	cmp    $0x2,%eax
    868c:	74 36                	je     86c4 <list_print+0xa8>
    868e:	83 f8 02             	cmp    $0x2,%eax
    8691:	0f 87 9b 00 00 00    	ja     8732 <list_print+0x116>
    8697:	85 c0                	test   %eax,%eax
    8699:	74 0a                	je     86a5 <list_print+0x89>
    869b:	83 f8 01             	cmp    $0x1,%eax
    869e:	74 40                	je     86e0 <list_print+0xc4>
    86a0:	e9 8d 00 00 00       	jmp    8732 <list_print+0x116>
    86a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86a9:	48 8b 40 08          	mov    0x8(%rax),%rax
    86ad:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86b0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    86b4:	48 89 ce             	mov    %rcx,%rsi
    86b7:	48 89 c7             	mov    %rax,%rdi
    86ba:	e8 bb 00 00 00       	call   877a <tree_print>
    86bf:	e9 9b 00 00 00       	jmp    875f <list_print+0x143>
    86c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    86cc:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86cf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    86d3:	48 89 ce             	mov    %rcx,%rsi
    86d6:	48 89 c7             	mov    %rax,%rdi
    86d9:	e8 23 0b 00 00       	call   9201 <expr_print>
    86de:	eb 7f                	jmp    875f <list_print+0x143>
    86e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e4:	48 8b 40 08          	mov    0x8(%rax),%rax
    86e8:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86eb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    86ef:	48 89 ce             	mov    %rcx,%rsi
    86f2:	48 89 c7             	mov    %rax,%rdi
    86f5:	e8 e3 05 00 00       	call   8cdd <stmt_print>
    86fa:	eb 63                	jmp    875f <list_print+0x143>
    86fc:	8b 55 dc             	mov    -0x24(%rbp),%edx
    86ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8703:	89 d6                	mov    %edx,%esi
    8705:	48 89 c7             	mov    %rax,%rdi
    8708:	e8 c3 fe ff ff       	call   85d0 <print_indent>
    870d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8711:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8715:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8719:	48 8d 0d 00 1d 01 00 	lea    0x11d00(%rip),%rcx        # 1a420 <__PRETTY_FUNCTION__.0+0x48>
    8720:	48 89 ce             	mov    %rcx,%rsi
    8723:	48 89 c7             	mov    %rax,%rdi
    8726:	b8 00 00 00 00       	mov    $0x0,%eax
    872b:	e8 40 9d ff ff       	call   2470 <fprintf@plt>
    8730:	eb 2d                	jmp    875f <list_print+0x143>
    8732:	48 8b 05 27 99 01 00 	mov    0x19927(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    8739:	48 89 c1             	mov    %rax,%rcx
    873c:	ba 18 00 00 00       	mov    $0x18,%edx
    8741:	be 01 00 00 00       	mov    $0x1,%esi
    8746:	48 8d 05 d7 1c 01 00 	lea    0x11cd7(%rip),%rax        # 1a424 <__PRETTY_FUNCTION__.0+0x4c>
    874d:	48 89 c7             	mov    %rax,%rdi
    8750:	e8 fb 9d ff ff       	call   2550 <fwrite@plt>
    8755:	bf 01 00 00 00       	mov    $0x1,%edi
    875a:	e8 e1 9d ff ff       	call   2540 <exit@plt>
    875f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8763:	48 8b 40 10          	mov    0x10(%rax),%rax
    8767:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    876b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8770:	0f 85 ca fe ff ff    	jne    8640 <list_print+0x24>
    8776:	90                   	nop
    8777:	90                   	nop
    8778:	c9                   	leave
    8779:	c3                   	ret

000000000000877a <tree_print>:
    877a:	f3 0f 1e fa          	endbr64
    877e:	55                   	push   %rbp
    877f:	48 89 e5             	mov    %rsp,%rbp
    8782:	48 83 ec 20          	sub    $0x20,%rsp
    8786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    878a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    878e:	89 55 ec             	mov    %edx,-0x14(%rbp)
    8791:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8794:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8798:	89 d6                	mov    %edx,%esi
    879a:	48 89 c7             	mov    %rax,%rdi
    879d:	e8 2e fe ff ff       	call   85d0 <print_indent>
    87a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a6:	8b 40 04             	mov    0x4(%rax),%eax
    87a9:	83 f8 07             	cmp    $0x7,%eax
    87ac:	0f 87 fb 04 00 00    	ja     8cad <tree_print+0x533>
    87b2:	89 c0                	mov    %eax,%eax
    87b4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    87bb:	00
    87bc:	48 8d 05 cd 1d 01 00 	lea    0x11dcd(%rip),%rax        # 1a590 <__PRETTY_FUNCTION__.0+0x1b8>
    87c3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    87c6:	48 98                	cltq
    87c8:	48 8d 15 c1 1d 01 00 	lea    0x11dc1(%rip),%rdx        # 1a590 <__PRETTY_FUNCTION__.0+0x1b8>
    87cf:	48 01 d0             	add    %rdx,%rax
    87d2:	3e ff e0             	notrack jmp *%rax
    87d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    87dd:	48 85 c0             	test   %rax,%rax
    87e0:	75 28                	jne    880a <tree_print+0x90>
    87e2:	48 8d 05 77 20 01 00 	lea    0x12077(%rip),%rax        # 1a860 <__PRETTY_FUNCTION__.1>
    87e9:	48 89 c1             	mov    %rax,%rcx
    87ec:	ba 3d 00 00 00       	mov    $0x3d,%edx
    87f1:	48 8d 05 f8 1b 01 00 	lea    0x11bf8(%rip),%rax        # 1a3f0 <__PRETTY_FUNCTION__.0+0x18>
    87f8:	48 89 c6             	mov    %rax,%rsi
    87fb:	48 8d 05 3e 1c 01 00 	lea    0x11c3e(%rip),%rax        # 1a440 <__PRETTY_FUNCTION__.0+0x68>
    8802:	48 89 c7             	mov    %rax,%rdi
    8805:	e8 c6 9b ff ff       	call   23d0 <__assert_fail@plt>
    880a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    880e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8816:	48 8d 0d 53 1c 01 00 	lea    0x11c53(%rip),%rcx        # 1a470 <__PRETTY_FUNCTION__.0+0x98>
    881d:	48 89 ce             	mov    %rcx,%rsi
    8820:	48 89 c7             	mov    %rax,%rdi
    8823:	b8 00 00 00 00       	mov    $0x0,%eax
    8828:	e8 43 9c ff ff       	call   2470 <fprintf@plt>
    882d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8831:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8834:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8838:	89 d6                	mov    %edx,%esi
    883a:	48 89 c7             	mov    %rax,%rdi
    883d:	e8 8e fd ff ff       	call   85d0 <print_indent>
    8842:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8846:	48 89 c1             	mov    %rax,%rcx
    8849:	ba 08 00 00 00       	mov    $0x8,%edx
    884e:	be 01 00 00 00       	mov    $0x1,%esi
    8853:	48 8d 05 24 1c 01 00 	lea    0x11c24(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    885a:	48 89 c7             	mov    %rax,%rdi
    885d:	e8 ee 9c ff ff       	call   2550 <fwrite@plt>
    8862:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8865:	8d 50 01             	lea    0x1(%rax),%edx
    8868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8870:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8874:	48 89 ce             	mov    %rcx,%rsi
    8877:	48 89 c7             	mov    %rax,%rdi
    887a:	e8 9d fd ff ff       	call   861c <list_print>
    887f:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8882:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8886:	89 d6                	mov    %edx,%esi
    8888:	48 89 c7             	mov    %rax,%rdi
    888b:	e8 40 fd ff ff       	call   85d0 <print_indent>
    8890:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8894:	48 89 c1             	mov    %rax,%rcx
    8897:	ba 0d 00 00 00       	mov    $0xd,%edx
    889c:	be 01 00 00 00       	mov    $0x1,%esi
    88a1:	48 8d 05 df 1b 01 00 	lea    0x11bdf(%rip),%rax        # 1a487 <__PRETTY_FUNCTION__.0+0xaf>
    88a8:	48 89 c7             	mov    %rax,%rdi
    88ab:	e8 a0 9c ff ff       	call   2550 <fwrite@plt>
    88b0:	8b 45 ec             	mov    -0x14(%rbp),%eax
    88b3:	8d 50 01             	lea    0x1(%rax),%edx
    88b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88ba:	48 8b 40 18          	mov    0x18(%rax),%rax
    88be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    88c2:	48 89 ce             	mov    %rcx,%rsi
    88c5:	48 89 c7             	mov    %rax,%rdi
    88c8:	e8 4f fd ff ff       	call   861c <list_print>
    88cd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    88d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88d4:	89 d6                	mov    %edx,%esi
    88d6:	48 89 c7             	mov    %rax,%rdi
    88d9:	e8 f2 fc ff ff       	call   85d0 <print_indent>
    88de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88e2:	48 89 c1             	mov    %rax,%rcx
    88e5:	ba 0f 00 00 00       	mov    $0xf,%edx
    88ea:	be 01 00 00 00       	mov    $0x1,%esi
    88ef:	48 8d 05 9f 1b 01 00 	lea    0x11b9f(%rip),%rax        # 1a495 <__PRETTY_FUNCTION__.0+0xbd>
    88f6:	48 89 c7             	mov    %rax,%rdi
    88f9:	e8 52 9c ff ff       	call   2550 <fwrite@plt>
    88fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8901:	8d 50 01             	lea    0x1(%rax),%edx
    8904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8908:	48 8b 40 28          	mov    0x28(%rax),%rax
    890c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8910:	48 89 ce             	mov    %rcx,%rsi
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 01 fd ff ff       	call   861c <list_print>
    891b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    891e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8922:	89 d6                	mov    %edx,%esi
    8924:	48 89 c7             	mov    %rax,%rdi
    8927:	e8 a4 fc ff ff       	call   85d0 <print_indent>
    892c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8930:	48 89 c1             	mov    %rax,%rcx
    8933:	ba 08 00 00 00       	mov    $0x8,%edx
    8938:	be 01 00 00 00       	mov    $0x1,%esi
    893d:	48 8d 05 61 1b 01 00 	lea    0x11b61(%rip),%rax        # 1a4a5 <__PRETTY_FUNCTION__.0+0xcd>
    8944:	48 89 c7             	mov    %rax,%rdi
    8947:	e8 04 9c ff ff       	call   2550 <fwrite@plt>
    894c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    894f:	8d 50 01             	lea    0x1(%rax),%edx
    8952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8956:	48 8b 40 30          	mov    0x30(%rax),%rax
    895a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    895e:	48 89 ce             	mov    %rcx,%rsi
    8961:	48 89 c7             	mov    %rax,%rdi
    8964:	e8 74 03 00 00       	call   8cdd <stmt_print>
    8969:	e9 6c 03 00 00       	jmp    8cda <tree_print+0x560>
    896e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8972:	8b 40 08             	mov    0x8(%rax),%eax
    8975:	83 f8 05             	cmp    $0x5,%eax
    8978:	74 0a                	je     8984 <tree_print+0x20a>
    897a:	83 f8 06             	cmp    $0x6,%eax
    897d:	74 3e                	je     89bd <tree_print+0x243>
    897f:	e9 c3 00 00 00       	jmp    8a47 <tree_print+0x2cd>
    8984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8988:	48 8b 50 10          	mov    0x10(%rax),%rdx
    898c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8990:	48 8d 0d 17 1b 01 00 	lea    0x11b17(%rip),%rcx        # 1a4ae <__PRETTY_FUNCTION__.0+0xd6>
    8997:	48 89 ce             	mov    %rcx,%rsi
    899a:	48 89 c7             	mov    %rax,%rdi
    899d:	b8 00 00 00 00       	mov    $0x0,%eax
    89a2:	e8 c9 9a ff ff       	call   2470 <fprintf@plt>
    89a7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    89aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89ae:	89 d6                	mov    %edx,%esi
    89b0:	48 89 c7             	mov    %rax,%rdi
    89b3:	e8 18 fc ff ff       	call   85d0 <print_indent>
    89b8:	e9 b7 00 00 00       	jmp    8a74 <tree_print+0x2fa>
    89bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    89c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89c9:	48 8d 0d ef 1a 01 00 	lea    0x11aef(%rip),%rcx        # 1a4bf <__PRETTY_FUNCTION__.0+0xe7>
    89d0:	48 89 ce             	mov    %rcx,%rsi
    89d3:	48 89 c7             	mov    %rax,%rdi
    89d6:	b8 00 00 00 00       	mov    $0x0,%eax
    89db:	e8 90 9a ff ff       	call   2470 <fprintf@plt>
    89e0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    89e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89e7:	89 d6                	mov    %edx,%esi
    89e9:	48 89 c7             	mov    %rax,%rdi
    89ec:	e8 df fb ff ff       	call   85d0 <print_indent>
    89f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f5:	48 8b 40 30          	mov    0x30(%rax),%rax
    89f9:	48 85 c0             	test   %rax,%rax
    89fc:	74 25                	je     8a23 <tree_print+0x2a9>
    89fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a02:	48 8b 50 30          	mov    0x30(%rax),%rdx
    8a06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a0a:	48 8d 0d be 1a 01 00 	lea    0x11abe(%rip),%rcx        # 1a4cf <__PRETTY_FUNCTION__.0+0xf7>
    8a11:	48 89 ce             	mov    %rcx,%rsi
    8a14:	48 89 c7             	mov    %rax,%rdi
    8a17:	b8 00 00 00 00       	mov    $0x0,%eax
    8a1c:	e8 4f 9a ff ff       	call   2470 <fprintf@plt>
    8a21:	eb 51                	jmp    8a74 <tree_print+0x2fa>
    8a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a27:	8b 50 28             	mov    0x28(%rax),%edx
    8a2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a2e:	48 8d 0d a8 1a 01 00 	lea    0x11aa8(%rip),%rcx        # 1a4dd <__PRETTY_FUNCTION__.0+0x105>
    8a35:	48 89 ce             	mov    %rcx,%rsi
    8a38:	48 89 c7             	mov    %rax,%rdi
    8a3b:	b8 00 00 00 00       	mov    $0x0,%eax
    8a40:	e8 2b 9a ff ff       	call   2470 <fprintf@plt>
    8a45:	eb 2d                	jmp    8a74 <tree_print+0x2fa>
    8a47:	48 8b 05 12 96 01 00 	mov    0x19612(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    8a4e:	48 89 c1             	mov    %rax,%rcx
    8a51:	ba 1d 00 00 00       	mov    $0x1d,%edx
    8a56:	be 01 00 00 00       	mov    $0x1,%esi
    8a5b:	48 8d 05 89 1a 01 00 	lea    0x11a89(%rip),%rax        # 1a4eb <__PRETTY_FUNCTION__.0+0x113>
    8a62:	48 89 c7             	mov    %rax,%rdi
    8a65:	e8 e6 9a ff ff       	call   2550 <fwrite@plt>
    8a6a:	bf 01 00 00 00       	mov    $0x1,%edi
    8a6f:	e8 cc 9a ff ff       	call   2540 <exit@plt>
    8a74:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8a78:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8a7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a7f:	89 d6                	mov    %edx,%esi
    8a81:	48 89 c7             	mov    %rax,%rdi
    8a84:	e8 47 fb ff ff       	call   85d0 <print_indent>
    8a89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a8d:	48 89 c1             	mov    %rax,%rcx
    8a90:	ba 08 00 00 00       	mov    $0x8,%edx
    8a95:	be 01 00 00 00       	mov    $0x1,%esi
    8a9a:	48 8d 05 dd 19 01 00 	lea    0x119dd(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    8aa1:	48 89 c7             	mov    %rax,%rdi
    8aa4:	e8 a7 9a ff ff       	call   2550 <fwrite@plt>
    8aa9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8aac:	8d 50 01             	lea    0x1(%rax),%edx
    8aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ab3:	48 8b 40 20          	mov    0x20(%rax),%rax
    8ab7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8abb:	48 89 ce             	mov    %rcx,%rsi
    8abe:	48 89 c7             	mov    %rax,%rdi
    8ac1:	e8 56 fb ff ff       	call   861c <list_print>
    8ac6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8ac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8acd:	89 d6                	mov    %edx,%esi
    8acf:	48 89 c7             	mov    %rax,%rdi
    8ad2:	e8 f9 fa ff ff       	call   85d0 <print_indent>
    8ad7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8adb:	48 89 c1             	mov    %rax,%rcx
    8ade:	ba 0d 00 00 00       	mov    $0xd,%edx
    8ae3:	be 01 00 00 00       	mov    $0x1,%esi
    8ae8:	48 8d 05 98 19 01 00 	lea    0x11998(%rip),%rax        # 1a487 <__PRETTY_FUNCTION__.0+0xaf>
    8aef:	48 89 c7             	mov    %rax,%rdi
    8af2:	e8 59 9a ff ff       	call   2550 <fwrite@plt>
    8af7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8afa:	8d 50 01             	lea    0x1(%rax),%edx
    8afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b01:	48 8b 40 40          	mov    0x40(%rax),%rax
    8b05:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b09:	48 89 ce             	mov    %rcx,%rsi
    8b0c:	48 89 c7             	mov    %rax,%rdi
    8b0f:	e8 08 fb ff ff       	call   861c <list_print>
    8b14:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8b17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b1b:	89 d6                	mov    %edx,%esi
    8b1d:	48 89 c7             	mov    %rax,%rdi
    8b20:	e8 ab fa ff ff       	call   85d0 <print_indent>
    8b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b29:	48 89 c1             	mov    %rax,%rcx
    8b2c:	ba 0f 00 00 00       	mov    $0xf,%edx
    8b31:	be 01 00 00 00       	mov    $0x1,%esi
    8b36:	48 8d 05 58 19 01 00 	lea    0x11958(%rip),%rax        # 1a495 <__PRETTY_FUNCTION__.0+0xbd>
    8b3d:	48 89 c7             	mov    %rax,%rdi
    8b40:	e8 0b 9a ff ff       	call   2550 <fwrite@plt>
    8b45:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b48:	8d 50 01             	lea    0x1(%rax),%edx
    8b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b4f:	48 8b 40 48          	mov    0x48(%rax),%rax
    8b53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b57:	48 89 ce             	mov    %rcx,%rsi
    8b5a:	48 89 c7             	mov    %rax,%rdi
    8b5d:	e8 ba fa ff ff       	call   861c <list_print>
    8b62:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8b65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b69:	89 d6                	mov    %edx,%esi
    8b6b:	48 89 c7             	mov    %rax,%rdi
    8b6e:	e8 5d fa ff ff       	call   85d0 <print_indent>
    8b73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b77:	48 89 c1             	mov    %rax,%rcx
    8b7a:	ba 08 00 00 00       	mov    $0x8,%edx
    8b7f:	be 01 00 00 00       	mov    $0x1,%esi
    8b84:	48 8d 05 1a 19 01 00 	lea    0x1191a(%rip),%rax        # 1a4a5 <__PRETTY_FUNCTION__.0+0xcd>
    8b8b:	48 89 c7             	mov    %rax,%rdi
    8b8e:	e8 bd 99 ff ff       	call   2550 <fwrite@plt>
    8b93:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8b96:	8d 50 01             	lea    0x1(%rax),%edx
    8b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b9d:	48 8b 40 50          	mov    0x50(%rax),%rax
    8ba1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ba5:	48 89 ce             	mov    %rcx,%rsi
    8ba8:	48 89 c7             	mov    %rax,%rdi
    8bab:	e8 2d 01 00 00       	call   8cdd <stmt_print>
    8bb0:	e9 25 01 00 00       	jmp    8cda <tree_print+0x560>
    8bb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb9:	48 8b 40 18          	mov    0x18(%rax),%rax
    8bbd:	48 85 c0             	test   %rax,%rax
    8bc0:	74 25                	je     8be7 <tree_print+0x46d>
    8bc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bc6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    8bca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bce:	48 8d 0d 34 19 01 00 	lea    0x11934(%rip),%rcx        # 1a509 <__PRETTY_FUNCTION__.0+0x131>
    8bd5:	48 89 ce             	mov    %rcx,%rsi
    8bd8:	48 89 c7             	mov    %rax,%rdi
    8bdb:	b8 00 00 00 00       	mov    $0x0,%eax
    8be0:	e8 8b 98 ff ff       	call   2470 <fprintf@plt>
    8be5:	eb 22                	jmp    8c09 <tree_print+0x48f>
    8be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8beb:	8b 50 10             	mov    0x10(%rax),%edx
    8bee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bf2:	48 8d 0d 26 19 01 00 	lea    0x11926(%rip),%rcx        # 1a51f <__PRETTY_FUNCTION__.0+0x147>
    8bf9:	48 89 ce             	mov    %rcx,%rsi
    8bfc:	48 89 c7             	mov    %rax,%rdi
    8bff:	b8 00 00 00 00       	mov    $0x0,%eax
    8c04:	e8 67 98 ff ff       	call   2470 <fprintf@plt>
    8c09:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8c0c:	8d 50 01             	lea    0x1(%rax),%edx
    8c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c13:	48 8b 40 08          	mov    0x8(%rax),%rax
    8c17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c1b:	48 89 ce             	mov    %rcx,%rsi
    8c1e:	48 89 c7             	mov    %rax,%rdi
    8c21:	e8 f6 f9 ff ff       	call   861c <list_print>
    8c26:	e9 af 00 00 00       	jmp    8cda <tree_print+0x560>
    8c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c2f:	8b 70 18             	mov    0x18(%rax),%esi
    8c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c36:	8b 48 14             	mov    0x14(%rax),%ecx
    8c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c3d:	8b 50 10             	mov    0x10(%rax),%edx
    8c40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c44:	41 89 f0             	mov    %esi,%r8d
    8c47:	48 8d 35 ea 18 01 00 	lea    0x118ea(%rip),%rsi        # 1a538 <__PRETTY_FUNCTION__.0+0x160>
    8c4e:	48 89 c7             	mov    %rax,%rdi
    8c51:	b8 00 00 00 00       	mov    $0x0,%eax
    8c56:	e8 15 98 ff ff       	call   2470 <fprintf@plt>
    8c5b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8c5e:	8d 50 01             	lea    0x1(%rax),%edx
    8c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c65:	48 8b 40 08          	mov    0x8(%rax),%rax
    8c69:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c6d:	48 89 ce             	mov    %rcx,%rsi
    8c70:	48 89 c7             	mov    %rax,%rdi
    8c73:	e8 a4 f9 ff ff       	call   861c <list_print>
    8c78:	eb 60                	jmp    8cda <tree_print+0x560>
    8c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c7e:	8b 70 14             	mov    0x14(%rax),%esi
    8c81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c85:	8b 48 10             	mov    0x10(%rax),%ecx
    8c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c8c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8c90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c94:	41 89 f0             	mov    %esi,%r8d
    8c97:	48 8d 35 c1 18 01 00 	lea    0x118c1(%rip),%rsi        # 1a55f <__PRETTY_FUNCTION__.0+0x187>
    8c9e:	48 89 c7             	mov    %rax,%rdi
    8ca1:	b8 00 00 00 00       	mov    $0x0,%eax
    8ca6:	e8 c5 97 ff ff       	call   2470 <fprintf@plt>
    8cab:	eb 2d                	jmp    8cda <tree_print+0x560>
    8cad:	48 8b 05 ac 93 01 00 	mov    0x193ac(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    8cb4:	48 89 c1             	mov    %rax,%rcx
    8cb7:	ba 18 00 00 00       	mov    $0x18,%edx
    8cbc:	be 01 00 00 00       	mov    $0x1,%esi
    8cc1:	48 8d 05 af 18 01 00 	lea    0x118af(%rip),%rax        # 1a577 <__PRETTY_FUNCTION__.0+0x19f>
    8cc8:	48 89 c7             	mov    %rax,%rdi
    8ccb:	e8 80 98 ff ff       	call   2550 <fwrite@plt>
    8cd0:	bf 01 00 00 00       	mov    $0x1,%edi
    8cd5:	e8 66 98 ff ff       	call   2540 <exit@plt>
    8cda:	90                   	nop
    8cdb:	c9                   	leave
    8cdc:	c3                   	ret

0000000000008cdd <stmt_print>:
    8cdd:	f3 0f 1e fa          	endbr64
    8ce1:	55                   	push   %rbp
    8ce2:	48 89 e5             	mov    %rsp,%rbp
    8ce5:	48 83 ec 20          	sub    $0x20,%rsp
    8ce9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ced:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cf1:	89 55 ec             	mov    %edx,-0x14(%rbp)
    8cf4:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8cf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cfb:	89 d6                	mov    %edx,%esi
    8cfd:	48 89 c7             	mov    %rax,%rdi
    8d00:	e8 cb f8 ff ff       	call   85d0 <print_indent>
    8d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d09:	8b 40 04             	mov    0x4(%rax),%eax
    8d0c:	83 f8 08             	cmp    $0x8,%eax
    8d0f:	0f 87 bb 04 00 00    	ja     91d0 <stmt_print+0x4f3>
    8d15:	89 c0                	mov    %eax,%eax
    8d17:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8d1e:	00
    8d1f:	48 8d 05 4a 19 01 00 	lea    0x1194a(%rip),%rax        # 1a670 <__PRETTY_FUNCTION__.0+0x298>
    8d26:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    8d29:	48 98                	cltq
    8d2b:	48 8d 15 3e 19 01 00 	lea    0x1193e(%rip),%rdx        # 1a670 <__PRETTY_FUNCTION__.0+0x298>
    8d32:	48 01 d0             	add    %rdx,%rax
    8d35:	3e ff e0             	notrack jmp *%rax
    8d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d3c:	48 89 c1             	mov    %rax,%rcx
    8d3f:	ba 0d 00 00 00       	mov    $0xd,%edx
    8d44:	be 01 00 00 00       	mov    $0x1,%esi
    8d49:	48 8d 05 60 18 01 00 	lea    0x11860(%rip),%rax        # 1a5b0 <__PRETTY_FUNCTION__.0+0x1d8>
    8d50:	48 89 c7             	mov    %rax,%rdi
    8d53:	e8 f8 97 ff ff       	call   2550 <fwrite@plt>
    8d58:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8d5c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8d5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d63:	89 d6                	mov    %edx,%esi
    8d65:	48 89 c7             	mov    %rax,%rdi
    8d68:	e8 63 f8 ff ff       	call   85d0 <print_indent>
    8d6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d71:	48 89 c1             	mov    %rax,%rcx
    8d74:	ba 07 00 00 00       	mov    $0x7,%edx
    8d79:	be 01 00 00 00       	mov    $0x1,%esi
    8d7e:	48 8d 05 39 18 01 00 	lea    0x11839(%rip),%rax        # 1a5be <__PRETTY_FUNCTION__.0+0x1e6>
    8d85:	48 89 c7             	mov    %rax,%rdi
    8d88:	e8 c3 97 ff ff       	call   2550 <fwrite@plt>
    8d8d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8d90:	8d 50 01             	lea    0x1(%rax),%edx
    8d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d97:	48 8b 40 08          	mov    0x8(%rax),%rax
    8d9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d9f:	48 89 ce             	mov    %rcx,%rsi
    8da2:	48 89 c7             	mov    %rax,%rdi
    8da5:	e8 57 04 00 00       	call   9201 <expr_print>
    8daa:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8dad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8db1:	89 d6                	mov    %edx,%esi
    8db3:	48 89 c7             	mov    %rax,%rdi
    8db6:	e8 15 f8 ff ff       	call   85d0 <print_indent>
    8dbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8dbf:	48 89 c1             	mov    %rax,%rcx
    8dc2:	ba 08 00 00 00       	mov    $0x8,%edx
    8dc7:	be 01 00 00 00       	mov    $0x1,%esi
    8dcc:	48 8d 05 f3 17 01 00 	lea    0x117f3(%rip),%rax        # 1a5c6 <__PRETTY_FUNCTION__.0+0x1ee>
    8dd3:	48 89 c7             	mov    %rax,%rdi
    8dd6:	e8 75 97 ff ff       	call   2550 <fwrite@plt>
    8ddb:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8dde:	8d 50 01             	lea    0x1(%rax),%edx
    8de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de5:	48 8b 40 10          	mov    0x10(%rax),%rax
    8de9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ded:	48 89 ce             	mov    %rcx,%rsi
    8df0:	48 89 c7             	mov    %rax,%rdi
    8df3:	e8 09 04 00 00       	call   9201 <expr_print>
    8df8:	e9 01 04 00 00       	jmp    91fe <stmt_print+0x521>
    8dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e01:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8e05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e09:	48 8d 0d bf 17 01 00 	lea    0x117bf(%rip),%rcx        # 1a5cf <__PRETTY_FUNCTION__.0+0x1f7>
    8e10:	48 89 ce             	mov    %rcx,%rsi
    8e13:	48 89 c7             	mov    %rax,%rdi
    8e16:	b8 00 00 00 00       	mov    $0x0,%eax
    8e1b:	e8 50 96 ff ff       	call   2470 <fprintf@plt>
    8e20:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8e24:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8e27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e2b:	89 d6                	mov    %edx,%esi
    8e2d:	48 89 c7             	mov    %rax,%rdi
    8e30:	e8 9b f7 ff ff       	call   85d0 <print_indent>
    8e35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e39:	48 89 c1             	mov    %rax,%rcx
    8e3c:	ba 08 00 00 00       	mov    $0x8,%edx
    8e41:	be 01 00 00 00       	mov    $0x1,%esi
    8e46:	48 8d 05 31 16 01 00 	lea    0x11631(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    8e4d:	48 89 c7             	mov    %rax,%rdi
    8e50:	e8 fb 96 ff ff       	call   2550 <fwrite@plt>
    8e55:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8e58:	8d 50 01             	lea    0x1(%rax),%edx
    8e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5f:	48 8b 40 18          	mov    0x18(%rax),%rax
    8e63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e67:	48 89 ce             	mov    %rcx,%rsi
    8e6a:	48 89 c7             	mov    %rax,%rdi
    8e6d:	e8 aa f7 ff ff       	call   861c <list_print>
    8e72:	e9 87 03 00 00       	jmp    91fe <stmt_print+0x521>
    8e77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e7b:	48 89 c1             	mov    %rax,%rcx
    8e7e:	ba 11 00 00 00       	mov    $0x11,%edx
    8e83:	be 01 00 00 00       	mov    $0x1,%esi
    8e88:	48 8d 05 56 17 01 00 	lea    0x11756(%rip),%rax        # 1a5e5 <__PRETTY_FUNCTION__.0+0x20d>
    8e8f:	48 89 c7             	mov    %rax,%rdi
    8e92:	e8 b9 96 ff ff       	call   2550 <fwrite@plt>
    8e97:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8e9a:	8d 50 01             	lea    0x1(%rax),%edx
    8e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea1:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ea5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ea9:	48 89 ce             	mov    %rcx,%rsi
    8eac:	48 89 c7             	mov    %rax,%rdi
    8eaf:	e8 68 f7 ff ff       	call   861c <list_print>
    8eb4:	e9 45 03 00 00       	jmp    91fe <stmt_print+0x521>
    8eb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ebd:	48 89 c1             	mov    %rax,%rcx
    8ec0:	ba 06 00 00 00       	mov    $0x6,%edx
    8ec5:	be 01 00 00 00       	mov    $0x1,%esi
    8eca:	48 8d 05 26 17 01 00 	lea    0x11726(%rip),%rax        # 1a5f7 <__PRETTY_FUNCTION__.0+0x21f>
    8ed1:	48 89 c7             	mov    %rax,%rdi
    8ed4:	e8 77 96 ff ff       	call   2550 <fwrite@plt>
    8ed9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8edc:	8d 50 01             	lea    0x1(%rax),%edx
    8edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee3:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ee7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8eeb:	48 89 ce             	mov    %rcx,%rsi
    8eee:	48 89 c7             	mov    %rax,%rdi
    8ef1:	e8 0b 03 00 00       	call   9201 <expr_print>
    8ef6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8ef9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8efd:	89 d6                	mov    %edx,%esi
    8eff:	48 89 c7             	mov    %rax,%rdi
    8f02:	e8 c9 f6 ff ff       	call   85d0 <print_indent>
    8f07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f0b:	48 89 c1             	mov    %rax,%rcx
    8f0e:	ba 08 00 00 00       	mov    $0x8,%edx
    8f13:	be 01 00 00 00       	mov    $0x1,%esi
    8f18:	48 8d 05 df 16 01 00 	lea    0x116df(%rip),%rax        # 1a5fe <__PRETTY_FUNCTION__.0+0x226>
    8f1f:	48 89 c7             	mov    %rax,%rdi
    8f22:	e8 29 96 ff ff       	call   2550 <fwrite@plt>
    8f27:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8f2a:	8d 50 01             	lea    0x1(%rax),%edx
    8f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f31:	48 8b 40 10          	mov    0x10(%rax),%rax
    8f35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f39:	48 89 ce             	mov    %rcx,%rsi
    8f3c:	48 89 c7             	mov    %rax,%rdi
    8f3f:	e8 99 fd ff ff       	call   8cdd <stmt_print>
    8f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f48:	48 8b 40 18          	mov    0x18(%rax),%rax
    8f4c:	48 85 c0             	test   %rax,%rax
    8f4f:	0f 84 a8 02 00 00    	je     91fd <stmt_print+0x520>
    8f55:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8f58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f5c:	89 d6                	mov    %edx,%esi
    8f5e:	48 89 c7             	mov    %rax,%rdi
    8f61:	e8 6a f6 ff ff       	call   85d0 <print_indent>
    8f66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f6a:	48 89 c1             	mov    %rax,%rcx
    8f6d:	ba 08 00 00 00       	mov    $0x8,%edx
    8f72:	be 01 00 00 00       	mov    $0x1,%esi
    8f77:	48 8d 05 89 16 01 00 	lea    0x11689(%rip),%rax        # 1a607 <__PRETTY_FUNCTION__.0+0x22f>
    8f7e:	48 89 c7             	mov    %rax,%rdi
    8f81:	e8 ca 95 ff ff       	call   2550 <fwrite@plt>
    8f86:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8f89:	8d 50 01             	lea    0x1(%rax),%edx
    8f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f90:	48 8b 40 18          	mov    0x18(%rax),%rax
    8f94:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f98:	48 89 ce             	mov    %rcx,%rsi
    8f9b:	48 89 c7             	mov    %rax,%rdi
    8f9e:	e8 3a fd ff ff       	call   8cdd <stmt_print>
    8fa3:	e9 55 02 00 00       	jmp    91fd <stmt_print+0x520>
    8fa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fac:	48 89 c1             	mov    %rax,%rcx
    8faf:	ba 09 00 00 00       	mov    $0x9,%edx
    8fb4:	be 01 00 00 00       	mov    $0x1,%esi
    8fb9:	48 8d 05 50 16 01 00 	lea    0x11650(%rip),%rax        # 1a610 <__PRETTY_FUNCTION__.0+0x238>
    8fc0:	48 89 c7             	mov    %rax,%rdi
    8fc3:	e8 88 95 ff ff       	call   2550 <fwrite@plt>
    8fc8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8fcb:	8d 50 01             	lea    0x1(%rax),%edx
    8fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd2:	48 8b 40 08          	mov    0x8(%rax),%rax
    8fd6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8fda:	48 89 ce             	mov    %rcx,%rsi
    8fdd:	48 89 c7             	mov    %rax,%rdi
    8fe0:	e8 1c 02 00 00       	call   9201 <expr_print>
    8fe5:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8fe8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fec:	89 d6                	mov    %edx,%esi
    8fee:	48 89 c7             	mov    %rax,%rdi
    8ff1:	e8 da f5 ff ff       	call   85d0 <print_indent>
    8ff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ffa:	48 89 c1             	mov    %rax,%rcx
    8ffd:	ba 06 00 00 00       	mov    $0x6,%edx
    9002:	be 01 00 00 00       	mov    $0x1,%esi
    9007:	48 8d 05 0c 16 01 00 	lea    0x1160c(%rip),%rax        # 1a61a <__PRETTY_FUNCTION__.0+0x242>
    900e:	48 89 c7             	mov    %rax,%rdi
    9011:	e8 3a 95 ff ff       	call   2550 <fwrite@plt>
    9016:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9019:	8d 50 01             	lea    0x1(%rax),%edx
    901c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9020:	48 8b 40 10          	mov    0x10(%rax),%rax
    9024:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9028:	48 89 ce             	mov    %rcx,%rsi
    902b:	48 89 c7             	mov    %rax,%rdi
    902e:	e8 aa fc ff ff       	call   8cdd <stmt_print>
    9033:	e9 c6 01 00 00       	jmp    91fe <stmt_print+0x521>
    9038:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    903c:	48 89 c1             	mov    %rax,%rcx
    903f:	ba 07 00 00 00       	mov    $0x7,%edx
    9044:	be 01 00 00 00       	mov    $0x1,%esi
    9049:	48 8d 05 d1 15 01 00 	lea    0x115d1(%rip),%rax        # 1a621 <__PRETTY_FUNCTION__.0+0x249>
    9050:	48 89 c7             	mov    %rax,%rdi
    9053:	e8 f8 94 ff ff       	call   2550 <fwrite@plt>
    9058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    905c:	8b 40 08             	mov    0x8(%rax),%eax
    905f:	83 f8 06             	cmp    $0x6,%eax
    9062:	74 07                	je     906b <stmt_print+0x38e>
    9064:	83 f8 07             	cmp    $0x7,%eax
    9067:	74 21                	je     908a <stmt_print+0x3ad>
    9069:	eb 3e                	jmp    90a9 <stmt_print+0x3cc>
    906b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    906e:	8d 50 01             	lea    0x1(%rax),%edx
    9071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9075:	48 8b 40 20          	mov    0x20(%rax),%rax
    9079:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    907d:	48 89 ce             	mov    %rcx,%rsi
    9080:	48 89 c7             	mov    %rax,%rdi
    9083:	e8 79 01 00 00       	call   9201 <expr_print>
    9088:	eb 4c                	jmp    90d6 <stmt_print+0x3f9>
    908a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    908d:	8d 50 01             	lea    0x1(%rax),%edx
    9090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9094:	48 8b 40 20          	mov    0x20(%rax),%rax
    9098:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    909c:	48 89 ce             	mov    %rcx,%rsi
    909f:	48 89 c7             	mov    %rax,%rdi
    90a2:	e8 36 fc ff ff       	call   8cdd <stmt_print>
    90a7:	eb 2d                	jmp    90d6 <stmt_print+0x3f9>
    90a9:	48 8b 05 b0 8f 01 00 	mov    0x18fb0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    90b0:	48 89 c1             	mov    %rax,%rcx
    90b3:	ba 16 00 00 00       	mov    $0x16,%edx
    90b8:	be 01 00 00 00       	mov    $0x1,%esi
    90bd:	48 8d 05 65 15 01 00 	lea    0x11565(%rip),%rax        # 1a629 <__PRETTY_FUNCTION__.0+0x251>
    90c4:	48 89 c7             	mov    %rax,%rdi
    90c7:	e8 84 94 ff ff       	call   2550 <fwrite@plt>
    90cc:	bf 01 00 00 00       	mov    $0x1,%edi
    90d1:	e8 6a 94 ff ff       	call   2540 <exit@plt>
    90d6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    90d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    90dd:	89 d6                	mov    %edx,%esi
    90df:	48 89 c7             	mov    %rax,%rdi
    90e2:	e8 e9 f4 ff ff       	call   85d0 <print_indent>
    90e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    90eb:	48 89 c1             	mov    %rax,%rcx
    90ee:	ba 06 00 00 00       	mov    $0x6,%edx
    90f3:	be 01 00 00 00       	mov    $0x1,%esi
    90f8:	48 8d 05 41 15 01 00 	lea    0x11541(%rip),%rax        # 1a640 <__PRETTY_FUNCTION__.0+0x268>
    90ff:	48 89 c7             	mov    %rax,%rdi
    9102:	e8 49 94 ff ff       	call   2550 <fwrite@plt>
    9107:	8b 45 ec             	mov    -0x14(%rbp),%eax
    910a:	8d 50 01             	lea    0x1(%rax),%edx
    910d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9111:	48 8b 40 10          	mov    0x10(%rax),%rax
    9115:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9119:	48 89 ce             	mov    %rcx,%rsi
    911c:	48 89 c7             	mov    %rax,%rdi
    911f:	e8 dd 00 00 00       	call   9201 <expr_print>
    9124:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9127:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    912b:	89 d6                	mov    %edx,%esi
    912d:	48 89 c7             	mov    %rax,%rdi
    9130:	e8 9b f4 ff ff       	call   85d0 <print_indent>
    9135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9139:	48 89 c1             	mov    %rax,%rcx
    913c:	ba 06 00 00 00       	mov    $0x6,%edx
    9141:	be 01 00 00 00       	mov    $0x1,%esi
    9146:	48 8d 05 cd 14 01 00 	lea    0x114cd(%rip),%rax        # 1a61a <__PRETTY_FUNCTION__.0+0x242>
    914d:	48 89 c7             	mov    %rax,%rdi
    9150:	e8 fb 93 ff ff       	call   2550 <fwrite@plt>
    9155:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9158:	8d 50 01             	lea    0x1(%rax),%edx
    915b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    915f:	48 8b 40 18          	mov    0x18(%rax),%rax
    9163:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9167:	48 89 ce             	mov    %rcx,%rsi
    916a:	48 89 c7             	mov    %rax,%rdi
    916d:	e8 6b fb ff ff       	call   8cdd <stmt_print>
    9172:	e9 87 00 00 00       	jmp    91fe <stmt_print+0x521>
    9177:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    917b:	48 89 c1             	mov    %rax,%rcx
    917e:	ba 0d 00 00 00       	mov    $0xd,%edx
    9183:	be 01 00 00 00       	mov    $0x1,%esi
    9188:	48 8d 05 b8 14 01 00 	lea    0x114b8(%rip),%rax        # 1a647 <__PRETTY_FUNCTION__.0+0x26f>
    918f:	48 89 c7             	mov    %rax,%rdi
    9192:	e8 b9 93 ff ff       	call   2550 <fwrite@plt>
    9197:	8b 45 ec             	mov    -0x14(%rbp),%eax
    919a:	8d 50 01             	lea    0x1(%rax),%edx
    919d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91a1:	89 d6                	mov    %edx,%esi
    91a3:	48 89 c7             	mov    %rax,%rdi
    91a6:	e8 25 f4 ff ff       	call   85d0 <print_indent>
    91ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    91b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91b7:	48 8d 0d 62 12 01 00 	lea    0x11262(%rip),%rcx        # 1a420 <__PRETTY_FUNCTION__.0+0x48>
    91be:	48 89 ce             	mov    %rcx,%rsi
    91c1:	48 89 c7             	mov    %rax,%rdi
    91c4:	b8 00 00 00 00       	mov    $0x0,%eax
    91c9:	e8 a2 92 ff ff       	call   2470 <fprintf@plt>
    91ce:	eb 2e                	jmp    91fe <stmt_print+0x521>
    91d0:	48 8b 05 89 8e 01 00 	mov    0x18e89(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    91d7:	48 89 c1             	mov    %rax,%rcx
    91da:	ba 18 00 00 00       	mov    $0x18,%edx
    91df:	be 01 00 00 00       	mov    $0x1,%esi
    91e4:	48 8d 05 6a 14 01 00 	lea    0x1146a(%rip),%rax        # 1a655 <__PRETTY_FUNCTION__.0+0x27d>
    91eb:	48 89 c7             	mov    %rax,%rdi
    91ee:	e8 5d 93 ff ff       	call   2550 <fwrite@plt>
    91f3:	bf 01 00 00 00       	mov    $0x1,%edi
    91f8:	e8 43 93 ff ff       	call   2540 <exit@plt>
    91fd:	90                   	nop
    91fe:	90                   	nop
    91ff:	c9                   	leave
    9200:	c3                   	ret

0000000000009201 <expr_print>:
    9201:	f3 0f 1e fa          	endbr64
    9205:	55                   	push   %rbp
    9206:	48 89 e5             	mov    %rsp,%rbp
    9209:	48 83 ec 20          	sub    $0x20,%rsp
    920d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9211:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9215:	89 55 ec             	mov    %edx,-0x14(%rbp)
    9218:	8b 55 ec             	mov    -0x14(%rbp),%edx
    921b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    921f:	89 d6                	mov    %edx,%esi
    9221:	48 89 c7             	mov    %rax,%rdi
    9224:	e8 a7 f3 ff ff       	call   85d0 <print_indent>
    9229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    922d:	8b 40 04             	mov    0x4(%rax),%eax
    9230:	83 f8 09             	cmp    $0x9,%eax
    9233:	0f 87 5a 04 00 00    	ja     9693 <expr_print+0x492>
    9239:	89 c0                	mov    %eax,%eax
    923b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9242:	00
    9243:	48 8d 05 06 15 01 00 	lea    0x11506(%rip),%rax        # 1a750 <__PRETTY_FUNCTION__.0+0x378>
    924a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    924d:	48 98                	cltq
    924f:	48 8d 15 fa 14 01 00 	lea    0x114fa(%rip),%rdx        # 1a750 <__PRETTY_FUNCTION__.0+0x378>
    9256:	48 01 d0             	add    %rdx,%rax
    9259:	3e ff e0             	notrack jmp *%rax
    925c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9260:	8b 50 08             	mov    0x8(%rax),%edx
    9263:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9267:	48 8d 0d 26 14 01 00 	lea    0x11426(%rip),%rcx        # 1a694 <__PRETTY_FUNCTION__.0+0x2bc>
    926e:	48 89 ce             	mov    %rcx,%rsi
    9271:	48 89 c7             	mov    %rax,%rdi
    9274:	b8 00 00 00 00       	mov    $0x0,%eax
    9279:	e8 f2 91 ff ff       	call   2470 <fprintf@plt>
    927e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9282:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9285:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9289:	89 d6                	mov    %edx,%esi
    928b:	48 89 c7             	mov    %rax,%rdi
    928e:	e8 3d f3 ff ff       	call   85d0 <print_indent>
    9293:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9297:	48 89 c1             	mov    %rax,%rcx
    929a:	ba 08 00 00 00       	mov    $0x8,%edx
    929f:	be 01 00 00 00       	mov    $0x1,%esi
    92a4:	48 8d 05 f6 13 01 00 	lea    0x113f6(%rip),%rax        # 1a6a1 <__PRETTY_FUNCTION__.0+0x2c9>
    92ab:	48 89 c7             	mov    %rax,%rdi
    92ae:	e8 9d 92 ff ff       	call   2550 <fwrite@plt>
    92b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    92b6:	8d 50 01             	lea    0x1(%rax),%edx
    92b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92bd:	48 8b 40 10          	mov    0x10(%rax),%rax
    92c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    92c5:	48 89 ce             	mov    %rcx,%rsi
    92c8:	48 89 c7             	mov    %rax,%rdi
    92cb:	e8 31 ff ff ff       	call   9201 <expr_print>
    92d0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    92d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92d7:	89 d6                	mov    %edx,%esi
    92d9:	48 89 c7             	mov    %rax,%rdi
    92dc:	e8 ef f2 ff ff       	call   85d0 <print_indent>
    92e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92e5:	48 89 c1             	mov    %rax,%rcx
    92e8:	ba 09 00 00 00       	mov    $0x9,%edx
    92ed:	be 01 00 00 00       	mov    $0x1,%esi
    92f2:	48 8d 05 b1 13 01 00 	lea    0x113b1(%rip),%rax        # 1a6aa <__PRETTY_FUNCTION__.0+0x2d2>
    92f9:	48 89 c7             	mov    %rax,%rdi
    92fc:	e8 4f 92 ff ff       	call   2550 <fwrite@plt>
    9301:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9304:	8d 50 01             	lea    0x1(%rax),%edx
    9307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    930b:	48 8b 40 18          	mov    0x18(%rax),%rax
    930f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9313:	48 89 ce             	mov    %rcx,%rsi
    9316:	48 89 c7             	mov    %rax,%rdi
    9319:	e8 e3 fe ff ff       	call   9201 <expr_print>
    931e:	e9 9d 03 00 00       	jmp    96c0 <expr_print+0x4bf>
    9323:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9327:	48 89 c1             	mov    %rax,%rcx
    932a:	ba 08 00 00 00       	mov    $0x8,%edx
    932f:	be 01 00 00 00       	mov    $0x1,%esi
    9334:	48 8d 05 79 13 01 00 	lea    0x11379(%rip),%rax        # 1a6b4 <__PRETTY_FUNCTION__.0+0x2dc>
    933b:	48 89 c7             	mov    %rax,%rdi
    933e:	e8 0d 92 ff ff       	call   2550 <fwrite@plt>
    9343:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9346:	8d 50 01             	lea    0x1(%rax),%edx
    9349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    934d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9351:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9355:	48 89 ce             	mov    %rcx,%rsi
    9358:	48 89 c7             	mov    %rax,%rdi
    935b:	e8 a1 fe ff ff       	call   9201 <expr_print>
    9360:	e9 5b 03 00 00       	jmp    96c0 <expr_print+0x4bf>
    9365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9369:	8b 50 08             	mov    0x8(%rax),%edx
    936c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9370:	48 8d 0d 46 13 01 00 	lea    0x11346(%rip),%rcx        # 1a6bd <__PRETTY_FUNCTION__.0+0x2e5>
    9377:	48 89 ce             	mov    %rcx,%rsi
    937a:	48 89 c7             	mov    %rax,%rdi
    937d:	b8 00 00 00 00       	mov    $0x0,%eax
    9382:	e8 e9 90 ff ff       	call   2470 <fprintf@plt>
    9387:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    938b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    938e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9392:	89 d6                	mov    %edx,%esi
    9394:	48 89 c7             	mov    %rax,%rdi
    9397:	e8 34 f2 ff ff       	call   85d0 <print_indent>
    939c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93a0:	48 89 c1             	mov    %rax,%rcx
    93a3:	ba 08 00 00 00       	mov    $0x8,%edx
    93a8:	be 01 00 00 00       	mov    $0x1,%esi
    93ad:	48 8d 05 ed 12 01 00 	lea    0x112ed(%rip),%rax        # 1a6a1 <__PRETTY_FUNCTION__.0+0x2c9>
    93b4:	48 89 c7             	mov    %rax,%rdi
    93b7:	e8 94 91 ff ff       	call   2550 <fwrite@plt>
    93bc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    93bf:	8d 50 01             	lea    0x1(%rax),%edx
    93c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c6:	48 8b 40 10          	mov    0x10(%rax),%rax
    93ca:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93ce:	48 89 ce             	mov    %rcx,%rsi
    93d1:	48 89 c7             	mov    %rax,%rdi
    93d4:	e8 28 fe ff ff       	call   9201 <expr_print>
    93d9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    93dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93e0:	89 d6                	mov    %edx,%esi
    93e2:	48 89 c7             	mov    %rax,%rdi
    93e5:	e8 e6 f1 ff ff       	call   85d0 <print_indent>
    93ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93ee:	48 89 c1             	mov    %rax,%rcx
    93f1:	ba 09 00 00 00       	mov    $0x9,%edx
    93f6:	be 01 00 00 00       	mov    $0x1,%esi
    93fb:	48 8d 05 a8 12 01 00 	lea    0x112a8(%rip),%rax        # 1a6aa <__PRETTY_FUNCTION__.0+0x2d2>
    9402:	48 89 c7             	mov    %rax,%rdi
    9405:	e8 46 91 ff ff       	call   2550 <fwrite@plt>
    940a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    940d:	8d 50 01             	lea    0x1(%rax),%edx
    9410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9414:	48 8b 40 18          	mov    0x18(%rax),%rax
    9418:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    941c:	48 89 ce             	mov    %rcx,%rsi
    941f:	48 89 c7             	mov    %rax,%rdi
    9422:	e8 da fd ff ff       	call   9201 <expr_print>
    9427:	e9 94 02 00 00       	jmp    96c0 <expr_print+0x4bf>
    942c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9430:	8b 50 08             	mov    0x8(%rax),%edx
    9433:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9437:	48 8d 0d 8c 12 01 00 	lea    0x1128c(%rip),%rcx        # 1a6ca <__PRETTY_FUNCTION__.0+0x2f2>
    943e:	48 89 ce             	mov    %rcx,%rsi
    9441:	48 89 c7             	mov    %rax,%rdi
    9444:	b8 00 00 00 00       	mov    $0x0,%eax
    9449:	e8 22 90 ff ff       	call   2470 <fprintf@plt>
    944e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9452:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9455:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9459:	89 d6                	mov    %edx,%esi
    945b:	48 89 c7             	mov    %rax,%rdi
    945e:	e8 6d f1 ff ff       	call   85d0 <print_indent>
    9463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9467:	48 89 c1             	mov    %rax,%rcx
    946a:	ba 08 00 00 00       	mov    $0x8,%edx
    946f:	be 01 00 00 00       	mov    $0x1,%esi
    9474:	48 8d 05 26 12 01 00 	lea    0x11226(%rip),%rax        # 1a6a1 <__PRETTY_FUNCTION__.0+0x2c9>
    947b:	48 89 c7             	mov    %rax,%rdi
    947e:	e8 cd 90 ff ff       	call   2550 <fwrite@plt>
    9483:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9486:	8d 50 01             	lea    0x1(%rax),%edx
    9489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948d:	48 8b 40 10          	mov    0x10(%rax),%rax
    9491:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9495:	48 89 ce             	mov    %rcx,%rsi
    9498:	48 89 c7             	mov    %rax,%rdi
    949b:	e8 61 fd ff ff       	call   9201 <expr_print>
    94a0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    94a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94a7:	89 d6                	mov    %edx,%esi
    94a9:	48 89 c7             	mov    %rax,%rdi
    94ac:	e8 1f f1 ff ff       	call   85d0 <print_indent>
    94b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94b5:	48 89 c1             	mov    %rax,%rcx
    94b8:	ba 09 00 00 00       	mov    $0x9,%edx
    94bd:	be 01 00 00 00       	mov    $0x1,%esi
    94c2:	48 8d 05 e1 11 01 00 	lea    0x111e1(%rip),%rax        # 1a6aa <__PRETTY_FUNCTION__.0+0x2d2>
    94c9:	48 89 c7             	mov    %rax,%rdi
    94cc:	e8 7f 90 ff ff       	call   2550 <fwrite@plt>
    94d1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    94d4:	8d 50 01             	lea    0x1(%rax),%edx
    94d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94db:	48 8b 40 18          	mov    0x18(%rax),%rax
    94df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94e3:	48 89 ce             	mov    %rcx,%rsi
    94e6:	48 89 c7             	mov    %rax,%rdi
    94e9:	e8 13 fd ff ff       	call   9201 <expr_print>
    94ee:	e9 cd 01 00 00       	jmp    96c0 <expr_print+0x4bf>
    94f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    94fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94ff:	48 8d 0d d1 11 01 00 	lea    0x111d1(%rip),%rcx        # 1a6d7 <__PRETTY_FUNCTION__.0+0x2ff>
    9506:	48 89 ce             	mov    %rcx,%rsi
    9509:	48 89 c7             	mov    %rax,%rdi
    950c:	b8 00 00 00 00       	mov    $0x0,%eax
    9511:	e8 5a 8f ff ff       	call   2470 <fprintf@plt>
    9516:	e9 a5 01 00 00       	jmp    96c0 <expr_print+0x4bf>
    951b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    951f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9523:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9527:	48 8d 0d b6 11 01 00 	lea    0x111b6(%rip),%rcx        # 1a6e4 <__PRETTY_FUNCTION__.0+0x30c>
    952e:	48 89 ce             	mov    %rcx,%rsi
    9531:	48 89 c7             	mov    %rax,%rdi
    9534:	b8 00 00 00 00       	mov    $0x0,%eax
    9539:	e8 32 8f ff ff       	call   2470 <fprintf@plt>
    953e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9542:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9545:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9549:	89 d6                	mov    %edx,%esi
    954b:	48 89 c7             	mov    %rax,%rdi
    954e:	e8 7d f0 ff ff       	call   85d0 <print_indent>
    9553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9557:	48 89 c1             	mov    %rax,%rcx
    955a:	ba 09 00 00 00       	mov    $0x9,%edx
    955f:	be 01 00 00 00       	mov    $0x1,%esi
    9564:	48 8d 05 89 11 01 00 	lea    0x11189(%rip),%rax        # 1a6f4 <__PRETTY_FUNCTION__.0+0x31c>
    956b:	48 89 c7             	mov    %rax,%rdi
    956e:	e8 dd 8f ff ff       	call   2550 <fwrite@plt>
    9573:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9576:	8d 50 01             	lea    0x1(%rax),%edx
    9579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    957d:	48 8b 40 10          	mov    0x10(%rax),%rax
    9581:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9585:	48 89 ce             	mov    %rcx,%rsi
    9588:	48 89 c7             	mov    %rax,%rdi
    958b:	e8 71 fc ff ff       	call   9201 <expr_print>
    9590:	e9 2b 01 00 00       	jmp    96c0 <expr_print+0x4bf>
    9595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9599:	48 8b 50 08          	mov    0x8(%rax),%rdx
    959d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95a1:	48 8d 0d 56 11 01 00 	lea    0x11156(%rip),%rcx        # 1a6fe <__PRETTY_FUNCTION__.0+0x326>
    95a8:	48 89 ce             	mov    %rcx,%rsi
    95ab:	48 89 c7             	mov    %rax,%rdi
    95ae:	b8 00 00 00 00       	mov    $0x0,%eax
    95b3:	e8 b8 8e ff ff       	call   2470 <fprintf@plt>
    95b8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    95bc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    95bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95c3:	89 d6                	mov    %edx,%esi
    95c5:	48 89 c7             	mov    %rax,%rdi
    95c8:	e8 03 f0 ff ff       	call   85d0 <print_indent>
    95cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95d1:	48 89 c1             	mov    %rax,%rcx
    95d4:	ba 08 00 00 00       	mov    $0x8,%edx
    95d9:	be 01 00 00 00       	mov    $0x1,%esi
    95de:	48 8d 05 99 0e 01 00 	lea    0x10e99(%rip),%rax        # 1a47e <__PRETTY_FUNCTION__.0+0xa6>
    95e5:	48 89 c7             	mov    %rax,%rdi
    95e8:	e8 63 8f ff ff       	call   2550 <fwrite@plt>
    95ed:	8b 45 ec             	mov    -0x14(%rbp),%eax
    95f0:	8d 50 01             	lea    0x1(%rax),%edx
    95f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f7:	48 8b 40 18          	mov    0x18(%rax),%rax
    95fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95ff:	48 89 ce             	mov    %rcx,%rsi
    9602:	48 89 c7             	mov    %rax,%rdi
    9605:	e8 12 f0 ff ff       	call   861c <list_print>
    960a:	e9 b1 00 00 00       	jmp    96c0 <expr_print+0x4bf>
    960f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9613:	8b 50 08             	mov    0x8(%rax),%edx
    9616:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    961a:	48 8d 0d ee 10 01 00 	lea    0x110ee(%rip),%rcx        # 1a70f <__PRETTY_FUNCTION__.0+0x337>
    9621:	48 89 ce             	mov    %rcx,%rsi
    9624:	48 89 c7             	mov    %rax,%rdi
    9627:	b8 00 00 00 00       	mov    $0x0,%eax
    962c:	e8 3f 8e ff ff       	call   2470 <fprintf@plt>
    9631:	e9 8a 00 00 00       	jmp    96c0 <expr_print+0x4bf>
    9636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963a:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
    963f:	66 0f ef c9          	pxor   %xmm1,%xmm1
    9643:	f3 0f 5a c8          	cvtss2sd %xmm0,%xmm1
    9647:	66 48 0f 7e ca       	movq   %xmm1,%rdx
    964c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9650:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    9655:	48 8d 15 bf 10 01 00 	lea    0x110bf(%rip),%rdx        # 1a71b <__PRETTY_FUNCTION__.0+0x343>
    965c:	48 89 d6             	mov    %rdx,%rsi
    965f:	48 89 c7             	mov    %rax,%rdi
    9662:	b8 01 00 00 00       	mov    $0x1,%eax
    9667:	e8 04 8e ff ff       	call   2470 <fprintf@plt>
    966c:	eb 52                	jmp    96c0 <expr_print+0x4bf>
    966e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9672:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    967a:	48 8d 0d a6 10 01 00 	lea    0x110a6(%rip),%rcx        # 1a727 <__PRETTY_FUNCTION__.0+0x34f>
    9681:	48 89 ce             	mov    %rcx,%rsi
    9684:	48 89 c7             	mov    %rax,%rdi
    9687:	b8 00 00 00 00       	mov    $0x0,%eax
    968c:	e8 df 8d ff ff       	call   2470 <fprintf@plt>
    9691:	eb 2d                	jmp    96c0 <expr_print+0x4bf>
    9693:	48 8b 05 c6 89 01 00 	mov    0x189c6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    969a:	48 89 c1             	mov    %rax,%rcx
    969d:	ba 18 00 00 00       	mov    $0x18,%edx
    96a2:	be 01 00 00 00       	mov    $0x1,%esi
    96a7:	48 8d 05 86 10 01 00 	lea    0x11086(%rip),%rax        # 1a734 <__PRETTY_FUNCTION__.0+0x35c>
    96ae:	48 89 c7             	mov    %rax,%rdi
    96b1:	e8 9a 8e ff ff       	call   2550 <fwrite@plt>
    96b6:	bf 01 00 00 00       	mov    $0x1,%edi
    96bb:	e8 80 8e ff ff       	call   2540 <exit@plt>
    96c0:	90                   	nop
    96c1:	c9                   	leave
    96c2:	c3                   	ret

00000000000096c3 <destroy_list>:
    96c3:	f3 0f 1e fa          	endbr64
    96c7:	55                   	push   %rbp
    96c8:	48 89 e5             	mov    %rsp,%rbp
    96cb:	48 83 ec 20          	sub    $0x20,%rsp
    96cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96d3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    96d8:	0f 84 08 01 00 00    	je     97e6 <destroy_list+0x123>
    96de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    96e6:	e9 f0 00 00 00       	jmp    97db <destroy_list+0x118>
    96eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96ef:	48 8b 40 08          	mov    0x8(%rax),%rax
    96f3:	48 85 c0             	test   %rax,%rax
    96f6:	75 28                	jne    9720 <destroy_list+0x5d>
    96f8:	48 8d 05 71 11 01 00 	lea    0x11171(%rip),%rax        # 1a870 <__PRETTY_FUNCTION__.0>
    96ff:	48 89 c1             	mov    %rax,%rcx
    9702:	ba 54 01 00 00       	mov    $0x154,%edx
    9707:	48 8d 05 e2 0c 01 00 	lea    0x10ce2(%rip),%rax        # 1a3f0 <__PRETTY_FUNCTION__.0+0x18>
    970e:	48 89 c6             	mov    %rax,%rsi
    9711:	48 8d 05 f7 0c 01 00 	lea    0x10cf7(%rip),%rax        # 1a40f <__PRETTY_FUNCTION__.0+0x37>
    9718:	48 89 c7             	mov    %rax,%rdi
    971b:	e8 b0 8c ff ff       	call   23d0 <__assert_fail@plt>
    9720:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9724:	8b 00                	mov    (%rax),%eax
    9726:	83 f8 03             	cmp    $0x3,%eax
    9729:	74 50                	je     977b <destroy_list+0xb8>
    972b:	83 f8 03             	cmp    $0x3,%eax
    972e:	77 5d                	ja     978d <destroy_list+0xca>
    9730:	83 f8 02             	cmp    $0x2,%eax
    9733:	74 34                	je     9769 <destroy_list+0xa6>
    9735:	83 f8 02             	cmp    $0x2,%eax
    9738:	77 53                	ja     978d <destroy_list+0xca>
    973a:	85 c0                	test   %eax,%eax
    973c:	74 07                	je     9745 <destroy_list+0x82>
    973e:	83 f8 01             	cmp    $0x1,%eax
    9741:	74 14                	je     9757 <destroy_list+0x94>
    9743:	eb 48                	jmp    978d <destroy_list+0xca>
    9745:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9749:	48 8b 40 08          	mov    0x8(%rax),%rax
    974d:	48 89 c7             	mov    %rax,%rdi
    9750:	e8 94 00 00 00       	call   97e9 <destroy_tree>
    9755:	eb 64                	jmp    97bb <destroy_list+0xf8>
    9757:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    975b:	48 8b 40 08          	mov    0x8(%rax),%rax
    975f:	48 89 c7             	mov    %rax,%rdi
    9762:	e8 39 02 00 00       	call   99a0 <destroy_stmt>
    9767:	eb 52                	jmp    97bb <destroy_list+0xf8>
    9769:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    976d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9771:	48 89 c7             	mov    %rax,%rdi
    9774:	e8 09 04 00 00       	call   9b82 <destroy_expr>
    9779:	eb 40                	jmp    97bb <destroy_list+0xf8>
    977b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    977f:	48 8b 40 08          	mov    0x8(%rax),%rax
    9783:	48 89 c7             	mov    %rax,%rdi
    9786:	e8 65 8b ff ff       	call   22f0 <free@plt>
    978b:	eb 2e                	jmp    97bb <destroy_list+0xf8>
    978d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9791:	8b 10                	mov    (%rax),%edx
    9793:	48 8b 05 c6 88 01 00 	mov    0x188c6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    979a:	48 8d 0d d7 0f 01 00 	lea    0x10fd7(%rip),%rcx        # 1a778 <__PRETTY_FUNCTION__.0+0x3a0>
    97a1:	48 89 ce             	mov    %rcx,%rsi
    97a4:	48 89 c7             	mov    %rax,%rdi
    97a7:	b8 00 00 00 00       	mov    $0x0,%eax
    97ac:	e8 bf 8c ff ff       	call   2470 <fprintf@plt>
    97b1:	bf 01 00 00 00       	mov    $0x1,%edi
    97b6:	e8 85 8d ff ff       	call   2540 <exit@plt>
    97bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    97c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97c7:	48 8b 40 10          	mov    0x10(%rax),%rax
    97cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    97cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d3:	48 89 c7             	mov    %rax,%rdi
    97d6:	e8 15 8b ff ff       	call   22f0 <free@plt>
    97db:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    97e0:	0f 85 05 ff ff ff    	jne    96eb <destroy_list+0x28>
    97e6:	90                   	nop
    97e7:	c9                   	leave
    97e8:	c3                   	ret

00000000000097e9 <destroy_tree>:
    97e9:	f3 0f 1e fa          	endbr64
    97ed:	55                   	push   %rbp
    97ee:	48 89 e5             	mov    %rsp,%rbp
    97f1:	48 83 ec 10          	sub    $0x10,%rsp
    97f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97fd:	8b 40 04             	mov    0x4(%rax),%eax
    9800:	83 f8 07             	cmp    $0x7,%eax
    9803:	0f 87 5a 01 00 00    	ja     9963 <destroy_tree+0x17a>
    9809:	89 c0                	mov    %eax,%eax
    980b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9812:	00
    9813:	48 8d 05 9a 0f 01 00 	lea    0x10f9a(%rip),%rax        # 1a7b4 <__PRETTY_FUNCTION__.0+0x3dc>
    981a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    981d:	48 98                	cltq
    981f:	48 8d 15 8e 0f 01 00 	lea    0x10f8e(%rip),%rdx        # 1a7b4 <__PRETTY_FUNCTION__.0+0x3dc>
    9826:	48 01 d0             	add    %rdx,%rax
    9829:	3e ff e0             	notrack jmp *%rax
    982c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9830:	48 8b 40 08          	mov    0x8(%rax),%rax
    9834:	48 89 c7             	mov    %rax,%rdi
    9837:	e8 b4 8a ff ff       	call   22f0 <free@plt>
    983c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9840:	48 8b 40 10          	mov    0x10(%rax),%rax
    9844:	48 89 c7             	mov    %rax,%rdi
    9847:	e8 77 fe ff ff       	call   96c3 <destroy_list>
    984c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9850:	48 8b 40 18          	mov    0x18(%rax),%rax
    9854:	48 89 c7             	mov    %rax,%rdi
    9857:	e8 67 fe ff ff       	call   96c3 <destroy_list>
    985c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9860:	48 8b 40 28          	mov    0x28(%rax),%rax
    9864:	48 89 c7             	mov    %rax,%rdi
    9867:	e8 57 fe ff ff       	call   96c3 <destroy_list>
    986c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9870:	48 8b 40 30          	mov    0x30(%rax),%rax
    9874:	48 89 c7             	mov    %rax,%rdi
    9877:	e8 24 01 00 00       	call   99a0 <destroy_stmt>
    987c:	e9 10 01 00 00       	jmp    9991 <destroy_tree+0x1a8>
    9881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9885:	48 8b 40 10          	mov    0x10(%rax),%rax
    9889:	48 89 c7             	mov    %rax,%rdi
    988c:	e8 5f 8a ff ff       	call   22f0 <free@plt>
    9891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9895:	48 8b 40 18          	mov    0x18(%rax),%rax
    9899:	48 85 c0             	test   %rax,%rax
    989c:	74 10                	je     98ae <destroy_tree+0xc5>
    989e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98a2:	48 8b 40 18          	mov    0x18(%rax),%rax
    98a6:	48 89 c7             	mov    %rax,%rdi
    98a9:	e8 42 8a ff ff       	call   22f0 <free@plt>
    98ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98b2:	48 8b 40 30          	mov    0x30(%rax),%rax
    98b6:	48 85 c0             	test   %rax,%rax
    98b9:	74 10                	je     98cb <destroy_tree+0xe2>
    98bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98bf:	48 8b 40 30          	mov    0x30(%rax),%rax
    98c3:	48 89 c7             	mov    %rax,%rdi
    98c6:	e8 25 8a ff ff       	call   22f0 <free@plt>
    98cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98cf:	48 8b 40 20          	mov    0x20(%rax),%rax
    98d3:	48 89 c7             	mov    %rax,%rdi
    98d6:	e8 e8 fd ff ff       	call   96c3 <destroy_list>
    98db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98df:	48 8b 40 40          	mov    0x40(%rax),%rax
    98e3:	48 89 c7             	mov    %rax,%rdi
    98e6:	e8 d8 fd ff ff       	call   96c3 <destroy_list>
    98eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ef:	48 8b 40 48          	mov    0x48(%rax),%rax
    98f3:	48 89 c7             	mov    %rax,%rdi
    98f6:	e8 c8 fd ff ff       	call   96c3 <destroy_list>
    98fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ff:	48 8b 40 50          	mov    0x50(%rax),%rax
    9903:	48 89 c7             	mov    %rax,%rdi
    9906:	e8 95 00 00 00       	call   99a0 <destroy_stmt>
    990b:	e9 81 00 00 00       	jmp    9991 <destroy_tree+0x1a8>
    9910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9914:	48 8b 40 08          	mov    0x8(%rax),%rax
    9918:	48 89 c7             	mov    %rax,%rdi
    991b:	e8 a3 fd ff ff       	call   96c3 <destroy_list>
    9920:	eb 6f                	jmp    9991 <destroy_tree+0x1a8>
    9922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9926:	48 8b 40 08          	mov    0x8(%rax),%rax
    992a:	48 89 c7             	mov    %rax,%rdi
    992d:	e8 91 fd ff ff       	call   96c3 <destroy_list>
    9932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9936:	48 8b 40 18          	mov    0x18(%rax),%rax
    993a:	48 85 c0             	test   %rax,%rax
    993d:	74 51                	je     9990 <destroy_tree+0x1a7>
    993f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9943:	48 8b 40 18          	mov    0x18(%rax),%rax
    9947:	48 89 c7             	mov    %rax,%rdi
    994a:	e8 a1 89 ff ff       	call   22f0 <free@plt>
    994f:	eb 3f                	jmp    9990 <destroy_tree+0x1a7>
    9951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9955:	48 8b 40 08          	mov    0x8(%rax),%rax
    9959:	48 89 c7             	mov    %rax,%rdi
    995c:	e8 8f 89 ff ff       	call   22f0 <free@plt>
    9961:	eb 2e                	jmp    9991 <destroy_tree+0x1a8>
    9963:	48 8b 05 f6 86 01 00 	mov    0x186f6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    996a:	48 89 c1             	mov    %rax,%rcx
    996d:	ba 1a 00 00 00       	mov    $0x1a,%edx
    9972:	be 01 00 00 00       	mov    $0x1,%esi
    9977:	48 8d 05 1a 0e 01 00 	lea    0x10e1a(%rip),%rax        # 1a798 <__PRETTY_FUNCTION__.0+0x3c0>
    997e:	48 89 c7             	mov    %rax,%rdi
    9981:	e8 ca 8b ff ff       	call   2550 <fwrite@plt>
    9986:	bf 01 00 00 00       	mov    $0x1,%edi
    998b:	e8 b0 8b ff ff       	call   2540 <exit@plt>
    9990:	90                   	nop
    9991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9995:	48 89 c7             	mov    %rax,%rdi
    9998:	e8 53 89 ff ff       	call   22f0 <free@plt>
    999d:	90                   	nop
    999e:	c9                   	leave
    999f:	c3                   	ret

00000000000099a0 <destroy_stmt>:
    99a0:	f3 0f 1e fa          	endbr64
    99a4:	55                   	push   %rbp
    99a5:	48 89 e5             	mov    %rsp,%rbp
    99a8:	48 83 ec 10          	sub    $0x10,%rsp
    99ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99b4:	8b 40 04             	mov    0x4(%rax),%eax
    99b7:	83 f8 08             	cmp    $0x8,%eax
    99ba:	0f 87 85 01 00 00    	ja     9b45 <destroy_stmt+0x1a5>
    99c0:	89 c0                	mov    %eax,%eax
    99c2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    99c9:	00
    99ca:	48 8d 05 2f 0e 01 00 	lea    0x10e2f(%rip),%rax        # 1a800 <__PRETTY_FUNCTION__.0+0x428>
    99d1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    99d4:	48 98                	cltq
    99d6:	48 8d 15 23 0e 01 00 	lea    0x10e23(%rip),%rdx        # 1a800 <__PRETTY_FUNCTION__.0+0x428>
    99dd:	48 01 d0             	add    %rdx,%rax
    99e0:	3e ff e0             	notrack jmp *%rax
    99e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99e7:	48 8b 40 08          	mov    0x8(%rax),%rax
    99eb:	48 89 c7             	mov    %rax,%rdi
    99ee:	e8 8f 01 00 00       	call   9b82 <destroy_expr>
    99f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99f7:	48 8b 40 10          	mov    0x10(%rax),%rax
    99fb:	48 89 c7             	mov    %rax,%rdi
    99fe:	e8 7f 01 00 00       	call   9b82 <destroy_expr>
    9a03:	e9 6b 01 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a0c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a10:	48 89 c7             	mov    %rax,%rdi
    9a13:	e8 d8 88 ff ff       	call   22f0 <free@plt>
    9a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a1c:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a20:	48 89 c7             	mov    %rax,%rdi
    9a23:	e8 9b fc ff ff       	call   96c3 <destroy_list>
    9a28:	e9 46 01 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a31:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a35:	48 89 c7             	mov    %rax,%rdi
    9a38:	e8 86 fc ff ff       	call   96c3 <destroy_list>
    9a3d:	e9 31 01 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a46:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a4a:	48 89 c7             	mov    %rax,%rdi
    9a4d:	e8 30 01 00 00       	call   9b82 <destroy_expr>
    9a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a56:	48 8b 40 10          	mov    0x10(%rax),%rax
    9a5a:	48 89 c7             	mov    %rax,%rdi
    9a5d:	e8 3e ff ff ff       	call   99a0 <destroy_stmt>
    9a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a66:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a6a:	48 85 c0             	test   %rax,%rax
    9a6d:	0f 84 ff 00 00 00    	je     9b72 <destroy_stmt+0x1d2>
    9a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a77:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a7b:	48 89 c7             	mov    %rax,%rdi
    9a7e:	e8 1d ff ff ff       	call   99a0 <destroy_stmt>
    9a83:	e9 ea 00 00 00       	jmp    9b72 <destroy_stmt+0x1d2>
    9a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a8c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a90:	48 89 c7             	mov    %rax,%rdi
    9a93:	e8 ea 00 00 00       	call   9b82 <destroy_expr>
    9a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9c:	48 8b 40 10          	mov    0x10(%rax),%rax
    9aa0:	48 89 c7             	mov    %rax,%rdi
    9aa3:	e8 f8 fe ff ff       	call   99a0 <destroy_stmt>
    9aa8:	e9 c6 00 00 00       	jmp    9b73 <destroy_stmt+0x1d3>
    9aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab1:	8b 40 08             	mov    0x8(%rax),%eax
    9ab4:	83 f8 06             	cmp    $0x6,%eax
    9ab7:	74 07                	je     9ac0 <destroy_stmt+0x120>
    9ab9:	83 f8 07             	cmp    $0x7,%eax
    9abc:	74 14                	je     9ad2 <destroy_stmt+0x132>
    9abe:	eb 24                	jmp    9ae4 <destroy_stmt+0x144>
    9ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac4:	48 8b 40 20          	mov    0x20(%rax),%rax
    9ac8:	48 89 c7             	mov    %rax,%rdi
    9acb:	e8 b2 00 00 00       	call   9b82 <destroy_expr>
    9ad0:	eb 3f                	jmp    9b11 <destroy_stmt+0x171>
    9ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ad6:	48 8b 40 20          	mov    0x20(%rax),%rax
    9ada:	48 89 c7             	mov    %rax,%rdi
    9add:	e8 be fe ff ff       	call   99a0 <destroy_stmt>
    9ae2:	eb 2d                	jmp    9b11 <destroy_stmt+0x171>
    9ae4:	48 8b 05 75 85 01 00 	mov    0x18575(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    9aeb:	48 89 c1             	mov    %rax,%rcx
    9aee:	ba 25 00 00 00       	mov    $0x25,%edx
    9af3:	be 01 00 00 00       	mov    $0x1,%esi
    9af8:	48 8d 05 d9 0c 01 00 	lea    0x10cd9(%rip),%rax        # 1a7d8 <__PRETTY_FUNCTION__.0+0x400>
    9aff:	48 89 c7             	mov    %rax,%rdi
    9b02:	e8 49 8a ff ff       	call   2550 <fwrite@plt>
    9b07:	bf 01 00 00 00       	mov    $0x1,%edi
    9b0c:	e8 2f 8a ff ff       	call   2540 <exit@plt>
    9b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b15:	48 8b 40 10          	mov    0x10(%rax),%rax
    9b19:	48 89 c7             	mov    %rax,%rdi
    9b1c:	e8 61 00 00 00       	call   9b82 <destroy_expr>
    9b21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b25:	48 8b 40 18          	mov    0x18(%rax),%rax
    9b29:	48 89 c7             	mov    %rax,%rdi
    9b2c:	e8 6f fe ff ff       	call   99a0 <destroy_stmt>
    9b31:	eb 40                	jmp    9b73 <destroy_stmt+0x1d3>
    9b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b37:	48 8b 40 08          	mov    0x8(%rax),%rax
    9b3b:	48 89 c7             	mov    %rax,%rdi
    9b3e:	e8 ad 87 ff ff       	call   22f0 <free@plt>
    9b43:	eb 2e                	jmp    9b73 <destroy_stmt+0x1d3>
    9b45:	48 8b 05 14 85 01 00 	mov    0x18514(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    9b4c:	48 89 c1             	mov    %rax,%rcx
    9b4f:	ba 18 00 00 00       	mov    $0x18,%edx
    9b54:	be 01 00 00 00       	mov    $0x1,%esi
    9b59:	48 8d 05 f5 0a 01 00 	lea    0x10af5(%rip),%rax        # 1a655 <__PRETTY_FUNCTION__.0+0x27d>
    9b60:	48 89 c7             	mov    %rax,%rdi
    9b63:	e8 e8 89 ff ff       	call   2550 <fwrite@plt>
    9b68:	bf 01 00 00 00       	mov    $0x1,%edi
    9b6d:	e8 ce 89 ff ff       	call   2540 <exit@plt>
    9b72:	90                   	nop
    9b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b77:	48 89 c7             	mov    %rax,%rdi
    9b7a:	e8 71 87 ff ff       	call   22f0 <free@plt>
    9b7f:	90                   	nop
    9b80:	c9                   	leave
    9b81:	c3                   	ret

0000000000009b82 <destroy_expr>:
    9b82:	f3 0f 1e fa          	endbr64
    9b86:	55                   	push   %rbp
    9b87:	48 89 e5             	mov    %rsp,%rbp
    9b8a:	48 83 ec 10          	sub    $0x10,%rsp
    9b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b96:	8b 40 04             	mov    0x4(%rax),%eax
    9b99:	83 f8 09             	cmp    $0x9,%eax
    9b9c:	0f 87 12 01 00 00    	ja     9cb4 <destroy_expr+0x132>
    9ba2:	89 c0                	mov    %eax,%eax
    9ba4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9bab:	00
    9bac:	48 8d 05 71 0c 01 00 	lea    0x10c71(%rip),%rax        # 1a824 <__PRETTY_FUNCTION__.0+0x44c>
    9bb3:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    9bb6:	48 98                	cltq
    9bb8:	48 8d 15 65 0c 01 00 	lea    0x10c65(%rip),%rdx        # 1a824 <__PRETTY_FUNCTION__.0+0x44c>
    9bbf:	48 01 d0             	add    %rdx,%rax
    9bc2:	3e ff e0             	notrack jmp *%rax
    9bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc9:	48 8b 40 10          	mov    0x10(%rax),%rax
    9bcd:	48 89 c7             	mov    %rax,%rdi
    9bd0:	e8 ad ff ff ff       	call   9b82 <destroy_expr>
    9bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd9:	48 8b 40 18          	mov    0x18(%rax),%rax
    9bdd:	48 89 c7             	mov    %rax,%rdi
    9be0:	e8 9d ff ff ff       	call   9b82 <destroy_expr>
    9be5:	e9 f8 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bee:	48 8b 40 08          	mov    0x8(%rax),%rax
    9bf2:	48 89 c7             	mov    %rax,%rdi
    9bf5:	e8 88 ff ff ff       	call   9b82 <destroy_expr>
    9bfa:	e9 e3 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c03:	48 8b 40 10          	mov    0x10(%rax),%rax
    9c07:	48 89 c7             	mov    %rax,%rdi
    9c0a:	e8 73 ff ff ff       	call   9b82 <destroy_expr>
    9c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c13:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c17:	48 89 c7             	mov    %rax,%rdi
    9c1a:	e8 63 ff ff ff       	call   9b82 <destroy_expr>
    9c1f:	e9 be 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c28:	48 8b 40 10          	mov    0x10(%rax),%rax
    9c2c:	48 89 c7             	mov    %rax,%rdi
    9c2f:	e8 4e ff ff ff       	call   9b82 <destroy_expr>
    9c34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c38:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c3c:	48 89 c7             	mov    %rax,%rdi
    9c3f:	e8 3e ff ff ff       	call   9b82 <destroy_expr>
    9c44:	e9 99 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c51:	48 89 c7             	mov    %rax,%rdi
    9c54:	e8 97 86 ff ff       	call   22f0 <free@plt>
    9c59:	e9 84 00 00 00       	jmp    9ce2 <destroy_expr+0x160>
    9c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c62:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c66:	48 89 c7             	mov    %rax,%rdi
    9c69:	e8 82 86 ff ff       	call   22f0 <free@plt>
    9c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c72:	48 8b 40 10          	mov    0x10(%rax),%rax
    9c76:	48 89 c7             	mov    %rax,%rdi
    9c79:	e8 04 ff ff ff       	call   9b82 <destroy_expr>
    9c7e:	eb 62                	jmp    9ce2 <destroy_expr+0x160>
    9c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c84:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c88:	48 89 c7             	mov    %rax,%rdi
    9c8b:	e8 60 86 ff ff       	call   22f0 <free@plt>
    9c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c94:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c98:	48 89 c7             	mov    %rax,%rdi
    9c9b:	e8 23 fa ff ff       	call   96c3 <destroy_list>
    9ca0:	eb 40                	jmp    9ce2 <destroy_expr+0x160>
    9ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ca6:	48 8b 40 08          	mov    0x8(%rax),%rax
    9caa:	48 89 c7             	mov    %rax,%rdi
    9cad:	e8 3e 86 ff ff       	call   22f0 <free@plt>
    9cb2:	eb 2e                	jmp    9ce2 <destroy_expr+0x160>
    9cb4:	48 8b 05 a5 83 01 00 	mov    0x183a5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    9cbb:	48 89 c1             	mov    %rax,%rcx
    9cbe:	ba 18 00 00 00       	mov    $0x18,%edx
    9cc3:	be 01 00 00 00       	mov    $0x1,%esi
    9cc8:	48 8d 05 65 0a 01 00 	lea    0x10a65(%rip),%rax        # 1a734 <__PRETTY_FUNCTION__.0+0x35c>
    9ccf:	48 89 c7             	mov    %rax,%rdi
    9cd2:	e8 79 88 ff ff       	call   2550 <fwrite@plt>
    9cd7:	bf 01 00 00 00       	mov    $0x1,%edi
    9cdc:	e8 5f 88 ff ff       	call   2540 <exit@plt>
    9ce1:	90                   	nop
    9ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ce6:	48 89 c7             	mov    %rax,%rdi
    9ce9:	e8 02 86 ff ff       	call   22f0 <free@plt>
    9cee:	90                   	nop
    9cef:	c9                   	leave
    9cf0:	c3                   	ret

0000000000009cf1 <mk_program>:
    9cf1:	f3 0f 1e fa          	endbr64
    9cf5:	55                   	push   %rbp
    9cf6:	48 89 e5             	mov    %rsp,%rbp
    9cf9:	48 83 ec 40          	sub    $0x40,%rsp
    9cfd:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9d00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d04:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9d08:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9d0c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9d10:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9d14:	bf 58 00 00 00       	mov    $0x58,%edi
    9d19:	e8 b2 87 ff ff       	call   24d0 <malloc@plt>
    9d1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d26:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9d29:	89 10                	mov    %edx,(%rax)
    9d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9d3e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9d4a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d52:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9d56:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d5e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9d62:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9d66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9d6e:	48 89 50 28          	mov    %rdx,0x28(%rax)
    9d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d76:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    9d7a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    9d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d82:	c9                   	leave
    9d83:	c3                   	ret

0000000000009d84 <mk_typedecl>:
    9d84:	f3 0f 1e fa          	endbr64
    9d88:	55                   	push   %rbp
    9d89:	48 89 e5             	mov    %rsp,%rbp
    9d8c:	48 83 ec 30          	sub    $0x30,%rsp
    9d90:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9d93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d97:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9d9a:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    9d9d:	bf 58 00 00 00       	mov    $0x58,%edi
    9da2:	e8 29 87 ff ff       	call   24d0 <malloc@plt>
    9da7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9dab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9daf:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9db2:	89 10                	mov    %edx,(%rax)
    9db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db8:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%rax)
    9dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9dc7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dcf:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9dd2:	89 50 10             	mov    %edx,0x10(%rax)
    9dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    9ddc:	89 50 14             	mov    %edx,0x14(%rax)
    9ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de3:	c9                   	leave
    9de4:	c3                   	ret

0000000000009de5 <mk_procedure>:
    9de5:	f3 0f 1e fa          	endbr64
    9de9:	55                   	push   %rbp
    9dea:	48 89 e5             	mov    %rsp,%rbp
    9ded:	48 83 ec 40          	sub    $0x40,%rsp
    9df1:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9df4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9df8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9dfc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9e00:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9e04:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9e08:	bf 58 00 00 00       	mov    $0x58,%edi
    9e0d:	e8 be 86 ff ff       	call   24d0 <malloc@plt>
    9e12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9e1d:	89 10                	mov    %edx,(%rax)
    9e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e23:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e2e:	c7 40 08 05 00 00 00 	movl   $0x5,0x8(%rax)
    9e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9e3d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e45:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9e4c:	00
    9e4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9e55:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5d:	c7 40 28 ff ff ff ff 	movl   $0xffffffff,0x28(%rax)
    9e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e68:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    9e6f:	00
    9e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e74:	8b 55 10             	mov    0x10(%rbp),%edx
    9e77:	89 50 38             	mov    %edx,0x38(%rax)
    9e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e7e:	8b 55 18             	mov    0x18(%rbp),%edx
    9e81:	89 50 3c             	mov    %edx,0x3c(%rax)
    9e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9e8c:	48 89 50 40          	mov    %rdx,0x40(%rax)
    9e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e94:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9e98:	48 89 50 48          	mov    %rdx,0x48(%rax)
    9e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9ea4:	48 89 50 50          	mov    %rdx,0x50(%rax)
    9ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eac:	c9                   	leave
    9ead:	c3                   	ret

0000000000009eae <mk_function>:
    9eae:	f3 0f 1e fa          	endbr64
    9eb2:	55                   	push   %rbp
    9eb3:	48 89 e5             	mov    %rsp,%rbp
    9eb6:	48 83 ec 40          	sub    $0x40,%rsp
    9eba:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ebd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ec1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9ec5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9ec9:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    9ecd:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    9ed1:	bf 58 00 00 00       	mov    $0x58,%edi
    9ed6:	e8 f5 85 ff ff       	call   24d0 <malloc@plt>
    9edb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9ee6:	89 10                	mov    %edx,(%rax)
    9ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eec:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    9ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef7:	c7 40 08 06 00 00 00 	movl   $0x6,0x8(%rax)
    9efe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f02:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9f06:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f0e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9f15:	00
    9f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9f1e:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f26:	8b 55 10             	mov    0x10(%rbp),%edx
    9f29:	89 50 28             	mov    %edx,0x28(%rax)
    9f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f30:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    9f34:	48 89 50 30          	mov    %rdx,0x30(%rax)
    9f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f3c:	8b 55 20             	mov    0x20(%rbp),%edx
    9f3f:	89 50 38             	mov    %edx,0x38(%rax)
    9f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f46:	8b 55 28             	mov    0x28(%rbp),%edx
    9f49:	89 50 3c             	mov    %edx,0x3c(%rax)
    9f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f50:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9f54:	48 89 50 40          	mov    %rdx,0x40(%rax)
    9f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f5c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9f60:	48 89 50 48          	mov    %rdx,0x48(%rax)
    9f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f68:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9f6c:	48 89 50 50          	mov    %rdx,0x50(%rax)
    9f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f74:	c9                   	leave
    9f75:	c3                   	ret

0000000000009f76 <mk_vardecl>:
    9f76:	f3 0f 1e fa          	endbr64
    9f7a:	55                   	push   %rbp
    9f7b:	48 89 e5             	mov    %rsp,%rbp
    9f7e:	48 83 ec 30          	sub    $0x30,%rsp
    9f82:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9f85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f89:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9f8c:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    9f90:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
    9f94:	bf 58 00 00 00       	mov    $0x58,%edi
    9f99:	e8 32 85 ff ff       	call   24d0 <malloc@plt>
    9f9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fa6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9fa9:	89 10                	mov    %edx,(%rax)
    9fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9faf:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    9fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fba:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9fbe:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc6:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9fc9:	89 50 10             	mov    %edx,0x10(%rax)
    9fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9fd4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fdc:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    9fdf:	89 50 20             	mov    %edx,0x20(%rax)
    9fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fe6:	c9                   	leave
    9fe7:	c3                   	ret

0000000000009fe8 <mk_arraydecl>:
    9fe8:	f3 0f 1e fa          	endbr64
    9fec:	55                   	push   %rbp
    9fed:	48 89 e5             	mov    %rsp,%rbp
    9ff0:	48 83 ec 30          	sub    $0x30,%rsp
    9ff4:	89 7d ec             	mov    %edi,-0x14(%rbp)
    9ff7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ffb:	89 55 e8             	mov    %edx,-0x18(%rbp)
    9ffe:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    a001:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
    a005:	bf 58 00 00 00       	mov    $0x58,%edi
    a00a:	e8 c1 84 ff ff       	call   24d0 <malloc@plt>
    a00f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a017:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a01a:	89 10                	mov    %edx,(%rax)
    a01c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a020:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    a027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a02b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a02f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a037:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a03a:	89 50 10             	mov    %edx,0x10(%rax)
    a03d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a041:	8b 55 dc             	mov    -0x24(%rbp),%edx
    a044:	89 50 14             	mov    %edx,0x14(%rax)
    a047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04b:	8b 55 d8             	mov    -0x28(%rbp),%edx
    a04e:	89 50 18             	mov    %edx,0x18(%rax)
    a051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a055:	c9                   	leave
    a056:	c3                   	ret

000000000000a057 <mk_varassign>:
    a057:	f3 0f 1e fa          	endbr64
    a05b:	55                   	push   %rbp
    a05c:	48 89 e5             	mov    %rsp,%rbp
    a05f:	48 83 ec 30          	sub    $0x30,%rsp
    a063:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a066:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a06a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a06e:	bf 28 00 00 00       	mov    $0x28,%edi
    a073:	e8 58 84 ff ff       	call   24d0 <malloc@plt>
    a078:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a07c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a080:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a083:	89 10                	mov    %edx,(%rax)
    a085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a089:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    a090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a094:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a098:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a09c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a0a4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a0a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ac:	c9                   	leave
    a0ad:	c3                   	ret

000000000000a0ae <mk_procedurecall>:
    a0ae:	f3 0f 1e fa          	endbr64
    a0b2:	55                   	push   %rbp
    a0b3:	48 89 e5             	mov    %rsp,%rbp
    a0b6:	48 83 ec 30          	sub    $0x30,%rsp
    a0ba:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a0bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0c1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a0c5:	bf 28 00 00 00       	mov    $0x28,%edi
    a0ca:	e8 01 84 ff ff       	call   24d0 <malloc@plt>
    a0cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0d7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a0da:	89 10                	mov    %edx,(%rax)
    a0dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    a0e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a0ef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a0f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0f7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a0fb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a0ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a103:	c9                   	leave
    a104:	c3                   	ret

000000000000a105 <mk_compoundstatement>:
    a105:	f3 0f 1e fa          	endbr64
    a109:	55                   	push   %rbp
    a10a:	48 89 e5             	mov    %rsp,%rbp
    a10d:	48 83 ec 20          	sub    $0x20,%rsp
    a111:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a114:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a118:	bf 28 00 00 00       	mov    $0x28,%edi
    a11d:	e8 ae 83 ff ff       	call   24d0 <malloc@plt>
    a122:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a12a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a12d:	89 10                	mov    %edx,(%rax)
    a12f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a133:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    a13a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a13e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a142:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a14a:	c9                   	leave
    a14b:	c3                   	ret

000000000000a14c <mk_ifthen>:
    a14c:	f3 0f 1e fa          	endbr64
    a150:	55                   	push   %rbp
    a151:	48 89 e5             	mov    %rsp,%rbp
    a154:	48 83 ec 30          	sub    $0x30,%rsp
    a158:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a15b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a15f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a163:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a167:	bf 28 00 00 00       	mov    $0x28,%edi
    a16c:	e8 5f 83 ff ff       	call   24d0 <malloc@plt>
    a171:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a179:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a17c:	89 10                	mov    %edx,(%rax)
    a17e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a182:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    a189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a191:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a199:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a19d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a1a9:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a1ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b1:	c9                   	leave
    a1b2:	c3                   	ret

000000000000a1b3 <mk_while>:
    a1b3:	f3 0f 1e fa          	endbr64
    a1b7:	55                   	push   %rbp
    a1b8:	48 89 e5             	mov    %rsp,%rbp
    a1bb:	48 83 ec 30          	sub    $0x30,%rsp
    a1bf:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a1c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a1c6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a1ca:	bf 28 00 00 00       	mov    $0x28,%edi
    a1cf:	e8 fc 82 ff ff       	call   24d0 <malloc@plt>
    a1d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1dc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a1df:	89 10                	mov    %edx,(%rax)
    a1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e5:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    a1ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a1f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a200:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a208:	c9                   	leave
    a209:	c3                   	ret

000000000000a20a <mk_forassign>:
    a20a:	f3 0f 1e fa          	endbr64
    a20e:	55                   	push   %rbp
    a20f:	48 89 e5             	mov    %rsp,%rbp
    a212:	48 83 ec 30          	sub    $0x30,%rsp
    a216:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a219:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a21d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a221:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a225:	bf 28 00 00 00       	mov    $0x28,%edi
    a22a:	e8 a1 82 ff ff       	call   24d0 <malloc@plt>
    a22f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a237:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a23a:	89 10                	mov    %edx,(%rax)
    a23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a240:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    a247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24b:	c7 40 08 07 00 00 00 	movl   $0x7,0x8(%rax)
    a252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a256:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a25a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a25e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a262:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a266:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a26e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a272:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a27a:	c9                   	leave
    a27b:	c3                   	ret

000000000000a27c <mk_forvar>:
    a27c:	f3 0f 1e fa          	endbr64
    a280:	55                   	push   %rbp
    a281:	48 89 e5             	mov    %rsp,%rbp
    a284:	48 83 ec 30          	sub    $0x30,%rsp
    a288:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a28b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a28f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a293:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a297:	bf 28 00 00 00       	mov    $0x28,%edi
    a29c:	e8 2f 82 ff ff       	call   24d0 <malloc@plt>
    a2a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a2ac:	89 10                	mov    %edx,(%rax)
    a2ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b2:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    a2b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2bd:	c7 40 08 06 00 00 00 	movl   $0x6,0x8(%rax)
    a2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a2cc:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a2d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a2d8:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a2dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a2e4:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a2e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ec:	c9                   	leave
    a2ed:	c3                   	ret

000000000000a2ee <mk_asmblock>:
    a2ee:	f3 0f 1e fa          	endbr64
    a2f2:	55                   	push   %rbp
    a2f3:	48 89 e5             	mov    %rsp,%rbp
    a2f6:	48 83 ec 20          	sub    $0x20,%rsp
    a2fa:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a2fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a301:	bf 28 00 00 00       	mov    $0x28,%edi
    a306:	e8 c5 81 ff ff       	call   24d0 <malloc@plt>
    a30b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a30f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a313:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a316:	89 10                	mov    %edx,(%rax)
    a318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a31c:	c7 40 04 08 00 00 00 	movl   $0x8,0x4(%rax)
    a323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a327:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a32b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a32f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a333:	c9                   	leave
    a334:	c3                   	ret

000000000000a335 <mk_relop>:
    a335:	f3 0f 1e fa          	endbr64
    a339:	55                   	push   %rbp
    a33a:	48 89 e5             	mov    %rsp,%rbp
    a33d:	48 83 ec 30          	sub    $0x30,%rsp
    a341:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a344:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a347:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    a34b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    a34f:	bf 28 00 00 00       	mov    $0x28,%edi
    a354:	e8 77 81 ff ff       	call   24d0 <malloc@plt>
    a359:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a35d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a361:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a364:	89 10                	mov    %edx,(%rax)
    a366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a36a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    a371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a375:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a378:	89 50 08             	mov    %edx,0x8(%rax)
    a37b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a37f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a383:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a38f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a397:	c9                   	leave
    a398:	c3                   	ret

000000000000a399 <mk_signterm>:
    a399:	f3 0f 1e fa          	endbr64
    a39d:	55                   	push   %rbp
    a39e:	48 89 e5             	mov    %rsp,%rbp
    a3a1:	48 83 ec 20          	sub    $0x20,%rsp
    a3a5:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a3a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a3ac:	bf 28 00 00 00       	mov    $0x28,%edi
    a3b1:	e8 1a 81 ff ff       	call   24d0 <malloc@plt>
    a3b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3be:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a3c1:	89 10                	mov    %edx,(%rax)
    a3c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    a3ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3d2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a3d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a3da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3de:	c9                   	leave
    a3df:	c3                   	ret

000000000000a3e0 <mk_addop>:
    a3e0:	f3 0f 1e fa          	endbr64
    a3e4:	55                   	push   %rbp
    a3e5:	48 89 e5             	mov    %rsp,%rbp
    a3e8:	48 83 ec 30          	sub    $0x30,%rsp
    a3ec:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a3ef:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a3f2:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    a3f6:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    a3fa:	bf 28 00 00 00       	mov    $0x28,%edi
    a3ff:	e8 cc 80 ff ff       	call   24d0 <malloc@plt>
    a404:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a40c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a40f:	89 10                	mov    %edx,(%rax)
    a411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a415:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    a41c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a420:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a423:	89 50 08             	mov    %edx,0x8(%rax)
    a426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a42e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a436:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a43a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a43e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a442:	c9                   	leave
    a443:	c3                   	ret

000000000000a444 <mk_mulop>:
    a444:	f3 0f 1e fa          	endbr64
    a448:	55                   	push   %rbp
    a449:	48 89 e5             	mov    %rsp,%rbp
    a44c:	48 83 ec 30          	sub    $0x30,%rsp
    a450:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a453:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a456:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    a45a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    a45e:	bf 28 00 00 00       	mov    $0x28,%edi
    a463:	e8 68 80 ff ff       	call   24d0 <malloc@plt>
    a468:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a470:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a473:	89 10                	mov    %edx,(%rax)
    a475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a479:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    a480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a484:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a487:	89 50 08             	mov    %edx,0x8(%rax)
    a48a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a48e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a492:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a49e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a4a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a6:	c9                   	leave
    a4a7:	c3                   	ret

000000000000a4a8 <mk_varid>:
    a4a8:	f3 0f 1e fa          	endbr64
    a4ac:	55                   	push   %rbp
    a4ad:	48 89 e5             	mov    %rsp,%rbp
    a4b0:	48 83 ec 20          	sub    $0x20,%rsp
    a4b4:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a4b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a4bb:	bf 28 00 00 00       	mov    $0x28,%edi
    a4c0:	e8 0b 80 ff ff       	call   24d0 <malloc@plt>
    a4c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a4c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4cd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a4d0:	89 10                	mov    %edx,(%rax)
    a4d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d6:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    a4dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a4e5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a4e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ed:	c9                   	leave
    a4ee:	c3                   	ret

000000000000a4ef <mk_arrayaccess>:
    a4ef:	f3 0f 1e fa          	endbr64
    a4f3:	55                   	push   %rbp
    a4f4:	48 89 e5             	mov    %rsp,%rbp
    a4f7:	48 83 ec 30          	sub    $0x30,%rsp
    a4fb:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a4fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a502:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a506:	bf 28 00 00 00       	mov    $0x28,%edi
    a50b:	e8 c0 7f ff ff       	call   24d0 <malloc@plt>
    a510:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a518:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a51b:	89 10                	mov    %edx,(%rax)
    a51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a521:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%rax)
    a528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a52c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a530:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a538:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a53c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a544:	c9                   	leave
    a545:	c3                   	ret

000000000000a546 <mk_functioncall>:
    a546:	f3 0f 1e fa          	endbr64
    a54a:	55                   	push   %rbp
    a54b:	48 89 e5             	mov    %rsp,%rbp
    a54e:	48 83 ec 30          	sub    $0x30,%rsp
    a552:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a555:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a559:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a55d:	bf 28 00 00 00       	mov    $0x28,%edi
    a562:	e8 69 7f ff ff       	call   24d0 <malloc@plt>
    a567:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a56b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a56f:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a572:	89 10                	mov    %edx,(%rax)
    a574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a578:	c7 40 04 06 00 00 00 	movl   $0x6,0x4(%rax)
    a57f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a583:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a587:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a58b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a58f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a593:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a59b:	c9                   	leave
    a59c:	c3                   	ret

000000000000a59d <mk_inum>:
    a59d:	f3 0f 1e fa          	endbr64
    a5a1:	55                   	push   %rbp
    a5a2:	48 89 e5             	mov    %rsp,%rbp
    a5a5:	48 83 ec 20          	sub    $0x20,%rsp
    a5a9:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a5ac:	89 75 e8             	mov    %esi,-0x18(%rbp)
    a5af:	bf 28 00 00 00       	mov    $0x28,%edi
    a5b4:	e8 17 7f ff ff       	call   24d0 <malloc@plt>
    a5b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a5bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c1:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a5c4:	89 10                	mov    %edx,(%rax)
    a5c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ca:	c7 40 04 07 00 00 00 	movl   $0x7,0x4(%rax)
    a5d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d5:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a5d8:	89 50 08             	mov    %edx,0x8(%rax)
    a5db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5df:	c9                   	leave
    a5e0:	c3                   	ret

000000000000a5e1 <mk_string>:
    a5e1:	f3 0f 1e fa          	endbr64
    a5e5:	55                   	push   %rbp
    a5e6:	48 89 e5             	mov    %rsp,%rbp
    a5e9:	48 83 ec 20          	sub    $0x20,%rsp
    a5ed:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a5f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a5f4:	bf 28 00 00 00       	mov    $0x28,%edi
    a5f9:	e8 d2 7e ff ff       	call   24d0 <malloc@plt>
    a5fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a606:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a609:	89 10                	mov    %edx,(%rax)
    a60b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a60f:	c7 40 04 09 00 00 00 	movl   $0x9,0x4(%rax)
    a616:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a61a:	48 89 c7             	mov    %rax,%rdi
    a61d:	e8 3e 7f ff ff       	call   2560 <strdup@plt>
    a622:	48 89 c2             	mov    %rax,%rdx
    a625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a629:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a62d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a631:	48 8b 40 08          	mov    0x8(%rax),%rax
    a635:	48 85 c0             	test   %rax,%rax
    a638:	75 13                	jne    a64d <mk_string+0x6c>
    a63a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63e:	48 89 c7             	mov    %rax,%rdi
    a641:	e8 aa 7c ff ff       	call   22f0 <free@plt>
    a646:	b8 00 00 00 00       	mov    $0x0,%eax
    a64b:	eb 04                	jmp    a651 <mk_string+0x70>
    a64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a651:	c9                   	leave
    a652:	c3                   	ret

000000000000a653 <mk_rnum>:
    a653:	f3 0f 1e fa          	endbr64
    a657:	55                   	push   %rbp
    a658:	48 89 e5             	mov    %rsp,%rbp
    a65b:	48 83 ec 20          	sub    $0x20,%rsp
    a65f:	89 7d ec             	mov    %edi,-0x14(%rbp)
    a662:	f3 0f 11 45 e8       	movss  %xmm0,-0x18(%rbp)
    a667:	bf 28 00 00 00       	mov    $0x28,%edi
    a66c:	e8 5f 7e ff ff       	call   24d0 <malloc@plt>
    a671:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a679:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a67c:	89 10                	mov    %edx,(%rax)
    a67e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a682:	c7 40 04 08 00 00 00 	movl   $0x8,0x4(%rax)
    a689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a68d:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
    a692:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
    a697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a69b:	c9                   	leave
    a69c:	c3                   	ret

000000000000a69d <semcheck_id_not_main>:
    a69d:	f3 0f 1e fa          	endbr64
    a6a1:	55                   	push   %rbp
    a6a2:	48 89 e5             	mov    %rsp,%rbp
    a6a5:	48 83 ec 10          	sub    $0x10,%rsp
    a6a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b1:	48 8d 15 c8 01 01 00 	lea    0x101c8(%rip),%rdx        # 1a880 <__PRETTY_FUNCTION__.0+0x10>
    a6b8:	48 89 d6             	mov    %rdx,%rsi
    a6bb:	48 89 c7             	mov    %rax,%rdi
    a6be:	e8 8d 7d ff ff       	call   2450 <strcmp@plt>
    a6c3:	85 c0                	test   %eax,%eax
    a6c5:	75 2a                	jne    a6f1 <semcheck_id_not_main+0x54>
    a6c7:	48 8b 05 92 79 01 00 	mov    0x17992(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a6ce:	48 89 c1             	mov    %rax,%rcx
    a6d1:	ba 46 00 00 00       	mov    $0x46,%edx
    a6d6:	be 01 00 00 00       	mov    $0x1,%esi
    a6db:	48 8d 05 a6 01 01 00 	lea    0x101a6(%rip),%rax        # 1a888 <__PRETTY_FUNCTION__.0+0x18>
    a6e2:	48 89 c7             	mov    %rax,%rdi
    a6e5:	e8 66 7e ff ff       	call   2550 <fwrite@plt>
    a6ea:	b8 01 00 00 00       	mov    $0x1,%eax
    a6ef:	eb 05                	jmp    a6f6 <semcheck_id_not_main+0x59>
    a6f1:	b8 00 00 00 00       	mov    $0x0,%eax
    a6f6:	c9                   	leave
    a6f7:	c3                   	ret

000000000000a6f8 <start_semcheck>:
    a6f8:	f3 0f 1e fa          	endbr64
    a6fc:	55                   	push   %rbp
    a6fd:	48 89 e5             	mov    %rsp,%rbp
    a700:	48 83 ec 20          	sub    $0x20,%rsp
    a704:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a708:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a70c:	b8 00 00 00 00       	mov    $0x0,%eax
    a711:	e8 55 13 00 00       	call   ba6b <InitSymTab>
    a716:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a71e:	48 89 c7             	mov    %rax,%rdi
    a721:	e8 af 01 00 00       	call   a8d5 <semcheck_add_builtins>
    a726:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a72a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a72e:	48 89 d6             	mov    %rdx,%rsi
    a731:	48 89 c7             	mov    %rax,%rdi
    a734:	e8 fb 01 00 00       	call   a934 <semcheck_program>
    a739:	89 45 f4             	mov    %eax,-0xc(%rbp)
    a73c:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    a740:	7e 23                	jle    a765 <start_semcheck+0x6d>
    a742:	48 8b 05 17 79 01 00 	mov    0x17917(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a749:	8b 55 f4             	mov    -0xc(%rbp),%edx
    a74c:	48 8d 0d 7d 01 01 00 	lea    0x1017d(%rip),%rcx        # 1a8d0 <__PRETTY_FUNCTION__.0+0x60>
    a753:	48 89 ce             	mov    %rcx,%rsi
    a756:	48 89 c7             	mov    %rax,%rdi
    a759:	b8 00 00 00 00       	mov    $0x0,%eax
    a75e:	e8 0d 7d ff ff       	call   2470 <fprintf@plt>
    a763:	eb 23                	jmp    a788 <start_semcheck+0x90>
    a765:	48 8b 05 f4 78 01 00 	mov    0x178f4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a76c:	48 89 c1             	mov    %rax,%rcx
    a76f:	ba 14 00 00 00       	mov    $0x14,%edx
    a774:	be 01 00 00 00       	mov    $0x1,%esi
    a779:	48 8d 05 72 01 01 00 	lea    0x10172(%rip),%rax        # 1a8f2 <__PRETTY_FUNCTION__.0+0x82>
    a780:	48 89 c7             	mov    %rax,%rdi
    a783:	e8 c8 7d ff ff       	call   2550 <fwrite@plt>
    a788:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a78c:	8b 55 f4             	mov    -0xc(%rbp),%edx
    a78f:	89 10                	mov    %edx,(%rax)
    a791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a795:	c9                   	leave
    a796:	c3                   	ret

000000000000a797 <semcheck_type_decls>:
    a797:	f3 0f 1e fa          	endbr64
    a79b:	55                   	push   %rbp
    a79c:	48 89 e5             	mov    %rsp,%rbp
    a79f:	48 83 ec 30          	sub    $0x30,%rsp
    a7a3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a7a7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a7ab:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    a7b0:	75 28                	jne    a7da <semcheck_type_decls+0x43>
    a7b2:	48 8d 05 d7 03 01 00 	lea    0x103d7(%rip),%rax        # 1ab90 <__PRETTY_FUNCTION__.5>
    a7b9:	48 89 c1             	mov    %rax,%rcx
    a7bc:	ba 57 00 00 00       	mov    $0x57,%edx
    a7c1:	48 8d 05 40 01 01 00 	lea    0x10140(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a7c8:	48 89 c6             	mov    %rax,%rsi
    a7cb:	48 8d 05 5d 01 01 00 	lea    0x1015d(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    a7d2:	48 89 c7             	mov    %rax,%rdi
    a7d5:	e8 f6 7b ff ff       	call   23d0 <__assert_fail@plt>
    a7da:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    a7e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a7e5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a7e9:	e9 d7 00 00 00       	jmp    a8c5 <semcheck_type_decls+0x12e>
    a7ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7f2:	8b 00                	mov    (%rax),%eax
    a7f4:	85 c0                	test   %eax,%eax
    a7f6:	74 28                	je     a820 <semcheck_type_decls+0x89>
    a7f8:	48 8d 05 91 03 01 00 	lea    0x10391(%rip),%rax        # 1ab90 <__PRETTY_FUNCTION__.5>
    a7ff:	48 89 c1             	mov    %rax,%rcx
    a802:	ba 5d 00 00 00       	mov    $0x5d,%edx
    a807:	48 8d 05 fa 00 01 00 	lea    0x100fa(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a80e:	48 89 c6             	mov    %rax,%rsi
    a811:	48 8d 05 26 01 01 00 	lea    0x10126(%rip),%rax        # 1a93e <__PRETTY_FUNCTION__.0+0xce>
    a818:	48 89 c7             	mov    %rax,%rdi
    a81b:	e8 b0 7b ff ff       	call   23d0 <__assert_fail@plt>
    a820:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a824:	48 8b 40 08          	mov    0x8(%rax),%rax
    a828:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a830:	8b 40 04             	mov    0x4(%rax),%eax
    a833:	83 f8 07             	cmp    $0x7,%eax
    a836:	74 28                	je     a860 <semcheck_type_decls+0xc9>
    a838:	48 8d 05 51 03 01 00 	lea    0x10351(%rip),%rax        # 1ab90 <__PRETTY_FUNCTION__.5>
    a83f:	48 89 c1             	mov    %rax,%rcx
    a842:	ba 5f 00 00 00       	mov    $0x5f,%edx
    a847:	48 8d 05 ba 00 01 00 	lea    0x100ba(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a84e:	48 89 c6             	mov    %rax,%rsi
    a851:	48 8d 05 fd 00 01 00 	lea    0x100fd(%rip),%rax        # 1a955 <__PRETTY_FUNCTION__.0+0xe5>
    a858:	48 89 c7             	mov    %rax,%rdi
    a85b:	e8 70 7b ff ff       	call   23d0 <__assert_fail@plt>
    a860:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    a867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a86b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a86f:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a876:	48 89 ce             	mov    %rcx,%rsi
    a879:	48 89 c7             	mov    %rax,%rdi
    a87c:	e8 ef 19 00 00       	call   c270 <PushTypeOntoScope>
    a881:	89 45 ec             	mov    %eax,-0x14(%rbp)
    a884:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    a888:	7e 2f                	jle    a8b9 <semcheck_type_decls+0x122>
    a88a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a88e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a896:	8b 10                	mov    (%rax),%edx
    a898:	48 8b 05 c1 77 01 00 	mov    0x177c1(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    a89f:	48 8d 35 d2 00 01 00 	lea    0x100d2(%rip),%rsi        # 1a978 <__PRETTY_FUNCTION__.0+0x108>
    a8a6:	48 89 c7             	mov    %rax,%rdi
    a8a9:	b8 00 00 00 00       	mov    $0x0,%eax
    a8ae:	e8 bd 7b ff ff       	call   2470 <fprintf@plt>
    a8b3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    a8b6:	01 45 e4             	add    %eax,-0x1c(%rbp)
    a8b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8bd:	48 8b 40 10          	mov    0x10(%rax),%rax
    a8c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a8c5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8ca:	0f 85 1e ff ff ff    	jne    a7ee <semcheck_type_decls+0x57>
    a8d0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    a8d3:	c9                   	leave
    a8d4:	c3                   	ret

000000000000a8d5 <semcheck_add_builtins>:
    a8d5:	f3 0f 1e fa          	endbr64
    a8d9:	55                   	push   %rbp
    a8da:	48 89 e5             	mov    %rsp,%rbp
    a8dd:	48 83 ec 10          	sub    $0x10,%rsp
    a8e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8e5:	48 8d 05 b9 00 01 00 	lea    0x100b9(%rip),%rax        # 1a9a5 <__PRETTY_FUNCTION__.0+0x135>
    a8ec:	48 89 c7             	mov    %rax,%rdi
    a8ef:	e8 6c 7c ff ff       	call   2560 <strdup@plt>
    a8f4:	48 89 c1             	mov    %rax,%rcx
    a8f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8fb:	ba 05 00 00 00       	mov    $0x5,%edx
    a900:	48 89 ce             	mov    %rcx,%rsi
    a903:	48 89 c7             	mov    %rax,%rdi
    a906:	e8 40 12 00 00       	call   bb4b <AddBuiltinType>
    a90b:	48 8d 05 99 00 01 00 	lea    0x10099(%rip),%rax        # 1a9ab <__PRETTY_FUNCTION__.0+0x13b>
    a912:	48 89 c7             	mov    %rax,%rdi
    a915:	e8 46 7c ff ff       	call   2560 <strdup@plt>
    a91a:	48 89 c1             	mov    %rax,%rcx
    a91d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a921:	ba 05 00 00 00       	mov    $0x5,%edx
    a926:	48 89 ce             	mov    %rcx,%rsi
    a929:	48 89 c7             	mov    %rax,%rdi
    a92c:	e8 1a 12 00 00       	call   bb4b <AddBuiltinType>
    a931:	90                   	nop
    a932:	c9                   	leave
    a933:	c3                   	ret

000000000000a934 <semcheck_program>:
    a934:	f3 0f 1e fa          	endbr64
    a938:	55                   	push   %rbp
    a939:	48 89 e5             	mov    %rsp,%rbp
    a93c:	48 83 ec 20          	sub    $0x20,%rsp
    a940:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a944:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a948:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a94d:	75 28                	jne    a977 <semcheck_program+0x43>
    a94f:	48 8d 05 5a 02 01 00 	lea    0x1025a(%rip),%rax        # 1abb0 <__PRETTY_FUNCTION__.4>
    a956:	48 89 c1             	mov    %rax,%rcx
    a959:	ba 84 00 00 00       	mov    $0x84,%edx
    a95e:	48 8d 05 a3 ff 00 00 	lea    0xffa3(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a965:	48 89 c6             	mov    %rax,%rsi
    a968:	48 8d 05 43 00 01 00 	lea    0x10043(%rip),%rax        # 1a9b2 <__PRETTY_FUNCTION__.0+0x142>
    a96f:	48 89 c7             	mov    %rax,%rdi
    a972:	e8 59 7a ff ff       	call   23d0 <__assert_fail@plt>
    a977:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a97c:	75 28                	jne    a9a6 <semcheck_program+0x72>
    a97e:	48 8d 05 2b 02 01 00 	lea    0x1022b(%rip),%rax        # 1abb0 <__PRETTY_FUNCTION__.4>
    a985:	48 89 c1             	mov    %rax,%rcx
    a988:	ba 85 00 00 00       	mov    $0x85,%edx
    a98d:	48 8d 05 74 ff 00 00 	lea    0xff74(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a994:	48 89 c6             	mov    %rax,%rsi
    a997:	48 8d 05 91 ff 00 00 	lea    0xff91(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    a99e:	48 89 c7             	mov    %rax,%rdi
    a9a1:	e8 2a 7a ff ff       	call   23d0 <__assert_fail@plt>
    a9a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9aa:	8b 40 04             	mov    0x4(%rax),%eax
    a9ad:	85 c0                	test   %eax,%eax
    a9af:	74 28                	je     a9d9 <semcheck_program+0xa5>
    a9b1:	48 8d 05 f8 01 01 00 	lea    0x101f8(%rip),%rax        # 1abb0 <__PRETTY_FUNCTION__.4>
    a9b8:	48 89 c1             	mov    %rax,%rcx
    a9bb:	ba 86 00 00 00       	mov    $0x86,%edx
    a9c0:	48 8d 05 41 ff 00 00 	lea    0xff41(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    a9c7:	48 89 c6             	mov    %rax,%rsi
    a9ca:	48 8d 05 ef ff 00 00 	lea    0xffef(%rip),%rax        # 1a9c0 <__PRETTY_FUNCTION__.0+0x150>
    a9d1:	48 89 c7             	mov    %rax,%rdi
    a9d4:	e8 f7 79 ff ff       	call   23d0 <__assert_fail@plt>
    a9d9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    a9e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9e4:	48 89 c7             	mov    %rax,%rdi
    a9e7:	e8 00 12 00 00       	call   bbec <PushScope>
    a9ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    a9f4:	48 89 c7             	mov    %rax,%rdi
    a9f7:	e8 a1 fc ff ff       	call   a69d <semcheck_id_not_main>
    a9fc:	01 45 fc             	add    %eax,-0x4(%rbp)
    a9ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa03:	8b 10                	mov    (%rax),%edx
    aa05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa09:	48 8b 48 10          	mov    0x10(%rax),%rcx
    aa0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa11:	48 89 ce             	mov    %rcx,%rsi
    aa14:	48 89 c7             	mov    %rax,%rdi
    aa17:	e8 ad 00 00 00       	call   aac9 <semcheck_args>
    aa1c:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa23:	48 8b 50 20          	mov    0x20(%rax),%rdx
    aa27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa2b:	48 89 d6             	mov    %rdx,%rsi
    aa2e:	48 89 c7             	mov    %rax,%rdi
    aa31:	e8 61 fd ff ff       	call   a797 <semcheck_type_decls>
    aa36:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa3d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    aa41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa45:	48 89 d6             	mov    %rdx,%rsi
    aa48:	48 89 c7             	mov    %rax,%rdi
    aa4b:	e8 9c 01 00 00       	call   abec <semcheck_decls>
    aa50:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa57:	48 8b 48 28          	mov    0x28(%rax),%rcx
    aa5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa5f:	ba 00 00 00 00       	mov    $0x0,%edx
    aa64:	48 89 ce             	mov    %rcx,%rsi
    aa67:	48 89 c7             	mov    %rax,%rdi
    aa6a:	e8 52 08 00 00       	call   b2c1 <semcheck_subprograms>
    aa6f:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa76:	48 8b 48 30          	mov    0x30(%rax),%rcx
    aa7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa7e:	ba 00 00 00 00       	mov    $0x0,%edx
    aa83:	48 89 ce             	mov    %rcx,%rsi
    aa86:	48 89 c7             	mov    %rax,%rdi
    aa89:	e8 e9 20 00 00       	call   cb77 <semcheck_stmt>
    aa8e:	01 45 fc             	add    %eax,-0x4(%rbp)
    aa91:	b8 00 00 00 00       	mov    $0x0,%eax
    aa96:	e8 f7 d5 ff ff       	call   8092 <optimize_flag>
    aa9b:	85 c0                	test   %eax,%eax
    aa9d:	7e 19                	jle    aab8 <semcheck_program+0x184>
    aa9f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    aaa3:	75 13                	jne    aab8 <semcheck_program+0x184>
    aaa5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aaa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaad:	48 89 d6             	mov    %rdx,%rsi
    aab0:	48 89 c7             	mov    %rax,%rdi
    aab3:	e8 a4 ad 00 00       	call   1585c <optimize>
    aab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aabc:	48 89 c7             	mov    %rax,%rdi
    aabf:	e8 80 18 00 00       	call   c344 <PopScope>
    aac4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    aac7:	c9                   	leave
    aac8:	c3                   	ret

000000000000aac9 <semcheck_args>:
    aac9:	f3 0f 1e fa          	endbr64
    aacd:	55                   	push   %rbp
    aace:	48 89 e5             	mov    %rsp,%rbp
    aad1:	48 83 ec 30          	sub    $0x30,%rsp
    aad5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aad9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aadd:	89 55 dc             	mov    %edx,-0x24(%rbp)
    aae0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    aae5:	75 28                	jne    ab0f <semcheck_args+0x46>
    aae7:	48 8d 05 da 00 01 00 	lea    0x100da(%rip),%rax        # 1abc8 <__PRETTY_FUNCTION__.3>
    aaee:	48 89 c1             	mov    %rax,%rcx
    aaf1:	ba ab 00 00 00       	mov    $0xab,%edx
    aaf6:	48 8d 05 0b fe 00 00 	lea    0xfe0b(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    aafd:	48 89 c6             	mov    %rax,%rsi
    ab00:	48 8d 05 28 fe 00 00 	lea    0xfe28(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    ab07:	48 89 c7             	mov    %rax,%rdi
    ab0a:	e8 c1 78 ff ff       	call   23d0 <__assert_fail@plt>
    ab0f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    ab16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ab1e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ab23:	0f 84 b3 00 00 00    	je     abdc <semcheck_args+0x113>
    ab29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab2d:	8b 00                	mov    (%rax),%eax
    ab2f:	85 c0                	test   %eax,%eax
    ab31:	0f 85 a5 00 00 00    	jne    abdc <semcheck_args+0x113>
    ab37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab3f:	48 89 d6             	mov    %rdx,%rsi
    ab42:	48 89 c7             	mov    %rax,%rdi
    ab45:	e8 a2 00 00 00       	call   abec <semcheck_decls>
    ab4a:	e9 9b 00 00 00       	jmp    abea <semcheck_args+0x121>
    ab4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab53:	8b 00                	mov    (%rax),%eax
    ab55:	83 f8 03             	cmp    $0x3,%eax
    ab58:	74 28                	je     ab82 <semcheck_args+0xb9>
    ab5a:	48 8d 05 67 00 01 00 	lea    0x10067(%rip),%rax        # 1abc8 <__PRETTY_FUNCTION__.3>
    ab61:	48 89 c1             	mov    %rax,%rcx
    ab64:	ba ba 00 00 00       	mov    $0xba,%edx
    ab69:	48 8d 05 98 fd 00 00 	lea    0xfd98(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    ab70:	48 89 c6             	mov    %rax,%rsi
    ab73:	48 8d 05 66 fe 00 00 	lea    0xfe66(%rip),%rax        # 1a9e0 <__PRETTY_FUNCTION__.0+0x170>
    ab7a:	48 89 c7             	mov    %rax,%rdi
    ab7d:	e8 4e 78 ff ff       	call   23d0 <__assert_fail@plt>
    ab82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab86:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ab8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab8e:	be 04 00 00 00       	mov    $0x4,%esi
    ab93:	48 89 c7             	mov    %rax,%rdi
    ab96:	e8 f4 10 00 00       	call   bc8f <PushVarOntoScope>
    ab9b:	89 45 f4             	mov    %eax,-0xc(%rbp)
    ab9e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    aba2:	7e 2c                	jle    abd0 <semcheck_args+0x107>
    aba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    abac:	48 8b 05 ad 74 01 00 	mov    0x174ad(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    abb3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    abb6:	48 8d 35 bb fd 00 00 	lea    0xfdbb(%rip),%rsi        # 1a978 <__PRETTY_FUNCTION__.0+0x108>
    abbd:	48 89 c7             	mov    %rax,%rdi
    abc0:	b8 00 00 00 00       	mov    $0x0,%eax
    abc5:	e8 a6 78 ff ff       	call   2470 <fprintf@plt>
    abca:	8b 45 f4             	mov    -0xc(%rbp),%eax
    abcd:	01 45 f0             	add    %eax,-0x10(%rbp)
    abd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abd4:	48 8b 40 10          	mov    0x10(%rax),%rax
    abd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    abdc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    abe1:	0f 85 68 ff ff ff    	jne    ab4f <semcheck_args+0x86>
    abe7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    abea:	c9                   	leave
    abeb:	c3                   	ret

000000000000abec <semcheck_decls>:
    abec:	f3 0f 1e fa          	endbr64
    abf0:	55                   	push   %rbp
    abf1:	48 89 e5             	mov    %rsp,%rbp
    abf4:	48 83 ec 50          	sub    $0x50,%rsp
    abf8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    abfc:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    ac00:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac07:	00 00
    ac09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ac0d:	31 c0                	xor    %eax,%eax
    ac0f:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    ac14:	75 28                	jne    ac3e <semcheck_decls+0x52>
    ac16:	48 8d 05 bb ff 00 00 	lea    0xffbb(%rip),%rax        # 1abd8 <__PRETTY_FUNCTION__.2>
    ac1d:	48 89 c1             	mov    %rax,%rcx
    ac20:	ba d6 00 00 00       	mov    $0xd6,%edx
    ac25:	48 8d 05 dc fc 00 00 	lea    0xfcdc(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    ac2c:	48 89 c6             	mov    %rax,%rsi
    ac2f:	48 8d 05 f9 fc 00 00 	lea    0xfcf9(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    ac36:	48 89 c7             	mov    %rax,%rdi
    ac39:	e8 92 77 ff ff       	call   23d0 <__assert_fail@plt>
    ac3e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    ac45:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ac49:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ac4d:	e9 eb 01 00 00       	jmp    ae3d <semcheck_decls+0x251>
    ac52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac56:	8b 00                	mov    (%rax),%eax
    ac58:	85 c0                	test   %eax,%eax
    ac5a:	74 28                	je     ac84 <semcheck_decls+0x98>
    ac5c:	48 8d 05 75 ff 00 00 	lea    0xff75(%rip),%rax        # 1abd8 <__PRETTY_FUNCTION__.2>
    ac63:	48 89 c1             	mov    %rax,%rcx
    ac66:	ba dd 00 00 00       	mov    $0xdd,%edx
    ac6b:	48 8d 05 96 fc 00 00 	lea    0xfc96(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    ac72:	48 89 c6             	mov    %rax,%rsi
    ac75:	48 8d 05 c2 fc 00 00 	lea    0xfcc2(%rip),%rax        # 1a93e <__PRETTY_FUNCTION__.0+0xce>
    ac7c:	48 89 c7             	mov    %rax,%rdi
    ac7f:	e8 4c 77 ff ff       	call   23d0 <__assert_fail@plt>
    ac84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac88:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ac90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac94:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ac9c:	e9 85 01 00 00       	jmp    ae26 <semcheck_decls+0x23a>
    aca1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aca5:	8b 00                	mov    (%rax),%eax
    aca7:	83 f8 03             	cmp    $0x3,%eax
    acaa:	74 28                	je     acd4 <semcheck_decls+0xe8>
    acac:	48 8d 05 25 ff 00 00 	lea    0xff25(%rip),%rax        # 1abd8 <__PRETTY_FUNCTION__.2>
    acb3:	48 89 c1             	mov    %rax,%rcx
    acb6:	ba e4 00 00 00       	mov    $0xe4,%edx
    acbb:	48 8d 05 46 fc 00 00 	lea    0xfc46(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    acc2:	48 89 c6             	mov    %rax,%rsi
    acc5:	48 8d 05 2d fd 00 00 	lea    0xfd2d(%rip),%rax        # 1a9f9 <__PRETTY_FUNCTION__.0+0x189>
    accc:	48 89 c7             	mov    %rax,%rdi
    accf:	e8 fc 76 ff ff       	call   23d0 <__assert_fail@plt>
    acd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acd8:	8b 40 04             	mov    0x4(%rax),%eax
    acdb:	83 f8 02             	cmp    $0x2,%eax
    acde:	0f 85 b9 00 00 00    	jne    ad9d <semcheck_decls+0x1b1>
    ace4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ace8:	48 8b 40 18          	mov    0x18(%rax),%rax
    acec:	48 85 c0             	test   %rax,%rax
    acef:	74 62                	je     ad53 <semcheck_decls+0x167>
    acf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acf5:	48 8b 50 18          	mov    0x18(%rax),%rdx
    acf9:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    acfd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ad01:	48 89 ce             	mov    %rcx,%rsi
    ad04:	48 89 c7             	mov    %rax,%rdi
    ad07:	e8 b7 13 00 00       	call   c0c3 <FindIdent>
    ad0c:	83 f8 ff             	cmp    $0xffffffff,%eax
    ad0f:	75 36                	jne    ad47 <semcheck_decls+0x15b>
    ad11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad15:	48 8b 48 18          	mov    0x18(%rax),%rcx
    ad19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad1d:	8b 10                	mov    (%rax),%edx
    ad1f:	48 8b 05 3a 73 01 00 	mov    0x1733a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ad26:	48 8d 35 eb fc 00 00 	lea    0xfceb(%rip),%rsi        # 1aa18 <__PRETTY_FUNCTION__.0+0x1a8>
    ad2d:	48 89 c7             	mov    %rax,%rdi
    ad30:	b8 00 00 00 00       	mov    $0x0,%eax
    ad35:	e8 36 77 ff ff       	call   2470 <fprintf@plt>
    ad3a:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    ad3e:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%rbp)
    ad45:	eb 38                	jmp    ad7f <semcheck_decls+0x193>
    ad47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ad4b:	8b 40 14             	mov    0x14(%rax),%eax
    ad4e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ad51:	eb 2c                	jmp    ad7f <semcheck_decls+0x193>
    ad53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad57:	8b 40 10             	mov    0x10(%rax),%eax
    ad5a:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ad5f:	74 0e                	je     ad6f <semcheck_decls+0x183>
    ad61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad65:	8b 40 10             	mov    0x10(%rax),%eax
    ad68:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    ad6d:	75 09                	jne    ad78 <semcheck_decls+0x18c>
    ad6f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    ad76:	eb 07                	jmp    ad7f <semcheck_decls+0x193>
    ad78:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    ad7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad83:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ad87:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    ad8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ad8e:	89 ce                	mov    %ecx,%esi
    ad90:	48 89 c7             	mov    %rax,%rdi
    ad93:	e8 f7 0e 00 00       	call   bc8f <PushVarOntoScope>
    ad98:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ad9b:	eb 48                	jmp    ade5 <semcheck_decls+0x1f9>
    ad9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ada1:	8b 40 10             	mov    0x10(%rax),%eax
    ada4:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ada9:	74 0e                	je     adb9 <semcheck_decls+0x1cd>
    adab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adaf:	8b 40 10             	mov    0x10(%rax),%eax
    adb2:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    adb7:	75 09                	jne    adc2 <semcheck_decls+0x1d6>
    adb9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    adc0:	eb 07                	jmp    adc9 <semcheck_decls+0x1dd>
    adc2:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    adc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adcd:	48 8b 50 08          	mov    0x8(%rax),%rdx
    add1:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    add4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    add8:	89 ce                	mov    %ecx,%esi
    adda:	48 89 c7             	mov    %rax,%rdi
    addd:	e8 81 0f 00 00       	call   bd63 <PushArrayOntoScope>
    ade2:	89 45 d0             	mov    %eax,-0x30(%rbp)
    ade5:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    ade9:	7e 2f                	jle    ae1a <semcheck_decls+0x22e>
    adeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adef:	48 8b 48 08          	mov    0x8(%rax),%rcx
    adf3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adf7:	8b 10                	mov    (%rax),%edx
    adf9:	48 8b 05 60 72 01 00 	mov    0x17260(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ae00:	48 8d 35 71 fb 00 00 	lea    0xfb71(%rip),%rsi        # 1a978 <__PRETTY_FUNCTION__.0+0x108>
    ae07:	48 89 c7             	mov    %rax,%rdi
    ae0a:	b8 00 00 00 00       	mov    $0x0,%eax
    ae0f:	e8 5c 76 ff ff       	call   2470 <fprintf@plt>
    ae14:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ae17:	01 45 cc             	add    %eax,-0x34(%rbp)
    ae1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae1e:	48 8b 40 10          	mov    0x10(%rax),%rax
    ae22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ae26:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    ae2b:	0f 85 70 fe ff ff    	jne    aca1 <semcheck_decls+0xb5>
    ae31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ae35:	48 8b 40 10          	mov    0x10(%rax),%rax
    ae39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ae3d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ae42:	0f 85 0a fe ff ff    	jne    ac52 <semcheck_decls+0x66>
    ae48:	8b 45 cc             	mov    -0x34(%rbp),%eax
    ae4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae4f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ae56:	00 00
    ae58:	74 05                	je     ae5f <semcheck_decls+0x273>
    ae5a:	e8 41 75 ff ff       	call   23a0 <__stack_chk_fail@plt>
    ae5f:	c9                   	leave
    ae60:	c3                   	ret

000000000000ae61 <semcheck_subprogram>:
    ae61:	f3 0f 1e fa          	endbr64
    ae65:	55                   	push   %rbp
    ae66:	48 89 e5             	mov    %rsp,%rbp
    ae69:	48 83 ec 50          	sub    $0x50,%rsp
    ae6d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ae71:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    ae75:	89 55 bc             	mov    %edx,-0x44(%rbp)
    ae78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ae7f:	00 00
    ae81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ae85:	31 c0                	xor    %eax,%eax
    ae87:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ae8c:	75 28                	jne    aeb6 <semcheck_subprogram+0x55>
    ae8e:	48 8d 05 5b fd 00 00 	lea    0xfd5b(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    ae95:	48 89 c1             	mov    %rax,%rcx
    ae98:	ba 26 01 00 00       	mov    $0x126,%edx
    ae9d:	48 8d 05 64 fa 00 00 	lea    0xfa64(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    aea4:	48 89 c6             	mov    %rax,%rsi
    aea7:	48 8d 05 81 fa 00 00 	lea    0xfa81(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    aeae:	48 89 c7             	mov    %rax,%rdi
    aeb1:	e8 1a 75 ff ff       	call   23d0 <__assert_fail@plt>
    aeb6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    aebb:	75 28                	jne    aee5 <semcheck_subprogram+0x84>
    aebd:	48 8d 05 2c fd 00 00 	lea    0xfd2c(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    aec4:	48 89 c1             	mov    %rax,%rcx
    aec7:	ba 27 01 00 00       	mov    $0x127,%edx
    aecc:	48 8d 05 35 fa 00 00 	lea    0xfa35(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    aed3:	48 89 c6             	mov    %rax,%rsi
    aed6:	48 8d 05 61 fb 00 00 	lea    0xfb61(%rip),%rax        # 1aa3e <__PRETTY_FUNCTION__.0+0x1ce>
    aedd:	48 89 c7             	mov    %rax,%rdi
    aee0:	e8 eb 74 ff ff       	call   23d0 <__assert_fail@plt>
    aee5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aee9:	8b 40 04             	mov    0x4(%rax),%eax
    aeec:	83 f8 01             	cmp    $0x1,%eax
    aeef:	74 28                	je     af19 <semcheck_subprogram+0xb8>
    aef1:	48 8d 05 f8 fc 00 00 	lea    0xfcf8(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    aef8:	48 89 c1             	mov    %rax,%rcx
    aefb:	ba 28 01 00 00       	mov    $0x128,%edx
    af00:	48 8d 05 01 fa 00 00 	lea    0xfa01(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    af07:	48 89 c6             	mov    %rax,%rsi
    af0a:	48 8d 05 47 fb 00 00 	lea    0xfb47(%rip),%rax        # 1aa58 <__PRETTY_FUNCTION__.0+0x1e8>
    af11:	48 89 c7             	mov    %rax,%rdi
    af14:	e8 b7 74 ff ff       	call   23d0 <__assert_fail@plt>
    af19:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af1d:	8b 40 08             	mov    0x8(%rax),%eax
    af20:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    af23:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
    af27:	74 2e                	je     af57 <semcheck_subprogram+0xf6>
    af29:	83 7d e4 06          	cmpl   $0x6,-0x1c(%rbp)
    af2d:	74 28                	je     af57 <semcheck_subprogram+0xf6>
    af2f:	48 8d 05 ba fc 00 00 	lea    0xfcba(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    af36:	48 89 c1             	mov    %rax,%rcx
    af39:	ba 2d 01 00 00       	mov    $0x12d,%edx
    af3e:	48 8d 05 c3 f9 00 00 	lea    0xf9c3(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    af45:	48 89 c6             	mov    %rax,%rsi
    af48:	48 8d 05 31 fb 00 00 	lea    0xfb31(%rip),%rax        # 1aa80 <__PRETTY_FUNCTION__.0+0x210>
    af4f:	48 89 c7             	mov    %rax,%rdi
    af52:	e8 79 74 ff ff       	call   23d0 <__assert_fail@plt>
    af57:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    af5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af62:	48 8b 40 10          	mov    0x10(%rax),%rax
    af66:	48 89 c7             	mov    %rax,%rdi
    af69:	e8 2f f7 ff ff       	call   a69d <semcheck_id_not_main>
    af6e:	01 45 d4             	add    %eax,-0x2c(%rbp)
    af71:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af75:	8b 40 38             	mov    0x38(%rax),%eax
    af78:	85 c0                	test   %eax,%eax
    af7a:	74 1d                	je     af99 <semcheck_subprogram+0x138>
    af7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af80:	48 8b 40 10          	mov    0x10(%rax),%rax
    af84:	48 89 c7             	mov    %rax,%rdi
    af87:	e8 d4 75 ff ff       	call   2560 <strdup@plt>
    af8c:	48 89 c2             	mov    %rax,%rdx
    af8f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af93:	48 89 50 18          	mov    %rdx,0x18(%rax)
    af97:	eb 27                	jmp    afc0 <semcheck_subprogram+0x15f>
    af99:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    af9d:	48 8b 48 20          	mov    0x20(%rax),%rcx
    afa1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afa5:	48 8b 40 10          	mov    0x10(%rax),%rax
    afa9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    afad:	48 89 ce             	mov    %rcx,%rsi
    afb0:	48 89 c7             	mov    %rax,%rdi
    afb3:	e8 32 1a 00 00       	call   c9ea <MangleFunctionName>
    afb8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    afbc:	48 89 42 18          	mov    %rax,0x18(%rdx)
    afc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afc4:	48 8b 40 10          	mov    0x10(%rax),%rax
    afc8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    afcc:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
    afd0:	75 5d                	jne    b02f <semcheck_subprogram+0x1ce>
    afd2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afd6:	48 8b 48 20          	mov    0x20(%rax),%rcx
    afda:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    afde:	48 8b 50 18          	mov    0x18(%rax),%rdx
    afe2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    afe6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    afea:	48 89 c7             	mov    %rax,%rdi
    afed:	e8 45 0e 00 00       	call   be37 <PushProcedureOntoScope>
    aff2:	89 45 d8             	mov    %eax,-0x28(%rbp)
    aff5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aff9:	48 89 c7             	mov    %rax,%rdi
    affc:	e8 eb 0b 00 00       	call   bbec <PushScope>
    b001:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b005:	48 8b 48 20          	mov    0x20(%rax),%rcx
    b009:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b00d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b011:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b015:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b019:	48 89 c7             	mov    %rax,%rdi
    b01c:	e8 16 0e 00 00       	call   be37 <PushProcedureOntoScope>
    b021:	8b 45 bc             	mov    -0x44(%rbp),%eax
    b024:	83 c0 01             	add    $0x1,%eax
    b027:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b02a:	e9 f6 00 00 00       	jmp    b125 <semcheck_subprogram+0x2c4>
    b02f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b033:	48 8b 40 30          	mov    0x30(%rax),%rax
    b037:	48 85 c0             	test   %rax,%rax
    b03a:	74 62                	je     b09e <semcheck_subprogram+0x23d>
    b03c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b040:	48 8b 50 30          	mov    0x30(%rax),%rdx
    b044:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    b048:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b04c:	48 89 ce             	mov    %rcx,%rsi
    b04f:	48 89 c7             	mov    %rax,%rdi
    b052:	e8 6c 10 00 00       	call   c0c3 <FindIdent>
    b057:	83 f8 ff             	cmp    $0xffffffff,%eax
    b05a:	75 36                	jne    b092 <semcheck_subprogram+0x231>
    b05c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b060:	48 8b 48 30          	mov    0x30(%rax),%rcx
    b064:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b068:	8b 10                	mov    (%rax),%edx
    b06a:	48 8b 05 ef 6f 01 00 	mov    0x16fef(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    b071:	48 8d 35 a0 f9 00 00 	lea    0xf9a0(%rip),%rsi        # 1aa18 <__PRETTY_FUNCTION__.0+0x1a8>
    b078:	48 89 c7             	mov    %rax,%rdi
    b07b:	b8 00 00 00 00       	mov    $0x0,%eax
    b080:	e8 eb 73 ff ff       	call   2470 <fprintf@plt>
    b085:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    b089:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%rbp)
    b090:	eb 38                	jmp    b0ca <semcheck_subprogram+0x269>
    b092:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b096:	8b 40 14             	mov    0x14(%rax),%eax
    b099:	89 45 e0             	mov    %eax,-0x20(%rbp)
    b09c:	eb 2c                	jmp    b0ca <semcheck_subprogram+0x269>
    b09e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0a2:	8b 40 28             	mov    0x28(%rax),%eax
    b0a5:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    b0aa:	74 0e                	je     b0ba <semcheck_subprogram+0x259>
    b0ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0b0:	8b 40 28             	mov    0x28(%rax),%eax
    b0b3:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    b0b8:	75 09                	jne    b0c3 <semcheck_subprogram+0x262>
    b0ba:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    b0c1:	eb 07                	jmp    b0ca <semcheck_subprogram+0x269>
    b0c3:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%rbp)
    b0ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0ce:	48 8b 78 20          	mov    0x20(%rax),%rdi
    b0d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b0d6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b0da:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    b0dd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b0e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b0e5:	49 89 f8             	mov    %rdi,%r8
    b0e8:	48 89 c7             	mov    %rax,%rdi
    b0eb:	e8 20 0e 00 00       	call   bf10 <PushFunctionOntoScope>
    b0f0:	89 45 d8             	mov    %eax,-0x28(%rbp)
    b0f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b0f7:	48 89 c7             	mov    %rax,%rdi
    b0fa:	e8 ed 0a 00 00       	call   bbec <PushScope>
    b0ff:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b103:	48 8b 48 20          	mov    0x20(%rax),%rcx
    b107:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b10b:	48 8b 70 10          	mov    0x10(%rax),%rsi
    b10f:	8b 55 e0             	mov    -0x20(%rbp),%edx
    b112:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b116:	48 89 c7             	mov    %rax,%rdi
    b119:	e8 cc 0e 00 00       	call   bfea <PushFuncRetOntoScope>
    b11e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    b125:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    b129:	7e 2f                	jle    b15a <semcheck_subprogram+0x2f9>
    b12b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b12f:	48 8b 48 10          	mov    0x10(%rax),%rcx
    b133:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b137:	8b 10                	mov    (%rax),%edx
    b139:	48 8b 05 20 6f 01 00 	mov    0x16f20(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    b140:	48 8d 35 81 f9 00 00 	lea    0xf981(%rip),%rsi        # 1aac8 <__PRETTY_FUNCTION__.0+0x258>
    b147:	48 89 c7             	mov    %rax,%rdi
    b14a:	b8 00 00 00 00       	mov    $0x0,%eax
    b14f:	e8 1c 73 ff ff       	call   2470 <fprintf@plt>
    b154:	8b 45 d8             	mov    -0x28(%rbp),%eax
    b157:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b15a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b15e:	48 8b 50 20          	mov    0x20(%rax),%rdx
    b162:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b166:	48 89 d6             	mov    %rdx,%rsi
    b169:	48 89 c7             	mov    %rax,%rdi
    b16c:	e8 7b fa ff ff       	call   abec <semcheck_decls>
    b171:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b174:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b178:	48 8b 50 40          	mov    0x40(%rax),%rdx
    b17c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b180:	48 89 d6             	mov    %rdx,%rsi
    b183:	48 89 c7             	mov    %rax,%rdi
    b186:	e8 61 fa ff ff       	call   abec <semcheck_decls>
    b18b:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b18e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b192:	48 8b 48 48          	mov    0x48(%rax),%rcx
    b196:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b199:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b19d:	48 89 ce             	mov    %rcx,%rsi
    b1a0:	48 89 c7             	mov    %rax,%rdi
    b1a3:	e8 19 01 00 00       	call   b2c1 <semcheck_subprograms>
    b1a8:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b1ab:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
    b1af:	75 22                	jne    b1d3 <semcheck_subprogram+0x372>
    b1b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1b5:	48 8b 48 50          	mov    0x50(%rax),%rcx
    b1b9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b1bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b1c0:	48 89 ce             	mov    %rcx,%rsi
    b1c3:	48 89 c7             	mov    %rax,%rdi
    b1c6:	e8 ac 19 00 00       	call   cb77 <semcheck_stmt>
    b1cb:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b1ce:	e9 a2 00 00 00       	jmp    b275 <semcheck_subprogram+0x414>
    b1d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1d7:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b1db:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    b1df:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b1e3:	48 89 ce             	mov    %rcx,%rsi
    b1e6:	48 89 c7             	mov    %rax,%rdi
    b1e9:	e8 d5 0e 00 00       	call   c0c3 <FindIdent>
    b1ee:	85 c0                	test   %eax,%eax
    b1f0:	74 28                	je     b21a <semcheck_subprogram+0x3b9>
    b1f2:	48 8d 05 f7 f9 00 00 	lea    0xf9f7(%rip),%rax        # 1abf0 <__PRETTY_FUNCTION__.1>
    b1f9:	48 89 c1             	mov    %rax,%rcx
    b1fc:	ba 90 01 00 00       	mov    $0x190,%edx
    b201:	48 8d 05 00 f7 00 00 	lea    0xf700(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    b208:	48 89 c6             	mov    %rax,%rsi
    b20b:	48 8d 05 de f8 00 00 	lea    0xf8de(%rip),%rax        # 1aaf0 <__PRETTY_FUNCTION__.0+0x280>
    b212:	48 89 c7             	mov    %rax,%rdi
    b215:	e8 b6 71 ff ff       	call   23d0 <__assert_fail@plt>
    b21a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b21e:	48 89 c7             	mov    %rax,%rdi
    b221:	e8 07 05 00 00       	call   b72d <ResetHashNodeStatus>
    b226:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b22a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    b22e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b232:	48 89 d6             	mov    %rdx,%rsi
    b235:	48 89 c7             	mov    %rax,%rdi
    b238:	e8 69 19 00 00       	call   cba6 <semcheck_func_stmt>
    b23d:	01 45 d4             	add    %eax,-0x2c(%rbp)
    b240:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b244:	8b 40 24             	mov    0x24(%rax),%eax
    b247:	85 c0                	test   %eax,%eax
    b249:	75 2a                	jne    b275 <semcheck_subprogram+0x414>
    b24b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b24f:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b253:	48 8b 05 06 6e 01 00 	mov    0x16e06(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    b25a:	48 8d 0d df f8 00 00 	lea    0xf8df(%rip),%rcx        # 1ab40 <__PRETTY_FUNCTION__.0+0x2d0>
    b261:	48 89 ce             	mov    %rcx,%rsi
    b264:	48 89 c7             	mov    %rax,%rdi
    b267:	b8 00 00 00 00       	mov    $0x0,%eax
    b26c:	e8 ff 71 ff ff       	call   2470 <fprintf@plt>
    b271:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    b275:	b8 00 00 00 00       	mov    $0x0,%eax
    b27a:	e8 13 ce ff ff       	call   8092 <optimize_flag>
    b27f:	85 c0                	test   %eax,%eax
    b281:	7e 19                	jle    b29c <semcheck_subprogram+0x43b>
    b283:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    b287:	75 13                	jne    b29c <semcheck_subprogram+0x43b>
    b289:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b28d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b291:	48 89 d6             	mov    %rdx,%rsi
    b294:	48 89 c7             	mov    %rax,%rdi
    b297:	e8 c0 a5 00 00       	call   1585c <optimize>
    b29c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b2a0:	48 89 c7             	mov    %rax,%rdi
    b2a3:	e8 9c 10 00 00       	call   c344 <PopScope>
    b2a8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    b2ab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b2af:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b2b6:	00 00
    b2b8:	74 05                	je     b2bf <semcheck_subprogram+0x45e>
    b2ba:	e8 e1 70 ff ff       	call   23a0 <__stack_chk_fail@plt>
    b2bf:	c9                   	leave
    b2c0:	c3                   	ret

000000000000b2c1 <semcheck_subprograms>:
    b2c1:	f3 0f 1e fa          	endbr64
    b2c5:	55                   	push   %rbp
    b2c6:	48 89 e5             	mov    %rsp,%rbp
    b2c9:	48 83 ec 30          	sub    $0x30,%rsp
    b2cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b2d5:	89 55 dc             	mov    %edx,-0x24(%rbp)
    b2d8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b2dd:	75 28                	jne    b307 <semcheck_subprograms+0x46>
    b2df:	48 8d 05 2a f9 00 00 	lea    0xf92a(%rip),%rax        # 1ac10 <__PRETTY_FUNCTION__.0>
    b2e6:	48 89 c1             	mov    %rax,%rcx
    b2e9:	ba af 01 00 00       	mov    $0x1af,%edx
    b2ee:	48 8d 05 13 f6 00 00 	lea    0xf613(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    b2f5:	48 89 c6             	mov    %rax,%rsi
    b2f8:	48 8d 05 30 f6 00 00 	lea    0xf630(%rip),%rax        # 1a92f <__PRETTY_FUNCTION__.0+0xbf>
    b2ff:	48 89 c7             	mov    %rax,%rdi
    b302:	e8 c9 70 ff ff       	call   23d0 <__assert_fail@plt>
    b307:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    b30e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b312:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b316:	eb 5b                	jmp    b373 <semcheck_subprograms+0xb2>
    b318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b31c:	8b 00                	mov    (%rax),%eax
    b31e:	85 c0                	test   %eax,%eax
    b320:	74 28                	je     b34a <semcheck_subprograms+0x89>
    b322:	48 8d 05 e7 f8 00 00 	lea    0xf8e7(%rip),%rax        # 1ac10 <__PRETTY_FUNCTION__.0>
    b329:	48 89 c1             	mov    %rax,%rcx
    b32c:	ba b5 01 00 00       	mov    $0x1b5,%edx
    b331:	48 8d 05 d0 f5 00 00 	lea    0xf5d0(%rip),%rax        # 1a908 <__PRETTY_FUNCTION__.0+0x98>
    b338:	48 89 c6             	mov    %rax,%rsi
    b33b:	48 8d 05 fc f5 00 00 	lea    0xf5fc(%rip),%rax        # 1a93e <__PRETTY_FUNCTION__.0+0xce>
    b342:	48 89 c7             	mov    %rax,%rdi
    b345:	e8 86 70 ff ff       	call   23d0 <__assert_fail@plt>
    b34a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b34e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b352:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b359:	48 89 ce             	mov    %rcx,%rsi
    b35c:	48 89 c7             	mov    %rax,%rdi
    b35f:	e8 fd fa ff ff       	call   ae61 <semcheck_subprogram>
    b364:	01 45 f4             	add    %eax,-0xc(%rbp)
    b367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b36b:	48 8b 40 10          	mov    0x10(%rax),%rax
    b36f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b373:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b378:	75 9e                	jne    b318 <semcheck_subprograms+0x57>
    b37a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    b37d:	c9                   	leave
    b37e:	c3                   	ret

000000000000b37f <InitHashTable>:
    b37f:	f3 0f 1e fa          	endbr64
    b383:	55                   	push   %rbp
    b384:	48 89 e5             	mov    %rsp,%rbp
    b387:	48 83 ec 10          	sub    $0x10,%rsp
    b38b:	bf 98 06 00 00       	mov    $0x698,%edi
    b390:	e8 3b 71 ff ff       	call   24d0 <malloc@plt>
    b395:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b399:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    b3a0:	eb 16                	jmp    b3b8 <InitHashTable+0x39>
    b3a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a6:	8b 55 f4             	mov    -0xc(%rbp),%edx
    b3a9:	48 63 d2             	movslq %edx,%rdx
    b3ac:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
    b3b3:	00
    b3b4:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    b3b8:	81 7d f4 d2 00 00 00 	cmpl   $0xd2,-0xc(%rbp)
    b3bf:	7e e1                	jle    b3a2 <InitHashTable+0x23>
    b3c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3c5:	c9                   	leave
    b3c6:	c3                   	ret

000000000000b3c7 <AddIdentToTable>:
    b3c7:	f3 0f 1e fa          	endbr64
    b3cb:	55                   	push   %rbp
    b3cc:	48 89 e5             	mov    %rsp,%rbp
    b3cf:	48 83 ec 60          	sub    $0x60,%rsp
    b3d3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b3d7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    b3db:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    b3df:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    b3e2:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    b3e6:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    b3ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b3ee:	48 89 c7             	mov    %rax,%rdi
    b3f1:	e8 f0 05 00 00       	call   b9e6 <hashpjw>
    b3f6:	89 45 dc             	mov    %eax,-0x24(%rbp)
    b3f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b3fd:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b400:	48 63 d2             	movslq %edx,%rdx
    b403:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b407:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b40b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b410:	0f 85 8f 00 00 00    	jne    b4a5 <AddIdentToTable+0xde>
    b416:	bf 28 00 00 00       	mov    $0x28,%edi
    b41b:	e8 b0 70 ff ff       	call   24d0 <malloc@plt>
    b420:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b428:	8b 55 b0             	mov    -0x50(%rbp),%edx
    b42b:	89 50 10             	mov    %edx,0x10(%rax)
    b42e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b432:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    b435:	89 50 14             	mov    %edx,0x14(%rax)
    b438:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b43c:	48 89 c7             	mov    %rax,%rdi
    b43f:	e8 1c 71 ff ff       	call   2560 <strdup@plt>
    b444:	48 89 c2             	mov    %rax,%rdx
    b447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44b:	48 89 10             	mov    %rdx,(%rax)
    b44e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b452:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b456:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b45e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b462:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b46a:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    b471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b475:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    b47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b480:	be 04 00 00 00       	mov    $0x4,%esi
    b485:	48 89 c7             	mov    %rax,%rdi
    b488:	e8 6e cd ff ff       	call   81fb <CreateListNode>
    b48d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b491:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b494:	48 63 c9             	movslq %ecx,%rcx
    b497:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    b49b:	b8 00 00 00 00       	mov    $0x0,%eax
    b4a0:	e9 3e 01 00 00       	jmp    b5e3 <AddIdentToTable+0x21c>
    b4a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b4a9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b4ad:	e9 8a 00 00 00       	jmp    b53c <AddIdentToTable+0x175>
    b4b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4b6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b4ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b4be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4c2:	48 8b 00             	mov    (%rax),%rax
    b4c5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b4c9:	48 89 d6             	mov    %rdx,%rsi
    b4cc:	48 89 c7             	mov    %rax,%rdi
    b4cf:	e8 7c 6f ff ff       	call   2450 <strcmp@plt>
    b4d4:	85 c0                	test   %eax,%eax
    b4d6:	75 58                	jne    b530 <AddIdentToTable+0x169>
    b4d8:	83 7d b0 02          	cmpl   $0x2,-0x50(%rbp)
    b4dc:	74 06                	je     b4e4 <AddIdentToTable+0x11d>
    b4de:	83 7d b0 03          	cmpl   $0x3,-0x50(%rbp)
    b4e2:	75 07                	jne    b4eb <AddIdentToTable+0x124>
    b4e4:	b8 01 00 00 00       	mov    $0x1,%eax
    b4e9:	eb 05                	jmp    b4f0 <AddIdentToTable+0x129>
    b4eb:	b8 00 00 00 00       	mov    $0x0,%eax
    b4f0:	89 45 e0             	mov    %eax,-0x20(%rbp)
    b4f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f7:	8b 40 10             	mov    0x10(%rax),%eax
    b4fa:	83 f8 02             	cmp    $0x2,%eax
    b4fd:	74 0c                	je     b50b <AddIdentToTable+0x144>
    b4ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b503:	8b 40 10             	mov    0x10(%rax),%eax
    b506:	83 f8 03             	cmp    $0x3,%eax
    b509:	75 07                	jne    b512 <AddIdentToTable+0x14b>
    b50b:	b8 01 00 00 00       	mov    $0x1,%eax
    b510:	eb 05                	jmp    b517 <AddIdentToTable+0x150>
    b512:	b8 00 00 00 00       	mov    $0x0,%eax
    b517:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    b51a:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    b51e:	74 06                	je     b526 <AddIdentToTable+0x15f>
    b520:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    b524:	75 0a                	jne    b530 <AddIdentToTable+0x169>
    b526:	b8 01 00 00 00       	mov    $0x1,%eax
    b52b:	e9 b3 00 00 00       	jmp    b5e3 <AddIdentToTable+0x21c>
    b530:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b534:	48 8b 40 10          	mov    0x10(%rax),%rax
    b538:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b53c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b541:	0f 85 6b ff ff ff    	jne    b4b2 <AddIdentToTable+0xeb>
    b547:	bf 28 00 00 00       	mov    $0x28,%edi
    b54c:	e8 7f 6f ff ff       	call   24d0 <malloc@plt>
    b551:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b559:	8b 55 b0             	mov    -0x50(%rbp),%edx
    b55c:	89 50 10             	mov    %edx,0x10(%rax)
    b55f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b563:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    b566:	89 50 14             	mov    %edx,0x14(%rax)
    b569:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b56d:	48 89 c7             	mov    %rax,%rdi
    b570:	e8 eb 6f ff ff       	call   2560 <strdup@plt>
    b575:	48 89 c2             	mov    %rax,%rdx
    b578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b57c:	48 89 10             	mov    %rdx,(%rax)
    b57f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b583:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b587:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b58b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b58f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b593:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b59b:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    b5a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a6:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    b5ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b1:	be 04 00 00 00       	mov    $0x4,%esi
    b5b6:	48 89 c7             	mov    %rax,%rdi
    b5b9:	e8 3d cc ff ff       	call   81fb <CreateListNode>
    b5be:	48 89 c2             	mov    %rax,%rdx
    b5c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5c5:	48 89 d6             	mov    %rdx,%rsi
    b5c8:	48 89 c7             	mov    %rax,%rdi
    b5cb:	e8 73 cc ff ff       	call   8243 <PushListNodeFront>
    b5d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b5d4:	8b 4d dc             	mov    -0x24(%rbp),%ecx
    b5d7:	48 63 c9             	movslq %ecx,%rcx
    b5da:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    b5de:	b8 00 00 00 00       	mov    $0x0,%eax
    b5e3:	c9                   	leave
    b5e4:	c3                   	ret

000000000000b5e5 <FindIdentInTable>:
    b5e5:	f3 0f 1e fa          	endbr64
    b5e9:	55                   	push   %rbp
    b5ea:	48 89 e5             	mov    %rsp,%rbp
    b5ed:	48 83 ec 30          	sub    $0x30,%rsp
    b5f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b5f5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b5f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b5fd:	48 89 c7             	mov    %rax,%rdi
    b600:	e8 e1 03 00 00       	call   b9e6 <hashpjw>
    b605:	89 45 ec             	mov    %eax,-0x14(%rbp)
    b608:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b60c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    b60f:	48 63 d2             	movslq %edx,%rdx
    b612:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b616:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b61a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b61f:	75 3f                	jne    b660 <FindIdentInTable+0x7b>
    b621:	b8 00 00 00 00       	mov    $0x0,%eax
    b626:	eb 44                	jmp    b66c <FindIdentInTable+0x87>
    b628:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b62c:	48 8b 40 08          	mov    0x8(%rax),%rax
    b630:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b638:	48 8b 00             	mov    (%rax),%rax
    b63b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b63f:	48 89 d6             	mov    %rdx,%rsi
    b642:	48 89 c7             	mov    %rax,%rdi
    b645:	e8 06 6e ff ff       	call   2450 <strcmp@plt>
    b64a:	85 c0                	test   %eax,%eax
    b64c:	75 06                	jne    b654 <FindIdentInTable+0x6f>
    b64e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b652:	eb 18                	jmp    b66c <FindIdentInTable+0x87>
    b654:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b658:	48 8b 40 10          	mov    0x10(%rax),%rax
    b65c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b660:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b665:	75 c1                	jne    b628 <FindIdentInTable+0x43>
    b667:	b8 00 00 00 00       	mov    $0x0,%eax
    b66c:	c9                   	leave
    b66d:	c3                   	ret

000000000000b66e <FindAllIdentsInTable>:
    b66e:	f3 0f 1e fa          	endbr64
    b672:	55                   	push   %rbp
    b673:	48 89 e5             	mov    %rsp,%rbp
    b676:	48 83 ec 30          	sub    $0x30,%rsp
    b67a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b67e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b682:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    b689:	00
    b68a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b68e:	48 89 c7             	mov    %rax,%rdi
    b691:	e8 50 03 00 00       	call   b9e6 <hashpjw>
    b696:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    b699:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b69d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b6a0:	48 63 d2             	movslq %edx,%rdx
    b6a3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b6a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b6ab:	eb 73                	jmp    b720 <FindAllIdentsInTable+0xb2>
    b6ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6b1:	48 8b 40 08          	mov    0x8(%rax),%rax
    b6b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b6b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6bd:	48 8b 00             	mov    (%rax),%rax
    b6c0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b6c4:	48 89 d6             	mov    %rdx,%rsi
    b6c7:	48 89 c7             	mov    %rax,%rdi
    b6ca:	e8 81 6d ff ff       	call   2450 <strcmp@plt>
    b6cf:	85 c0                	test   %eax,%eax
    b6d1:	75 41                	jne    b714 <FindAllIdentsInTable+0xa6>
    b6d3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b6d8:	75 17                	jne    b6f1 <FindAllIdentsInTable+0x83>
    b6da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6de:	be 04 00 00 00       	mov    $0x4,%esi
    b6e3:	48 89 c7             	mov    %rax,%rdi
    b6e6:	e8 10 cb ff ff       	call   81fb <CreateListNode>
    b6eb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b6ef:	eb 23                	jmp    b714 <FindAllIdentsInTable+0xa6>
    b6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f5:	be 04 00 00 00       	mov    $0x4,%esi
    b6fa:	48 89 c7             	mov    %rax,%rdi
    b6fd:	e8 f9 ca ff ff       	call   81fb <CreateListNode>
    b702:	48 89 c2             	mov    %rax,%rdx
    b705:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b709:	48 89 d6             	mov    %rdx,%rsi
    b70c:	48 89 c7             	mov    %rax,%rdi
    b70f:	e8 b3 cb ff ff       	call   82c7 <PushListNodeBack>
    b714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b718:	48 8b 40 10          	mov    0x10(%rax),%rax
    b71c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b720:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b725:	75 86                	jne    b6ad <FindAllIdentsInTable+0x3f>
    b727:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b72b:	c9                   	leave
    b72c:	c3                   	ret

000000000000b72d <ResetHashNodeStatus>:
    b72d:	f3 0f 1e fa          	endbr64
    b731:	55                   	push   %rbp
    b732:	48 89 e5             	mov    %rsp,%rbp
    b735:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b73d:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    b744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b748:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    b74f:	90                   	nop
    b750:	5d                   	pop    %rbp
    b751:	c3                   	ret

000000000000b752 <DestroyHashTable>:
    b752:	f3 0f 1e fa          	endbr64
    b756:	55                   	push   %rbp
    b757:	48 89 e5             	mov    %rsp,%rbp
    b75a:	48 83 ec 30          	sub    $0x30,%rsp
    b75e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b762:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    b769:	eb 73                	jmp    b7de <DestroyHashTable+0x8c>
    b76b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b76f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b772:	48 63 d2             	movslq %edx,%rdx
    b775:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b779:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b77d:	eb 54                	jmp    b7d3 <DestroyHashTable+0x81>
    b77f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b783:	48 8b 40 08          	mov    0x8(%rax),%rax
    b787:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b78b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b78f:	8b 40 10             	mov    0x10(%rax),%eax
    b792:	83 f8 05             	cmp    $0x5,%eax
    b795:	75 0c                	jne    b7a3 <DestroyHashTable+0x51>
    b797:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b79b:	48 89 c7             	mov    %rax,%rdi
    b79e:	e8 53 00 00 00       	call   b7f6 <DestroyBuiltin>
    b7a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7a7:	48 8b 40 08          	mov    0x8(%rax),%rax
    b7ab:	48 89 c7             	mov    %rax,%rdi
    b7ae:	e8 3d 6b ff ff       	call   22f0 <free@plt>
    b7b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7b7:	48 8b 40 10          	mov    0x10(%rax),%rax
    b7bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b7bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7c3:	48 89 c7             	mov    %rax,%rdi
    b7c6:	e8 25 6b ff ff       	call   22f0 <free@plt>
    b7cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b7d3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b7d8:	75 a5                	jne    b77f <DestroyHashTable+0x2d>
    b7da:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    b7de:	81 7d e4 d2 00 00 00 	cmpl   $0xd2,-0x1c(%rbp)
    b7e5:	7e 84                	jle    b76b <DestroyHashTable+0x19>
    b7e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b7eb:	48 89 c7             	mov    %rax,%rdi
    b7ee:	e8 fd 6a ff ff       	call   22f0 <free@plt>
    b7f3:	90                   	nop
    b7f4:	c9                   	leave
    b7f5:	c3                   	ret

000000000000b7f6 <DestroyBuiltin>:
    b7f6:	f3 0f 1e fa          	endbr64
    b7fa:	55                   	push   %rbp
    b7fb:	48 89 e5             	mov    %rsp,%rbp
    b7fe:	48 83 ec 10          	sub    $0x10,%rsp
    b802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b806:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b80b:	75 28                	jne    b835 <DestroyBuiltin+0x3f>
    b80d:	48 8d 05 c4 f4 00 00 	lea    0xf4c4(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.0>
    b814:	48 89 c1             	mov    %rax,%rcx
    b817:	ba b5 00 00 00       	mov    $0xb5,%edx
    b81c:	48 8d 05 05 f4 00 00 	lea    0xf405(%rip),%rax        # 1ac28 <__PRETTY_FUNCTION__.0+0x18>
    b823:	48 89 c6             	mov    %rax,%rsi
    b826:	48 8d 05 2d f4 00 00 	lea    0xf42d(%rip),%rax        # 1ac5a <__PRETTY_FUNCTION__.0+0x4a>
    b82d:	48 89 c7             	mov    %rax,%rdi
    b830:	e8 9b 6b ff ff       	call   23d0 <__assert_fail@plt>
    b835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b839:	8b 40 10             	mov    0x10(%rax),%eax
    b83c:	83 f8 05             	cmp    $0x5,%eax
    b83f:	74 28                	je     b869 <DestroyBuiltin+0x73>
    b841:	48 8d 05 90 f4 00 00 	lea    0xf490(%rip),%rax        # 1acd8 <__PRETTY_FUNCTION__.0>
    b848:	48 89 c1             	mov    %rax,%rcx
    b84b:	ba b6 00 00 00       	mov    $0xb6,%edx
    b850:	48 8d 05 d1 f3 00 00 	lea    0xf3d1(%rip),%rax        # 1ac28 <__PRETTY_FUNCTION__.0+0x18>
    b857:	48 89 c6             	mov    %rax,%rsi
    b85a:	48 8d 05 07 f4 00 00 	lea    0xf407(%rip),%rax        # 1ac68 <__PRETTY_FUNCTION__.0+0x58>
    b861:	48 89 c7             	mov    %rax,%rdi
    b864:	e8 67 6b ff ff       	call   23d0 <__assert_fail@plt>
    b869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b86d:	48 8b 00             	mov    (%rax),%rax
    b870:	48 89 c7             	mov    %rax,%rdi
    b873:	e8 78 6a ff ff       	call   22f0 <free@plt>
    b878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b87c:	48 8b 40 18          	mov    0x18(%rax),%rax
    b880:	48 89 c7             	mov    %rax,%rdi
    b883:	e8 3b de ff ff       	call   96c3 <destroy_list>
    b888:	90                   	nop
    b889:	c9                   	leave
    b88a:	c3                   	ret

000000000000b88b <PrintHashTable>:
    b88b:	f3 0f 1e fa          	endbr64
    b88f:	55                   	push   %rbp
    b890:	48 89 e5             	mov    %rsp,%rbp
    b893:	48 83 ec 40          	sub    $0x40,%rsp
    b897:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b89b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b89f:	89 55 cc             	mov    %edx,-0x34(%rbp)
    b8a2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    b8a9:	e9 27 01 00 00       	jmp    b9d5 <PrintHashTable+0x14a>
    b8ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b8b2:	8b 55 e8             	mov    -0x18(%rbp),%edx
    b8b5:	48 63 d2             	movslq %edx,%rdx
    b8b8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    b8bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b8c0:	e9 01 01 00 00       	jmp    b9c6 <PrintHashTable+0x13b>
    b8c5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b8cc:	eb 24                	jmp    b8f2 <PrintHashTable+0x67>
    b8ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b8d2:	48 89 c1             	mov    %rax,%rcx
    b8d5:	ba 02 00 00 00       	mov    $0x2,%edx
    b8da:	be 01 00 00 00       	mov    $0x1,%esi
    b8df:	48 8d 05 b0 f3 00 00 	lea    0xf3b0(%rip),%rax        # 1ac96 <__PRETTY_FUNCTION__.0+0x86>
    b8e6:	48 89 c7             	mov    %rax,%rdi
    b8e9:	e8 62 6c ff ff       	call   2550 <fwrite@plt>
    b8ee:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b8f2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    b8f5:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    b8f8:	7c d4                	jl     b8ce <PrintHashTable+0x43>
    b8fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8fe:	48 8b 40 08          	mov    0x8(%rax),%rax
    b902:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b90a:	8b 70 14             	mov    0x14(%rax),%esi
    b90d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b911:	8b 48 10             	mov    0x10(%rax),%ecx
    b914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b918:	48 8b 10             	mov    (%rax),%rdx
    b91b:	8b 7d e8             	mov    -0x18(%rbp),%edi
    b91e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b922:	41 89 f9             	mov    %edi,%r9d
    b925:	41 89 f0             	mov    %esi,%r8d
    b928:	48 8d 35 71 f3 00 00 	lea    0xf371(%rip),%rsi        # 1aca0 <__PRETTY_FUNCTION__.0+0x90>
    b92f:	48 89 c7             	mov    %rax,%rdi
    b932:	b8 00 00 00 00       	mov    $0x0,%eax
    b937:	e8 34 6b ff ff       	call   2470 <fprintf@plt>
    b93c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b940:	48 8b 40 18          	mov    0x18(%rax),%rax
    b944:	48 85 c0             	test   %rax,%rax
    b947:	74 71                	je     b9ba <PrintHashTable+0x12f>
    b949:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    b950:	eb 24                	jmp    b976 <PrintHashTable+0xeb>
    b952:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b956:	48 89 c1             	mov    %rax,%rcx
    b959:	ba 02 00 00 00       	mov    $0x2,%edx
    b95e:	be 01 00 00 00       	mov    $0x1,%esi
    b963:	48 8d 05 2c f3 00 00 	lea    0xf32c(%rip),%rax        # 1ac96 <__PRETTY_FUNCTION__.0+0x86>
    b96a:	48 89 c7             	mov    %rax,%rdi
    b96d:	e8 de 6b ff ff       	call   2550 <fwrite@plt>
    b972:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    b976:	8b 45 cc             	mov    -0x34(%rbp),%eax
    b979:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    b97c:	7d d4                	jge    b952 <PrintHashTable+0xc7>
    b97e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b982:	48 89 c1             	mov    %rax,%rcx
    b985:	ba 08 00 00 00       	mov    $0x8,%edx
    b98a:	be 01 00 00 00       	mov    $0x1,%esi
    b98f:	48 8d 05 39 f3 00 00 	lea    0xf339(%rip),%rax        # 1accf <__PRETTY_FUNCTION__.0+0xbf>
    b996:	48 89 c7             	mov    %rax,%rdi
    b999:	e8 b2 6b ff ff       	call   2550 <fwrite@plt>
    b99e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9a2:	48 8b 40 18          	mov    0x18(%rax),%rax
    b9a6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b9aa:	ba 00 00 00 00       	mov    $0x0,%edx
    b9af:	48 89 ce             	mov    %rcx,%rsi
    b9b2:	48 89 c7             	mov    %rax,%rdi
    b9b5:	e8 16 cb ff ff       	call   84d0 <PrintList>
    b9ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9be:	48 8b 40 10          	mov    0x10(%rax),%rax
    b9c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b9c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b9cb:	0f 85 f4 fe ff ff    	jne    b8c5 <PrintHashTable+0x3a>
    b9d1:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    b9d5:	81 7d e8 d2 00 00 00 	cmpl   $0xd2,-0x18(%rbp)
    b9dc:	0f 8e cc fe ff ff    	jle    b8ae <PrintHashTable+0x23>
    b9e2:	90                   	nop
    b9e3:	90                   	nop
    b9e4:	c9                   	leave
    b9e5:	c3                   	ret

000000000000b9e6 <hashpjw>:
    b9e6:	f3 0f 1e fa          	endbr64
    b9ea:	55                   	push   %rbp
    b9eb:	48 89 e5             	mov    %rsp,%rbp
    b9ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b9f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    b9f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b9fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ba01:	eb 3c                	jmp    ba3f <hashpjw+0x59>
    ba03:	8b 45 f0             	mov    -0x10(%rbp),%eax
    ba06:	c1 e0 04             	shl    $0x4,%eax
    ba09:	89 c2                	mov    %eax,%edx
    ba0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba0f:	0f b6 00             	movzbl (%rax),%eax
    ba12:	0f be c0             	movsbl %al,%eax
    ba15:	01 d0                	add    %edx,%eax
    ba17:	89 45 f0             	mov    %eax,-0x10(%rbp)
    ba1a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    ba1d:	25 00 00 00 f0       	and    $0xf0000000,%eax
    ba22:	89 45 f4             	mov    %eax,-0xc(%rbp)
    ba25:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    ba29:	74 0f                	je     ba3a <hashpjw+0x54>
    ba2b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    ba2e:	c1 e8 18             	shr    $0x18,%eax
    ba31:	31 45 f0             	xor    %eax,-0x10(%rbp)
    ba34:	8b 45 f4             	mov    -0xc(%rbp),%eax
    ba37:	31 45 f0             	xor    %eax,-0x10(%rbp)
    ba3a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    ba3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba43:	0f b6 00             	movzbl (%rax),%eax
    ba46:	84 c0                	test   %al,%al
    ba48:	75 b9                	jne    ba03 <hashpjw+0x1d>
    ba4a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
    ba4d:	89 ca                	mov    %ecx,%edx
    ba4f:	b8 9f 6f 4c 9b       	mov    $0x9b4c6f9f,%eax
    ba54:	48 0f af c2          	imul   %rdx,%rax
    ba58:	48 c1 e8 20          	shr    $0x20,%rax
    ba5c:	c1 e8 07             	shr    $0x7,%eax
    ba5f:	69 d0 d3 00 00 00    	imul   $0xd3,%eax,%edx
    ba65:	89 c8                	mov    %ecx,%eax
    ba67:	29 d0                	sub    %edx,%eax
    ba69:	5d                   	pop    %rbp
    ba6a:	c3                   	ret

000000000000ba6b <InitSymTab>:
    ba6b:	f3 0f 1e fa          	endbr64
    ba6f:	55                   	push   %rbp
    ba70:	48 89 e5             	mov    %rsp,%rbp
    ba73:	48 83 ec 10          	sub    $0x10,%rsp
    ba77:	bf 10 00 00 00       	mov    $0x10,%edi
    ba7c:	e8 4f 6a ff ff       	call   24d0 <malloc@plt>
    ba81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ba85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba89:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ba90:	b8 00 00 00 00       	mov    $0x0,%eax
    ba95:	e8 e5 f8 ff ff       	call   b37f <InitHashTable>
    ba9a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ba9e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    baa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa6:	c9                   	leave
    baa7:	c3                   	ret

000000000000baa8 <AddBuiltinProc>:
    baa8:	f3 0f 1e fa          	endbr64
    baac:	55                   	push   %rbp
    baad:	48 89 e5             	mov    %rsp,%rbp
    bab0:	48 83 ec 20          	sub    $0x20,%rsp
    bab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bab8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    babc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    bac0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    bac5:	75 28                	jne    baef <AddBuiltinProc+0x47>
    bac7:	48 8d 05 a2 f2 00 00 	lea    0xf2a2(%rip),%rax        # 1ad70 <__PRETTY_FUNCTION__.12>
    bace:	48 89 c1             	mov    %rax,%rcx
    bad1:	ba 22 00 00 00       	mov    $0x22,%edx
    bad6:	48 8d 05 13 f2 00 00 	lea    0xf213(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    badd:	48 89 c6             	mov    %rax,%rsi
    bae0:	48 8d 05 35 f2 00 00 	lea    0xf235(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bae7:	48 89 c7             	mov    %rax,%rdi
    baea:	e8 e1 68 ff ff       	call   23d0 <__assert_fail@plt>
    baef:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    baf4:	75 28                	jne    bb1e <AddBuiltinProc+0x76>
    baf6:	48 8d 05 73 f2 00 00 	lea    0xf273(%rip),%rax        # 1ad70 <__PRETTY_FUNCTION__.12>
    bafd:	48 89 c1             	mov    %rax,%rcx
    bb00:	ba 23 00 00 00       	mov    $0x23,%edx
    bb05:	48 8d 05 e4 f1 00 00 	lea    0xf1e4(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bb0c:	48 89 c6             	mov    %rax,%rsi
    bb0f:	48 8d 05 15 f2 00 00 	lea    0xf215(%rip),%rax        # 1ad2b <__PRETTY_FUNCTION__.0+0x53>
    bb16:	48 89 c7             	mov    %rax,%rdi
    bb19:	e8 b2 68 ff ff       	call   23d0 <__assert_fail@plt>
    bb1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb22:	48 8b 40 08          	mov    0x8(%rax),%rax
    bb26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb2a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bb2e:	49 89 d1             	mov    %rdx,%r9
    bb31:	41 b8 05 00 00 00    	mov    $0x5,%r8d
    bb37:	b9 03 00 00 00       	mov    $0x3,%ecx
    bb3c:	ba 00 00 00 00       	mov    $0x0,%edx
    bb41:	48 89 c7             	mov    %rax,%rdi
    bb44:	e8 7e f8 ff ff       	call   b3c7 <AddIdentToTable>
    bb49:	c9                   	leave
    bb4a:	c3                   	ret

000000000000bb4b <AddBuiltinType>:
    bb4b:	f3 0f 1e fa          	endbr64
    bb4f:	55                   	push   %rbp
    bb50:	48 89 e5             	mov    %rsp,%rbp
    bb53:	48 83 ec 20          	sub    $0x20,%rsp
    bb57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb5f:	89 55 ec             	mov    %edx,-0x14(%rbp)
    bb62:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    bb67:	75 28                	jne    bb91 <AddBuiltinType+0x46>
    bb69:	48 8d 05 10 f2 00 00 	lea    0xf210(%rip),%rax        # 1ad80 <__PRETTY_FUNCTION__.11>
    bb70:	48 89 c1             	mov    %rax,%rcx
    bb73:	ba 2b 00 00 00       	mov    $0x2b,%edx
    bb78:	48 8d 05 71 f1 00 00 	lea    0xf171(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bb7f:	48 89 c6             	mov    %rax,%rsi
    bb82:	48 8d 05 93 f1 00 00 	lea    0xf193(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bb89:	48 89 c7             	mov    %rax,%rdi
    bb8c:	e8 3f 68 ff ff       	call   23d0 <__assert_fail@plt>
    bb91:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bb96:	75 28                	jne    bbc0 <AddBuiltinType+0x75>
    bb98:	48 8d 05 e1 f1 00 00 	lea    0xf1e1(%rip),%rax        # 1ad80 <__PRETTY_FUNCTION__.11>
    bb9f:	48 89 c1             	mov    %rax,%rcx
    bba2:	ba 2c 00 00 00       	mov    $0x2c,%edx
    bba7:	48 8d 05 42 f1 00 00 	lea    0xf142(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bbae:	48 89 c6             	mov    %rax,%rsi
    bbb1:	48 8d 05 73 f1 00 00 	lea    0xf173(%rip),%rax        # 1ad2b <__PRETTY_FUNCTION__.0+0x53>
    bbb8:	48 89 c7             	mov    %rax,%rdi
    bbbb:	e8 10 68 ff ff       	call   23d0 <__assert_fail@plt>
    bbc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc4:	48 8b 40 08          	mov    0x8(%rax),%rax
    bbc8:	8b 55 ec             	mov    -0x14(%rbp),%edx
    bbcb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bbcf:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    bbd5:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    bbdb:	89 d1                	mov    %edx,%ecx
    bbdd:	ba 00 00 00 00       	mov    $0x0,%edx
    bbe2:	48 89 c7             	mov    %rax,%rdi
    bbe5:	e8 dd f7 ff ff       	call   b3c7 <AddIdentToTable>
    bbea:	c9                   	leave
    bbeb:	c3                   	ret

000000000000bbec <PushScope>:
    bbec:	f3 0f 1e fa          	endbr64
    bbf0:	55                   	push   %rbp
    bbf1:	48 89 e5             	mov    %rsp,%rbp
    bbf4:	48 83 ec 20          	sub    $0x20,%rsp
    bbf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bbfc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bc01:	75 28                	jne    bc2b <PushScope+0x3f>
    bc03:	48 8d 05 86 f1 00 00 	lea    0xf186(%rip),%rax        # 1ad90 <__PRETTY_FUNCTION__.10>
    bc0a:	48 89 c1             	mov    %rax,%rcx
    bc0d:	ba 34 00 00 00       	mov    $0x34,%edx
    bc12:	48 8d 05 d7 f0 00 00 	lea    0xf0d7(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bc19:	48 89 c6             	mov    %rax,%rsi
    bc1c:	48 8d 05 f9 f0 00 00 	lea    0xf0f9(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bc23:	48 89 c7             	mov    %rax,%rdi
    bc26:	e8 a5 67 ff ff       	call   23d0 <__assert_fail@plt>
    bc2b:	b8 00 00 00 00       	mov    $0x0,%eax
    bc30:	e8 4a f7 ff ff       	call   b37f <InitHashTable>
    bc35:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bc39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc3d:	48 8b 00             	mov    (%rax),%rax
    bc40:	48 85 c0             	test   %rax,%rax
    bc43:	75 1a                	jne    bc5f <PushScope+0x73>
    bc45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc49:	be 04 00 00 00       	mov    $0x4,%esi
    bc4e:	48 89 c7             	mov    %rax,%rdi
    bc51:	e8 a5 c5 ff ff       	call   81fb <CreateListNode>
    bc56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc5a:	48 89 02             	mov    %rax,(%rdx)
    bc5d:	eb 2d                	jmp    bc8c <PushScope+0xa0>
    bc5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc63:	be 04 00 00 00       	mov    $0x4,%esi
    bc68:	48 89 c7             	mov    %rax,%rdi
    bc6b:	e8 8b c5 ff ff       	call   81fb <CreateListNode>
    bc70:	48 89 c2             	mov    %rax,%rdx
    bc73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc77:	48 8b 00             	mov    (%rax),%rax
    bc7a:	48 89 d6             	mov    %rdx,%rsi
    bc7d:	48 89 c7             	mov    %rax,%rdi
    bc80:	e8 be c5 ff ff       	call   8243 <PushListNodeFront>
    bc85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc89:	48 89 02             	mov    %rax,(%rdx)
    bc8c:	90                   	nop
    bc8d:	c9                   	leave
    bc8e:	c3                   	ret

000000000000bc8f <PushVarOntoScope>:
    bc8f:	f3 0f 1e fa          	endbr64
    bc93:	55                   	push   %rbp
    bc94:	48 89 e5             	mov    %rsp,%rbp
    bc97:	48 83 ec 30          	sub    $0x30,%rsp
    bc9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc9f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    bca2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bca6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bcab:	75 28                	jne    bcd5 <PushVarOntoScope+0x46>
    bcad:	48 8d 05 ec f0 00 00 	lea    0xf0ec(%rip),%rax        # 1ada0 <__PRETTY_FUNCTION__.9>
    bcb4:	48 89 c1             	mov    %rax,%rcx
    bcb7:	ba 43 00 00 00       	mov    $0x43,%edx
    bcbc:	48 8d 05 2d f0 00 00 	lea    0xf02d(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bcc3:	48 89 c6             	mov    %rax,%rsi
    bcc6:	48 8d 05 4f f0 00 00 	lea    0xf04f(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bccd:	48 89 c7             	mov    %rax,%rdi
    bcd0:	e8 fb 66 ff ff       	call   23d0 <__assert_fail@plt>
    bcd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcd9:	48 8b 00             	mov    (%rax),%rax
    bcdc:	48 85 c0             	test   %rax,%rax
    bcdf:	75 28                	jne    bd09 <PushVarOntoScope+0x7a>
    bce1:	48 8d 05 b8 f0 00 00 	lea    0xf0b8(%rip),%rax        # 1ada0 <__PRETTY_FUNCTION__.9>
    bce8:	48 89 c1             	mov    %rax,%rcx
    bceb:	ba 44 00 00 00       	mov    $0x44,%edx
    bcf0:	48 8d 05 f9 ef 00 00 	lea    0xeff9(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bcf7:	48 89 c6             	mov    %rax,%rsi
    bcfa:	48 8d 05 35 f0 00 00 	lea    0xf035(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bd01:	48 89 c7             	mov    %rax,%rdi
    bd04:	e8 c7 66 ff ff       	call   23d0 <__assert_fail@plt>
    bd09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd0d:	48 8b 40 08          	mov    0x8(%rax),%rax
    bd11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bd15:	48 89 d6             	mov    %rdx,%rsi
    bd18:	48 89 c7             	mov    %rax,%rdi
    bd1b:	e8 c5 f8 ff ff       	call   b5e5 <FindIdentInTable>
    bd20:	48 85 c0             	test   %rax,%rax
    bd23:	75 37                	jne    bd5c <PushVarOntoScope+0xcd>
    bd25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd29:	48 8b 00             	mov    (%rax),%rax
    bd2c:	48 8b 40 08          	mov    0x8(%rax),%rax
    bd30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bd34:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    bd37:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    bd3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd3f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    bd45:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    bd4b:	89 d1                	mov    %edx,%ecx
    bd4d:	ba 00 00 00 00       	mov    $0x0,%edx
    bd52:	48 89 c7             	mov    %rax,%rdi
    bd55:	e8 6d f6 ff ff       	call   b3c7 <AddIdentToTable>
    bd5a:	eb 05                	jmp    bd61 <PushVarOntoScope+0xd2>
    bd5c:	b8 01 00 00 00       	mov    $0x1,%eax
    bd61:	c9                   	leave
    bd62:	c3                   	ret

000000000000bd63 <PushArrayOntoScope>:
    bd63:	f3 0f 1e fa          	endbr64
    bd67:	55                   	push   %rbp
    bd68:	48 89 e5             	mov    %rsp,%rbp
    bd6b:	48 83 ec 30          	sub    $0x30,%rsp
    bd6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd73:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    bd76:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bd7a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bd7f:	75 28                	jne    bda9 <PushArrayOntoScope+0x46>
    bd81:	48 8d 05 38 f0 00 00 	lea    0xf038(%rip),%rax        # 1adc0 <__PRETTY_FUNCTION__.8>
    bd88:	48 89 c1             	mov    %rax,%rcx
    bd8b:	ba 57 00 00 00       	mov    $0x57,%edx
    bd90:	48 8d 05 59 ef 00 00 	lea    0xef59(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bd97:	48 89 c6             	mov    %rax,%rsi
    bd9a:	48 8d 05 7b ef 00 00 	lea    0xef7b(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bda1:	48 89 c7             	mov    %rax,%rdi
    bda4:	e8 27 66 ff ff       	call   23d0 <__assert_fail@plt>
    bda9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdad:	48 8b 00             	mov    (%rax),%rax
    bdb0:	48 85 c0             	test   %rax,%rax
    bdb3:	75 28                	jne    bddd <PushArrayOntoScope+0x7a>
    bdb5:	48 8d 05 04 f0 00 00 	lea    0xf004(%rip),%rax        # 1adc0 <__PRETTY_FUNCTION__.8>
    bdbc:	48 89 c1             	mov    %rax,%rcx
    bdbf:	ba 58 00 00 00       	mov    $0x58,%edx
    bdc4:	48 8d 05 25 ef 00 00 	lea    0xef25(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bdcb:	48 89 c6             	mov    %rax,%rsi
    bdce:	48 8d 05 61 ef 00 00 	lea    0xef61(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bdd5:	48 89 c7             	mov    %rax,%rdi
    bdd8:	e8 f3 65 ff ff       	call   23d0 <__assert_fail@plt>
    bddd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bde1:	48 8b 40 08          	mov    0x8(%rax),%rax
    bde5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bde9:	48 89 d6             	mov    %rdx,%rsi
    bdec:	48 89 c7             	mov    %rax,%rdi
    bdef:	e8 f1 f7 ff ff       	call   b5e5 <FindIdentInTable>
    bdf4:	48 85 c0             	test   %rax,%rax
    bdf7:	75 37                	jne    be30 <PushArrayOntoScope+0xcd>
    bdf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdfd:	48 8b 00             	mov    (%rax),%rax
    be00:	48 8b 40 08          	mov    0x8(%rax),%rax
    be04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    be08:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    be0b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    be0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be13:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    be19:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    be1f:	89 d1                	mov    %edx,%ecx
    be21:	ba 00 00 00 00       	mov    $0x0,%edx
    be26:	48 89 c7             	mov    %rax,%rdi
    be29:	e8 99 f5 ff ff       	call   b3c7 <AddIdentToTable>
    be2e:	eb 05                	jmp    be35 <PushArrayOntoScope+0xd2>
    be30:	b8 01 00 00 00       	mov    $0x1,%eax
    be35:	c9                   	leave
    be36:	c3                   	ret

000000000000be37 <PushProcedureOntoScope>:
    be37:	f3 0f 1e fa          	endbr64
    be3b:	55                   	push   %rbp
    be3c:	48 89 e5             	mov    %rsp,%rbp
    be3f:	48 83 ec 30          	sub    $0x30,%rsp
    be43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    be4b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    be4f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    be53:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    be58:	75 28                	jne    be82 <PushProcedureOntoScope+0x4b>
    be5a:	48 8d 05 7f ef 00 00 	lea    0xef7f(%rip),%rax        # 1ade0 <__PRETTY_FUNCTION__.7>
    be61:	48 89 c1             	mov    %rax,%rcx
    be64:	ba 6c 00 00 00       	mov    $0x6c,%edx
    be69:	48 8d 05 80 ee 00 00 	lea    0xee80(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    be70:	48 89 c6             	mov    %rax,%rsi
    be73:	48 8d 05 a2 ee 00 00 	lea    0xeea2(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    be7a:	48 89 c7             	mov    %rax,%rdi
    be7d:	e8 4e 65 ff ff       	call   23d0 <__assert_fail@plt>
    be82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be86:	48 8b 00             	mov    (%rax),%rax
    be89:	48 85 c0             	test   %rax,%rax
    be8c:	75 28                	jne    beb6 <PushProcedureOntoScope+0x7f>
    be8e:	48 8d 05 4b ef 00 00 	lea    0xef4b(%rip),%rax        # 1ade0 <__PRETTY_FUNCTION__.7>
    be95:	48 89 c1             	mov    %rax,%rcx
    be98:	ba 6d 00 00 00       	mov    $0x6d,%edx
    be9d:	48 8d 05 4c ee 00 00 	lea    0xee4c(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bea4:	48 89 c6             	mov    %rax,%rsi
    bea7:	48 8d 05 88 ee 00 00 	lea    0xee88(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    beae:	48 89 c7             	mov    %rax,%rdi
    beb1:	e8 1a 65 ff ff       	call   23d0 <__assert_fail@plt>
    beb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    beba:	48 8b 40 08          	mov    0x8(%rax),%rax
    bebe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bec2:	48 89 d6             	mov    %rdx,%rsi
    bec5:	48 89 c7             	mov    %rax,%rdi
    bec8:	e8 18 f7 ff ff       	call   b5e5 <FindIdentInTable>
    becd:	48 85 c0             	test   %rax,%rax
    bed0:	75 37                	jne    bf09 <PushProcedureOntoScope+0xd2>
    bed2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bed6:	48 8b 00             	mov    (%rax),%rax
    bed9:	48 8b 40 08          	mov    0x8(%rax),%rax
    bedd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bee1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    bee5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bee9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    beed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bef1:	49 89 c9             	mov    %rcx,%r9
    bef4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    befa:	b9 03 00 00 00       	mov    $0x3,%ecx
    beff:	48 89 c7             	mov    %rax,%rdi
    bf02:	e8 c0 f4 ff ff       	call   b3c7 <AddIdentToTable>
    bf07:	eb 05                	jmp    bf0e <PushProcedureOntoScope+0xd7>
    bf09:	b8 01 00 00 00       	mov    $0x1,%eax
    bf0e:	c9                   	leave
    bf0f:	c3                   	ret

000000000000bf10 <PushFunctionOntoScope>:
    bf10:	f3 0f 1e fa          	endbr64
    bf14:	55                   	push   %rbp
    bf15:	48 89 e5             	mov    %rsp,%rbp
    bf18:	48 83 ec 40          	sub    $0x40,%rsp
    bf1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bf24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    bf28:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    bf2b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    bf2f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    bf34:	75 28                	jne    bf5e <PushFunctionOntoScope+0x4e>
    bf36:	48 8d 05 c3 ee 00 00 	lea    0xeec3(%rip),%rax        # 1ae00 <__PRETTY_FUNCTION__.6>
    bf3d:	48 89 c1             	mov    %rax,%rcx
    bf40:	ba 81 00 00 00       	mov    $0x81,%edx
    bf45:	48 8d 05 a4 ed 00 00 	lea    0xeda4(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bf4c:	48 89 c6             	mov    %rax,%rsi
    bf4f:	48 8d 05 c6 ed 00 00 	lea    0xedc6(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    bf56:	48 89 c7             	mov    %rax,%rdi
    bf59:	e8 72 64 ff ff       	call   23d0 <__assert_fail@plt>
    bf5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf62:	48 8b 00             	mov    (%rax),%rax
    bf65:	48 85 c0             	test   %rax,%rax
    bf68:	75 28                	jne    bf92 <PushFunctionOntoScope+0x82>
    bf6a:	48 8d 05 8f ee 00 00 	lea    0xee8f(%rip),%rax        # 1ae00 <__PRETTY_FUNCTION__.6>
    bf71:	48 89 c1             	mov    %rax,%rcx
    bf74:	ba 82 00 00 00       	mov    $0x82,%edx
    bf79:	48 8d 05 70 ed 00 00 	lea    0xed70(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    bf80:	48 89 c6             	mov    %rax,%rsi
    bf83:	48 8d 05 ac ed 00 00 	lea    0xedac(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    bf8a:	48 89 c7             	mov    %rax,%rdi
    bf8d:	e8 3e 64 ff ff       	call   23d0 <__assert_fail@plt>
    bf92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf96:	48 8b 40 08          	mov    0x8(%rax),%rax
    bf9a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bf9e:	48 89 d6             	mov    %rdx,%rsi
    bfa1:	48 89 c7             	mov    %rax,%rdi
    bfa4:	e8 3c f6 ff ff       	call   b5e5 <FindIdentInTable>
    bfa9:	48 85 c0             	test   %rax,%rax
    bfac:	75 35                	jne    bfe3 <PushFunctionOntoScope+0xd3>
    bfae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfb2:	48 8b 00             	mov    (%rax),%rax
    bfb5:	48 8b 40 08          	mov    0x8(%rax),%rax
    bfb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bfbd:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    bfc1:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    bfc4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bfc8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    bfcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfd0:	49 89 f9             	mov    %rdi,%r9
    bfd3:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    bfd9:	48 89 c7             	mov    %rax,%rdi
    bfdc:	e8 e6 f3 ff ff       	call   b3c7 <AddIdentToTable>
    bfe1:	eb 05                	jmp    bfe8 <PushFunctionOntoScope+0xd8>
    bfe3:	b8 01 00 00 00       	mov    $0x1,%eax
    bfe8:	c9                   	leave
    bfe9:	c3                   	ret

000000000000bfea <PushFuncRetOntoScope>:
    bfea:	f3 0f 1e fa          	endbr64
    bfee:	55                   	push   %rbp
    bfef:	48 89 e5             	mov    %rsp,%rbp
    bff2:	48 83 ec 30          	sub    $0x30,%rsp
    bff6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bffa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bffe:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c001:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    c005:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c00a:	75 28                	jne    c034 <PushFuncRetOntoScope+0x4a>
    c00c:	48 8d 05 0d ee 00 00 	lea    0xee0d(%rip),%rax        # 1ae20 <__PRETTY_FUNCTION__.5>
    c013:	48 89 c1             	mov    %rax,%rcx
    c016:	ba 96 00 00 00       	mov    $0x96,%edx
    c01b:	48 8d 05 ce ec 00 00 	lea    0xecce(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c022:	48 89 c6             	mov    %rax,%rsi
    c025:	48 8d 05 f0 ec 00 00 	lea    0xecf0(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c02c:	48 89 c7             	mov    %rax,%rdi
    c02f:	e8 9c 63 ff ff       	call   23d0 <__assert_fail@plt>
    c034:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c038:	48 8b 00             	mov    (%rax),%rax
    c03b:	48 85 c0             	test   %rax,%rax
    c03e:	75 28                	jne    c068 <PushFuncRetOntoScope+0x7e>
    c040:	48 8d 05 d9 ed 00 00 	lea    0xedd9(%rip),%rax        # 1ae20 <__PRETTY_FUNCTION__.5>
    c047:	48 89 c1             	mov    %rax,%rcx
    c04a:	ba 97 00 00 00       	mov    $0x97,%edx
    c04f:	48 8d 05 9a ec 00 00 	lea    0xec9a(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c056:	48 89 c6             	mov    %rax,%rsi
    c059:	48 8d 05 d6 ec 00 00 	lea    0xecd6(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    c060:	48 89 c7             	mov    %rax,%rdi
    c063:	e8 68 63 ff ff       	call   23d0 <__assert_fail@plt>
    c068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c06c:	48 8b 40 08          	mov    0x8(%rax),%rax
    c070:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c074:	48 89 d6             	mov    %rdx,%rsi
    c077:	48 89 c7             	mov    %rax,%rdi
    c07a:	e8 66 f5 ff ff       	call   b5e5 <FindIdentInTable>
    c07f:	48 85 c0             	test   %rax,%rax
    c082:	75 38                	jne    c0bc <PushFuncRetOntoScope+0xd2>
    c084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c088:	48 8b 00             	mov    (%rax),%rax
    c08b:	48 8b 40 08          	mov    0x8(%rax),%rax
    c08f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c093:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c097:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c09a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c09e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a2:	49 89 c9             	mov    %rcx,%r9
    c0a5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    c0ab:	89 d1                	mov    %edx,%ecx
    c0ad:	ba 00 00 00 00       	mov    $0x0,%edx
    c0b2:	48 89 c7             	mov    %rax,%rdi
    c0b5:	e8 0d f3 ff ff       	call   b3c7 <AddIdentToTable>
    c0ba:	eb 05                	jmp    c0c1 <PushFuncRetOntoScope+0xd7>
    c0bc:	b8 01 00 00 00       	mov    $0x1,%eax
    c0c1:	c9                   	leave
    c0c2:	c3                   	ret

000000000000c0c3 <FindIdent>:
    c0c3:	f3 0f 1e fa          	endbr64
    c0c7:	55                   	push   %rbp
    c0c8:	48 89 e5             	mov    %rsp,%rbp
    c0cb:	48 83 ec 40          	sub    $0x40,%rsp
    c0cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c0d3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c0d7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c0db:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    c0e2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c0e7:	75 28                	jne    c111 <FindIdent+0x4e>
    c0e9:	48 8d 05 48 ed 00 00 	lea    0xed48(%rip),%rax        # 1ae38 <__PRETTY_FUNCTION__.4>
    c0f0:	48 89 c1             	mov    %rax,%rcx
    c0f3:	ba ae 00 00 00       	mov    $0xae,%edx
    c0f8:	48 8d 05 f1 eb 00 00 	lea    0xebf1(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c0ff:	48 89 c6             	mov    %rax,%rsi
    c102:	48 8d 05 13 ec 00 00 	lea    0xec13(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c109:	48 89 c7             	mov    %rax,%rdi
    c10c:	e8 bf 62 ff ff       	call   23d0 <__assert_fail@plt>
    c111:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c116:	75 28                	jne    c140 <FindIdent+0x7d>
    c118:	48 8d 05 19 ed 00 00 	lea    0xed19(%rip),%rax        # 1ae38 <__PRETTY_FUNCTION__.4>
    c11f:	48 89 c1             	mov    %rax,%rcx
    c122:	ba af 00 00 00       	mov    $0xaf,%edx
    c127:	48 8d 05 c2 eb 00 00 	lea    0xebc2(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c12e:	48 89 c6             	mov    %rax,%rsi
    c131:	48 8d 05 f3 eb 00 00 	lea    0xebf3(%rip),%rax        # 1ad2b <__PRETTY_FUNCTION__.0+0x53>
    c138:	48 89 c7             	mov    %rax,%rdi
    c13b:	e8 90 62 ff ff       	call   23d0 <__assert_fail@plt>
    c140:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c144:	48 8b 40 08          	mov    0x8(%rax),%rax
    c148:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c14c:	48 89 d6             	mov    %rdx,%rsi
    c14f:	48 89 c7             	mov    %rax,%rdi
    c152:	e8 8e f4 ff ff       	call   b5e5 <FindIdentInTable>
    c157:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c15b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c160:	74 10                	je     c172 <FindIdent+0xaf>
    c162:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c166:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c16a:	48 89 10             	mov    %rdx,(%rax)
    c16d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c170:	eb 6b                	jmp    c1dd <FindIdent+0x11a>
    c172:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c176:	48 8b 00             	mov    (%rax),%rax
    c179:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c17d:	eb 42                	jmp    c1c1 <FindIdent+0xfe>
    c17f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c183:	48 8b 40 08          	mov    0x8(%rax),%rax
    c187:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c18b:	48 89 d6             	mov    %rdx,%rsi
    c18e:	48 89 c7             	mov    %rax,%rdi
    c191:	e8 4f f4 ff ff       	call   b5e5 <FindIdentInTable>
    c196:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c19a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c19f:	74 10                	je     c1b1 <FindIdent+0xee>
    c1a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c1a9:	48 89 10             	mov    %rdx,(%rax)
    c1ac:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c1af:	eb 2c                	jmp    c1dd <FindIdent+0x11a>
    c1b1:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    c1b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1b9:	48 8b 40 10          	mov    0x10(%rax),%rax
    c1bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c1c1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c1c6:	75 b7                	jne    c17f <FindIdent+0xbc>
    c1c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1cc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c1d3:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    c1da:	8b 45 ec             	mov    -0x14(%rbp),%eax
    c1dd:	c9                   	leave
    c1de:	c3                   	ret

000000000000c1df <FindAllIdents>:
    c1df:	f3 0f 1e fa          	endbr64
    c1e3:	55                   	push   %rbp
    c1e4:	48 89 e5             	mov    %rsp,%rbp
    c1e7:	48 83 ec 20          	sub    $0x20,%rsp
    c1eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c1f3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c1fa:	00
    c1fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1ff:	48 8b 00             	mov    (%rax),%rax
    c202:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c20a:	48 8b 40 08          	mov    0x8(%rax),%rax
    c20e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c212:	48 89 d6             	mov    %rdx,%rsi
    c215:	48 89 c7             	mov    %rax,%rdi
    c218:	e8 51 f4 ff ff       	call   b66e <FindAllIdentsInTable>
    c21d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c221:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c226:	74 3a                	je     c262 <FindAllIdents+0x83>
    c228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22c:	eb 40                	jmp    c26e <FindAllIdents+0x8f>
    c22e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c232:	48 8b 40 08          	mov    0x8(%rax),%rax
    c236:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c23a:	48 89 d6             	mov    %rdx,%rsi
    c23d:	48 89 c7             	mov    %rax,%rdi
    c240:	e8 29 f4 ff ff       	call   b66e <FindAllIdentsInTable>
    c245:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c249:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c24e:	74 06                	je     c256 <FindAllIdents+0x77>
    c250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c254:	eb 18                	jmp    c26e <FindAllIdents+0x8f>
    c256:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c25a:	48 8b 40 10          	mov    0x10(%rax),%rax
    c25e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c262:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c267:	75 c5                	jne    c22e <FindAllIdents+0x4f>
    c269:	b8 00 00 00 00       	mov    $0x0,%eax
    c26e:	c9                   	leave
    c26f:	c3                   	ret

000000000000c270 <PushTypeOntoScope>:
    c270:	f3 0f 1e fa          	endbr64
    c274:	55                   	push   %rbp
    c275:	48 89 e5             	mov    %rsp,%rbp
    c278:	48 83 ec 30          	sub    $0x30,%rsp
    c27c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c280:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c284:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c287:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c28c:	75 28                	jne    c2b6 <PushTypeOntoScope+0x46>
    c28e:	48 8d 05 bb eb 00 00 	lea    0xebbb(%rip),%rax        # 1ae50 <__PRETTY_FUNCTION__.3>
    c295:	48 89 c1             	mov    %rax,%rcx
    c298:	ba ef 00 00 00       	mov    $0xef,%edx
    c29d:	48 8d 05 4c ea 00 00 	lea    0xea4c(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c2a4:	48 89 c6             	mov    %rax,%rsi
    c2a7:	48 8d 05 6e ea 00 00 	lea    0xea6e(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c2ae:	48 89 c7             	mov    %rax,%rdi
    c2b1:	e8 1a 61 ff ff       	call   23d0 <__assert_fail@plt>
    c2b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2ba:	48 8b 00             	mov    (%rax),%rax
    c2bd:	48 85 c0             	test   %rax,%rax
    c2c0:	75 28                	jne    c2ea <PushTypeOntoScope+0x7a>
    c2c2:	48 8d 05 87 eb 00 00 	lea    0xeb87(%rip),%rax        # 1ae50 <__PRETTY_FUNCTION__.3>
    c2c9:	48 89 c1             	mov    %rax,%rcx
    c2cc:	ba f0 00 00 00       	mov    $0xf0,%edx
    c2d1:	48 8d 05 18 ea 00 00 	lea    0xea18(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c2d8:	48 89 c6             	mov    %rax,%rsi
    c2db:	48 8d 05 54 ea 00 00 	lea    0xea54(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    c2e2:	48 89 c7             	mov    %rax,%rdi
    c2e5:	e8 e6 60 ff ff       	call   23d0 <__assert_fail@plt>
    c2ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2ee:	48 8b 40 08          	mov    0x8(%rax),%rax
    c2f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c2f6:	48 89 d6             	mov    %rdx,%rsi
    c2f9:	48 89 c7             	mov    %rax,%rdi
    c2fc:	e8 e4 f2 ff ff       	call   b5e5 <FindIdentInTable>
    c301:	48 85 c0             	test   %rax,%rax
    c304:	75 37                	jne    c33d <PushTypeOntoScope+0xcd>
    c306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c30a:	48 8b 00             	mov    (%rax),%rax
    c30d:	48 8b 40 08          	mov    0x8(%rax),%rax
    c311:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c315:	8b 55 dc             	mov    -0x24(%rbp),%edx
    c318:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c31c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c320:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    c326:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    c32c:	89 d1                	mov    %edx,%ecx
    c32e:	ba 00 00 00 00       	mov    $0x0,%edx
    c333:	48 89 c7             	mov    %rax,%rdi
    c336:	e8 8c f0 ff ff       	call   b3c7 <AddIdentToTable>
    c33b:	eb 05                	jmp    c342 <PushTypeOntoScope+0xd2>
    c33d:	b8 01 00 00 00       	mov    $0x1,%eax
    c342:	c9                   	leave
    c343:	c3                   	ret

000000000000c344 <PopScope>:
    c344:	f3 0f 1e fa          	endbr64
    c348:	55                   	push   %rbp
    c349:	48 89 e5             	mov    %rsp,%rbp
    c34c:	48 83 ec 20          	sub    $0x20,%rsp
    c350:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c354:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c359:	75 28                	jne    c383 <PopScope+0x3f>
    c35b:	48 8d 05 06 eb 00 00 	lea    0xeb06(%rip),%rax        # 1ae68 <__PRETTY_FUNCTION__.2>
    c362:	48 89 c1             	mov    %rax,%rcx
    c365:	ba 02 01 00 00       	mov    $0x102,%edx
    c36a:	48 8d 05 7f e9 00 00 	lea    0xe97f(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c371:	48 89 c6             	mov    %rax,%rsi
    c374:	48 8d 05 a1 e9 00 00 	lea    0xe9a1(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c37b:	48 89 c7             	mov    %rax,%rdi
    c37e:	e8 4d 60 ff ff       	call   23d0 <__assert_fail@plt>
    c383:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c387:	48 8b 00             	mov    (%rax),%rax
    c38a:	48 85 c0             	test   %rax,%rax
    c38d:	75 28                	jne    c3b7 <PopScope+0x73>
    c38f:	48 8d 05 d2 ea 00 00 	lea    0xead2(%rip),%rax        # 1ae68 <__PRETTY_FUNCTION__.2>
    c396:	48 89 c1             	mov    %rax,%rcx
    c399:	ba 03 01 00 00       	mov    $0x103,%edx
    c39e:	48 8d 05 4b e9 00 00 	lea    0xe94b(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c3a5:	48 89 c6             	mov    %rax,%rsi
    c3a8:	48 8d 05 87 e9 00 00 	lea    0xe987(%rip),%rax        # 1ad36 <__PRETTY_FUNCTION__.0+0x5e>
    c3af:	48 89 c7             	mov    %rax,%rdi
    c3b2:	e8 19 60 ff ff       	call   23d0 <__assert_fail@plt>
    c3b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3bb:	48 8b 00             	mov    (%rax),%rax
    c3be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c3c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3c6:	48 8b 00             	mov    (%rax),%rax
    c3c9:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c3cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3d1:	48 89 10             	mov    %rdx,(%rax)
    c3d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    c3dc:	48 89 c7             	mov    %rax,%rdi
    c3df:	e8 6e f3 ff ff       	call   b752 <DestroyHashTable>
    c3e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e8:	48 89 c7             	mov    %rax,%rdi
    c3eb:	e8 00 5f ff ff       	call   22f0 <free@plt>
    c3f0:	90                   	nop
    c3f1:	c9                   	leave
    c3f2:	c3                   	ret

000000000000c3f3 <DestroySymTab>:
    c3f3:	f3 0f 1e fa          	endbr64
    c3f7:	55                   	push   %rbp
    c3f8:	48 89 e5             	mov    %rsp,%rbp
    c3fb:	48 83 ec 20          	sub    $0x20,%rsp
    c3ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c403:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c408:	75 28                	jne    c432 <DestroySymTab+0x3f>
    c40a:	48 8d 05 67 ea 00 00 	lea    0xea67(%rip),%rax        # 1ae78 <__PRETTY_FUNCTION__.1>
    c411:	48 89 c1             	mov    %rax,%rcx
    c414:	ba 11 01 00 00       	mov    $0x111,%edx
    c419:	48 8d 05 d0 e8 00 00 	lea    0xe8d0(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c420:	48 89 c6             	mov    %rax,%rsi
    c423:	48 8d 05 f2 e8 00 00 	lea    0xe8f2(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c42a:	48 89 c7             	mov    %rax,%rdi
    c42d:	e8 9e 5f ff ff       	call   23d0 <__assert_fail@plt>
    c432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c436:	48 8b 00             	mov    (%rax),%rax
    c439:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c43d:	eb 30                	jmp    c46f <DestroySymTab+0x7c>
    c43f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c443:	48 8b 40 10          	mov    0x10(%rax),%rax
    c447:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c44b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c44f:	48 8b 40 08          	mov    0x8(%rax),%rax
    c453:	48 89 c7             	mov    %rax,%rdi
    c456:	e8 f7 f2 ff ff       	call   b752 <DestroyHashTable>
    c45b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c45f:	48 89 c7             	mov    %rax,%rdi
    c462:	e8 89 5e ff ff       	call   22f0 <free@plt>
    c467:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c46b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c46f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c474:	75 c9                	jne    c43f <DestroySymTab+0x4c>
    c476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c47a:	48 8b 40 08          	mov    0x8(%rax),%rax
    c47e:	48 89 c7             	mov    %rax,%rdi
    c481:	e8 cc f2 ff ff       	call   b752 <DestroyHashTable>
    c486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c48a:	48 89 c7             	mov    %rax,%rdi
    c48d:	e8 5e 5e ff ff       	call   22f0 <free@plt>
    c492:	90                   	nop
    c493:	c9                   	leave
    c494:	c3                   	ret

000000000000c495 <PrintSymTab>:
    c495:	f3 0f 1e fa          	endbr64
    c499:	55                   	push   %rbp
    c49a:	48 89 e5             	mov    %rsp,%rbp
    c49d:	48 83 ec 30          	sub    $0x30,%rsp
    c4a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c4a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c4a9:	89 55 dc             	mov    %edx,-0x24(%rbp)
    c4ac:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    c4b1:	75 28                	jne    c4db <PrintSymTab+0x46>
    c4b3:	48 8d 05 ce e9 00 00 	lea    0xe9ce(%rip),%rax        # 1ae88 <__PRETTY_FUNCTION__.0>
    c4ba:	48 89 c1             	mov    %rax,%rcx
    c4bd:	ba 26 01 00 00       	mov    $0x126,%edx
    c4c2:	48 8d 05 27 e8 00 00 	lea    0xe827(%rip),%rax        # 1acf0 <__PRETTY_FUNCTION__.0+0x18>
    c4c9:	48 89 c6             	mov    %rax,%rsi
    c4cc:	48 8d 05 49 e8 00 00 	lea    0xe849(%rip),%rax        # 1ad1c <__PRETTY_FUNCTION__.0+0x44>
    c4d3:	48 89 c7             	mov    %rax,%rdi
    c4d6:	e8 f5 5e ff ff       	call   23d0 <__assert_fail@plt>
    c4db:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    c4e2:	eb 24                	jmp    c508 <PrintSymTab+0x73>
    c4e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c4e8:	48 89 c1             	mov    %rax,%rcx
    c4eb:	ba 02 00 00 00       	mov    $0x2,%edx
    c4f0:	be 01 00 00 00       	mov    $0x1,%esi
    c4f5:	48 8d 05 55 e8 00 00 	lea    0xe855(%rip),%rax        # 1ad51 <__PRETTY_FUNCTION__.0+0x79>
    c4fc:	48 89 c7             	mov    %rax,%rdi
    c4ff:	e8 4c 60 ff ff       	call   2550 <fwrite@plt>
    c504:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    c508:	8b 45 f0             	mov    -0x10(%rbp),%eax
    c50b:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    c50e:	7c d4                	jl     c4e4 <PrintSymTab+0x4f>
    c510:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c514:	48 89 c1             	mov    %rax,%rcx
    c517:	ba 0d 00 00 00       	mov    $0xd,%edx
    c51c:	be 01 00 00 00       	mov    $0x1,%esi
    c521:	48 8d 05 2c e8 00 00 	lea    0xe82c(%rip),%rax        # 1ad54 <__PRETTY_FUNCTION__.0+0x7c>
    c528:	48 89 c7             	mov    %rax,%rdi
    c52b:	e8 20 60 ff ff       	call   2550 <fwrite@plt>
    c530:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c533:	8d 50 01             	lea    0x1(%rax),%edx
    c536:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53a:	48 8b 40 08          	mov    0x8(%rax),%rax
    c53e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c542:	48 89 ce             	mov    %rcx,%rsi
    c545:	48 89 c7             	mov    %rax,%rdi
    c548:	e8 3e f3 ff ff       	call   b88b <PrintHashTable>
    c54d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c551:	48 8b 00             	mov    (%rax),%rax
    c554:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c558:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    c55f:	e9 91 00 00 00       	jmp    c5f5 <PrintSymTab+0x160>
    c564:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    c56b:	eb 24                	jmp    c591 <PrintSymTab+0xfc>
    c56d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c571:	48 89 c1             	mov    %rax,%rcx
    c574:	ba 02 00 00 00       	mov    $0x2,%edx
    c579:	be 01 00 00 00       	mov    $0x1,%esi
    c57e:	48 8d 05 cc e7 00 00 	lea    0xe7cc(%rip),%rax        # 1ad51 <__PRETTY_FUNCTION__.0+0x79>
    c585:	48 89 c7             	mov    %rax,%rdi
    c588:	e8 c3 5f ff ff       	call   2550 <fwrite@plt>
    c58d:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    c591:	8b 45 f0             	mov    -0x10(%rbp),%eax
    c594:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    c597:	7c d4                	jl     c56d <PrintSymTab+0xd8>
    c599:	8b 55 f4             	mov    -0xc(%rbp),%edx
    c59c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c5a0:	48 8d 0d bb e7 00 00 	lea    0xe7bb(%rip),%rcx        # 1ad62 <__PRETTY_FUNCTION__.0+0x8a>
    c5a7:	48 89 ce             	mov    %rcx,%rsi
    c5aa:	48 89 c7             	mov    %rax,%rdi
    c5ad:	b8 00 00 00 00       	mov    $0x0,%eax
    c5b2:	e8 b9 5e ff ff       	call   2470 <fprintf@plt>
    c5b7:	8b 45 dc             	mov    -0x24(%rbp),%eax
    c5ba:	8d 50 01             	lea    0x1(%rax),%edx
    c5bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c1:	48 8b 40 08          	mov    0x8(%rax),%rax
    c5c5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c5c9:	48 89 ce             	mov    %rcx,%rsi
    c5cc:	48 89 c7             	mov    %rax,%rdi
    c5cf:	e8 b7 f2 ff ff       	call   b88b <PrintHashTable>
    c5d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c5d8:	48 89 c6             	mov    %rax,%rsi
    c5db:	bf 0a 00 00 00       	mov    $0xa,%edi
    c5e0:	e8 3b 5e ff ff       	call   2420 <fputc@plt>
    c5e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e9:	48 8b 40 10          	mov    0x10(%rax),%rax
    c5ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c5f1:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    c5f5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c5fa:	0f 85 64 ff ff ff    	jne    c564 <PrintSymTab+0xcf>
    c600:	90                   	nop
    c601:	90                   	nop
    c602:	c9                   	leave
    c603:	c3                   	ret

000000000000c604 <DestroyIntList>:
    c604:	f3 0f 1e fa          	endbr64
    c608:	55                   	push   %rbp
    c609:	48 89 e5             	mov    %rsp,%rbp
    c60c:	48 83 ec 20          	sub    $0x20,%rsp
    c610:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c618:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c61c:	eb 30                	jmp    c64e <DestroyIntList+0x4a>
    c61e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c622:	48 8b 40 08          	mov    0x8(%rax),%rax
    c626:	48 89 c7             	mov    %rax,%rdi
    c629:	e8 c2 5c ff ff       	call   22f0 <free@plt>
    c62e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c632:	48 8b 40 10          	mov    0x10(%rax),%rax
    c636:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c63a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c63e:	48 89 c7             	mov    %rax,%rdi
    c641:	e8 aa 5c ff ff       	call   22f0 <free@plt>
    c646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c64a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c64e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c653:	75 c9                	jne    c61e <DestroyIntList+0x1a>
    c655:	90                   	nop
    c656:	90                   	nop
    c657:	c9                   	leave
    c658:	c3                   	ret

000000000000c659 <ConvertParserTypeToVarType>:
    c659:	f3 0f 1e fa          	endbr64
    c65d:	55                   	push   %rbp
    c65e:	48 89 e5             	mov    %rsp,%rbp
    c661:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c664:	81 7d fc 0e 01 00 00 	cmpl   $0x10e,-0x4(%rbp)
    c66b:	74 44                	je     c6b1 <ConvertParserTypeToVarType+0x58>
    c66d:	81 7d fc 0e 01 00 00 	cmpl   $0x10e,-0x4(%rbp)
    c674:	7f 42                	jg     c6b8 <ConvertParserTypeToVarType+0x5f>
    c676:	81 7d fc 0d 01 00 00 	cmpl   $0x10d,-0x4(%rbp)
    c67d:	74 24                	je     c6a3 <ConvertParserTypeToVarType+0x4a>
    c67f:	81 7d fc 0d 01 00 00 	cmpl   $0x10d,-0x4(%rbp)
    c686:	7f 30                	jg     c6b8 <ConvertParserTypeToVarType+0x5f>
    c688:	81 7d fc 0b 01 00 00 	cmpl   $0x10b,-0x4(%rbp)
    c68f:	74 0b                	je     c69c <ConvertParserTypeToVarType+0x43>
    c691:	81 7d fc 0c 01 00 00 	cmpl   $0x10c,-0x4(%rbp)
    c698:	74 10                	je     c6aa <ConvertParserTypeToVarType+0x51>
    c69a:	eb 1c                	jmp    c6b8 <ConvertParserTypeToVarType+0x5f>
    c69c:	b8 00 00 00 00       	mov    $0x0,%eax
    c6a1:	eb 1a                	jmp    c6bd <ConvertParserTypeToVarType+0x64>
    c6a3:	b8 01 00 00 00       	mov    $0x1,%eax
    c6a8:	eb 13                	jmp    c6bd <ConvertParserTypeToVarType+0x64>
    c6aa:	b8 02 00 00 00       	mov    $0x2,%eax
    c6af:	eb 0c                	jmp    c6bd <ConvertParserTypeToVarType+0x64>
    c6b1:	b8 05 00 00 00       	mov    $0x5,%eax
    c6b6:	eb 05                	jmp    c6bd <ConvertParserTypeToVarType+0x64>
    c6b8:	b8 04 00 00 00       	mov    $0x4,%eax
    c6bd:	5d                   	pop    %rbp
    c6be:	c3                   	ret

000000000000c6bf <GetFlatTypeListForMangling>:
    c6bf:	f3 0f 1e fa          	endbr64
    c6c3:	55                   	push   %rbp
    c6c4:	48 89 e5             	mov    %rsp,%rbp
    c6c7:	48 83 ec 60          	sub    $0x60,%rsp
    c6cb:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    c6cf:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    c6d3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c6da:	00 00
    c6dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c6e0:	31 c0                	xor    %eax,%eax
    c6e2:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    c6e7:	75 0a                	jne    c6f3 <GetFlatTypeListForMangling+0x34>
    c6e9:	b8 00 00 00 00       	mov    $0x0,%eax
    c6ee:	e9 3b 01 00 00       	jmp    c82e <GetFlatTypeListForMangling+0x16f>
    c6f3:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    c6fa:	00
    c6fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c6ff:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c703:	e9 17 01 00 00       	jmp    c81f <GetFlatTypeListForMangling+0x160>
    c708:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c70c:	48 8b 40 08          	mov    0x8(%rax),%rax
    c710:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c714:	c7 45 bc 04 00 00 00 	movl   $0x4,-0x44(%rbp)
    c71b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c71f:	8b 40 04             	mov    0x4(%rax),%eax
    c722:	83 f8 02             	cmp    $0x2,%eax
    c725:	75 64                	jne    c78b <GetFlatTypeListForMangling+0xcc>
    c727:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c72b:	48 8b 40 08          	mov    0x8(%rax),%rax
    c72f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c737:	48 8b 40 18          	mov    0x18(%rax),%rax
    c73b:	48 85 c0             	test   %rax,%rax
    c73e:	74 38                	je     c778 <GetFlatTypeListForMangling+0xb9>
    c740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c744:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c748:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    c74c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c750:	48 89 ce             	mov    %rcx,%rsi
    c753:	48 89 c7             	mov    %rax,%rdi
    c756:	e8 68 f9 ff ff       	call   c0c3 <FindIdent>
    c75b:	83 f8 ff             	cmp    $0xffffffff,%eax
    c75e:	74 3e                	je     c79e <GetFlatTypeListForMangling+0xdf>
    c760:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c764:	8b 40 10             	mov    0x10(%rax),%eax
    c767:	83 f8 06             	cmp    $0x6,%eax
    c76a:	75 32                	jne    c79e <GetFlatTypeListForMangling+0xdf>
    c76c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c770:	8b 40 14             	mov    0x14(%rax),%eax
    c773:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c776:	eb 26                	jmp    c79e <GetFlatTypeListForMangling+0xdf>
    c778:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c77c:	8b 40 10             	mov    0x10(%rax),%eax
    c77f:	89 c7                	mov    %eax,%edi
    c781:	e8 d3 fe ff ff       	call   c659 <ConvertParserTypeToVarType>
    c786:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c789:	eb 13                	jmp    c79e <GetFlatTypeListForMangling+0xdf>
    c78b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c78f:	48 8b 40 08          	mov    0x8(%rax),%rax
    c793:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c797:	c7 45 bc ff ff ff ff 	movl   $0xffffffff,-0x44(%rbp)
    c79e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c7a2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c7a6:	eb 64                	jmp    c80c <GetFlatTypeListForMangling+0x14d>
    c7a8:	bf 04 00 00 00       	mov    $0x4,%edi
    c7ad:	e8 1e 5d ff ff       	call   24d0 <malloc@plt>
    c7b2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c7b6:	8b 55 bc             	mov    -0x44(%rbp),%edx
    c7b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7bd:	89 10                	mov    %edx,(%rax)
    c7bf:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c7c4:	75 17                	jne    c7dd <GetFlatTypeListForMangling+0x11e>
    c7c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7ca:	be 04 00 00 00       	mov    $0x4,%esi
    c7cf:	48 89 c7             	mov    %rax,%rdi
    c7d2:	e8 24 ba ff ff       	call   81fb <CreateListNode>
    c7d7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c7db:	eb 23                	jmp    c800 <GetFlatTypeListForMangling+0x141>
    c7dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7e1:	be 04 00 00 00       	mov    $0x4,%esi
    c7e6:	48 89 c7             	mov    %rax,%rdi
    c7e9:	e8 0d ba ff ff       	call   81fb <CreateListNode>
    c7ee:	48 89 c2             	mov    %rax,%rdx
    c7f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c7f5:	48 89 d6             	mov    %rdx,%rsi
    c7f8:	48 89 c7             	mov    %rax,%rdi
    c7fb:	e8 c7 ba ff ff       	call   82c7 <PushListNodeBack>
    c800:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c804:	48 8b 40 10          	mov    0x10(%rax),%rax
    c808:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c80c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c811:	75 95                	jne    c7a8 <GetFlatTypeListForMangling+0xe9>
    c813:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c817:	48 8b 40 10          	mov    0x10(%rax),%rax
    c81b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c81f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c824:	0f 85 de fe ff ff    	jne    c708 <GetFlatTypeListForMangling+0x49>
    c82a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c82e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c832:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    c839:	00 00
    c83b:	74 05                	je     c842 <GetFlatTypeListForMangling+0x183>
    c83d:	e8 5e 5b ff ff       	call   23a0 <__stack_chk_fail@plt>
    c842:	c9                   	leave
    c843:	c3                   	ret

000000000000c844 <MangleNameFromTypeList>:
    c844:	f3 0f 1e fa          	endbr64
    c848:	55                   	push   %rbp
    c849:	48 89 e5             	mov    %rsp,%rbp
    c84c:	53                   	push   %rbx
    c84d:	48 83 ec 58          	sub    $0x58,%rsp
    c851:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    c855:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    c859:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    c85e:	75 62                	jne    c8c2 <MangleNameFromTypeList+0x7e>
    c860:	48 8d 05 2d e6 00 00 	lea    0xe62d(%rip),%rax        # 1ae94 <__PRETTY_FUNCTION__.0+0xc>
    c867:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c86b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c86f:	48 89 c7             	mov    %rax,%rdi
    c872:	e8 19 5b ff ff       	call   2390 <strlen@plt>
    c877:	48 89 c3             	mov    %rax,%rbx
    c87a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c87e:	48 89 c7             	mov    %rax,%rdi
    c881:	e8 0a 5b ff ff       	call   2390 <strlen@plt>
    c886:	48 01 d8             	add    %rbx,%rax
    c889:	48 83 c0 01          	add    $0x1,%rax
    c88d:	48 89 c7             	mov    %rax,%rdi
    c890:	e8 3b 5c ff ff       	call   24d0 <malloc@plt>
    c895:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c899:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c89d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c8a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8a5:	48 8d 35 ee e5 00 00 	lea    0xe5ee(%rip),%rsi        # 1ae9a <__PRETTY_FUNCTION__.0+0x12>
    c8ac:	48 89 c7             	mov    %rax,%rdi
    c8af:	b8 00 00 00 00       	mov    $0x0,%eax
    c8b4:	e8 77 5c ff ff       	call   2530 <sprintf@plt>
    c8b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8bd:	e9 22 01 00 00       	jmp    c9e4 <MangleNameFromTypeList+0x1a0>
    c8c2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c8c6:	48 89 c7             	mov    %rax,%rdi
    c8c9:	e8 c2 5a ff ff       	call   2390 <strlen@plt>
    c8ce:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c8d2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c8d6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c8da:	eb 11                	jmp    c8ed <MangleNameFromTypeList+0xa9>
    c8dc:	48 83 45 c0 04       	addq   $0x4,-0x40(%rbp)
    c8e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c8e5:	48 8b 40 10          	mov    0x10(%rax),%rax
    c8e9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c8ed:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c8f2:	75 e8                	jne    c8dc <MangleNameFromTypeList+0x98>
    c8f4:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    c8f9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c8fd:	48 89 c7             	mov    %rax,%rdi
    c900:	e8 cb 5b ff ff       	call   24d0 <malloc@plt>
    c905:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c909:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c90d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c911:	48 89 d6             	mov    %rdx,%rsi
    c914:	48 89 c7             	mov    %rax,%rdi
    c917:	e8 04 5a ff ff       	call   2320 <strcpy@plt>
    c91c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c920:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c924:	e9 a0 00 00 00       	jmp    c9c9 <MangleNameFromTypeList+0x185>
    c929:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c92d:	48 8b 40 08          	mov    0x8(%rax),%rax
    c931:	8b 00                	mov    (%rax),%eax
    c933:	89 45 bc             	mov    %eax,-0x44(%rbp)
    c936:	8b 45 bc             	mov    -0x44(%rbp),%eax
    c939:	83 f8 ff             	cmp    $0xffffffff,%eax
    c93c:	74 53                	je     c991 <MangleNameFromTypeList+0x14d>
    c93e:	83 f8 05             	cmp    $0x5,%eax
    c941:	74 41                	je     c984 <MangleNameFromTypeList+0x140>
    c943:	83 f8 05             	cmp    $0x5,%eax
    c946:	77 56                	ja     c99e <MangleNameFromTypeList+0x15a>
    c948:	83 f8 02             	cmp    $0x2,%eax
    c94b:	74 2a                	je     c977 <MangleNameFromTypeList+0x133>
    c94d:	83 f8 02             	cmp    $0x2,%eax
    c950:	77 4c                	ja     c99e <MangleNameFromTypeList+0x15a>
    c952:	85 c0                	test   %eax,%eax
    c954:	74 07                	je     c95d <MangleNameFromTypeList+0x119>
    c956:	83 f8 01             	cmp    $0x1,%eax
    c959:	74 0f                	je     c96a <MangleNameFromTypeList+0x126>
    c95b:	eb 41                	jmp    c99e <MangleNameFromTypeList+0x15a>
    c95d:	48 8d 05 3b e5 00 00 	lea    0xe53b(%rip),%rax        # 1ae9f <__PRETTY_FUNCTION__.0+0x17>
    c964:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c968:	eb 40                	jmp    c9aa <MangleNameFromTypeList+0x166>
    c96a:	48 8d 05 31 e5 00 00 	lea    0xe531(%rip),%rax        # 1aea2 <__PRETTY_FUNCTION__.0+0x1a>
    c971:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c975:	eb 33                	jmp    c9aa <MangleNameFromTypeList+0x166>
    c977:	48 8d 05 28 e5 00 00 	lea    0xe528(%rip),%rax        # 1aea6 <__PRETTY_FUNCTION__.0+0x1e>
    c97e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c982:	eb 26                	jmp    c9aa <MangleNameFromTypeList+0x166>
    c984:	48 8d 05 1e e5 00 00 	lea    0xe51e(%rip),%rax        # 1aea9 <__PRETTY_FUNCTION__.0+0x21>
    c98b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c98f:	eb 19                	jmp    c9aa <MangleNameFromTypeList+0x166>
    c991:	48 8d 05 14 e5 00 00 	lea    0xe514(%rip),%rax        # 1aeac <__PRETTY_FUNCTION__.0+0x24>
    c998:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c99c:	eb 0c                	jmp    c9aa <MangleNameFromTypeList+0x166>
    c99e:	48 8d 05 0a e5 00 00 	lea    0xe50a(%rip),%rax        # 1aeaf <__PRETTY_FUNCTION__.0+0x27>
    c9a5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c9a9:	90                   	nop
    c9aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c9ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9b2:	48 89 d6             	mov    %rdx,%rsi
    c9b5:	48 89 c7             	mov    %rax,%rdi
    c9b8:	e8 63 5b ff ff       	call   2520 <strcat@plt>
    c9bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c9c1:	48 8b 40 10          	mov    0x10(%rax),%rax
    c9c5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c9c9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c9ce:	0f 85 55 ff ff ff    	jne    c929 <MangleNameFromTypeList+0xe5>
    c9d4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c9d8:	48 89 c7             	mov    %rax,%rdi
    c9db:	e8 24 fc ff ff       	call   c604 <DestroyIntList>
    c9e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c9e8:	c9                   	leave
    c9e9:	c3                   	ret

000000000000c9ea <MangleFunctionName>:
    c9ea:	f3 0f 1e fa          	endbr64
    c9ee:	55                   	push   %rbp
    c9ef:	48 89 e5             	mov    %rsp,%rbp
    c9f2:	48 83 ec 30          	sub    $0x30,%rsp
    c9f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c9fe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ca02:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ca06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca0a:	48 89 d6             	mov    %rdx,%rsi
    ca0d:	48 89 c7             	mov    %rax,%rdi
    ca10:	e8 aa fc ff ff       	call   c6bf <GetFlatTypeListForMangling>
    ca15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ca19:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca21:	48 89 d6             	mov    %rdx,%rsi
    ca24:	48 89 c7             	mov    %rax,%rdi
    ca27:	e8 18 fe ff ff       	call   c844 <MangleNameFromTypeList>
    ca2c:	c9                   	leave
    ca2d:	c3                   	ret

000000000000ca2e <GetFlatTypeListFromCallSite>:
    ca2e:	f3 0f 1e fa          	endbr64
    ca32:	55                   	push   %rbp
    ca33:	48 89 e5             	mov    %rsp,%rbp
    ca36:	48 83 ec 50          	sub    $0x50,%rsp
    ca3a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ca3e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    ca42:	89 55 bc             	mov    %edx,-0x44(%rbp)
    ca45:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ca4c:	00 00
    ca4e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ca52:	31 c0                	xor    %eax,%eax
    ca54:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    ca59:	75 0a                	jne    ca65 <GetFlatTypeListFromCallSite+0x37>
    ca5b:	b8 00 00 00 00       	mov    $0x0,%eax
    ca60:	e9 b2 00 00 00       	jmp    cb17 <GetFlatTypeListFromCallSite+0xe9>
    ca65:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    ca6c:	00
    ca6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca71:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ca75:	e9 8e 00 00 00       	jmp    cb08 <GetFlatTypeListFromCallSite+0xda>
    ca7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca7e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ca82:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    ca85:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    ca89:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    ca8d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ca93:	48 89 c7             	mov    %rax,%rdi
    ca96:	e8 6d 14 00 00       	call   df08 <semcheck_expr_main>
    ca9b:	bf 04 00 00 00       	mov    $0x4,%edi
    caa0:	e8 2b 5a ff ff       	call   24d0 <malloc@plt>
    caa5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    caa9:	8b 45 dc             	mov    -0x24(%rbp),%eax
    caac:	89 c7                	mov    %eax,%edi
    caae:	e8 a6 fb ff ff       	call   c659 <ConvertParserTypeToVarType>
    cab3:	89 c2                	mov    %eax,%edx
    cab5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cab9:	89 10                	mov    %edx,(%rax)
    cabb:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cac0:	75 17                	jne    cad9 <GetFlatTypeListFromCallSite+0xab>
    cac2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cac6:	be 04 00 00 00       	mov    $0x4,%esi
    cacb:	48 89 c7             	mov    %rax,%rdi
    cace:	e8 28 b7 ff ff       	call   81fb <CreateListNode>
    cad3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    cad7:	eb 23                	jmp    cafc <GetFlatTypeListFromCallSite+0xce>
    cad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cadd:	be 04 00 00 00       	mov    $0x4,%esi
    cae2:	48 89 c7             	mov    %rax,%rdi
    cae5:	e8 11 b7 ff ff       	call   81fb <CreateListNode>
    caea:	48 89 c2             	mov    %rax,%rdx
    caed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    caf1:	48 89 d6             	mov    %rdx,%rsi
    caf4:	48 89 c7             	mov    %rax,%rdi
    caf7:	e8 cb b7 ff ff       	call   82c7 <PushListNodeBack>
    cafc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb00:	48 8b 40 10          	mov    0x10(%rax),%rax
    cb04:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cb08:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cb0d:	0f 85 67 ff ff ff    	jne    ca7a <GetFlatTypeListFromCallSite+0x4c>
    cb13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb17:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb1b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    cb22:	00 00
    cb24:	74 05                	je     cb2b <GetFlatTypeListFromCallSite+0xfd>
    cb26:	e8 75 58 ff ff       	call   23a0 <__stack_chk_fail@plt>
    cb2b:	c9                   	leave
    cb2c:	c3                   	ret

000000000000cb2d <MangleFunctionNameFromCallSite>:
    cb2d:	f3 0f 1e fa          	endbr64
    cb31:	55                   	push   %rbp
    cb32:	48 89 e5             	mov    %rsp,%rbp
    cb35:	48 83 ec 30          	sub    $0x30,%rsp
    cb39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cb41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    cb45:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    cb48:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    cb4b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    cb4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb53:	48 89 ce             	mov    %rcx,%rsi
    cb56:	48 89 c7             	mov    %rax,%rdi
    cb59:	e8 d0 fe ff ff       	call   ca2e <GetFlatTypeListFromCallSite>
    cb5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cb62:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb6a:	48 89 d6             	mov    %rdx,%rsi
    cb6d:	48 89 c7             	mov    %rax,%rdi
    cb70:	e8 cf fc ff ff       	call   c844 <MangleNameFromTypeList>
    cb75:	c9                   	leave
    cb76:	c3                   	ret

000000000000cb77 <semcheck_stmt>:
    cb77:	f3 0f 1e fa          	endbr64
    cb7b:	55                   	push   %rbp
    cb7c:	48 89 e5             	mov    %rsp,%rbp
    cb7f:	48 83 ec 20          	sub    $0x20,%rsp
    cb83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb8b:	89 55 ec             	mov    %edx,-0x14(%rbp)
    cb8e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    cb91:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cb95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb99:	48 89 ce             	mov    %rcx,%rsi
    cb9c:	48 89 c7             	mov    %rax,%rdi
    cb9f:	e8 30 00 00 00       	call   cbd4 <semcheck_stmt_main>
    cba4:	c9                   	leave
    cba5:	c3                   	ret

000000000000cba6 <semcheck_func_stmt>:
    cba6:	f3 0f 1e fa          	endbr64
    cbaa:	55                   	push   %rbp
    cbab:	48 89 e5             	mov    %rsp,%rbp
    cbae:	48 83 ec 10          	sub    $0x10,%rsp
    cbb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cbbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc2:	ba 00 00 00 00       	mov    $0x0,%edx
    cbc7:	48 89 ce             	mov    %rcx,%rsi
    cbca:	48 89 c7             	mov    %rax,%rdi
    cbcd:	e8 02 00 00 00       	call   cbd4 <semcheck_stmt_main>
    cbd2:	c9                   	leave
    cbd3:	c3                   	ret

000000000000cbd4 <semcheck_stmt_main>:
    cbd4:	f3 0f 1e fa          	endbr64
    cbd8:	55                   	push   %rbp
    cbd9:	48 89 e5             	mov    %rsp,%rbp
    cbdc:	48 83 ec 30          	sub    $0x30,%rsp
    cbe0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbe4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cbe8:	89 55 dc             	mov    %edx,-0x24(%rbp)
    cbeb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cbf0:	75 28                	jne    cc1a <semcheck_stmt_main+0x46>
    cbf2:	48 8d 05 37 e9 00 00 	lea    0xe937(%rip),%rax        # 1b530 <__PRETTY_FUNCTION__.7>
    cbf9:	48 89 c1             	mov    %rax,%rcx
    cbfc:	ba 34 00 00 00       	mov    $0x34,%edx
    cc01:	48 8d 05 b8 e2 00 00 	lea    0xe2b8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cc08:	48 89 c6             	mov    %rax,%rsi
    cc0b:	48 8d 05 e4 e2 00 00 	lea    0xe2e4(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    cc12:	48 89 c7             	mov    %rax,%rdi
    cc15:	e8 b6 57 ff ff       	call   23d0 <__assert_fail@plt>
    cc1a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cc1f:	75 28                	jne    cc49 <semcheck_stmt_main+0x75>
    cc21:	48 8d 05 08 e9 00 00 	lea    0xe908(%rip),%rax        # 1b530 <__PRETTY_FUNCTION__.7>
    cc28:	48 89 c1             	mov    %rax,%rcx
    cc2b:	ba 35 00 00 00       	mov    $0x35,%edx
    cc30:	48 8d 05 89 e2 00 00 	lea    0xe289(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cc37:	48 89 c6             	mov    %rax,%rsi
    cc3a:	48 8d 05 c4 e2 00 00 	lea    0xe2c4(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    cc41:	48 89 c7             	mov    %rax,%rdi
    cc44:	e8 87 57 ff ff       	call   23d0 <__assert_fail@plt>
    cc49:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    cc50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc54:	8b 40 04             	mov    0x4(%rax),%eax
    cc57:	83 f8 08             	cmp    $0x8,%eax
    cc5a:	0f 87 cb 00 00 00    	ja     cd2b <semcheck_stmt_main+0x157>
    cc60:	89 c0                	mov    %eax,%eax
    cc62:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    cc69:	00
    cc6a:	48 8d 05 cb e2 00 00 	lea    0xe2cb(%rip),%rax        # 1af3c <__PRETTY_FUNCTION__.0+0xb4>
    cc71:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    cc74:	48 98                	cltq
    cc76:	48 8d 15 bf e2 00 00 	lea    0xe2bf(%rip),%rdx        # 1af3c <__PRETTY_FUNCTION__.0+0xb4>
    cc7d:	48 01 d0             	add    %rdx,%rax
    cc80:	3e ff e0             	notrack jmp *%rax
    cc83:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cc86:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cc8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc8e:	48 89 ce             	mov    %rcx,%rsi
    cc91:	48 89 c7             	mov    %rax,%rdi
    cc94:	e8 c5 00 00 00       	call   cd5e <semcheck_varassign>
    cc99:	01 45 fc             	add    %eax,-0x4(%rbp)
    cc9c:	e9 b8 00 00 00       	jmp    cd59 <semcheck_stmt_main+0x185>
    cca1:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cca4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cca8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccac:	48 89 ce             	mov    %rcx,%rsi
    ccaf:	48 89 c7             	mov    %rax,%rdi
    ccb2:	e8 0a 02 00 00       	call   cec1 <semcheck_proccall>
    ccb7:	01 45 fc             	add    %eax,-0x4(%rbp)
    ccba:	e9 9a 00 00 00       	jmp    cd59 <semcheck_stmt_main+0x185>
    ccbf:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ccc2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ccc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccca:	48 89 ce             	mov    %rcx,%rsi
    cccd:	48 89 c7             	mov    %rax,%rdi
    ccd0:	e8 ae 07 00 00       	call   d483 <semcheck_compoundstmt>
    ccd5:	01 45 fc             	add    %eax,-0x4(%rbp)
    ccd8:	eb 7f                	jmp    cd59 <semcheck_stmt_main+0x185>
    ccda:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ccdd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cce1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cce5:	48 89 ce             	mov    %rcx,%rsi
    cce8:	48 89 c7             	mov    %rax,%rdi
    cceb:	e8 b9 08 00 00       	call   d5a9 <semcheck_ifthen>
    ccf0:	01 45 fc             	add    %eax,-0x4(%rbp)
    ccf3:	eb 64                	jmp    cd59 <semcheck_stmt_main+0x185>
    ccf5:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ccf8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ccfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd00:	48 89 ce             	mov    %rcx,%rsi
    cd03:	48 89 c7             	mov    %rax,%rdi
    cd06:	e8 27 0a 00 00       	call   d732 <semcheck_while>
    cd0b:	01 45 fc             	add    %eax,-0x4(%rbp)
    cd0e:	eb 49                	jmp    cd59 <semcheck_stmt_main+0x185>
    cd10:	8b 55 dc             	mov    -0x24(%rbp),%edx
    cd13:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cd17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd1b:	48 89 ce             	mov    %rcx,%rsi
    cd1e:	48 89 c7             	mov    %rax,%rdi
    cd21:	e8 69 0b 00 00       	call   d88f <semcheck_for>
    cd26:	01 45 fc             	add    %eax,-0x4(%rbp)
    cd29:	eb 2e                	jmp    cd59 <semcheck_stmt_main+0x185>
    cd2b:	48 8b 05 2e 53 01 00 	mov    0x1532e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    cd32:	48 89 c1             	mov    %rax,%rcx
    cd35:	ba 22 00 00 00       	mov    $0x22,%edx
    cd3a:	be 01 00 00 00       	mov    $0x1,%esi
    cd3f:	48 8d 05 d2 e1 00 00 	lea    0xe1d2(%rip),%rax        # 1af18 <__PRETTY_FUNCTION__.0+0x90>
    cd46:	48 89 c7             	mov    %rax,%rdi
    cd49:	e8 02 58 ff ff       	call   2550 <fwrite@plt>
    cd4e:	bf 01 00 00 00       	mov    $0x1,%edi
    cd53:	e8 e8 57 ff ff       	call   2540 <exit@plt>
    cd58:	90                   	nop
    cd59:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cd5c:	c9                   	leave
    cd5d:	c3                   	ret

000000000000cd5e <semcheck_varassign>:
    cd5e:	f3 0f 1e fa          	endbr64
    cd62:	55                   	push   %rbp
    cd63:	48 89 e5             	mov    %rsp,%rbp
    cd66:	48 83 ec 50          	sub    $0x50,%rsp
    cd6a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    cd6e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    cd72:	89 55 bc             	mov    %edx,-0x44(%rbp)
    cd75:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cd7c:	00 00
    cd7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cd82:	31 c0                	xor    %eax,%eax
    cd84:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    cd89:	75 28                	jne    cdb3 <semcheck_varassign+0x55>
    cd8b:	48 8d 05 be e7 00 00 	lea    0xe7be(%rip),%rax        # 1b550 <__PRETTY_FUNCTION__.6>
    cd92:	48 89 c1             	mov    %rax,%rcx
    cd95:	ba 68 00 00 00       	mov    $0x68,%edx
    cd9a:	48 8d 05 1f e1 00 00 	lea    0xe11f(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cda1:	48 89 c6             	mov    %rax,%rsi
    cda4:	48 8d 05 4b e1 00 00 	lea    0xe14b(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    cdab:	48 89 c7             	mov    %rax,%rdi
    cdae:	e8 1d 56 ff ff       	call   23d0 <__assert_fail@plt>
    cdb3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    cdb8:	75 28                	jne    cde2 <semcheck_varassign+0x84>
    cdba:	48 8d 05 8f e7 00 00 	lea    0xe78f(%rip),%rax        # 1b550 <__PRETTY_FUNCTION__.6>
    cdc1:	48 89 c1             	mov    %rax,%rcx
    cdc4:	ba 69 00 00 00       	mov    $0x69,%edx
    cdc9:	48 8d 05 f0 e0 00 00 	lea    0xe0f0(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cdd0:	48 89 c6             	mov    %rax,%rsi
    cdd3:	48 8d 05 2b e1 00 00 	lea    0xe12b(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    cdda:	48 89 c7             	mov    %rax,%rdi
    cddd:	e8 ee 55 ff ff       	call   23d0 <__assert_fail@plt>
    cde2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cde6:	8b 40 04             	mov    0x4(%rax),%eax
    cde9:	85 c0                	test   %eax,%eax
    cdeb:	74 28                	je     ce15 <semcheck_varassign+0xb7>
    cded:	48 8d 05 5c e7 00 00 	lea    0xe75c(%rip),%rax        # 1b550 <__PRETTY_FUNCTION__.6>
    cdf4:	48 89 c1             	mov    %rax,%rcx
    cdf7:	ba 6a 00 00 00       	mov    $0x6a,%edx
    cdfc:	48 8d 05 bd e0 00 00 	lea    0xe0bd(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    ce03:	48 89 c6             	mov    %rax,%rsi
    ce06:	48 8d 05 53 e1 00 00 	lea    0xe153(%rip),%rax        # 1af60 <__PRETTY_FUNCTION__.0+0xd8>
    ce0d:	48 89 c7             	mov    %rax,%rdi
    ce10:	e8 bb 55 ff ff       	call   23d0 <__assert_fail@plt>
    ce15:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    ce1c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce20:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ce28:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce2c:	48 8b 40 10          	mov    0x10(%rax),%rax
    ce30:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ce34:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    ce37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce3b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ce3f:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    ce43:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ce49:	48 89 c7             	mov    %rax,%rdi
    ce4c:	e8 b7 10 00 00       	call   df08 <semcheck_expr_main>
    ce51:	01 45 e4             	add    %eax,-0x1c(%rbp)
    ce54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce58:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ce5c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ce60:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ce66:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    ce6b:	48 89 c7             	mov    %rax,%rdi
    ce6e:	e8 95 10 00 00       	call   df08 <semcheck_expr_main>
    ce73:	01 45 e4             	add    %eax,-0x1c(%rbp)
    ce76:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ce79:	8b 45 e0             	mov    -0x20(%rbp),%eax
    ce7c:	39 c2                	cmp    %eax,%edx
    ce7e:	74 28                	je     cea8 <semcheck_varassign+0x14a>
    ce80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce84:	8b 10                	mov    (%rax),%edx
    ce86:	48 8b 05 d3 51 01 00 	mov    0x151d3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ce8d:	48 8d 0d ec e0 00 00 	lea    0xe0ec(%rip),%rcx        # 1af80 <__PRETTY_FUNCTION__.0+0xf8>
    ce94:	48 89 ce             	mov    %rcx,%rsi
    ce97:	48 89 c7             	mov    %rax,%rdi
    ce9a:	b8 00 00 00 00       	mov    $0x0,%eax
    ce9f:	e8 cc 55 ff ff       	call   2470 <fprintf@plt>
    cea4:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    cea8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ceab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ceaf:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ceb6:	00 00
    ceb8:	74 05                	je     cebf <semcheck_varassign+0x161>
    ceba:	e8 e1 54 ff ff       	call   23a0 <__stack_chk_fail@plt>
    cebf:	c9                   	leave
    cec0:	c3                   	ret

000000000000cec1 <semcheck_proccall>:
    cec1:	f3 0f 1e fa          	endbr64
    cec5:	55                   	push   %rbp
    cec6:	48 89 e5             	mov    %rsp,%rbp
    cec9:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    ced0:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    ced7:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    cede:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
    cee4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ceeb:	00 00
    ceed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cef1:	31 c0                	xor    %eax,%eax
    cef3:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    cefa:	00
    cefb:	75 28                	jne    cf25 <semcheck_proccall+0x64>
    cefd:	48 8d 05 6c e6 00 00 	lea    0xe66c(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    cf04:	48 89 c1             	mov    %rax,%rcx
    cf07:	ba 8a 00 00 00       	mov    $0x8a,%edx
    cf0c:	48 8d 05 ad df 00 00 	lea    0xdfad(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cf13:	48 89 c6             	mov    %rax,%rsi
    cf16:	48 8d 05 d9 df 00 00 	lea    0xdfd9(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    cf1d:	48 89 c7             	mov    %rax,%rdi
    cf20:	e8 ab 54 ff ff       	call   23d0 <__assert_fail@plt>
    cf25:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    cf2c:	00
    cf2d:	75 28                	jne    cf57 <semcheck_proccall+0x96>
    cf2f:	48 8d 05 3a e6 00 00 	lea    0xe63a(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    cf36:	48 89 c1             	mov    %rax,%rcx
    cf39:	ba 8b 00 00 00       	mov    $0x8b,%edx
    cf3e:	48 8d 05 7b df 00 00 	lea    0xdf7b(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cf45:	48 89 c6             	mov    %rax,%rsi
    cf48:	48 8d 05 b6 df 00 00 	lea    0xdfb6(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    cf4f:	48 89 c7             	mov    %rax,%rdi
    cf52:	e8 79 54 ff ff       	call   23d0 <__assert_fail@plt>
    cf57:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    cf5e:	8b 40 04             	mov    0x4(%rax),%eax
    cf61:	83 f8 01             	cmp    $0x1,%eax
    cf64:	74 28                	je     cf8e <semcheck_proccall+0xcd>
    cf66:	48 8d 05 03 e6 00 00 	lea    0xe603(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    cf6d:	48 89 c1             	mov    %rax,%rcx
    cf70:	ba 8c 00 00 00       	mov    $0x8c,%edx
    cf75:	48 8d 05 44 df 00 00 	lea    0xdf44(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    cf7c:	48 89 c6             	mov    %rax,%rsi
    cf7f:	48 8d 05 3a e0 00 00 	lea    0xe03a(%rip),%rax        # 1afc0 <__PRETTY_FUNCTION__.0+0x138>
    cf86:	48 89 c7             	mov    %rax,%rdi
    cf89:	e8 42 54 ff ff       	call   23d0 <__assert_fail@plt>
    cf8e:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
    cf95:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    cf9c:	48 8b 40 08          	mov    0x8(%rax),%rax
    cfa0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    cfa4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    cfab:	48 8b 40 18          	mov    0x18(%rax),%rax
    cfaf:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    cfb3:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
    cfb9:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    cfc0:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    cfc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cfc8:	48 89 c7             	mov    %rax,%rdi
    cfcb:	e8 5d fb ff ff       	call   cb2d <MangleFunctionNameFromCallSite>
    cfd0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cfd4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cfd8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    cfdf:	48 89 d6             	mov    %rdx,%rsi
    cfe2:	48 89 c7             	mov    %rax,%rdi
    cfe5:	e8 f5 f1 ff ff       	call   c1df <FindAllIdents>
    cfea:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    cfee:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    cff5:	00
    cff6:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    cffd:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d002:	74 5d                	je     d061 <semcheck_proccall+0x1a0>
    d004:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d008:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d00c:	eb 4c                	jmp    d05a <semcheck_proccall+0x199>
    d00e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d012:	48 8b 40 08          	mov    0x8(%rax),%rax
    d016:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d01a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d01e:	48 8b 40 08          	mov    0x8(%rax),%rax
    d022:	48 85 c0             	test   %rax,%rax
    d025:	74 27                	je     d04e <semcheck_proccall+0x18d>
    d027:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d02b:	48 8b 40 08          	mov    0x8(%rax),%rax
    d02f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d033:	48 89 d6             	mov    %rdx,%rsi
    d036:	48 89 c7             	mov    %rax,%rdi
    d039:	e8 12 54 ff ff       	call   2450 <strcmp@plt>
    d03e:	85 c0                	test   %eax,%eax
    d040:	75 0c                	jne    d04e <semcheck_proccall+0x18d>
    d042:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d046:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    d04a:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
    d04e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d052:	48 8b 40 10          	mov    0x10(%rax),%rax
    d056:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d05a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d05f:	75 ad                	jne    d00e <semcheck_proccall+0x14d>
    d061:	83 7d 8c 01          	cmpl   $0x1,-0x74(%rbp)
    d065:	75 57                	jne    d0be <semcheck_proccall+0x1fd>
    d067:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d06b:	48 8b 40 08          	mov    0x8(%rax),%rax
    d06f:	48 89 c7             	mov    %rax,%rdi
    d072:	e8 e9 54 ff ff       	call   2560 <strdup@plt>
    d077:	48 89 c2             	mov    %rax,%rdx
    d07a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d081:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d085:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d08c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    d090:	48 89 50 20          	mov    %rdx,0x20(%rax)
    d094:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d098:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d09c:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    d0a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0a7:	48 89 c7             	mov    %rax,%rdi
    d0aa:	e8 41 52 ff ff       	call   22f0 <free@plt>
    d0af:	83 7d 94 ff          	cmpl   $0xffffffff,-0x6c(%rbp)
    d0b3:	0f 85 bc 00 00 00    	jne    d175 <semcheck_proccall+0x2b4>
    d0b9:	e9 86 00 00 00       	jmp    d144 <semcheck_proccall+0x283>
    d0be:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
    d0c2:	75 40                	jne    d104 <semcheck_proccall+0x243>
    d0c4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d0cb:	8b 10                	mov    (%rax),%edx
    d0cd:	48 8b 05 8c 4f 01 00 	mov    0x14f8c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d0d4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d0d8:	48 8d 35 09 df 00 00 	lea    0xdf09(%rip),%rsi        # 1afe8 <__PRETTY_FUNCTION__.0+0x160>
    d0df:	48 89 c7             	mov    %rax,%rdi
    d0e2:	b8 00 00 00 00       	mov    $0x0,%eax
    d0e7:	e8 84 53 ff ff       	call   2470 <fprintf@plt>
    d0ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0f0:	48 89 c7             	mov    %rax,%rdi
    d0f3:	e8 f8 51 ff ff       	call   22f0 <free@plt>
    d0f8:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d0fc:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d0ff:	e9 69 03 00 00       	jmp    d46d <semcheck_proccall+0x5ac>
    d104:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d10b:	8b 10                	mov    (%rax),%edx
    d10d:	48 8b 05 4c 4f 01 00 	mov    0x14f4c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d114:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d118:	48 8d 35 19 df 00 00 	lea    0xdf19(%rip),%rsi        # 1b038 <__PRETTY_FUNCTION__.0+0x1b0>
    d11f:	48 89 c7             	mov    %rax,%rdi
    d122:	b8 00 00 00 00       	mov    $0x0,%eax
    d127:	e8 44 53 ff ff       	call   2470 <fprintf@plt>
    d12c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d130:	48 89 c7             	mov    %rax,%rdi
    d133:	e8 b8 51 ff ff       	call   22f0 <free@plt>
    d138:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d13c:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d13f:	e9 29 03 00 00       	jmp    d46d <semcheck_proccall+0x5ac>
    d144:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d14b:	8b 10                	mov    (%rax),%edx
    d14d:	48 8b 05 0c 4f 01 00 	mov    0x14f0c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d154:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d158:	48 8d 35 11 df 00 00 	lea    0xdf11(%rip),%rsi        # 1b070 <__PRETTY_FUNCTION__.0+0x1e8>
    d15f:	48 89 c7             	mov    %rax,%rdi
    d162:	b8 00 00 00 00       	mov    $0x0,%eax
    d167:	e8 04 53 ff ff       	call   2470 <fprintf@plt>
    d16c:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d170:	e9 f5 02 00 00       	jmp    d46a <semcheck_proccall+0x5a9>
    d175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d179:	8b 40 20             	mov    0x20(%rax),%eax
    d17c:	8d 50 01             	lea    0x1(%rax),%edx
    d17f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d183:	89 50 20             	mov    %edx,0x20(%rax)
    d186:	8b 45 94             	mov    -0x6c(%rbp),%eax
    d189:	3b 85 6c ff ff ff    	cmp    -0x94(%rbp),%eax
    d18f:	7e 4f                	jle    d1e0 <semcheck_proccall+0x31f>
    d191:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d198:	8b 10                	mov    (%rax),%edx
    d19a:	48 8b 05 bf 4e 01 00 	mov    0x14ebf(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d1a1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d1a5:	48 8d 35 fc de 00 00 	lea    0xdefc(%rip),%rsi        # 1b0a8 <__PRETTY_FUNCTION__.0+0x220>
    d1ac:	48 89 c7             	mov    %rax,%rdi
    d1af:	b8 00 00 00 00       	mov    $0x0,%eax
    d1b4:	e8 b7 52 ff ff       	call   2470 <fprintf@plt>
    d1b9:	48 8b 05 a0 4e 01 00 	mov    0x14ea0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d1c0:	48 89 c1             	mov    %rax,%rcx
    d1c3:	ba 35 00 00 00       	mov    $0x35,%edx
    d1c8:	be 01 00 00 00       	mov    $0x1,%esi
    d1cd:	48 8d 05 14 df 00 00 	lea    0xdf14(%rip),%rax        # 1b0e8 <__PRETTY_FUNCTION__.0+0x260>
    d1d4:	48 89 c7             	mov    %rax,%rdi
    d1d7:	e8 74 53 ff ff       	call   2550 <fwrite@plt>
    d1dc:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d1e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1e4:	8b 40 10             	mov    0x10(%rax),%eax
    d1e7:	83 f8 02             	cmp    $0x2,%eax
    d1ea:	74 38                	je     d224 <semcheck_proccall+0x363>
    d1ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1f0:	8b 40 10             	mov    0x10(%rax),%eax
    d1f3:	83 f8 05             	cmp    $0x5,%eax
    d1f6:	74 2c                	je     d224 <semcheck_proccall+0x363>
    d1f8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d1ff:	8b 10                	mov    (%rax),%edx
    d201:	48 8b 05 58 4e 01 00 	mov    0x14e58(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d208:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d20c:	48 8d 35 0d df 00 00 	lea    0xdf0d(%rip),%rsi        # 1b120 <__PRETTY_FUNCTION__.0+0x298>
    d213:	48 89 c7             	mov    %rax,%rdi
    d216:	b8 00 00 00 00       	mov    $0x0,%eax
    d21b:	e8 50 52 ff ff       	call   2470 <fprintf@plt>
    d220:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d224:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    d22b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d22f:	48 8b 40 18          	mov    0x18(%rax),%rax
    d233:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d237:	e9 a6 01 00 00       	jmp    d3e2 <semcheck_proccall+0x521>
    d23c:	83 45 88 01          	addl   $0x1,-0x78(%rbp)
    d240:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d244:	8b 00                	mov    (%rax),%eax
    d246:	83 f8 02             	cmp    $0x2,%eax
    d249:	74 28                	je     d273 <semcheck_proccall+0x3b2>
    d24b:	48 8d 05 1e e3 00 00 	lea    0xe31e(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    d252:	48 89 c1             	mov    %rax,%rcx
    d255:	ba dd 00 00 00       	mov    $0xdd,%edx
    d25a:	48 8d 05 5f dc 00 00 	lea    0xdc5f(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d261:	48 89 c6             	mov    %rax,%rsi
    d264:	48 8d 05 f3 de 00 00 	lea    0xdef3(%rip),%rax        # 1b15e <__PRETTY_FUNCTION__.0+0x2d6>
    d26b:	48 89 c7             	mov    %rax,%rdi
    d26e:	e8 5d 51 ff ff       	call   23d0 <__assert_fail@plt>
    d273:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d277:	8b 00                	mov    (%rax),%eax
    d279:	85 c0                	test   %eax,%eax
    d27b:	74 28                	je     d2a5 <semcheck_proccall+0x3e4>
    d27d:	48 8d 05 ec e2 00 00 	lea    0xe2ec(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    d284:	48 89 c1             	mov    %rax,%rcx
    d287:	ba de 00 00 00       	mov    $0xde,%edx
    d28c:	48 8d 05 2d dc 00 00 	lea    0xdc2d(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d293:	48 89 c6             	mov    %rax,%rsi
    d296:	48 8d 05 df de 00 00 	lea    0xdedf(%rip),%rax        # 1b17c <__PRETTY_FUNCTION__.0+0x2f4>
    d29d:	48 89 c7             	mov    %rax,%rdi
    d2a0:	e8 2b 51 ff ff       	call   23d0 <__assert_fail@plt>
    d2a5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d2a9:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d2ad:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
    d2b4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d2b8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d2be:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d2c3:	48 89 c7             	mov    %rax,%rdi
    d2c6:	e8 3d 0c 00 00       	call   df08 <semcheck_expr_main>
    d2cb:	01 45 84             	add    %eax,-0x7c(%rbp)
    d2ce:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d2d2:	48 8b 40 08          	mov    0x8(%rax),%rax
    d2d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d2da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d2de:	8b 40 04             	mov    0x4(%rax),%eax
    d2e1:	83 f8 02             	cmp    $0x2,%eax
    d2e4:	74 28                	je     d30e <semcheck_proccall+0x44d>
    d2e6:	48 8d 05 83 e2 00 00 	lea    0xe283(%rip),%rax        # 1b570 <__PRETTY_FUNCTION__.5>
    d2ed:	48 89 c1             	mov    %rax,%rcx
    d2f0:	ba e3 00 00 00       	mov    $0xe3,%edx
    d2f5:	48 8d 05 c4 db 00 00 	lea    0xdbc4(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d2fc:	48 89 c6             	mov    %rax,%rsi
    d2ff:	48 8d 05 9a de 00 00 	lea    0xde9a(%rip),%rax        # 1b1a0 <__PRETTY_FUNCTION__.0+0x318>
    d306:	48 89 c7             	mov    %rax,%rdi
    d309:	e8 c2 50 ff ff       	call   23d0 <__assert_fail@plt>
    d30e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d312:	48 8b 40 08          	mov    0x8(%rax),%rax
    d316:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d31a:	e9 a5 00 00 00       	jmp    d3c4 <semcheck_proccall+0x503>
    d31f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d323:	8b 40 10             	mov    0x10(%rax),%eax
    d326:	89 45 90             	mov    %eax,-0x70(%rbp)
    d329:	83 7d 90 ff          	cmpl   $0xffffffff,-0x70(%rbp)
    d32d:	75 3a                	jne    d369 <semcheck_proccall+0x4a8>
    d32f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d333:	48 8b 40 18          	mov    0x18(%rax),%rax
    d337:	48 85 c0             	test   %rax,%rax
    d33a:	74 2d                	je     d369 <semcheck_proccall+0x4a8>
    d33c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d340:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d344:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    d34b:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    d34f:	48 89 ce             	mov    %rcx,%rsi
    d352:	48 89 c7             	mov    %rax,%rdi
    d355:	e8 69 ed ff ff       	call   c0c3 <FindIdent>
    d35a:	83 f8 ff             	cmp    $0xffffffff,%eax
    d35d:	74 0a                	je     d369 <semcheck_proccall+0x4a8>
    d35f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d363:	8b 40 14             	mov    0x14(%rax),%eax
    d366:	89 45 90             	mov    %eax,-0x70(%rbp)
    d369:	8b 45 80             	mov    -0x80(%rbp),%eax
    d36c:	39 45 90             	cmp    %eax,-0x70(%rbp)
    d36f:	74 3b                	je     d3ac <semcheck_proccall+0x4eb>
    d371:	81 7d 90 3a 01 00 00 	cmpl   $0x13a,-0x70(%rbp)
    d378:	74 32                	je     d3ac <semcheck_proccall+0x4eb>
    d37a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d381:	8b 10                	mov    (%rax),%edx
    d383:	48 8b 05 d6 4c 01 00 	mov    0x14cd6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d38a:	8b 75 88             	mov    -0x78(%rbp),%esi
    d38d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d391:	41 89 f0             	mov    %esi,%r8d
    d394:	48 8d 35 25 de 00 00 	lea    0xde25(%rip),%rsi        # 1b1c0 <__PRETTY_FUNCTION__.0+0x338>
    d39b:	48 89 c7             	mov    %rax,%rdi
    d39e:	b8 00 00 00 00       	mov    $0x0,%eax
    d3a3:	e8 c8 50 ff ff       	call   2470 <fprintf@plt>
    d3a8:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d3ac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d3b0:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3b4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d3b8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d3bc:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3c0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d3c4:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    d3c9:	74 0b                	je     d3d6 <semcheck_proccall+0x515>
    d3cb:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d3d0:	0f 85 49 ff ff ff    	jne    d31f <semcheck_proccall+0x45e>
    d3d6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d3da:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3de:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d3e2:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d3e7:	74 0b                	je     d3f4 <semcheck_proccall+0x533>
    d3e9:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    d3ee:	0f 85 48 fe ff ff    	jne    d23c <semcheck_proccall+0x37b>
    d3f4:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    d3f9:	75 35                	jne    d430 <semcheck_proccall+0x56f>
    d3fb:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d400:	74 2e                	je     d430 <semcheck_proccall+0x56f>
    d402:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d409:	8b 10                	mov    (%rax),%edx
    d40b:	48 8b 05 4e 4c 01 00 	mov    0x14c4e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d412:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d416:	48 8d 35 eb dd 00 00 	lea    0xddeb(%rip),%rsi        # 1b208 <__PRETTY_FUNCTION__.0+0x380>
    d41d:	48 89 c7             	mov    %rax,%rdi
    d420:	b8 00 00 00 00       	mov    $0x0,%eax
    d425:	e8 46 50 ff ff       	call   2470 <fprintf@plt>
    d42a:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d42e:	eb 3a                	jmp    d46a <semcheck_proccall+0x5a9>
    d430:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    d435:	74 33                	je     d46a <semcheck_proccall+0x5a9>
    d437:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d43c:	75 2c                	jne    d46a <semcheck_proccall+0x5a9>
    d43e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d445:	8b 10                	mov    (%rax),%edx
    d447:	48 8b 05 12 4c 01 00 	mov    0x14c12(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d44e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d452:	48 8d 35 f7 dd 00 00 	lea    0xddf7(%rip),%rsi        # 1b250 <__PRETTY_FUNCTION__.0+0x3c8>
    d459:	48 89 c7             	mov    %rax,%rdi
    d45c:	b8 00 00 00 00       	mov    $0x0,%eax
    d461:	e8 0a 50 ff ff       	call   2470 <fprintf@plt>
    d466:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    d46a:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d46d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d471:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d478:	00 00
    d47a:	74 05                	je     d481 <semcheck_proccall+0x5c0>
    d47c:	e8 1f 4f ff ff       	call   23a0 <__stack_chk_fail@plt>
    d481:	c9                   	leave
    d482:	c3                   	ret

000000000000d483 <semcheck_compoundstmt>:
    d483:	f3 0f 1e fa          	endbr64
    d487:	55                   	push   %rbp
    d488:	48 89 e5             	mov    %rsp,%rbp
    d48b:	48 83 ec 30          	sub    $0x30,%rsp
    d48f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d493:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d497:	89 55 dc             	mov    %edx,-0x24(%rbp)
    d49a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d49f:	75 28                	jne    d4c9 <semcheck_compoundstmt+0x46>
    d4a1:	48 8d 05 e8 e0 00 00 	lea    0xe0e8(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d4a8:	48 89 c1             	mov    %rax,%rcx
    d4ab:	ba 17 01 00 00       	mov    $0x117,%edx
    d4b0:	48 8d 05 09 da 00 00 	lea    0xda09(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d4b7:	48 89 c6             	mov    %rax,%rsi
    d4ba:	48 8d 05 35 da 00 00 	lea    0xda35(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d4c1:	48 89 c7             	mov    %rax,%rdi
    d4c4:	e8 07 4f ff ff       	call   23d0 <__assert_fail@plt>
    d4c9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    d4ce:	75 28                	jne    d4f8 <semcheck_compoundstmt+0x75>
    d4d0:	48 8d 05 b9 e0 00 00 	lea    0xe0b9(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d4d7:	48 89 c1             	mov    %rax,%rcx
    d4da:	ba 18 01 00 00       	mov    $0x118,%edx
    d4df:	48 8d 05 da d9 00 00 	lea    0xd9da(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d4e6:	48 89 c6             	mov    %rax,%rsi
    d4e9:	48 8d 05 15 da 00 00 	lea    0xda15(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d4f0:	48 89 c7             	mov    %rax,%rdi
    d4f3:	e8 d8 4e ff ff       	call   23d0 <__assert_fail@plt>
    d4f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4fc:	8b 40 04             	mov    0x4(%rax),%eax
    d4ff:	83 f8 02             	cmp    $0x2,%eax
    d502:	74 28                	je     d52c <semcheck_compoundstmt+0xa9>
    d504:	48 8d 05 85 e0 00 00 	lea    0xe085(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d50b:	48 89 c1             	mov    %rax,%rcx
    d50e:	ba 19 01 00 00       	mov    $0x119,%edx
    d513:	48 8d 05 a6 d9 00 00 	lea    0xd9a6(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d51a:	48 89 c6             	mov    %rax,%rsi
    d51d:	48 8d 05 74 dd 00 00 	lea    0xdd74(%rip),%rax        # 1b298 <__PRETTY_FUNCTION__.0+0x410>
    d524:	48 89 c7             	mov    %rax,%rdi
    d527:	e8 a4 4e ff ff       	call   23d0 <__assert_fail@plt>
    d52c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    d533:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d537:	48 8b 40 08          	mov    0x8(%rax),%rax
    d53b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d53f:	eb 5c                	jmp    d59d <semcheck_compoundstmt+0x11a>
    d541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d545:	8b 00                	mov    (%rax),%eax
    d547:	83 f8 01             	cmp    $0x1,%eax
    d54a:	74 28                	je     d574 <semcheck_compoundstmt+0xf1>
    d54c:	48 8d 05 3d e0 00 00 	lea    0xe03d(%rip),%rax        # 1b590 <__PRETTY_FUNCTION__.4>
    d553:	48 89 c1             	mov    %rax,%rcx
    d556:	ba 1f 01 00 00       	mov    $0x11f,%edx
    d55b:	48 8d 05 5e d9 00 00 	lea    0xd95e(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d562:	48 89 c6             	mov    %rax,%rsi
    d565:	48 8d 05 52 dd 00 00 	lea    0xdd52(%rip),%rax        # 1b2be <__PRETTY_FUNCTION__.0+0x436>
    d56c:	48 89 c7             	mov    %rax,%rdi
    d56f:	e8 5c 4e ff ff       	call   23d0 <__assert_fail@plt>
    d574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d578:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d57c:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d583:	48 89 ce             	mov    %rcx,%rsi
    d586:	48 89 c7             	mov    %rax,%rdi
    d589:	e8 46 f6 ff ff       	call   cbd4 <semcheck_stmt_main>
    d58e:	01 45 f4             	add    %eax,-0xc(%rbp)
    d591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d595:	48 8b 40 10          	mov    0x10(%rax),%rax
    d599:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d59d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d5a2:	75 9d                	jne    d541 <semcheck_compoundstmt+0xbe>
    d5a4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    d5a7:	c9                   	leave
    d5a8:	c3                   	ret

000000000000d5a9 <semcheck_ifthen>:
    d5a9:	f3 0f 1e fa          	endbr64
    d5ad:	55                   	push   %rbp
    d5ae:	48 89 e5             	mov    %rsp,%rbp
    d5b1:	48 83 ec 50          	sub    $0x50,%rsp
    d5b5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d5b9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    d5bd:	89 55 bc             	mov    %edx,-0x44(%rbp)
    d5c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d5c7:	00 00
    d5c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d5cd:	31 c0                	xor    %eax,%eax
    d5cf:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    d5d4:	75 28                	jne    d5fe <semcheck_ifthen+0x55>
    d5d6:	48 8d 05 d3 df 00 00 	lea    0xdfd3(%rip),%rax        # 1b5b0 <__PRETTY_FUNCTION__.3>
    d5dd:	48 89 c1             	mov    %rax,%rcx
    d5e0:	ba 33 01 00 00       	mov    $0x133,%edx
    d5e5:	48 8d 05 d4 d8 00 00 	lea    0xd8d4(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d5ec:	48 89 c6             	mov    %rax,%rsi
    d5ef:	48 8d 05 00 d9 00 00 	lea    0xd900(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d5f6:	48 89 c7             	mov    %rax,%rdi
    d5f9:	e8 d2 4d ff ff       	call   23d0 <__assert_fail@plt>
    d5fe:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d603:	75 28                	jne    d62d <semcheck_ifthen+0x84>
    d605:	48 8d 05 a4 df 00 00 	lea    0xdfa4(%rip),%rax        # 1b5b0 <__PRETTY_FUNCTION__.3>
    d60c:	48 89 c1             	mov    %rax,%rcx
    d60f:	ba 34 01 00 00       	mov    $0x134,%edx
    d614:	48 8d 05 a5 d8 00 00 	lea    0xd8a5(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d61b:	48 89 c6             	mov    %rax,%rsi
    d61e:	48 8d 05 e0 d8 00 00 	lea    0xd8e0(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d625:	48 89 c7             	mov    %rax,%rdi
    d628:	e8 a3 4d ff ff       	call   23d0 <__assert_fail@plt>
    d62d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d631:	8b 40 04             	mov    0x4(%rax),%eax
    d634:	83 f8 03             	cmp    $0x3,%eax
    d637:	74 28                	je     d661 <semcheck_ifthen+0xb8>
    d639:	48 8d 05 70 df 00 00 	lea    0xdf70(%rip),%rax        # 1b5b0 <__PRETTY_FUNCTION__.3>
    d640:	48 89 c1             	mov    %rax,%rcx
    d643:	ba 35 01 00 00       	mov    $0x135,%edx
    d648:	48 8d 05 71 d8 00 00 	lea    0xd871(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d64f:	48 89 c6             	mov    %rax,%rsi
    d652:	48 8d 05 82 dc 00 00 	lea    0xdc82(%rip),%rax        # 1b2db <__PRETTY_FUNCTION__.0+0x453>
    d659:	48 89 c7             	mov    %rax,%rdi
    d65c:	e8 6f 4d ff ff       	call   23d0 <__assert_fail@plt>
    d661:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    d668:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d66c:	48 8b 40 08          	mov    0x8(%rax),%rax
    d670:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d674:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d678:	48 8b 40 10          	mov    0x10(%rax),%rax
    d67c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d680:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d684:	48 8b 40 18          	mov    0x18(%rax),%rax
    d688:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d68c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d690:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    d694:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    d698:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d69e:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d6a3:	48 89 c7             	mov    %rax,%rdi
    d6a6:	e8 5d 08 00 00       	call   df08 <semcheck_expr_main>
    d6ab:	01 45 dc             	add    %eax,-0x24(%rbp)
    d6ae:	8b 45 d8             	mov    -0x28(%rbp),%eax
    d6b1:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    d6b6:	74 28                	je     d6e0 <semcheck_ifthen+0x137>
    d6b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d6bc:	8b 10                	mov    (%rax),%edx
    d6be:	48 8b 05 9b 49 01 00 	mov    0x1499b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d6c5:	48 8d 0d 2c dc 00 00 	lea    0xdc2c(%rip),%rcx        # 1b2f8 <__PRETTY_FUNCTION__.0+0x470>
    d6cc:	48 89 ce             	mov    %rcx,%rsi
    d6cf:	48 89 c7             	mov    %rax,%rdi
    d6d2:	b8 00 00 00 00       	mov    $0x0,%eax
    d6d7:	e8 94 4d ff ff       	call   2470 <fprintf@plt>
    d6dc:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    d6e0:	8b 55 bc             	mov    -0x44(%rbp),%edx
    d6e3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    d6e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d6eb:	48 89 ce             	mov    %rcx,%rsi
    d6ee:	48 89 c7             	mov    %rax,%rdi
    d6f1:	e8 de f4 ff ff       	call   cbd4 <semcheck_stmt_main>
    d6f6:	01 45 dc             	add    %eax,-0x24(%rbp)
    d6f9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d6fe:	74 19                	je     d719 <semcheck_ifthen+0x170>
    d700:	8b 55 bc             	mov    -0x44(%rbp),%edx
    d703:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d707:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d70b:	48 89 ce             	mov    %rcx,%rsi
    d70e:	48 89 c7             	mov    %rax,%rdi
    d711:	e8 be f4 ff ff       	call   cbd4 <semcheck_stmt_main>
    d716:	01 45 dc             	add    %eax,-0x24(%rbp)
    d719:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d71c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d720:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d727:	00 00
    d729:	74 05                	je     d730 <semcheck_ifthen+0x187>
    d72b:	e8 70 4c ff ff       	call   23a0 <__stack_chk_fail@plt>
    d730:	c9                   	leave
    d731:	c3                   	ret

000000000000d732 <semcheck_while>:
    d732:	f3 0f 1e fa          	endbr64
    d736:	55                   	push   %rbp
    d737:	48 89 e5             	mov    %rsp,%rbp
    d73a:	48 83 ec 40          	sub    $0x40,%rsp
    d73e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d742:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d746:	89 55 cc             	mov    %edx,-0x34(%rbp)
    d749:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d750:	00 00
    d752:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d756:	31 c0                	xor    %eax,%eax
    d758:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d75d:	75 28                	jne    d787 <semcheck_while+0x55>
    d75f:	48 8d 05 5a de 00 00 	lea    0xde5a(%rip),%rax        # 1b5c0 <__PRETTY_FUNCTION__.2>
    d766:	48 89 c1             	mov    %rax,%rcx
    d769:	ba 54 01 00 00       	mov    $0x154,%edx
    d76e:	48 8d 05 4b d7 00 00 	lea    0xd74b(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d775:	48 89 c6             	mov    %rax,%rsi
    d778:	48 8d 05 77 d7 00 00 	lea    0xd777(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d77f:	48 89 c7             	mov    %rax,%rdi
    d782:	e8 49 4c ff ff       	call   23d0 <__assert_fail@plt>
    d787:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d78c:	75 28                	jne    d7b6 <semcheck_while+0x84>
    d78e:	48 8d 05 2b de 00 00 	lea    0xde2b(%rip),%rax        # 1b5c0 <__PRETTY_FUNCTION__.2>
    d795:	48 89 c1             	mov    %rax,%rcx
    d798:	ba 55 01 00 00       	mov    $0x155,%edx
    d79d:	48 8d 05 1c d7 00 00 	lea    0xd71c(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d7a4:	48 89 c6             	mov    %rax,%rsi
    d7a7:	48 8d 05 57 d7 00 00 	lea    0xd757(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d7ae:	48 89 c7             	mov    %rax,%rdi
    d7b1:	e8 1a 4c ff ff       	call   23d0 <__assert_fail@plt>
    d7b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d7ba:	8b 40 04             	mov    0x4(%rax),%eax
    d7bd:	83 f8 04             	cmp    $0x4,%eax
    d7c0:	74 28                	je     d7ea <semcheck_while+0xb8>
    d7c2:	48 8d 05 f7 dd 00 00 	lea    0xddf7(%rip),%rax        # 1b5c0 <__PRETTY_FUNCTION__.2>
    d7c9:	48 89 c1             	mov    %rax,%rcx
    d7cc:	ba 56 01 00 00       	mov    $0x156,%edx
    d7d1:	48 8d 05 e8 d6 00 00 	lea    0xd6e8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d7d8:	48 89 c6             	mov    %rax,%rsi
    d7db:	48 8d 05 53 db 00 00 	lea    0xdb53(%rip),%rax        # 1b335 <__PRETTY_FUNCTION__.0+0x4ad>
    d7e2:	48 89 c7             	mov    %rax,%rdi
    d7e5:	e8 e6 4b ff ff       	call   23d0 <__assert_fail@plt>
    d7ea:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    d7f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d7f5:	48 8b 40 08          	mov    0x8(%rax),%rax
    d7f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d7fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d801:	48 8b 40 10          	mov    0x10(%rax),%rax
    d805:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d809:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d80d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    d811:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d815:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d81b:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    d820:	48 89 c7             	mov    %rax,%rdi
    d823:	e8 e0 06 00 00       	call   df08 <semcheck_expr_main>
    d828:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d82b:	8b 45 e0             	mov    -0x20(%rbp),%eax
    d82e:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    d833:	74 28                	je     d85d <semcheck_while+0x12b>
    d835:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d839:	8b 10                	mov    (%rax),%edx
    d83b:	48 8b 05 1e 48 01 00 	mov    0x1481e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d842:	48 8d 0d 07 db 00 00 	lea    0xdb07(%rip),%rcx        # 1b350 <__PRETTY_FUNCTION__.0+0x4c8>
    d849:	48 89 ce             	mov    %rcx,%rsi
    d84c:	48 89 c7             	mov    %rax,%rdi
    d84f:	b8 00 00 00 00       	mov    $0x0,%eax
    d854:	e8 17 4c ff ff       	call   2470 <fprintf@plt>
    d859:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d85d:	8b 55 cc             	mov    -0x34(%rbp),%edx
    d860:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d864:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d868:	48 89 ce             	mov    %rcx,%rsi
    d86b:	48 89 c7             	mov    %rax,%rdi
    d86e:	e8 61 f3 ff ff       	call   cbd4 <semcheck_stmt_main>
    d873:	01 45 e4             	add    %eax,-0x1c(%rbp)
    d876:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d879:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d87d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d884:	00 00
    d886:	74 05                	je     d88d <semcheck_while+0x15b>
    d888:	e8 13 4b ff ff       	call   23a0 <__stack_chk_fail@plt>
    d88d:	c9                   	leave
    d88e:	c3                   	ret

000000000000d88f <semcheck_for>:
    d88f:	f3 0f 1e fa          	endbr64
    d893:	55                   	push   %rbp
    d894:	48 89 e5             	mov    %rsp,%rbp
    d897:	48 83 ec 60          	sub    $0x60,%rsp
    d89b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    d89f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    d8a3:	89 55 ac             	mov    %edx,-0x54(%rbp)
    d8a6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d8ad:	00 00
    d8af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d8b3:	31 c0                	xor    %eax,%eax
    d8b5:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    d8ba:	75 28                	jne    d8e4 <semcheck_for+0x55>
    d8bc:	48 8d 05 0d dd 00 00 	lea    0xdd0d(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d8c3:	48 89 c1             	mov    %rax,%rcx
    d8c6:	ba 75 01 00 00       	mov    $0x175,%edx
    d8cb:	48 8d 05 ee d5 00 00 	lea    0xd5ee(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d8d2:	48 89 c6             	mov    %rax,%rsi
    d8d5:	48 8d 05 1a d6 00 00 	lea    0xd61a(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    d8dc:	48 89 c7             	mov    %rax,%rdi
    d8df:	e8 ec 4a ff ff       	call   23d0 <__assert_fail@plt>
    d8e4:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    d8e9:	75 28                	jne    d913 <semcheck_for+0x84>
    d8eb:	48 8d 05 de dc 00 00 	lea    0xdcde(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d8f2:	48 89 c1             	mov    %rax,%rcx
    d8f5:	ba 76 01 00 00       	mov    $0x176,%edx
    d8fa:	48 8d 05 bf d5 00 00 	lea    0xd5bf(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d901:	48 89 c6             	mov    %rax,%rsi
    d904:	48 8d 05 fa d5 00 00 	lea    0xd5fa(%rip),%rax        # 1af05 <__PRETTY_FUNCTION__.0+0x7d>
    d90b:	48 89 c7             	mov    %rax,%rdi
    d90e:	e8 bd 4a ff ff       	call   23d0 <__assert_fail@plt>
    d913:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d917:	8b 40 04             	mov    0x4(%rax),%eax
    d91a:	83 f8 05             	cmp    $0x5,%eax
    d91d:	74 28                	je     d947 <semcheck_for+0xb8>
    d91f:	48 8d 05 aa dc 00 00 	lea    0xdcaa(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d926:	48 89 c1             	mov    %rax,%rcx
    d929:	ba 77 01 00 00       	mov    $0x177,%edx
    d92e:	48 8d 05 8b d5 00 00 	lea    0xd58b(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d935:	48 89 c6             	mov    %rax,%rsi
    d938:	48 8d 05 51 da 00 00 	lea    0xda51(%rip),%rax        # 1b390 <__PRETTY_FUNCTION__.0+0x508>
    d93f:	48 89 c7             	mov    %rax,%rdi
    d942:	e8 89 4a ff ff       	call   23d0 <__assert_fail@plt>
    d947:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d94b:	8b 40 08             	mov    0x8(%rax),%eax
    d94e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    d951:	83 7d d4 06          	cmpl   $0x6,-0x2c(%rbp)
    d955:	74 2e                	je     d985 <semcheck_for+0xf6>
    d957:	83 7d d4 07          	cmpl   $0x7,-0x2c(%rbp)
    d95b:	74 28                	je     d985 <semcheck_for+0xf6>
    d95d:	48 8d 05 6c dc 00 00 	lea    0xdc6c(%rip),%rax        # 1b5d0 <__PRETTY_FUNCTION__.1>
    d964:	48 89 c1             	mov    %rax,%rcx
    d967:	ba 7a 01 00 00       	mov    $0x17a,%edx
    d96c:	48 8d 05 4d d5 00 00 	lea    0xd54d(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    d973:	48 89 c6             	mov    %rax,%rsi
    d976:	48 8d 05 2b da 00 00 	lea    0xda2b(%rip),%rax        # 1b3a8 <__PRETTY_FUNCTION__.0+0x520>
    d97d:	48 89 c7             	mov    %rax,%rdi
    d980:	e8 4b 4a ff ff       	call   23d0 <__assert_fail@plt>
    d985:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    d98c:	83 7d d4 06          	cmpl   $0x6,-0x2c(%rbp)
    d990:	75 60                	jne    d9f2 <semcheck_for+0x163>
    d992:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d996:	48 8b 40 20          	mov    0x20(%rax),%rax
    d99a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d99e:	8b 4d ac             	mov    -0x54(%rbp),%ecx
    d9a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d9a5:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    d9a9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d9ad:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d9b3:	48 89 c7             	mov    %rax,%rdi
    d9b6:	e8 4d 05 00 00       	call   df08 <semcheck_expr_main>
    d9bb:	01 45 d0             	add    %eax,-0x30(%rbp)
    d9be:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d9c1:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    d9c6:	74 4f                	je     da17 <semcheck_for+0x188>
    d9c8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d9cc:	8b 10                	mov    (%rax),%edx
    d9ce:	48 8b 05 8b 46 01 00 	mov    0x1468b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    d9d5:	48 8d 0d 1c da 00 00 	lea    0xda1c(%rip),%rcx        # 1b3f8 <__PRETTY_FUNCTION__.0+0x570>
    d9dc:	48 89 ce             	mov    %rcx,%rsi
    d9df:	48 89 c7             	mov    %rax,%rdi
    d9e2:	b8 00 00 00 00       	mov    $0x0,%eax
    d9e7:	e8 84 4a ff ff       	call   2470 <fprintf@plt>
    d9ec:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    d9f0:	eb 25                	jmp    da17 <semcheck_for+0x188>
    d9f2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d9f6:	48 8b 40 20          	mov    0x20(%rax),%rax
    d9fa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d9fe:	8b 55 ac             	mov    -0x54(%rbp),%edx
    da01:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    da05:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    da09:	48 89 ce             	mov    %rcx,%rsi
    da0c:	48 89 c7             	mov    %rax,%rdi
    da0f:	e8 a1 00 00 00       	call   dab5 <semcheck_for_assign>
    da14:	01 45 d0             	add    %eax,-0x30(%rbp)
    da17:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da1b:	48 8b 40 10          	mov    0x10(%rax),%rax
    da1f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    da23:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da27:	48 8b 40 18          	mov    0x18(%rax),%rax
    da2b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    da2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da33:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    da37:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    da3b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    da41:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    da46:	48 89 c7             	mov    %rax,%rdi
    da49:	e8 ba 04 00 00       	call   df08 <semcheck_expr_main>
    da4e:	01 45 d0             	add    %eax,-0x30(%rbp)
    da51:	8b 45 cc             	mov    -0x34(%rbp),%eax
    da54:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    da59:	74 28                	je     da83 <semcheck_for+0x1f4>
    da5b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    da5f:	8b 10                	mov    (%rax),%edx
    da61:	48 8b 05 f8 45 01 00 	mov    0x145f8(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    da68:	48 8d 0d c1 d9 00 00 	lea    0xd9c1(%rip),%rcx        # 1b430 <__PRETTY_FUNCTION__.0+0x5a8>
    da6f:	48 89 ce             	mov    %rcx,%rsi
    da72:	48 89 c7             	mov    %rax,%rdi
    da75:	b8 00 00 00 00       	mov    $0x0,%eax
    da7a:	e8 f1 49 ff ff       	call   2470 <fprintf@plt>
    da7f:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    da83:	8b 55 ac             	mov    -0x54(%rbp),%edx
    da86:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    da8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    da8e:	48 89 ce             	mov    %rcx,%rsi
    da91:	48 89 c7             	mov    %rax,%rdi
    da94:	e8 3b f1 ff ff       	call   cbd4 <semcheck_stmt_main>
    da99:	01 45 d0             	add    %eax,-0x30(%rbp)
    da9c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    da9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    daa3:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    daaa:	00 00
    daac:	74 05                	je     dab3 <semcheck_for+0x224>
    daae:	e8 ed 48 ff ff       	call   23a0 <__stack_chk_fail@plt>
    dab3:	c9                   	leave
    dab4:	c3                   	ret

000000000000dab5 <semcheck_for_assign>:
    dab5:	f3 0f 1e fa          	endbr64
    dab9:	55                   	push   %rbp
    daba:	48 89 e5             	mov    %rsp,%rbp
    dabd:	48 83 ec 50          	sub    $0x50,%rsp
    dac1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    dac5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    dac9:	89 55 bc             	mov    %edx,-0x44(%rbp)
    dacc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dad3:	00 00
    dad5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dad9:	31 c0                	xor    %eax,%eax
    dadb:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    dae0:	75 28                	jne    db0a <semcheck_for_assign+0x55>
    dae2:	48 8d 05 f7 da 00 00 	lea    0xdaf7(%rip),%rax        # 1b5e0 <__PRETTY_FUNCTION__.0>
    dae9:	48 89 c1             	mov    %rax,%rcx
    daec:	ba a8 01 00 00       	mov    $0x1a8,%edx
    daf1:	48 8d 05 c8 d3 00 00 	lea    0xd3c8(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    daf8:	48 89 c6             	mov    %rax,%rsi
    dafb:	48 8d 05 f4 d3 00 00 	lea    0xd3f4(%rip),%rax        # 1aef6 <__PRETTY_FUNCTION__.0+0x6e>
    db02:	48 89 c7             	mov    %rax,%rdi
    db05:	e8 c6 48 ff ff       	call   23d0 <__assert_fail@plt>
    db0a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    db0f:	75 28                	jne    db39 <semcheck_for_assign+0x84>
    db11:	48 8d 05 c8 da 00 00 	lea    0xdac8(%rip),%rax        # 1b5e0 <__PRETTY_FUNCTION__.0>
    db18:	48 89 c1             	mov    %rax,%rcx
    db1b:	ba a9 01 00 00       	mov    $0x1a9,%edx
    db20:	48 8d 05 99 d3 00 00 	lea    0xd399(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    db27:	48 89 c6             	mov    %rax,%rsi
    db2a:	48 8d 05 34 d9 00 00 	lea    0xd934(%rip),%rax        # 1b465 <__PRETTY_FUNCTION__.0+0x5dd>
    db31:	48 89 c7             	mov    %rax,%rdi
    db34:	e8 97 48 ff ff       	call   23d0 <__assert_fail@plt>
    db39:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db3d:	8b 40 04             	mov    0x4(%rax),%eax
    db40:	85 c0                	test   %eax,%eax
    db42:	74 28                	je     db6c <semcheck_for_assign+0xb7>
    db44:	48 8d 05 95 da 00 00 	lea    0xda95(%rip),%rax        # 1b5e0 <__PRETTY_FUNCTION__.0>
    db4b:	48 89 c1             	mov    %rax,%rcx
    db4e:	ba aa 01 00 00       	mov    $0x1aa,%edx
    db53:	48 8d 05 66 d3 00 00 	lea    0xd366(%rip),%rax        # 1aec0 <__PRETTY_FUNCTION__.0+0x38>
    db5a:	48 89 c6             	mov    %rax,%rsi
    db5d:	48 8d 05 14 d9 00 00 	lea    0xd914(%rip),%rax        # 1b478 <__PRETTY_FUNCTION__.0+0x5f0>
    db64:	48 89 c7             	mov    %rax,%rdi
    db67:	e8 64 48 ff ff       	call   23d0 <__assert_fail@plt>
    db6c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    db73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db77:	48 8b 40 08          	mov    0x8(%rax),%rax
    db7b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    db7f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db83:	48 8b 40 10          	mov    0x10(%rax),%rax
    db87:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    db8b:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    db8e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    db92:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    db96:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    db9a:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    dba0:	48 89 c7             	mov    %rax,%rdi
    dba3:	e8 60 03 00 00       	call   df08 <semcheck_expr_main>
    dba8:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dbab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dbaf:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    dbb3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    dbb7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    dbbd:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    dbc2:	48 89 c7             	mov    %rax,%rdi
    dbc5:	e8 3e 03 00 00       	call   df08 <semcheck_expr_main>
    dbca:	01 45 e4             	add    %eax,-0x1c(%rbp)
    dbcd:	8b 55 dc             	mov    -0x24(%rbp),%edx
    dbd0:	8b 45 e0             	mov    -0x20(%rbp),%eax
    dbd3:	39 c2                	cmp    %eax,%edx
    dbd5:	74 28                	je     dbff <semcheck_for_assign+0x14a>
    dbd7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dbdb:	8b 10                	mov    (%rax),%edx
    dbdd:	48 8b 05 7c 44 01 00 	mov    0x1447c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    dbe4:	48 8d 0d b5 d8 00 00 	lea    0xd8b5(%rip),%rcx        # 1b4a0 <__PRETTY_FUNCTION__.0+0x618>
    dbeb:	48 89 ce             	mov    %rcx,%rsi
    dbee:	48 89 c7             	mov    %rax,%rdi
    dbf1:	b8 00 00 00 00       	mov    $0x0,%eax
    dbf6:	e8 75 48 ff ff       	call   2470 <fprintf@plt>
    dbfb:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    dbff:	8b 45 dc             	mov    -0x24(%rbp),%eax
    dc02:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    dc07:	74 28                	je     dc31 <semcheck_for_assign+0x17c>
    dc09:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dc0d:	8b 10                	mov    (%rax),%edx
    dc0f:	48 8b 05 4a 44 01 00 	mov    0x1444a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    dc16:	48 8d 0d cb d8 00 00 	lea    0xd8cb(%rip),%rcx        # 1b4e8 <__PRETTY_FUNCTION__.0+0x660>
    dc1d:	48 89 ce             	mov    %rcx,%rsi
    dc20:	48 89 c7             	mov    %rax,%rdi
    dc23:	b8 00 00 00 00       	mov    $0x0,%eax
    dc28:	e8 43 48 ff ff       	call   2470 <fprintf@plt>
    dc2d:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    dc31:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    dc34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc38:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    dc3f:	00 00
    dc41:	74 05                	je     dc48 <semcheck_for_assign+0x193>
    dc43:	e8 58 47 ff ff       	call   23a0 <__stack_chk_fail@plt>
    dc48:	c9                   	leave
    dc49:	c3                   	ret

000000000000dc4a <set_hash_meta>:
    dc4a:	f3 0f 1e fa          	endbr64
    dc4e:	55                   	push   %rbp
    dc4f:	48 89 e5             	mov    %rsp,%rbp
    dc52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc56:	89 75 f4             	mov    %esi,-0xc(%rbp)
    dc59:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
    dc5d:	75 24                	jne    dc83 <set_hash_meta+0x39>
    dc5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc63:	8b 40 20             	mov    0x20(%rax),%eax
    dc66:	8d 50 01             	lea    0x1(%rax),%edx
    dc69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc6d:	89 50 20             	mov    %edx,0x20(%rax)
    dc70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc74:	8b 40 24             	mov    0x24(%rax),%eax
    dc77:	8d 50 01             	lea    0x1(%rax),%edx
    dc7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc7e:	89 50 24             	mov    %edx,0x24(%rax)
    dc81:	eb 2b                	jmp    dcae <set_hash_meta+0x64>
    dc83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc87:	8b 50 20             	mov    0x20(%rax),%edx
    dc8a:	b8 01 00 00 00       	mov    $0x1,%eax
    dc8f:	2b 45 f4             	sub    -0xc(%rbp),%eax
    dc92:	01 c2                	add    %eax,%edx
    dc94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc98:	89 50 20             	mov    %edx,0x20(%rax)
    dc9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc9f:	8b 50 24             	mov    0x24(%rax),%edx
    dca2:	8b 45 f4             	mov    -0xc(%rbp),%eax
    dca5:	01 c2                	add    %eax,%edx
    dca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcab:	89 50 24             	mov    %edx,0x24(%rax)
    dcae:	90                   	nop
    dcaf:	5d                   	pop    %rbp
    dcb0:	c3                   	ret

000000000000dcb1 <is_type_ir>:
    dcb1:	f3 0f 1e fa          	endbr64
    dcb5:	55                   	push   %rbp
    dcb6:	48 89 e5             	mov    %rsp,%rbp
    dcb9:	48 83 ec 10          	sub    $0x10,%rsp
    dcbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcc1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dcc6:	75 28                	jne    dcf0 <is_type_ir+0x3f>
    dcc8:	48 8d 05 e9 e0 00 00 	lea    0xe0e9(%rip),%rax        # 1bdb8 <__PRETTY_FUNCTION__.10>
    dccf:	48 89 c1             	mov    %rax,%rcx
    dcd2:	ba 3e 00 00 00       	mov    $0x3e,%edx
    dcd7:	48 8d 05 22 d9 00 00 	lea    0xd922(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    dcde:	48 89 c6             	mov    %rax,%rsi
    dce1:	48 8d 05 4e d9 00 00 	lea    0xd94e(%rip),%rax        # 1b636 <__PRETTY_FUNCTION__.0+0x56>
    dce8:	48 89 c7             	mov    %rax,%rdi
    dceb:	e8 e0 46 ff ff       	call   23d0 <__assert_fail@plt>
    dcf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcf4:	8b 00                	mov    (%rax),%eax
    dcf6:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    dcfb:	74 0d                	je     dd0a <is_type_ir+0x59>
    dcfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd01:	8b 00                	mov    (%rax),%eax
    dd03:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    dd08:	75 07                	jne    dd11 <is_type_ir+0x60>
    dd0a:	b8 01 00 00 00       	mov    $0x1,%eax
    dd0f:	eb 05                	jmp    dd16 <is_type_ir+0x65>
    dd11:	b8 00 00 00 00       	mov    $0x0,%eax
    dd16:	c9                   	leave
    dd17:	c3                   	ret

000000000000dd18 <is_and_or>:
    dd18:	f3 0f 1e fa          	endbr64
    dd1c:	55                   	push   %rbp
    dd1d:	48 89 e5             	mov    %rsp,%rbp
    dd20:	48 83 ec 10          	sub    $0x10,%rsp
    dd24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd28:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dd2d:	75 28                	jne    dd57 <is_and_or+0x3f>
    dd2f:	48 8d 05 92 e0 00 00 	lea    0xe092(%rip),%rax        # 1bdc8 <__PRETTY_FUNCTION__.9>
    dd36:	48 89 c1             	mov    %rax,%rcx
    dd39:	ba 44 00 00 00       	mov    $0x44,%edx
    dd3e:	48 8d 05 bb d8 00 00 	lea    0xd8bb(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    dd45:	48 89 c6             	mov    %rax,%rsi
    dd48:	48 8d 05 e7 d8 00 00 	lea    0xd8e7(%rip),%rax        # 1b636 <__PRETTY_FUNCTION__.0+0x56>
    dd4f:	48 89 c7             	mov    %rax,%rdi
    dd52:	e8 79 46 ff ff       	call   23d0 <__assert_fail@plt>
    dd57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd5b:	8b 00                	mov    (%rax),%eax
    dd5d:	3d 34 01 00 00       	cmp    $0x134,%eax
    dd62:	74 0d                	je     dd71 <is_and_or+0x59>
    dd64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd68:	8b 00                	mov    (%rax),%eax
    dd6a:	3d 30 01 00 00       	cmp    $0x130,%eax
    dd6f:	75 07                	jne    dd78 <is_and_or+0x60>
    dd71:	b8 01 00 00 00       	mov    $0x1,%eax
    dd76:	eb 05                	jmp    dd7d <is_and_or+0x65>
    dd78:	b8 00 00 00 00       	mov    $0x0,%eax
    dd7d:	c9                   	leave
    dd7e:	c3                   	ret

000000000000dd7f <set_type_from_hashtype>:
    dd7f:	f3 0f 1e fa          	endbr64
    dd83:	55                   	push   %rbp
    dd84:	48 89 e5             	mov    %rsp,%rbp
    dd87:	48 83 ec 10          	sub    $0x10,%rsp
    dd8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd93:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    dd98:	75 28                	jne    ddc2 <set_type_from_hashtype+0x43>
    dd9a:	48 8d 05 3f e0 00 00 	lea    0xe03f(%rip),%rax        # 1bde0 <__PRETTY_FUNCTION__.8>
    dda1:	48 89 c1             	mov    %rax,%rcx
    dda4:	ba 4a 00 00 00       	mov    $0x4a,%edx
    dda9:	48 8d 05 50 d8 00 00 	lea    0xd850(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ddb0:	48 89 c6             	mov    %rax,%rsi
    ddb3:	48 8d 05 7c d8 00 00 	lea    0xd87c(%rip),%rax        # 1b636 <__PRETTY_FUNCTION__.0+0x56>
    ddba:	48 89 c7             	mov    %rax,%rdi
    ddbd:	e8 0e 46 ff ff       	call   23d0 <__assert_fail@plt>
    ddc2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ddc7:	75 28                	jne    ddf1 <set_type_from_hashtype+0x72>
    ddc9:	48 8d 05 10 e0 00 00 	lea    0xe010(%rip),%rax        # 1bde0 <__PRETTY_FUNCTION__.8>
    ddd0:	48 89 c1             	mov    %rax,%rcx
    ddd3:	ba 4b 00 00 00       	mov    $0x4b,%edx
    ddd8:	48 8d 05 21 d8 00 00 	lea    0xd821(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    dddf:	48 89 c6             	mov    %rax,%rsi
    dde2:	48 8d 05 5a d8 00 00 	lea    0xd85a(%rip),%rax        # 1b643 <__PRETTY_FUNCTION__.0+0x63>
    dde9:	48 89 c7             	mov    %rax,%rdi
    ddec:	e8 df 45 ff ff       	call   23d0 <__assert_fail@plt>
    ddf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ddf5:	8b 40 14             	mov    0x14(%rax),%eax
    ddf8:	83 f8 05             	cmp    $0x5,%eax
    ddfb:	77 5f                	ja     de5c <set_type_from_hashtype+0xdd>
    ddfd:	89 c0                	mov    %eax,%eax
    ddff:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    de06:	00
    de07:	48 8d 05 7a d8 00 00 	lea    0xd87a(%rip),%rax        # 1b688 <__PRETTY_FUNCTION__.0+0xa8>
    de0e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    de11:	48 98                	cltq
    de13:	48 8d 15 6e d8 00 00 	lea    0xd86e(%rip),%rdx        # 1b688 <__PRETTY_FUNCTION__.0+0xa8>
    de1a:	48 01 d0             	add    %rdx,%rax
    de1d:	3e ff e0             	notrack jmp *%rax
    de20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de24:	c7 00 0b 01 00 00    	movl   $0x10b,(%rax)
    de2a:	eb 5d                	jmp    de89 <set_type_from_hashtype+0x10a>
    de2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de30:	c7 00 0c 01 00 00    	movl   $0x10c,(%rax)
    de36:	eb 51                	jmp    de89 <set_type_from_hashtype+0x10a>
    de38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de3c:	c7 00 04 01 00 00    	movl   $0x104,(%rax)
    de42:	eb 45                	jmp    de89 <set_type_from_hashtype+0x10a>
    de44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de48:	c7 00 0e 01 00 00    	movl   $0x10e,(%rax)
    de4e:	eb 39                	jmp    de89 <set_type_from_hashtype+0x10a>
    de50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de54:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    de5a:	eb 2d                	jmp    de89 <set_type_from_hashtype+0x10a>
    de5c:	48 8b 05 fd 41 01 00 	mov    0x141fd(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    de63:	48 89 c1             	mov    %rax,%rcx
    de66:	ba 2c 00 00 00       	mov    $0x2c,%edx
    de6b:	be 01 00 00 00       	mov    $0x1,%esi
    de70:	48 8d 05 e1 d7 00 00 	lea    0xd7e1(%rip),%rax        # 1b658 <__PRETTY_FUNCTION__.0+0x78>
    de77:	48 89 c7             	mov    %rax,%rdi
    de7a:	e8 d1 46 ff ff       	call   2550 <fwrite@plt>
    de7f:	bf 01 00 00 00       	mov    $0x1,%edi
    de84:	e8 b7 46 ff ff       	call   2540 <exit@plt>
    de89:	90                   	nop
    de8a:	c9                   	leave
    de8b:	c3                   	ret

000000000000de8c <semcheck_expr>:
    de8c:	f3 0f 1e fa          	endbr64
    de90:	55                   	push   %rbp
    de91:	48 89 e5             	mov    %rsp,%rbp
    de94:	48 83 ec 20          	sub    $0x20,%rsp
    de98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dea0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    dea4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    dea7:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
    deab:	8b 7d e0             	mov    -0x20(%rbp),%edi
    deae:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    deb1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    deb5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    deb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    debd:	41 89 f8             	mov    %edi,%r8d
    dec0:	48 89 c7             	mov    %rax,%rdi
    dec3:	e8 40 00 00 00       	call   df08 <semcheck_expr_main>
    dec8:	90                   	nop
    dec9:	c9                   	leave
    deca:	c3                   	ret

000000000000decb <semcheck_expr_func>:
    decb:	f3 0f 1e fa          	endbr64
    decf:	55                   	push   %rbp
    ded0:	48 89 e5             	mov    %rsp,%rbp
    ded3:	48 83 ec 20          	sub    $0x20,%rsp
    ded7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dedb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dedf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    dee3:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    dee6:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    dee9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    deed:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    def1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    def5:	41 89 c8             	mov    %ecx,%r8d
    def8:	b9 00 00 00 00       	mov    $0x0,%ecx
    defd:	48 89 c7             	mov    %rax,%rdi
    df00:	e8 03 00 00 00       	call   df08 <semcheck_expr_main>
    df05:	90                   	nop
    df06:	c9                   	leave
    df07:	c3                   	ret

000000000000df08 <semcheck_expr_main>:
    df08:	f3 0f 1e fa          	endbr64
    df0c:	55                   	push   %rbp
    df0d:	48 89 e5             	mov    %rsp,%rbp
    df10:	48 83 ec 30          	sub    $0x30,%rsp
    df14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    df1c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    df20:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    df23:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    df27:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    df2c:	75 28                	jne    df56 <semcheck_expr_main+0x4e>
    df2e:	48 8d 05 cb de 00 00 	lea    0xdecb(%rip),%rax        # 1be00 <__PRETTY_FUNCTION__.7>
    df35:	48 89 c1             	mov    %rax,%rcx
    df38:	ba 77 00 00 00       	mov    $0x77,%edx
    df3d:	48 8d 05 bc d6 00 00 	lea    0xd6bc(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    df44:	48 89 c6             	mov    %rax,%rsi
    df47:	48 8d 05 52 d7 00 00 	lea    0xd752(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    df4e:	48 89 c7             	mov    %rax,%rdi
    df51:	e8 7a 44 ff ff       	call   23d0 <__assert_fail@plt>
    df56:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    df5b:	75 28                	jne    df85 <semcheck_expr_main+0x7d>
    df5d:	48 8d 05 9c de 00 00 	lea    0xde9c(%rip),%rax        # 1be00 <__PRETTY_FUNCTION__.7>
    df64:	48 89 c1             	mov    %rax,%rcx
    df67:	ba 78 00 00 00       	mov    $0x78,%edx
    df6c:	48 8d 05 8d d6 00 00 	lea    0xd68d(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    df73:	48 89 c6             	mov    %rax,%rsi
    df76:	48 8d 05 32 d7 00 00 	lea    0xd732(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    df7d:	48 89 c7             	mov    %rax,%rdi
    df80:	e8 4b 44 ff ff       	call   23d0 <__assert_fail@plt>
    df85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    df8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df90:	8b 40 04             	mov    0x4(%rax),%eax
    df93:	83 f8 09             	cmp    $0x9,%eax
    df96:	0f 87 44 01 00 00    	ja     e0e0 <semcheck_expr_main+0x1d8>
    df9c:	89 c0                	mov    %eax,%eax
    df9e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    dfa5:	00
    dfa6:	48 8d 05 3b d7 00 00 	lea    0xd73b(%rip),%rax        # 1b6e8 <__PRETTY_FUNCTION__.0+0x108>
    dfad:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    dfb0:	48 98                	cltq
    dfb2:	48 8d 15 2f d7 00 00 	lea    0xd72f(%rip),%rdx        # 1b6e8 <__PRETTY_FUNCTION__.0+0x108>
    dfb9:	48 01 d0             	add    %rdx,%rax
    dfbc:	3e ff e0             	notrack jmp *%rax
    dfbf:	8b 7d d0             	mov    -0x30(%rbp),%edi
    dfc2:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    dfc5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dfc9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    dfcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfd1:	41 89 f8             	mov    %edi,%r8d
    dfd4:	48 89 c7             	mov    %rax,%rdi
    dfd7:	e8 36 01 00 00       	call   e112 <semcheck_relop>
    dfdc:	01 45 fc             	add    %eax,-0x4(%rbp)
    dfdf:	e9 29 01 00 00       	jmp    e10d <semcheck_expr_main+0x205>
    dfe4:	8b 7d d0             	mov    -0x30(%rbp),%edi
    dfe7:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    dfea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dfee:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    dff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dff6:	41 89 f8             	mov    %edi,%r8d
    dff9:	48 89 c7             	mov    %rax,%rdi
    dffc:	e8 63 03 00 00       	call   e364 <semcheck_signterm>
    e001:	01 45 fc             	add    %eax,-0x4(%rbp)
    e004:	e9 04 01 00 00       	jmp    e10d <semcheck_expr_main+0x205>
    e009:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e00c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e00f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e013:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e01b:	41 89 f8             	mov    %edi,%r8d
    e01e:	48 89 c7             	mov    %rax,%rdi
    e021:	e8 5f 04 00 00       	call   e485 <semcheck_addop>
    e026:	01 45 fc             	add    %eax,-0x4(%rbp)
    e029:	e9 df 00 00 00       	jmp    e10d <semcheck_expr_main+0x205>
    e02e:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e031:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e034:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e038:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e03c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e040:	41 89 f8             	mov    %edi,%r8d
    e043:	48 89 c7             	mov    %rax,%rdi
    e046:	e8 f5 05 00 00       	call   e640 <semcheck_mulop>
    e04b:	01 45 fc             	add    %eax,-0x4(%rbp)
    e04e:	e9 ba 00 00 00       	jmp    e10d <semcheck_expr_main+0x205>
    e053:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e056:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e059:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e05d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e061:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e065:	41 89 f8             	mov    %edi,%r8d
    e068:	48 89 c7             	mov    %rax,%rdi
    e06b:	e8 8b 07 00 00       	call   e7fb <semcheck_varid>
    e070:	01 45 fc             	add    %eax,-0x4(%rbp)
    e073:	e9 95 00 00 00       	jmp    e10d <semcheck_expr_main+0x205>
    e078:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e07b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e07e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e082:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e08a:	41 89 f8             	mov    %edi,%r8d
    e08d:	48 89 c7             	mov    %rax,%rdi
    e090:	e8 62 09 00 00       	call   e9f7 <semcheck_arrayaccess>
    e095:	01 45 fc             	add    %eax,-0x4(%rbp)
    e098:	eb 73                	jmp    e10d <semcheck_expr_main+0x205>
    e09a:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e09d:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e0a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e0a4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e0a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0ac:	41 89 f8             	mov    %edi,%r8d
    e0af:	48 89 c7             	mov    %rax,%rdi
    e0b2:	e8 8f 0b 00 00       	call   ec46 <semcheck_funccall>
    e0b7:	01 45 fc             	add    %eax,-0x4(%rbp)
    e0ba:	eb 51                	jmp    e10d <semcheck_expr_main+0x205>
    e0bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0c0:	c7 00 0b 01 00 00    	movl   $0x10b,(%rax)
    e0c6:	eb 45                	jmp    e10d <semcheck_expr_main+0x205>
    e0c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0cc:	c7 00 0c 01 00 00    	movl   $0x10c,(%rax)
    e0d2:	eb 39                	jmp    e10d <semcheck_expr_main+0x205>
    e0d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0d8:	c7 00 0e 01 00 00    	movl   $0x10e,(%rax)
    e0de:	eb 2d                	jmp    e10d <semcheck_expr_main+0x205>
    e0e0:	48 8b 05 79 3f 01 00 	mov    0x13f79(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e0e7:	48 89 c1             	mov    %rax,%rcx
    e0ea:	ba 27 00 00 00       	mov    $0x27,%edx
    e0ef:	be 01 00 00 00       	mov    $0x1,%esi
    e0f4:	48 8d 05 c5 d5 00 00 	lea    0xd5c5(%rip),%rax        # 1b6c0 <__PRETTY_FUNCTION__.0+0xe0>
    e0fb:	48 89 c7             	mov    %rax,%rdi
    e0fe:	e8 4d 44 ff ff       	call   2550 <fwrite@plt>
    e103:	bf 01 00 00 00       	mov    $0x1,%edi
    e108:	e8 33 44 ff ff       	call   2540 <exit@plt>
    e10d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e110:	c9                   	leave
    e111:	c3                   	ret

000000000000e112 <semcheck_relop>:
    e112:	f3 0f 1e fa          	endbr64
    e116:	55                   	push   %rbp
    e117:	48 89 e5             	mov    %rsp,%rbp
    e11a:	48 83 ec 50          	sub    $0x50,%rsp
    e11e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e122:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e126:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e12a:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e12d:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e131:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e138:	00 00
    e13a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e13e:	31 c0                	xor    %eax,%eax
    e140:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e145:	75 28                	jne    e16f <semcheck_relop+0x5d>
    e147:	48 8d 05 ca dc 00 00 	lea    0xdcca(%rip),%rax        # 1be18 <__PRETTY_FUNCTION__.6>
    e14e:	48 89 c1             	mov    %rax,%rcx
    e151:	ba b7 00 00 00       	mov    $0xb7,%edx
    e156:	48 8d 05 a3 d4 00 00 	lea    0xd4a3(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e15d:	48 89 c6             	mov    %rax,%rsi
    e160:	48 8d 05 39 d5 00 00 	lea    0xd539(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e167:	48 89 c7             	mov    %rax,%rdi
    e16a:	e8 61 42 ff ff       	call   23d0 <__assert_fail@plt>
    e16f:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e174:	75 28                	jne    e19e <semcheck_relop+0x8c>
    e176:	48 8d 05 9b dc 00 00 	lea    0xdc9b(%rip),%rax        # 1be18 <__PRETTY_FUNCTION__.6>
    e17d:	48 89 c1             	mov    %rax,%rcx
    e180:	ba b8 00 00 00       	mov    $0xb8,%edx
    e185:	48 8d 05 74 d4 00 00 	lea    0xd474(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e18c:	48 89 c6             	mov    %rax,%rsi
    e18f:	48 8d 05 19 d5 00 00 	lea    0xd519(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e196:	48 89 c7             	mov    %rax,%rdi
    e199:	e8 32 42 ff ff       	call   23d0 <__assert_fail@plt>
    e19e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e1a2:	8b 40 04             	mov    0x4(%rax),%eax
    e1a5:	85 c0                	test   %eax,%eax
    e1a7:	74 28                	je     e1d1 <semcheck_relop+0xbf>
    e1a9:	48 8d 05 68 dc 00 00 	lea    0xdc68(%rip),%rax        # 1be18 <__PRETTY_FUNCTION__.6>
    e1b0:	48 89 c1             	mov    %rax,%rcx
    e1b3:	ba b9 00 00 00       	mov    $0xb9,%edx
    e1b8:	48 8d 05 41 d4 00 00 	lea    0xd441(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e1bf:	48 89 c6             	mov    %rax,%rsi
    e1c2:	48 8d 05 47 d5 00 00 	lea    0xd547(%rip),%rax        # 1b710 <__PRETTY_FUNCTION__.0+0x130>
    e1c9:	48 89 c7             	mov    %rax,%rdi
    e1cc:	e8 ff 41 ff ff       	call   23d0 <__assert_fail@plt>
    e1d1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    e1d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e1dc:	48 8b 40 10          	mov    0x10(%rax),%rax
    e1e0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e1e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e1e8:	48 8b 40 18          	mov    0x18(%rax),%rax
    e1ec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e1f0:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e1f3:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e1f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e1fa:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e1fe:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e202:	41 89 f8             	mov    %edi,%r8d
    e205:	48 89 c7             	mov    %rax,%rdi
    e208:	e8 fb fc ff ff       	call   df08 <semcheck_expr_main>
    e20d:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e210:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e215:	74 20                	je     e237 <semcheck_relop+0x125>
    e217:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e21a:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e21d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e221:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e225:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e229:	41 89 f8             	mov    %edi,%r8d
    e22c:	48 89 c7             	mov    %rax,%rdi
    e22f:	e8 d4 fc ff ff       	call   df08 <semcheck_expr_main>
    e234:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e237:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e23c:	75 37                	jne    e275 <semcheck_relop+0x163>
    e23e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e241:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    e246:	74 2d                	je     e275 <semcheck_relop+0x163>
    e248:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e24c:	8b 10                	mov    (%rax),%edx
    e24e:	48 8b 05 0b 3e 01 00 	mov    0x13e0b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e255:	48 8d 0d d4 d4 00 00 	lea    0xd4d4(%rip),%rcx        # 1b730 <__PRETTY_FUNCTION__.0+0x150>
    e25c:	48 89 ce             	mov    %rcx,%rsi
    e25f:	48 89 c7             	mov    %rax,%rdi
    e262:	b8 00 00 00 00       	mov    $0x0,%eax
    e267:	e8 04 42 ff ff       	call   2470 <fprintf@plt>
    e26c:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e270:	e9 cc 00 00 00       	jmp    e341 <semcheck_relop+0x22f>
    e275:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e278:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e27b:	39 c2                	cmp    %eax,%edx
    e27d:	74 28                	je     e2a7 <semcheck_relop+0x195>
    e27f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e283:	8b 10                	mov    (%rax),%edx
    e285:	48 8b 05 d4 3d 01 00 	mov    0x13dd4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e28c:	48 8d 0d dd d4 00 00 	lea    0xd4dd(%rip),%rcx        # 1b770 <__PRETTY_FUNCTION__.0+0x190>
    e293:	48 89 ce             	mov    %rcx,%rsi
    e296:	48 89 c7             	mov    %rax,%rdi
    e299:	b8 00 00 00 00       	mov    $0x0,%eax
    e29e:	e8 cd 41 ff ff       	call   2470 <fprintf@plt>
    e2a3:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e2a7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e2ab:	48 83 c0 08          	add    $0x8,%rax
    e2af:	48 89 c7             	mov    %rax,%rdi
    e2b2:	e8 61 fa ff ff       	call   dd18 <is_and_or>
    e2b7:	85 c0                	test   %eax,%eax
    e2b9:	74 3e                	je     e2f9 <semcheck_relop+0x1e7>
    e2bb:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e2be:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    e2c3:	75 0a                	jne    e2cf <semcheck_relop+0x1bd>
    e2c5:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e2c8:	3d 3b 01 00 00       	cmp    $0x13b,%eax
    e2cd:	74 72                	je     e341 <semcheck_relop+0x22f>
    e2cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e2d3:	8b 10                	mov    (%rax),%edx
    e2d5:	48 8b 05 84 3d 01 00 	mov    0x13d84(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e2dc:	48 8d 0d c5 d4 00 00 	lea    0xd4c5(%rip),%rcx        # 1b7a8 <__PRETTY_FUNCTION__.0+0x1c8>
    e2e3:	48 89 ce             	mov    %rcx,%rsi
    e2e6:	48 89 c7             	mov    %rax,%rdi
    e2e9:	b8 00 00 00 00       	mov    $0x0,%eax
    e2ee:	e8 7d 41 ff ff       	call   2470 <fprintf@plt>
    e2f3:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e2f7:	eb 48                	jmp    e341 <semcheck_relop+0x22f>
    e2f9:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e2fd:	48 89 c7             	mov    %rax,%rdi
    e300:	e8 ac f9 ff ff       	call   dcb1 <is_type_ir>
    e305:	85 c0                	test   %eax,%eax
    e307:	74 10                	je     e319 <semcheck_relop+0x207>
    e309:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e30d:	48 89 c7             	mov    %rax,%rdi
    e310:	e8 9c f9 ff ff       	call   dcb1 <is_type_ir>
    e315:	85 c0                	test   %eax,%eax
    e317:	75 28                	jne    e341 <semcheck_relop+0x22f>
    e319:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e31d:	8b 10                	mov    (%rax),%edx
    e31f:	48 8b 05 3a 3d 01 00 	mov    0x13d3a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e326:	48 8d 0d c3 d4 00 00 	lea    0xd4c3(%rip),%rcx        # 1b7f0 <__PRETTY_FUNCTION__.0+0x210>
    e32d:	48 89 ce             	mov    %rcx,%rsi
    e330:	48 89 c7             	mov    %rax,%rdi
    e333:	b8 00 00 00 00       	mov    $0x0,%eax
    e338:	e8 33 41 ff ff       	call   2470 <fprintf@plt>
    e33d:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e341:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e345:	c7 00 3b 01 00 00    	movl   $0x13b,(%rax)
    e34b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e34e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e352:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e359:	00 00
    e35b:	74 05                	je     e362 <semcheck_relop+0x250>
    e35d:	e8 3e 40 ff ff       	call   23a0 <__stack_chk_fail@plt>
    e362:	c9                   	leave
    e363:	c3                   	ret

000000000000e364 <semcheck_signterm>:
    e364:	f3 0f 1e fa          	endbr64
    e368:	55                   	push   %rbp
    e369:	48 89 e5             	mov    %rsp,%rbp
    e36c:	48 83 ec 30          	sub    $0x30,%rsp
    e370:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e374:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e378:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e37c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    e37f:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
    e383:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e388:	75 28                	jne    e3b2 <semcheck_signterm+0x4e>
    e38a:	48 8d 05 9f da 00 00 	lea    0xda9f(%rip),%rax        # 1be30 <__PRETTY_FUNCTION__.5>
    e391:	48 89 c1             	mov    %rax,%rcx
    e394:	ba f5 00 00 00       	mov    $0xf5,%edx
    e399:	48 8d 05 60 d2 00 00 	lea    0xd260(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e3a0:	48 89 c6             	mov    %rax,%rsi
    e3a3:	48 8d 05 f6 d2 00 00 	lea    0xd2f6(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e3aa:	48 89 c7             	mov    %rax,%rdi
    e3ad:	e8 1e 40 ff ff       	call   23d0 <__assert_fail@plt>
    e3b2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e3b7:	75 28                	jne    e3e1 <semcheck_signterm+0x7d>
    e3b9:	48 8d 05 70 da 00 00 	lea    0xda70(%rip),%rax        # 1be30 <__PRETTY_FUNCTION__.5>
    e3c0:	48 89 c1             	mov    %rax,%rcx
    e3c3:	ba f6 00 00 00       	mov    $0xf6,%edx
    e3c8:	48 8d 05 31 d2 00 00 	lea    0xd231(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e3cf:	48 89 c6             	mov    %rax,%rsi
    e3d2:	48 8d 05 d6 d2 00 00 	lea    0xd2d6(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e3d9:	48 89 c7             	mov    %rax,%rdi
    e3dc:	e8 ef 3f ff ff       	call   23d0 <__assert_fail@plt>
    e3e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3e5:	8b 40 04             	mov    0x4(%rax),%eax
    e3e8:	83 f8 01             	cmp    $0x1,%eax
    e3eb:	74 28                	je     e415 <semcheck_signterm+0xb1>
    e3ed:	48 8d 05 3c da 00 00 	lea    0xda3c(%rip),%rax        # 1be30 <__PRETTY_FUNCTION__.5>
    e3f4:	48 89 c1             	mov    %rax,%rcx
    e3f7:	ba f7 00 00 00       	mov    $0xf7,%edx
    e3fc:	48 8d 05 fd d1 00 00 	lea    0xd1fd(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e403:	48 89 c6             	mov    %rax,%rsi
    e406:	48 8d 05 25 d4 00 00 	lea    0xd425(%rip),%rax        # 1b832 <__PRETTY_FUNCTION__.0+0x252>
    e40d:	48 89 c7             	mov    %rax,%rdi
    e410:	e8 bb 3f ff ff       	call   23d0 <__assert_fail@plt>
    e415:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    e41c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e420:	48 8b 40 08          	mov    0x8(%rax),%rax
    e424:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e428:	8b 7d d0             	mov    -0x30(%rbp),%edi
    e42b:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    e42e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e432:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e43a:	41 89 f8             	mov    %edi,%r8d
    e43d:	48 89 c7             	mov    %rax,%rdi
    e440:	e8 c3 fa ff ff       	call   df08 <semcheck_expr_main>
    e445:	01 45 f4             	add    %eax,-0xc(%rbp)
    e448:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e44c:	48 89 c7             	mov    %rax,%rdi
    e44f:	e8 5d f8 ff ff       	call   dcb1 <is_type_ir>
    e454:	85 c0                	test   %eax,%eax
    e456:	75 28                	jne    e480 <semcheck_signterm+0x11c>
    e458:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e45c:	8b 10                	mov    (%rax),%edx
    e45e:	48 8b 05 fb 3b 01 00 	mov    0x13bfb(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e465:	48 8d 0d e4 d3 00 00 	lea    0xd3e4(%rip),%rcx        # 1b850 <__PRETTY_FUNCTION__.0+0x270>
    e46c:	48 89 ce             	mov    %rcx,%rsi
    e46f:	48 89 c7             	mov    %rax,%rdi
    e472:	b8 00 00 00 00       	mov    $0x0,%eax
    e477:	e8 f4 3f ff ff       	call   2470 <fprintf@plt>
    e47c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    e480:	8b 45 f4             	mov    -0xc(%rbp),%eax
    e483:	c9                   	leave
    e484:	c3                   	ret

000000000000e485 <semcheck_addop>:
    e485:	f3 0f 1e fa          	endbr64
    e489:	55                   	push   %rbp
    e48a:	48 89 e5             	mov    %rsp,%rbp
    e48d:	48 83 ec 50          	sub    $0x50,%rsp
    e491:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e495:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e499:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e49d:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e4a0:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e4a4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e4ab:	00 00
    e4ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e4b1:	31 c0                	xor    %eax,%eax
    e4b3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e4b8:	75 28                	jne    e4e2 <semcheck_addop+0x5d>
    e4ba:	48 8d 05 87 d9 00 00 	lea    0xd987(%rip),%rax        # 1be48 <__PRETTY_FUNCTION__.4>
    e4c1:	48 89 c1             	mov    %rax,%rcx
    e4c4:	ba 10 01 00 00       	mov    $0x110,%edx
    e4c9:	48 8d 05 30 d1 00 00 	lea    0xd130(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e4d0:	48 89 c6             	mov    %rax,%rsi
    e4d3:	48 8d 05 c6 d1 00 00 	lea    0xd1c6(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e4da:	48 89 c7             	mov    %rax,%rdi
    e4dd:	e8 ee 3e ff ff       	call   23d0 <__assert_fail@plt>
    e4e2:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e4e7:	75 28                	jne    e511 <semcheck_addop+0x8c>
    e4e9:	48 8d 05 58 d9 00 00 	lea    0xd958(%rip),%rax        # 1be48 <__PRETTY_FUNCTION__.4>
    e4f0:	48 89 c1             	mov    %rax,%rcx
    e4f3:	ba 11 01 00 00       	mov    $0x111,%edx
    e4f8:	48 8d 05 01 d1 00 00 	lea    0xd101(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e4ff:	48 89 c6             	mov    %rax,%rsi
    e502:	48 8d 05 a6 d1 00 00 	lea    0xd1a6(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e509:	48 89 c7             	mov    %rax,%rdi
    e50c:	e8 bf 3e ff ff       	call   23d0 <__assert_fail@plt>
    e511:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e515:	8b 40 04             	mov    0x4(%rax),%eax
    e518:	83 f8 02             	cmp    $0x2,%eax
    e51b:	74 28                	je     e545 <semcheck_addop+0xc0>
    e51d:	48 8d 05 24 d9 00 00 	lea    0xd924(%rip),%rax        # 1be48 <__PRETTY_FUNCTION__.4>
    e524:	48 89 c1             	mov    %rax,%rcx
    e527:	ba 12 01 00 00       	mov    $0x112,%edx
    e52c:	48 8d 05 cd d0 00 00 	lea    0xd0cd(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e533:	48 89 c6             	mov    %rax,%rsi
    e536:	48 8d 05 47 d3 00 00 	lea    0xd347(%rip),%rax        # 1b884 <__PRETTY_FUNCTION__.0+0x2a4>
    e53d:	48 89 c7             	mov    %rax,%rdi
    e540:	e8 8b 3e ff ff       	call   23d0 <__assert_fail@plt>
    e545:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    e54c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e550:	48 8b 40 10          	mov    0x10(%rax),%rax
    e554:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e558:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e55c:	48 8b 40 18          	mov    0x18(%rax),%rax
    e560:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e564:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e567:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e56a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e56e:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e572:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e576:	41 89 f8             	mov    %edi,%r8d
    e579:	48 89 c7             	mov    %rax,%rdi
    e57c:	e8 87 f9 ff ff       	call   df08 <semcheck_expr_main>
    e581:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e584:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e587:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e58a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e58e:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e592:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e596:	41 89 f8             	mov    %edi,%r8d
    e599:	48 89 c7             	mov    %rax,%rdi
    e59c:	e8 67 f9 ff ff       	call   df08 <semcheck_expr_main>
    e5a1:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e5a4:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e5a7:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e5aa:	39 c2                	cmp    %eax,%edx
    e5ac:	74 28                	je     e5d6 <semcheck_addop+0x151>
    e5ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e5b2:	8b 10                	mov    (%rax),%edx
    e5b4:	48 8b 05 a5 3a 01 00 	mov    0x13aa5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e5bb:	48 8d 0d de d2 00 00 	lea    0xd2de(%rip),%rcx        # 1b8a0 <__PRETTY_FUNCTION__.0+0x2c0>
    e5c2:	48 89 ce             	mov    %rcx,%rsi
    e5c5:	48 89 c7             	mov    %rax,%rdi
    e5c8:	b8 00 00 00 00       	mov    $0x0,%eax
    e5cd:	e8 9e 3e ff ff       	call   2470 <fprintf@plt>
    e5d2:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e5d6:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e5da:	48 89 c7             	mov    %rax,%rdi
    e5dd:	e8 cf f6 ff ff       	call   dcb1 <is_type_ir>
    e5e2:	85 c0                	test   %eax,%eax
    e5e4:	74 10                	je     e5f6 <semcheck_addop+0x171>
    e5e6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e5ea:	48 89 c7             	mov    %rax,%rdi
    e5ed:	e8 bf f6 ff ff       	call   dcb1 <is_type_ir>
    e5f2:	85 c0                	test   %eax,%eax
    e5f4:	75 28                	jne    e61e <semcheck_addop+0x199>
    e5f6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e5fa:	8b 10                	mov    (%rax),%edx
    e5fc:	48 8b 05 5d 3a 01 00 	mov    0x13a5d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e603:	48 8d 0d c6 d2 00 00 	lea    0xd2c6(%rip),%rcx        # 1b8d0 <__PRETTY_FUNCTION__.0+0x2f0>
    e60a:	48 89 ce             	mov    %rcx,%rsi
    e60d:	48 89 c7             	mov    %rax,%rdi
    e610:	b8 00 00 00 00       	mov    $0x0,%eax
    e615:	e8 56 3e ff ff       	call   2470 <fprintf@plt>
    e61a:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e61e:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e621:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e625:	89 10                	mov    %edx,(%rax)
    e627:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e62a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e62e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e635:	00 00
    e637:	74 05                	je     e63e <semcheck_addop+0x1b9>
    e639:	e8 62 3d ff ff       	call   23a0 <__stack_chk_fail@plt>
    e63e:	c9                   	leave
    e63f:	c3                   	ret

000000000000e640 <semcheck_mulop>:
    e640:	f3 0f 1e fa          	endbr64
    e644:	55                   	push   %rbp
    e645:	48 89 e5             	mov    %rsp,%rbp
    e648:	48 83 ec 50          	sub    $0x50,%rsp
    e64c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e650:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e654:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e658:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    e65b:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    e65f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e666:	00 00
    e668:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e66c:	31 c0                	xor    %eax,%eax
    e66e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e673:	75 28                	jne    e69d <semcheck_mulop+0x5d>
    e675:	48 8d 05 dc d7 00 00 	lea    0xd7dc(%rip),%rax        # 1be58 <__PRETTY_FUNCTION__.3>
    e67c:	48 89 c1             	mov    %rax,%rcx
    e67f:	ba 34 01 00 00       	mov    $0x134,%edx
    e684:	48 8d 05 75 cf 00 00 	lea    0xcf75(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e68b:	48 89 c6             	mov    %rax,%rsi
    e68e:	48 8d 05 0b d0 00 00 	lea    0xd00b(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e695:	48 89 c7             	mov    %rax,%rdi
    e698:	e8 33 3d ff ff       	call   23d0 <__assert_fail@plt>
    e69d:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    e6a2:	75 28                	jne    e6cc <semcheck_mulop+0x8c>
    e6a4:	48 8d 05 ad d7 00 00 	lea    0xd7ad(%rip),%rax        # 1be58 <__PRETTY_FUNCTION__.3>
    e6ab:	48 89 c1             	mov    %rax,%rcx
    e6ae:	ba 35 01 00 00       	mov    $0x135,%edx
    e6b3:	48 8d 05 46 cf 00 00 	lea    0xcf46(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e6ba:	48 89 c6             	mov    %rax,%rsi
    e6bd:	48 8d 05 eb cf 00 00 	lea    0xcfeb(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e6c4:	48 89 c7             	mov    %rax,%rdi
    e6c7:	e8 04 3d ff ff       	call   23d0 <__assert_fail@plt>
    e6cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e6d0:	8b 40 04             	mov    0x4(%rax),%eax
    e6d3:	83 f8 03             	cmp    $0x3,%eax
    e6d6:	74 28                	je     e700 <semcheck_mulop+0xc0>
    e6d8:	48 8d 05 79 d7 00 00 	lea    0xd779(%rip),%rax        # 1be58 <__PRETTY_FUNCTION__.3>
    e6df:	48 89 c1             	mov    %rax,%rcx
    e6e2:	ba 36 01 00 00       	mov    $0x136,%edx
    e6e7:	48 8d 05 12 cf 00 00 	lea    0xcf12(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e6ee:	48 89 c6             	mov    %rax,%rsi
    e6f1:	48 8d 05 16 d2 00 00 	lea    0xd216(%rip),%rax        # 1b90e <__PRETTY_FUNCTION__.0+0x32e>
    e6f8:	48 89 c7             	mov    %rax,%rdi
    e6fb:	e8 d0 3c ff ff       	call   23d0 <__assert_fail@plt>
    e700:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    e707:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e70b:	48 8b 40 10          	mov    0x10(%rax),%rax
    e70f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e713:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e717:	48 8b 40 18          	mov    0x18(%rax),%rax
    e71b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e71f:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e722:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e725:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e729:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e72d:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e731:	41 89 f8             	mov    %edi,%r8d
    e734:	48 89 c7             	mov    %rax,%rdi
    e737:	e8 cc f7 ff ff       	call   df08 <semcheck_expr_main>
    e73c:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e73f:	8b 7d b0             	mov    -0x50(%rbp),%edi
    e742:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    e745:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e749:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e74d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e751:	41 89 f8             	mov    %edi,%r8d
    e754:	48 89 c7             	mov    %rax,%rdi
    e757:	e8 ac f7 ff ff       	call   df08 <semcheck_expr_main>
    e75c:	01 45 e4             	add    %eax,-0x1c(%rbp)
    e75f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e762:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e765:	39 c2                	cmp    %eax,%edx
    e767:	74 28                	je     e791 <semcheck_mulop+0x151>
    e769:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e76d:	8b 10                	mov    (%rax),%edx
    e76f:	48 8b 05 ea 38 01 00 	mov    0x138ea(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e776:	48 8d 0d ab d1 00 00 	lea    0xd1ab(%rip),%rcx        # 1b928 <__PRETTY_FUNCTION__.0+0x348>
    e77d:	48 89 ce             	mov    %rcx,%rsi
    e780:	48 89 c7             	mov    %rax,%rdi
    e783:	b8 00 00 00 00       	mov    $0x0,%eax
    e788:	e8 e3 3c ff ff       	call   2470 <fprintf@plt>
    e78d:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e791:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    e795:	48 89 c7             	mov    %rax,%rdi
    e798:	e8 14 f5 ff ff       	call   dcb1 <is_type_ir>
    e79d:	85 c0                	test   %eax,%eax
    e79f:	74 10                	je     e7b1 <semcheck_mulop+0x171>
    e7a1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e7a5:	48 89 c7             	mov    %rax,%rdi
    e7a8:	e8 04 f5 ff ff       	call   dcb1 <is_type_ir>
    e7ad:	85 c0                	test   %eax,%eax
    e7af:	75 28                	jne    e7d9 <semcheck_mulop+0x199>
    e7b1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e7b5:	8b 10                	mov    (%rax),%edx
    e7b7:	48 8b 05 a2 38 01 00 	mov    0x138a2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e7be:	48 8d 0d 93 d1 00 00 	lea    0xd193(%rip),%rcx        # 1b958 <__PRETTY_FUNCTION__.0+0x378>
    e7c5:	48 89 ce             	mov    %rcx,%rsi
    e7c8:	48 89 c7             	mov    %rax,%rdi
    e7cb:	b8 00 00 00 00       	mov    $0x0,%eax
    e7d0:	e8 9b 3c ff ff       	call   2470 <fprintf@plt>
    e7d5:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    e7d9:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e7dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e7e0:	89 10                	mov    %edx,(%rax)
    e7e2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e7e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e7e9:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e7f0:	00 00
    e7f2:	74 05                	je     e7f9 <semcheck_mulop+0x1b9>
    e7f4:	e8 a7 3b ff ff       	call   23a0 <__stack_chk_fail@plt>
    e7f9:	c9                   	leave
    e7fa:	c3                   	ret

000000000000e7fb <semcheck_varid>:
    e7fb:	f3 0f 1e fa          	endbr64
    e7ff:	55                   	push   %rbp
    e800:	48 89 e5             	mov    %rsp,%rbp
    e803:	48 83 ec 40          	sub    $0x40,%rsp
    e807:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e80b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e80f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e813:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
    e816:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
    e81a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e821:	00 00
    e823:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e827:	31 c0                	xor    %eax,%eax
    e829:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e82e:	75 28                	jne    e858 <semcheck_varid+0x5d>
    e830:	48 8d 05 31 d6 00 00 	lea    0xd631(%rip),%rax        # 1be68 <__PRETTY_FUNCTION__.2>
    e837:	48 89 c1             	mov    %rax,%rcx
    e83a:	ba 58 01 00 00       	mov    $0x158,%edx
    e83f:	48 8d 05 ba cd 00 00 	lea    0xcdba(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e846:	48 89 c6             	mov    %rax,%rsi
    e849:	48 8d 05 50 ce 00 00 	lea    0xce50(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    e850:	48 89 c7             	mov    %rax,%rdi
    e853:	e8 78 3b ff ff       	call   23d0 <__assert_fail@plt>
    e858:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e85d:	75 28                	jne    e887 <semcheck_varid+0x8c>
    e85f:	48 8d 05 02 d6 00 00 	lea    0xd602(%rip),%rax        # 1be68 <__PRETTY_FUNCTION__.2>
    e866:	48 89 c1             	mov    %rax,%rcx
    e869:	ba 59 01 00 00       	mov    $0x159,%edx
    e86e:	48 8d 05 8b cd 00 00 	lea    0xcd8b(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e875:	48 89 c6             	mov    %rax,%rsi
    e878:	48 8d 05 30 ce 00 00 	lea    0xce30(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    e87f:	48 89 c7             	mov    %rax,%rdi
    e882:	e8 49 3b ff ff       	call   23d0 <__assert_fail@plt>
    e887:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e88b:	8b 40 04             	mov    0x4(%rax),%eax
    e88e:	83 f8 04             	cmp    $0x4,%eax
    e891:	74 28                	je     e8bb <semcheck_varid+0xc0>
    e893:	48 8d 05 ce d5 00 00 	lea    0xd5ce(%rip),%rax        # 1be68 <__PRETTY_FUNCTION__.2>
    e89a:	48 89 c1             	mov    %rax,%rcx
    e89d:	ba 5a 01 00 00       	mov    $0x15a,%edx
    e8a2:	48 8d 05 57 cd 00 00 	lea    0xcd57(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    e8a9:	48 89 c6             	mov    %rax,%rsi
    e8ac:	48 8d 05 e3 d0 00 00 	lea    0xd0e3(%rip),%rax        # 1b996 <__PRETTY_FUNCTION__.0+0x3b6>
    e8b3:	48 89 c7             	mov    %rax,%rdi
    e8b6:	e8 15 3b ff ff       	call   23d0 <__assert_fail@plt>
    e8bb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    e8c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8c6:	48 8b 40 08          	mov    0x8(%rax),%rax
    e8ca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e8ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8d2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e8d6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e8da:	48 89 ce             	mov    %rcx,%rsi
    e8dd:	48 89 c7             	mov    %rax,%rdi
    e8e0:	e8 de d7 ff ff       	call   c0c3 <FindIdent>
    e8e5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    e8e8:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
    e8ec:	75 38                	jne    e926 <semcheck_varid+0x12b>
    e8ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8f2:	8b 10                	mov    (%rax),%edx
    e8f4:	48 8b 05 65 37 01 00 	mov    0x13765(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e8fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e8ff:	48 8d 35 aa d0 00 00 	lea    0xd0aa(%rip),%rsi        # 1b9b0 <__PRETTY_FUNCTION__.0+0x3d0>
    e906:	48 89 c7             	mov    %rax,%rdi
    e909:	b8 00 00 00 00       	mov    $0x0,%eax
    e90e:	e8 5d 3b ff ff       	call   2470 <fprintf@plt>
    e913:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e917:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e91b:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    e921:	e9 b8 00 00 00       	jmp    e9de <semcheck_varid+0x1e3>
    e926:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e92a:	8b 55 c0             	mov    -0x40(%rbp),%edx
    e92d:	89 d6                	mov    %edx,%esi
    e92f:	48 89 c7             	mov    %rax,%rdi
    e932:	e8 13 f3 ff ff       	call   dc4a <set_hash_meta>
    e937:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e93a:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    e93d:	7e 4c                	jle    e98b <semcheck_varid+0x190>
    e93f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e943:	8b 10                	mov    (%rax),%edx
    e945:	48 8b 05 14 37 01 00 	mov    0x13714(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e94c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e950:	48 8d 35 89 d0 00 00 	lea    0xd089(%rip),%rsi        # 1b9e0 <__PRETTY_FUNCTION__.0+0x400>
    e957:	48 89 c7             	mov    %rax,%rdi
    e95a:	b8 00 00 00 00       	mov    $0x0,%eax
    e95f:	e8 0c 3b ff ff       	call   2470 <fprintf@plt>
    e964:	48 8b 05 f5 36 01 00 	mov    0x136f5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e96b:	48 89 c1             	mov    %rax,%rcx
    e96e:	ba 30 00 00 00       	mov    $0x30,%edx
    e973:	be 01 00 00 00       	mov    $0x1,%esi
    e978:	48 8d 05 99 d0 00 00 	lea    0xd099(%rip),%rax        # 1ba18 <__PRETTY_FUNCTION__.0+0x438>
    e97f:	48 89 c7             	mov    %rax,%rdi
    e982:	e8 c9 3b ff ff       	call   2550 <fwrite@plt>
    e987:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e98b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e98f:	8b 40 10             	mov    0x10(%rax),%eax
    e992:	85 c0                	test   %eax,%eax
    e994:	74 35                	je     e9cb <semcheck_varid+0x1d0>
    e996:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e99a:	8b 40 10             	mov    0x10(%rax),%eax
    e99d:	83 f8 04             	cmp    $0x4,%eax
    e9a0:	74 29                	je     e9cb <semcheck_varid+0x1d0>
    e9a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e9a6:	8b 10                	mov    (%rax),%edx
    e9a8:	48 8b 05 b1 36 01 00 	mov    0x136b1(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    e9af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e9b3:	48 8d 35 96 d0 00 00 	lea    0xd096(%rip),%rsi        # 1ba50 <__PRETTY_FUNCTION__.0+0x470>
    e9ba:	48 89 c7             	mov    %rax,%rdi
    e9bd:	b8 00 00 00 00       	mov    $0x0,%eax
    e9c2:	e8 a9 3a ff ff       	call   2470 <fprintf@plt>
    e9c7:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    e9cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e9cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9d3:	48 89 d6             	mov    %rdx,%rsi
    e9d6:	48 89 c7             	mov    %rax,%rdi
    e9d9:	e8 a1 f3 ff ff       	call   dd7f <set_type_from_hashtype>
    e9de:	8b 45 e0             	mov    -0x20(%rbp),%eax
    e9e1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e9e5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    e9ec:	00 00
    e9ee:	74 05                	je     e9f5 <semcheck_varid+0x1fa>
    e9f0:	e8 ab 39 ff ff       	call   23a0 <__stack_chk_fail@plt>
    e9f5:	c9                   	leave
    e9f6:	c3                   	ret

000000000000e9f7 <semcheck_arrayaccess>:
    e9f7:	f3 0f 1e fa          	endbr64
    e9fb:	55                   	push   %rbp
    e9fc:	48 89 e5             	mov    %rsp,%rbp
    e9ff:	48 83 ec 50          	sub    $0x50,%rsp
    ea03:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ea07:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    ea0b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    ea0f:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    ea12:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    ea16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ea1d:	00 00
    ea1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ea23:	31 c0                	xor    %eax,%eax
    ea25:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    ea2a:	75 28                	jne    ea54 <semcheck_arrayaccess+0x5d>
    ea2c:	48 8d 05 4d d4 00 00 	lea    0xd44d(%rip),%rax        # 1be80 <__PRETTY_FUNCTION__.1>
    ea33:	48 89 c1             	mov    %rax,%rcx
    ea36:	ba 87 01 00 00       	mov    $0x187,%edx
    ea3b:	48 8d 05 be cb 00 00 	lea    0xcbbe(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ea42:	48 89 c6             	mov    %rax,%rsi
    ea45:	48 8d 05 54 cc 00 00 	lea    0xcc54(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    ea4c:	48 89 c7             	mov    %rax,%rdi
    ea4f:	e8 7c 39 ff ff       	call   23d0 <__assert_fail@plt>
    ea54:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    ea59:	75 28                	jne    ea83 <semcheck_arrayaccess+0x8c>
    ea5b:	48 8d 05 1e d4 00 00 	lea    0xd41e(%rip),%rax        # 1be80 <__PRETTY_FUNCTION__.1>
    ea62:	48 89 c1             	mov    %rax,%rcx
    ea65:	ba 88 01 00 00       	mov    $0x188,%edx
    ea6a:	48 8d 05 8f cb 00 00 	lea    0xcb8f(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ea71:	48 89 c6             	mov    %rax,%rsi
    ea74:	48 8d 05 34 cc 00 00 	lea    0xcc34(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    ea7b:	48 89 c7             	mov    %rax,%rdi
    ea7e:	e8 4d 39 ff ff       	call   23d0 <__assert_fail@plt>
    ea83:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ea87:	8b 40 04             	mov    0x4(%rax),%eax
    ea8a:	83 f8 05             	cmp    $0x5,%eax
    ea8d:	74 28                	je     eab7 <semcheck_arrayaccess+0xc0>
    ea8f:	48 8d 05 ea d3 00 00 	lea    0xd3ea(%rip),%rax        # 1be80 <__PRETTY_FUNCTION__.1>
    ea96:	48 89 c1             	mov    %rax,%rcx
    ea99:	ba 89 01 00 00       	mov    $0x189,%edx
    ea9e:	48 8d 05 5b cb 00 00 	lea    0xcb5b(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    eaa5:	48 89 c6             	mov    %rax,%rsi
    eaa8:	48 8d 05 e9 cf 00 00 	lea    0xcfe9(%rip),%rax        # 1ba98 <__PRETTY_FUNCTION__.0+0x4b8>
    eaaf:	48 89 c7             	mov    %rax,%rdi
    eab2:	e8 19 39 ff ff       	call   23d0 <__assert_fail@plt>
    eab7:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    eabe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eac2:	48 8b 40 08          	mov    0x8(%rax),%rax
    eac6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    eaca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eace:	48 8b 40 10          	mov    0x10(%rax),%rax
    ead2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ead6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eada:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    eade:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    eae2:	48 89 ce             	mov    %rcx,%rsi
    eae5:	48 89 c7             	mov    %rax,%rdi
    eae8:	e8 d6 d5 ff ff       	call   c0c3 <FindIdent>
    eaed:	89 45 dc             	mov    %eax,-0x24(%rbp)
    eaf0:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
    eaf4:	75 38                	jne    eb2e <semcheck_arrayaccess+0x137>
    eaf6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eafa:	8b 10                	mov    (%rax),%edx
    eafc:	48 8b 05 5d 35 01 00 	mov    0x1355d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    eb03:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    eb07:	48 8d 35 a2 ce 00 00 	lea    0xcea2(%rip),%rsi        # 1b9b0 <__PRETTY_FUNCTION__.0+0x3d0>
    eb0e:	48 89 c7             	mov    %rax,%rdi
    eb11:	b8 00 00 00 00       	mov    $0x0,%eax
    eb16:	e8 55 39 ff ff       	call   2470 <fprintf@plt>
    eb1b:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    eb1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb23:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    eb29:	e9 ad 00 00 00       	jmp    ebdb <semcheck_arrayaccess+0x1e4>
    eb2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb32:	8b 55 b0             	mov    -0x50(%rbp),%edx
    eb35:	89 d6                	mov    %edx,%esi
    eb37:	48 89 c7             	mov    %rax,%rdi
    eb3a:	e8 0b f1 ff ff       	call   dc4a <set_hash_meta>
    eb3f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    eb42:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    eb45:	7e 4c                	jle    eb93 <semcheck_arrayaccess+0x19c>
    eb47:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb4b:	8b 10                	mov    (%rax),%edx
    eb4d:	48 8b 05 0c 35 01 00 	mov    0x1350c(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    eb54:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    eb58:	48 8d 35 81 ce 00 00 	lea    0xce81(%rip),%rsi        # 1b9e0 <__PRETTY_FUNCTION__.0+0x400>
    eb5f:	48 89 c7             	mov    %rax,%rdi
    eb62:	b8 00 00 00 00       	mov    $0x0,%eax
    eb67:	e8 04 39 ff ff       	call   2470 <fprintf@plt>
    eb6c:	48 8b 05 ed 34 01 00 	mov    0x134ed(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    eb73:	48 89 c1             	mov    %rax,%rcx
    eb76:	ba 30 00 00 00       	mov    $0x30,%edx
    eb7b:	be 01 00 00 00       	mov    $0x1,%esi
    eb80:	48 8d 05 91 ce 00 00 	lea    0xce91(%rip),%rax        # 1ba18 <__PRETTY_FUNCTION__.0+0x438>
    eb87:	48 89 c7             	mov    %rax,%rdi
    eb8a:	e8 c1 39 ff ff       	call   2550 <fwrite@plt>
    eb8f:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    eb93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb97:	8b 40 10             	mov    0x10(%rax),%eax
    eb9a:	83 f8 01             	cmp    $0x1,%eax
    eb9d:	74 29                	je     ebc8 <semcheck_arrayaccess+0x1d1>
    eb9f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eba3:	8b 10                	mov    (%rax),%edx
    eba5:	48 8b 05 b4 34 01 00 	mov    0x134b4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ebac:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    ebb0:	48 8d 35 01 cf 00 00 	lea    0xcf01(%rip),%rsi        # 1bab8 <__PRETTY_FUNCTION__.0+0x4d8>
    ebb7:	48 89 c7             	mov    %rax,%rdi
    ebba:	b8 00 00 00 00       	mov    $0x0,%eax
    ebbf:	e8 ac 38 ff ff       	call   2470 <fprintf@plt>
    ebc4:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    ebc8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ebcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ebd0:	48 89 d6             	mov    %rdx,%rsi
    ebd3:	48 89 c7             	mov    %rax,%rdi
    ebd6:	e8 a4 f1 ff ff       	call   dd7f <set_type_from_hashtype>
    ebdb:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    ebde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ebe2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    ebe6:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    ebea:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ebf0:	48 89 c7             	mov    %rax,%rdi
    ebf3:	e8 10 f3 ff ff       	call   df08 <semcheck_expr_main>
    ebf8:	01 45 d8             	add    %eax,-0x28(%rbp)
    ebfb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ebfe:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ec03:	74 28                	je     ec2d <semcheck_arrayaccess+0x236>
    ec05:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec09:	8b 10                	mov    (%rax),%edx
    ec0b:	48 8b 05 4e 34 01 00 	mov    0x1344e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ec12:	48 8d 0d d7 ce 00 00 	lea    0xced7(%rip),%rcx        # 1baf0 <__PRETTY_FUNCTION__.0+0x510>
    ec19:	48 89 ce             	mov    %rcx,%rsi
    ec1c:	48 89 c7             	mov    %rax,%rdi
    ec1f:	b8 00 00 00 00       	mov    $0x0,%eax
    ec24:	e8 47 38 ff ff       	call   2470 <fprintf@plt>
    ec29:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    ec2d:	8b 45 d8             	mov    -0x28(%rbp),%eax
    ec30:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ec34:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    ec3b:	00 00
    ec3d:	74 05                	je     ec44 <semcheck_arrayaccess+0x24d>
    ec3f:	e8 5c 37 ff ff       	call   23a0 <__stack_chk_fail@plt>
    ec44:	c9                   	leave
    ec45:	c3                   	ret

000000000000ec46 <semcheck_funccall>:
    ec46:	f3 0f 1e fa          	endbr64
    ec4a:	55                   	push   %rbp
    ec4b:	48 89 e5             	mov    %rsp,%rbp
    ec4e:	53                   	push   %rbx
    ec4f:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    ec56:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
    ec5d:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
    ec64:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
    ec6b:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
    ec71:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
    ec78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ec7f:	00 00
    ec81:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ec85:	31 c0                	xor    %eax,%eax
    ec87:	48 83 bd 20 ff ff ff 	cmpq   $0x0,-0xe0(%rbp)
    ec8e:	00
    ec8f:	75 28                	jne    ecb9 <semcheck_funccall+0x73>
    ec91:	48 8d 05 08 d2 00 00 	lea    0xd208(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    ec98:	48 89 c1             	mov    %rax,%rcx
    ec9b:	ba c4 01 00 00       	mov    $0x1c4,%edx
    eca0:	48 8d 05 59 c9 00 00 	lea    0xc959(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    eca7:	48 89 c6             	mov    %rax,%rsi
    ecaa:	48 8d 05 ef c9 00 00 	lea    0xc9ef(%rip),%rax        # 1b6a0 <__PRETTY_FUNCTION__.0+0xc0>
    ecb1:	48 89 c7             	mov    %rax,%rdi
    ecb4:	e8 17 37 ff ff       	call   23d0 <__assert_fail@plt>
    ecb9:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)
    ecc0:	00
    ecc1:	75 28                	jne    eceb <semcheck_funccall+0xa5>
    ecc3:	48 8d 05 d6 d1 00 00 	lea    0xd1d6(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    ecca:	48 89 c1             	mov    %rax,%rcx
    eccd:	ba c5 01 00 00       	mov    $0x1c5,%edx
    ecd2:	48 8d 05 27 c9 00 00 	lea    0xc927(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ecd9:	48 89 c6             	mov    %rax,%rsi
    ecdc:	48 8d 05 cc c9 00 00 	lea    0xc9cc(%rip),%rax        # 1b6af <__PRETTY_FUNCTION__.0+0xcf>
    ece3:	48 89 c7             	mov    %rax,%rdi
    ece6:	e8 e5 36 ff ff       	call   23d0 <__assert_fail@plt>
    eceb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ecf2:	8b 40 04             	mov    0x4(%rax),%eax
    ecf5:	83 f8 06             	cmp    $0x6,%eax
    ecf8:	74 28                	je     ed22 <semcheck_funccall+0xdc>
    ecfa:	48 8d 05 9f d1 00 00 	lea    0xd19f(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    ed01:	48 89 c1             	mov    %rax,%rcx
    ed04:	ba c6 01 00 00       	mov    $0x1c6,%edx
    ed09:	48 8d 05 f0 c8 00 00 	lea    0xc8f0(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    ed10:	48 89 c6             	mov    %rax,%rsi
    ed13:	48 8d 05 16 ce 00 00 	lea    0xce16(%rip),%rax        # 1bb30 <__PRETTY_FUNCTION__.0+0x550>
    ed1a:	48 89 c7             	mov    %rax,%rdi
    ed1d:	e8 ae 36 ff ff       	call   23d0 <__assert_fail@plt>
    ed22:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    ed29:	00 00 00
    ed2c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed33:	48 8b 40 08          	mov    0x8(%rax),%rax
    ed37:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ed3b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed42:	48 8b 40 18          	mov    0x18(%rax),%rax
    ed46:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    ed4d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    ed51:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ed58:	48 89 d6             	mov    %rdx,%rsi
    ed5b:	48 89 c7             	mov    %rax,%rdi
    ed5e:	e8 7c d4 ff ff       	call   c1df <FindAllIdents>
    ed63:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ed67:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
    ed6d:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    ed74:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    ed7b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ed7f:	48 89 c7             	mov    %rax,%rdi
    ed82:	e8 a6 dd ff ff       	call   cb2d <MangleFunctionNameFromCallSite>
    ed87:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    ed8b:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    ed92:	00
    ed93:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
    ed9a:	00 00 00
    ed9d:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    eda2:	74 6f                	je     ee13 <semcheck_funccall+0x1cd>
    eda4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eda8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    edaf:	eb 58                	jmp    ee09 <semcheck_funccall+0x1c3>
    edb1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    edb8:	48 8b 40 08          	mov    0x8(%rax),%rax
    edbc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    edc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    edc4:	48 8b 40 08          	mov    0x8(%rax),%rax
    edc8:	48 85 c0             	test   %rax,%rax
    edcb:	74 2a                	je     edf7 <semcheck_funccall+0x1b1>
    edcd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    edd1:	48 8b 40 08          	mov    0x8(%rax),%rax
    edd5:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    edd9:	48 89 d6             	mov    %rdx,%rsi
    eddc:	48 89 c7             	mov    %rax,%rdi
    eddf:	e8 6c 36 ff ff       	call   2450 <strcmp@plt>
    ede4:	85 c0                	test   %eax,%eax
    ede6:	75 0f                	jne    edf7 <semcheck_funccall+0x1b1>
    ede8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    edec:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    edf0:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
    edf7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    edfe:	48 8b 40 10          	mov    0x10(%rax),%rax
    ee02:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    ee09:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    ee10:	00
    ee11:	75 9e                	jne    edb1 <semcheck_funccall+0x16b>
    ee13:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    ee1a:	00
    ee1b:	c7 85 48 ff ff ff 0f 	movl   $0x270f,-0xb8(%rbp)
    ee22:	27 00 00
    ee25:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    ee2c:	00 00 00
    ee2f:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    ee34:	0f 84 62 01 00 00    	je     ef9c <semcheck_funccall+0x356>
    ee3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee3e:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    ee42:	e9 4a 01 00 00       	jmp    ef91 <semcheck_funccall+0x34b>
    ee47:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ee4b:	48 8b 40 08          	mov    0x8(%rax),%rax
    ee4f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ee53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee57:	48 8b 40 18          	mov    0x18(%rax),%rax
    ee5b:	48 89 c7             	mov    %rax,%rdi
    ee5e:	e8 34 97 ff ff       	call   8597 <ListLength>
    ee63:	89 c3                	mov    %eax,%ebx
    ee65:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    ee6c:	48 89 c7             	mov    %rax,%rdi
    ee6f:	e8 23 97 ff ff       	call   8597 <ListLength>
    ee74:	39 c3                	cmp    %eax,%ebx
    ee76:	0f 85 09 01 00 00    	jne    ef85 <semcheck_funccall+0x33f>
    ee7c:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
    ee83:	00 00 00
    ee86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee8a:	48 8b 40 18          	mov    0x18(%rax),%rax
    ee8e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ee92:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    ee99:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    ee9d:	e9 95 00 00 00       	jmp    ef37 <semcheck_funccall+0x2f1>
    eea2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    eea6:	48 8b 40 08          	mov    0x8(%rax),%rax
    eeaa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    eeae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eeb2:	8b 40 10             	mov    0x10(%rax),%eax
    eeb5:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    eebb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    eebf:	48 8b 50 08          	mov    0x8(%rax),%rdx
    eec3:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
    eec9:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
    eed0:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    eed7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    eedd:	48 89 c7             	mov    %rax,%rdi
    eee0:	e8 23 f0 ff ff       	call   df08 <semcheck_expr_main>
    eee5:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    eeeb:	39 85 54 ff ff ff    	cmp    %eax,-0xac(%rbp)
    eef1:	74 2c                	je     ef1f <semcheck_funccall+0x2d9>
    eef3:	81 bd 54 ff ff ff 0d 	cmpl   $0x10d,-0xac(%rbp)
    eefa:	01 00 00
    eefd:	75 16                	jne    ef15 <semcheck_funccall+0x2cf>
    eeff:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    ef05:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    ef0a:	75 09                	jne    ef15 <semcheck_funccall+0x2cf>
    ef0c:	83 85 50 ff ff ff 01 	addl   $0x1,-0xb0(%rbp)
    ef13:	eb 0a                	jmp    ef1f <semcheck_funccall+0x2d9>
    ef15:	81 85 50 ff ff ff e8 	addl   $0x3e8,-0xb0(%rbp)
    ef1c:	03 00 00
    ef1f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ef23:	48 8b 40 10          	mov    0x10(%rax),%rax
    ef27:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ef2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ef2f:	48 8b 40 10          	mov    0x10(%rax),%rax
    ef33:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    ef37:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    ef3c:	0f 85 60 ff ff ff    	jne    eea2 <semcheck_funccall+0x25c>
    ef42:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    ef48:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
    ef4e:	7d 20                	jge    ef70 <semcheck_funccall+0x32a>
    ef50:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    ef56:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    ef5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef60:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    ef64:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%rbp)
    ef6b:	00 00 00
    ef6e:	eb 15                	jmp    ef85 <semcheck_funccall+0x33f>
    ef70:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    ef76:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
    ef7c:	75 07                	jne    ef85 <semcheck_funccall+0x33f>
    ef7e:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    ef85:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ef89:	48 8b 40 10          	mov    0x10(%rax),%rax
    ef8d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    ef91:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    ef96:	0f 85 ab fe ff ff    	jne    ee47 <semcheck_funccall+0x201>
    ef9c:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%rbp)
    efa3:	75 51                	jne    eff6 <semcheck_funccall+0x3b0>
    efa5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    efa9:	48 8b 40 08          	mov    0x8(%rax),%rax
    efad:	48 89 c7             	mov    %rax,%rdi
    efb0:	e8 ab 35 ff ff       	call   2560 <strdup@plt>
    efb5:	48 89 c2             	mov    %rax,%rdx
    efb8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    efbf:	48 89 50 10          	mov    %rdx,0x10(%rax)
    efc3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    efca:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    efce:	48 89 50 20          	mov    %rdx,0x20(%rax)
    efd2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    efd6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    efda:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
    efe1:	00 00 00
    efe4:	83 bd 58 ff ff ff ff 	cmpl   $0xffffffff,-0xa8(%rbp)
    efeb:	0f 85 e4 00 00 00    	jne    f0d5 <semcheck_funccall+0x48f>
    eff1:	e9 97 00 00 00       	jmp    f08d <semcheck_funccall+0x447>
    eff6:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
    effd:	75 47                	jne    f046 <semcheck_funccall+0x400>
    efff:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f006:	8b 10                	mov    (%rax),%edx
    f008:	48 8b 05 51 30 01 00 	mov    0x13051(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f00f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f013:	48 8d 35 3e cb 00 00 	lea    0xcb3e(%rip),%rsi        # 1bb58 <__PRETTY_FUNCTION__.0+0x578>
    f01a:	48 89 c7             	mov    %rax,%rdi
    f01d:	b8 00 00 00 00       	mov    $0x0,%eax
    f022:	e8 49 34 ff ff       	call   2470 <fprintf@plt>
    f027:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f02e:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    f034:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f03b:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    f041:	e9 ff 03 00 00       	jmp    f445 <semcheck_funccall+0x7ff>
    f046:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f04d:	8b 10                	mov    (%rax),%edx
    f04f:	48 8b 05 0a 30 01 00 	mov    0x1300a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f056:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f05a:	48 8d 35 47 cb 00 00 	lea    0xcb47(%rip),%rsi        # 1bba8 <__PRETTY_FUNCTION__.0+0x5c8>
    f061:	48 89 c7             	mov    %rax,%rdi
    f064:	b8 00 00 00 00       	mov    $0x0,%eax
    f069:	e8 02 34 ff ff       	call   2470 <fprintf@plt>
    f06e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f075:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    f07b:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f082:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    f088:	e9 b8 03 00 00       	jmp    f445 <semcheck_funccall+0x7ff>
    f08d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f094:	8b 10                	mov    (%rax),%edx
    f096:	48 8b 05 c3 2f 01 00 	mov    0x12fc3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f09d:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    f0a1:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f0a5:	49 89 f0             	mov    %rsi,%r8
    f0a8:	48 8d 35 31 cb 00 00 	lea    0xcb31(%rip),%rsi        # 1bbe0 <__PRETTY_FUNCTION__.0+0x600>
    f0af:	48 89 c7             	mov    %rax,%rdi
    f0b2:	b8 00 00 00 00       	mov    $0x0,%eax
    f0b7:	e8 b4 33 ff ff       	call   2470 <fprintf@plt>
    f0bc:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f0c3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f0ca:	c7 00 3c 01 00 00    	movl   $0x13c,(%rax)
    f0d0:	e9 6a 03 00 00       	jmp    f43f <semcheck_funccall+0x7f9>
    f0d5:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
    f0db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0df:	89 d6                	mov    %edx,%esi
    f0e1:	48 89 c7             	mov    %rax,%rdi
    f0e4:	e8 61 eb ff ff       	call   dc4a <set_hash_meta>
    f0e9:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
    f0ef:	3b 85 14 ff ff ff    	cmp    -0xec(%rbp),%eax
    f0f5:	7e 52                	jle    f149 <semcheck_funccall+0x503>
    f0f7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f0fe:	8b 10                	mov    (%rax),%edx
    f100:	48 8b 05 59 2f 01 00 	mov    0x12f59(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f107:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f10b:	48 8d 35 0e cb 00 00 	lea    0xcb0e(%rip),%rsi        # 1bc20 <__PRETTY_FUNCTION__.0+0x640>
    f112:	48 89 c7             	mov    %rax,%rdi
    f115:	b8 00 00 00 00       	mov    $0x0,%eax
    f11a:	e8 51 33 ff ff       	call   2470 <fprintf@plt>
    f11f:	48 8b 05 3a 2f 01 00 	mov    0x12f3a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f126:	48 89 c1             	mov    %rax,%rcx
    f129:	ba 30 00 00 00       	mov    $0x30,%edx
    f12e:	be 01 00 00 00       	mov    $0x1,%esi
    f133:	48 8d 05 de c8 00 00 	lea    0xc8de(%rip),%rax        # 1ba18 <__PRETTY_FUNCTION__.0+0x438>
    f13a:	48 89 c7             	mov    %rax,%rdi
    f13d:	e8 0e 34 ff ff       	call   2550 <fwrite@plt>
    f142:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f149:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f14d:	8b 40 10             	mov    0x10(%rax),%eax
    f150:	83 f8 03             	cmp    $0x3,%eax
    f153:	74 3b                	je     f190 <semcheck_funccall+0x54a>
    f155:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f159:	8b 40 10             	mov    0x10(%rax),%eax
    f15c:	83 f8 04             	cmp    $0x4,%eax
    f15f:	74 2f                	je     f190 <semcheck_funccall+0x54a>
    f161:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f168:	8b 10                	mov    (%rax),%edx
    f16a:	48 8b 05 ef 2e 01 00 	mov    0x12eef(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f171:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f175:	48 8d 35 dc ca 00 00 	lea    0xcadc(%rip),%rsi        # 1bc58 <__PRETTY_FUNCTION__.0+0x678>
    f17c:	48 89 c7             	mov    %rax,%rdi
    f17f:	b8 00 00 00 00       	mov    $0x0,%eax
    f184:	e8 e7 32 ff ff       	call   2470 <fprintf@plt>
    f189:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f190:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f194:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    f19b:	48 89 d6             	mov    %rdx,%rsi
    f19e:	48 89 c7             	mov    %rax,%rdi
    f1a1:	e8 d9 eb ff ff       	call   dd7f <set_type_from_hashtype>
    f1a6:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    f1ad:	00 00 00
    f1b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f1b4:	48 8b 40 18          	mov    0x18(%rax),%rax
    f1b8:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f1bf:	e9 db 01 00 00       	jmp    f39f <semcheck_funccall+0x759>
    f1c4:	83 85 40 ff ff ff 01 	addl   $0x1,-0xc0(%rbp)
    f1cb:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f1d2:	8b 00                	mov    (%rax),%eax
    f1d4:	83 f8 02             	cmp    $0x2,%eax
    f1d7:	74 28                	je     f201 <semcheck_funccall+0x5bb>
    f1d9:	48 8d 05 c0 cc 00 00 	lea    0xccc0(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    f1e0:	48 89 c1             	mov    %rax,%rcx
    f1e3:	ba 4c 02 00 00       	mov    $0x24c,%edx
    f1e8:	48 8d 05 11 c4 00 00 	lea    0xc411(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    f1ef:	48 89 c6             	mov    %rax,%rsi
    f1f2:	48 8d 05 8b ca 00 00 	lea    0xca8b(%rip),%rax        # 1bc84 <__PRETTY_FUNCTION__.0+0x6a4>
    f1f9:	48 89 c7             	mov    %rax,%rdi
    f1fc:	e8 cf 31 ff ff       	call   23d0 <__assert_fail@plt>
    f201:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f208:	8b 00                	mov    (%rax),%eax
    f20a:	85 c0                	test   %eax,%eax
    f20c:	74 28                	je     f236 <semcheck_funccall+0x5f0>
    f20e:	48 8d 05 8b cc 00 00 	lea    0xcc8b(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    f215:	48 89 c1             	mov    %rax,%rcx
    f218:	ba 4d 02 00 00       	mov    $0x24d,%edx
    f21d:	48 8d 05 dc c3 00 00 	lea    0xc3dc(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    f224:	48 89 c6             	mov    %rax,%rsi
    f227:	48 8d 05 74 ca 00 00 	lea    0xca74(%rip),%rax        # 1bca2 <__PRETTY_FUNCTION__.0+0x6c2>
    f22e:	48 89 c7             	mov    %rax,%rdi
    f231:	e8 9a 31 ff ff       	call   23d0 <__assert_fail@plt>
    f236:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f23d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f241:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx
    f247:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
    f24e:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f255:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f25b:	48 89 c7             	mov    %rax,%rdi
    f25e:	e8 a5 ec ff ff       	call   df08 <semcheck_expr_main>
    f263:	01 85 3c ff ff ff    	add    %eax,-0xc4(%rbp)
    f269:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f270:	48 8b 40 08          	mov    0x8(%rax),%rax
    f274:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f278:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f27c:	8b 40 04             	mov    0x4(%rax),%eax
    f27f:	83 f8 02             	cmp    $0x2,%eax
    f282:	74 28                	je     f2ac <semcheck_funccall+0x666>
    f284:	48 8d 05 15 cc 00 00 	lea    0xcc15(%rip),%rax        # 1bea0 <__PRETTY_FUNCTION__.0>
    f28b:	48 89 c1             	mov    %rax,%rcx
    f28e:	ba 52 02 00 00       	mov    $0x252,%edx
    f293:	48 8d 05 66 c3 00 00 	lea    0xc366(%rip),%rax        # 1b600 <__PRETTY_FUNCTION__.0+0x20>
    f29a:	48 89 c6             	mov    %rax,%rsi
    f29d:	48 8d 05 1c ca 00 00 	lea    0xca1c(%rip),%rax        # 1bcc0 <__PRETTY_FUNCTION__.0+0x6e0>
    f2a4:	48 89 c7             	mov    %rax,%rdi
    f2a7:	e8 24 31 ff ff       	call   23d0 <__assert_fail@plt>
    f2ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f2b0:	48 8b 40 08          	mov    0x8(%rax),%rax
    f2b4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f2bb:	e9 b5 00 00 00       	jmp    f375 <semcheck_funccall+0x72f>
    f2c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f2c4:	8b 40 10             	mov    0x10(%rax),%eax
    f2c7:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
    f2cd:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    f2d3:	39 85 5c ff ff ff    	cmp    %eax,-0xa4(%rbp)
    f2d9:	74 76                	je     f351 <semcheck_funccall+0x70b>
    f2db:	81 bd 5c ff ff ff 3a 	cmpl   $0x13a,-0xa4(%rbp)
    f2e2:	01 00 00
    f2e5:	74 6a                	je     f351 <semcheck_funccall+0x70b>
    f2e7:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    f2ed:	3d 0b 01 00 00       	cmp    $0x10b,%eax
    f2f2:	75 0c                	jne    f300 <semcheck_funccall+0x6ba>
    f2f4:	81 bd 5c ff ff ff 0d 	cmpl   $0x10d,-0xa4(%rbp)
    f2fb:	01 00 00
    f2fe:	74 51                	je     f351 <semcheck_funccall+0x70b>
    f300:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    f306:	3d 0d 01 00 00       	cmp    $0x10d,%eax
    f30b:	75 0c                	jne    f319 <semcheck_funccall+0x6d3>
    f30d:	81 bd 5c ff ff ff 0b 	cmpl   $0x10b,-0xa4(%rbp)
    f314:	01 00 00
    f317:	74 38                	je     f351 <semcheck_funccall+0x70b>
    f319:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f320:	8b 10                	mov    (%rax),%edx
    f322:	48 8b 05 37 2d 01 00 	mov    0x12d37(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f329:	8b b5 40 ff ff ff    	mov    -0xc0(%rbp),%esi
    f32f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f333:	41 89 f0             	mov    %esi,%r8d
    f336:	48 8d 35 a3 c9 00 00 	lea    0xc9a3(%rip),%rsi        # 1bce0 <__PRETTY_FUNCTION__.0+0x700>
    f33d:	48 89 c7             	mov    %rax,%rdi
    f340:	b8 00 00 00 00       	mov    $0x0,%eax
    f345:	e8 26 31 ff ff       	call   2470 <fprintf@plt>
    f34a:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f351:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f358:	48 8b 40 10          	mov    0x10(%rax),%rax
    f35c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    f363:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f36a:	48 8b 40 10          	mov    0x10(%rax),%rax
    f36e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    f375:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    f37c:	00
    f37d:	74 0e                	je     f38d <semcheck_funccall+0x747>
    f37f:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f386:	00
    f387:	0f 85 33 ff ff ff    	jne    f2c0 <semcheck_funccall+0x67a>
    f38d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f394:	48 8b 40 10          	mov    0x10(%rax),%rax
    f398:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f39f:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f3a6:	00
    f3a7:	74 0e                	je     f3b7 <semcheck_funccall+0x771>
    f3a9:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f3b0:	00
    f3b1:	0f 85 0d fe ff ff    	jne    f1c4 <semcheck_funccall+0x57e>
    f3b7:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f3be:	00
    f3bf:	75 3b                	jne    f3fc <semcheck_funccall+0x7b6>
    f3c1:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f3c8:	00
    f3c9:	74 31                	je     f3fc <semcheck_funccall+0x7b6>
    f3cb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f3d2:	8b 10                	mov    (%rax),%edx
    f3d4:	48 8b 05 85 2c 01 00 	mov    0x12c85(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f3db:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f3df:	48 8d 35 42 c9 00 00 	lea    0xc942(%rip),%rsi        # 1bd28 <__PRETTY_FUNCTION__.0+0x748>
    f3e6:	48 89 c7             	mov    %rax,%rdi
    f3e9:	b8 00 00 00 00       	mov    $0x0,%eax
    f3ee:	e8 7d 30 ff ff       	call   2470 <fprintf@plt>
    f3f3:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f3fa:	eb 43                	jmp    f43f <semcheck_funccall+0x7f9>
    f3fc:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    f403:	00
    f404:	74 39                	je     f43f <semcheck_funccall+0x7f9>
    f406:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    f40d:	00
    f40e:	75 2f                	jne    f43f <semcheck_funccall+0x7f9>
    f410:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f417:	8b 10                	mov    (%rax),%edx
    f419:	48 8b 05 40 2c 01 00 	mov    0x12c40(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f420:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    f424:	48 8d 35 45 c9 00 00 	lea    0xc945(%rip),%rsi        # 1bd70 <__PRETTY_FUNCTION__.0+0x790>
    f42b:	48 89 c7             	mov    %rax,%rdi
    f42e:	b8 00 00 00 00       	mov    $0x0,%eax
    f433:	e8 38 30 ff ff       	call   2470 <fprintf@plt>
    f438:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    f43f:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    f445:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f449:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f450:	00 00
    f452:	74 05                	je     f459 <semcheck_funccall+0x813>
    f454:	e8 47 2f ff ff       	call   23a0 <__stack_chk_fail@plt>
    f459:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f45d:	c9                   	leave
    f45e:	c3                   	ret

000000000000f45f <gen_label>:
    f45f:	f3 0f 1e fa          	endbr64
    f463:	55                   	push   %rbp
    f464:	48 89 e5             	mov    %rsp,%rbp
    f467:	48 83 ec 20          	sub    $0x20,%rsp
    f46b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f46f:	89 75 f4             	mov    %esi,-0xc(%rbp)
    f472:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f47a:	8b 00                	mov    (%rax),%eax
    f47c:	8d 50 01             	lea    0x1(%rax),%edx
    f47f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f483:	89 10                	mov    %edx,(%rax)
    f485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f489:	8b 10                	mov    (%rax),%edx
    f48b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f48e:	48 63 f0             	movslq %eax,%rsi
    f491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f495:	89 d1                	mov    %edx,%ecx
    f497:	48 8d 15 22 ca 00 00 	lea    0xca22(%rip),%rdx        # 1bec0 <__PRETTY_FUNCTION__.0+0x20>
    f49e:	48 89 c7             	mov    %rax,%rdi
    f4a1:	b8 00 00 00 00       	mov    $0x0,%eax
    f4a6:	e8 05 2f ff ff       	call   23b0 <snprintf@plt>
    f4ab:	90                   	nop
    f4ac:	c9                   	leave
    f4ad:	c3                   	ret

000000000000f4ae <add_inst>:
    f4ae:	f3 0f 1e fa          	endbr64
    f4b2:	55                   	push   %rbp
    f4b3:	48 89 e5             	mov    %rsp,%rbp
    f4b6:	48 83 ec 20          	sub    $0x20,%rsp
    f4ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f4be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f4c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f4c6:	48 89 c7             	mov    %rax,%rdi
    f4c9:	e8 92 30 ff ff       	call   2560 <strdup@plt>
    f4ce:	be 03 00 00 00       	mov    $0x3,%esi
    f4d3:	48 89 c7             	mov    %rax,%rdi
    f4d6:	e8 20 8d ff ff       	call   81fb <CreateListNode>
    f4db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f4df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f4e4:	75 0a                	jne    f4f0 <add_inst+0x42>
    f4e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4ea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f4ee:	eb 13                	jmp    f503 <add_inst+0x55>
    f4f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f4f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f4f8:	48 89 d6             	mov    %rdx,%rsi
    f4fb:	48 89 c7             	mov    %rax,%rdi
    f4fe:	e8 c4 8d ff ff       	call   82c7 <PushListNodeBack>
    f503:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f507:	c9                   	leave
    f508:	c3                   	ret

000000000000f509 <free_inst_list>:
    f509:	f3 0f 1e fa          	endbr64
    f50d:	55                   	push   %rbp
    f50e:	48 89 e5             	mov    %rsp,%rbp
    f511:	48 83 ec 20          	sub    $0x20,%rsp
    f515:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f51d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f521:	eb 1c                	jmp    f53f <free_inst_list+0x36>
    f523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f527:	48 8b 40 08          	mov    0x8(%rax),%rax
    f52b:	48 89 c7             	mov    %rax,%rdi
    f52e:	e8 bd 2d ff ff       	call   22f0 <free@plt>
    f533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f537:	48 8b 40 10          	mov    0x10(%rax),%rax
    f53b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f53f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f544:	75 dd                	jne    f523 <free_inst_list+0x1a>
    f546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f54a:	48 89 c7             	mov    %rax,%rdi
    f54d:	e8 44 8f ff ff       	call   8496 <DestroyList>
    f552:	90                   	nop
    f553:	c9                   	leave
    f554:	c3                   	ret

000000000000f555 <gencode_jmp>:
    f555:	f3 0f 1e fa          	endbr64
    f559:	55                   	push   %rbp
    f55a:	48 89 e5             	mov    %rsp,%rbp
    f55d:	48 83 ec 60          	sub    $0x60,%rsp
    f561:	89 7d bc             	mov    %edi,-0x44(%rbp)
    f564:	89 75 b8             	mov    %esi,-0x48(%rbp)
    f567:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    f56b:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    f56f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f576:	00 00
    f578:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f57c:	31 c0                	xor    %eax,%eax
    f57e:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    f582:	0f 84 0e 02 00 00    	je     f796 <gencode_jmp+0x241>
    f588:	83 7d bc ff          	cmpl   $0xffffffff,-0x44(%rbp)
    f58c:	0f 8c 23 02 00 00    	jl     f7b5 <gencode_jmp+0x260>
    f592:	81 7d bc 2c 01 00 00 	cmpl   $0x12c,-0x44(%rbp)
    f599:	0f 8f 16 02 00 00    	jg     f7b5 <gencode_jmp+0x260>
    f59f:	81 7d bc 27 01 00 00 	cmpl   $0x127,-0x44(%rbp)
    f5a6:	0f 8c 09 02 00 00    	jl     f7b5 <gencode_jmp+0x260>
    f5ac:	8b 45 bc             	mov    -0x44(%rbp),%eax
    f5af:	2d 27 01 00 00       	sub    $0x127,%eax
    f5b4:	83 f8 05             	cmp    $0x5,%eax
    f5b7:	0f 87 f8 01 00 00    	ja     f7b5 <gencode_jmp+0x260>
    f5bd:	89 c0                	mov    %eax,%eax
    f5bf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    f5c6:	00
    f5c7:	48 8d 05 4e c9 00 00 	lea    0xc94e(%rip),%rax        # 1bf1c <__PRETTY_FUNCTION__.0+0x7c>
    f5ce:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    f5d1:	48 98                	cltq
    f5d3:	48 8d 15 42 c9 00 00 	lea    0xc942(%rip),%rdx        # 1bf1c <__PRETTY_FUNCTION__.0+0x7c>
    f5da:	48 01 d0             	add    %rdx,%rax
    f5dd:	3e ff e0             	notrack jmp *%rax
    f5e0:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f5e4:	7e 22                	jle    f608 <gencode_jmp+0xb3>
    f5e6:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f5ea:	48 8d 15 d4 c8 00 00 	lea    0xc8d4(%rip),%rdx        # 1bec5 <__PRETTY_FUNCTION__.0+0x25>
    f5f1:	be 06 00 00 00       	mov    $0x6,%esi
    f5f6:	48 89 c7             	mov    %rax,%rdi
    f5f9:	b8 00 00 00 00       	mov    $0x0,%eax
    f5fe:	e8 ad 2d ff ff       	call   23b0 <snprintf@plt>
    f603:	e9 da 01 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f608:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f60c:	48 8d 15 b6 c8 00 00 	lea    0xc8b6(%rip),%rdx        # 1bec9 <__PRETTY_FUNCTION__.0+0x29>
    f613:	be 06 00 00 00       	mov    $0x6,%esi
    f618:	48 89 c7             	mov    %rax,%rdi
    f61b:	b8 00 00 00 00       	mov    $0x0,%eax
    f620:	e8 8b 2d ff ff       	call   23b0 <snprintf@plt>
    f625:	e9 b8 01 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f62a:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f62e:	7e 22                	jle    f652 <gencode_jmp+0xfd>
    f630:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f634:	48 8d 15 8e c8 00 00 	lea    0xc88e(%rip),%rdx        # 1bec9 <__PRETTY_FUNCTION__.0+0x29>
    f63b:	be 06 00 00 00       	mov    $0x6,%esi
    f640:	48 89 c7             	mov    %rax,%rdi
    f643:	b8 00 00 00 00       	mov    $0x0,%eax
    f648:	e8 63 2d ff ff       	call   23b0 <snprintf@plt>
    f64d:	e9 90 01 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f652:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f656:	48 8d 15 68 c8 00 00 	lea    0xc868(%rip),%rdx        # 1bec5 <__PRETTY_FUNCTION__.0+0x25>
    f65d:	be 06 00 00 00       	mov    $0x6,%esi
    f662:	48 89 c7             	mov    %rax,%rdi
    f665:	b8 00 00 00 00       	mov    $0x0,%eax
    f66a:	e8 41 2d ff ff       	call   23b0 <snprintf@plt>
    f66f:	e9 6e 01 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f674:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f678:	7e 22                	jle    f69c <gencode_jmp+0x147>
    f67a:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f67e:	48 8d 15 47 c8 00 00 	lea    0xc847(%rip),%rdx        # 1becc <__PRETTY_FUNCTION__.0+0x2c>
    f685:	be 06 00 00 00       	mov    $0x6,%esi
    f68a:	48 89 c7             	mov    %rax,%rdi
    f68d:	b8 00 00 00 00       	mov    $0x0,%eax
    f692:	e8 19 2d ff ff       	call   23b0 <snprintf@plt>
    f697:	e9 46 01 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f69c:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f6a0:	48 8d 15 29 c8 00 00 	lea    0xc829(%rip),%rdx        # 1bed0 <__PRETTY_FUNCTION__.0+0x30>
    f6a7:	be 06 00 00 00       	mov    $0x6,%esi
    f6ac:	48 89 c7             	mov    %rax,%rdi
    f6af:	b8 00 00 00 00       	mov    $0x0,%eax
    f6b4:	e8 f7 2c ff ff       	call   23b0 <snprintf@plt>
    f6b9:	e9 24 01 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f6be:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f6c2:	7e 22                	jle    f6e6 <gencode_jmp+0x191>
    f6c4:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f6c8:	48 8d 15 04 c8 00 00 	lea    0xc804(%rip),%rdx        # 1bed3 <__PRETTY_FUNCTION__.0+0x33>
    f6cf:	be 06 00 00 00       	mov    $0x6,%esi
    f6d4:	48 89 c7             	mov    %rax,%rdi
    f6d7:	b8 00 00 00 00       	mov    $0x0,%eax
    f6dc:	e8 cf 2c ff ff       	call   23b0 <snprintf@plt>
    f6e1:	e9 fc 00 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f6e6:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f6ea:	48 8d 15 e5 c7 00 00 	lea    0xc7e5(%rip),%rdx        # 1bed6 <__PRETTY_FUNCTION__.0+0x36>
    f6f1:	be 06 00 00 00       	mov    $0x6,%esi
    f6f6:	48 89 c7             	mov    %rax,%rdi
    f6f9:	b8 00 00 00 00       	mov    $0x0,%eax
    f6fe:	e8 ad 2c ff ff       	call   23b0 <snprintf@plt>
    f703:	e9 da 00 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f708:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f70c:	7e 22                	jle    f730 <gencode_jmp+0x1db>
    f70e:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f712:	48 8d 15 bd c7 00 00 	lea    0xc7bd(%rip),%rdx        # 1bed6 <__PRETTY_FUNCTION__.0+0x36>
    f719:	be 06 00 00 00       	mov    $0x6,%esi
    f71e:	48 89 c7             	mov    %rax,%rdi
    f721:	b8 00 00 00 00       	mov    $0x0,%eax
    f726:	e8 85 2c ff ff       	call   23b0 <snprintf@plt>
    f72b:	e9 b2 00 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f730:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f734:	48 8d 15 98 c7 00 00 	lea    0xc798(%rip),%rdx        # 1bed3 <__PRETTY_FUNCTION__.0+0x33>
    f73b:	be 06 00 00 00       	mov    $0x6,%esi
    f740:	48 89 c7             	mov    %rax,%rdi
    f743:	b8 00 00 00 00       	mov    $0x0,%eax
    f748:	e8 63 2c ff ff       	call   23b0 <snprintf@plt>
    f74d:	e9 90 00 00 00       	jmp    f7e2 <gencode_jmp+0x28d>
    f752:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    f756:	7e 1f                	jle    f777 <gencode_jmp+0x222>
    f758:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f75c:	48 8d 15 6d c7 00 00 	lea    0xc76d(%rip),%rdx        # 1bed0 <__PRETTY_FUNCTION__.0+0x30>
    f763:	be 06 00 00 00       	mov    $0x6,%esi
    f768:	48 89 c7             	mov    %rax,%rdi
    f76b:	b8 00 00 00 00       	mov    $0x0,%eax
    f770:	e8 3b 2c ff ff       	call   23b0 <snprintf@plt>
    f775:	eb 6b                	jmp    f7e2 <gencode_jmp+0x28d>
    f777:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f77b:	48 8d 15 4a c7 00 00 	lea    0xc74a(%rip),%rdx        # 1becc <__PRETTY_FUNCTION__.0+0x2c>
    f782:	be 06 00 00 00       	mov    $0x6,%esi
    f787:	48 89 c7             	mov    %rax,%rdi
    f78a:	b8 00 00 00 00       	mov    $0x0,%eax
    f78f:	e8 1c 2c ff ff       	call   23b0 <snprintf@plt>
    f794:	eb 4c                	jmp    f7e2 <gencode_jmp+0x28d>
    f796:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    f79a:	48 8d 15 39 c7 00 00 	lea    0xc739(%rip),%rdx        # 1beda <__PRETTY_FUNCTION__.0+0x3a>
    f7a1:	be 06 00 00 00       	mov    $0x6,%esi
    f7a6:	48 89 c7             	mov    %rax,%rdi
    f7a9:	b8 00 00 00 00       	mov    $0x0,%eax
    f7ae:	e8 fd 2b ff ff       	call   23b0 <snprintf@plt>
    f7b3:	eb 2d                	jmp    f7e2 <gencode_jmp+0x28d>
    f7b5:	48 8b 05 a4 28 01 00 	mov    0x128a4(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f7bc:	48 89 c1             	mov    %rax,%rcx
    f7bf:	ba 32 00 00 00       	mov    $0x32,%edx
    f7c4:	be 01 00 00 00       	mov    $0x1,%esi
    f7c9:	48 8d 05 10 c7 00 00 	lea    0xc710(%rip),%rax        # 1bee0 <__PRETTY_FUNCTION__.0+0x40>
    f7d0:	48 89 c7             	mov    %rax,%rdi
    f7d3:	e8 78 2d ff ff       	call   2550 <fwrite@plt>
    f7d8:	bf 01 00 00 00       	mov    $0x1,%edi
    f7dd:	e8 5e 2d ff ff       	call   2540 <exit@plt>
    f7e2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    f7e6:	48 8d 55 ca          	lea    -0x36(%rbp),%rdx
    f7ea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f7ee:	49 89 c8             	mov    %rcx,%r8
    f7f1:	48 89 d1             	mov    %rdx,%rcx
    f7f4:	48 8d 15 18 c7 00 00 	lea    0xc718(%rip),%rdx        # 1bf13 <__PRETTY_FUNCTION__.0+0x73>
    f7fb:	be 1e 00 00 00       	mov    $0x1e,%esi
    f800:	48 89 c7             	mov    %rax,%rdi
    f803:	b8 00 00 00 00       	mov    $0x0,%eax
    f808:	e8 a3 2b ff ff       	call   23b0 <snprintf@plt>
    f80d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f811:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f815:	48 89 d6             	mov    %rdx,%rsi
    f818:	48 89 c7             	mov    %rax,%rdi
    f81b:	e8 8e fc ff ff       	call   f4ae <add_inst>
    f820:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f824:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f82b:	00 00
    f82d:	74 05                	je     f834 <gencode_jmp+0x2df>
    f82f:	e8 6c 2b ff ff       	call   23a0 <__stack_chk_fail@plt>
    f834:	c9                   	leave
    f835:	c3                   	ret

000000000000f836 <codegen_function_header>:
    f836:	f3 0f 1e fa          	endbr64
    f83a:	55                   	push   %rbp
    f83b:	48 89 e5             	mov    %rsp,%rbp
    f83e:	48 83 ec 10          	sub    $0x10,%rsp
    f842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f846:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f84a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f84e:	48 8b 40 08          	mov    0x8(%rax),%rax
    f852:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f856:	48 8d 0d d7 c6 00 00 	lea    0xc6d7(%rip),%rcx        # 1bf34 <__PRETTY_FUNCTION__.0+0x94>
    f85d:	48 89 ce             	mov    %rcx,%rsi
    f860:	48 89 c7             	mov    %rax,%rdi
    f863:	b8 00 00 00 00       	mov    $0x0,%eax
    f868:	e8 03 2c ff ff       	call   2470 <fprintf@plt>
    f86d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f871:	48 8b 40 08          	mov    0x8(%rax),%rax
    f875:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f879:	48 8d 0d c0 c6 00 00 	lea    0xc6c0(%rip),%rcx        # 1bf40 <__PRETTY_FUNCTION__.0+0xa0>
    f880:	48 89 ce             	mov    %rcx,%rsi
    f883:	48 89 c7             	mov    %rax,%rdi
    f886:	b8 00 00 00 00       	mov    $0x0,%eax
    f88b:	e8 e0 2b ff ff       	call   2470 <fprintf@plt>
    f890:	90                   	nop
    f891:	c9                   	leave
    f892:	c3                   	ret

000000000000f893 <codegen_function_footer>:
    f893:	f3 0f 1e fa          	endbr64
    f897:	55                   	push   %rbp
    f898:	48 89 e5             	mov    %rsp,%rbp
    f89b:	48 83 ec 10          	sub    $0x10,%rsp
    f89f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f8a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f8a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f8ab:	48 8b 40 08          	mov    0x8(%rax),%rax
    f8af:	48 89 c1             	mov    %rax,%rcx
    f8b2:	ba 11 00 00 00       	mov    $0x11,%edx
    f8b7:	be 01 00 00 00       	mov    $0x1,%esi
    f8bc:	48 8d 05 a2 c6 00 00 	lea    0xc6a2(%rip),%rax        # 1bf65 <__PRETTY_FUNCTION__.0+0xc5>
    f8c3:	48 89 c7             	mov    %rax,%rdi
    f8c6:	e8 85 2c ff ff       	call   2550 <fwrite@plt>
    f8cb:	90                   	nop
    f8cc:	c9                   	leave
    f8cd:	c3                   	ret

000000000000f8ce <codegen>:
    f8ce:	f3 0f 1e fa          	endbr64
    f8d2:	55                   	push   %rbp
    f8d3:	48 89 e5             	mov    %rsp,%rbp
    f8d6:	48 83 ec 30          	sub    $0x30,%rsp
    f8da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f8de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f8e2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f8e6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    f8ea:	48 8b 05 6f 27 01 00 	mov    0x1276f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f8f1:	48 89 c1             	mov    %rax,%rcx
    f8f4:	ba 18 00 00 00       	mov    $0x18,%edx
    f8f9:	be 01 00 00 00       	mov    $0x1,%esi
    f8fe:	48 8d 05 72 c6 00 00 	lea    0xc672(%rip),%rax        # 1bf77 <__PRETTY_FUNCTION__.0+0xd7>
    f905:	48 89 c7             	mov    %rax,%rdi
    f908:	e8 43 2c ff ff       	call   2550 <fwrite@plt>
    f90d:	b8 00 00 00 00       	mov    $0x0,%eax
    f912:	e8 26 2a 00 00       	call   1233d <init_stackmng>
    f917:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f91b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f91f:	48 89 d6             	mov    %rdx,%rsi
    f922:	48 89 c7             	mov    %rax,%rdi
    f925:	e8 25 02 00 00       	call   fb4f <codegen_program_header>
    f92a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f92e:	48 89 c7             	mov    %rax,%rdi
    f931:	e8 6a 00 00 00       	call   f9a0 <codegen_rodata>
    f936:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f93a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f93e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f942:	48 89 ce             	mov    %rcx,%rsi
    f945:	48 89 c7             	mov    %rax,%rdi
    f948:	e8 98 04 00 00       	call   fde5 <codegen_program>
    f94d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f951:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f959:	48 89 d6             	mov    %rdx,%rsi
    f95c:	48 89 c7             	mov    %rax,%rdi
    f95f:	e8 7c 02 00 00       	call   fbe0 <codegen_main>
    f964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f968:	48 89 c7             	mov    %rax,%rdi
    f96b:	e8 61 02 00 00       	call   fbd1 <codegen_program_footer>
    f970:	b8 00 00 00 00       	mov    $0x0,%eax
    f975:	e8 4f 32 00 00       	call   12bc9 <free_stackmng>
    f97a:	48 8b 05 df 26 01 00 	mov    0x126df(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    f981:	48 89 c1             	mov    %rax,%rcx
    f984:	ba 17 00 00 00       	mov    $0x17,%edx
    f989:	be 01 00 00 00       	mov    $0x1,%esi
    f98e:	48 8d 05 fb c5 00 00 	lea    0xc5fb(%rip),%rax        # 1bf90 <__PRETTY_FUNCTION__.0+0xf0>
    f995:	48 89 c7             	mov    %rax,%rdi
    f998:	e8 b3 2b ff ff       	call   2550 <fwrite@plt>
    f99d:	90                   	nop
    f99e:	c9                   	leave
    f99f:	c3                   	ret

000000000000f9a0 <codegen_rodata>:
    f9a0:	f3 0f 1e fa          	endbr64
    f9a4:	55                   	push   %rbp
    f9a5:	48 89 e5             	mov    %rsp,%rbp
    f9a8:	48 83 ec 10          	sub    $0x10,%rsp
    f9ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9b4:	48 8b 40 08          	mov    0x8(%rax),%rax
    f9b8:	48 89 c1             	mov    %rax,%rcx
    f9bb:	ba 11 00 00 00       	mov    $0x11,%edx
    f9c0:	be 01 00 00 00       	mov    $0x1,%esi
    f9c5:	48 8d 05 dc c5 00 00 	lea    0xc5dc(%rip),%rax        # 1bfa8 <__PRETTY_FUNCTION__.0+0x108>
    f9cc:	48 89 c7             	mov    %rax,%rdi
    f9cf:	e8 7c 2b ff ff       	call   2550 <fwrite@plt>
    f9d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    f9dc:	48 89 c1             	mov    %rax,%rcx
    f9df:	ba 0f 00 00 00       	mov    $0xf,%edx
    f9e4:	be 01 00 00 00       	mov    $0x1,%esi
    f9e9:	48 8d 05 ca c5 00 00 	lea    0xc5ca(%rip),%rax        # 1bfba <__PRETTY_FUNCTION__.0+0x11a>
    f9f0:	48 89 c7             	mov    %rax,%rdi
    f9f3:	e8 58 2b ff ff       	call   2550 <fwrite@plt>
    f9f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa00:	48 8d 15 c3 c5 00 00 	lea    0xc5c3(%rip),%rdx        # 1bfca <__PRETTY_FUNCTION__.0+0x12a>
    fa07:	48 89 d6             	mov    %rdx,%rsi
    fa0a:	48 89 c7             	mov    %rax,%rdi
    fa0d:	b8 00 00 00 00       	mov    $0x0,%eax
    fa12:	e8 59 2a ff ff       	call   2470 <fprintf@plt>
    fa17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa1b:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa1f:	48 89 c1             	mov    %rax,%rcx
    fa22:	ba 0f 00 00 00       	mov    $0xf,%edx
    fa27:	be 01 00 00 00       	mov    $0x1,%esi
    fa2c:	48 8d 05 a6 c5 00 00 	lea    0xc5a6(%rip),%rax        # 1bfd9 <__PRETTY_FUNCTION__.0+0x139>
    fa33:	48 89 c7             	mov    %rax,%rdi
    fa36:	e8 15 2b ff ff       	call   2550 <fwrite@plt>
    fa3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa3f:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa43:	48 8d 15 9f c5 00 00 	lea    0xc59f(%rip),%rdx        # 1bfe9 <__PRETTY_FUNCTION__.0+0x149>
    fa4a:	48 89 d6             	mov    %rdx,%rsi
    fa4d:	48 89 c7             	mov    %rax,%rdi
    fa50:	b8 00 00 00 00       	mov    $0x0,%eax
    fa55:	e8 16 2a ff ff       	call   2470 <fprintf@plt>
    fa5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa5e:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa62:	48 89 c1             	mov    %rax,%rcx
    fa65:	ba 10 00 00 00       	mov    $0x10,%edx
    fa6a:	be 01 00 00 00       	mov    $0x1,%esi
    fa6f:	48 8d 05 82 c5 00 00 	lea    0xc582(%rip),%rax        # 1bff8 <__PRETTY_FUNCTION__.0+0x158>
    fa76:	48 89 c7             	mov    %rax,%rdi
    fa79:	e8 d2 2a ff ff       	call   2550 <fwrite@plt>
    fa7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa82:	48 8b 40 08          	mov    0x8(%rax),%rax
    fa86:	48 8d 15 7c c5 00 00 	lea    0xc57c(%rip),%rdx        # 1c009 <__PRETTY_FUNCTION__.0+0x169>
    fa8d:	48 89 d6             	mov    %rdx,%rsi
    fa90:	48 89 c7             	mov    %rax,%rdi
    fa93:	b8 00 00 00 00       	mov    $0x0,%eax
    fa98:	e8 d3 29 ff ff       	call   2470 <fprintf@plt>
    fa9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    faa1:	48 8b 40 08          	mov    0x8(%rax),%rax
    faa5:	48 89 c1             	mov    %rax,%rcx
    faa8:	ba 10 00 00 00       	mov    $0x10,%edx
    faad:	be 01 00 00 00       	mov    $0x1,%esi
    fab2:	48 8d 05 61 c5 00 00 	lea    0xc561(%rip),%rax        # 1c01a <__PRETTY_FUNCTION__.0+0x17a>
    fab9:	48 89 c7             	mov    %rax,%rdi
    fabc:	e8 8f 2a ff ff       	call   2550 <fwrite@plt>
    fac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fac5:	48 8b 40 08          	mov    0x8(%rax),%rax
    fac9:	48 8d 15 5b c5 00 00 	lea    0xc55b(%rip),%rdx        # 1c02b <__PRETTY_FUNCTION__.0+0x18b>
    fad0:	48 89 d6             	mov    %rdx,%rsi
    fad3:	48 89 c7             	mov    %rax,%rdi
    fad6:	b8 00 00 00 00       	mov    $0x0,%eax
    fadb:	e8 90 29 ff ff       	call   2470 <fprintf@plt>
    fae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fae4:	48 8b 40 08          	mov    0x8(%rax),%rax
    fae8:	48 89 c1             	mov    %rax,%rcx
    faeb:	ba 0f 00 00 00       	mov    $0xf,%edx
    faf0:	be 01 00 00 00       	mov    $0x1,%esi
    faf5:	48 8d 05 40 c5 00 00 	lea    0xc540(%rip),%rax        # 1c03c <__PRETTY_FUNCTION__.0+0x19c>
    fafc:	48 89 c7             	mov    %rax,%rdi
    faff:	e8 4c 2a ff ff       	call   2550 <fwrite@plt>
    fb04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb08:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb0c:	48 89 c1             	mov    %rax,%rcx
    fb0f:	ba 0d 00 00 00       	mov    $0xd,%edx
    fb14:	be 01 00 00 00       	mov    $0x1,%esi
    fb19:	48 8d 05 2c c5 00 00 	lea    0xc52c(%rip),%rax        # 1c04c <__PRETTY_FUNCTION__.0+0x1ac>
    fb20:	48 89 c7             	mov    %rax,%rdi
    fb23:	e8 28 2a ff ff       	call   2550 <fwrite@plt>
    fb28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb2c:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb30:	48 89 c1             	mov    %rax,%rcx
    fb33:	ba 06 00 00 00       	mov    $0x6,%edx
    fb38:	be 01 00 00 00       	mov    $0x1,%esi
    fb3d:	48 8d 05 16 c5 00 00 	lea    0xc516(%rip),%rax        # 1c05a <__PRETTY_FUNCTION__.0+0x1ba>
    fb44:	48 89 c7             	mov    %rax,%rdi
    fb47:	e8 04 2a ff ff       	call   2550 <fwrite@plt>
    fb4c:	90                   	nop
    fb4d:	c9                   	leave
    fb4e:	c3                   	ret

000000000000fb4f <codegen_program_header>:
    fb4f:	f3 0f 1e fa          	endbr64
    fb53:	55                   	push   %rbp
    fb54:	48 89 e5             	mov    %rsp,%rbp
    fb57:	48 83 ec 10          	sub    $0x10,%rsp
    fb5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb67:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fb6f:	48 8d 0d eb c4 00 00 	lea    0xc4eb(%rip),%rcx        # 1c061 <__PRETTY_FUNCTION__.0+0x1c1>
    fb76:	48 89 ce             	mov    %rcx,%rsi
    fb79:	48 89 c7             	mov    %rax,%rdi
    fb7c:	b8 00 00 00 00       	mov    $0x0,%eax
    fb81:	e8 ea 28 ff ff       	call   2470 <fprintf@plt>
    fb86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb8a:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb8e:	48 89 c1             	mov    %rax,%rcx
    fb91:	ba 12 00 00 00       	mov    $0x12,%edx
    fb96:	be 01 00 00 00       	mov    $0x1,%esi
    fb9b:	48 8d 05 cc c4 00 00 	lea    0xc4cc(%rip),%rax        # 1c06e <__PRETTY_FUNCTION__.0+0x1ce>
    fba2:	48 89 c7             	mov    %rax,%rdi
    fba5:	e8 a6 29 ff ff       	call   2550 <fwrite@plt>
    fbaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbae:	48 8b 40 08          	mov    0x8(%rax),%rax
    fbb2:	48 89 c1             	mov    %rax,%rcx
    fbb5:	ba 07 00 00 00       	mov    $0x7,%edx
    fbba:	be 01 00 00 00       	mov    $0x1,%esi
    fbbf:	48 8d 05 bb c4 00 00 	lea    0xc4bb(%rip),%rax        # 1c081 <__PRETTY_FUNCTION__.0+0x1e1>
    fbc6:	48 89 c7             	mov    %rax,%rdi
    fbc9:	e8 82 29 ff ff       	call   2550 <fwrite@plt>
    fbce:	90                   	nop
    fbcf:	c9                   	leave
    fbd0:	c3                   	ret

000000000000fbd1 <codegen_program_footer>:
    fbd1:	f3 0f 1e fa          	endbr64
    fbd5:	55                   	push   %rbp
    fbd6:	48 89 e5             	mov    %rsp,%rbp
    fbd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbdd:	90                   	nop
    fbde:	5d                   	pop    %rbp
    fbdf:	c3                   	ret

000000000000fbe0 <codegen_main>:
    fbe0:	f3 0f 1e fa          	endbr64
    fbe4:	55                   	push   %rbp
    fbe5:	48 89 e5             	mov    %rsp,%rbp
    fbe8:	48 83 ec 10          	sub    $0x10,%rsp
    fbec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fbf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbf8:	48 8b 40 08          	mov    0x8(%rax),%rax
    fbfc:	48 89 c1             	mov    %rax,%rcx
    fbff:	ba 10 00 00 00       	mov    $0x10,%edx
    fc04:	be 01 00 00 00       	mov    $0x1,%esi
    fc09:	48 8d 05 79 c4 00 00 	lea    0xc479(%rip),%rax        # 1c089 <__PRETTY_FUNCTION__.0+0x1e9>
    fc10:	48 89 c7             	mov    %rax,%rdi
    fc13:	e8 38 29 ff ff       	call   2550 <fwrite@plt>
    fc18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc1c:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc20:	48 89 c1             	mov    %rax,%rcx
    fc23:	ba 0d 00 00 00       	mov    $0xd,%edx
    fc28:	be 01 00 00 00       	mov    $0x1,%esi
    fc2d:	48 8d 05 66 c4 00 00 	lea    0xc466(%rip),%rax        # 1c09a <__PRETTY_FUNCTION__.0+0x1fa>
    fc34:	48 89 c7             	mov    %rax,%rdi
    fc37:	e8 14 29 ff ff       	call   2550 <fwrite@plt>
    fc3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc40:	48 89 c6             	mov    %rax,%rsi
    fc43:	48 8d 05 5e c4 00 00 	lea    0xc45e(%rip),%rax        # 1c0a8 <__PRETTY_FUNCTION__.0+0x208>
    fc4a:	48 89 c7             	mov    %rax,%rdi
    fc4d:	e8 e4 fb ff ff       	call   f836 <codegen_function_header>
    fc52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc56:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc5a:	48 8d 15 4c c4 00 00 	lea    0xc44c(%rip),%rdx        # 1c0ad <__PRETTY_FUNCTION__.0+0x20d>
    fc61:	48 89 d6             	mov    %rdx,%rsi
    fc64:	48 89 c7             	mov    %rax,%rdi
    fc67:	b8 00 00 00 00       	mov    $0x0,%eax
    fc6c:	e8 ff 27 ff ff       	call   2470 <fprintf@plt>
    fc71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc75:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc79:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fc7d:	48 8d 0d 3b c4 00 00 	lea    0xc43b(%rip),%rcx        # 1c0bf <__PRETTY_FUNCTION__.0+0x21f>
    fc84:	48 89 ce             	mov    %rcx,%rsi
    fc87:	48 89 c7             	mov    %rax,%rdi
    fc8a:	b8 00 00 00 00       	mov    $0x0,%eax
    fc8f:	e8 dc 27 ff ff       	call   2470 <fprintf@plt>
    fc94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc98:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc9c:	48 8d 15 26 c4 00 00 	lea    0xc426(%rip),%rdx        # 1c0c9 <__PRETTY_FUNCTION__.0+0x229>
    fca3:	48 89 d6             	mov    %rdx,%rsi
    fca6:	48 89 c7             	mov    %rax,%rdi
    fca9:	b8 00 00 00 00       	mov    $0x0,%eax
    fcae:	e8 bd 27 ff ff       	call   2470 <fprintf@plt>
    fcb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fcb7:	48 8b 40 08          	mov    0x8(%rax),%rax
    fcbb:	48 89 c1             	mov    %rax,%rcx
    fcbe:	ba 0b 00 00 00       	mov    $0xb,%edx
    fcc3:	be 01 00 00 00       	mov    $0x1,%esi
    fcc8:	48 8d 05 0d c4 00 00 	lea    0xc40d(%rip),%rax        # 1c0dc <__PRETTY_FUNCTION__.0+0x23c>
    fccf:	48 89 c7             	mov    %rax,%rdi
    fcd2:	e8 79 28 ff ff       	call   2550 <fwrite@plt>
    fcd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fcdb:	48 89 c6             	mov    %rax,%rsi
    fcde:	48 8d 05 c3 c3 00 00 	lea    0xc3c3(%rip),%rax        # 1c0a8 <__PRETTY_FUNCTION__.0+0x208>
    fce5:	48 89 c7             	mov    %rax,%rdi
    fce8:	e8 a6 fb ff ff       	call   f893 <codegen_function_footer>
    fced:	90                   	nop
    fcee:	c9                   	leave
    fcef:	c3                   	ret

000000000000fcf0 <codegen_stack_space>:
    fcf0:	f3 0f 1e fa          	endbr64
    fcf4:	55                   	push   %rbp
    fcf5:	48 89 e5             	mov    %rsp,%rbp
    fcf8:	48 83 ec 20          	sub    $0x20,%rsp
    fcfc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd00:	b8 00 00 00 00       	mov    $0x0,%eax
    fd05:	e8 cd 26 00 00       	call   123d7 <get_full_stack_offset>
    fd0a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    fd0d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    fd11:	79 28                	jns    fd3b <codegen_stack_space+0x4b>
    fd13:	48 8d 05 06 c7 00 00 	lea    0xc706(%rip),%rax        # 1c420 <__PRETTY_FUNCTION__.6>
    fd1a:	48 89 c1             	mov    %rax,%rcx
    fd1d:	ba e9 00 00 00       	mov    $0xe9,%edx
    fd22:	48 8d 05 bf c3 00 00 	lea    0xc3bf(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    fd29:	48 89 c6             	mov    %rax,%rsi
    fd2c:	48 8d 05 e1 c3 00 00 	lea    0xc3e1(%rip),%rax        # 1c114 <__PRETTY_FUNCTION__.0+0x274>
    fd33:	48 89 c7             	mov    %rax,%rdi
    fd36:	e8 95 26 ff ff       	call   23d0 <__assert_fail@plt>
    fd3b:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    fd3f:	74 22                	je     fd63 <codegen_stack_space+0x73>
    fd41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd45:	48 8b 40 08          	mov    0x8(%rax),%rax
    fd49:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fd4c:	48 8d 0d d3 c3 00 00 	lea    0xc3d3(%rip),%rcx        # 1c126 <__PRETTY_FUNCTION__.0+0x286>
    fd53:	48 89 ce             	mov    %rcx,%rsi
    fd56:	48 89 c7             	mov    %rax,%rdi
    fd59:	b8 00 00 00 00       	mov    $0x0,%eax
    fd5e:	e8 0d 27 ff ff       	call   2470 <fprintf@plt>
    fd63:	90                   	nop
    fd64:	c9                   	leave
    fd65:	c3                   	ret

000000000000fd66 <codegen_inst_list>:
    fd66:	f3 0f 1e fa          	endbr64
    fd6a:	55                   	push   %rbp
    fd6b:	48 89 e5             	mov    %rsp,%rbp
    fd6e:	48 83 ec 20          	sub    $0x20,%rsp
    fd72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fd7a:	eb 5e                	jmp    fdda <codegen_inst_list+0x74>
    fd7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd80:	48 8b 40 08          	mov    0x8(%rax),%rax
    fd84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fd88:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    fd8d:	75 28                	jne    fdb7 <codegen_inst_list+0x51>
    fd8f:	48 8d 05 aa c6 00 00 	lea    0xc6aa(%rip),%rax        # 1c440 <__PRETTY_FUNCTION__.5>
    fd96:	48 89 c1             	mov    %rax,%rcx
    fd99:	ba f9 00 00 00       	mov    $0xf9,%edx
    fd9e:	48 8d 05 43 c3 00 00 	lea    0xc343(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    fda5:	48 89 c6             	mov    %rax,%rsi
    fda8:	48 8d 05 89 c3 00 00 	lea    0xc389(%rip),%rax        # 1c138 <__PRETTY_FUNCTION__.0+0x298>
    fdaf:	48 89 c7             	mov    %rax,%rdi
    fdb2:	e8 19 26 ff ff       	call   23d0 <__assert_fail@plt>
    fdb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdbb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    fdbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdc3:	48 89 d6             	mov    %rdx,%rsi
    fdc6:	48 89 c7             	mov    %rax,%rdi
    fdc9:	e8 12 26 ff ff       	call   23e0 <fputs@plt>
    fdce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdd2:	48 8b 40 10          	mov    0x10(%rax),%rax
    fdd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fdda:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    fddf:	75 9b                	jne    fd7c <codegen_inst_list+0x16>
    fde1:	90                   	nop
    fde2:	90                   	nop
    fde3:	c9                   	leave
    fde4:	c3                   	ret

000000000000fde5 <codegen_program>:
    fde5:	f3 0f 1e fa          	endbr64
    fde9:	55                   	push   %rbp
    fdea:	48 89 e5             	mov    %rsp,%rbp
    fded:	48 83 ec 40          	sub    $0x40,%rsp
    fdf1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fdf5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fdf9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    fdfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe01:	8b 40 04             	mov    0x4(%rax),%eax
    fe04:	85 c0                	test   %eax,%eax
    fe06:	74 28                	je     fe30 <codegen_program+0x4b>
    fe08:	48 8d 05 51 c6 00 00 	lea    0xc651(%rip),%rax        # 1c460 <__PRETTY_FUNCTION__.4>
    fe0f:	48 89 c1             	mov    %rax,%rcx
    fe12:	ba 04 01 00 00       	mov    $0x104,%edx
    fe17:	48 8d 05 ca c2 00 00 	lea    0xc2ca(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    fe1e:	48 89 c6             	mov    %rax,%rsi
    fe21:	48 8d 05 20 c3 00 00 	lea    0xc320(%rip),%rax        # 1c148 <__PRETTY_FUNCTION__.0+0x2a8>
    fe28:	48 89 c7             	mov    %rax,%rdi
    fe2b:	e8 a0 25 ff ff       	call   23d0 <__assert_fail@plt>
    fe30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe34:	48 83 c0 08          	add    $0x8,%rax
    fe38:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fe3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe40:	48 8b 00             	mov    (%rax),%rax
    fe43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fe47:	b8 00 00 00 00       	mov    $0x0,%eax
    fe4c:	e8 5e 26 00 00       	call   124af <push_stackscope>
    fe51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe55:	48 8b 40 10          	mov    0x10(%rax),%rax
    fe59:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fe5d:	48 89 d6             	mov    %rdx,%rsi
    fe60:	48 89 c7             	mov    %rax,%rdi
    fe63:	e8 a4 00 00 00       	call   ff0c <codegen_function_locals>
    fe68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe6c:	48 8b 40 20          	mov    0x20(%rax),%rax
    fe70:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fe74:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    fe78:	48 89 ce             	mov    %rcx,%rsi
    fe7b:	48 89 c7             	mov    %rax,%rdi
    fe7e:	e8 03 02 00 00       	call   10086 <codegen_subprograms>
    fe83:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    fe8a:	00
    fe8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe8f:	48 8b 40 28          	mov    0x28(%rax),%rax
    fe93:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    fe97:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fe9b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fe9f:	48 89 c7             	mov    %rax,%rdi
    fea2:	e8 ce 08 00 00       	call   10775 <codegen_stmt>
    fea7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    feab:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    feaf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    feb3:	48 89 d6             	mov    %rdx,%rsi
    feb6:	48 89 c7             	mov    %rax,%rdi
    feb9:	e8 78 f9 ff ff       	call   f836 <codegen_function_header>
    febe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fec2:	48 89 c7             	mov    %rax,%rdi
    fec5:	e8 26 fe ff ff       	call   fcf0 <codegen_stack_space>
    feca:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fed2:	48 89 d6             	mov    %rdx,%rsi
    fed5:	48 89 c7             	mov    %rax,%rdi
    fed8:	e8 89 fe ff ff       	call   fd66 <codegen_inst_list>
    fedd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fee1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fee5:	48 89 d6             	mov    %rdx,%rsi
    fee8:	48 89 c7             	mov    %rax,%rdi
    feeb:	e8 a3 f9 ff ff       	call   f893 <codegen_function_footer>
    fef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fef4:	48 89 c7             	mov    %rax,%rdi
    fef7:	e8 0d f6 ff ff       	call   f509 <free_inst_list>
    fefc:	b8 00 00 00 00       	mov    $0x0,%eax
    ff01:	e8 1a 26 00 00       	call   12520 <pop_stackscope>
    ff06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ff0a:	c9                   	leave
    ff0b:	c3                   	ret

000000000000ff0c <codegen_function_locals>:
    ff0c:	f3 0f 1e fa          	endbr64
    ff10:	55                   	push   %rbp
    ff11:	48 89 e5             	mov    %rsp,%rbp
    ff14:	48 83 ec 30          	sub    $0x30,%rsp
    ff18:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ff1c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ff20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ff28:	e9 dd 00 00 00       	jmp    1000a <codegen_function_locals+0xfe>
    ff2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff31:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff35:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ff39:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ff3e:	75 28                	jne    ff68 <codegen_function_locals+0x5c>
    ff40:	48 8d 05 29 c5 00 00 	lea    0xc529(%rip),%rax        # 1c470 <__PRETTY_FUNCTION__.3>
    ff47:	48 89 c1             	mov    %rax,%rcx
    ff4a:	ba 2b 01 00 00       	mov    $0x12b,%edx
    ff4f:	48 8d 05 92 c1 00 00 	lea    0xc192(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    ff56:	48 89 c6             	mov    %rax,%rsi
    ff59:	48 8d 05 08 c2 00 00 	lea    0xc208(%rip),%rax        # 1c168 <__PRETTY_FUNCTION__.0+0x2c8>
    ff60:	48 89 c7             	mov    %rax,%rdi
    ff63:	e8 68 24 ff ff       	call   23d0 <__assert_fail@plt>
    ff68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff6c:	8b 40 04             	mov    0x4(%rax),%eax
    ff6f:	83 f8 02             	cmp    $0x2,%eax
    ff72:	74 28                	je     ff9c <codegen_function_locals+0x90>
    ff74:	48 8d 05 f5 c4 00 00 	lea    0xc4f5(%rip),%rax        # 1c470 <__PRETTY_FUNCTION__.3>
    ff7b:	48 89 c1             	mov    %rax,%rcx
    ff7e:	ba 2c 01 00 00       	mov    $0x12c,%edx
    ff83:	48 8d 05 5e c1 00 00 	lea    0xc15e(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
    ff8a:	48 89 c6             	mov    %rax,%rsi
    ff8d:	48 8d 05 e1 c1 00 00 	lea    0xc1e1(%rip),%rax        # 1c175 <__PRETTY_FUNCTION__.0+0x2d5>
    ff94:	48 89 c7             	mov    %rax,%rdi
    ff97:	e8 34 24 ff ff       	call   23d0 <__assert_fail@plt>
    ff9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffa0:	48 8b 40 08          	mov    0x8(%rax),%rax
    ffa4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ffa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffac:	8b 40 10             	mov    0x10(%rax),%eax
    ffaf:	3d 0c 01 00 00       	cmp    $0x10c,%eax
    ffb4:	75 41                	jne    fff7 <codegen_function_locals+0xeb>
    ffb6:	48 8b 05 a3 20 01 00 	mov    0x120a3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
    ffbd:	48 89 c1             	mov    %rax,%rcx
    ffc0:	ba 37 00 00 00       	mov    $0x37,%edx
    ffc5:	be 01 00 00 00       	mov    $0x1,%esi
    ffca:	48 8d 05 c7 c1 00 00 	lea    0xc1c7(%rip),%rax        # 1c198 <__PRETTY_FUNCTION__.0+0x2f8>
    ffd1:	48 89 c7             	mov    %rax,%rdi
    ffd4:	e8 77 25 ff ff       	call   2550 <fwrite@plt>
    ffd9:	eb 1c                	jmp    fff7 <codegen_function_locals+0xeb>
    ffdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ffdf:	48 8b 40 08          	mov    0x8(%rax),%rax
    ffe3:	48 89 c7             	mov    %rax,%rdi
    ffe6:	e8 1c 27 00 00       	call   12707 <add_l_x>
    ffeb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ffef:	48 8b 40 10          	mov    0x10(%rax),%rax
    fff3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fff7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fffc:	75 dd                	jne    ffdb <codegen_function_locals+0xcf>
    fffe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10002:	48 8b 40 10          	mov    0x10(%rax),%rax
   10006:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1000a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1000f:	0f 85 18 ff ff ff    	jne    ff2d <codegen_function_locals+0x21>
   10015:	90                   	nop
   10016:	90                   	nop
   10017:	c9                   	leave
   10018:	c3                   	ret

0000000000010019 <codegen_vect_reg>:
   10019:	f3 0f 1e fa          	endbr64
   1001d:	55                   	push   %rbp
   1001e:	48 89 e5             	mov    %rsp,%rbp
   10021:	48 83 ec 50          	sub    $0x50,%rsp
   10025:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10029:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   1002c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10033:	00 00
   10035:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10039:	31 c0                	xor    %eax,%eax
   1003b:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   1003e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10042:	89 d1                	mov    %edx,%ecx
   10044:	48 8d 15 85 c1 00 00 	lea    0xc185(%rip),%rdx        # 1c1d0 <__PRETTY_FUNCTION__.0+0x330>
   1004b:	be 32 00 00 00       	mov    $0x32,%esi
   10050:	48 89 c7             	mov    %rax,%rdi
   10053:	b8 00 00 00 00       	mov    $0x0,%eax
   10058:	e8 53 23 ff ff       	call   23b0 <snprintf@plt>
   1005d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10061:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10065:	48 89 d6             	mov    %rdx,%rsi
   10068:	48 89 c7             	mov    %rax,%rdi
   1006b:	e8 3e f4 ff ff       	call   f4ae <add_inst>
   10070:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10074:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1007b:	00 00
   1007d:	74 05                	je     10084 <codegen_vect_reg+0x6b>
   1007f:	e8 1c 23 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10084:	c9                   	leave
   10085:	c3                   	ret

0000000000010086 <codegen_subprograms>:
   10086:	f3 0f 1e fa          	endbr64
   1008a:	55                   	push   %rbp
   1008b:	48 89 e5             	mov    %rsp,%rbp
   1008e:	48 83 ec 30          	sub    $0x30,%rsp
   10092:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10096:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1009a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1009e:	e9 e3 00 00 00       	jmp    10186 <codegen_subprograms+0x100>
   100a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100a7:	48 8b 40 08          	mov    0x8(%rax),%rax
   100ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   100af:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   100b4:	75 28                	jne    100de <codegen_subprograms+0x58>
   100b6:	48 8d 05 d3 c3 00 00 	lea    0xc3d3(%rip),%rax        # 1c490 <__PRETTY_FUNCTION__.2>
   100bd:	48 89 c1             	mov    %rax,%rcx
   100c0:	ba 4e 01 00 00       	mov    $0x14e,%edx
   100c5:	48 8d 05 1c c0 00 00 	lea    0xc01c(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   100cc:	48 89 c6             	mov    %rax,%rsi
   100cf:	48 8d 05 0c c1 00 00 	lea    0xc10c(%rip),%rax        # 1c1e2 <__PRETTY_FUNCTION__.0+0x342>
   100d6:	48 89 c7             	mov    %rax,%rdi
   100d9:	e8 f2 22 ff ff       	call   23d0 <__assert_fail@plt>
   100de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e2:	8b 40 04             	mov    0x4(%rax),%eax
   100e5:	83 f8 01             	cmp    $0x1,%eax
   100e8:	74 28                	je     10112 <codegen_subprograms+0x8c>
   100ea:	48 8d 05 9f c3 00 00 	lea    0xc39f(%rip),%rax        # 1c490 <__PRETTY_FUNCTION__.2>
   100f1:	48 89 c1             	mov    %rax,%rcx
   100f4:	ba 4f 01 00 00       	mov    $0x14f,%edx
   100f9:	48 8d 05 e8 bf 00 00 	lea    0xbfe8(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10100:	48 89 c6             	mov    %rax,%rsi
   10103:	48 8d 05 e4 c0 00 00 	lea    0xc0e4(%rip),%rax        # 1c1ee <__PRETTY_FUNCTION__.0+0x34e>
   1010a:	48 89 c7             	mov    %rax,%rdi
   1010d:	e8 be 22 ff ff       	call   23d0 <__assert_fail@plt>
   10112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10116:	8b 40 08             	mov    0x8(%rax),%eax
   10119:	83 f8 05             	cmp    $0x5,%eax
   1011c:	74 07                	je     10125 <codegen_subprograms+0x9f>
   1011e:	83 f8 06             	cmp    $0x6,%eax
   10121:	74 1b                	je     1013e <codegen_subprograms+0xb8>
   10123:	eb 32                	jmp    10157 <codegen_subprograms+0xd1>
   10125:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10129:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1012d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10131:	48 89 ce             	mov    %rcx,%rsi
   10134:	48 89 c7             	mov    %rax,%rdi
   10137:	e8 59 00 00 00       	call   10195 <codegen_procedure>
   1013c:	eb 3c                	jmp    1017a <codegen_subprograms+0xf4>
   1013e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10142:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1014a:	48 89 ce             	mov    %rcx,%rsi
   1014d:	48 89 c7             	mov    %rax,%rdi
   10150:	e8 ff 01 00 00       	call   10354 <codegen_function>
   10155:	eb 23                	jmp    1017a <codegen_subprograms+0xf4>
   10157:	48 8b 05 02 1f 01 00 	mov    0x11f02(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1015e:	48 89 c1             	mov    %rax,%rcx
   10161:	ba 30 00 00 00       	mov    $0x30,%edx
   10166:	be 01 00 00 00       	mov    $0x1,%esi
   1016b:	48 8d 05 9e c0 00 00 	lea    0xc09e(%rip),%rax        # 1c210 <__PRETTY_FUNCTION__.0+0x370>
   10172:	48 89 c7             	mov    %rax,%rdi
   10175:	e8 d6 23 ff ff       	call   2550 <fwrite@plt>
   1017a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1017e:	48 8b 40 10          	mov    0x10(%rax),%rax
   10182:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10186:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1018b:	0f 85 12 ff ff ff    	jne    100a3 <codegen_subprograms+0x1d>
   10191:	90                   	nop
   10192:	90                   	nop
   10193:	c9                   	leave
   10194:	c3                   	ret

0000000000010195 <codegen_procedure>:
   10195:	f3 0f 1e fa          	endbr64
   10199:	55                   	push   %rbp
   1019a:	48 89 e5             	mov    %rsp,%rbp
   1019d:	48 83 ec 40          	sub    $0x40,%rsp
   101a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   101a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   101a9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   101ad:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   101b2:	75 28                	jne    101dc <codegen_procedure+0x47>
   101b4:	48 8d 05 f5 c2 00 00 	lea    0xc2f5(%rip),%rax        # 1c4b0 <__PRETTY_FUNCTION__.1>
   101bb:	48 89 c1             	mov    %rax,%rcx
   101be:	ba 63 01 00 00       	mov    $0x163,%edx
   101c3:	48 8d 05 1e bf 00 00 	lea    0xbf1e(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   101ca:	48 89 c6             	mov    %rax,%rsi
   101cd:	48 8d 05 6d c0 00 00 	lea    0xc06d(%rip),%rax        # 1c241 <__PRETTY_FUNCTION__.0+0x3a1>
   101d4:	48 89 c7             	mov    %rax,%rdi
   101d7:	e8 f4 21 ff ff       	call   23d0 <__assert_fail@plt>
   101dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   101e0:	8b 40 04             	mov    0x4(%rax),%eax
   101e3:	83 f8 01             	cmp    $0x1,%eax
   101e6:	74 28                	je     10210 <codegen_procedure+0x7b>
   101e8:	48 8d 05 c1 c2 00 00 	lea    0xc2c1(%rip),%rax        # 1c4b0 <__PRETTY_FUNCTION__.1>
   101ef:	48 89 c1             	mov    %rax,%rcx
   101f2:	ba 64 01 00 00       	mov    $0x164,%edx
   101f7:	48 8d 05 ea be 00 00 	lea    0xbeea(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   101fe:	48 89 c6             	mov    %rax,%rsi
   10201:	48 8d 05 50 c0 00 00 	lea    0xc050(%rip),%rax        # 1c258 <__PRETTY_FUNCTION__.0+0x3b8>
   10208:	48 89 c7             	mov    %rax,%rdi
   1020b:	e8 c0 21 ff ff       	call   23d0 <__assert_fail@plt>
   10210:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10214:	8b 40 08             	mov    0x8(%rax),%eax
   10217:	83 f8 05             	cmp    $0x5,%eax
   1021a:	74 28                	je     10244 <codegen_procedure+0xaf>
   1021c:	48 8d 05 8d c2 00 00 	lea    0xc28d(%rip),%rax        # 1c4b0 <__PRETTY_FUNCTION__.1>
   10223:	48 89 c1             	mov    %rax,%rcx
   10226:	ba 65 01 00 00       	mov    $0x165,%edx
   1022b:	48 8d 05 b6 be 00 00 	lea    0xbeb6(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10232:	48 89 c6             	mov    %rax,%rsi
   10235:	48 8d 05 44 c0 00 00 	lea    0xc044(%rip),%rax        # 1c280 <__PRETTY_FUNCTION__.0+0x3e0>
   1023c:	48 89 c7             	mov    %rax,%rdi
   1023f:	e8 8c 21 ff ff       	call   23d0 <__assert_fail@plt>
   10244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10248:	48 83 c0 08          	add    $0x8,%rax
   1024c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10254:	48 8b 40 10          	mov    0x10(%rax),%rax
   10258:	48 85 c0             	test   %rax,%rax
   1025b:	74 0a                	je     10267 <codegen_procedure+0xd2>
   1025d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10261:	48 8b 40 10          	mov    0x10(%rax),%rax
   10265:	eb 08                	jmp    1026f <codegen_procedure+0xda>
   10267:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1026b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1026f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10273:	b8 00 00 00 00       	mov    $0x0,%eax
   10278:	e8 32 22 00 00       	call   124af <push_stackscope>
   1027d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   10284:	00
   10285:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10289:	48 8b 40 18          	mov    0x18(%rax),%rax
   1028d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10291:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10295:	48 89 ce             	mov    %rcx,%rsi
   10298:	48 89 c7             	mov    %rax,%rdi
   1029b:	e8 ed 02 00 00       	call   1058d <codegen_subprogram_arguments>
   102a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   102a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102a8:	48 8b 40 38          	mov    0x38(%rax),%rax
   102ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102b0:	48 89 d6             	mov    %rdx,%rsi
   102b3:	48 89 c7             	mov    %rax,%rdi
   102b6:	e8 51 fc ff ff       	call   ff0c <codegen_function_locals>
   102bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102bf:	48 8b 40 40          	mov    0x40(%rax),%rax
   102c3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   102c7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   102cb:	48 89 ce             	mov    %rcx,%rsi
   102ce:	48 89 c7             	mov    %rax,%rdi
   102d1:	e8 b0 fd ff ff       	call   10086 <codegen_subprograms>
   102d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102da:	48 8b 40 48          	mov    0x48(%rax),%rax
   102de:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   102e2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102e6:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   102ea:	48 89 c7             	mov    %rax,%rdi
   102ed:	e8 83 04 00 00       	call   10775 <codegen_stmt>
   102f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   102f6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   102fe:	48 89 d6             	mov    %rdx,%rsi
   10301:	48 89 c7             	mov    %rax,%rdi
   10304:	e8 2d f5 ff ff       	call   f836 <codegen_function_header>
   10309:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1030d:	48 89 c7             	mov    %rax,%rdi
   10310:	e8 db f9 ff ff       	call   fcf0 <codegen_stack_space>
   10315:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1031d:	48 89 d6             	mov    %rdx,%rsi
   10320:	48 89 c7             	mov    %rax,%rdi
   10323:	e8 3e fa ff ff       	call   fd66 <codegen_inst_list>
   10328:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1032c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10330:	48 89 d6             	mov    %rdx,%rsi
   10333:	48 89 c7             	mov    %rax,%rdi
   10336:	e8 58 f5 ff ff       	call   f893 <codegen_function_footer>
   1033b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1033f:	48 89 c7             	mov    %rax,%rdi
   10342:	e8 c2 f1 ff ff       	call   f509 <free_inst_list>
   10347:	b8 00 00 00 00       	mov    $0x0,%eax
   1034c:	e8 cf 21 00 00       	call   12520 <pop_stackscope>
   10351:	90                   	nop
   10352:	c9                   	leave
   10353:	c3                   	ret

0000000000010354 <codegen_function>:
   10354:	f3 0f 1e fa          	endbr64
   10358:	55                   	push   %rbp
   10359:	48 89 e5             	mov    %rsp,%rbp
   1035c:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10360:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   10364:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   10368:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   1036c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10373:	00 00
   10375:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10379:	31 c0                	xor    %eax,%eax
   1037b:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   10380:	75 28                	jne    103aa <codegen_function+0x56>
   10382:	48 8d 05 47 c1 00 00 	lea    0xc147(%rip),%rax        # 1c4d0 <__PRETTY_FUNCTION__.0>
   10389:	48 89 c1             	mov    %rax,%rcx
   1038c:	ba 80 01 00 00       	mov    $0x180,%edx
   10391:	48 8d 05 50 bd 00 00 	lea    0xbd50(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10398:	48 89 c6             	mov    %rax,%rsi
   1039b:	48 8d 05 24 bf 00 00 	lea    0xbf24(%rip),%rax        # 1c2c6 <__PRETTY_FUNCTION__.0+0x426>
   103a2:	48 89 c7             	mov    %rax,%rdi
   103a5:	e8 26 20 ff ff       	call   23d0 <__assert_fail@plt>
   103aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   103ae:	8b 40 04             	mov    0x4(%rax),%eax
   103b1:	83 f8 01             	cmp    $0x1,%eax
   103b4:	74 28                	je     103de <codegen_function+0x8a>
   103b6:	48 8d 05 13 c1 00 00 	lea    0xc113(%rip),%rax        # 1c4d0 <__PRETTY_FUNCTION__.0>
   103bd:	48 89 c1             	mov    %rax,%rcx
   103c0:	ba 81 01 00 00       	mov    $0x181,%edx
   103c5:	48 8d 05 1c bd 00 00 	lea    0xbd1c(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   103cc:	48 89 c6             	mov    %rax,%rsi
   103cf:	48 8d 05 02 bf 00 00 	lea    0xbf02(%rip),%rax        # 1c2d8 <__PRETTY_FUNCTION__.0+0x438>
   103d6:	48 89 c7             	mov    %rax,%rdi
   103d9:	e8 f2 1f ff ff       	call   23d0 <__assert_fail@plt>
   103de:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   103e2:	8b 40 08             	mov    0x8(%rax),%eax
   103e5:	83 f8 06             	cmp    $0x6,%eax
   103e8:	74 28                	je     10412 <codegen_function+0xbe>
   103ea:	48 8d 05 df c0 00 00 	lea    0xc0df(%rip),%rax        # 1c4d0 <__PRETTY_FUNCTION__.0>
   103f1:	48 89 c1             	mov    %rax,%rcx
   103f4:	ba 82 01 00 00       	mov    $0x182,%edx
   103f9:	48 8d 05 e8 bc 00 00 	lea    0xbce8(%rip),%rax        # 1c0e8 <__PRETTY_FUNCTION__.0+0x248>
   10400:	48 89 c6             	mov    %rax,%rsi
   10403:	48 8d 05 f6 be 00 00 	lea    0xbef6(%rip),%rax        # 1c300 <__PRETTY_FUNCTION__.0+0x460>
   1040a:	48 89 c7             	mov    %rax,%rdi
   1040d:	e8 be 1f ff ff       	call   23d0 <__assert_fail@plt>
   10412:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10416:	48 83 c0 08          	add    $0x8,%rax
   1041a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1041e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10422:	48 8b 40 10          	mov    0x10(%rax),%rax
   10426:	48 85 c0             	test   %rax,%rax
   10429:	74 0a                	je     10435 <codegen_function+0xe1>
   1042b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1042f:	48 8b 40 10          	mov    0x10(%rax),%rax
   10433:	eb 08                	jmp    1043d <codegen_function+0xe9>
   10435:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10439:	48 8b 40 08          	mov    0x8(%rax),%rax
   1043d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10441:	b8 00 00 00 00       	mov    $0x0,%eax
   10446:	e8 64 20 00 00       	call   124af <push_stackscope>
   1044b:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   10452:	00
   10453:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10457:	48 8b 40 18          	mov    0x18(%rax),%rax
   1045b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1045f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   10463:	48 89 ce             	mov    %rcx,%rsi
   10466:	48 89 c7             	mov    %rax,%rdi
   10469:	e8 1f 01 00 00       	call   1058d <codegen_subprogram_arguments>
   1046e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10472:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10476:	48 8b 40 08          	mov    0x8(%rax),%rax
   1047a:	48 89 c7             	mov    %rax,%rdi
   1047d:	e8 85 22 00 00       	call   12707 <add_l_x>
   10482:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10486:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1048a:	48 8b 40 38          	mov    0x38(%rax),%rax
   1048e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10492:	48 89 d6             	mov    %rdx,%rsi
   10495:	48 89 c7             	mov    %rax,%rdi
   10498:	e8 6f fa ff ff       	call   ff0c <codegen_function_locals>
   1049d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   104a1:	48 8b 40 40          	mov    0x40(%rax),%rax
   104a5:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   104a9:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   104ad:	48 89 ce             	mov    %rcx,%rsi
   104b0:	48 89 c7             	mov    %rax,%rdi
   104b3:	e8 ce fb ff ff       	call   10086 <codegen_subprograms>
   104b8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   104bc:	48 8b 40 48          	mov    0x48(%rax),%rax
   104c0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
   104c4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   104c8:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   104cc:	48 89 c7             	mov    %rax,%rdi
   104cf:	e8 a1 02 00 00       	call   10775 <codegen_stmt>
   104d4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   104d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   104dc:	8b 10                	mov    (%rax),%edx
   104de:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   104e2:	4c 8d 05 5d be 00 00 	lea    0xbe5d(%rip),%r8        # 1c346 <__PRETTY_FUNCTION__.0+0x4a6>
   104e9:	89 d1                	mov    %edx,%ecx
   104eb:	48 8d 15 59 be 00 00 	lea    0xbe59(%rip),%rdx        # 1c34b <__PRETTY_FUNCTION__.0+0x4ab>
   104f2:	be 32 00 00 00       	mov    $0x32,%esi
   104f7:	48 89 c7             	mov    %rax,%rdi
   104fa:	b8 00 00 00 00       	mov    $0x0,%eax
   104ff:	e8 ac 1e ff ff       	call   23b0 <snprintf@plt>
   10504:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10508:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1050c:	48 89 d6             	mov    %rdx,%rsi
   1050f:	48 89 c7             	mov    %rax,%rdi
   10512:	e8 97 ef ff ff       	call   f4ae <add_inst>
   10517:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1051b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1051f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10523:	48 89 d6             	mov    %rdx,%rsi
   10526:	48 89 c7             	mov    %rax,%rdi
   10529:	e8 08 f3 ff ff       	call   f836 <codegen_function_header>
   1052e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10532:	48 89 c7             	mov    %rax,%rdi
   10535:	e8 b6 f7 ff ff       	call   fcf0 <codegen_stack_space>
   1053a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1053e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10542:	48 89 d6             	mov    %rdx,%rsi
   10545:	48 89 c7             	mov    %rax,%rdi
   10548:	e8 19 f8 ff ff       	call   fd66 <codegen_inst_list>
   1054d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   10551:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10555:	48 89 d6             	mov    %rdx,%rsi
   10558:	48 89 c7             	mov    %rax,%rdi
   1055b:	e8 33 f3 ff ff       	call   f893 <codegen_function_footer>
   10560:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10564:	48 89 c7             	mov    %rax,%rdi
   10567:	e8 9d ef ff ff       	call   f509 <free_inst_list>
   1056c:	b8 00 00 00 00       	mov    $0x0,%eax
   10571:	e8 aa 1f 00 00       	call   12520 <pop_stackscope>
   10576:	90                   	nop
   10577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1057b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10582:	00 00
   10584:	74 05                	je     1058b <codegen_function+0x237>
   10586:	e8 15 1e ff ff       	call   23a0 <__stack_chk_fail@plt>
   1058b:	c9                   	leave
   1058c:	c3                   	ret

000000000001058d <codegen_subprogram_arguments>:
   1058d:	f3 0f 1e fa          	endbr64
   10591:	55                   	push   %rbp
   10592:	48 89 e5             	mov    %rsp,%rbp
   10595:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   1059c:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   105a0:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   105a4:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   105ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   105b2:	00 00
   105b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   105b8:	31 c0                	xor    %eax,%eax
   105ba:	e9 91 01 00 00       	jmp    10750 <codegen_subprogram_arguments+0x1c3>
   105bf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   105c3:	48 8b 40 08          	mov    0x8(%rax),%rax
   105c7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   105cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105cf:	8b 40 04             	mov    0x4(%rax),%eax
   105d2:	83 f8 02             	cmp    $0x2,%eax
   105d5:	74 0e                	je     105e5 <codegen_subprogram_arguments+0x58>
   105d7:	83 f8 03             	cmp    $0x3,%eax
   105da:	0f 84 0a 01 00 00    	je     106ea <codegen_subprogram_arguments+0x15d>
   105e0:	e9 32 01 00 00       	jmp    10717 <codegen_subprogram_arguments+0x18a>
   105e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105e9:	48 8b 40 08          	mov    0x8(%rax),%rax
   105ed:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   105f1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105f5:	8b 40 10             	mov    0x10(%rax),%eax
   105f8:	89 45 9c             	mov    %eax,-0x64(%rbp)
   105fb:	81 7d 9c 0c 01 00 00 	cmpl   $0x10c,-0x64(%rbp)
   10602:	75 23                	jne    10627 <codegen_subprogram_arguments+0x9a>
   10604:	48 8b 05 55 1a 01 00 	mov    0x11a55(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1060b:	48 89 c1             	mov    %rax,%rcx
   1060e:	ba 26 00 00 00       	mov    $0x26,%edx
   10613:	be 01 00 00 00       	mov    $0x1,%esi
   10618:	48 8d 05 49 bd 00 00 	lea    0xbd49(%rip),%rax        # 1c368 <__PRETTY_FUNCTION__.0+0x4c8>
   1061f:	48 89 c7             	mov    %rax,%rdi
   10622:	e8 29 1f ff ff       	call   2550 <fwrite@plt>
   10627:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
   1062e:	e9 aa 00 00 00       	jmp    106dd <codegen_subprogram_arguments+0x150>
   10633:	8b 45 98             	mov    -0x68(%rbp),%eax
   10636:	89 c7                	mov    %eax,%edi
   10638:	e8 b2 1c 00 00       	call   122ef <get_arg_reg32_num>
   1063d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10641:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   10646:	75 2d                	jne    10675 <codegen_subprogram_arguments+0xe8>
   10648:	48 8b 05 11 1a 01 00 	mov    0x11a11(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1064f:	ba 04 00 00 00       	mov    $0x4,%edx
   10654:	48 8d 0d 35 bd 00 00 	lea    0xbd35(%rip),%rcx        # 1c390 <__PRETTY_FUNCTION__.0+0x4f0>
   1065b:	48 89 ce             	mov    %rcx,%rsi
   1065e:	48 89 c7             	mov    %rax,%rdi
   10661:	b8 00 00 00 00       	mov    $0x0,%eax
   10666:	e8 05 1e ff ff       	call   2470 <fprintf@plt>
   1066b:	bf 01 00 00 00       	mov    $0x1,%edi
   10670:	e8 cb 1e ff ff       	call   2540 <exit@plt>
   10675:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10679:	48 8b 40 08          	mov    0x8(%rax),%rax
   1067d:	48 89 c7             	mov    %rax,%rdi
   10680:	e8 cf 21 00 00       	call   12854 <add_l_z>
   10685:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10689:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1068d:	8b 08                	mov    (%rax),%ecx
   1068f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   10693:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10697:	41 89 c8             	mov    %ecx,%r8d
   1069a:	48 89 d1             	mov    %rdx,%rcx
   1069d:	48 8d 15 0b bd 00 00 	lea    0xbd0b(%rip),%rdx        # 1c3af <__PRETTY_FUNCTION__.0+0x50f>
   106a4:	be 32 00 00 00       	mov    $0x32,%esi
   106a9:	48 89 c7             	mov    %rax,%rdi
   106ac:	b8 00 00 00 00       	mov    $0x0,%eax
   106b1:	e8 fa 1c ff ff       	call   23b0 <snprintf@plt>
   106b6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   106ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   106be:	48 89 d6             	mov    %rdx,%rsi
   106c1:	48 89 c7             	mov    %rax,%rdi
   106c4:	e8 e5 ed ff ff       	call   f4ae <add_inst>
   106c9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   106cd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   106d1:	48 8b 40 10          	mov    0x10(%rax),%rax
   106d5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   106d9:	83 45 98 01          	addl   $0x1,-0x68(%rbp)
   106dd:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   106e2:	0f 85 4b ff ff ff    	jne    10633 <codegen_subprogram_arguments+0xa6>
   106e8:	eb 5a                	jmp    10744 <codegen_subprogram_arguments+0x1b7>
   106ea:	48 8b 05 6f 19 01 00 	mov    0x1196f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   106f1:	48 89 c1             	mov    %rax,%rcx
   106f4:	ba 34 00 00 00       	mov    $0x34,%edx
   106f9:	be 01 00 00 00       	mov    $0x1,%esi
   106fe:	48 8d 05 c3 bc 00 00 	lea    0xbcc3(%rip),%rax        # 1c3c8 <__PRETTY_FUNCTION__.0+0x528>
   10705:	48 89 c7             	mov    %rax,%rdi
   10708:	e8 43 1e ff ff       	call   2550 <fwrite@plt>
   1070d:	bf 01 00 00 00       	mov    $0x1,%edi
   10712:	e8 29 1e ff ff       	call   2540 <exit@plt>
   10717:	48 8b 05 42 19 01 00 	mov    0x11942(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1071e:	48 89 c1             	mov    %rax,%rcx
   10721:	ba 1e 00 00 00       	mov    $0x1e,%edx
   10726:	be 01 00 00 00       	mov    $0x1,%esi
   1072b:	48 8d 05 ce bc 00 00 	lea    0xbcce(%rip),%rax        # 1c400 <__PRETTY_FUNCTION__.0+0x560>
   10732:	48 89 c7             	mov    %rax,%rdi
   10735:	e8 16 1e ff ff       	call   2550 <fwrite@plt>
   1073a:	bf 01 00 00 00       	mov    $0x1,%edi
   1073f:	e8 fc 1d ff ff       	call   2540 <exit@plt>
   10744:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10748:	48 8b 40 10          	mov    0x10(%rax),%rax
   1074c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   10750:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   10755:	0f 85 64 fe ff ff    	jne    105bf <codegen_subprogram_arguments+0x32>
   1075b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1075f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10763:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1076a:	00 00
   1076c:	74 05                	je     10773 <codegen_subprogram_arguments+0x1e6>
   1076e:	e8 2d 1c ff ff       	call   23a0 <__stack_chk_fail@plt>
   10773:	c9                   	leave
   10774:	c3                   	ret

0000000000010775 <codegen_stmt>:
   10775:	f3 0f 1e fa          	endbr64
   10779:	55                   	push   %rbp
   1077a:	48 89 e5             	mov    %rsp,%rbp
   1077d:	48 83 ec 20          	sub    $0x20,%rsp
   10781:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10785:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10789:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1078d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
   10791:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10796:	75 28                	jne    107c0 <codegen_stmt+0x4b>
   10798:	48 8d 05 99 bf 00 00 	lea    0xbf99(%rip),%rax        # 1c738 <__PRETTY_FUNCTION__.7>
   1079f:	48 89 c1             	mov    %rax,%rcx
   107a2:	ba 16 00 00 00       	mov    $0x16,%edx
   107a7:	48 8d 05 42 bd 00 00 	lea    0xbd42(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   107ae:	48 89 c6             	mov    %rax,%rsi
   107b1:	48 8d 05 6e bd 00 00 	lea    0xbd6e(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   107b8:	48 89 c7             	mov    %rax,%rdi
   107bb:	e8 10 1c ff ff       	call   23d0 <__assert_fail@plt>
   107c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107c4:	8b 40 04             	mov    0x4(%rax),%eax
   107c7:	83 f8 08             	cmp    $0x8,%eax
   107ca:	0f 87 ff 00 00 00    	ja     108cf <codegen_stmt+0x15a>
   107d0:	89 c0                	mov    %eax,%eax
   107d2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   107d9:	00
   107da:	48 8d 05 8f bd 00 00 	lea    0xbd8f(%rip),%rax        # 1c570 <__PRETTY_FUNCTION__.0+0xa0>
   107e1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   107e4:	48 98                	cltq
   107e6:	48 8d 15 83 bd 00 00 	lea    0xbd83(%rip),%rdx        # 1c570 <__PRETTY_FUNCTION__.0+0xa0>
   107ed:	48 01 d0             	add    %rdx,%rax
   107f0:	3e ff e0             	notrack jmp *%rax
   107f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   107f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   107fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107ff:	48 89 ce             	mov    %rcx,%rsi
   10802:	48 89 c7             	mov    %rax,%rdi
   10805:	e8 f9 02 00 00       	call   10b03 <codegen_var_assignment>
   1080a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1080e:	e9 e9 00 00 00       	jmp    108fc <codegen_stmt+0x187>
   10813:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10817:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1081b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1081f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10823:	48 89 c7             	mov    %rax,%rdi
   10826:	e8 15 05 00 00       	call   10d40 <codegen_proc_call>
   1082b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1082f:	e9 c8 00 00 00       	jmp    108fc <codegen_stmt+0x187>
   10834:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10838:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1083c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10844:	48 89 c7             	mov    %rax,%rdi
   10847:	e8 e9 01 00 00       	call   10a35 <codegen_compound_stmt>
   1084c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10850:	e9 a7 00 00 00       	jmp    108fc <codegen_stmt+0x187>
   10855:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10859:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1085d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10865:	48 89 c7             	mov    %rax,%rdi
   10868:	e8 7b 06 00 00       	call   10ee8 <codegen_if_then>
   1086d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10871:	e9 86 00 00 00       	jmp    108fc <codegen_stmt+0x187>
   10876:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1087a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1087e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10886:	48 89 c7             	mov    %rax,%rdi
   10889:	e8 30 09 00 00       	call   111be <codegen_while>
   1088e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10892:	eb 68                	jmp    108fc <codegen_stmt+0x187>
   10894:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10898:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1089c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   108a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108a4:	48 89 c7             	mov    %rax,%rdi
   108a7:	e8 5b 0b 00 00       	call   11407 <codegen_for>
   108ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   108b0:	eb 4a                	jmp    108fc <codegen_stmt+0x187>
   108b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108b6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   108ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   108be:	48 89 d6             	mov    %rdx,%rsi
   108c1:	48 89 c7             	mov    %rax,%rdi
   108c4:	e8 e5 eb ff ff       	call   f4ae <add_inst>
   108c9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   108cd:	eb 2d                	jmp    108fc <codegen_stmt+0x187>
   108cf:	48 8b 05 8a 17 01 00 	mov    0x1178a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   108d6:	48 89 c1             	mov    %rax,%rcx
   108d9:	ba 37 00 00 00       	mov    $0x37,%edx
   108de:	be 01 00 00 00       	mov    $0x1,%esi
   108e3:	48 8d 05 4e bc 00 00 	lea    0xbc4e(%rip),%rax        # 1c538 <__PRETTY_FUNCTION__.0+0x68>
   108ea:	48 89 c7             	mov    %rax,%rdi
   108ed:	e8 5e 1c ff ff       	call   2550 <fwrite@plt>
   108f2:	bf 01 00 00 00       	mov    $0x1,%edi
   108f7:	e8 44 1c ff ff       	call   2540 <exit@plt>
   108fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10900:	c9                   	leave
   10901:	c3                   	ret

0000000000010902 <codegen_builtin_proc>:
   10902:	f3 0f 1e fa          	endbr64
   10906:	55                   	push   %rbp
   10907:	48 89 e5             	mov    %rsp,%rbp
   1090a:	48 83 ec 70          	sub    $0x70,%rsp
   1090e:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   10912:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   10916:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1091a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10921:	00 00
   10923:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10927:	31 c0                	xor    %eax,%eax
   10929:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1092e:	75 28                	jne    10958 <codegen_builtin_proc+0x56>
   10930:	48 8d 05 19 be 00 00 	lea    0xbe19(%rip),%rax        # 1c750 <__PRETTY_FUNCTION__.6>
   10937:	48 89 c1             	mov    %rax,%rcx
   1093a:	ba 37 00 00 00       	mov    $0x37,%edx
   1093f:	48 8d 05 aa bb 00 00 	lea    0xbbaa(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10946:	48 89 c6             	mov    %rax,%rsi
   10949:	48 8d 05 d6 bb 00 00 	lea    0xbbd6(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10950:	48 89 c7             	mov    %rax,%rdi
   10953:	e8 78 1a ff ff       	call   23d0 <__assert_fail@plt>
   10958:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1095c:	8b 40 04             	mov    0x4(%rax),%eax
   1095f:	83 f8 01             	cmp    $0x1,%eax
   10962:	74 28                	je     1098c <codegen_builtin_proc+0x8a>
   10964:	48 8d 05 e5 bd 00 00 	lea    0xbde5(%rip),%rax        # 1c750 <__PRETTY_FUNCTION__.6>
   1096b:	48 89 c1             	mov    %rax,%rcx
   1096e:	ba 38 00 00 00       	mov    $0x38,%edx
   10973:	48 8d 05 76 bb 00 00 	lea    0xbb76(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   1097a:	48 89 c6             	mov    %rax,%rsi
   1097d:	48 8d 05 14 bc 00 00 	lea    0xbc14(%rip),%rax        # 1c598 <__PRETTY_FUNCTION__.0+0xc8>
   10984:	48 89 c7             	mov    %rax,%rdi
   10987:	e8 44 1a ff ff       	call   23d0 <__assert_fail@plt>
   1098c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10990:	48 8b 40 10          	mov    0x10(%rax),%rax
   10994:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10998:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1099c:	48 8b 40 18          	mov    0x18(%rax),%rax
   109a0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   109a4:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   109a8:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   109ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109b0:	b9 00 00 00 00       	mov    $0x0,%ecx
   109b5:	48 89 c7             	mov    %rax,%rdi
   109b8:	e8 ac 15 00 00       	call   11f69 <codegen_pass_arguments>
   109bd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   109c1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   109c5:	be 00 00 00 00       	mov    $0x0,%esi
   109ca:	48 89 c7             	mov    %rax,%rdi
   109cd:	e8 47 f6 ff ff       	call   10019 <codegen_vect_reg>
   109d2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   109d6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   109da:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   109de:	48 89 d1             	mov    %rdx,%rcx
   109e1:	48 8d 15 d2 bb 00 00 	lea    0xbbd2(%rip),%rdx        # 1c5ba <__PRETTY_FUNCTION__.0+0xea>
   109e8:	be 32 00 00 00       	mov    $0x32,%esi
   109ed:	48 89 c7             	mov    %rax,%rdi
   109f0:	b8 00 00 00 00       	mov    $0x0,%eax
   109f5:	e8 b6 19 ff ff       	call   23b0 <snprintf@plt>
   109fa:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   109fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10a02:	48 89 d6             	mov    %rdx,%rsi
   10a05:	48 89 c7             	mov    %rax,%rdi
   10a08:	e8 a1 ea ff ff       	call   f4ae <add_inst>
   10a0d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10a11:	b8 00 00 00 00       	mov    $0x0,%eax
   10a16:	e8 71 18 00 00       	call   1228c <free_arg_regs>
   10a1b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10a1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10a23:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10a2a:	00 00
   10a2c:	74 05                	je     10a33 <codegen_builtin_proc+0x131>
   10a2e:	e8 6d 19 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10a33:	c9                   	leave
   10a34:	c3                   	ret

0000000000010a35 <codegen_compound_stmt>:
   10a35:	f3 0f 1e fa          	endbr64
   10a39:	55                   	push   %rbp
   10a3a:	48 89 e5             	mov    %rsp,%rbp
   10a3d:	48 83 ec 30          	sub    $0x30,%rsp
   10a41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10a49:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10a4d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   10a51:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   10a56:	75 28                	jne    10a80 <codegen_compound_stmt+0x4b>
   10a58:	48 8d 05 11 bd 00 00 	lea    0xbd11(%rip),%rax        # 1c770 <__PRETTY_FUNCTION__.5>
   10a5f:	48 89 c1             	mov    %rax,%rcx
   10a62:	ba 4c 00 00 00       	mov    $0x4c,%edx
   10a67:	48 8d 05 82 ba 00 00 	lea    0xba82(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10a6e:	48 89 c6             	mov    %rax,%rsi
   10a71:	48 8d 05 ae ba 00 00 	lea    0xbaae(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10a78:	48 89 c7             	mov    %rax,%rdi
   10a7b:	e8 50 19 ff ff       	call   23d0 <__assert_fail@plt>
   10a80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a84:	8b 40 04             	mov    0x4(%rax),%eax
   10a87:	83 f8 02             	cmp    $0x2,%eax
   10a8a:	74 28                	je     10ab4 <codegen_compound_stmt+0x7f>
   10a8c:	48 8d 05 dd bc 00 00 	lea    0xbcdd(%rip),%rax        # 1c770 <__PRETTY_FUNCTION__.5>
   10a93:	48 89 c1             	mov    %rax,%rcx
   10a96:	ba 4d 00 00 00       	mov    $0x4d,%edx
   10a9b:	48 8d 05 4e ba 00 00 	lea    0xba4e(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10aa2:	48 89 c6             	mov    %rax,%rsi
   10aa5:	48 8d 05 1c bb 00 00 	lea    0xbb1c(%rip),%rax        # 1c5c8 <__PRETTY_FUNCTION__.0+0xf8>
   10aac:	48 89 c7             	mov    %rax,%rdi
   10aaf:	e8 1c 19 ff ff       	call   23d0 <__assert_fail@plt>
   10ab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab8:	48 8b 40 08          	mov    0x8(%rax),%rax
   10abc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10ac0:	eb 34                	jmp    10af6 <codegen_compound_stmt+0xc1>
   10ac2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ac6:	48 8b 40 08          	mov    0x8(%rax),%rax
   10aca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10ace:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10ad2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10ad6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   10ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ade:	48 89 c7             	mov    %rax,%rdi
   10ae1:	e8 8f fc ff ff       	call   10775 <codegen_stmt>
   10ae6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10aea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10aee:	48 8b 40 10          	mov    0x10(%rax),%rax
   10af2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10af6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10afb:	75 c5                	jne    10ac2 <codegen_compound_stmt+0x8d>
   10afd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b01:	c9                   	leave
   10b02:	c3                   	ret

0000000000010b03 <codegen_var_assignment>:
   10b03:	f3 0f 1e fa          	endbr64
   10b07:	55                   	push   %rbp
   10b08:	48 89 e5             	mov    %rsp,%rbp
   10b0b:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   10b12:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   10b16:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   10b1a:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   10b21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10b28:	00 00
   10b2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b2e:	31 c0                	xor    %eax,%eax
   10b30:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   10b35:	75 28                	jne    10b5f <codegen_var_assignment+0x5c>
   10b37:	48 8d 05 52 bc 00 00 	lea    0xbc52(%rip),%rax        # 1c790 <__PRETTY_FUNCTION__.4>
   10b3e:	48 89 c1             	mov    %rax,%rcx
   10b41:	ba 5f 00 00 00       	mov    $0x5f,%edx
   10b46:	48 8d 05 a3 b9 00 00 	lea    0xb9a3(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10b4d:	48 89 c6             	mov    %rax,%rsi
   10b50:	48 8d 05 cf b9 00 00 	lea    0xb9cf(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10b57:	48 89 c7             	mov    %rax,%rdi
   10b5a:	e8 71 18 ff ff       	call   23d0 <__assert_fail@plt>
   10b5f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10b63:	8b 40 04             	mov    0x4(%rax),%eax
   10b66:	85 c0                	test   %eax,%eax
   10b68:	74 28                	je     10b92 <codegen_var_assignment+0x8f>
   10b6a:	48 8d 05 1f bc 00 00 	lea    0xbc1f(%rip),%rax        # 1c790 <__PRETTY_FUNCTION__.4>
   10b71:	48 89 c1             	mov    %rax,%rcx
   10b74:	ba 60 00 00 00       	mov    $0x60,%edx
   10b79:	48 8d 05 70 b9 00 00 	lea    0xb970(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10b80:	48 89 c6             	mov    %rax,%rsi
   10b83:	48 8d 05 64 ba 00 00 	lea    0xba64(%rip),%rax        # 1c5ee <__PRETTY_FUNCTION__.0+0x11e>
   10b8a:	48 89 c7             	mov    %rax,%rdi
   10b8d:	e8 3e 18 ff ff       	call   23d0 <__assert_fail@plt>
   10b92:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10b96:	48 8b 40 08          	mov    0x8(%rax),%rax
   10b9a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10b9e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10ba2:	48 8b 40 10          	mov    0x10(%rax),%rax
   10ba6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10baa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10bae:	8b 40 04             	mov    0x4(%rax),%eax
   10bb1:	83 f8 04             	cmp    $0x4,%eax
   10bb4:	74 28                	je     10bde <codegen_var_assignment+0xdb>
   10bb6:	48 8d 05 d3 bb 00 00 	lea    0xbbd3(%rip),%rax        # 1c790 <__PRETTY_FUNCTION__.4>
   10bbd:	48 89 c1             	mov    %rax,%rcx
   10bc0:	ba 6b 00 00 00       	mov    $0x6b,%edx
   10bc5:	48 8d 05 24 b9 00 00 	lea    0xb924(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10bcc:	48 89 c6             	mov    %rax,%rsi
   10bcf:	48 8d 05 36 ba 00 00 	lea    0xba36(%rip),%rax        # 1c60c <__PRETTY_FUNCTION__.0+0x13c>
   10bd6:	48 89 c7             	mov    %rax,%rdi
   10bd9:	e8 f2 17 ff ff       	call   23d0 <__assert_fail@plt>
   10bde:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10be2:	48 8b 40 08          	mov    0x8(%rax),%rax
   10be6:	48 89 c7             	mov    %rax,%rdi
   10be9:	e8 ca 1e 00 00       	call   12ab8 <find_label>
   10bee:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10bf2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   10bf9:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   10bfd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10c01:	48 89 ce             	mov    %rcx,%rsi
   10c04:	48 89 c7             	mov    %rax,%rdi
   10c07:	e8 e0 0b 00 00       	call   117ec <codegen_expr>
   10c0c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   10c10:	b8 00 00 00 00       	mov    $0x0,%eax
   10c15:	e8 77 1d 00 00       	call   12991 <get_reg_stack>
   10c1a:	48 89 c7             	mov    %rax,%rdi
   10c1d:	e8 e7 25 00 00       	call   13209 <front_reg_stack>
   10c22:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10c26:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
   10c2b:	74 36                	je     10c63 <codegen_var_assignment+0x160>
   10c2d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10c31:	8b 08                	mov    (%rax),%ecx
   10c33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c37:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10c3b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10c3f:	41 89 c8             	mov    %ecx,%r8d
   10c42:	48 89 d1             	mov    %rdx,%rcx
   10c45:	48 8d 15 de b9 00 00 	lea    0xb9de(%rip),%rdx        # 1c62a <__PRETTY_FUNCTION__.0+0x15a>
   10c4c:	be 32 00 00 00       	mov    $0x32,%esi
   10c51:	48 89 c7             	mov    %rax,%rdi
   10c54:	b8 00 00 00 00       	mov    $0x0,%eax
   10c59:	e8 52 17 ff ff       	call   23b0 <snprintf@plt>
   10c5e:	e9 b4 00 00 00       	jmp    10d17 <codegen_var_assignment+0x214>
   10c63:	b8 00 00 00 00       	mov    $0x0,%eax
   10c68:	e8 15 74 ff ff       	call   8082 <nonlocal_flag>
   10c6d:	83 f8 01             	cmp    $0x1,%eax
   10c70:	75 55                	jne    10cc7 <codegen_var_assignment+0x1c4>
   10c72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10c76:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10c7a:	48 8d 55 9c          	lea    -0x64(%rbp),%rdx
   10c7e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10c82:	48 89 ce             	mov    %rcx,%rsi
   10c85:	48 89 c7             	mov    %rax,%rdi
   10c88:	e8 a8 11 00 00       	call   11e35 <codegen_get_nonlocal>
   10c8d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   10c91:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
   10c94:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c98:	48 8b 10             	mov    (%rax),%rdx
   10c9b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10c9f:	4c 8d 0d 9a b9 00 00 	lea    0xb99a(%rip),%r9        # 1c640 <__PRETTY_FUNCTION__.0+0x170>
   10ca6:	41 89 c8             	mov    %ecx,%r8d
   10ca9:	48 89 d1             	mov    %rdx,%rcx
   10cac:	48 8d 15 92 b9 00 00 	lea    0xb992(%rip),%rdx        # 1c645 <__PRETTY_FUNCTION__.0+0x175>
   10cb3:	be 32 00 00 00       	mov    $0x32,%esi
   10cb8:	48 89 c7             	mov    %rax,%rdi
   10cbb:	b8 00 00 00 00       	mov    $0x0,%eax
   10cc0:	e8 eb 16 ff ff       	call   23b0 <snprintf@plt>
   10cc5:	eb 50                	jmp    10d17 <codegen_var_assignment+0x214>
   10cc7:	48 8b 05 92 13 01 00 	mov    0x11392(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10cce:	48 89 c1             	mov    %rax,%rcx
   10cd1:	ba 33 00 00 00       	mov    $0x33,%edx
   10cd6:	be 01 00 00 00       	mov    $0x1,%esi
   10cdb:	48 8d 05 76 b9 00 00 	lea    0xb976(%rip),%rax        # 1c658 <__PRETTY_FUNCTION__.0+0x188>
   10ce2:	48 89 c7             	mov    %rax,%rdi
   10ce5:	e8 66 18 ff ff       	call   2550 <fwrite@plt>
   10cea:	48 8b 05 6f 13 01 00 	mov    0x1136f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   10cf1:	48 89 c1             	mov    %rax,%rcx
   10cf4:	ba 33 00 00 00       	mov    $0x33,%edx
   10cf9:	be 01 00 00 00       	mov    $0x1,%esi
   10cfe:	48 8d 05 8b b9 00 00 	lea    0xb98b(%rip),%rax        # 1c690 <__PRETTY_FUNCTION__.0+0x1c0>
   10d05:	48 89 c7             	mov    %rax,%rdi
   10d08:	e8 43 18 ff ff       	call   2550 <fwrite@plt>
   10d0d:	bf 01 00 00 00       	mov    $0x1,%edi
   10d12:	e8 29 18 ff ff       	call   2540 <exit@plt>
   10d17:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10d1b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10d1f:	48 89 d6             	mov    %rdx,%rsi
   10d22:	48 89 c7             	mov    %rax,%rdi
   10d25:	e8 84 e7 ff ff       	call   f4ae <add_inst>
   10d2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10d2e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10d35:	00 00
   10d37:	74 05                	je     10d3e <codegen_var_assignment+0x23b>
   10d39:	e8 62 16 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10d3e:	c9                   	leave
   10d3f:	c3                   	ret

0000000000010d40 <codegen_proc_call>:
   10d40:	f3 0f 1e fa          	endbr64
   10d44:	55                   	push   %rbp
   10d45:	48 89 e5             	mov    %rsp,%rbp
   10d48:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10d4c:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   10d50:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   10d54:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   10d58:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
   10d5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10d63:	00 00
   10d65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10d69:	31 c0                	xor    %eax,%eax
   10d6b:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   10d70:	75 28                	jne    10d9a <codegen_proc_call+0x5a>
   10d72:	48 8d 05 37 ba 00 00 	lea    0xba37(%rip),%rax        # 1c7b0 <__PRETTY_FUNCTION__.3>
   10d79:	48 89 c1             	mov    %rax,%rcx
   10d7c:	ba 85 00 00 00       	mov    $0x85,%edx
   10d81:	48 8d 05 68 b7 00 00 	lea    0xb768(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10d88:	48 89 c6             	mov    %rax,%rsi
   10d8b:	48 8d 05 94 b7 00 00 	lea    0xb794(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10d92:	48 89 c7             	mov    %rax,%rdi
   10d95:	e8 36 16 ff ff       	call   23d0 <__assert_fail@plt>
   10d9a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10d9e:	8b 40 04             	mov    0x4(%rax),%eax
   10da1:	83 f8 01             	cmp    $0x1,%eax
   10da4:	74 28                	je     10dce <codegen_proc_call+0x8e>
   10da6:	48 8d 05 03 ba 00 00 	lea    0xba03(%rip),%rax        # 1c7b0 <__PRETTY_FUNCTION__.3>
   10dad:	48 89 c1             	mov    %rax,%rcx
   10db0:	ba 86 00 00 00       	mov    $0x86,%edx
   10db5:	48 8d 05 34 b7 00 00 	lea    0xb734(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10dbc:	48 89 c6             	mov    %rax,%rsi
   10dbf:	48 8d 05 d2 b7 00 00 	lea    0xb7d2(%rip),%rax        # 1c598 <__PRETTY_FUNCTION__.0+0xc8>
   10dc6:	48 89 c7             	mov    %rax,%rdi
   10dc9:	e8 02 16 ff ff       	call   23d0 <__assert_fail@plt>
   10dce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10dd2:	48 8b 40 10          	mov    0x10(%rax),%rax
   10dd6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10dda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10dde:	48 8b 40 18          	mov    0x18(%rax),%rax
   10de2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   10de6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10dea:	48 8b 40 08          	mov    0x8(%rax),%rax
   10dee:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10df2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10df6:	48 8b 40 20          	mov    0x20(%rax),%rax
   10dfa:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10dfe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10e02:	48 85 c0             	test   %rax,%rax
   10e05:	75 23                	jne    10e2a <codegen_proc_call+0xea>
   10e07:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   10e0b:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   10e0f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10e13:	48 89 ce             	mov    %rcx,%rsi
   10e16:	48 89 c7             	mov    %rax,%rdi
   10e19:	e8 a5 b2 ff ff       	call   c0c3 <FindIdent>
   10e1e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   10e22:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10e26:	48 89 50 20          	mov    %rdx,0x20(%rax)
   10e2a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10e2e:	48 85 c0             	test   %rax,%rax
   10e31:	74 25                	je     10e58 <codegen_proc_call+0x118>
   10e33:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10e37:	8b 40 10             	mov    0x10(%rax),%eax
   10e3a:	83 f8 05             	cmp    $0x5,%eax
   10e3d:	75 19                	jne    10e58 <codegen_proc_call+0x118>
   10e3f:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10e43:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   10e47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10e4b:	48 89 ce             	mov    %rcx,%rsi
   10e4e:	48 89 c7             	mov    %rax,%rdi
   10e51:	e8 ac fa ff ff       	call   10902 <codegen_builtin_proc>
   10e56:	eb 7a                	jmp    10ed2 <codegen_proc_call+0x192>
   10e58:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   10e5c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10e60:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
   10e64:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10e68:	48 89 c7             	mov    %rax,%rdi
   10e6b:	e8 f9 10 00 00       	call   11f69 <codegen_pass_arguments>
   10e70:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10e74:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10e78:	be 00 00 00 00       	mov    $0x0,%esi
   10e7d:	48 89 c7             	mov    %rax,%rdi
   10e80:	e8 94 f1 ff ff       	call   10019 <codegen_vect_reg>
   10e85:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10e89:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   10e8d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10e91:	48 89 d1             	mov    %rdx,%rcx
   10e94:	48 8d 15 1f b7 00 00 	lea    0xb71f(%rip),%rdx        # 1c5ba <__PRETTY_FUNCTION__.0+0xea>
   10e9b:	be 32 00 00 00       	mov    $0x32,%esi
   10ea0:	48 89 c7             	mov    %rax,%rdi
   10ea3:	b8 00 00 00 00       	mov    $0x0,%eax
   10ea8:	e8 03 15 ff ff       	call   23b0 <snprintf@plt>
   10ead:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10eb1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10eb5:	48 89 d6             	mov    %rdx,%rsi
   10eb8:	48 89 c7             	mov    %rax,%rdi
   10ebb:	e8 ee e5 ff ff       	call   f4ae <add_inst>
   10ec0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10ec4:	b8 00 00 00 00       	mov    $0x0,%eax
   10ec9:	e8 be 13 00 00       	call   1228c <free_arg_regs>
   10ece:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10ed2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10ed6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   10edd:	00 00
   10edf:	74 05                	je     10ee6 <codegen_proc_call+0x1a6>
   10ee1:	e8 ba 14 ff ff       	call   23a0 <__stack_chk_fail@plt>
   10ee6:	c9                   	leave
   10ee7:	c3                   	ret

0000000000010ee8 <codegen_if_then>:
   10ee8:	f3 0f 1e fa          	endbr64
   10eec:	55                   	push   %rbp
   10eed:	48 89 e5             	mov    %rsp,%rbp
   10ef0:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   10ef7:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   10efe:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   10f05:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   10f0c:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
   10f13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10f1a:	00 00
   10f1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10f20:	31 c0                	xor    %eax,%eax
   10f22:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   10f29:	00
   10f2a:	75 28                	jne    10f54 <codegen_if_then+0x6c>
   10f2c:	48 8d 05 9d b8 00 00 	lea    0xb89d(%rip),%rax        # 1c7d0 <__PRETTY_FUNCTION__.2>
   10f33:	48 89 c1             	mov    %rax,%rcx
   10f36:	ba aa 00 00 00       	mov    $0xaa,%edx
   10f3b:	48 8d 05 ae b5 00 00 	lea    0xb5ae(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10f42:	48 89 c6             	mov    %rax,%rsi
   10f45:	48 8d 05 da b5 00 00 	lea    0xb5da(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   10f4c:	48 89 c7             	mov    %rax,%rdi
   10f4f:	e8 7c 14 ff ff       	call   23d0 <__assert_fail@plt>
   10f54:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10f5b:	8b 40 04             	mov    0x4(%rax),%eax
   10f5e:	83 f8 03             	cmp    $0x3,%eax
   10f61:	74 28                	je     10f8b <codegen_if_then+0xa3>
   10f63:	48 8d 05 66 b8 00 00 	lea    0xb866(%rip),%rax        # 1c7d0 <__PRETTY_FUNCTION__.2>
   10f6a:	48 89 c1             	mov    %rax,%rcx
   10f6d:	ba ab 00 00 00       	mov    $0xab,%edx
   10f72:	48 8d 05 77 b5 00 00 	lea    0xb577(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   10f79:	48 89 c6             	mov    %rax,%rsi
   10f7c:	48 8d 05 41 b7 00 00 	lea    0xb741(%rip),%rax        # 1c6c4 <__PRETTY_FUNCTION__.0+0x1f4>
   10f83:	48 89 c7             	mov    %rax,%rdi
   10f86:	e8 45 14 ff ff       	call   23d0 <__assert_fail@plt>
   10f8b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10f92:	48 8b 40 08          	mov    0x8(%rax),%rax
   10f96:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   10f9d:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
   10fa4:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10fab:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   10fb2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10fb9:	48 89 c7             	mov    %rax,%rdi
   10fbc:	e8 61 0c 00 00       	call   11c22 <codegen_simple_relop>
   10fc1:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   10fc8:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10fcf:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10fd3:	be 12 00 00 00       	mov    $0x12,%esi
   10fd8:	48 89 c7             	mov    %rax,%rdi
   10fdb:	e8 7f e4 ff ff       	call   f45f <gen_label>
   10fe0:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10fe7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10feb:	be 12 00 00 00       	mov    $0x12,%esi
   10ff0:	48 89 c7             	mov    %rax,%rdi
   10ff3:	e8 67 e4 ff ff       	call   f45f <gen_label>
   10ff8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10fff:	48 8b 40 10          	mov    0x10(%rax),%rax
   11003:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1100a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11011:	48 8b 40 18          	mov    0x18(%rax),%rax
   11015:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1101c:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
   11023:	00 00 00
   11026:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   1102c:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   11033:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11037:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
   1103d:	89 c7                	mov    %eax,%edi
   1103f:	e8 11 e5 ff ff       	call   f555 <gencode_jmp>
   11044:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1104b:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   11052:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11059:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   11060:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11067:	48 89 c7             	mov    %rax,%rdi
   1106a:	e8 06 f7 ff ff       	call   10775 <codegen_stmt>
   1106f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11076:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   1107d:	00
   1107e:	75 46                	jne    110c6 <codegen_if_then+0x1de>
   11080:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11084:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11088:	48 89 d1             	mov    %rdx,%rcx
   1108b:	48 8d 15 4d b6 00 00 	lea    0xb64d(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11092:	be 32 00 00 00       	mov    $0x32,%esi
   11097:	48 89 c7             	mov    %rax,%rdi
   1109a:	b8 00 00 00 00       	mov    $0x0,%eax
   1109f:	e8 0c 13 ff ff       	call   23b0 <snprintf@plt>
   110a4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   110a8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   110af:	48 89 d6             	mov    %rdx,%rsi
   110b2:	48 89 c7             	mov    %rax,%rdi
   110b5:	e8 f4 e3 ff ff       	call   f4ae <add_inst>
   110ba:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   110c1:	e9 db 00 00 00       	jmp    111a1 <codegen_if_then+0x2b9>
   110c6:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
   110cd:	00 00 00
   110d0:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   110d7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   110db:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
   110e1:	89 c6                	mov    %eax,%esi
   110e3:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   110e8:	e8 68 e4 ff ff       	call   f555 <gencode_jmp>
   110ed:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   110f4:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   110f8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   110fc:	48 89 d1             	mov    %rdx,%rcx
   110ff:	48 8d 15 d9 b5 00 00 	lea    0xb5d9(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11106:	be 32 00 00 00       	mov    $0x32,%esi
   1110b:	48 89 c7             	mov    %rax,%rdi
   1110e:	b8 00 00 00 00       	mov    $0x0,%eax
   11113:	e8 98 12 ff ff       	call   23b0 <snprintf@plt>
   11118:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1111c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11123:	48 89 d6             	mov    %rdx,%rsi
   11126:	48 89 c7             	mov    %rax,%rdi
   11129:	e8 80 e3 ff ff       	call   f4ae <add_inst>
   1112e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11135:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1113c:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11143:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   1114a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11151:	48 89 c7             	mov    %rax,%rdi
   11154:	e8 1c f6 ff ff       	call   10775 <codegen_stmt>
   11159:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11160:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11164:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11168:	48 89 d1             	mov    %rdx,%rcx
   1116b:	48 8d 15 6d b5 00 00 	lea    0xb56d(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11172:	be 32 00 00 00       	mov    $0x32,%esi
   11177:	48 89 c7             	mov    %rax,%rdi
   1117a:	b8 00 00 00 00       	mov    $0x0,%eax
   1117f:	e8 2c 12 ff ff       	call   23b0 <snprintf@plt>
   11184:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11188:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1118f:	48 89 d6             	mov    %rdx,%rsi
   11192:	48 89 c7             	mov    %rax,%rdi
   11195:	e8 14 e3 ff ff       	call   f4ae <add_inst>
   1119a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   111a1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   111a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   111ac:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   111b3:	00 00
   111b5:	74 05                	je     111bc <codegen_if_then+0x2d4>
   111b7:	e8 e4 11 ff ff       	call   23a0 <__stack_chk_fail@plt>
   111bc:	c9                   	leave
   111bd:	c3                   	ret

00000000000111be <codegen_while>:
   111be:	f3 0f 1e fa          	endbr64
   111c2:	55                   	push   %rbp
   111c3:	48 89 e5             	mov    %rsp,%rbp
   111c6:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   111cd:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
   111d4:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
   111db:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   111e2:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
   111e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   111f0:	00 00
   111f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   111f6:	31 c0                	xor    %eax,%eax
   111f8:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
   111ff:	00
   11200:	75 28                	jne    1122a <codegen_while+0x6c>
   11202:	48 8d 05 d7 b5 00 00 	lea    0xb5d7(%rip),%rax        # 1c7e0 <__PRETTY_FUNCTION__.1>
   11209:	48 89 c1             	mov    %rax,%rcx
   1120c:	ba d3 00 00 00       	mov    $0xd3,%edx
   11211:	48 8d 05 d8 b2 00 00 	lea    0xb2d8(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11218:	48 89 c6             	mov    %rax,%rsi
   1121b:	48 8d 05 04 b3 00 00 	lea    0xb304(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   11222:	48 89 c7             	mov    %rax,%rdi
   11225:	e8 a6 11 ff ff       	call   23d0 <__assert_fail@plt>
   1122a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11231:	8b 40 04             	mov    0x4(%rax),%eax
   11234:	83 f8 04             	cmp    $0x4,%eax
   11237:	74 28                	je     11261 <codegen_while+0xa3>
   11239:	48 8d 05 a0 b5 00 00 	lea    0xb5a0(%rip),%rax        # 1c7e0 <__PRETTY_FUNCTION__.1>
   11240:	48 89 c1             	mov    %rax,%rcx
   11243:	ba d4 00 00 00       	mov    $0xd4,%edx
   11248:	48 8d 05 a1 b2 00 00 	lea    0xb2a1(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   1124f:	48 89 c6             	mov    %rax,%rsi
   11252:	48 8d 05 8b b4 00 00 	lea    0xb48b(%rip),%rax        # 1c6e4 <__PRETTY_FUNCTION__.0+0x214>
   11259:	48 89 c7             	mov    %rax,%rdi
   1125c:	e8 6f 11 ff ff       	call   23d0 <__assert_fail@plt>
   11261:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11268:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1126c:	be 12 00 00 00       	mov    $0x12,%esi
   11271:	48 89 c7             	mov    %rax,%rdi
   11274:	e8 e6 e1 ff ff       	call   f45f <gen_label>
   11279:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11280:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11284:	be 12 00 00 00       	mov    $0x12,%esi
   11289:	48 89 c7             	mov    %rax,%rdi
   1128c:	e8 ce e1 ff ff       	call   f45f <gen_label>
   11291:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11298:	48 8b 40 10          	mov    0x10(%rax),%rax
   1129c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   112a3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   112aa:	48 8b 40 08          	mov    0x8(%rax),%rax
   112ae:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   112b5:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   112bc:	00 00 00
   112bf:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   112c6:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   112ca:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   112d0:	89 c6                	mov    %eax,%esi
   112d2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   112d7:	e8 79 e2 ff ff       	call   f555 <gencode_jmp>
   112dc:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   112e3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   112e7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   112eb:	48 89 d1             	mov    %rdx,%rcx
   112ee:	48 8d 15 ea b3 00 00 	lea    0xb3ea(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   112f5:	be 32 00 00 00       	mov    $0x32,%esi
   112fa:	48 89 c7             	mov    %rax,%rdi
   112fd:	b8 00 00 00 00       	mov    $0x0,%eax
   11302:	e8 a9 10 ff ff       	call   23b0 <snprintf@plt>
   11307:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1130b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11312:	48 89 d6             	mov    %rdx,%rsi
   11315:	48 89 c7             	mov    %rax,%rdi
   11318:	e8 91 e1 ff ff       	call   f4ae <add_inst>
   1131d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11324:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
   1132b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11332:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   11339:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11340:	48 89 c7             	mov    %rax,%rdi
   11343:	e8 2d f4 ff ff       	call   10775 <codegen_stmt>
   11348:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1134f:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11353:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11357:	48 89 d1             	mov    %rdx,%rcx
   1135a:	48 8d 15 7e b3 00 00 	lea    0xb37e(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11361:	be 32 00 00 00       	mov    $0x32,%esi
   11366:	48 89 c7             	mov    %rax,%rdi
   11369:	b8 00 00 00 00       	mov    $0x0,%eax
   1136e:	e8 3d 10 ff ff       	call   23b0 <snprintf@plt>
   11373:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11377:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1137e:	48 89 d6             	mov    %rdx,%rsi
   11381:	48 89 c7             	mov    %rax,%rdi
   11384:	e8 25 e1 ff ff       	call   f4ae <add_inst>
   11389:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11390:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   11397:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1139e:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
   113a5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   113ac:	48 89 c7             	mov    %rax,%rdi
   113af:	e8 6e 08 00 00       	call   11c22 <codegen_simple_relop>
   113b4:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   113bb:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
   113c2:	00 00 00
   113c5:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   113cb:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   113d2:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   113d6:	8b b5 6c ff ff ff    	mov    -0x94(%rbp),%esi
   113dc:	89 c7                	mov    %eax,%edi
   113de:	e8 72 e1 ff ff       	call   f555 <gencode_jmp>
   113e3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   113ea:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   113f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   113f5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   113fc:	00 00
   113fe:	74 05                	je     11405 <codegen_while+0x247>
   11400:	e8 9b 0f ff ff       	call   23a0 <__stack_chk_fail@plt>
   11405:	c9                   	leave
   11406:	c3                   	ret

0000000000011407 <codegen_for>:
   11407:	f3 0f 1e fa          	endbr64
   1140b:	55                   	push   %rbp
   1140c:	48 89 e5             	mov    %rsp,%rbp
   1140f:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   11416:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   1141d:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   11424:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   1142b:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
   11432:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11439:	00 00
   1143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1143f:	31 c0                	xor    %eax,%eax
   11441:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   11448:	00
   11449:	75 28                	jne    11473 <codegen_for+0x6c>
   1144b:	48 8d 05 9e b3 00 00 	lea    0xb39e(%rip),%rax        # 1c7f0 <__PRETTY_FUNCTION__.0>
   11452:	48 89 c1             	mov    %rax,%rcx
   11455:	ba f4 00 00 00       	mov    $0xf4,%edx
   1145a:	48 8d 05 8f b0 00 00 	lea    0xb08f(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11461:	48 89 c6             	mov    %rax,%rsi
   11464:	48 8d 05 bb b0 00 00 	lea    0xb0bb(%rip),%rax        # 1c526 <__PRETTY_FUNCTION__.0+0x56>
   1146b:	48 89 c7             	mov    %rax,%rdi
   1146e:	e8 5d 0f ff ff       	call   23d0 <__assert_fail@plt>
   11473:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1147a:	8b 40 04             	mov    0x4(%rax),%eax
   1147d:	83 f8 05             	cmp    $0x5,%eax
   11480:	74 28                	je     114aa <codegen_for+0xa3>
   11482:	48 8d 05 67 b3 00 00 	lea    0xb367(%rip),%rax        # 1c7f0 <__PRETTY_FUNCTION__.0>
   11489:	48 89 c1             	mov    %rax,%rcx
   1148c:	ba f5 00 00 00       	mov    $0xf5,%edx
   11491:	48 8d 05 58 b0 00 00 	lea    0xb058(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11498:	48 89 c6             	mov    %rax,%rsi
   1149b:	48 8d 05 5b b2 00 00 	lea    0xb25b(%rip),%rax        # 1c6fd <__PRETTY_FUNCTION__.0+0x22d>
   114a2:	48 89 c7             	mov    %rax,%rdi
   114a5:	e8 26 0f ff ff       	call   23d0 <__assert_fail@plt>
   114aa:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   114b1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   114b5:	be 12 00 00 00       	mov    $0x12,%esi
   114ba:	48 89 c7             	mov    %rax,%rdi
   114bd:	e8 9d df ff ff       	call   f45f <gen_label>
   114c2:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   114c9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   114cd:	be 12 00 00 00       	mov    $0x12,%esi
   114d2:	48 89 c7             	mov    %rax,%rdi
   114d5:	e8 85 df ff ff       	call   f45f <gen_label>
   114da:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   114e1:	48 8b 40 18          	mov    0x18(%rax),%rax
   114e5:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   114ec:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   114f3:	48 8b 40 10          	mov    0x10(%rax),%rax
   114f7:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   114fe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11505:	8b 40 08             	mov    0x8(%rax),%eax
   11508:	83 f8 07             	cmp    $0x7,%eax
   1150b:	75 51                	jne    1155e <codegen_for+0x157>
   1150d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11514:	48 8b 40 20          	mov    0x20(%rax),%rax
   11518:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1151f:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   11526:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   1152d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   11534:	48 89 ce             	mov    %rcx,%rsi
   11537:	48 89 c7             	mov    %rax,%rdi
   1153a:	e8 c4 f5 ff ff       	call   10b03 <codegen_var_assignment>
   1153f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11546:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1154d:	48 8b 40 20          	mov    0x20(%rax),%rax
   11551:	48 8b 40 08          	mov    0x8(%rax),%rax
   11555:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1155c:	eb 12                	jmp    11570 <codegen_for+0x169>
   1155e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   11565:	48 8b 40 20          	mov    0x20(%rax),%rax
   11569:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   11570:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11577:	8b 40 04             	mov    0x4(%rax),%eax
   1157a:	83 f8 04             	cmp    $0x4,%eax
   1157d:	74 28                	je     115a7 <codegen_for+0x1a0>
   1157f:	48 8d 05 6a b2 00 00 	lea    0xb26a(%rip),%rax        # 1c7f0 <__PRETTY_FUNCTION__.0>
   11586:	48 89 c1             	mov    %rax,%rcx
   11589:	ba 0c 01 00 00       	mov    $0x10c,%edx
   1158e:	48 8d 05 5b af 00 00 	lea    0xaf5b(%rip),%rax        # 1c4f0 <__PRETTY_FUNCTION__.0+0x20>
   11595:	48 89 c6             	mov    %rax,%rsi
   11598:	48 8d 05 75 b1 00 00 	lea    0xb175(%rip),%rax        # 1c714 <__PRETTY_FUNCTION__.0+0x244>
   1159f:	48 89 c7             	mov    %rax,%rdi
   115a2:	e8 29 0e ff ff       	call   23d0 <__assert_fail@plt>
   115a7:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   115ae:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   115b5:	48 89 d1             	mov    %rdx,%rcx
   115b8:	48 89 c2             	mov    %rax,%rdx
   115bb:	be 29 01 00 00       	mov    $0x129,%esi
   115c0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   115c5:	e8 6b 8d ff ff       	call   a335 <mk_relop>
   115ca:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   115d1:	be 01 00 00 00       	mov    $0x1,%esi
   115d6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   115db:	e8 bd 8f ff ff       	call   a59d <mk_inum>
   115e0:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   115e7:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   115ee:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   115f5:	48 89 d1             	mov    %rdx,%rcx
   115f8:	48 89 c2             	mov    %rax,%rdx
   115fb:	be 2e 01 00 00       	mov    $0x12e,%esi
   11600:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11605:	e8 d6 8d ff ff       	call   a3e0 <mk_addop>
   1160a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11611:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11618:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1161f:	48 89 c6             	mov    %rax,%rsi
   11622:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11627:	e8 2b 8a ff ff       	call   a057 <mk_varassign>
   1162c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11633:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   1163a:	00 00 00
   1163d:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   11644:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   11648:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
   1164e:	89 c6                	mov    %eax,%esi
   11650:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   11655:	e8 fb de ff ff       	call   f555 <gencode_jmp>
   1165a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11661:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11665:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11669:	48 89 d1             	mov    %rdx,%rcx
   1166c:	48 8d 15 6c b0 00 00 	lea    0xb06c(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   11673:	be 32 00 00 00       	mov    $0x32,%esi
   11678:	48 89 c7             	mov    %rax,%rdi
   1167b:	b8 00 00 00 00       	mov    $0x0,%eax
   11680:	e8 2b 0d ff ff       	call   23b0 <snprintf@plt>
   11685:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11689:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11690:	48 89 d6             	mov    %rdx,%rsi
   11693:	48 89 c7             	mov    %rax,%rdi
   11696:	e8 13 de ff ff       	call   f4ae <add_inst>
   1169b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   116a2:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   116a9:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   116b0:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   116b7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   116be:	48 89 c7             	mov    %rax,%rdi
   116c1:	e8 af f0 ff ff       	call   10775 <codegen_stmt>
   116c6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   116cd:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   116d4:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   116db:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   116e2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   116e9:	48 89 c7             	mov    %rax,%rdi
   116ec:	e8 84 f0 ff ff       	call   10775 <codegen_stmt>
   116f1:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   116f8:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
   116fc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11700:	48 89 d1             	mov    %rdx,%rcx
   11703:	48 8d 15 d5 af 00 00 	lea    0xafd5(%rip),%rdx        # 1c6df <__PRETTY_FUNCTION__.0+0x20f>
   1170a:	be 32 00 00 00       	mov    $0x32,%esi
   1170f:	48 89 c7             	mov    %rax,%rdi
   11712:	b8 00 00 00 00       	mov    $0x0,%eax
   11717:	e8 94 0c ff ff       	call   23b0 <snprintf@plt>
   1171c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11720:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11727:	48 89 d6             	mov    %rdx,%rsi
   1172a:	48 89 c7             	mov    %rax,%rdi
   1172d:	e8 7c dd ff ff       	call   f4ae <add_inst>
   11732:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11739:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   11740:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   11747:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
   1174e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   11755:	48 89 c7             	mov    %rax,%rdi
   11758:	e8 c5 04 00 00       	call   11c22 <codegen_simple_relop>
   1175d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11764:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
   1176b:	00 00 00
   1176e:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
   11774:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
   1177b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1177f:	8b b5 3c ff ff ff    	mov    -0xc4(%rbp),%esi
   11785:	89 c7                	mov    %eax,%edi
   11787:	e8 c9 dd ff ff       	call   f555 <gencode_jmp>
   1178c:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11793:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1179a:	48 89 c7             	mov    %rax,%rdi
   1179d:	e8 4e 0b ff ff       	call   22f0 <free@plt>
   117a2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   117a9:	48 89 c7             	mov    %rax,%rdi
   117ac:	e8 3f 0b ff ff       	call   22f0 <free@plt>
   117b1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   117b8:	48 89 c7             	mov    %rax,%rdi
   117bb:	e8 30 0b ff ff       	call   22f0 <free@plt>
   117c0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   117c7:	48 89 c7             	mov    %rax,%rdi
   117ca:	e8 21 0b ff ff       	call   22f0 <free@plt>
   117cf:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   117d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   117da:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   117e1:	00 00
   117e3:	74 05                	je     117ea <codegen_for+0x3e3>
   117e5:	e8 b6 0b ff ff       	call   23a0 <__stack_chk_fail@plt>
   117ea:	c9                   	leave
   117eb:	c3                   	ret

00000000000117ec <codegen_expr>:
   117ec:	f3 0f 1e fa          	endbr64
   117f0:	55                   	push   %rbp
   117f1:	48 89 e5             	mov    %rsp,%rbp
   117f4:	48 83 ec 30          	sub    $0x30,%rsp
   117f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   117fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11800:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11804:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   11809:	75 28                	jne    11833 <codegen_expr+0x47>
   1180b:	48 8d 05 4e b3 00 00 	lea    0xb34e(%rip),%rax        # 1cb60 <__PRETTY_FUNCTION__.2>
   11812:	48 89 c1             	mov    %rax,%rcx
   11815:	ba 1a 00 00 00       	mov    $0x1a,%edx
   1181a:	48 8d 05 df af 00 00 	lea    0xafdf(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   11821:	48 89 c6             	mov    %rax,%rsi
   11824:	48 8d 05 0c b0 00 00 	lea    0xb00c(%rip),%rax        # 1c837 <__PRETTY_FUNCTION__.0+0x47>
   1182b:	48 89 c7             	mov    %rax,%rdi
   1182e:	e8 9d 0b ff ff       	call   23d0 <__assert_fail@plt>
   11833:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   1183a:	00
   1183b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1183f:	8b 50 04             	mov    0x4(%rax),%edx
   11842:	48 8b 05 17 08 01 00 	mov    0x10817(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11849:	48 8d 0d f8 af 00 00 	lea    0xaff8(%rip),%rcx        # 1c848 <__PRETTY_FUNCTION__.0+0x58>
   11850:	48 89 ce             	mov    %rcx,%rsi
   11853:	48 89 c7             	mov    %rax,%rdi
   11856:	b8 00 00 00 00       	mov    $0x0,%eax
   1185b:	e8 10 0c ff ff       	call   2470 <fprintf@plt>
   11860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11864:	8b 40 04             	mov    0x4(%rax),%eax
   11867:	83 f8 07             	cmp    $0x7,%eax
   1186a:	0f 87 81 03 00 00    	ja     11bf1 <codegen_expr+0x405>
   11870:	89 c0                	mov    %eax,%eax
   11872:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11879:	00
   1187a:	48 8d 05 2f b1 00 00 	lea    0xb12f(%rip),%rax        # 1c9b0 <__PRETTY_FUNCTION__.0+0x1c0>
   11881:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   11884:	48 98                	cltq
   11886:	48 8d 15 23 b1 00 00 	lea    0xb123(%rip),%rdx        # 1c9b0 <__PRETTY_FUNCTION__.0+0x1c0>
   1188d:	48 01 d0             	add    %rdx,%rax
   11890:	3e ff e0             	notrack jmp *%rax
   11893:	48 8b 05 c6 07 01 00 	mov    0x107c6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1189a:	48 89 c1             	mov    %rax,%rcx
   1189d:	ba 29 00 00 00       	mov    $0x29,%edx
   118a2:	be 01 00 00 00       	mov    $0x1,%esi
   118a7:	48 8d 05 ca af 00 00 	lea    0xafca(%rip),%rax        # 1c878 <__PRETTY_FUNCTION__.0+0x88>
   118ae:	48 89 c7             	mov    %rax,%rdi
   118b1:	e8 9a 0c ff ff       	call   2550 <fwrite@plt>
   118b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118ba:	48 89 c7             	mov    %rax,%rdi
   118bd:	e8 cd 1f 00 00       	call   1388f <build_expr_tree>
   118c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   118c6:	b8 00 00 00 00       	mov    $0x0,%eax
   118cb:	e8 c1 10 00 00       	call   12991 <get_reg_stack>
   118d0:	48 89 c2             	mov    %rax,%rdx
   118d3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   118d7:	48 89 c6             	mov    %rax,%rsi
   118da:	48 89 d7             	mov    %rdx,%rdi
   118dd:	e8 73 19 00 00       	call   13255 <get_free_reg>
   118e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   118e6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   118ea:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   118ee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   118f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   118f6:	48 89 c7             	mov    %rax,%rdi
   118f9:	e8 76 22 00 00       	call   13b74 <gencode_expr_tree>
   118fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11902:	b8 00 00 00 00       	mov    $0x0,%eax
   11907:	e8 85 10 00 00       	call   12991 <get_reg_stack>
   1190c:	48 89 c2             	mov    %rax,%rdx
   1190f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11913:	48 89 c6             	mov    %rax,%rsi
   11916:	48 89 d7             	mov    %rdx,%rdi
   11919:	e8 da 16 00 00       	call   12ff8 <free_reg>
   1191e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11922:	48 89 c7             	mov    %rax,%rdi
   11925:	e8 e0 28 00 00       	call   1420a <free_expr_tree>
   1192a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1192e:	e9 ed 02 00 00       	jmp    11c20 <codegen_expr+0x434>
   11933:	48 8b 05 26 07 01 00 	mov    0x10726(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1193a:	48 89 c1             	mov    %rax,%rcx
   1193d:	ba 23 00 00 00       	mov    $0x23,%edx
   11942:	be 01 00 00 00       	mov    $0x1,%esi
   11947:	48 8d 05 5a af 00 00 	lea    0xaf5a(%rip),%rax        # 1c8a8 <__PRETTY_FUNCTION__.0+0xb8>
   1194e:	48 89 c7             	mov    %rax,%rdi
   11951:	e8 fa 0b ff ff       	call   2550 <fwrite@plt>
   11956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1195a:	48 89 c7             	mov    %rax,%rdi
   1195d:	e8 2d 1f 00 00       	call   1388f <build_expr_tree>
   11962:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11966:	b8 00 00 00 00       	mov    $0x0,%eax
   1196b:	e8 21 10 00 00       	call   12991 <get_reg_stack>
   11970:	48 89 c2             	mov    %rax,%rdx
   11973:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11977:	48 89 c6             	mov    %rax,%rsi
   1197a:	48 89 d7             	mov    %rdx,%rdi
   1197d:	e8 d3 18 00 00       	call   13255 <get_free_reg>
   11982:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11986:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1198a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1198e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11992:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11996:	48 89 c7             	mov    %rax,%rdi
   11999:	e8 d6 21 00 00       	call   13b74 <gencode_expr_tree>
   1199e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   119a2:	b8 00 00 00 00       	mov    $0x0,%eax
   119a7:	e8 e5 0f 00 00       	call   12991 <get_reg_stack>
   119ac:	48 89 c2             	mov    %rax,%rdx
   119af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119b3:	48 89 c6             	mov    %rax,%rsi
   119b6:	48 89 d7             	mov    %rdx,%rdi
   119b9:	e8 3a 16 00 00       	call   12ff8 <free_reg>
   119be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   119c2:	48 89 c7             	mov    %rax,%rdi
   119c5:	e8 40 28 00 00       	call   1420a <free_expr_tree>
   119ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119ce:	e9 4d 02 00 00       	jmp    11c20 <codegen_expr+0x434>
   119d3:	48 8b 05 86 06 01 00 	mov    0x10686(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   119da:	48 89 c1             	mov    %rax,%rcx
   119dd:	ba 2e 00 00 00       	mov    $0x2e,%edx
   119e2:	be 01 00 00 00       	mov    $0x1,%esi
   119e7:	48 8d 05 e2 ae 00 00 	lea    0xaee2(%rip),%rax        # 1c8d0 <__PRETTY_FUNCTION__.0+0xe0>
   119ee:	48 89 c7             	mov    %rax,%rdi
   119f1:	e8 5a 0b ff ff       	call   2550 <fwrite@plt>
   119f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119fa:	48 89 c7             	mov    %rax,%rdi
   119fd:	e8 8d 1e 00 00       	call   1388f <build_expr_tree>
   11a02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11a06:	b8 00 00 00 00       	mov    $0x0,%eax
   11a0b:	e8 81 0f 00 00       	call   12991 <get_reg_stack>
   11a10:	48 89 c2             	mov    %rax,%rdx
   11a13:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11a17:	48 89 c6             	mov    %rax,%rsi
   11a1a:	48 89 d7             	mov    %rdx,%rdi
   11a1d:	e8 33 18 00 00       	call   13255 <get_free_reg>
   11a22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a26:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11a2a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11a2e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11a32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a36:	48 89 c7             	mov    %rax,%rdi
   11a39:	e8 36 21 00 00       	call   13b74 <gencode_expr_tree>
   11a3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11a42:	b8 00 00 00 00       	mov    $0x0,%eax
   11a47:	e8 45 0f 00 00       	call   12991 <get_reg_stack>
   11a4c:	48 89 c2             	mov    %rax,%rdx
   11a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a53:	48 89 c6             	mov    %rax,%rsi
   11a56:	48 89 d7             	mov    %rdx,%rdi
   11a59:	e8 9a 15 00 00       	call   12ff8 <free_reg>
   11a5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a62:	48 89 c7             	mov    %rax,%rdi
   11a65:	e8 a0 27 00 00       	call   1420a <free_expr_tree>
   11a6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a6e:	e9 ad 01 00 00       	jmp    11c20 <codegen_expr+0x434>
   11a73:	48 8b 05 e6 05 01 00 	mov    0x105e6(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11a7a:	48 89 c1             	mov    %rax,%rcx
   11a7d:	ba 31 00 00 00       	mov    $0x31,%edx
   11a82:	be 01 00 00 00       	mov    $0x1,%esi
   11a87:	48 8d 05 72 ae 00 00 	lea    0xae72(%rip),%rax        # 1c900 <__PRETTY_FUNCTION__.0+0x110>
   11a8e:	48 89 c7             	mov    %rax,%rdi
   11a91:	e8 ba 0a ff ff       	call   2550 <fwrite@plt>
   11a96:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11a9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11a9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11aa2:	b9 00 00 00 00       	mov    $0x0,%ecx
   11aa7:	48 89 c7             	mov    %rax,%rdi
   11aaa:	e8 73 01 00 00       	call   11c22 <codegen_simple_relop>
   11aaf:	e9 6c 01 00 00       	jmp    11c20 <codegen_expr+0x434>
   11ab4:	48 8b 05 a5 05 01 00 	mov    0x105a5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11abb:	48 89 c1             	mov    %rax,%rcx
   11abe:	ba 23 00 00 00       	mov    $0x23,%edx
   11ac3:	be 01 00 00 00       	mov    $0x1,%esi
   11ac8:	48 8d 05 69 ae 00 00 	lea    0xae69(%rip),%rax        # 1c938 <__PRETTY_FUNCTION__.0+0x148>
   11acf:	48 89 c7             	mov    %rax,%rdi
   11ad2:	e8 79 0a ff ff       	call   2550 <fwrite@plt>
   11ad7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11adb:	48 89 c7             	mov    %rax,%rdi
   11ade:	e8 ac 1d 00 00       	call   1388f <build_expr_tree>
   11ae3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11ae7:	b8 00 00 00 00       	mov    $0x0,%eax
   11aec:	e8 a0 0e 00 00       	call   12991 <get_reg_stack>
   11af1:	48 89 c2             	mov    %rax,%rdx
   11af4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11af8:	48 89 c6             	mov    %rax,%rsi
   11afb:	48 89 d7             	mov    %rdx,%rdi
   11afe:	e8 52 17 00 00       	call   13255 <get_free_reg>
   11b03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11b07:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11b0b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11b0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11b13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b17:	48 89 c7             	mov    %rax,%rdi
   11b1a:	e8 55 20 00 00       	call   13b74 <gencode_expr_tree>
   11b1f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11b23:	b8 00 00 00 00       	mov    $0x0,%eax
   11b28:	e8 64 0e 00 00       	call   12991 <get_reg_stack>
   11b2d:	48 89 c2             	mov    %rax,%rdx
   11b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b34:	48 89 c6             	mov    %rax,%rsi
   11b37:	48 89 d7             	mov    %rdx,%rdi
   11b3a:	e8 b9 14 00 00       	call   12ff8 <free_reg>
   11b3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b43:	48 89 c7             	mov    %rax,%rdi
   11b46:	e8 bf 26 00 00       	call   1420a <free_expr_tree>
   11b4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b4f:	e9 cc 00 00 00       	jmp    11c20 <codegen_expr+0x434>
   11b54:	48 8b 05 05 05 01 00 	mov    0x10505(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11b5b:	48 89 c1             	mov    %rax,%rcx
   11b5e:	ba 27 00 00 00       	mov    $0x27,%edx
   11b63:	be 01 00 00 00       	mov    $0x1,%esi
   11b68:	48 8d 05 f1 ad 00 00 	lea    0xadf1(%rip),%rax        # 1c960 <__PRETTY_FUNCTION__.0+0x170>
   11b6f:	48 89 c7             	mov    %rax,%rdi
   11b72:	e8 d9 09 ff ff       	call   2550 <fwrite@plt>
   11b77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b7b:	48 89 c7             	mov    %rax,%rdi
   11b7e:	e8 0c 1d 00 00       	call   1388f <build_expr_tree>
   11b83:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11b87:	b8 00 00 00 00       	mov    $0x0,%eax
   11b8c:	e8 00 0e 00 00       	call   12991 <get_reg_stack>
   11b91:	48 89 c2             	mov    %rax,%rdx
   11b94:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11b98:	48 89 c6             	mov    %rax,%rsi
   11b9b:	48 89 d7             	mov    %rdx,%rdi
   11b9e:	e8 b2 16 00 00       	call   13255 <get_free_reg>
   11ba3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11ba7:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   11bab:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11baf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11bb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11bb7:	48 89 c7             	mov    %rax,%rdi
   11bba:	e8 b5 1f 00 00       	call   13b74 <gencode_expr_tree>
   11bbf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11bc3:	b8 00 00 00 00       	mov    $0x0,%eax
   11bc8:	e8 c4 0d 00 00       	call   12991 <get_reg_stack>
   11bcd:	48 89 c2             	mov    %rax,%rdx
   11bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bd4:	48 89 c6             	mov    %rax,%rsi
   11bd7:	48 89 d7             	mov    %rdx,%rdi
   11bda:	e8 19 14 00 00       	call   12ff8 <free_reg>
   11bdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11be3:	48 89 c7             	mov    %rax,%rdi
   11be6:	e8 1f 26 00 00       	call   1420a <free_expr_tree>
   11beb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11bef:	eb 2f                	jmp    11c20 <codegen_expr+0x434>
   11bf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bf5:	8b 50 04             	mov    0x4(%rax),%edx
   11bf8:	48 8b 05 61 04 01 00 	mov    0x10461(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11bff:	48 8d 0d 82 ad 00 00 	lea    0xad82(%rip),%rcx        # 1c988 <__PRETTY_FUNCTION__.0+0x198>
   11c06:	48 89 ce             	mov    %rcx,%rsi
   11c09:	48 89 c7             	mov    %rax,%rdi
   11c0c:	b8 00 00 00 00       	mov    $0x0,%eax
   11c11:	e8 5a 08 ff ff       	call   2470 <fprintf@plt>
   11c16:	bf 01 00 00 00       	mov    $0x1,%edi
   11c1b:	e8 20 09 ff ff       	call   2540 <exit@plt>
   11c20:	c9                   	leave
   11c21:	c3                   	ret

0000000000011c22 <codegen_simple_relop>:
   11c22:	f3 0f 1e fa          	endbr64
   11c26:	55                   	push   %rbp
   11c27:	48 89 e5             	mov    %rsp,%rbp
   11c2a:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11c31:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11c38:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11c3f:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   11c46:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   11c4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11c54:	00 00
   11c56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11c5a:	31 c0                	xor    %eax,%eax
   11c5c:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   11c63:	00
   11c64:	75 28                	jne    11c8e <codegen_simple_relop+0x6c>
   11c66:	48 8d 05 03 af 00 00 	lea    0xaf03(%rip),%rax        # 1cb70 <__PRETTY_FUNCTION__.1>
   11c6d:	48 89 c1             	mov    %rax,%rcx
   11c70:	ba 57 00 00 00       	mov    $0x57,%edx
   11c75:	48 8d 05 84 ab 00 00 	lea    0xab84(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   11c7c:	48 89 c6             	mov    %rax,%rsi
   11c7f:	48 8d 05 b1 ab 00 00 	lea    0xabb1(%rip),%rax        # 1c837 <__PRETTY_FUNCTION__.0+0x47>
   11c86:	48 89 c7             	mov    %rax,%rdi
   11c89:	e8 42 07 ff ff       	call   23d0 <__assert_fail@plt>
   11c8e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11c95:	8b 40 04             	mov    0x4(%rax),%eax
   11c98:	85 c0                	test   %eax,%eax
   11c9a:	74 28                	je     11cc4 <codegen_simple_relop+0xa2>
   11c9c:	48 8d 05 cd ae 00 00 	lea    0xaecd(%rip),%rax        # 1cb70 <__PRETTY_FUNCTION__.1>
   11ca3:	48 89 c1             	mov    %rax,%rcx
   11ca6:	ba 58 00 00 00       	mov    $0x58,%edx
   11cab:	48 8d 05 4e ab 00 00 	lea    0xab4e(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   11cb2:	48 89 c6             	mov    %rax,%rsi
   11cb5:	48 8d 05 14 ad 00 00 	lea    0xad14(%rip),%rax        # 1c9d0 <__PRETTY_FUNCTION__.0+0x1e0>
   11cbc:	48 89 c7             	mov    %rax,%rdi
   11cbf:	e8 0c 07 ff ff       	call   23d0 <__assert_fail@plt>
   11cc4:	48 8b 05 95 03 01 00 	mov    0x10395(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11ccb:	48 89 c1             	mov    %rax,%rcx
   11cce:	ba 1f 00 00 00       	mov    $0x1f,%edx
   11cd3:	be 01 00 00 00       	mov    $0x1,%esi
   11cd8:	48 8d 05 11 ad 00 00 	lea    0xad11(%rip),%rax        # 1c9f0 <__PRETTY_FUNCTION__.0+0x200>
   11cdf:	48 89 c7             	mov    %rax,%rdi
   11ce2:	e8 69 08 ff ff       	call   2550 <fwrite@plt>
   11ce7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11cee:	8b 50 08             	mov    0x8(%rax),%edx
   11cf1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   11cf8:	89 10                	mov    %edx,(%rax)
   11cfa:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   11d01:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d08:	48 8b 40 10          	mov    0x10(%rax),%rax
   11d0c:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11d13:	48 89 ce             	mov    %rcx,%rsi
   11d16:	48 89 c7             	mov    %rax,%rdi
   11d19:	e8 ce fa ff ff       	call   117ec <codegen_expr>
   11d1e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11d25:	b8 00 00 00 00       	mov    $0x0,%eax
   11d2a:	e8 62 0c 00 00       	call   12991 <get_reg_stack>
   11d2f:	48 89 c2             	mov    %rax,%rdx
   11d32:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   11d39:	48 89 c6             	mov    %rax,%rsi
   11d3c:	48 89 d7             	mov    %rdx,%rdi
   11d3f:	e8 11 15 00 00       	call   13255 <get_free_reg>
   11d44:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   11d48:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   11d4f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d56:	48 8b 40 18          	mov    0x18(%rax),%rax
   11d5a:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   11d61:	48 89 ce             	mov    %rcx,%rsi
   11d64:	48 89 c7             	mov    %rax,%rdi
   11d67:	e8 80 fa ff ff       	call   117ec <codegen_expr>
   11d6c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11d73:	b8 00 00 00 00       	mov    $0x0,%eax
   11d78:	e8 14 0c 00 00       	call   12991 <get_reg_stack>
   11d7d:	48 89 c7             	mov    %rax,%rdi
   11d80:	e8 84 14 00 00       	call   13209 <front_reg_stack>
   11d85:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   11d89:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11d8d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11d91:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11d95:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11d99:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11d9d:	49 89 c8             	mov    %rcx,%r8
   11da0:	48 89 d1             	mov    %rdx,%rcx
   11da3:	48 8d 15 66 ac 00 00 	lea    0xac66(%rip),%rdx        # 1ca10 <__PRETTY_FUNCTION__.0+0x220>
   11daa:	be 64 00 00 00       	mov    $0x64,%esi
   11daf:	48 89 c7             	mov    %rax,%rdi
   11db2:	b8 00 00 00 00       	mov    $0x0,%eax
   11db7:	e8 f4 05 ff ff       	call   23b0 <snprintf@plt>
   11dbc:	b8 00 00 00 00       	mov    $0x0,%eax
   11dc1:	e8 cb 0b 00 00       	call   12991 <get_reg_stack>
   11dc6:	48 89 c2             	mov    %rax,%rdx
   11dc9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11dcd:	48 89 c6             	mov    %rax,%rsi
   11dd0:	48 89 d7             	mov    %rdx,%rdi
   11dd3:	e8 20 12 00 00       	call   12ff8 <free_reg>
   11dd8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11ddf:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   11de3:	48 89 d6             	mov    %rdx,%rsi
   11de6:	48 89 c7             	mov    %rax,%rdi
   11de9:	e8 c0 d6 ff ff       	call   f4ae <add_inst>
   11dee:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   11df5:	48 8b 05 64 02 01 00 	mov    0x10264(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11dfc:	48 89 c1             	mov    %rax,%rcx
   11dff:	ba 1e 00 00 00       	mov    $0x1e,%edx
   11e04:	be 01 00 00 00       	mov    $0x1,%esi
   11e09:	48 8d 05 10 ac 00 00 	lea    0xac10(%rip),%rax        # 1ca20 <__PRETTY_FUNCTION__.0+0x230>
   11e10:	48 89 c7             	mov    %rax,%rdi
   11e13:	e8 38 07 ff ff       	call   2550 <fwrite@plt>
   11e18:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11e1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11e23:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11e2a:	00 00
   11e2c:	74 05                	je     11e33 <codegen_simple_relop+0x211>
   11e2e:	e8 6d 05 ff ff       	call   23a0 <__stack_chk_fail@plt>
   11e33:	c9                   	leave
   11e34:	c3                   	ret

0000000000011e35 <codegen_get_nonlocal>:
   11e35:	f3 0f 1e fa          	endbr64
   11e39:	55                   	push   %rbp
   11e3a:	48 89 e5             	mov    %rsp,%rbp
   11e3d:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11e44:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11e4b:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11e52:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   11e59:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11e60:	00 00
   11e62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11e66:	31 c0                	xor    %eax,%eax
   11e68:	48 8b 05 f1 01 01 00 	mov    0x101f1(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11e6f:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11e76:	48 8d 0d c3 ab 00 00 	lea    0xabc3(%rip),%rcx        # 1ca40 <__PRETTY_FUNCTION__.0+0x250>
   11e7d:	48 89 ce             	mov    %rcx,%rsi
   11e80:	48 89 c7             	mov    %rax,%rdi
   11e83:	b8 00 00 00 00       	mov    $0x0,%eax
   11e88:	e8 e3 05 ff ff       	call   2470 <fprintf@plt>
   11e8d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11e94:	48 89 c7             	mov    %rax,%rdi
   11e97:	e8 1c 0c 00 00       	call   12ab8 <find_label>
   11e9c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   11ea0:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   11ea5:	75 2f                	jne    11ed6 <codegen_get_nonlocal+0xa1>
   11ea7:	48 8b 05 b2 01 01 00 	mov    0x101b2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11eae:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   11eb5:	48 8d 0d b4 ab 00 00 	lea    0xabb4(%rip),%rcx        # 1ca70 <__PRETTY_FUNCTION__.0+0x280>
   11ebc:	48 89 ce             	mov    %rcx,%rsi
   11ebf:	48 89 c7             	mov    %rax,%rdi
   11ec2:	b8 00 00 00 00       	mov    $0x0,%eax
   11ec7:	e8 a4 05 ff ff       	call   2470 <fprintf@plt>
   11ecc:	bf 01 00 00 00       	mov    $0x1,%edi
   11ed1:	e8 6a 06 ff ff       	call   2540 <exit@plt>
   11ed6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11eda:	8b 10                	mov    (%rax),%edx
   11edc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11ee3:	89 10                	mov    %edx,(%rax)
   11ee5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11ee9:	48 8d 15 ad ab 00 00 	lea    0xabad(%rip),%rdx        # 1ca9d <__PRETTY_FUNCTION__.0+0x2ad>
   11ef0:	48 89 d1             	mov    %rdx,%rcx
   11ef3:	48 8d 15 a8 ab 00 00 	lea    0xaba8(%rip),%rdx        # 1caa2 <__PRETTY_FUNCTION__.0+0x2b2>
   11efa:	be 64 00 00 00       	mov    $0x64,%esi
   11eff:	48 89 c7             	mov    %rax,%rdi
   11f02:	b8 00 00 00 00       	mov    $0x0,%eax
   11f07:	e8 a4 04 ff ff       	call   23b0 <snprintf@plt>
   11f0c:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   11f10:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f17:	48 89 d6             	mov    %rdx,%rsi
   11f1a:	48 89 c7             	mov    %rax,%rdi
   11f1d:	e8 8c d5 ff ff       	call   f4ae <add_inst>
   11f22:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   11f29:	48 8b 05 30 01 01 00 	mov    0x10130(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11f30:	48 89 c1             	mov    %rax,%rcx
   11f33:	ba 22 00 00 00       	mov    $0x22,%edx
   11f38:	be 01 00 00 00       	mov    $0x1,%esi
   11f3d:	48 8d 05 74 ab 00 00 	lea    0xab74(%rip),%rax        # 1cab8 <__PRETTY_FUNCTION__.0+0x2c8>
   11f44:	48 89 c7             	mov    %rax,%rdi
   11f47:	e8 04 06 ff ff       	call   2550 <fwrite@plt>
   11f4c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11f57:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11f5e:	00 00
   11f60:	74 05                	je     11f67 <codegen_get_nonlocal+0x132>
   11f62:	e8 39 04 ff ff       	call   23a0 <__stack_chk_fail@plt>
   11f67:	c9                   	leave
   11f68:	c3                   	ret

0000000000011f69 <codegen_pass_arguments>:
   11f69:	f3 0f 1e fa          	endbr64
   11f6d:	55                   	push   %rbp
   11f6e:	48 89 e5             	mov    %rsp,%rbp
   11f71:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11f78:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11f7f:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11f86:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   11f8d:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
   11f94:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11f9b:	00 00
   11f9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11fa1:	31 c0                	xor    %eax,%eax
   11fa3:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
   11faa:	00
   11fab:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   11fb2:	00
   11fb3:	74 0f                	je     11fc4 <codegen_pass_arguments+0x5b>
   11fb5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   11fbc:	48 8b 40 18          	mov    0x18(%rax),%rax
   11fc0:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   11fc4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
   11fcb:	e9 0e 02 00 00       	jmp    121de <codegen_pass_arguments+0x275>
   11fd0:	8b 45 84             	mov    -0x7c(%rbp),%eax
   11fd3:	89 c7                	mov    %eax,%edi
   11fd5:	e8 c7 02 00 00       	call   122a1 <get_arg_reg64_num>
   11fda:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   11fde:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   11fe3:	75 2b                	jne    12010 <codegen_pass_arguments+0xa7>
   11fe5:	48 8b 05 74 00 01 00 	mov    0x10074(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   11fec:	8b 55 84             	mov    -0x7c(%rbp),%edx
   11fef:	48 8d 0d ea aa 00 00 	lea    0xaaea(%rip),%rcx        # 1cae0 <__PRETTY_FUNCTION__.0+0x2f0>
   11ff6:	48 89 ce             	mov    %rcx,%rsi
   11ff9:	48 89 c7             	mov    %rax,%rdi
   11ffc:	b8 00 00 00 00       	mov    $0x0,%eax
   12001:	e8 6a 04 ff ff       	call   2470 <fprintf@plt>
   12006:	bf 01 00 00 00       	mov    $0x1,%edi
   1200b:	e8 30 05 ff ff       	call   2540 <exit@plt>
   12010:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   12017:	48 8b 40 08          	mov    0x8(%rax),%rax
   1201b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1201f:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   12026:	00
   12027:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   1202c:	74 0c                	je     1203a <codegen_pass_arguments+0xd1>
   1202e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12032:	48 8b 40 08          	mov    0x8(%rax),%rax
   12036:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1203a:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   1203f:	0f 84 a5 00 00 00    	je     120ea <codegen_pass_arguments+0x181>
   12045:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12049:	8b 40 20             	mov    0x20(%rax),%eax
   1204c:	85 c0                	test   %eax,%eax
   1204e:	0f 84 96 00 00 00    	je     120ea <codegen_pass_arguments+0x181>
   12054:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12058:	8b 40 04             	mov    0x4(%rax),%eax
   1205b:	83 f8 04             	cmp    $0x4,%eax
   1205e:	74 28                	je     12088 <codegen_pass_arguments+0x11f>
   12060:	48 8d 05 29 ab 00 00 	lea    0xab29(%rip),%rax        # 1cb90 <__PRETTY_FUNCTION__.0>
   12067:	48 89 c1             	mov    %rax,%rcx
   1206a:	ba a1 00 00 00       	mov    $0xa1,%edx
   1206f:	48 8d 05 8a a7 00 00 	lea    0xa78a(%rip),%rax        # 1c800 <__PRETTY_FUNCTION__.0+0x10>
   12076:	48 89 c6             	mov    %rax,%rsi
   12079:	48 8d 05 87 aa 00 00 	lea    0xaa87(%rip),%rax        # 1cb07 <__PRETTY_FUNCTION__.0+0x317>
   12080:	48 89 c7             	mov    %rax,%rdi
   12083:	e8 48 03 ff ff       	call   23d0 <__assert_fail@plt>
   12088:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1208c:	48 8b 40 08          	mov    0x8(%rax),%rax
   12090:	48 89 c7             	mov    %rax,%rdi
   12093:	e8 20 0a 00 00       	call   12ab8 <find_label>
   12098:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1209c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   120a0:	8b 10                	mov    (%rax),%edx
   120a2:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   120a6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   120aa:	49 89 c8             	mov    %rcx,%r8
   120ad:	89 d1                	mov    %edx,%ecx
   120af:	48 8d 15 6f aa 00 00 	lea    0xaa6f(%rip),%rdx        # 1cb25 <__PRETTY_FUNCTION__.0+0x335>
   120b6:	be 32 00 00 00       	mov    $0x32,%esi
   120bb:	48 89 c7             	mov    %rax,%rdi
   120be:	b8 00 00 00 00       	mov    $0x0,%eax
   120c3:	e8 e8 02 ff ff       	call   23b0 <snprintf@plt>
   120c8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   120cf:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   120d3:	48 89 d6             	mov    %rdx,%rsi
   120d6:	48 89 c7             	mov    %rax,%rdi
   120d9:	e8 d0 d3 ff ff       	call   f4ae <add_inst>
   120de:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   120e5:	e9 cb 00 00 00       	jmp    121b5 <codegen_pass_arguments+0x24c>
   120ea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   120ee:	48 89 c7             	mov    %rax,%rdi
   120f1:	e8 99 17 00 00       	call   1388f <build_expr_tree>
   120f6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   120fa:	b8 00 00 00 00       	mov    $0x0,%eax
   120ff:	e8 8d 08 00 00       	call   12991 <get_reg_stack>
   12104:	48 89 c2             	mov    %rax,%rdx
   12107:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1210e:	48 89 c6             	mov    %rax,%rsi
   12111:	48 89 d7             	mov    %rdx,%rdi
   12114:	e8 3c 11 00 00       	call   13255 <get_free_reg>
   12119:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1211d:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
   12124:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   12128:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1212f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12133:	48 89 c7             	mov    %rax,%rdi
   12136:	e8 39 1a 00 00       	call   13b74 <gencode_expr_tree>
   1213b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   12142:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12146:	48 89 c7             	mov    %rax,%rdi
   12149:	e8 bc 20 00 00       	call   1420a <free_expr_tree>
   1214e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12152:	48 8b 10             	mov    (%rax),%rdx
   12155:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   12159:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1215d:	49 89 c8             	mov    %rcx,%r8
   12160:	48 89 d1             	mov    %rdx,%rcx
   12163:	48 8d 15 d1 a9 00 00 	lea    0xa9d1(%rip),%rdx        # 1cb3b <__PRETTY_FUNCTION__.0+0x34b>
   1216a:	be 32 00 00 00       	mov    $0x32,%esi
   1216f:	48 89 c7             	mov    %rax,%rdi
   12172:	b8 00 00 00 00       	mov    $0x0,%eax
   12177:	e8 34 02 ff ff       	call   23b0 <snprintf@plt>
   1217c:	b8 00 00 00 00       	mov    $0x0,%eax
   12181:	e8 0b 08 00 00       	call   12991 <get_reg_stack>
   12186:	48 89 c2             	mov    %rax,%rdx
   12189:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1218d:	48 89 c6             	mov    %rax,%rsi
   12190:	48 89 d7             	mov    %rdx,%rdi
   12193:	e8 60 0e 00 00       	call   12ff8 <free_reg>
   12198:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1219f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   121a3:	48 89 d6             	mov    %rdx,%rsi
   121a6:	48 89 c7             	mov    %rax,%rdi
   121a9:	e8 00 d3 ff ff       	call   f4ae <add_inst>
   121ae:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   121b5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   121bc:	48 8b 40 10          	mov    0x10(%rax),%rax
   121c0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   121c7:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   121cc:	74 0c                	je     121da <codegen_pass_arguments+0x271>
   121ce:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   121d2:	48 8b 40 10          	mov    0x10(%rax),%rax
   121d6:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   121da:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
   121de:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
   121e5:	00
   121e6:	0f 85 e4 fd ff ff    	jne    11fd0 <codegen_pass_arguments+0x67>
   121ec:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   121f3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   121f7:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   121fe:	00 00
   12200:	74 05                	je     12207 <codegen_pass_arguments+0x29e>
   12202:	e8 99 01 ff ff       	call   23a0 <__stack_chk_fail@plt>
   12207:	c9                   	leave
   12208:	c3                   	ret

0000000000012209 <codegen_goto_prev_scope>:
   12209:	f3 0f 1e fa          	endbr64
   1220d:	55                   	push   %rbp
   1220e:	48 89 e5             	mov    %rsp,%rbp
   12211:	48 83 ec 60          	sub    $0x60,%rsp
   12215:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   12219:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1221d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   12221:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12228:	00 00
   1222a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1222e:	31 c0                	xor    %eax,%eax
   12230:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12234:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12238:	4c 8d 05 5e a8 00 00 	lea    0xa85e(%rip),%r8        # 1ca9d <__PRETTY_FUNCTION__.0+0x2ad>
   1223f:	48 89 d1             	mov    %rdx,%rcx
   12242:	48 8d 15 00 a9 00 00 	lea    0xa900(%rip),%rdx        # 1cb49 <__PRETTY_FUNCTION__.0+0x359>
   12249:	be 32 00 00 00       	mov    $0x32,%esi
   1224e:	48 89 c7             	mov    %rax,%rdi
   12251:	b8 00 00 00 00       	mov    $0x0,%eax
   12256:	e8 55 01 ff ff       	call   23b0 <snprintf@plt>
   1225b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1225f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12263:	48 89 d6             	mov    %rdx,%rsi
   12266:	48 89 c7             	mov    %rax,%rdi
   12269:	e8 40 d2 ff ff       	call   f4ae <add_inst>
   1226e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12272:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12276:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1227a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   12281:	00 00
   12283:	74 05                	je     1228a <codegen_goto_prev_scope+0x81>
   12285:	e8 16 01 ff ff       	call   23a0 <__stack_chk_fail@plt>
   1228a:	c9                   	leave
   1228b:	c3                   	ret

000000000001228c <free_arg_regs>:
   1228c:	f3 0f 1e fa          	endbr64
   12290:	55                   	push   %rbp
   12291:	48 89 e5             	mov    %rsp,%rbp
   12294:	c7 05 62 04 01 00 00 	movl   $0x0,0x10462(%rip)        # 22700 <num_args_alloced>
   1229b:	00 00 00
   1229e:	90                   	nop
   1229f:	5d                   	pop    %rbp
   122a0:	c3                   	ret

00000000000122a1 <get_arg_reg64_num>:
   122a1:	f3 0f 1e fa          	endbr64
   122a5:	55                   	push   %rbp
   122a6:	48 89 e5             	mov    %rsp,%rbp
   122a9:	89 7d fc             	mov    %edi,-0x4(%rbp)
   122ac:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   122b0:	75 09                	jne    122bb <get_arg_reg64_num+0x1a>
   122b2:	48 8d 05 f7 a8 00 00 	lea    0xa8f7(%rip),%rax        # 1cbb0 <__PRETTY_FUNCTION__.0+0x20>
   122b9:	eb 32                	jmp    122ed <get_arg_reg64_num+0x4c>
   122bb:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   122bf:	75 09                	jne    122ca <get_arg_reg64_num+0x29>
   122c1:	48 8d 05 ed a8 00 00 	lea    0xa8ed(%rip),%rax        # 1cbb5 <__PRETTY_FUNCTION__.0+0x25>
   122c8:	eb 23                	jmp    122ed <get_arg_reg64_num+0x4c>
   122ca:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   122ce:	75 09                	jne    122d9 <get_arg_reg64_num+0x38>
   122d0:	48 8d 05 e3 a8 00 00 	lea    0xa8e3(%rip),%rax        # 1cbba <__PRETTY_FUNCTION__.0+0x2a>
   122d7:	eb 14                	jmp    122ed <get_arg_reg64_num+0x4c>
   122d9:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
   122dd:	75 09                	jne    122e8 <get_arg_reg64_num+0x47>
   122df:	48 8d 05 d9 a8 00 00 	lea    0xa8d9(%rip),%rax        # 1cbbf <__PRETTY_FUNCTION__.0+0x2f>
   122e6:	eb 05                	jmp    122ed <get_arg_reg64_num+0x4c>
   122e8:	b8 00 00 00 00       	mov    $0x0,%eax
   122ed:	5d                   	pop    %rbp
   122ee:	c3                   	ret

00000000000122ef <get_arg_reg32_num>:
   122ef:	f3 0f 1e fa          	endbr64
   122f3:	55                   	push   %rbp
   122f4:	48 89 e5             	mov    %rsp,%rbp
   122f7:	89 7d fc             	mov    %edi,-0x4(%rbp)
   122fa:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   122fe:	75 09                	jne    12309 <get_arg_reg32_num+0x1a>
   12300:	48 8d 05 bd a8 00 00 	lea    0xa8bd(%rip),%rax        # 1cbc4 <__PRETTY_FUNCTION__.0+0x34>
   12307:	eb 32                	jmp    1233b <get_arg_reg32_num+0x4c>
   12309:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1230d:	75 09                	jne    12318 <get_arg_reg32_num+0x29>
   1230f:	48 8d 05 b3 a8 00 00 	lea    0xa8b3(%rip),%rax        # 1cbc9 <__PRETTY_FUNCTION__.0+0x39>
   12316:	eb 23                	jmp    1233b <get_arg_reg32_num+0x4c>
   12318:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   1231c:	75 09                	jne    12327 <get_arg_reg32_num+0x38>
   1231e:	48 8d 05 a9 a8 00 00 	lea    0xa8a9(%rip),%rax        # 1cbce <__PRETTY_FUNCTION__.0+0x3e>
   12325:	eb 14                	jmp    1233b <get_arg_reg32_num+0x4c>
   12327:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
   1232b:	75 09                	jne    12336 <get_arg_reg32_num+0x47>
   1232d:	48 8d 05 9f a8 00 00 	lea    0xa89f(%rip),%rax        # 1cbd3 <__PRETTY_FUNCTION__.0+0x43>
   12334:	eb 05                	jmp    1233b <get_arg_reg32_num+0x4c>
   12336:	b8 00 00 00 00       	mov    $0x0,%eax
   1233b:	5d                   	pop    %rbp
   1233c:	c3                   	ret

000000000001233d <init_stackmng>:
   1233d:	f3 0f 1e fa          	endbr64
   12341:	55                   	push   %rbp
   12342:	48 89 e5             	mov    %rsp,%rbp
   12345:	53                   	push   %rbx
   12346:	48 83 ec 08          	sub    $0x8,%rsp
   1234a:	48 8b 05 c7 03 01 00 	mov    0x103c7(%rip),%rax        # 22718 <global_stackmng>
   12351:	48 85 c0             	test   %rax,%rax
   12354:	74 28                	je     1237e <init_stackmng+0x41>
   12356:	48 8d 05 1b ab 00 00 	lea    0xab1b(%rip),%rax        # 1ce78 <__PRETTY_FUNCTION__.19>
   1235d:	48 89 c1             	mov    %rax,%rcx
   12360:	ba 48 00 00 00       	mov    $0x48,%edx
   12365:	48 8d 05 6c a8 00 00 	lea    0xa86c(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   1236c:	48 89 c6             	mov    %rax,%rsi
   1236f:	48 8d 05 98 a8 00 00 	lea    0xa898(%rip),%rax        # 1cc0e <__PRETTY_FUNCTION__.0+0x7e>
   12376:	48 89 c7             	mov    %rax,%rdi
   12379:	e8 52 00 ff ff       	call   23d0 <__assert_fail@plt>
   1237e:	c7 05 78 03 01 00 00 	movl   $0x0,0x10378(%rip)        # 22700 <num_args_alloced>
   12385:	00 00 00
   12388:	bf 10 00 00 00       	mov    $0x10,%edi
   1238d:	e8 3e 01 ff ff       	call   24d0 <malloc@plt>
   12392:	48 89 05 7f 03 01 00 	mov    %rax,0x1037f(%rip)        # 22718 <global_stackmng>
   12399:	48 8b 05 78 03 01 00 	mov    0x10378(%rip),%rax        # 22718 <global_stackmng>
   123a0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   123a7:	48 8b 1d 6a 03 01 00 	mov    0x1036a(%rip),%rbx        # 22718 <global_stackmng>
   123ae:	b8 00 00 00 00       	mov    $0x0,%eax
   123b3:	e8 8f 08 00 00       	call   12c47 <init_reg_stack>
   123b8:	48 89 43 08          	mov    %rax,0x8(%rbx)
   123bc:	90                   	nop
   123bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   123c1:	c9                   	leave
   123c2:	c3                   	ret

00000000000123c3 <get_cur_scope>:
   123c3:	f3 0f 1e fa          	endbr64
   123c7:	55                   	push   %rbp
   123c8:	48 89 e5             	mov    %rsp,%rbp
   123cb:	48 8b 05 46 03 01 00 	mov    0x10346(%rip),%rax        # 22718 <global_stackmng>
   123d2:	48 8b 00             	mov    (%rax),%rax
   123d5:	5d                   	pop    %rbp
   123d6:	c3                   	ret

00000000000123d7 <get_full_stack_offset>:
   123d7:	f3 0f 1e fa          	endbr64
   123db:	55                   	push   %rbp
   123dc:	48 89 e5             	mov    %rsp,%rbp
   123df:	48 83 ec 20          	sub    $0x20,%rsp
   123e3:	48 8b 05 2e 03 01 00 	mov    0x1032e(%rip),%rax        # 22718 <global_stackmng>
   123ea:	48 85 c0             	test   %rax,%rax
   123ed:	75 28                	jne    12417 <get_full_stack_offset+0x40>
   123ef:	48 8d 05 9a aa 00 00 	lea    0xaa9a(%rip),%rax        # 1ce90 <__PRETTY_FUNCTION__.18>
   123f6:	48 89 c1             	mov    %rax,%rcx
   123f9:	ba 59 00 00 00       	mov    $0x59,%edx
   123fe:	48 8d 05 d3 a7 00 00 	lea    0xa7d3(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12405:	48 89 c6             	mov    %rax,%rsi
   12408:	48 8d 05 17 a8 00 00 	lea    0xa817(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   1240f:	48 89 c7             	mov    %rax,%rdi
   12412:	e8 b9 ff fe ff       	call   23d0 <__assert_fail@plt>
   12417:	48 8b 05 fa 02 01 00 	mov    0x102fa(%rip),%rax        # 22718 <global_stackmng>
   1241e:	48 8b 00             	mov    (%rax),%rax
   12421:	48 85 c0             	test   %rax,%rax
   12424:	75 28                	jne    1244e <get_full_stack_offset+0x77>
   12426:	48 8d 05 63 aa 00 00 	lea    0xaa63(%rip),%rax        # 1ce90 <__PRETTY_FUNCTION__.18>
   1242d:	48 89 c1             	mov    %rax,%rcx
   12430:	ba 5a 00 00 00       	mov    $0x5a,%edx
   12435:	48 8d 05 9c a7 00 00 	lea    0xa79c(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   1243c:	48 89 c6             	mov    %rax,%rsi
   1243f:	48 8d 05 fa a7 00 00 	lea    0xa7fa(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   12446:	48 89 c7             	mov    %rax,%rdi
   12449:	e8 82 ff fe ff       	call   23d0 <__assert_fail@plt>
   1244e:	48 8b 05 c3 02 01 00 	mov    0x102c3(%rip),%rax        # 22718 <global_stackmng>
   12455:	48 8b 00             	mov    (%rax),%rax
   12458:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1245c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12460:	8b 10                	mov    (%rax),%edx
   12462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12466:	8b 40 04             	mov    0x4(%rax),%eax
   12469:	01 c2                	add    %eax,%edx
   1246b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1246f:	8b 40 08             	mov    0x8(%rax),%eax
   12472:	01 d0                	add    %edx,%eax
   12474:	89 45 f0             	mov    %eax,-0x10(%rbp)
   12477:	8b 45 f0             	mov    -0x10(%rbp),%eax
   1247a:	8d 50 0f             	lea    0xf(%rax),%edx
   1247d:	85 c0                	test   %eax,%eax
   1247f:	0f 48 c2             	cmovs  %edx,%eax
   12482:	c1 f8 04             	sar    $0x4,%eax
   12485:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12488:	8b 55 f0             	mov    -0x10(%rbp),%edx
   1248b:	89 d0                	mov    %edx,%eax
   1248d:	c1 f8 1f             	sar    $0x1f,%eax
   12490:	c1 e8 1c             	shr    $0x1c,%eax
   12493:	01 c2                	add    %eax,%edx
   12495:	83 e2 0f             	and    $0xf,%edx
   12498:	29 c2                	sub    %eax,%edx
   1249a:	89 55 f4             	mov    %edx,-0xc(%rbp)
   1249d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   124a1:	7e 04                	jle    124a7 <get_full_stack_offset+0xd0>
   124a3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   124a7:	8b 45 ec             	mov    -0x14(%rbp),%eax
   124aa:	c1 e0 04             	shl    $0x4,%eax
   124ad:	c9                   	leave
   124ae:	c3                   	ret

00000000000124af <push_stackscope>:
   124af:	f3 0f 1e fa          	endbr64
   124b3:	55                   	push   %rbp
   124b4:	48 89 e5             	mov    %rsp,%rbp
   124b7:	48 83 ec 10          	sub    $0x10,%rsp
   124bb:	48 8b 05 56 02 01 00 	mov    0x10256(%rip),%rax        # 22718 <global_stackmng>
   124c2:	48 85 c0             	test   %rax,%rax
   124c5:	75 28                	jne    124ef <push_stackscope+0x40>
   124c7:	48 8d 05 e2 a9 00 00 	lea    0xa9e2(%rip),%rax        # 1ceb0 <__PRETTY_FUNCTION__.17>
   124ce:	48 89 c1             	mov    %rax,%rcx
   124d1:	ba 70 00 00 00       	mov    $0x70,%edx
   124d6:	48 8d 05 fb a6 00 00 	lea    0xa6fb(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   124dd:	48 89 c6             	mov    %rax,%rsi
   124e0:	48 8d 05 3f a7 00 00 	lea    0xa73f(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   124e7:	48 89 c7             	mov    %rax,%rdi
   124ea:	e8 e1 fe fe ff       	call   23d0 <__assert_fail@plt>
   124ef:	b8 00 00 00 00       	mov    $0x0,%eax
   124f4:	e8 af 0f 00 00       	call   134a8 <init_stackscope>
   124f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   124fd:	48 8b 05 14 02 01 00 	mov    0x10214(%rip),%rax        # 22718 <global_stackmng>
   12504:	48 8b 10             	mov    (%rax),%rdx
   12507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1250b:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1250f:	48 8b 05 02 02 01 00 	mov    0x10202(%rip),%rax        # 22718 <global_stackmng>
   12516:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1251a:	48 89 10             	mov    %rdx,(%rax)
   1251d:	90                   	nop
   1251e:	c9                   	leave
   1251f:	c3                   	ret

0000000000012520 <pop_stackscope>:
   12520:	f3 0f 1e fa          	endbr64
   12524:	55                   	push   %rbp
   12525:	48 89 e5             	mov    %rsp,%rbp
   12528:	53                   	push   %rbx
   12529:	48 83 ec 08          	sub    $0x8,%rsp
   1252d:	48 8b 05 e4 01 01 00 	mov    0x101e4(%rip),%rax        # 22718 <global_stackmng>
   12534:	48 85 c0             	test   %rax,%rax
   12537:	75 28                	jne    12561 <pop_stackscope+0x41>
   12539:	48 8d 05 80 a9 00 00 	lea    0xa980(%rip),%rax        # 1cec0 <__PRETTY_FUNCTION__.16>
   12540:	48 89 c1             	mov    %rax,%rcx
   12543:	ba 7b 00 00 00       	mov    $0x7b,%edx
   12548:	48 8d 05 89 a6 00 00 	lea    0xa689(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   1254f:	48 89 c6             	mov    %rax,%rsi
   12552:	48 8d 05 cd a6 00 00 	lea    0xa6cd(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   12559:	48 89 c7             	mov    %rax,%rdi
   1255c:	e8 6f fe fe ff       	call   23d0 <__assert_fail@plt>
   12561:	48 8b 05 b0 01 01 00 	mov    0x101b0(%rip),%rax        # 22718 <global_stackmng>
   12568:	48 8b 00             	mov    (%rax),%rax
   1256b:	48 85 c0             	test   %rax,%rax
   1256e:	75 28                	jne    12598 <pop_stackscope+0x78>
   12570:	48 8d 05 49 a9 00 00 	lea    0xa949(%rip),%rax        # 1cec0 <__PRETTY_FUNCTION__.16>
   12577:	48 89 c1             	mov    %rax,%rcx
   1257a:	ba 7c 00 00 00       	mov    $0x7c,%edx
   1257f:	48 8d 05 52 a6 00 00 	lea    0xa652(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12586:	48 89 c6             	mov    %rax,%rsi
   12589:	48 8d 05 b0 a6 00 00 	lea    0xa6b0(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   12590:	48 89 c7             	mov    %rax,%rdi
   12593:	e8 38 fe fe ff       	call   23d0 <__assert_fail@plt>
   12598:	48 8b 05 79 01 01 00 	mov    0x10179(%rip),%rax        # 22718 <global_stackmng>
   1259f:	48 8b 00             	mov    (%rax),%rax
   125a2:	48 8b 1d 6f 01 01 00 	mov    0x1016f(%rip),%rbx        # 22718 <global_stackmng>
   125a9:	48 89 c7             	mov    %rax,%rdi
   125ac:	e8 a2 10 00 00       	call   13653 <free_stackscope>
   125b1:	48 89 03             	mov    %rax,(%rbx)
   125b4:	90                   	nop
   125b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   125b9:	c9                   	leave
   125ba:	c3                   	ret

00000000000125bb <add_l_t>:
   125bb:	f3 0f 1e fa          	endbr64
   125bf:	55                   	push   %rbp
   125c0:	48 89 e5             	mov    %rsp,%rbp
   125c3:	48 83 ec 30          	sub    $0x30,%rsp
   125c7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   125cb:	48 8b 05 46 01 01 00 	mov    0x10146(%rip),%rax        # 22718 <global_stackmng>
   125d2:	48 85 c0             	test   %rax,%rax
   125d5:	75 28                	jne    125ff <add_l_t+0x44>
   125d7:	48 8d 05 f2 a8 00 00 	lea    0xa8f2(%rip),%rax        # 1ced0 <__PRETTY_FUNCTION__.15>
   125de:	48 89 c1             	mov    %rax,%rcx
   125e1:	ba 84 00 00 00       	mov    $0x84,%edx
   125e6:	48 8d 05 eb a5 00 00 	lea    0xa5eb(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   125ed:	48 89 c6             	mov    %rax,%rsi
   125f0:	48 8d 05 2f a6 00 00 	lea    0xa62f(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   125f7:	48 89 c7             	mov    %rax,%rdi
   125fa:	e8 d1 fd fe ff       	call   23d0 <__assert_fail@plt>
   125ff:	48 8b 05 12 01 01 00 	mov    0x10112(%rip),%rax        # 22718 <global_stackmng>
   12606:	48 8b 00             	mov    (%rax),%rax
   12609:	48 85 c0             	test   %rax,%rax
   1260c:	75 28                	jne    12636 <add_l_t+0x7b>
   1260e:	48 8d 05 bb a8 00 00 	lea    0xa8bb(%rip),%rax        # 1ced0 <__PRETTY_FUNCTION__.15>
   12615:	48 89 c1             	mov    %rax,%rcx
   12618:	ba 85 00 00 00       	mov    $0x85,%edx
   1261d:	48 8d 05 b4 a5 00 00 	lea    0xa5b4(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12624:	48 89 c6             	mov    %rax,%rsi
   12627:	48 8d 05 12 a6 00 00 	lea    0xa612(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   1262e:	48 89 c7             	mov    %rax,%rdi
   12631:	e8 9a fd fe ff       	call   23d0 <__assert_fail@plt>
   12636:	48 8b 05 db 00 01 00 	mov    0x100db(%rip),%rax        # 22718 <global_stackmng>
   1263d:	48 8b 00             	mov    (%rax),%rax
   12640:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12644:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12648:	8b 00                	mov    (%rax),%eax
   1264a:	8d 50 04             	lea    0x4(%rax),%edx
   1264d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12651:	89 10                	mov    %edx,(%rax)
   12653:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12657:	8b 50 08             	mov    0x8(%rax),%edx
   1265a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1265e:	8b 40 04             	mov    0x4(%rax),%eax
   12661:	01 c2                	add    %eax,%edx
   12663:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12667:	8b 00                	mov    (%rax),%eax
   12669:	01 d0                	add    %edx,%eax
   1266b:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1266e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   12672:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12675:	ba 04 00 00 00       	mov    $0x4,%edx
   1267a:	48 89 ce             	mov    %rcx,%rsi
   1267d:	89 c7                	mov    %eax,%edi
   1267f:	e8 f5 10 00 00       	call   13779 <init_stack_node>
   12684:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1268c:	48 8b 40 10          	mov    0x10(%rax),%rax
   12690:	48 85 c0             	test   %rax,%rax
   12693:	75 1b                	jne    126b0 <add_l_t+0xf5>
   12695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12699:	be 04 00 00 00       	mov    $0x4,%esi
   1269e:	48 89 c7             	mov    %rax,%rdi
   126a1:	e8 55 5b ff ff       	call   81fb <CreateListNode>
   126a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126aa:	48 89 42 10          	mov    %rax,0x10(%rdx)
   126ae:	eb 2f                	jmp    126df <add_l_t+0x124>
   126b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126b4:	be 04 00 00 00       	mov    $0x4,%esi
   126b9:	48 89 c7             	mov    %rax,%rdi
   126bc:	e8 3a 5b ff ff       	call   81fb <CreateListNode>
   126c1:	48 89 c2             	mov    %rax,%rdx
   126c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126c8:	48 8b 40 10          	mov    0x10(%rax),%rax
   126cc:	48 89 d6             	mov    %rdx,%rsi
   126cf:	48 89 c7             	mov    %rax,%rdi
   126d2:	e8 f0 5b ff ff       	call   82c7 <PushListNodeBack>
   126d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126db:	48 89 42 10          	mov    %rax,0x10(%rdx)
   126df:	48 8b 05 7a f9 00 00 	mov    0xf97a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   126e6:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   126e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   126ed:	48 8d 35 74 a5 00 00 	lea    0xa574(%rip),%rsi        # 1cc68 <__PRETTY_FUNCTION__.0+0xd8>
   126f4:	48 89 c7             	mov    %rax,%rdi
   126f7:	b8 00 00 00 00       	mov    $0x0,%eax
   126fc:	e8 6f fd fe ff       	call   2470 <fprintf@plt>
   12701:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12705:	c9                   	leave
   12706:	c3                   	ret

0000000000012707 <add_l_x>:
   12707:	f3 0f 1e fa          	endbr64
   1270b:	55                   	push   %rbp
   1270c:	48 89 e5             	mov    %rsp,%rbp
   1270f:	48 83 ec 30          	sub    $0x30,%rsp
   12713:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12717:	48 8b 05 fa ff 00 00 	mov    0xfffa(%rip),%rax        # 22718 <global_stackmng>
   1271e:	48 85 c0             	test   %rax,%rax
   12721:	75 28                	jne    1274b <add_l_x+0x44>
   12723:	48 8d 05 ae a7 00 00 	lea    0xa7ae(%rip),%rax        # 1ced8 <__PRETTY_FUNCTION__.14>
   1272a:	48 89 c1             	mov    %rax,%rcx
   1272d:	ba a8 00 00 00       	mov    $0xa8,%edx
   12732:	48 8d 05 9f a4 00 00 	lea    0xa49f(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12739:	48 89 c6             	mov    %rax,%rsi
   1273c:	48 8d 05 e3 a4 00 00 	lea    0xa4e3(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   12743:	48 89 c7             	mov    %rax,%rdi
   12746:	e8 85 fc fe ff       	call   23d0 <__assert_fail@plt>
   1274b:	48 8b 05 c6 ff 00 00 	mov    0xffc6(%rip),%rax        # 22718 <global_stackmng>
   12752:	48 8b 00             	mov    (%rax),%rax
   12755:	48 85 c0             	test   %rax,%rax
   12758:	75 28                	jne    12782 <add_l_x+0x7b>
   1275a:	48 8d 05 77 a7 00 00 	lea    0xa777(%rip),%rax        # 1ced8 <__PRETTY_FUNCTION__.14>
   12761:	48 89 c1             	mov    %rax,%rcx
   12764:	ba a9 00 00 00       	mov    $0xa9,%edx
   12769:	48 8d 05 68 a4 00 00 	lea    0xa468(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12770:	48 89 c6             	mov    %rax,%rsi
   12773:	48 8d 05 c6 a4 00 00 	lea    0xa4c6(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   1277a:	48 89 c7             	mov    %rax,%rdi
   1277d:	e8 4e fc fe ff       	call   23d0 <__assert_fail@plt>
   12782:	48 8b 05 8f ff 00 00 	mov    0xff8f(%rip),%rax        # 22718 <global_stackmng>
   12789:	48 8b 00             	mov    (%rax),%rax
   1278c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12790:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12794:	8b 40 04             	mov    0x4(%rax),%eax
   12797:	8d 50 04             	lea    0x4(%rax),%edx
   1279a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1279e:	89 50 04             	mov    %edx,0x4(%rax)
   127a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127a5:	8b 50 08             	mov    0x8(%rax),%edx
   127a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127ac:	8b 40 04             	mov    0x4(%rax),%eax
   127af:	01 d0                	add    %edx,%eax
   127b1:	89 45 ec             	mov    %eax,-0x14(%rbp)
   127b4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   127b8:	8b 45 ec             	mov    -0x14(%rbp),%eax
   127bb:	ba 04 00 00 00       	mov    $0x4,%edx
   127c0:	48 89 ce             	mov    %rcx,%rsi
   127c3:	89 c7                	mov    %eax,%edi
   127c5:	e8 af 0f 00 00       	call   13779 <init_stack_node>
   127ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   127ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127d2:	48 8b 40 18          	mov    0x18(%rax),%rax
   127d6:	48 85 c0             	test   %rax,%rax
   127d9:	75 1b                	jne    127f6 <add_l_x+0xef>
   127db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127df:	be 04 00 00 00       	mov    $0x4,%esi
   127e4:	48 89 c7             	mov    %rax,%rdi
   127e7:	e8 0f 5a ff ff       	call   81fb <CreateListNode>
   127ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127f0:	48 89 42 18          	mov    %rax,0x18(%rdx)
   127f4:	eb 2f                	jmp    12825 <add_l_x+0x11e>
   127f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127fa:	be 04 00 00 00       	mov    $0x4,%esi
   127ff:	48 89 c7             	mov    %rax,%rdi
   12802:	e8 f4 59 ff ff       	call   81fb <CreateListNode>
   12807:	48 89 c2             	mov    %rax,%rdx
   1280a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1280e:	48 8b 40 18          	mov    0x18(%rax),%rax
   12812:	48 89 d6             	mov    %rdx,%rsi
   12815:	48 89 c7             	mov    %rax,%rdi
   12818:	e8 aa 5a ff ff       	call   82c7 <PushListNodeBack>
   1281d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12821:	48 89 42 18          	mov    %rax,0x18(%rdx)
   12825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12829:	8b 08                	mov    (%rax),%ecx
   1282b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1282f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12833:	48 8b 05 26 f8 00 00 	mov    0xf826(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1283a:	48 8d 35 47 a4 00 00 	lea    0xa447(%rip),%rsi        # 1cc88 <__PRETTY_FUNCTION__.0+0xf8>
   12841:	48 89 c7             	mov    %rax,%rdi
   12844:	b8 00 00 00 00       	mov    $0x0,%eax
   12849:	e8 22 fc fe ff       	call   2470 <fprintf@plt>
   1284e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12852:	c9                   	leave
   12853:	c3                   	ret

0000000000012854 <add_l_z>:
   12854:	f3 0f 1e fa          	endbr64
   12858:	55                   	push   %rbp
   12859:	48 89 e5             	mov    %rsp,%rbp
   1285c:	48 83 ec 30          	sub    $0x30,%rsp
   12860:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12864:	48 8b 05 ad fe 00 00 	mov    0xfead(%rip),%rax        # 22718 <global_stackmng>
   1286b:	48 85 c0             	test   %rax,%rax
   1286e:	75 28                	jne    12898 <add_l_z+0x44>
   12870:	48 8d 05 69 a6 00 00 	lea    0xa669(%rip),%rax        # 1cee0 <__PRETTY_FUNCTION__.13>
   12877:	48 89 c1             	mov    %rax,%rcx
   1287a:	ba cc 00 00 00       	mov    $0xcc,%edx
   1287f:	48 8d 05 52 a3 00 00 	lea    0xa352(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12886:	48 89 c6             	mov    %rax,%rsi
   12889:	48 8d 05 96 a3 00 00 	lea    0xa396(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   12890:	48 89 c7             	mov    %rax,%rdi
   12893:	e8 38 fb fe ff       	call   23d0 <__assert_fail@plt>
   12898:	48 8b 05 79 fe 00 00 	mov    0xfe79(%rip),%rax        # 22718 <global_stackmng>
   1289f:	48 8b 00             	mov    (%rax),%rax
   128a2:	48 85 c0             	test   %rax,%rax
   128a5:	75 28                	jne    128cf <add_l_z+0x7b>
   128a7:	48 8d 05 32 a6 00 00 	lea    0xa632(%rip),%rax        # 1cee0 <__PRETTY_FUNCTION__.13>
   128ae:	48 89 c1             	mov    %rax,%rcx
   128b1:	ba cd 00 00 00       	mov    $0xcd,%edx
   128b6:	48 8d 05 1b a3 00 00 	lea    0xa31b(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   128bd:	48 89 c6             	mov    %rax,%rsi
   128c0:	48 8d 05 79 a3 00 00 	lea    0xa379(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   128c7:	48 89 c7             	mov    %rax,%rdi
   128ca:	e8 01 fb fe ff       	call   23d0 <__assert_fail@plt>
   128cf:	48 8b 05 42 fe 00 00 	mov    0xfe42(%rip),%rax        # 22718 <global_stackmng>
   128d6:	48 8b 00             	mov    (%rax),%rax
   128d9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   128dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128e1:	8b 40 08             	mov    0x8(%rax),%eax
   128e4:	8d 50 04             	lea    0x4(%rax),%edx
   128e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128eb:	89 50 08             	mov    %edx,0x8(%rax)
   128ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128f2:	8b 40 08             	mov    0x8(%rax),%eax
   128f5:	89 45 ec             	mov    %eax,-0x14(%rbp)
   128f8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   128fc:	8b 45 ec             	mov    -0x14(%rbp),%eax
   128ff:	ba 04 00 00 00       	mov    $0x4,%edx
   12904:	48 89 ce             	mov    %rcx,%rsi
   12907:	89 c7                	mov    %eax,%edi
   12909:	e8 6b 0e 00 00       	call   13779 <init_stack_node>
   1290e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12916:	48 8b 40 20          	mov    0x20(%rax),%rax
   1291a:	48 85 c0             	test   %rax,%rax
   1291d:	75 1b                	jne    1293a <add_l_z+0xe6>
   1291f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12923:	be 04 00 00 00       	mov    $0x4,%esi
   12928:	48 89 c7             	mov    %rax,%rdi
   1292b:	e8 cb 58 ff ff       	call   81fb <CreateListNode>
   12930:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12934:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12938:	eb 2f                	jmp    12969 <add_l_z+0x115>
   1293a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1293e:	be 04 00 00 00       	mov    $0x4,%esi
   12943:	48 89 c7             	mov    %rax,%rdi
   12946:	e8 b0 58 ff ff       	call   81fb <CreateListNode>
   1294b:	48 89 c2             	mov    %rax,%rdx
   1294e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12952:	48 8b 40 20          	mov    0x20(%rax),%rax
   12956:	48 89 d6             	mov    %rdx,%rsi
   12959:	48 89 c7             	mov    %rax,%rdi
   1295c:	e8 66 59 ff ff       	call   82c7 <PushListNodeBack>
   12961:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12965:	48 89 42 20          	mov    %rax,0x20(%rdx)
   12969:	48 8b 05 f0 f6 00 00 	mov    0xf6f0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12970:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   12973:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12977:	48 8d 35 2a a3 00 00 	lea    0xa32a(%rip),%rsi        # 1cca8 <__PRETTY_FUNCTION__.0+0x118>
   1297e:	48 89 c7             	mov    %rax,%rdi
   12981:	b8 00 00 00 00       	mov    $0x0,%eax
   12986:	e8 e5 fa fe ff       	call   2470 <fprintf@plt>
   1298b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1298f:	c9                   	leave
   12990:	c3                   	ret

0000000000012991 <get_reg_stack>:
   12991:	f3 0f 1e fa          	endbr64
   12995:	55                   	push   %rbp
   12996:	48 89 e5             	mov    %rsp,%rbp
   12999:	48 8b 05 78 fd 00 00 	mov    0xfd78(%rip),%rax        # 22718 <global_stackmng>
   129a0:	48 85 c0             	test   %rax,%rax
   129a3:	75 28                	jne    129cd <get_reg_stack+0x3c>
   129a5:	48 8d 05 3c a5 00 00 	lea    0xa53c(%rip),%rax        # 1cee8 <__PRETTY_FUNCTION__.12>
   129ac:	48 89 c1             	mov    %rax,%rcx
   129af:	ba ef 00 00 00       	mov    $0xef,%edx
   129b4:	48 8d 05 1d a2 00 00 	lea    0xa21d(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   129bb:	48 89 c6             	mov    %rax,%rsi
   129be:	48 8d 05 61 a2 00 00 	lea    0xa261(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   129c5:	48 89 c7             	mov    %rax,%rdi
   129c8:	e8 03 fa fe ff       	call   23d0 <__assert_fail@plt>
   129cd:	48 8b 05 44 fd 00 00 	mov    0xfd44(%rip),%rax        # 22718 <global_stackmng>
   129d4:	48 8b 40 08          	mov    0x8(%rax),%rax
   129d8:	48 85 c0             	test   %rax,%rax
   129db:	75 28                	jne    12a05 <get_reg_stack+0x74>
   129dd:	48 8d 05 04 a5 00 00 	lea    0xa504(%rip),%rax        # 1cee8 <__PRETTY_FUNCTION__.12>
   129e4:	48 89 c1             	mov    %rax,%rcx
   129e7:	ba f0 00 00 00       	mov    $0xf0,%edx
   129ec:	48 8d 05 e5 a1 00 00 	lea    0xa1e5(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   129f3:	48 89 c6             	mov    %rax,%rsi
   129f6:	48 8d 05 cb a2 00 00 	lea    0xa2cb(%rip),%rax        # 1ccc8 <__PRETTY_FUNCTION__.0+0x138>
   129fd:	48 89 c7             	mov    %rax,%rdi
   12a00:	e8 cb f9 fe ff       	call   23d0 <__assert_fail@plt>
   12a05:	48 8b 05 0c fd 00 00 	mov    0xfd0c(%rip),%rax        # 22718 <global_stackmng>
   12a0c:	48 8b 40 08          	mov    0x8(%rax),%rax
   12a10:	5d                   	pop    %rbp
   12a11:	c3                   	ret

0000000000012a12 <find_in_temp>:
   12a12:	f3 0f 1e fa          	endbr64
   12a16:	55                   	push   %rbp
   12a17:	48 89 e5             	mov    %rsp,%rbp
   12a1a:	48 83 ec 20          	sub    $0x20,%rsp
   12a1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a22:	48 8b 05 ef fc 00 00 	mov    0xfcef(%rip),%rax        # 22718 <global_stackmng>
   12a29:	48 85 c0             	test   %rax,%rax
   12a2c:	75 28                	jne    12a56 <find_in_temp+0x44>
   12a2e:	48 8d 05 c3 a4 00 00 	lea    0xa4c3(%rip),%rax        # 1cef8 <__PRETTY_FUNCTION__.11>
   12a35:	48 89 c1             	mov    %rax,%rcx
   12a38:	ba f9 00 00 00       	mov    $0xf9,%edx
   12a3d:	48 8d 05 94 a1 00 00 	lea    0xa194(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12a44:	48 89 c6             	mov    %rax,%rsi
   12a47:	48 8d 05 d8 a1 00 00 	lea    0xa1d8(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   12a4e:	48 89 c7             	mov    %rax,%rdi
   12a51:	e8 7a f9 fe ff       	call   23d0 <__assert_fail@plt>
   12a56:	48 8b 05 bb fc 00 00 	mov    0xfcbb(%rip),%rax        # 22718 <global_stackmng>
   12a5d:	48 8b 00             	mov    (%rax),%rax
   12a60:	48 85 c0             	test   %rax,%rax
   12a63:	75 28                	jne    12a8d <find_in_temp+0x7b>
   12a65:	48 8d 05 8c a4 00 00 	lea    0xa48c(%rip),%rax        # 1cef8 <__PRETTY_FUNCTION__.11>
   12a6c:	48 89 c1             	mov    %rax,%rcx
   12a6f:	ba fa 00 00 00       	mov    $0xfa,%edx
   12a74:	48 8d 05 5d a1 00 00 	lea    0xa15d(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12a7b:	48 89 c6             	mov    %rax,%rsi
   12a7e:	48 8d 05 bb a1 00 00 	lea    0xa1bb(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   12a85:	48 89 c7             	mov    %rax,%rdi
   12a88:	e8 43 f9 fe ff       	call   23d0 <__assert_fail@plt>
   12a8d:	48 8b 05 84 fc 00 00 	mov    0xfc84(%rip),%rax        # 22718 <global_stackmng>
   12a94:	48 8b 00             	mov    (%rax),%rax
   12a97:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12a9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12aa3:	48 89 d6             	mov    %rdx,%rsi
   12aa6:	48 89 c7             	mov    %rax,%rdi
   12aa9:	e8 6a 0a 00 00       	call   13518 <stackscope_find_t>
   12aae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ab6:	c9                   	leave
   12ab7:	c3                   	ret

0000000000012ab8 <find_label>:
   12ab8:	f3 0f 1e fa          	endbr64
   12abc:	55                   	push   %rbp
   12abd:	48 89 e5             	mov    %rsp,%rbp
   12ac0:	48 83 ec 20          	sub    $0x20,%rsp
   12ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ac8:	48 8b 05 49 fc 00 00 	mov    0xfc49(%rip),%rax        # 22718 <global_stackmng>
   12acf:	48 85 c0             	test   %rax,%rax
   12ad2:	75 28                	jne    12afc <find_label+0x44>
   12ad4:	48 8d 05 2d a4 00 00 	lea    0xa42d(%rip),%rax        # 1cf08 <__PRETTY_FUNCTION__.10>
   12adb:	48 89 c1             	mov    %rax,%rcx
   12ade:	ba 08 01 00 00       	mov    $0x108,%edx
   12ae3:	48 8d 05 ee a0 00 00 	lea    0xa0ee(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12aea:	48 89 c6             	mov    %rax,%rsi
   12aed:	48 8d 05 32 a1 00 00 	lea    0xa132(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   12af4:	48 89 c7             	mov    %rax,%rdi
   12af7:	e8 d4 f8 fe ff       	call   23d0 <__assert_fail@plt>
   12afc:	48 8b 05 15 fc 00 00 	mov    0xfc15(%rip),%rax        # 22718 <global_stackmng>
   12b03:	48 8b 00             	mov    (%rax),%rax
   12b06:	48 85 c0             	test   %rax,%rax
   12b09:	75 28                	jne    12b33 <find_label+0x7b>
   12b0b:	48 8d 05 f6 a3 00 00 	lea    0xa3f6(%rip),%rax        # 1cf08 <__PRETTY_FUNCTION__.10>
   12b12:	48 89 c1             	mov    %rax,%rcx
   12b15:	ba 09 01 00 00       	mov    $0x109,%edx
   12b1a:	48 8d 05 b7 a0 00 00 	lea    0xa0b7(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12b21:	48 89 c6             	mov    %rax,%rsi
   12b24:	48 8d 05 15 a1 00 00 	lea    0xa115(%rip),%rax        # 1cc40 <__PRETTY_FUNCTION__.0+0xb0>
   12b2b:	48 89 c7             	mov    %rax,%rdi
   12b2e:	e8 9d f8 fe ff       	call   23d0 <__assert_fail@plt>
   12b33:	48 8b 05 de fb 00 00 	mov    0xfbde(%rip),%rax        # 22718 <global_stackmng>
   12b3a:	48 8b 00             	mov    (%rax),%rax
   12b3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12b41:	eb 78                	jmp    12bbb <find_label+0x103>
   12b43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b4b:	48 89 d6             	mov    %rdx,%rsi
   12b4e:	48 89 c7             	mov    %rax,%rdi
   12b51:	e8 94 0a 00 00       	call   135ea <stackscope_find_z>
   12b56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12b5a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12b5f:	74 06                	je     12b67 <find_label+0xaf>
   12b61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b65:	eb 60                	jmp    12bc7 <find_label+0x10f>
   12b67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b6f:	48 89 d6             	mov    %rdx,%rsi
   12b72:	48 89 c7             	mov    %rax,%rdi
   12b75:	e8 07 0a 00 00       	call   13581 <stackscope_find_x>
   12b7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12b7e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12b83:	74 06                	je     12b8b <find_label+0xd3>
   12b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b89:	eb 3c                	jmp    12bc7 <find_label+0x10f>
   12b8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b93:	48 89 d6             	mov    %rdx,%rsi
   12b96:	48 89 c7             	mov    %rax,%rdi
   12b99:	e8 7a 09 00 00       	call   13518 <stackscope_find_t>
   12b9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12ba2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12ba7:	74 06                	je     12baf <find_label+0xf7>
   12ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bad:	eb 18                	jmp    12bc7 <find_label+0x10f>
   12baf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12bb3:	48 8b 40 28          	mov    0x28(%rax),%rax
   12bb7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12bbb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12bc0:	75 81                	jne    12b43 <find_label+0x8b>
   12bc2:	b8 00 00 00 00       	mov    $0x0,%eax
   12bc7:	c9                   	leave
   12bc8:	c3                   	ret

0000000000012bc9 <free_stackmng>:
   12bc9:	f3 0f 1e fa          	endbr64
   12bcd:	55                   	push   %rbp
   12bce:	48 89 e5             	mov    %rsp,%rbp
   12bd1:	48 8b 05 40 fb 00 00 	mov    0xfb40(%rip),%rax        # 22718 <global_stackmng>
   12bd8:	48 85 c0             	test   %rax,%rax
   12bdb:	75 28                	jne    12c05 <free_stackmng+0x3c>
   12bdd:	48 8d 05 34 a3 00 00 	lea    0xa334(%rip),%rax        # 1cf18 <__PRETTY_FUNCTION__.9>
   12be4:	48 89 c1             	mov    %rax,%rcx
   12be7:	ba 2c 01 00 00       	mov    $0x12c,%edx
   12bec:	48 8d 05 e5 9f 00 00 	lea    0x9fe5(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12bf3:	48 89 c6             	mov    %rax,%rsi
   12bf6:	48 8d 05 29 a0 00 00 	lea    0xa029(%rip),%rax        # 1cc26 <__PRETTY_FUNCTION__.0+0x96>
   12bfd:	48 89 c7             	mov    %rax,%rdi
   12c00:	e8 cb f7 fe ff       	call   23d0 <__assert_fail@plt>
   12c05:	48 8b 05 0c fb 00 00 	mov    0xfb0c(%rip),%rax        # 22718 <global_stackmng>
   12c0c:	48 8b 00             	mov    (%rax),%rax
   12c0f:	48 89 c7             	mov    %rax,%rdi
   12c12:	e8 a9 0a 00 00       	call   136c0 <free_all_stackscopes>
   12c17:	48 8b 05 fa fa 00 00 	mov    0xfafa(%rip),%rax        # 22718 <global_stackmng>
   12c1e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12c22:	48 89 c7             	mov    %rax,%rdi
   12c25:	e8 0f 07 00 00       	call   13339 <free_reg_stack>
   12c2a:	48 8b 05 e7 fa 00 00 	mov    0xfae7(%rip),%rax        # 22718 <global_stackmng>
   12c31:	48 89 c7             	mov    %rax,%rdi
   12c34:	e8 b7 f6 fe ff       	call   22f0 <free@plt>
   12c39:	48 c7 05 d4 fa 00 00 	movq   $0x0,0xfad4(%rip)        # 22718 <global_stackmng>
   12c40:	00 00 00 00
   12c44:	90                   	nop
   12c45:	5d                   	pop    %rbp
   12c46:	c3                   	ret

0000000000012c47 <init_reg_stack>:
   12c47:	f3 0f 1e fa          	endbr64
   12c4b:	55                   	push   %rbp
   12c4c:	48 89 e5             	mov    %rsp,%rbp
   12c4f:	48 83 ec 20          	sub    $0x20,%rsp
   12c53:	bf 18 00 00 00       	mov    $0x18,%edi
   12c58:	e8 73 f8 fe ff       	call   24d0 <malloc@plt>
   12c5d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12c61:	bf 10 00 00 00       	mov    $0x10,%edi
   12c66:	e8 65 f8 fe ff       	call   24d0 <malloc@plt>
   12c6b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12c6f:	48 8d 05 75 a0 00 00 	lea    0xa075(%rip),%rax        # 1cceb <__PRETTY_FUNCTION__.0+0x15b>
   12c76:	48 89 c7             	mov    %rax,%rdi
   12c79:	e8 e2 f8 fe ff       	call   2560 <strdup@plt>
   12c7e:	48 89 c2             	mov    %rax,%rdx
   12c81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c85:	48 89 10             	mov    %rdx,(%rax)
   12c88:	48 8d 05 61 a0 00 00 	lea    0xa061(%rip),%rax        # 1ccf0 <__PRETTY_FUNCTION__.0+0x160>
   12c8f:	48 89 c7             	mov    %rax,%rdi
   12c92:	e8 c9 f8 fe ff       	call   2560 <strdup@plt>
   12c97:	48 89 c2             	mov    %rax,%rdx
   12c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c9e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12ca2:	bf 10 00 00 00       	mov    $0x10,%edi
   12ca7:	e8 24 f8 fe ff       	call   24d0 <malloc@plt>
   12cac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12cb0:	48 8d 05 f9 9e 00 00 	lea    0x9ef9(%rip),%rax        # 1cbb0 <__PRETTY_FUNCTION__.0+0x20>
   12cb7:	48 89 c7             	mov    %rax,%rdi
   12cba:	e8 a1 f8 fe ff       	call   2560 <strdup@plt>
   12cbf:	48 89 c2             	mov    %rax,%rdx
   12cc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cc6:	48 89 10             	mov    %rdx,(%rax)
   12cc9:	48 8d 05 f4 9e 00 00 	lea    0x9ef4(%rip),%rax        # 1cbc4 <__PRETTY_FUNCTION__.0+0x34>
   12cd0:	48 89 c7             	mov    %rax,%rdi
   12cd3:	e8 88 f8 fe ff       	call   2560 <strdup@plt>
   12cd8:	48 89 c2             	mov    %rax,%rdx
   12cdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12ce3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ce7:	be 04 00 00 00       	mov    $0x4,%esi
   12cec:	48 89 c7             	mov    %rax,%rdi
   12cef:	e8 07 55 ff ff       	call   81fb <CreateListNode>
   12cf4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12cf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cfc:	be 04 00 00 00       	mov    $0x4,%esi
   12d01:	48 89 c7             	mov    %rax,%rdi
   12d04:	e8 f2 54 ff ff       	call   81fb <CreateListNode>
   12d09:	48 89 c2             	mov    %rax,%rdx
   12d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d10:	48 89 d6             	mov    %rdx,%rsi
   12d13:	48 89 c7             	mov    %rax,%rdi
   12d16:	e8 ac 55 ff ff       	call   82c7 <PushListNodeBack>
   12d1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12d1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d23:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12d2a:	00
   12d2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d33:	48 89 10             	mov    %rdx,(%rax)
   12d36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d3a:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%rax)
   12d41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d45:	c9                   	leave
   12d46:	c3                   	ret

0000000000012d47 <get_register_64bit>:
   12d47:	f3 0f 1e fa          	endbr64
   12d4b:	55                   	push   %rbp
   12d4c:	48 89 e5             	mov    %rsp,%rbp
   12d4f:	48 83 ec 40          	sub    $0x40,%rsp
   12d53:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12d57:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12d5b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12d5f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12d64:	75 28                	jne    12d8e <get_register_64bit+0x47>
   12d66:	48 8d 05 c3 a1 00 00 	lea    0xa1c3(%rip),%rax        # 1cf30 <__PRETTY_FUNCTION__.8>
   12d6d:	48 89 c1             	mov    %rax,%rcx
   12d70:	ba 68 01 00 00       	mov    $0x168,%edx
   12d75:	48 8d 05 5c 9e 00 00 	lea    0x9e5c(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12d7c:	48 89 c6             	mov    %rax,%rsi
   12d7f:	48 8d 05 6f 9f 00 00 	lea    0x9f6f(%rip),%rax        # 1ccf5 <__PRETTY_FUNCTION__.0+0x165>
   12d86:	48 89 c7             	mov    %rax,%rdi
   12d89:	e8 42 f6 fe ff       	call   23d0 <__assert_fail@plt>
   12d8e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12d93:	75 28                	jne    12dbd <get_register_64bit+0x76>
   12d95:	48 8d 05 94 a1 00 00 	lea    0xa194(%rip),%rax        # 1cf30 <__PRETTY_FUNCTION__.8>
   12d9c:	48 89 c1             	mov    %rax,%rcx
   12d9f:	ba 69 01 00 00       	mov    $0x169,%edx
   12da4:	48 8d 05 2d 9e 00 00 	lea    0x9e2d(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12dab:	48 89 c6             	mov    %rax,%rsi
   12dae:	48 8d 05 51 9f 00 00 	lea    0x9f51(%rip),%rax        # 1cd06 <__PRETTY_FUNCTION__.0+0x176>
   12db5:	48 89 c7             	mov    %rax,%rdi
   12db8:	e8 13 f6 fe ff       	call   23d0 <__assert_fail@plt>
   12dbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12dc1:	48 8b 00             	mov    (%rax),%rax
   12dc4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12dc8:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12dcf:	00
   12dd0:	e9 90 00 00 00       	jmp    12e65 <get_register_64bit+0x11e>
   12dd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12dd9:	48 8b 40 08          	mov    0x8(%rax),%rax
   12ddd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12de5:	48 8b 00             	mov    (%rax),%rax
   12de8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12dec:	48 89 d6             	mov    %rdx,%rsi
   12def:	48 89 c7             	mov    %rax,%rdi
   12df2:	e8 59 f6 fe ff       	call   2450 <strcmp@plt>
   12df7:	85 c0                	test   %eax,%eax
   12df9:	75 56                	jne    12e51 <get_register_64bit+0x10a>
   12dfb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12e00:	75 11                	jne    12e13 <get_register_64bit+0xcc>
   12e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e06:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e0e:	48 89 10             	mov    %rdx,(%rax)
   12e11:	eb 10                	jmp    12e23 <get_register_64bit+0xdc>
   12e13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e17:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e1f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12e23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e27:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12e2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e2f:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12e33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12e3b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12e3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12e43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e47:	48 89 10             	mov    %rdx,(%rax)
   12e4a:	b8 00 00 00 00       	mov    $0x0,%eax
   12e4f:	eb 4c                	jmp    12e9d <get_register_64bit+0x156>
   12e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e55:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12e59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e5d:	48 8b 40 10          	mov    0x10(%rax),%rax
   12e61:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12e65:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12e6a:	0f 85 65 ff ff ff    	jne    12dd5 <get_register_64bit+0x8e>
   12e70:	48 8b 05 e9 f1 00 00 	mov    0xf1e9(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12e77:	48 89 c1             	mov    %rax,%rcx
   12e7a:	ba 40 00 00 00       	mov    $0x40,%edx
   12e7f:	be 01 00 00 00       	mov    $0x1,%esi
   12e84:	48 8d 05 8d 9e 00 00 	lea    0x9e8d(%rip),%rax        # 1cd18 <__PRETTY_FUNCTION__.0+0x188>
   12e8b:	48 89 c7             	mov    %rax,%rdi
   12e8e:	e8 bd f6 fe ff       	call   2550 <fwrite@plt>
   12e93:	bf 01 00 00 00       	mov    $0x1,%edi
   12e98:	e8 a3 f6 fe ff       	call   2540 <exit@plt>
   12e9d:	c9                   	leave
   12e9e:	c3                   	ret

0000000000012e9f <get_register_32bit>:
   12e9f:	f3 0f 1e fa          	endbr64
   12ea3:	55                   	push   %rbp
   12ea4:	48 89 e5             	mov    %rsp,%rbp
   12ea7:	48 83 ec 40          	sub    $0x40,%rsp
   12eab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12eaf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12eb3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12eb7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   12ebc:	75 28                	jne    12ee6 <get_register_32bit+0x47>
   12ebe:	48 8d 05 8b a0 00 00 	lea    0xa08b(%rip),%rax        # 1cf50 <__PRETTY_FUNCTION__.7>
   12ec5:	48 89 c1             	mov    %rax,%rcx
   12ec8:	ba 8e 01 00 00       	mov    $0x18e,%edx
   12ecd:	48 8d 05 04 9d 00 00 	lea    0x9d04(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12ed4:	48 89 c6             	mov    %rax,%rsi
   12ed7:	48 8d 05 17 9e 00 00 	lea    0x9e17(%rip),%rax        # 1ccf5 <__PRETTY_FUNCTION__.0+0x165>
   12ede:	48 89 c7             	mov    %rax,%rdi
   12ee1:	e8 ea f4 fe ff       	call   23d0 <__assert_fail@plt>
   12ee6:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12eeb:	75 28                	jne    12f15 <get_register_32bit+0x76>
   12eed:	48 8d 05 5c a0 00 00 	lea    0xa05c(%rip),%rax        # 1cf50 <__PRETTY_FUNCTION__.7>
   12ef4:	48 89 c1             	mov    %rax,%rcx
   12ef7:	ba 8f 01 00 00       	mov    $0x18f,%edx
   12efc:	48 8d 05 d5 9c 00 00 	lea    0x9cd5(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   12f03:	48 89 c6             	mov    %rax,%rsi
   12f06:	48 8d 05 4c 9e 00 00 	lea    0x9e4c(%rip),%rax        # 1cd59 <__PRETTY_FUNCTION__.0+0x1c9>
   12f0d:	48 89 c7             	mov    %rax,%rdi
   12f10:	e8 bb f4 fe ff       	call   23d0 <__assert_fail@plt>
   12f15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f19:	48 8b 00             	mov    (%rax),%rax
   12f1c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12f20:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   12f27:	00
   12f28:	e9 91 00 00 00       	jmp    12fbe <get_register_32bit+0x11f>
   12f2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f31:	48 8b 40 08          	mov    0x8(%rax),%rax
   12f35:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f3d:	48 8b 40 08          	mov    0x8(%rax),%rax
   12f41:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12f45:	48 89 d6             	mov    %rdx,%rsi
   12f48:	48 89 c7             	mov    %rax,%rdi
   12f4b:	e8 00 f5 fe ff       	call   2450 <strcmp@plt>
   12f50:	85 c0                	test   %eax,%eax
   12f52:	75 56                	jne    12faa <get_register_32bit+0x10b>
   12f54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12f59:	75 11                	jne    12f6c <get_register_32bit+0xcd>
   12f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f5f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f67:	48 89 10             	mov    %rdx,(%rax)
   12f6a:	eb 10                	jmp    12f7c <get_register_32bit+0xdd>
   12f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f70:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f78:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12f7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f80:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12f84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f88:	48 89 50 10          	mov    %rdx,0x10(%rax)
   12f8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12f94:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12f98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f9c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12fa0:	48 89 10             	mov    %rdx,(%rax)
   12fa3:	b8 00 00 00 00       	mov    $0x0,%eax
   12fa8:	eb 4c                	jmp    12ff6 <get_register_32bit+0x157>
   12faa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fb6:	48 8b 40 10          	mov    0x10(%rax),%rax
   12fba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12fbe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12fc3:	0f 85 64 ff ff ff    	jne    12f2d <get_register_32bit+0x8e>
   12fc9:	48 8b 05 90 f0 00 00 	mov    0xf090(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   12fd0:	48 89 c1             	mov    %rax,%rcx
   12fd3:	ba 40 00 00 00       	mov    $0x40,%edx
   12fd8:	be 01 00 00 00       	mov    $0x1,%esi
   12fdd:	48 8d 05 34 9d 00 00 	lea    0x9d34(%rip),%rax        # 1cd18 <__PRETTY_FUNCTION__.0+0x188>
   12fe4:	48 89 c7             	mov    %rax,%rdi
   12fe7:	e8 64 f5 fe ff       	call   2550 <fwrite@plt>
   12fec:	bf 01 00 00 00       	mov    $0x1,%edi
   12ff1:	e8 4a f5 fe ff       	call   2540 <exit@plt>
   12ff6:	c9                   	leave
   12ff7:	c3                   	ret

0000000000012ff8 <free_reg>:
   12ff8:	f3 0f 1e fa          	endbr64
   12ffc:	55                   	push   %rbp
   12ffd:	48 89 e5             	mov    %rsp,%rbp
   13000:	48 83 ec 20          	sub    $0x20,%rsp
   13004:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13008:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1300c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13011:	75 28                	jne    1303b <free_reg+0x43>
   13013:	48 8d 05 4e 9f 00 00 	lea    0x9f4e(%rip),%rax        # 1cf68 <__PRETTY_FUNCTION__.6>
   1301a:	48 89 c1             	mov    %rax,%rcx
   1301d:	ba b1 01 00 00       	mov    $0x1b1,%edx
   13022:	48 8d 05 af 9b 00 00 	lea    0x9baf(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   13029:	48 89 c6             	mov    %rax,%rsi
   1302c:	48 8d 05 35 9d 00 00 	lea    0x9d35(%rip),%rax        # 1cd68 <__PRETTY_FUNCTION__.0+0x1d8>
   13033:	48 89 c7             	mov    %rax,%rdi
   13036:	e8 95 f3 fe ff       	call   23d0 <__assert_fail@plt>
   1303b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   13040:	75 28                	jne    1306a <free_reg+0x72>
   13042:	48 8d 05 1f 9f 00 00 	lea    0x9f1f(%rip),%rax        # 1cf68 <__PRETTY_FUNCTION__.6>
   13049:	48 89 c1             	mov    %rax,%rcx
   1304c:	ba b2 01 00 00       	mov    $0x1b2,%edx
   13051:	48 8d 05 80 9b 00 00 	lea    0x9b80(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   13058:	48 89 c6             	mov    %rax,%rsi
   1305b:	48 8d 05 18 9d 00 00 	lea    0x9d18(%rip),%rax        # 1cd7a <__PRETTY_FUNCTION__.0+0x1ea>
   13062:	48 89 c7             	mov    %rax,%rdi
   13065:	e8 66 f3 fe ff       	call   23d0 <__assert_fail@plt>
   1306a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1306e:	48 8b 40 08          	mov    0x8(%rax),%rax
   13072:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13076:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1307d:	00
   1307e:	eb 67                	jmp    130e7 <free_reg+0xef>
   13080:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13084:	48 8b 40 08          	mov    0x8(%rax),%rax
   13088:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
   1308c:	75 45                	jne    130d3 <free_reg+0xdb>
   1308e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13093:	75 12                	jne    130a7 <free_reg+0xaf>
   13095:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13099:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1309d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130a1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   130a5:	eb 10                	jmp    130b7 <free_reg+0xbf>
   130a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130ab:	48 8b 50 10          	mov    0x10(%rax),%rdx
   130af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130b3:	48 89 50 10          	mov    %rdx,0x10(%rax)
   130b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130bb:	48 8b 10             	mov    (%rax),%rdx
   130be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130c2:	48 89 50 10          	mov    %rdx,0x10(%rax)
   130c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   130ce:	48 89 10             	mov    %rdx,(%rax)
   130d1:	eb 48                	jmp    1311b <free_reg+0x123>
   130d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   130db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130df:	48 8b 40 10          	mov    0x10(%rax),%rax
   130e3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   130e7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   130ec:	75 92                	jne    13080 <free_reg+0x88>
   130ee:	48 8b 05 6b ef 00 00 	mov    0xef6b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   130f5:	48 89 c1             	mov    %rax,%rcx
   130f8:	ba 33 00 00 00       	mov    $0x33,%edx
   130fd:	be 01 00 00 00       	mov    $0x1,%esi
   13102:	48 8d 05 7f 9c 00 00 	lea    0x9c7f(%rip),%rax        # 1cd88 <__PRETTY_FUNCTION__.0+0x1f8>
   13109:	48 89 c7             	mov    %rax,%rdi
   1310c:	e8 3f f4 fe ff       	call   2550 <fwrite@plt>
   13111:	bf 01 00 00 00       	mov    $0x1,%edi
   13116:	e8 25 f4 fe ff       	call   2540 <exit@plt>
   1311b:	c9                   	leave
   1311c:	c3                   	ret

000000000001311d <swap_reg_stack>:
   1311d:	f3 0f 1e fa          	endbr64
   13121:	55                   	push   %rbp
   13122:	48 89 e5             	mov    %rsp,%rbp
   13125:	48 83 ec 20          	sub    $0x20,%rsp
   13129:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1312d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13132:	75 28                	jne    1315c <swap_reg_stack+0x3f>
   13134:	48 8d 05 3d 9e 00 00 	lea    0x9e3d(%rip),%rax        # 1cf78 <__PRETTY_FUNCTION__.5>
   1313b:	48 89 c1             	mov    %rax,%rcx
   1313e:	ba d0 01 00 00       	mov    $0x1d0,%edx
   13143:	48 8d 05 8e 9a 00 00 	lea    0x9a8e(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   1314a:	48 89 c6             	mov    %rax,%rsi
   1314d:	48 8d 05 14 9c 00 00 	lea    0x9c14(%rip),%rax        # 1cd68 <__PRETTY_FUNCTION__.0+0x1d8>
   13154:	48 89 c7             	mov    %rax,%rdi
   13157:	e8 74 f2 fe ff       	call   23d0 <__assert_fail@plt>
   1315c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13160:	48 8b 00             	mov    (%rax),%rax
   13163:	48 85 c0             	test   %rax,%rax
   13166:	75 28                	jne    13190 <swap_reg_stack+0x73>
   13168:	48 8d 05 09 9e 00 00 	lea    0x9e09(%rip),%rax        # 1cf78 <__PRETTY_FUNCTION__.5>
   1316f:	48 89 c1             	mov    %rax,%rcx
   13172:	ba d1 01 00 00       	mov    $0x1d1,%edx
   13177:	48 8d 05 5a 9a 00 00 	lea    0x9a5a(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   1317e:	48 89 c6             	mov    %rax,%rsi
   13181:	48 8d 05 38 9c 00 00 	lea    0x9c38(%rip),%rax        # 1cdc0 <__PRETTY_FUNCTION__.0+0x230>
   13188:	48 89 c7             	mov    %rax,%rdi
   1318b:	e8 40 f2 fe ff       	call   23d0 <__assert_fail@plt>
   13190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13194:	48 8b 00             	mov    (%rax),%rax
   13197:	48 8b 40 10          	mov    0x10(%rax),%rax
   1319b:	48 85 c0             	test   %rax,%rax
   1319e:	75 28                	jne    131c8 <swap_reg_stack+0xab>
   131a0:	48 8d 05 d1 9d 00 00 	lea    0x9dd1(%rip),%rax        # 1cf78 <__PRETTY_FUNCTION__.5>
   131a7:	48 89 c1             	mov    %rax,%rcx
   131aa:	ba d2 01 00 00       	mov    $0x1d2,%edx
   131af:	48 8d 05 22 9a 00 00 	lea    0x9a22(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   131b6:	48 89 c6             	mov    %rax,%rsi
   131b9:	48 8d 05 28 9c 00 00 	lea    0x9c28(%rip),%rax        # 1cde8 <__PRETTY_FUNCTION__.0+0x258>
   131c0:	48 89 c7             	mov    %rax,%rdi
   131c3:	e8 08 f2 fe ff       	call   23d0 <__assert_fail@plt>
   131c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131cc:	48 8b 00             	mov    (%rax),%rax
   131cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   131d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131d7:	48 8b 40 10          	mov    0x10(%rax),%rax
   131db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   131df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   131e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131eb:	48 89 50 10          	mov    %rdx,0x10(%rax)
   131ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   131f7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   131fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13203:	48 89 10             	mov    %rdx,(%rax)
   13206:	90                   	nop
   13207:	c9                   	leave
   13208:	c3                   	ret

0000000000013209 <front_reg_stack>:
   13209:	f3 0f 1e fa          	endbr64
   1320d:	55                   	push   %rbp
   1320e:	48 89 e5             	mov    %rsp,%rbp
   13211:	48 83 ec 10          	sub    $0x10,%rsp
   13215:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13219:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1321e:	75 28                	jne    13248 <front_reg_stack+0x3f>
   13220:	48 8d 05 69 9d 00 00 	lea    0x9d69(%rip),%rax        # 1cf90 <__PRETTY_FUNCTION__.4>
   13227:	48 89 c1             	mov    %rax,%rcx
   1322a:	ba df 01 00 00       	mov    $0x1df,%edx
   1322f:	48 8d 05 a2 99 00 00 	lea    0x99a2(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   13236:	48 89 c6             	mov    %rax,%rsi
   13239:	48 8d 05 28 9b 00 00 	lea    0x9b28(%rip),%rax        # 1cd68 <__PRETTY_FUNCTION__.0+0x1d8>
   13240:	48 89 c7             	mov    %rax,%rdi
   13243:	e8 88 f1 fe ff       	call   23d0 <__assert_fail@plt>
   13248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1324c:	48 8b 00             	mov    (%rax),%rax
   1324f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13253:	c9                   	leave
   13254:	c3                   	ret

0000000000013255 <get_free_reg>:
   13255:	f3 0f 1e fa          	endbr64
   13259:	55                   	push   %rbp
   1325a:	48 89 e5             	mov    %rsp,%rbp
   1325d:	48 83 ec 20          	sub    $0x20,%rsp
   13261:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13265:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13269:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1326e:	75 28                	jne    13298 <get_free_reg+0x43>
   13270:	48 8d 05 29 9d 00 00 	lea    0x9d29(%rip),%rax        # 1cfa0 <__PRETTY_FUNCTION__.3>
   13277:	48 89 c1             	mov    %rax,%rcx
   1327a:	ba e7 01 00 00       	mov    $0x1e7,%edx
   1327f:	48 8d 05 52 99 00 00 	lea    0x9952(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   13286:	48 89 c6             	mov    %rax,%rsi
   13289:	48 8d 05 d8 9a 00 00 	lea    0x9ad8(%rip),%rax        # 1cd68 <__PRETTY_FUNCTION__.0+0x1d8>
   13290:	48 89 c7             	mov    %rax,%rdi
   13293:	e8 38 f1 fe ff       	call   23d0 <__assert_fail@plt>
   13298:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1329c:	48 8b 00             	mov    (%rax),%rax
   1329f:	48 85 c0             	test   %rax,%rax
   132a2:	74 4b                	je     132ef <get_free_reg+0x9a>
   132a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132a8:	48 8b 00             	mov    (%rax),%rax
   132ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   132af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132b3:	48 8b 00             	mov    (%rax),%rax
   132b6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   132ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132be:	48 89 10             	mov    %rdx,(%rax)
   132c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132c5:	48 8b 50 08          	mov    0x8(%rax),%rdx
   132c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132cd:	48 89 50 10          	mov    %rdx,0x10(%rax)
   132d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   132d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   132dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132e1:	48 8b 40 08          	mov    0x8(%rax),%rax
   132e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   132e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132ed:	eb 05                	jmp    132f4 <get_free_reg+0x9f>
   132ef:	b8 00 00 00 00       	mov    $0x0,%eax
   132f4:	c9                   	leave
   132f5:	c3                   	ret

00000000000132f6 <get_num_registers_free>:
   132f6:	f3 0f 1e fa          	endbr64
   132fa:	55                   	push   %rbp
   132fb:	48 89 e5             	mov    %rsp,%rbp
   132fe:	48 83 ec 10          	sub    $0x10,%rsp
   13302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1330a:	48 8b 00             	mov    (%rax),%rax
   1330d:	48 89 c7             	mov    %rax,%rdi
   13310:	e8 82 52 ff ff       	call   8597 <ListLength>
   13315:	c9                   	leave
   13316:	c3                   	ret

0000000000013317 <get_num_registers_alloced>:
   13317:	f3 0f 1e fa          	endbr64
   1331b:	55                   	push   %rbp
   1331c:	48 89 e5             	mov    %rsp,%rbp
   1331f:	48 83 ec 10          	sub    $0x10,%rsp
   13323:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1332b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1332f:	48 89 c7             	mov    %rax,%rdi
   13332:	e8 60 52 ff ff       	call   8597 <ListLength>
   13337:	c9                   	leave
   13338:	c3                   	ret

0000000000013339 <free_reg_stack>:
   13339:	f3 0f 1e fa          	endbr64
   1333d:	55                   	push   %rbp
   1333e:	48 89 e5             	mov    %rsp,%rbp
   13341:	48 83 ec 20          	sub    $0x20,%rsp
   13345:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13349:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1334e:	75 28                	jne    13378 <free_reg_stack+0x3f>
   13350:	48 8d 05 59 9c 00 00 	lea    0x9c59(%rip),%rax        # 1cfb0 <__PRETTY_FUNCTION__.2>
   13357:	48 89 c1             	mov    %rax,%rcx
   1335a:	ba 0a 02 00 00       	mov    $0x20a,%edx
   1335f:	48 8d 05 72 98 00 00 	lea    0x9872(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   13366:	48 89 c6             	mov    %rax,%rsi
   13369:	48 8d 05 f8 99 00 00 	lea    0x99f8(%rip),%rax        # 1cd68 <__PRETTY_FUNCTION__.0+0x1d8>
   13370:	48 89 c7             	mov    %rax,%rdi
   13373:	e8 58 f0 fe ff       	call   23d0 <__assert_fail@plt>
   13378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1337c:	48 8b 40 08          	mov    0x8(%rax),%rax
   13380:	48 89 c7             	mov    %rax,%rdi
   13383:	e8 0f 52 ff ff       	call   8597 <ListLength>
   13388:	85 c0                	test   %eax,%eax
   1338a:	0f 84 8f 00 00 00    	je     1341f <free_reg_stack+0xe6>
   13390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13394:	48 8b 40 08          	mov    0x8(%rax),%rax
   13398:	48 89 c7             	mov    %rax,%rdi
   1339b:	e8 f7 51 ff ff       	call   8597 <ListLength>
   133a0:	89 c2                	mov    %eax,%edx
   133a2:	48 8b 05 b7 ec 00 00 	mov    0xecb7(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   133a9:	48 8d 0d 60 9a 00 00 	lea    0x9a60(%rip),%rcx        # 1ce10 <__PRETTY_FUNCTION__.0+0x280>
   133b0:	48 89 ce             	mov    %rcx,%rsi
   133b3:	48 89 c7             	mov    %rax,%rdi
   133b6:	b8 00 00 00 00       	mov    $0x0,%eax
   133bb:	e8 b0 f0 fe ff       	call   2470 <fprintf@plt>
   133c0:	eb 5d                	jmp    1341f <free_reg_stack+0xe6>
   133c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133c6:	48 8b 00             	mov    (%rax),%rax
   133c9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   133cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133d1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   133d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133d9:	48 89 10             	mov    %rdx,(%rax)
   133dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133e0:	48 8b 40 08          	mov    0x8(%rax),%rax
   133e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   133e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133ec:	48 8b 00             	mov    (%rax),%rax
   133ef:	48 89 c7             	mov    %rax,%rdi
   133f2:	e8 f9 ee fe ff       	call   22f0 <free@plt>
   133f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133fb:	48 8b 40 08          	mov    0x8(%rax),%rax
   133ff:	48 89 c7             	mov    %rax,%rdi
   13402:	e8 e9 ee fe ff       	call   22f0 <free@plt>
   13407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1340b:	48 89 c7             	mov    %rax,%rdi
   1340e:	e8 dd ee fe ff       	call   22f0 <free@plt>
   13413:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13417:	48 89 c7             	mov    %rax,%rdi
   1341a:	e8 d1 ee fe ff       	call   22f0 <free@plt>
   1341f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13423:	48 8b 00             	mov    (%rax),%rax
   13426:	48 85 c0             	test   %rax,%rax
   13429:	75 97                	jne    133c2 <free_reg_stack+0x89>
   1342b:	eb 5f                	jmp    1348c <free_reg_stack+0x153>
   1342d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13431:	48 8b 40 08          	mov    0x8(%rax),%rax
   13435:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13439:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1343d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13441:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13445:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13449:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1344d:	48 8b 40 08          	mov    0x8(%rax),%rax
   13451:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13459:	48 8b 00             	mov    (%rax),%rax
   1345c:	48 89 c7             	mov    %rax,%rdi
   1345f:	e8 8c ee fe ff       	call   22f0 <free@plt>
   13464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13468:	48 8b 40 08          	mov    0x8(%rax),%rax
   1346c:	48 89 c7             	mov    %rax,%rdi
   1346f:	e8 7c ee fe ff       	call   22f0 <free@plt>
   13474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13478:	48 89 c7             	mov    %rax,%rdi
   1347b:	e8 70 ee fe ff       	call   22f0 <free@plt>
   13480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13484:	48 89 c7             	mov    %rax,%rdi
   13487:	e8 64 ee fe ff       	call   22f0 <free@plt>
   1348c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13490:	48 8b 40 08          	mov    0x8(%rax),%rax
   13494:	48 85 c0             	test   %rax,%rax
   13497:	75 94                	jne    1342d <free_reg_stack+0xf4>
   13499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1349d:	48 89 c7             	mov    %rax,%rdi
   134a0:	e8 4b ee fe ff       	call   22f0 <free@plt>
   134a5:	90                   	nop
   134a6:	c9                   	leave
   134a7:	c3                   	ret

00000000000134a8 <init_stackscope>:
   134a8:	f3 0f 1e fa          	endbr64
   134ac:	55                   	push   %rbp
   134ad:	48 89 e5             	mov    %rsp,%rbp
   134b0:	48 83 ec 10          	sub    $0x10,%rsp
   134b4:	bf 30 00 00 00       	mov    $0x30,%edi
   134b9:	e8 12 f0 fe ff       	call   24d0 <malloc@plt>
   134be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   134c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134c6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   134cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   134d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134db:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   134e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134e6:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   134ed:	00
   134ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134f2:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   134f9:	00
   134fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134fe:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   13505:	00
   13506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1350a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   13511:	00
   13512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13516:	c9                   	leave
   13517:	c3                   	ret

0000000000013518 <stackscope_find_t>:
   13518:	f3 0f 1e fa          	endbr64
   1351c:	55                   	push   %rbp
   1351d:	48 89 e5             	mov    %rsp,%rbp
   13520:	48 83 ec 20          	sub    $0x20,%rsp
   13524:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13528:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1352c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13530:	48 8b 40 10          	mov    0x10(%rax),%rax
   13534:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13538:	eb 39                	jmp    13573 <stackscope_find_t+0x5b>
   1353a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1353e:	48 8b 40 08          	mov    0x8(%rax),%rax
   13542:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1354a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1354e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13552:	48 89 d6             	mov    %rdx,%rsi
   13555:	48 89 c7             	mov    %rax,%rdi
   13558:	e8 f3 ee fe ff       	call   2450 <strcmp@plt>
   1355d:	85 c0                	test   %eax,%eax
   1355f:	75 06                	jne    13567 <stackscope_find_t+0x4f>
   13561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13565:	eb 18                	jmp    1357f <stackscope_find_t+0x67>
   13567:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1356b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1356f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13573:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13578:	75 c0                	jne    1353a <stackscope_find_t+0x22>
   1357a:	b8 00 00 00 00       	mov    $0x0,%eax
   1357f:	c9                   	leave
   13580:	c3                   	ret

0000000000013581 <stackscope_find_x>:
   13581:	f3 0f 1e fa          	endbr64
   13585:	55                   	push   %rbp
   13586:	48 89 e5             	mov    %rsp,%rbp
   13589:	48 83 ec 20          	sub    $0x20,%rsp
   1358d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13591:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13599:	48 8b 40 18          	mov    0x18(%rax),%rax
   1359d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   135a1:	eb 39                	jmp    135dc <stackscope_find_x+0x5b>
   135a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135a7:	48 8b 40 08          	mov    0x8(%rax),%rax
   135ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   135af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b3:	48 8b 40 08          	mov    0x8(%rax),%rax
   135b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   135bb:	48 89 d6             	mov    %rdx,%rsi
   135be:	48 89 c7             	mov    %rax,%rdi
   135c1:	e8 8a ee fe ff       	call   2450 <strcmp@plt>
   135c6:	85 c0                	test   %eax,%eax
   135c8:	75 06                	jne    135d0 <stackscope_find_x+0x4f>
   135ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135ce:	eb 18                	jmp    135e8 <stackscope_find_x+0x67>
   135d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135d4:	48 8b 40 10          	mov    0x10(%rax),%rax
   135d8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   135dc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   135e1:	75 c0                	jne    135a3 <stackscope_find_x+0x22>
   135e3:	b8 00 00 00 00       	mov    $0x0,%eax
   135e8:	c9                   	leave
   135e9:	c3                   	ret

00000000000135ea <stackscope_find_z>:
   135ea:	f3 0f 1e fa          	endbr64
   135ee:	55                   	push   %rbp
   135ef:	48 89 e5             	mov    %rsp,%rbp
   135f2:	48 83 ec 20          	sub    $0x20,%rsp
   135f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   135fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   135fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13602:	48 8b 40 20          	mov    0x20(%rax),%rax
   13606:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1360a:	eb 39                	jmp    13645 <stackscope_find_z+0x5b>
   1360c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13610:	48 8b 40 08          	mov    0x8(%rax),%rax
   13614:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1361c:	48 8b 40 08          	mov    0x8(%rax),%rax
   13620:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13624:	48 89 d6             	mov    %rdx,%rsi
   13627:	48 89 c7             	mov    %rax,%rdi
   1362a:	e8 21 ee fe ff       	call   2450 <strcmp@plt>
   1362f:	85 c0                	test   %eax,%eax
   13631:	75 06                	jne    13639 <stackscope_find_z+0x4f>
   13633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13637:	eb 18                	jmp    13651 <stackscope_find_z+0x67>
   13639:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1363d:	48 8b 40 10          	mov    0x10(%rax),%rax
   13641:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13645:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1364a:	75 c0                	jne    1360c <stackscope_find_z+0x22>
   1364c:	b8 00 00 00 00       	mov    $0x0,%eax
   13651:	c9                   	leave
   13652:	c3                   	ret

0000000000013653 <free_stackscope>:
   13653:	f3 0f 1e fa          	endbr64
   13657:	55                   	push   %rbp
   13658:	48 89 e5             	mov    %rsp,%rbp
   1365b:	48 83 ec 20          	sub    $0x20,%rsp
   1365f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13663:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1366a:	00
   1366b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13670:	74 48                	je     136ba <free_stackscope+0x67>
   13672:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13676:	48 8b 40 28          	mov    0x28(%rax),%rax
   1367a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1367e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13682:	48 8b 40 10          	mov    0x10(%rax),%rax
   13686:	48 89 c7             	mov    %rax,%rdi
   13689:	e8 9f 00 00 00       	call   1372d <free_stackscope_list>
   1368e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13692:	48 8b 40 18          	mov    0x18(%rax),%rax
   13696:	48 89 c7             	mov    %rax,%rdi
   13699:	e8 8f 00 00 00       	call   1372d <free_stackscope_list>
   1369e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136a2:	48 8b 40 20          	mov    0x20(%rax),%rax
   136a6:	48 89 c7             	mov    %rax,%rdi
   136a9:	e8 7f 00 00 00       	call   1372d <free_stackscope_list>
   136ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136b2:	48 89 c7             	mov    %rax,%rdi
   136b5:	e8 36 ec fe ff       	call   22f0 <free@plt>
   136ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136be:	c9                   	leave
   136bf:	c3                   	ret

00000000000136c0 <free_all_stackscopes>:
   136c0:	f3 0f 1e fa          	endbr64
   136c4:	55                   	push   %rbp
   136c5:	48 89 e5             	mov    %rsp,%rbp
   136c8:	48 83 ec 20          	sub    $0x20,%rsp
   136cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136d0:	eb 50                	jmp    13722 <free_all_stackscopes+0x62>
   136d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136d6:	48 8b 40 28          	mov    0x28(%rax),%rax
   136da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   136de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136e2:	48 8b 40 10          	mov    0x10(%rax),%rax
   136e6:	48 89 c7             	mov    %rax,%rdi
   136e9:	e8 3f 00 00 00       	call   1372d <free_stackscope_list>
   136ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136f2:	48 8b 40 18          	mov    0x18(%rax),%rax
   136f6:	48 89 c7             	mov    %rax,%rdi
   136f9:	e8 2f 00 00 00       	call   1372d <free_stackscope_list>
   136fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13702:	48 8b 40 20          	mov    0x20(%rax),%rax
   13706:	48 89 c7             	mov    %rax,%rdi
   13709:	e8 1f 00 00 00       	call   1372d <free_stackscope_list>
   1370e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13712:	48 89 c7             	mov    %rax,%rdi
   13715:	e8 d6 eb fe ff       	call   22f0 <free@plt>
   1371a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1371e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13722:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   13727:	75 a9                	jne    136d2 <free_all_stackscopes+0x12>
   13729:	90                   	nop
   1372a:	90                   	nop
   1372b:	c9                   	leave
   1372c:	c3                   	ret

000000000001372d <free_stackscope_list>:
   1372d:	f3 0f 1e fa          	endbr64
   13731:	55                   	push   %rbp
   13732:	48 89 e5             	mov    %rsp,%rbp
   13735:	48 83 ec 20          	sub    $0x20,%rsp
   13739:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1373d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13741:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13745:	eb 1c                	jmp    13763 <free_stackscope_list+0x36>
   13747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1374b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1374f:	48 89 c7             	mov    %rax,%rdi
   13752:	e8 a5 00 00 00       	call   137fc <destroy_stack_node>
   13757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1375b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1375f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13763:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13768:	75 dd                	jne    13747 <free_stackscope_list+0x1a>
   1376a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1376e:	48 89 c7             	mov    %rax,%rdi
   13771:	e8 20 4d ff ff       	call   8496 <DestroyList>
   13776:	90                   	nop
   13777:	c9                   	leave
   13778:	c3                   	ret

0000000000013779 <init_stack_node>:
   13779:	f3 0f 1e fa          	endbr64
   1377d:	55                   	push   %rbp
   1377e:	48 89 e5             	mov    %rsp,%rbp
   13781:	48 83 ec 20          	sub    $0x20,%rsp
   13785:	89 7d ec             	mov    %edi,-0x14(%rbp)
   13788:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1378c:	89 55 e8             	mov    %edx,-0x18(%rbp)
   1378f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   13794:	75 28                	jne    137be <init_stack_node+0x45>
   13796:	48 8d 05 23 98 00 00 	lea    0x9823(%rip),%rax        # 1cfc0 <__PRETTY_FUNCTION__.1>
   1379d:	48 89 c1             	mov    %rax,%rcx
   137a0:	ba b9 02 00 00       	mov    $0x2b9,%edx
   137a5:	48 8d 05 2c 94 00 00 	lea    0x942c(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   137ac:	48 89 c6             	mov    %rax,%rsi
   137af:	48 8d 05 91 96 00 00 	lea    0x9691(%rip),%rax        # 1ce47 <__PRETTY_FUNCTION__.0+0x2b7>
   137b6:	48 89 c7             	mov    %rax,%rdi
   137b9:	e8 12 ec fe ff       	call   23d0 <__assert_fail@plt>
   137be:	bf 18 00 00 00       	mov    $0x18,%edi
   137c3:	e8 08 ed fe ff       	call   24d0 <malloc@plt>
   137c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   137cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137d0:	8b 55 ec             	mov    -0x14(%rbp),%edx
   137d3:	89 10                	mov    %edx,(%rax)
   137d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   137d9:	48 89 c7             	mov    %rax,%rdi
   137dc:	e8 7f ed fe ff       	call   2560 <strdup@plt>
   137e1:	48 89 c2             	mov    %rax,%rdx
   137e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137e8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   137ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137f0:	8b 55 e8             	mov    -0x18(%rbp),%edx
   137f3:	89 50 10             	mov    %edx,0x10(%rax)
   137f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137fa:	c9                   	leave
   137fb:	c3                   	ret

00000000000137fc <destroy_stack_node>:
   137fc:	f3 0f 1e fa          	endbr64
   13800:	55                   	push   %rbp
   13801:	48 89 e5             	mov    %rsp,%rbp
   13804:	48 83 ec 10          	sub    $0x10,%rsp
   13808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1380c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13811:	75 28                	jne    1383b <destroy_stack_node+0x3f>
   13813:	48 8d 05 b6 97 00 00 	lea    0x97b6(%rip),%rax        # 1cfd0 <__PRETTY_FUNCTION__.0>
   1381a:	48 89 c1             	mov    %rax,%rcx
   1381d:	ba c7 02 00 00       	mov    $0x2c7,%edx
   13822:	48 8d 05 af 93 00 00 	lea    0x93af(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   13829:	48 89 c6             	mov    %rax,%rsi
   1382c:	48 8d 05 22 96 00 00 	lea    0x9622(%rip),%rax        # 1ce55 <__PRETTY_FUNCTION__.0+0x2c5>
   13833:	48 89 c7             	mov    %rax,%rdi
   13836:	e8 95 eb fe ff       	call   23d0 <__assert_fail@plt>
   1383b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1383f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13843:	48 85 c0             	test   %rax,%rax
   13846:	75 28                	jne    13870 <destroy_stack_node+0x74>
   13848:	48 8d 05 81 97 00 00 	lea    0x9781(%rip),%rax        # 1cfd0 <__PRETTY_FUNCTION__.0>
   1384f:	48 89 c1             	mov    %rax,%rcx
   13852:	ba c8 02 00 00       	mov    $0x2c8,%edx
   13857:	48 8d 05 7a 93 00 00 	lea    0x937a(%rip),%rax        # 1cbd8 <__PRETTY_FUNCTION__.0+0x48>
   1385e:	48 89 c6             	mov    %rax,%rsi
   13861:	48 8d 05 fa 95 00 00 	lea    0x95fa(%rip),%rax        # 1ce62 <__PRETTY_FUNCTION__.0+0x2d2>
   13868:	48 89 c7             	mov    %rax,%rdi
   1386b:	e8 60 eb fe ff       	call   23d0 <__assert_fail@plt>
   13870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13874:	48 8b 40 08          	mov    0x8(%rax),%rax
   13878:	48 89 c7             	mov    %rax,%rdi
   1387b:	e8 70 ea fe ff       	call   22f0 <free@plt>
   13880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13884:	48 89 c7             	mov    %rax,%rdi
   13887:	e8 64 ea fe ff       	call   22f0 <free@plt>
   1388c:	90                   	nop
   1388d:	c9                   	leave
   1388e:	c3                   	ret

000000000001388f <build_expr_tree>:
   1388f:	f3 0f 1e fa          	endbr64
   13893:	55                   	push   %rbp
   13894:	48 89 e5             	mov    %rsp,%rbp
   13897:	48 83 ec 20          	sub    $0x20,%rsp
   1389b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1389f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   138a4:	75 28                	jne    138ce <build_expr_tree+0x3f>
   138a6:	48 8d 05 93 9c 00 00 	lea    0x9c93(%rip),%rax        # 1d540 <__PRETTY_FUNCTION__.11>
   138ad:	48 89 c1             	mov    %rax,%rcx
   138b0:	ba 2c 00 00 00       	mov    $0x2c,%edx
   138b5:	48 8d 05 34 97 00 00 	lea    0x9734(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   138bc:	48 89 c6             	mov    %rax,%rsi
   138bf:	48 8d 05 62 97 00 00 	lea    0x9762(%rip),%rax        # 1d028 <__PRETTY_FUNCTION__.0+0x58>
   138c6:	48 89 c7             	mov    %rax,%rdi
   138c9:	e8 02 eb fe ff       	call   23d0 <__assert_fail@plt>
   138ce:	bf 28 00 00 00       	mov    $0x28,%edi
   138d3:	e8 f8 eb fe ff       	call   24d0 <malloc@plt>
   138d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   138dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   138e4:	48 89 50 18          	mov    %rdx,0x18(%rax)
   138e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ec:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   138f3:	00
   138f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138f8:	8b 40 04             	mov    0x4(%rax),%eax
   138fb:	83 f8 09             	cmp    $0x9,%eax
   138fe:	0f 87 3a 01 00 00    	ja     13a3e <build_expr_tree+0x1af>
   13904:	89 c0                	mov    %eax,%eax
   13906:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1390d:	00
   1390e:	48 8d 05 7b 97 00 00 	lea    0x977b(%rip),%rax        # 1d090 <__PRETTY_FUNCTION__.0+0xc0>
   13915:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   13918:	48 98                	cltq
   1391a:	48 8d 15 6f 97 00 00 	lea    0x976f(%rip),%rdx        # 1d090 <__PRETTY_FUNCTION__.0+0xc0>
   13921:	48 01 d0             	add    %rdx,%rax
   13924:	3e ff e0             	notrack jmp *%rax
   13927:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1392b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1392f:	48 89 c7             	mov    %rax,%rdi
   13932:	e8 58 ff ff ff       	call   1388f <build_expr_tree>
   13937:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1393b:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1393f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13943:	48 8b 40 18          	mov    0x18(%rax),%rax
   13947:	48 89 c7             	mov    %rax,%rdi
   1394a:	e8 40 ff ff ff       	call   1388f <build_expr_tree>
   1394f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13953:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13957:	e9 11 01 00 00       	jmp    13a6d <build_expr_tree+0x1de>
   1395c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13960:	48 8b 40 10          	mov    0x10(%rax),%rax
   13964:	48 89 c7             	mov    %rax,%rdi
   13967:	e8 23 ff ff ff       	call   1388f <build_expr_tree>
   1396c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13970:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13974:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13978:	48 8b 40 18          	mov    0x18(%rax),%rax
   1397c:	48 89 c7             	mov    %rax,%rdi
   1397f:	e8 0b ff ff ff       	call   1388f <build_expr_tree>
   13984:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13988:	48 89 42 10          	mov    %rax,0x10(%rdx)
   1398c:	e9 dc 00 00 00       	jmp    13a6d <build_expr_tree+0x1de>
   13991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13995:	48 8b 40 08          	mov    0x8(%rax),%rax
   13999:	48 89 c7             	mov    %rax,%rdi
   1399c:	e8 ee fe ff ff       	call   1388f <build_expr_tree>
   139a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139a5:	48 89 42 08          	mov    %rax,0x8(%rdx)
   139a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139ad:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   139b4:	00
   139b5:	e9 b3 00 00 00       	jmp    13a6d <build_expr_tree+0x1de>
   139ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139be:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   139c5:	00
   139c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139ca:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   139d1:	00
   139d2:	e9 96 00 00 00       	jmp    13a6d <build_expr_tree+0x1de>
   139d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139db:	48 8b 40 10          	mov    0x10(%rax),%rax
   139df:	48 89 c7             	mov    %rax,%rdi
   139e2:	e8 a8 fe ff ff       	call   1388f <build_expr_tree>
   139e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139eb:	48 89 42 08          	mov    %rax,0x8(%rdx)
   139ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139f3:	48 8b 40 18          	mov    0x18(%rax),%rax
   139f7:	48 85 c0             	test   %rax,%rax
   139fa:	75 28                	jne    13a24 <build_expr_tree+0x195>
   139fc:	48 8d 05 3d 9b 00 00 	lea    0x9b3d(%rip),%rax        # 1d540 <__PRETTY_FUNCTION__.11>
   13a03:	48 89 c1             	mov    %rax,%rcx
   13a06:	ba 4f 00 00 00       	mov    $0x4f,%edx
   13a0b:	48 8d 05 de 95 00 00 	lea    0x95de(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   13a12:	48 89 c6             	mov    %rax,%rsi
   13a15:	48 8d 05 1c 96 00 00 	lea    0x961c(%rip),%rax        # 1d038 <__PRETTY_FUNCTION__.0+0x68>
   13a1c:	48 89 c7             	mov    %rax,%rdi
   13a1f:	e8 ac e9 fe ff       	call   23d0 <__assert_fail@plt>
   13a24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a28:	48 8b 40 18          	mov    0x18(%rax),%rax
   13a2c:	48 89 c7             	mov    %rax,%rdi
   13a2f:	e8 5b fe ff ff       	call   1388f <build_expr_tree>
   13a34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a38:	48 89 42 10          	mov    %rax,0x10(%rdx)
   13a3c:	eb 2f                	jmp    13a6d <build_expr_tree+0x1de>
   13a3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a42:	8b 50 04             	mov    0x4(%rax),%edx
   13a45:	48 8b 05 14 e6 00 00 	mov    0xe614(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   13a4c:	48 8d 0d 15 96 00 00 	lea    0x9615(%rip),%rcx        # 1d068 <__PRETTY_FUNCTION__.0+0x98>
   13a53:	48 89 ce             	mov    %rcx,%rsi
   13a56:	48 89 c7             	mov    %rax,%rdi
   13a59:	b8 00 00 00 00       	mov    $0x0,%eax
   13a5e:	e8 0d ea fe ff       	call   2470 <fprintf@plt>
   13a63:	bf 01 00 00 00       	mov    $0x1,%edi
   13a68:	e8 d3 ea fe ff       	call   2540 <exit@plt>
   13a6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a71:	48 8b 40 08          	mov    0x8(%rax),%rax
   13a75:	48 85 c0             	test   %rax,%rax
   13a78:	74 23                	je     13a9d <build_expr_tree+0x20e>
   13a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a7e:	48 8b 40 08          	mov    0x8(%rax),%rax
   13a82:	48 89 c7             	mov    %rax,%rdi
   13a85:	e8 41 05 00 00       	call   13fcb <expr_tree_is_leaf>
   13a8a:	83 f8 01             	cmp    $0x1,%eax
   13a8d:	75 0e                	jne    13a9d <build_expr_tree+0x20e>
   13a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a93:	48 8b 40 08          	mov    0x8(%rax),%rax
   13a97:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   13a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aa1:	48 8b 40 08          	mov    0x8(%rax),%rax
   13aa5:	48 85 c0             	test   %rax,%rax
   13aa8:	75 1c                	jne    13ac6 <build_expr_tree+0x237>
   13aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aae:	48 8b 40 10          	mov    0x10(%rax),%rax
   13ab2:	48 85 c0             	test   %rax,%rax
   13ab5:	75 0f                	jne    13ac6 <build_expr_tree+0x237>
   13ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13abb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   13ac1:	e9 a8 00 00 00       	jmp    13b6e <build_expr_tree+0x2df>
   13ac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aca:	48 8b 40 08          	mov    0x8(%rax),%rax
   13ace:	48 85 c0             	test   %rax,%rax
   13ad1:	75 15                	jne    13ae8 <build_expr_tree+0x259>
   13ad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ad7:	48 8b 40 10          	mov    0x10(%rax),%rax
   13adb:	8b 10                	mov    (%rax),%edx
   13add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ae1:	89 10                	mov    %edx,(%rax)
   13ae3:	e9 86 00 00 00       	jmp    13b6e <build_expr_tree+0x2df>
   13ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aec:	48 8b 40 10          	mov    0x10(%rax),%rax
   13af0:	48 85 c0             	test   %rax,%rax
   13af3:	75 12                	jne    13b07 <build_expr_tree+0x278>
   13af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13af9:	48 8b 40 08          	mov    0x8(%rax),%rax
   13afd:	8b 10                	mov    (%rax),%edx
   13aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b03:	89 10                	mov    %edx,(%rax)
   13b05:	eb 67                	jmp    13b6e <build_expr_tree+0x2df>
   13b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b0b:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b0f:	8b 10                	mov    (%rax),%edx
   13b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b15:	48 8b 40 10          	mov    0x10(%rax),%rax
   13b19:	8b 00                	mov    (%rax),%eax
   13b1b:	39 c2                	cmp    %eax,%edx
   13b1d:	7e 12                	jle    13b31 <build_expr_tree+0x2a2>
   13b1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b23:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b27:	8b 10                	mov    (%rax),%edx
   13b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b2d:	89 10                	mov    %edx,(%rax)
   13b2f:	eb 3d                	jmp    13b6e <build_expr_tree+0x2df>
   13b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b35:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b39:	8b 10                	mov    (%rax),%edx
   13b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b3f:	48 8b 40 10          	mov    0x10(%rax),%rax
   13b43:	8b 00                	mov    (%rax),%eax
   13b45:	39 c2                	cmp    %eax,%edx
   13b47:	7d 12                	jge    13b5b <build_expr_tree+0x2cc>
   13b49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b4d:	48 8b 40 10          	mov    0x10(%rax),%rax
   13b51:	8b 10                	mov    (%rax),%edx
   13b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b57:	89 10                	mov    %edx,(%rax)
   13b59:	eb 13                	jmp    13b6e <build_expr_tree+0x2df>
   13b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b5f:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b63:	8b 00                	mov    (%rax),%eax
   13b65:	8d 50 01             	lea    0x1(%rax),%edx
   13b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b6c:	89 10                	mov    %edx,(%rax)
   13b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b72:	c9                   	leave
   13b73:	c3                   	ret

0000000000013b74 <gencode_expr_tree>:
   13b74:	f3 0f 1e fa          	endbr64
   13b78:	55                   	push   %rbp
   13b79:	48 89 e5             	mov    %rsp,%rbp
   13b7c:	48 83 ec 60          	sub    $0x60,%rsp
   13b80:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   13b84:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   13b88:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   13b8c:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   13b90:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13b97:	00 00
   13b99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13b9d:	31 c0                	xor    %eax,%eax
   13b9f:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   13ba4:	75 28                	jne    13bce <gencode_expr_tree+0x5a>
   13ba6:	48 8d 05 a3 99 00 00 	lea    0x99a3(%rip),%rax        # 1d550 <__PRETTY_FUNCTION__.10>
   13bad:	48 89 c1             	mov    %rax,%rcx
   13bb0:	ba 80 00 00 00       	mov    $0x80,%edx
   13bb5:	48 8d 05 34 94 00 00 	lea    0x9434(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   13bbc:	48 89 c6             	mov    %rax,%rsi
   13bbf:	48 8d 05 f2 94 00 00 	lea    0x94f2(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   13bc6:	48 89 c7             	mov    %rax,%rdi
   13bc9:	e8 02 e8 fe ff       	call   23d0 <__assert_fail@plt>
   13bce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bd2:	48 8b 40 18          	mov    0x18(%rax),%rax
   13bd6:	48 85 c0             	test   %rax,%rax
   13bd9:	75 28                	jne    13c03 <gencode_expr_tree+0x8f>
   13bdb:	48 8d 05 6e 99 00 00 	lea    0x996e(%rip),%rax        # 1d550 <__PRETTY_FUNCTION__.10>
   13be2:	48 89 c1             	mov    %rax,%rcx
   13be5:	ba 81 00 00 00       	mov    $0x81,%edx
   13bea:	48 8d 05 ff 93 00 00 	lea    0x93ff(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   13bf1:	48 89 c6             	mov    %rax,%rsi
   13bf4:	48 8d 05 ca 94 00 00 	lea    0x94ca(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   13bfb:	48 89 c7             	mov    %rax,%rdi
   13bfe:	e8 cd e7 fe ff       	call   23d0 <__assert_fail@plt>
   13c03:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c07:	48 8b 40 18          	mov    0x18(%rax),%rax
   13c0b:	8b 50 04             	mov    0x4(%rax),%edx
   13c0e:	48 8b 05 4b e4 00 00 	mov    0xe44b(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   13c15:	48 8d 0d bc 94 00 00 	lea    0x94bc(%rip),%rcx        # 1d0d8 <__PRETTY_FUNCTION__.0+0x108>
   13c1c:	48 89 ce             	mov    %rcx,%rsi
   13c1f:	48 89 c7             	mov    %rax,%rdi
   13c22:	b8 00 00 00 00       	mov    $0x0,%eax
   13c27:	e8 44 e8 fe ff       	call   2470 <fprintf@plt>
   13c2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c30:	48 8b 40 20          	mov    0x20(%rax),%rax
   13c34:	48 85 c0             	test   %rax,%rax
   13c37:	74 57                	je     13c90 <gencode_expr_tree+0x11c>
   13c39:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13c3d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13c41:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c45:	48 8b 40 20          	mov    0x20(%rax),%rax
   13c49:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13c4d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13c51:	49 89 c8             	mov    %rcx,%r8
   13c54:	48 89 d1             	mov    %rdx,%rcx
   13c57:	48 8d 15 a4 94 00 00 	lea    0x94a4(%rip),%rdx        # 1d102 <__PRETTY_FUNCTION__.0+0x132>
   13c5e:	be 32 00 00 00       	mov    $0x32,%esi
   13c63:	48 89 c7             	mov    %rax,%rdi
   13c66:	b8 00 00 00 00       	mov    $0x0,%eax
   13c6b:	e8 40 e7 fe ff       	call   23b0 <snprintf@plt>
   13c70:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13c74:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13c78:	48 89 d6             	mov    %rdx,%rsi
   13c7b:	48 89 c7             	mov    %rax,%rdi
   13c7e:	e8 2b b8 ff ff       	call   f4ae <add_inst>
   13c83:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13c87:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13c8b:	e9 41 01 00 00       	jmp    13dd1 <gencode_expr_tree+0x25d>
   13c90:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c94:	48 8b 40 18          	mov    0x18(%rax),%rax
   13c98:	8b 40 04             	mov    0x4(%rax),%eax
   13c9b:	83 f8 01             	cmp    $0x1,%eax
   13c9e:	75 21                	jne    13cc1 <gencode_expr_tree+0x14d>
   13ca0:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13ca4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13ca8:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13cac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cb0:	48 89 c7             	mov    %rax,%rdi
   13cb3:	e8 98 05 00 00       	call   14250 <gencode_sign_term>
   13cb8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13cbc:	e9 0c 01 00 00       	jmp    13dcd <gencode_expr_tree+0x259>
   13cc1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cc5:	48 89 c7             	mov    %rax,%rdi
   13cc8:	e8 fe 02 00 00       	call   13fcb <expr_tree_is_leaf>
   13ccd:	83 f8 01             	cmp    $0x1,%eax
   13cd0:	75 2d                	jne    13cff <gencode_expr_tree+0x18b>
   13cd2:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13cd6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13cda:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13cde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13ce2:	48 89 c7             	mov    %rax,%rdi
   13ce5:	e8 a6 06 00 00       	call   14390 <gencode_case0>
   13cea:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13cee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cf2:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   13cf6:	48 89 50 20          	mov    %rdx,0x20(%rax)
   13cfa:	e9 ce 00 00 00       	jmp    13dcd <gencode_expr_tree+0x259>
   13cff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d03:	48 8b 40 10          	mov    0x10(%rax),%rax
   13d07:	48 89 c7             	mov    %rax,%rdi
   13d0a:	e8 bc 02 00 00       	call   13fcb <expr_tree_is_leaf>
   13d0f:	85 c0                	test   %eax,%eax
   13d11:	74 21                	je     13d34 <gencode_expr_tree+0x1c0>
   13d13:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13d17:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13d1b:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13d1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d23:	48 89 c7             	mov    %rax,%rdi
   13d26:	e8 14 0a 00 00       	call   1473f <gencode_case1>
   13d2b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13d2f:	e9 99 00 00 00       	jmp    13dcd <gencode_expr_tree+0x259>
   13d34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d38:	48 8b 40 08          	mov    0x8(%rax),%rax
   13d3c:	8b 10                	mov    (%rax),%edx
   13d3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d42:	48 8b 40 10          	mov    0x10(%rax),%rax
   13d46:	8b 00                	mov    (%rax),%eax
   13d48:	39 c2                	cmp    %eax,%edx
   13d4a:	7d 1e                	jge    13d6a <gencode_expr_tree+0x1f6>
   13d4c:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13d50:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13d54:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13d58:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d5c:	48 89 c7             	mov    %rax,%rdi
   13d5f:	e8 bd 0b 00 00       	call   14921 <gencode_case2>
   13d64:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13d68:	eb 63                	jmp    13dcd <gencode_expr_tree+0x259>
   13d6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d6e:	48 8b 40 08          	mov    0x8(%rax),%rax
   13d72:	8b 10                	mov    (%rax),%edx
   13d74:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d78:	48 8b 40 10          	mov    0x10(%rax),%rax
   13d7c:	8b 00                	mov    (%rax),%eax
   13d7e:	39 c2                	cmp    %eax,%edx
   13d80:	7c 1e                	jl     13da0 <gencode_expr_tree+0x22c>
   13d82:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   13d86:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13d8a:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   13d8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d92:	48 89 c7             	mov    %rax,%rdi
   13d95:	e8 12 0e 00 00       	call   14bac <gencode_case3>
   13d9a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   13d9e:	eb 2d                	jmp    13dcd <gencode_expr_tree+0x259>
   13da0:	48 8b 05 b9 e2 00 00 	mov    0xe2b9(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   13da7:	48 89 c1             	mov    %rax,%rcx
   13daa:	ba 24 00 00 00       	mov    $0x24,%edx
   13daf:	be 01 00 00 00       	mov    $0x1,%esi
   13db4:	48 8d 05 55 93 00 00 	lea    0x9355(%rip),%rax        # 1d110 <__PRETTY_FUNCTION__.0+0x140>
   13dbb:	48 89 c7             	mov    %rax,%rdi
   13dbe:	e8 8d e7 fe ff       	call   2550 <fwrite@plt>
   13dc3:	bf 01 00 00 00       	mov    $0x1,%edi
   13dc8:	e8 73 e7 fe ff       	call   2540 <exit@plt>
   13dcd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13dd1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13dd5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   13ddc:	00 00
   13dde:	74 05                	je     13de5 <gencode_expr_tree+0x271>
   13de0:	e8 bb e5 fe ff       	call   23a0 <__stack_chk_fail@plt>
   13de5:	c9                   	leave
   13de6:	c3                   	ret

0000000000013de7 <gencode_modulus>:
   13de7:	f3 0f 1e fa          	endbr64
   13deb:	55                   	push   %rbp
   13dec:	48 89 e5             	mov    %rsp,%rbp
   13def:	48 83 ec 70          	sub    $0x70,%rsp
   13df3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   13df7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   13dfb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   13dff:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13e06:	00 00
   13e08:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13e0c:	31 c0                	xor    %eax,%eax
   13e0e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   13e12:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13e16:	48 89 d1             	mov    %rdx,%rcx
   13e19:	48 8d 15 15 93 00 00 	lea    0x9315(%rip),%rdx        # 1d135 <__PRETTY_FUNCTION__.0+0x165>
   13e20:	be 32 00 00 00       	mov    $0x32,%esi
   13e25:	48 89 c7             	mov    %rax,%rdi
   13e28:	b8 00 00 00 00       	mov    $0x0,%eax
   13e2d:	e8 7e e5 fe ff       	call   23b0 <snprintf@plt>
   13e32:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13e36:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13e3a:	48 89 d6             	mov    %rdx,%rsi
   13e3d:	48 89 c7             	mov    %rax,%rdi
   13e40:	e8 69 b6 ff ff       	call   f4ae <add_inst>
   13e45:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13e49:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13e4d:	48 8d 15 f2 92 00 00 	lea    0x92f2(%rip),%rdx        # 1d146 <__PRETTY_FUNCTION__.0+0x176>
   13e54:	be 32 00 00 00       	mov    $0x32,%esi
   13e59:	48 89 c7             	mov    %rax,%rdi
   13e5c:	b8 00 00 00 00       	mov    $0x0,%eax
   13e61:	e8 4a e5 fe ff       	call   23b0 <snprintf@plt>
   13e66:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13e6a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13e6e:	48 89 d6             	mov    %rdx,%rsi
   13e71:	48 89 c7             	mov    %rax,%rdi
   13e74:	e8 35 b6 ff ff       	call   f4ae <add_inst>
   13e79:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13e7d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13e81:	0f b6 00             	movzbl (%rax),%eax
   13e84:	3c 24                	cmp    $0x24,%al
   13e86:	0f 85 af 00 00 00    	jne    13f3b <gencode_modulus+0x154>
   13e8c:	48 8d 05 ba 92 00 00 	lea    0x92ba(%rip),%rax        # 1d14d <__PRETTY_FUNCTION__.0+0x17d>
   13e93:	48 89 c7             	mov    %rax,%rdi
   13e96:	e8 77 eb ff ff       	call   12a12 <find_in_temp>
   13e9b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   13e9f:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   13ea4:	75 13                	jne    13eb9 <gencode_modulus+0xd2>
   13ea6:	48 8d 05 a0 92 00 00 	lea    0x92a0(%rip),%rax        # 1d14d <__PRETTY_FUNCTION__.0+0x17d>
   13ead:	48 89 c7             	mov    %rax,%rdi
   13eb0:	e8 06 e7 ff ff       	call   125bb <add_l_t>
   13eb5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   13eb9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13ebd:	8b 08                	mov    (%rax),%ecx
   13ebf:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13ec3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13ec7:	41 89 c8             	mov    %ecx,%r8d
   13eca:	48 89 d1             	mov    %rdx,%rcx
   13ecd:	48 8d 15 82 92 00 00 	lea    0x9282(%rip),%rdx        # 1d156 <__PRETTY_FUNCTION__.0+0x186>
   13ed4:	be 32 00 00 00       	mov    $0x32,%esi
   13ed9:	48 89 c7             	mov    %rax,%rdi
   13edc:	b8 00 00 00 00       	mov    $0x0,%eax
   13ee1:	e8 ca e4 fe ff       	call   23b0 <snprintf@plt>
   13ee6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13eea:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13eee:	48 89 d6             	mov    %rdx,%rsi
   13ef1:	48 89 c7             	mov    %rax,%rdi
   13ef4:	e8 b5 b5 ff ff       	call   f4ae <add_inst>
   13ef9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13efd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13f01:	8b 10                	mov    (%rax),%edx
   13f03:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13f07:	89 d1                	mov    %edx,%ecx
   13f09:	48 8d 15 5c 92 00 00 	lea    0x925c(%rip),%rdx        # 1d16c <__PRETTY_FUNCTION__.0+0x19c>
   13f10:	be 32 00 00 00       	mov    $0x32,%esi
   13f15:	48 89 c7             	mov    %rax,%rdi
   13f18:	b8 00 00 00 00       	mov    $0x0,%eax
   13f1d:	e8 8e e4 fe ff       	call   23b0 <snprintf@plt>
   13f22:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13f26:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13f2a:	48 89 d6             	mov    %rdx,%rsi
   13f2d:	48 89 c7             	mov    %rax,%rdi
   13f30:	e8 79 b5 ff ff       	call   f4ae <add_inst>
   13f35:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13f39:	eb 3b                	jmp    13f76 <gencode_modulus+0x18f>
   13f3b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13f3f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13f43:	48 89 d1             	mov    %rdx,%rcx
   13f46:	48 8d 15 32 92 00 00 	lea    0x9232(%rip),%rdx        # 1d17f <__PRETTY_FUNCTION__.0+0x1af>
   13f4d:	be 32 00 00 00       	mov    $0x32,%esi
   13f52:	48 89 c7             	mov    %rax,%rdi
   13f55:	b8 00 00 00 00       	mov    $0x0,%eax
   13f5a:	e8 51 e4 fe ff       	call   23b0 <snprintf@plt>
   13f5f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13f63:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13f67:	48 89 d6             	mov    %rdx,%rsi
   13f6a:	48 89 c7             	mov    %rax,%rdi
   13f6d:	e8 3c b5 ff ff       	call   f4ae <add_inst>
   13f72:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13f76:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   13f7a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13f7e:	48 89 d1             	mov    %rdx,%rcx
   13f81:	48 8d 15 02 92 00 00 	lea    0x9202(%rip),%rdx        # 1d18a <__PRETTY_FUNCTION__.0+0x1ba>
   13f88:	be 32 00 00 00       	mov    $0x32,%esi
   13f8d:	48 89 c7             	mov    %rax,%rdi
   13f90:	b8 00 00 00 00       	mov    $0x0,%eax
   13f95:	e8 16 e4 fe ff       	call   23b0 <snprintf@plt>
   13f9a:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   13f9e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13fa2:	48 89 d6             	mov    %rdx,%rsi
   13fa5:	48 89 c7             	mov    %rax,%rdi
   13fa8:	e8 01 b5 ff ff       	call   f4ae <add_inst>
   13fad:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   13fb1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13fb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13fb9:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   13fc0:	00 00
   13fc2:	74 05                	je     13fc9 <gencode_modulus+0x1e2>
   13fc4:	e8 d7 e3 fe ff       	call   23a0 <__stack_chk_fail@plt>
   13fc9:	c9                   	leave
   13fca:	c3                   	ret

0000000000013fcb <expr_tree_is_leaf>:
   13fcb:	f3 0f 1e fa          	endbr64
   13fcf:	55                   	push   %rbp
   13fd0:	48 89 e5             	mov    %rsp,%rbp
   13fd3:	48 83 ec 10          	sub    $0x10,%rsp
   13fd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fdb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13fe0:	75 28                	jne    1400a <expr_tree_is_leaf+0x3f>
   13fe2:	48 8d 05 87 95 00 00 	lea    0x9587(%rip),%rax        # 1d570 <__PRETTY_FUNCTION__.9>
   13fe9:	48 89 c1             	mov    %rax,%rcx
   13fec:	ba e3 00 00 00       	mov    $0xe3,%edx
   13ff1:	48 8d 05 f8 8f 00 00 	lea    0x8ff8(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   13ff8:	48 89 c6             	mov    %rax,%rsi
   13ffb:	48 8d 05 b6 90 00 00 	lea    0x90b6(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   14002:	48 89 c7             	mov    %rax,%rdi
   14005:	e8 c6 e3 fe ff       	call   23d0 <__assert_fail@plt>
   1400a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1400e:	48 8b 40 08          	mov    0x8(%rax),%rax
   14012:	48 85 c0             	test   %rax,%rax
   14015:	75 14                	jne    1402b <expr_tree_is_leaf+0x60>
   14017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1401b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1401f:	48 85 c0             	test   %rax,%rax
   14022:	75 07                	jne    1402b <expr_tree_is_leaf+0x60>
   14024:	b8 01 00 00 00       	mov    $0x1,%eax
   14029:	eb 05                	jmp    14030 <expr_tree_is_leaf+0x65>
   1402b:	b8 00 00 00 00       	mov    $0x0,%eax
   14030:	c9                   	leave
   14031:	c3                   	ret

0000000000014032 <print_expr_tree>:
   14032:	f3 0f 1e fa          	endbr64
   14036:	55                   	push   %rbp
   14037:	48 89 e5             	mov    %rsp,%rbp
   1403a:	48 83 ec 30          	sub    $0x30,%rsp
   1403e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14042:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   14045:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14049:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1404e:	75 28                	jne    14078 <print_expr_tree+0x46>
   14050:	48 8d 05 39 95 00 00 	lea    0x9539(%rip),%rax        # 1d590 <__PRETTY_FUNCTION__.8>
   14057:	48 89 c1             	mov    %rax,%rcx
   1405a:	ba ee 00 00 00       	mov    $0xee,%edx
   1405f:	48 8d 05 8a 8f 00 00 	lea    0x8f8a(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14066:	48 89 c6             	mov    %rax,%rsi
   14069:	48 8d 05 48 90 00 00 	lea    0x9048(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   14070:	48 89 c7             	mov    %rax,%rdi
   14073:	e8 58 e3 fe ff       	call   23d0 <__assert_fail@plt>
   14078:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1407c:	48 8b 40 18          	mov    0x18(%rax),%rax
   14080:	48 85 c0             	test   %rax,%rax
   14083:	75 28                	jne    140ad <print_expr_tree+0x7b>
   14085:	48 8d 05 04 95 00 00 	lea    0x9504(%rip),%rax        # 1d590 <__PRETTY_FUNCTION__.8>
   1408c:	48 89 c1             	mov    %rax,%rcx
   1408f:	ba ef 00 00 00       	mov    $0xef,%edx
   14094:	48 8d 05 55 8f 00 00 	lea    0x8f55(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   1409b:	48 89 c6             	mov    %rax,%rsi
   1409e:	48 8d 05 20 90 00 00 	lea    0x9020(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   140a5:	48 89 c7             	mov    %rax,%rdi
   140a8:	e8 23 e3 fe ff       	call   23d0 <__assert_fail@plt>
   140ad:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   140b4:	eb 24                	jmp    140da <print_expr_tree+0xa8>
   140b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140ba:	48 89 c1             	mov    %rax,%rcx
   140bd:	ba 02 00 00 00       	mov    $0x2,%edx
   140c2:	be 01 00 00 00       	mov    $0x1,%esi
   140c7:	48 8d 05 cd 90 00 00 	lea    0x90cd(%rip),%rax        # 1d19b <__PRETTY_FUNCTION__.0+0x1cb>
   140ce:	48 89 c7             	mov    %rax,%rdi
   140d1:	e8 7a e4 fe ff       	call   2550 <fwrite@plt>
   140d6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   140da:	8b 45 fc             	mov    -0x4(%rbp),%eax
   140dd:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   140e0:	7c d4                	jl     140b6 <print_expr_tree+0x84>
   140e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140e6:	8b 08                	mov    (%rax),%ecx
   140e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140ec:	48 8b 40 18          	mov    0x18(%rax),%rax
   140f0:	8b 50 04             	mov    0x4(%rax),%edx
   140f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140f7:	48 8d 35 a0 90 00 00 	lea    0x90a0(%rip),%rsi        # 1d19e <__PRETTY_FUNCTION__.0+0x1ce>
   140fe:	48 89 c7             	mov    %rax,%rdi
   14101:	b8 00 00 00 00       	mov    $0x0,%eax
   14106:	e8 65 e3 fe ff       	call   2470 <fprintf@plt>
   1410b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1410f:	48 8b 40 08          	mov    0x8(%rax),%rax
   14113:	48 85 c0             	test   %rax,%rax
   14116:	74 71                	je     14189 <print_expr_tree+0x157>
   14118:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1411f:	eb 24                	jmp    14145 <print_expr_tree+0x113>
   14121:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14125:	48 89 c1             	mov    %rax,%rcx
   14128:	ba 02 00 00 00       	mov    $0x2,%edx
   1412d:	be 01 00 00 00       	mov    $0x1,%esi
   14132:	48 8d 05 62 90 00 00 	lea    0x9062(%rip),%rax        # 1d19b <__PRETTY_FUNCTION__.0+0x1cb>
   14139:	48 89 c7             	mov    %rax,%rdi
   1413c:	e8 0f e4 fe ff       	call   2550 <fwrite@plt>
   14141:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   14145:	8b 45 fc             	mov    -0x4(%rbp),%eax
   14148:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   1414b:	7c d4                	jl     14121 <print_expr_tree+0xef>
   1414d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14151:	48 89 c1             	mov    %rax,%rcx
   14154:	ba 07 00 00 00       	mov    $0x7,%edx
   14159:	be 01 00 00 00       	mov    $0x1,%esi
   1415e:	48 8d 05 4a 90 00 00 	lea    0x904a(%rip),%rax        # 1d1af <__PRETTY_FUNCTION__.0+0x1df>
   14165:	48 89 c7             	mov    %rax,%rdi
   14168:	e8 e3 e3 fe ff       	call   2550 <fwrite@plt>
   1416d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14170:	8d 48 01             	lea    0x1(%rax),%ecx
   14173:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14177:	48 8b 40 08          	mov    0x8(%rax),%rax
   1417b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1417f:	89 ce                	mov    %ecx,%esi
   14181:	48 89 c7             	mov    %rax,%rdi
   14184:	e8 a9 fe ff ff       	call   14032 <print_expr_tree>
   14189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1418d:	48 8b 40 10          	mov    0x10(%rax),%rax
   14191:	48 85 c0             	test   %rax,%rax
   14194:	74 71                	je     14207 <print_expr_tree+0x1d5>
   14196:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1419d:	eb 24                	jmp    141c3 <print_expr_tree+0x191>
   1419f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141a3:	48 89 c1             	mov    %rax,%rcx
   141a6:	ba 02 00 00 00       	mov    $0x2,%edx
   141ab:	be 01 00 00 00       	mov    $0x1,%esi
   141b0:	48 8d 05 e4 8f 00 00 	lea    0x8fe4(%rip),%rax        # 1d19b <__PRETTY_FUNCTION__.0+0x1cb>
   141b7:	48 89 c7             	mov    %rax,%rdi
   141ba:	e8 91 e3 fe ff       	call   2550 <fwrite@plt>
   141bf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   141c3:	8b 45 fc             	mov    -0x4(%rbp),%eax
   141c6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   141c9:	7c d4                	jl     1419f <print_expr_tree+0x16d>
   141cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141cf:	48 89 c1             	mov    %rax,%rcx
   141d2:	ba 08 00 00 00       	mov    $0x8,%edx
   141d7:	be 01 00 00 00       	mov    $0x1,%esi
   141dc:	48 8d 05 d4 8f 00 00 	lea    0x8fd4(%rip),%rax        # 1d1b7 <__PRETTY_FUNCTION__.0+0x1e7>
   141e3:	48 89 c7             	mov    %rax,%rdi
   141e6:	e8 65 e3 fe ff       	call   2550 <fwrite@plt>
   141eb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   141ee:	8d 48 01             	lea    0x1(%rax),%ecx
   141f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141f5:	48 8b 40 10          	mov    0x10(%rax),%rax
   141f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   141fd:	89 ce                	mov    %ecx,%esi
   141ff:	48 89 c7             	mov    %rax,%rdi
   14202:	e8 2b fe ff ff       	call   14032 <print_expr_tree>
   14207:	90                   	nop
   14208:	c9                   	leave
   14209:	c3                   	ret

000000000001420a <free_expr_tree>:
   1420a:	f3 0f 1e fa          	endbr64
   1420e:	55                   	push   %rbp
   1420f:	48 89 e5             	mov    %rsp,%rbp
   14212:	48 83 ec 10          	sub    $0x10,%rsp
   14216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1421a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1421f:	74 2c                	je     1424d <free_expr_tree+0x43>
   14221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14225:	48 8b 40 08          	mov    0x8(%rax),%rax
   14229:	48 89 c7             	mov    %rax,%rdi
   1422c:	e8 d9 ff ff ff       	call   1420a <free_expr_tree>
   14231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14235:	48 8b 40 10          	mov    0x10(%rax),%rax
   14239:	48 89 c7             	mov    %rax,%rdi
   1423c:	e8 c9 ff ff ff       	call   1420a <free_expr_tree>
   14241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14245:	48 89 c7             	mov    %rax,%rdi
   14248:	e8 a3 e0 fe ff       	call   22f0 <free@plt>
   1424d:	90                   	nop
   1424e:	c9                   	leave
   1424f:	c3                   	ret

0000000000014250 <gencode_sign_term>:
   14250:	f3 0f 1e fa          	endbr64
   14254:	55                   	push   %rbp
   14255:	48 89 e5             	mov    %rsp,%rbp
   14258:	48 83 ec 60          	sub    $0x60,%rsp
   1425c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   14260:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   14264:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   14268:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1426c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14273:	00 00
   14275:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14279:	31 c0                	xor    %eax,%eax
   1427b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14280:	75 28                	jne    142aa <gencode_sign_term+0x5a>
   14282:	48 8d 05 17 93 00 00 	lea    0x9317(%rip),%rax        # 1d5a0 <__PRETTY_FUNCTION__.7>
   14289:	48 89 c1             	mov    %rax,%rcx
   1428c:	ba 16 01 00 00       	mov    $0x116,%edx
   14291:	48 8d 05 58 8d 00 00 	lea    0x8d58(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14298:	48 89 c6             	mov    %rax,%rsi
   1429b:	48 8d 05 16 8e 00 00 	lea    0x8e16(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   142a2:	48 89 c7             	mov    %rax,%rdi
   142a5:	e8 26 e1 fe ff       	call   23d0 <__assert_fail@plt>
   142aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   142ae:	48 8b 40 18          	mov    0x18(%rax),%rax
   142b2:	48 85 c0             	test   %rax,%rax
   142b5:	75 28                	jne    142df <gencode_sign_term+0x8f>
   142b7:	48 8d 05 e2 92 00 00 	lea    0x92e2(%rip),%rax        # 1d5a0 <__PRETTY_FUNCTION__.7>
   142be:	48 89 c1             	mov    %rax,%rcx
   142c1:	ba 17 01 00 00       	mov    $0x117,%edx
   142c6:	48 8d 05 23 8d 00 00 	lea    0x8d23(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   142cd:	48 89 c6             	mov    %rax,%rsi
   142d0:	48 8d 05 ee 8d 00 00 	lea    0x8dee(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   142d7:	48 89 c7             	mov    %rax,%rdi
   142da:	e8 f1 e0 fe ff       	call   23d0 <__assert_fail@plt>
   142df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   142e3:	48 8b 40 18          	mov    0x18(%rax),%rax
   142e7:	8b 40 04             	mov    0x4(%rax),%eax
   142ea:	83 f8 01             	cmp    $0x1,%eax
   142ed:	74 28                	je     14317 <gencode_sign_term+0xc7>
   142ef:	48 8d 05 aa 92 00 00 	lea    0x92aa(%rip),%rax        # 1d5a0 <__PRETTY_FUNCTION__.7>
   142f6:	48 89 c1             	mov    %rax,%rcx
   142f9:	ba 18 01 00 00       	mov    $0x118,%edx
   142fe:	48 8d 05 eb 8c 00 00 	lea    0x8ceb(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14305:	48 89 c6             	mov    %rax,%rsi
   14308:	48 8d 05 b1 8e 00 00 	lea    0x8eb1(%rip),%rax        # 1d1c0 <__PRETTY_FUNCTION__.0+0x1f0>
   1430f:	48 89 c7             	mov    %rax,%rdi
   14312:	e8 b9 e0 fe ff       	call   23d0 <__assert_fail@plt>
   14317:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1431b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1431f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   14323:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14327:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   1432b:	48 89 c7             	mov    %rax,%rdi
   1432e:	e8 41 f8 ff ff       	call   13b74 <gencode_expr_tree>
   14333:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14337:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1433b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1433f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14343:	48 89 d1             	mov    %rdx,%rcx
   14346:	48 8d 15 96 8e 00 00 	lea    0x8e96(%rip),%rdx        # 1d1e3 <__PRETTY_FUNCTION__.0+0x213>
   1434d:	be 32 00 00 00       	mov    $0x32,%esi
   14352:	48 89 c7             	mov    %rax,%rdi
   14355:	b8 00 00 00 00       	mov    $0x0,%eax
   1435a:	e8 51 e0 fe ff       	call   23b0 <snprintf@plt>
   1435f:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14363:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14367:	48 89 d6             	mov    %rdx,%rsi
   1436a:	48 89 c7             	mov    %rax,%rdi
   1436d:	e8 3c b1 ff ff       	call   f4ae <add_inst>
   14372:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14376:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1437a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1437e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14385:	00 00
   14387:	74 05                	je     1438e <gencode_sign_term+0x13e>
   14389:	e8 12 e0 fe ff       	call   23a0 <__stack_chk_fail@plt>
   1438e:	c9                   	leave
   1438f:	c3                   	ret

0000000000014390 <gencode_case0>:
   14390:	f3 0f 1e fa          	endbr64
   14394:	55                   	push   %rbp
   14395:	48 89 e5             	mov    %rsp,%rbp
   14398:	48 81 ec a0 04 00 00 	sub    $0x4a0,%rsp
   1439f:	48 89 bd 78 fb ff ff 	mov    %rdi,-0x488(%rbp)
   143a6:	48 89 b5 70 fb ff ff 	mov    %rsi,-0x490(%rbp)
   143ad:	48 89 95 68 fb ff ff 	mov    %rdx,-0x498(%rbp)
   143b4:	48 89 8d 60 fb ff ff 	mov    %rcx,-0x4a0(%rbp)
   143bb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   143c2:	00 00
   143c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   143c8:	31 c0                	xor    %eax,%eax
   143ca:	48 8b 05 8f dc 00 00 	mov    0xdc8f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   143d1:	48 89 c1             	mov    %rax,%rcx
   143d4:	ba 0e 00 00 00       	mov    $0xe,%edx
   143d9:	be 01 00 00 00       	mov    $0x1,%esi
   143de:	48 8d 05 08 8e 00 00 	lea    0x8e08(%rip),%rax        # 1d1ed <__PRETTY_FUNCTION__.0+0x21d>
   143e5:	48 89 c7             	mov    %rax,%rdi
   143e8:	e8 63 e1 fe ff       	call   2550 <fwrite@plt>
   143ed:	48 83 bd 78 fb ff ff 	cmpq   $0x0,-0x488(%rbp)
   143f4:	00
   143f5:	75 28                	jne    1441f <gencode_case0+0x8f>
   143f7:	48 8d 05 ba 91 00 00 	lea    0x91ba(%rip),%rax        # 1d5b8 <__PRETTY_FUNCTION__.6>
   143fe:	48 89 c1             	mov    %rax,%rcx
   14401:	ba 2a 01 00 00       	mov    $0x12a,%edx
   14406:	48 8d 05 e3 8b 00 00 	lea    0x8be3(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   1440d:	48 89 c6             	mov    %rax,%rsi
   14410:	48 8d 05 a1 8c 00 00 	lea    0x8ca1(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   14417:	48 89 c7             	mov    %rax,%rdi
   1441a:	e8 b1 df fe ff       	call   23d0 <__assert_fail@plt>
   1441f:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
   14426:	48 8b 40 18          	mov    0x18(%rax),%rax
   1442a:	48 85 c0             	test   %rax,%rax
   1442d:	75 28                	jne    14457 <gencode_case0+0xc7>
   1442f:	48 8d 05 82 91 00 00 	lea    0x9182(%rip),%rax        # 1d5b8 <__PRETTY_FUNCTION__.6>
   14436:	48 89 c1             	mov    %rax,%rcx
   14439:	ba 2b 01 00 00       	mov    $0x12b,%edx
   1443e:	48 8d 05 ab 8b 00 00 	lea    0x8bab(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14445:	48 89 c6             	mov    %rax,%rsi
   14448:	48 8d 05 76 8c 00 00 	lea    0x8c76(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   1444f:	48 89 c7             	mov    %rax,%rdi
   14452:	e8 79 df fe ff       	call   23d0 <__assert_fail@plt>
   14457:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
   1445e:	48 8b 40 18          	mov    0x18(%rax),%rax
   14462:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
   14469:	48 83 bd 60 fb ff ff 	cmpq   $0x0,-0x4a0(%rbp)
   14470:	00
   14471:	75 28                	jne    1449b <gencode_case0+0x10b>
   14473:	48 8d 05 3e 91 00 00 	lea    0x913e(%rip),%rax        # 1d5b8 <__PRETTY_FUNCTION__.6>
   1447a:	48 89 c1             	mov    %rax,%rcx
   1447d:	ba 32 01 00 00       	mov    $0x132,%edx
   14482:	48 8d 05 67 8b 00 00 	lea    0x8b67(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14489:	48 89 c6             	mov    %rax,%rsi
   1448c:	48 8d 05 69 8d 00 00 	lea    0x8d69(%rip),%rax        # 1d1fc <__PRETTY_FUNCTION__.0+0x22c>
   14493:	48 89 c7             	mov    %rax,%rdi
   14496:	e8 35 df fe ff       	call   23d0 <__assert_fail@plt>
   1449b:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   144a2:	8b 40 04             	mov    0x4(%rax),%eax
   144a5:	83 f8 06             	cmp    $0x6,%eax
   144a8:	0f 85 db 00 00 00    	jne    14589 <gencode_case0+0x1f9>
   144ae:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   144b5:	48 8b 48 20          	mov    0x20(%rax),%rcx
   144b9:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   144c0:	48 8b 40 18          	mov    0x18(%rax),%rax
   144c4:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
   144cb:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
   144d2:	48 89 c7             	mov    %rax,%rdi
   144d5:	e8 8f da ff ff       	call   11f69 <codegen_pass_arguments>
   144da:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   144e1:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   144e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   144ec:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   144f3:	48 89 d1             	mov    %rdx,%rcx
   144f6:	48 8d 15 12 8d 00 00 	lea    0x8d12(%rip),%rdx        # 1d20f <__PRETTY_FUNCTION__.0+0x23f>
   144fd:	be 32 00 00 00       	mov    $0x32,%esi
   14502:	48 89 c7             	mov    %rax,%rdi
   14505:	b8 00 00 00 00       	mov    $0x0,%eax
   1450a:	e8 a1 de fe ff       	call   23b0 <snprintf@plt>
   1450f:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14516:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   1451d:	48 89 d6             	mov    %rdx,%rsi
   14520:	48 89 c7             	mov    %rax,%rdi
   14523:	e8 86 af ff ff       	call   f4ae <add_inst>
   14528:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   1452f:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   14536:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1453a:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   14541:	48 89 d1             	mov    %rdx,%rcx
   14544:	48 8d 15 ce 8c 00 00 	lea    0x8cce(%rip),%rdx        # 1d219 <__PRETTY_FUNCTION__.0+0x249>
   1454b:	be 32 00 00 00       	mov    $0x32,%esi
   14550:	48 89 c7             	mov    %rax,%rdi
   14553:	b8 00 00 00 00       	mov    $0x0,%eax
   14558:	e8 53 de fe ff       	call   23b0 <snprintf@plt>
   1455d:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14564:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   1456b:	48 89 d6             	mov    %rdx,%rsi
   1456e:	48 89 c7             	mov    %rax,%rdi
   14571:	e8 38 af ff ff       	call   f4ae <add_inst>
   14576:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   1457d:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14584:	e9 a0 01 00 00       	jmp    14729 <gencode_case0+0x399>
   14589:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   14590:	8b 40 04             	mov    0x4(%rax),%eax
   14593:	83 f8 09             	cmp    $0x9,%eax
   14596:	0f 85 e6 00 00 00    	jne    14682 <gencode_case0+0x2f2>
   1459c:	48 8b 85 68 fb ff ff 	mov    -0x498(%rbp),%rax
   145a3:	8b 40 04             	mov    0x4(%rax),%eax
   145a6:	8d 48 01             	lea    0x1(%rax),%ecx
   145a9:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
   145b0:	89 4a 04             	mov    %ecx,0x4(%rdx)
   145b3:	48 8d bd 90 fb ff ff 	lea    -0x470(%rbp),%rdi
   145ba:	89 c1                	mov    %eax,%ecx
   145bc:	48 8d 05 67 8c 00 00 	lea    0x8c67(%rip),%rax        # 1d22a <__PRETTY_FUNCTION__.0+0x25a>
   145c3:	48 89 c2             	mov    %rax,%rdx
   145c6:	be 14 00 00 00       	mov    $0x14,%esi
   145cb:	b8 00 00 00 00       	mov    $0x0,%eax
   145d0:	e8 db dd fe ff       	call   23b0 <snprintf@plt>
   145d5:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   145dc:	48 8b 48 08          	mov    0x8(%rax),%rcx
   145e0:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
   145e7:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
   145ee:	49 89 c8             	mov    %rcx,%r8
   145f1:	48 89 d1             	mov    %rdx,%rcx
   145f4:	48 8d 15 35 8c 00 00 	lea    0x8c35(%rip),%rdx        # 1d230 <__PRETTY_FUNCTION__.0+0x260>
   145fb:	be 00 04 00 00       	mov    $0x400,%esi
   14600:	48 89 c7             	mov    %rax,%rdi
   14603:	b8 00 00 00 00       	mov    $0x0,%eax
   14608:	e8 a3 dd fe ff       	call   23b0 <snprintf@plt>
   1460d:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   14614:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   1461b:	48 89 d6             	mov    %rdx,%rsi
   1461e:	48 89 c7             	mov    %rax,%rdi
   14621:	e8 88 ae ff ff       	call   f4ae <add_inst>
   14626:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   1462d:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   14634:	48 8b 08             	mov    (%rax),%rcx
   14637:	48 8d 95 90 fb ff ff 	lea    -0x470(%rbp),%rdx
   1463e:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   14645:	49 89 c8             	mov    %rcx,%r8
   14648:	48 89 d1             	mov    %rdx,%rcx
   1464b:	48 8d 15 0a 8c 00 00 	lea    0x8c0a(%rip),%rdx        # 1d25c <__PRETTY_FUNCTION__.0+0x28c>
   14652:	be 32 00 00 00       	mov    $0x32,%esi
   14657:	48 89 c7             	mov    %rax,%rdi
   1465a:	b8 00 00 00 00       	mov    $0x0,%eax
   1465f:	e8 4c dd fe ff       	call   23b0 <snprintf@plt>
   14664:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   1466b:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   14672:	48 89 d6             	mov    %rdx,%rsi
   14675:	48 89 c7             	mov    %rax,%rdi
   14678:	e8 31 ae ff ff       	call   f4ae <add_inst>
   1467d:	e9 a7 00 00 00       	jmp    14729 <gencode_case0+0x399>
   14682:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   14689:	48 8b b5 70 fb ff ff 	mov    -0x490(%rbp),%rsi
   14690:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
   14697:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   1469c:	48 89 c7             	mov    %rax,%rdi
   1469f:	e8 6a 07 00 00       	call   14e0e <gencode_leaf_var>
   146a4:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
   146ab:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   146b2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   146b6:	48 8b 05 a3 d9 00 00 	mov    0xd9a3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   146bd:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   146c4:	48 8d 35 ad 8b 00 00 	lea    0x8bad(%rip),%rsi        # 1d278 <__PRETTY_FUNCTION__.0+0x2a8>
   146cb:	48 89 c7             	mov    %rax,%rdi
   146ce:	b8 00 00 00 00       	mov    $0x0,%eax
   146d3:	e8 98 dd fe ff       	call   2470 <fprintf@plt>
   146d8:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
   146df:	48 8b 48 08          	mov    0x8(%rax),%rcx
   146e3:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
   146ea:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   146f1:	49 89 c8             	mov    %rcx,%r8
   146f4:	48 89 d1             	mov    %rdx,%rcx
   146f7:	48 8d 15 04 8a 00 00 	lea    0x8a04(%rip),%rdx        # 1d102 <__PRETTY_FUNCTION__.0+0x132>
   146fe:	be 32 00 00 00       	mov    $0x32,%esi
   14703:	48 89 c7             	mov    %rax,%rdi
   14706:	b8 00 00 00 00       	mov    $0x0,%eax
   1470b:	e8 a0 dc fe ff       	call   23b0 <snprintf@plt>
   14710:	48 8d 95 b0 fb ff ff 	lea    -0x450(%rbp),%rdx
   14717:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
   1471e:	48 89 d6             	mov    %rdx,%rsi
   14721:	48 89 c7             	mov    %rax,%rdi
   14724:	e8 85 ad ff ff       	call   f4ae <add_inst>
   14729:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1472d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14734:	00 00
   14736:	74 05                	je     1473d <gencode_case0+0x3ad>
   14738:	e8 63 dc fe ff       	call   23a0 <__stack_chk_fail@plt>
   1473d:	c9                   	leave
   1473e:	c3                   	ret

000000000001473f <gencode_case1>:
   1473f:	f3 0f 1e fa          	endbr64
   14743:	55                   	push   %rbp
   14744:	48 89 e5             	mov    %rsp,%rbp
   14747:	48 83 ec 60          	sub    $0x60,%rsp
   1474b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1474f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   14753:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   14757:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1475b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14762:	00 00
   14764:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14768:	31 c0                	xor    %eax,%eax
   1476a:	48 8b 05 ef d8 00 00 	mov    0xd8ef(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14771:	48 89 c1             	mov    %rax,%rcx
   14774:	ba 0e 00 00 00       	mov    $0xe,%edx
   14779:	be 01 00 00 00       	mov    $0x1,%esi
   1477e:	48 8d 05 1d 8b 00 00 	lea    0x8b1d(%rip),%rax        # 1d2a2 <__PRETTY_FUNCTION__.0+0x2d2>
   14785:	48 89 c7             	mov    %rax,%rdi
   14788:	e8 c3 dd fe ff       	call   2550 <fwrite@plt>
   1478d:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14792:	75 28                	jne    147bc <gencode_case1+0x7d>
   14794:	48 8d 05 2d 8e 00 00 	lea    0x8e2d(%rip),%rax        # 1d5c8 <__PRETTY_FUNCTION__.5>
   1479b:	48 89 c1             	mov    %rax,%rcx
   1479e:	ba 5a 01 00 00       	mov    $0x15a,%edx
   147a3:	48 8d 05 46 88 00 00 	lea    0x8846(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   147aa:	48 89 c6             	mov    %rax,%rsi
   147ad:	48 8d 05 04 89 00 00 	lea    0x8904(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   147b4:	48 89 c7             	mov    %rax,%rdi
   147b7:	e8 14 dc fe ff       	call   23d0 <__assert_fail@plt>
   147bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   147c0:	48 8b 40 18          	mov    0x18(%rax),%rax
   147c4:	48 85 c0             	test   %rax,%rax
   147c7:	75 28                	jne    147f1 <gencode_case1+0xb2>
   147c9:	48 8d 05 f8 8d 00 00 	lea    0x8df8(%rip),%rax        # 1d5c8 <__PRETTY_FUNCTION__.5>
   147d0:	48 89 c1             	mov    %rax,%rcx
   147d3:	ba 5b 01 00 00       	mov    $0x15b,%edx
   147d8:	48 8d 05 11 88 00 00 	lea    0x8811(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   147df:	48 89 c6             	mov    %rax,%rsi
   147e2:	48 8d 05 dc 88 00 00 	lea    0x88dc(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   147e9:	48 89 c7             	mov    %rax,%rdi
   147ec:	e8 df db fe ff       	call   23d0 <__assert_fail@plt>
   147f1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   147f5:	48 8b 40 10          	mov    0x10(%rax),%rax
   147f9:	48 85 c0             	test   %rax,%rax
   147fc:	75 28                	jne    14826 <gencode_case1+0xe7>
   147fe:	48 8d 05 c3 8d 00 00 	lea    0x8dc3(%rip),%rax        # 1d5c8 <__PRETTY_FUNCTION__.5>
   14805:	48 89 c1             	mov    %rax,%rcx
   14808:	ba 5c 01 00 00       	mov    $0x15c,%edx
   1480d:	48 8d 05 dc 87 00 00 	lea    0x87dc(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14814:	48 89 c6             	mov    %rax,%rsi
   14817:	48 8d 05 93 8a 00 00 	lea    0x8a93(%rip),%rax        # 1d2b1 <__PRETTY_FUNCTION__.0+0x2e1>
   1481e:	48 89 c7             	mov    %rax,%rdi
   14821:	e8 aa db fe ff       	call   23d0 <__assert_fail@plt>
   14826:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1482a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1482e:	48 8b 40 18          	mov    0x18(%rax),%rax
   14832:	48 85 c0             	test   %rax,%rax
   14835:	75 28                	jne    1485f <gencode_case1+0x120>
   14837:	48 8d 05 8a 8d 00 00 	lea    0x8d8a(%rip),%rax        # 1d5c8 <__PRETTY_FUNCTION__.5>
   1483e:	48 89 c1             	mov    %rax,%rcx
   14841:	ba 5d 01 00 00       	mov    $0x15d,%edx
   14846:	48 8d 05 a3 87 00 00 	lea    0x87a3(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   1484d:	48 89 c6             	mov    %rax,%rsi
   14850:	48 8d 05 79 8a 00 00 	lea    0x8a79(%rip),%rax        # 1d2d0 <__PRETTY_FUNCTION__.0+0x300>
   14857:	48 89 c7             	mov    %rax,%rdi
   1485a:	e8 71 db fe ff       	call   23d0 <__assert_fail@plt>
   1485f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14863:	48 8b 40 08          	mov    0x8(%rax),%rax
   14867:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   1486b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1486f:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   14873:	48 89 c7             	mov    %rax,%rdi
   14876:	e8 f9 f2 ff ff       	call   13b74 <gencode_expr_tree>
   1487b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1487f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14883:	48 8b 40 18          	mov    0x18(%rax),%rax
   14887:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1488b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1488f:	48 8b 40 10          	mov    0x10(%rax),%rax
   14893:	48 8b 40 18          	mov    0x18(%rax),%rax
   14897:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1489b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   148a0:	75 28                	jne    148ca <gencode_case1+0x18b>
   148a2:	48 8d 05 1f 8d 00 00 	lea    0x8d1f(%rip),%rax        # 1d5c8 <__PRETTY_FUNCTION__.5>
   148a9:	48 89 c1             	mov    %rax,%rcx
   148ac:	ba 66 01 00 00       	mov    $0x166,%edx
   148b1:	48 8d 05 38 87 00 00 	lea    0x8738(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   148b8:	48 89 c6             	mov    %rax,%rsi
   148bb:	48 8d 05 2d 8a 00 00 	lea    0x8a2d(%rip),%rax        # 1d2ef <__PRETTY_FUNCTION__.0+0x31f>
   148c2:	48 89 c7             	mov    %rax,%rdi
   148c5:	e8 06 db fe ff       	call   23d0 <__assert_fail@plt>
   148ca:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   148ce:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   148d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148d6:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   148db:	48 89 c7             	mov    %rax,%rdi
   148de:	e8 2b 05 00 00       	call   14e0e <gencode_leaf_var>
   148e3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   148e7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   148eb:	48 8b 70 08          	mov    0x8(%rax),%rsi
   148ef:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   148f3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   148f7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   148fb:	48 89 c7             	mov    %rax,%rdi
   148fe:	e8 29 07 00 00       	call   1502c <gencode_op>
   14903:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   14907:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1490b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1490f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14916:	00 00
   14918:	74 05                	je     1491f <gencode_case1+0x1e0>
   1491a:	e8 81 da fe ff       	call   23a0 <__stack_chk_fail@plt>
   1491f:	c9                   	leave
   14920:	c3                   	ret

0000000000014921 <gencode_case2>:
   14921:	f3 0f 1e fa          	endbr64
   14925:	55                   	push   %rbp
   14926:	48 89 e5             	mov    %rsp,%rbp
   14929:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   14930:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   14934:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   14938:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   1493f:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   14946:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1494d:	00 00
   1494f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14953:	31 c0                	xor    %eax,%eax
   14955:	48 8b 05 04 d7 00 00 	mov    0xd704(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1495c:	48 89 c1             	mov    %rax,%rcx
   1495f:	ba 0e 00 00 00       	mov    $0xe,%edx
   14964:	be 01 00 00 00       	mov    $0x1,%esi
   14969:	48 8d 05 92 89 00 00 	lea    0x8992(%rip),%rax        # 1d302 <__PRETTY_FUNCTION__.0+0x332>
   14970:	48 89 c7             	mov    %rax,%rdi
   14973:	e8 d8 db fe ff       	call   2550 <fwrite@plt>
   14978:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   1497d:	75 28                	jne    149a7 <gencode_case2+0x86>
   1497f:	48 8d 05 52 8c 00 00 	lea    0x8c52(%rip),%rax        # 1d5d8 <__PRETTY_FUNCTION__.4>
   14986:	48 89 c1             	mov    %rax,%rcx
   14989:	ba 74 01 00 00       	mov    $0x174,%edx
   1498e:	48 8d 05 5b 86 00 00 	lea    0x865b(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14995:	48 89 c6             	mov    %rax,%rsi
   14998:	48 8d 05 19 87 00 00 	lea    0x8719(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   1499f:	48 89 c7             	mov    %rax,%rdi
   149a2:	e8 29 da fe ff       	call   23d0 <__assert_fail@plt>
   149a7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   149ab:	48 8b 40 18          	mov    0x18(%rax),%rax
   149af:	48 85 c0             	test   %rax,%rax
   149b2:	75 28                	jne    149dc <gencode_case2+0xbb>
   149b4:	48 8d 05 1d 8c 00 00 	lea    0x8c1d(%rip),%rax        # 1d5d8 <__PRETTY_FUNCTION__.4>
   149bb:	48 89 c1             	mov    %rax,%rcx
   149be:	ba 75 01 00 00       	mov    $0x175,%edx
   149c3:	48 8d 05 26 86 00 00 	lea    0x8626(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   149ca:	48 89 c6             	mov    %rax,%rsi
   149cd:	48 8d 05 f1 86 00 00 	lea    0x86f1(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   149d4:	48 89 c7             	mov    %rax,%rdi
   149d7:	e8 f4 d9 fe ff       	call   23d0 <__assert_fail@plt>
   149dc:	b8 00 00 00 00       	mov    $0x0,%eax
   149e1:	e8 ab df ff ff       	call   12991 <get_reg_stack>
   149e6:	48 89 c2             	mov    %rax,%rdx
   149e9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   149ed:	48 89 c6             	mov    %rax,%rsi
   149f0:	48 89 d7             	mov    %rdx,%rdi
   149f3:	e8 5d e8 ff ff       	call   13255 <get_free_reg>
   149f8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   149fc:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   14a01:	0f 85 fb 00 00 00    	jne    14b02 <gencode_case2+0x1e1>
   14a07:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14a0b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14a0f:	48 8b 40 10          	mov    0x10(%rax),%rax
   14a13:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14a1a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14a21:	48 89 c7             	mov    %rax,%rdi
   14a24:	e8 4b f1 ff ff       	call   13b74 <gencode_expr_tree>
   14a29:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14a2d:	48 8d 05 dd 88 00 00 	lea    0x88dd(%rip),%rax        # 1d311 <__PRETTY_FUNCTION__.0+0x341>
   14a34:	48 89 c7             	mov    %rax,%rdi
   14a37:	e8 7f db ff ff       	call   125bb <add_l_t>
   14a3c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14a40:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14a44:	8b 08                	mov    (%rax),%ecx
   14a46:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14a4d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14a51:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14a55:	41 89 c8             	mov    %ecx,%r8d
   14a58:	48 89 d1             	mov    %rdx,%rcx
   14a5b:	48 8d 15 f4 86 00 00 	lea    0x86f4(%rip),%rdx        # 1d156 <__PRETTY_FUNCTION__.0+0x186>
   14a62:	be 32 00 00 00       	mov    $0x32,%esi
   14a67:	48 89 c7             	mov    %rax,%rdi
   14a6a:	b8 00 00 00 00       	mov    $0x0,%eax
   14a6f:	e8 3c d9 fe ff       	call   23b0 <snprintf@plt>
   14a74:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14a78:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14a7c:	48 89 d6             	mov    %rdx,%rsi
   14a7f:	48 89 c7             	mov    %rax,%rdi
   14a82:	e8 27 aa ff ff       	call   f4ae <add_inst>
   14a87:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14a8b:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14a8f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14a93:	48 8b 40 08          	mov    0x8(%rax),%rax
   14a97:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14a9e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14aa5:	48 89 c7             	mov    %rax,%rdi
   14aa8:	e8 c7 f0 ff ff       	call   13b74 <gencode_expr_tree>
   14aad:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14ab1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14ab5:	8b 10                	mov    (%rax),%edx
   14ab7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14abb:	89 d1                	mov    %edx,%ecx
   14abd:	48 8d 15 53 88 00 00 	lea    0x8853(%rip),%rdx        # 1d317 <__PRETTY_FUNCTION__.0+0x347>
   14ac4:	be 1e 00 00 00       	mov    $0x1e,%esi
   14ac9:	48 89 c7             	mov    %rax,%rdi
   14acc:	b8 00 00 00 00       	mov    $0x0,%eax
   14ad1:	e8 da d8 fe ff       	call   23b0 <snprintf@plt>
   14ad6:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14ada:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14ae1:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14ae5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14ae9:	48 8b 40 18          	mov    0x18(%rax),%rax
   14aed:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   14af1:	48 89 c7             	mov    %rax,%rdi
   14af4:	e8 33 05 00 00       	call   1502c <gencode_op>
   14af9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14afd:	e9 90 00 00 00       	jmp    14b92 <gencode_case2+0x271>
   14b02:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14b06:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14b0a:	48 8b 40 10          	mov    0x10(%rax),%rax
   14b0e:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   14b12:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14b19:	48 89 c7             	mov    %rax,%rdi
   14b1c:	e8 53 f0 ff ff       	call   13b74 <gencode_expr_tree>
   14b21:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14b25:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14b29:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14b2d:	48 8b 40 08          	mov    0x8(%rax),%rax
   14b31:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14b38:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14b3f:	48 89 c7             	mov    %rax,%rdi
   14b42:	e8 2d f0 ff ff       	call   13b74 <gencode_expr_tree>
   14b47:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14b4b:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14b4f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14b53:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14b57:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14b5e:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14b62:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14b66:	48 8b 40 18          	mov    0x18(%rax),%rax
   14b6a:	48 89 c7             	mov    %rax,%rdi
   14b6d:	e8 ba 04 00 00       	call   1502c <gencode_op>
   14b72:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14b76:	b8 00 00 00 00       	mov    $0x0,%eax
   14b7b:	e8 11 de ff ff       	call   12991 <get_reg_stack>
   14b80:	48 89 c2             	mov    %rax,%rdx
   14b83:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14b87:	48 89 c6             	mov    %rax,%rsi
   14b8a:	48 89 d7             	mov    %rdx,%rdi
   14b8d:	e8 66 e4 ff ff       	call   12ff8 <free_reg>
   14b92:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14b96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b9a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14ba1:	00 00
   14ba3:	74 05                	je     14baa <gencode_case2+0x289>
   14ba5:	e8 f6 d7 fe ff       	call   23a0 <__stack_chk_fail@plt>
   14baa:	c9                   	leave
   14bab:	c3                   	ret

0000000000014bac <gencode_case3>:
   14bac:	f3 0f 1e fa          	endbr64
   14bb0:	55                   	push   %rbp
   14bb1:	48 89 e5             	mov    %rsp,%rbp
   14bb4:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   14bbb:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   14bbf:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   14bc3:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   14bca:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
   14bd1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14bd8:	00 00
   14bda:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14bde:	31 c0                	xor    %eax,%eax
   14be0:	48 8b 05 79 d4 00 00 	mov    0xd479(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14be7:	48 89 c1             	mov    %rax,%rcx
   14bea:	ba 0e 00 00 00       	mov    $0xe,%edx
   14bef:	be 01 00 00 00       	mov    $0x1,%esi
   14bf4:	48 8d 05 27 87 00 00 	lea    0x8727(%rip),%rax        # 1d322 <__PRETTY_FUNCTION__.0+0x352>
   14bfb:	48 89 c7             	mov    %rax,%rdi
   14bfe:	e8 4d d9 fe ff       	call   2550 <fwrite@plt>
   14c03:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
   14c08:	75 28                	jne    14c32 <gencode_case3+0x86>
   14c0a:	48 8d 05 d7 89 00 00 	lea    0x89d7(%rip),%rax        # 1d5e8 <__PRETTY_FUNCTION__.3>
   14c11:	48 89 c1             	mov    %rax,%rcx
   14c14:	ba 99 01 00 00       	mov    $0x199,%edx
   14c19:	48 8d 05 d0 83 00 00 	lea    0x83d0(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14c20:	48 89 c6             	mov    %rax,%rsi
   14c23:	48 8d 05 8e 84 00 00 	lea    0x848e(%rip),%rax        # 1d0b8 <__PRETTY_FUNCTION__.0+0xe8>
   14c2a:	48 89 c7             	mov    %rax,%rdi
   14c2d:	e8 9e d7 fe ff       	call   23d0 <__assert_fail@plt>
   14c32:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14c36:	48 8b 40 18          	mov    0x18(%rax),%rax
   14c3a:	48 85 c0             	test   %rax,%rax
   14c3d:	75 28                	jne    14c67 <gencode_case3+0xbb>
   14c3f:	48 8d 05 a2 89 00 00 	lea    0x89a2(%rip),%rax        # 1d5e8 <__PRETTY_FUNCTION__.3>
   14c46:	48 89 c1             	mov    %rax,%rcx
   14c49:	ba 9a 01 00 00       	mov    $0x19a,%edx
   14c4e:	48 8d 05 9b 83 00 00 	lea    0x839b(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14c55:	48 89 c6             	mov    %rax,%rsi
   14c58:	48 8d 05 66 84 00 00 	lea    0x8466(%rip),%rax        # 1d0c5 <__PRETTY_FUNCTION__.0+0xf5>
   14c5f:	48 89 c7             	mov    %rax,%rdi
   14c62:	e8 69 d7 fe ff       	call   23d0 <__assert_fail@plt>
   14c67:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14c6b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14c6f:	48 8b 40 08          	mov    0x8(%rax),%rax
   14c73:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14c7a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14c81:	48 89 c7             	mov    %rax,%rdi
   14c84:	e8 eb ee ff ff       	call   13b74 <gencode_expr_tree>
   14c89:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14c8d:	b8 00 00 00 00       	mov    $0x0,%eax
   14c92:	e8 fa dc ff ff       	call   12991 <get_reg_stack>
   14c97:	48 89 c2             	mov    %rax,%rdx
   14c9a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   14c9e:	48 89 c6             	mov    %rax,%rsi
   14ca1:	48 89 d7             	mov    %rdx,%rdi
   14ca4:	e8 ac e5 ff ff       	call   13255 <get_free_reg>
   14ca9:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   14cad:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
   14cb2:	0f 85 d2 00 00 00    	jne    14d8a <gencode_case3+0x1de>
   14cb8:	48 8d 05 52 86 00 00 	lea    0x8652(%rip),%rax        # 1d311 <__PRETTY_FUNCTION__.0+0x341>
   14cbf:	48 89 c7             	mov    %rax,%rdi
   14cc2:	e8 f4 d8 ff ff       	call   125bb <add_l_t>
   14cc7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   14ccb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14ccf:	8b 08                	mov    (%rax),%ecx
   14cd1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14cd8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14cdc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14ce0:	41 89 c8             	mov    %ecx,%r8d
   14ce3:	48 89 d1             	mov    %rdx,%rcx
   14ce6:	48 8d 15 69 84 00 00 	lea    0x8469(%rip),%rdx        # 1d156 <__PRETTY_FUNCTION__.0+0x186>
   14ced:	be 32 00 00 00       	mov    $0x32,%esi
   14cf2:	48 89 c7             	mov    %rax,%rdi
   14cf5:	b8 00 00 00 00       	mov    $0x0,%eax
   14cfa:	e8 b1 d6 fe ff       	call   23b0 <snprintf@plt>
   14cff:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14d03:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   14d07:	48 89 d6             	mov    %rdx,%rsi
   14d0a:	48 89 c7             	mov    %rax,%rdi
   14d0d:	e8 9c a7 ff ff       	call   f4ae <add_inst>
   14d12:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14d16:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14d1a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14d1e:	48 8b 40 10          	mov    0x10(%rax),%rax
   14d22:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
   14d29:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14d30:	48 89 c7             	mov    %rax,%rdi
   14d33:	e8 3c ee ff ff       	call   13b74 <gencode_expr_tree>
   14d38:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14d3c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14d40:	8b 10                	mov    (%rax),%edx
   14d42:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14d46:	89 d1                	mov    %edx,%ecx
   14d48:	48 8d 15 c8 85 00 00 	lea    0x85c8(%rip),%rdx        # 1d317 <__PRETTY_FUNCTION__.0+0x347>
   14d4f:	be 1e 00 00 00       	mov    $0x1e,%esi
   14d54:	48 89 c7             	mov    %rax,%rdi
   14d57:	b8 00 00 00 00       	mov    $0x0,%eax
   14d5c:	e8 4f d6 fe ff       	call   23b0 <snprintf@plt>
   14d61:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14d65:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14d6c:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14d70:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14d74:	48 8b 40 18          	mov    0x18(%rax),%rax
   14d78:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   14d7c:	48 89 c7             	mov    %rax,%rdi
   14d7f:	e8 a8 02 00 00       	call   1502c <gencode_op>
   14d84:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14d88:	eb 6a                	jmp    14df4 <gencode_case3+0x248>
   14d8a:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
   14d8e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14d92:	48 8b 40 10          	mov    0x10(%rax),%rax
   14d96:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   14d9a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14da1:	48 89 c7             	mov    %rax,%rdi
   14da4:	e8 cb ed ff ff       	call   13b74 <gencode_expr_tree>
   14da9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14dad:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   14db1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14db5:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14db9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14dc0:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14dc4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14dc8:	48 8b 40 18          	mov    0x18(%rax),%rax
   14dcc:	48 89 c7             	mov    %rax,%rdi
   14dcf:	e8 58 02 00 00       	call   1502c <gencode_op>
   14dd4:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   14dd8:	b8 00 00 00 00       	mov    $0x0,%eax
   14ddd:	e8 af db ff ff       	call   12991 <get_reg_stack>
   14de2:	48 89 c2             	mov    %rax,%rdx
   14de5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14de9:	48 89 c6             	mov    %rax,%rsi
   14dec:	48 89 d7             	mov    %rdx,%rdi
   14def:	e8 04 e2 ff ff       	call   12ff8 <free_reg>
   14df4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14df8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14dfc:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   14e03:	00 00
   14e05:	74 05                	je     14e0c <gencode_case3+0x260>
   14e07:	e8 94 d5 fe ff       	call   23a0 <__stack_chk_fail@plt>
   14e0c:	c9                   	leave
   14e0d:	c3                   	ret

0000000000014e0e <gencode_leaf_var>:
   14e0e:	f3 0f 1e fa          	endbr64
   14e12:	55                   	push   %rbp
   14e13:	48 89 e5             	mov    %rsp,%rbp
   14e16:	48 83 ec 40          	sub    $0x40,%rsp
   14e1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14e1e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14e22:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14e26:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
   14e29:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14e30:	00 00
   14e32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14e36:	31 c0                	xor    %eax,%eax
   14e38:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   14e3d:	75 28                	jne    14e67 <gencode_leaf_var+0x59>
   14e3f:	48 8d 05 ba 87 00 00 	lea    0x87ba(%rip),%rax        # 1d600 <__PRETTY_FUNCTION__.2>
   14e46:	48 89 c1             	mov    %rax,%rcx
   14e49:	ba bd 01 00 00       	mov    $0x1bd,%edx
   14e4e:	48 8d 05 9b 81 00 00 	lea    0x819b(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   14e55:	48 89 c6             	mov    %rax,%rsi
   14e58:	48 8d 05 c9 81 00 00 	lea    0x81c9(%rip),%rax        # 1d028 <__PRETTY_FUNCTION__.0+0x58>
   14e5f:	48 89 c7             	mov    %rax,%rdi
   14e62:	e8 69 d5 fe ff       	call   23d0 <__assert_fail@plt>
   14e67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e6b:	8b 40 04             	mov    0x4(%rax),%eax
   14e6e:	83 f8 04             	cmp    $0x4,%eax
   14e71:	74 0e                	je     14e81 <gencode_leaf_var+0x73>
   14e73:	83 f8 07             	cmp    $0x7,%eax
   14e76:	0f 84 40 01 00 00    	je     14fbc <gencode_leaf_var+0x1ae>
   14e7c:	e9 64 01 00 00       	jmp    14fe5 <gencode_leaf_var+0x1d7>
   14e81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e85:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14e89:	48 8b 05 d0 d1 00 00 	mov    0xd1d0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14e90:	48 8d 0d a1 84 00 00 	lea    0x84a1(%rip),%rcx        # 1d338 <__PRETTY_FUNCTION__.0+0x368>
   14e97:	48 89 ce             	mov    %rcx,%rsi
   14e9a:	48 89 c7             	mov    %rax,%rdi
   14e9d:	b8 00 00 00 00       	mov    $0x0,%eax
   14ea2:	e8 c9 d5 fe ff       	call   2470 <fprintf@plt>
   14ea7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14eab:	48 8b 40 08          	mov    0x8(%rax),%rax
   14eaf:	48 89 c7             	mov    %rax,%rdi
   14eb2:	e8 01 dc ff ff       	call   12ab8 <find_label>
   14eb7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   14ebb:	48 8b 05 9e d1 00 00 	mov    0xd19e(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14ec2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14ec6:	48 8d 0d 93 84 00 00 	lea    0x8493(%rip),%rcx        # 1d360 <__PRETTY_FUNCTION__.0+0x390>
   14ecd:	48 89 ce             	mov    %rcx,%rsi
   14ed0:	48 89 c7             	mov    %rax,%rdi
   14ed3:	b8 00 00 00 00       	mov    $0x0,%eax
   14ed8:	e8 93 d5 fe ff       	call   2470 <fprintf@plt>
   14edd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14ee2:	74 2b                	je     14f0f <gencode_leaf_var+0x101>
   14ee4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14ee8:	8b 10                	mov    (%rax),%edx
   14eea:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14eed:	48 63 f0             	movslq %eax,%rsi
   14ef0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ef4:	89 d1                	mov    %edx,%ecx
   14ef6:	48 8d 15 1a 84 00 00 	lea    0x841a(%rip),%rdx        # 1d317 <__PRETTY_FUNCTION__.0+0x347>
   14efd:	48 89 c7             	mov    %rax,%rdi
   14f00:	b8 00 00 00 00       	mov    $0x0,%eax
   14f05:	e8 a6 d4 fe ff       	call   23b0 <snprintf@plt>
   14f0a:	e9 03 01 00 00       	jmp    15012 <gencode_leaf_var+0x204>
   14f0f:	b8 00 00 00 00       	mov    $0x0,%eax
   14f14:	e8 69 31 ff ff       	call   8082 <nonlocal_flag>
   14f19:	83 f8 01             	cmp    $0x1,%eax
   14f1c:	75 4e                	jne    14f6c <gencode_leaf_var+0x15e>
   14f1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f22:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14f26:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
   14f2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14f2e:	48 89 ce             	mov    %rcx,%rsi
   14f31:	48 89 c7             	mov    %rax,%rdi
   14f34:	e8 fc ce ff ff       	call   11e35 <codegen_get_nonlocal>
   14f39:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14f3d:	8b 55 ec             	mov    -0x14(%rbp),%edx
   14f40:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14f43:	48 63 f0             	movslq %eax,%rsi
   14f46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14f4a:	4c 8d 05 39 84 00 00 	lea    0x8439(%rip),%r8        # 1d38a <__PRETTY_FUNCTION__.0+0x3ba>
   14f51:	89 d1                	mov    %edx,%ecx
   14f53:	48 8d 15 35 84 00 00 	lea    0x8435(%rip),%rdx        # 1d38f <__PRETTY_FUNCTION__.0+0x3bf>
   14f5a:	48 89 c7             	mov    %rax,%rdi
   14f5d:	b8 00 00 00 00       	mov    $0x0,%eax
   14f62:	e8 49 d4 fe ff       	call   23b0 <snprintf@plt>
   14f67:	e9 a6 00 00 00       	jmp    15012 <gencode_leaf_var+0x204>
   14f6c:	48 8b 05 ed d0 00 00 	mov    0xd0ed(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14f73:	48 89 c1             	mov    %rax,%rcx
   14f76:	ba 33 00 00 00       	mov    $0x33,%edx
   14f7b:	be 01 00 00 00       	mov    $0x1,%esi
   14f80:	48 8d 05 11 84 00 00 	lea    0x8411(%rip),%rax        # 1d398 <__PRETTY_FUNCTION__.0+0x3c8>
   14f87:	48 89 c7             	mov    %rax,%rdi
   14f8a:	e8 c1 d5 fe ff       	call   2550 <fwrite@plt>
   14f8f:	48 8b 05 ca d0 00 00 	mov    0xd0ca(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14f96:	48 89 c1             	mov    %rax,%rcx
   14f99:	ba 33 00 00 00       	mov    $0x33,%edx
   14f9e:	be 01 00 00 00       	mov    $0x1,%esi
   14fa3:	48 8d 05 26 84 00 00 	lea    0x8426(%rip),%rax        # 1d3d0 <__PRETTY_FUNCTION__.0+0x400>
   14faa:	48 89 c7             	mov    %rax,%rdi
   14fad:	e8 9e d5 fe ff       	call   2550 <fwrite@plt>
   14fb2:	bf 01 00 00 00       	mov    $0x1,%edi
   14fb7:	e8 84 d5 fe ff       	call   2540 <exit@plt>
   14fbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14fc0:	8b 50 08             	mov    0x8(%rax),%edx
   14fc3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14fc6:	48 63 f0             	movslq %eax,%rsi
   14fc9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14fcd:	89 d1                	mov    %edx,%ecx
   14fcf:	48 8d 15 2e 84 00 00 	lea    0x842e(%rip),%rdx        # 1d404 <__PRETTY_FUNCTION__.0+0x434>
   14fd6:	48 89 c7             	mov    %rax,%rdi
   14fd9:	b8 00 00 00 00       	mov    $0x0,%eax
   14fde:	e8 cd d3 fe ff       	call   23b0 <snprintf@plt>
   14fe3:	eb 2d                	jmp    15012 <gencode_leaf_var+0x204>
   14fe5:	48 8b 05 74 d0 00 00 	mov    0xd074(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   14fec:	48 89 c1             	mov    %rax,%rcx
   14fef:	ba 29 00 00 00       	mov    $0x29,%edx
   14ff4:	be 01 00 00 00       	mov    $0x1,%esi
   14ff9:	48 8d 05 08 84 00 00 	lea    0x8408(%rip),%rax        # 1d408 <__PRETTY_FUNCTION__.0+0x438>
   15000:	48 89 c7             	mov    %rax,%rdi
   15003:	e8 48 d5 fe ff       	call   2550 <fwrite@plt>
   15008:	bf 01 00 00 00       	mov    $0x1,%edi
   1500d:	e8 2e d5 fe ff       	call   2540 <exit@plt>
   15012:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15016:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1501a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   15021:	00 00
   15023:	74 05                	je     1502a <gencode_leaf_var+0x21c>
   15025:	e8 76 d3 fe ff       	call   23a0 <__stack_chk_fail@plt>
   1502a:	c9                   	leave
   1502b:	c3                   	ret

000000000001502c <gencode_op>:
   1502c:	f3 0f 1e fa          	endbr64
   15030:	55                   	push   %rbp
   15031:	48 89 e5             	mov    %rsp,%rbp
   15034:	48 83 ec 70          	sub    $0x70,%rsp
   15038:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1503c:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   15040:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   15044:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   15048:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1504f:	00 00
   15051:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15055:	31 c0                	xor    %eax,%eax
   15057:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1505c:	75 28                	jne    15086 <gencode_op+0x5a>
   1505e:	48 8d 05 b3 85 00 00 	lea    0x85b3(%rip),%rax        # 1d618 <__PRETTY_FUNCTION__.1>
   15065:	48 89 c1             	mov    %rax,%rcx
   15068:	ba ef 01 00 00       	mov    $0x1ef,%edx
   1506d:	48 8d 05 7c 7f 00 00 	lea    0x7f7c(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   15074:	48 89 c6             	mov    %rax,%rsi
   15077:	48 8d 05 aa 7f 00 00 	lea    0x7faa(%rip),%rax        # 1d028 <__PRETTY_FUNCTION__.0+0x58>
   1507e:	48 89 c7             	mov    %rax,%rdi
   15081:	e8 4a d3 fe ff       	call   23d0 <__assert_fail@plt>
   15086:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
   1508b:	75 28                	jne    150b5 <gencode_op+0x89>
   1508d:	48 8d 05 84 85 00 00 	lea    0x8584(%rip),%rax        # 1d618 <__PRETTY_FUNCTION__.1>
   15094:	48 89 c1             	mov    %rax,%rcx
   15097:	ba f0 01 00 00       	mov    $0x1f0,%edx
   1509c:	48 8d 05 4d 7f 00 00 	lea    0x7f4d(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   150a3:	48 89 c6             	mov    %rax,%rsi
   150a6:	48 8d 05 85 83 00 00 	lea    0x8385(%rip),%rax        # 1d432 <__PRETTY_FUNCTION__.0+0x462>
   150ad:	48 89 c7             	mov    %rax,%rdi
   150b0:	e8 1b d3 fe ff       	call   23d0 <__assert_fail@plt>
   150b5:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   150ba:	75 28                	jne    150e4 <gencode_op+0xb8>
   150bc:	48 8d 05 55 85 00 00 	lea    0x8555(%rip),%rax        # 1d618 <__PRETTY_FUNCTION__.1>
   150c3:	48 89 c1             	mov    %rax,%rcx
   150c6:	ba f1 01 00 00       	mov    $0x1f1,%edx
   150cb:	48 8d 05 1e 7f 00 00 	lea    0x7f1e(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   150d2:	48 89 c6             	mov    %rax,%rsi
   150d5:	48 8d 05 63 83 00 00 	lea    0x8363(%rip),%rax        # 1d43f <__PRETTY_FUNCTION__.0+0x46f>
   150dc:	48 89 c7             	mov    %rax,%rdi
   150df:	e8 ec d2 fe ff       	call   23d0 <__assert_fail@plt>
   150e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   150e8:	8b 40 04             	mov    0x4(%rax),%eax
   150eb:	83 f8 03             	cmp    $0x3,%eax
   150ee:	0f 84 f5 00 00 00    	je     151e9 <gencode_op+0x1bd>
   150f4:	83 f8 03             	cmp    $0x3,%eax
   150f7:	0f 87 89 05 00 00    	ja     15686 <gencode_op+0x65a>
   150fd:	85 c0                	test   %eax,%eax
   150ff:	0f 84 3d 05 00 00    	je     15642 <gencode_op+0x616>
   15105:	83 f8 02             	cmp    $0x2,%eax
   15108:	0f 85 78 05 00 00    	jne    15686 <gencode_op+0x65a>
   1510e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15112:	8b 40 08             	mov    0x8(%rax),%eax
   15115:	89 45 b0             	mov    %eax,-0x50(%rbp)
   15118:	81 7d b0 2e 01 00 00 	cmpl   $0x12e,-0x50(%rbp)
   1511f:	74 0e                	je     1512f <gencode_op+0x103>
   15121:	81 7d b0 2f 01 00 00 	cmpl   $0x12f,-0x50(%rbp)
   15128:	74 49                	je     15173 <gencode_op+0x147>
   1512a:	e9 88 00 00 00       	jmp    151b7 <gencode_op+0x18b>
   1512f:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   15133:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15137:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1513b:	49 89 c8             	mov    %rcx,%r8
   1513e:	48 89 d1             	mov    %rdx,%rcx
   15141:	48 8d 15 05 83 00 00 	lea    0x8305(%rip),%rdx        # 1d44d <__PRETTY_FUNCTION__.0+0x47d>
   15148:	be 32 00 00 00       	mov    $0x32,%esi
   1514d:	48 89 c7             	mov    %rax,%rdi
   15150:	b8 00 00 00 00       	mov    $0x0,%eax
   15155:	e8 56 d2 fe ff       	call   23b0 <snprintf@plt>
   1515a:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1515e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15162:	48 89 d6             	mov    %rdx,%rsi
   15165:	48 89 c7             	mov    %rax,%rdi
   15168:	e8 41 a3 ff ff       	call   f4ae <add_inst>
   1516d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15171:	eb 71                	jmp    151e4 <gencode_op+0x1b8>
   15173:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   15177:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1517b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1517f:	49 89 c8             	mov    %rcx,%r8
   15182:	48 89 d1             	mov    %rdx,%rcx
   15185:	48 8d 15 cf 82 00 00 	lea    0x82cf(%rip),%rdx        # 1d45b <__PRETTY_FUNCTION__.0+0x48b>
   1518c:	be 32 00 00 00       	mov    $0x32,%esi
   15191:	48 89 c7             	mov    %rax,%rdi
   15194:	b8 00 00 00 00       	mov    $0x0,%eax
   15199:	e8 12 d2 fe ff       	call   23b0 <snprintf@plt>
   1519e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   151a2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   151a6:	48 89 d6             	mov    %rdx,%rsi
   151a9:	48 89 c7             	mov    %rax,%rdi
   151ac:	e8 fd a2 ff ff       	call   f4ae <add_inst>
   151b1:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   151b5:	eb 2d                	jmp    151e4 <gencode_op+0x1b8>
   151b7:	48 8b 05 a2 ce 00 00 	mov    0xcea2(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   151be:	48 89 c1             	mov    %rax,%rcx
   151c1:	ba 17 00 00 00       	mov    $0x17,%edx
   151c6:	be 01 00 00 00       	mov    $0x1,%esi
   151cb:	48 8d 05 97 82 00 00 	lea    0x8297(%rip),%rax        # 1d469 <__PRETTY_FUNCTION__.0+0x499>
   151d2:	48 89 c7             	mov    %rax,%rdi
   151d5:	e8 76 d3 fe ff       	call   2550 <fwrite@plt>
   151da:	bf 01 00 00 00       	mov    $0x1,%edi
   151df:	e8 5c d3 fe ff       	call   2540 <exit@plt>
   151e4:	e9 ca 04 00 00       	jmp    156b3 <gencode_op+0x687>
   151e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151ed:	8b 40 08             	mov    0x8(%rax),%eax
   151f0:	89 45 b0             	mov    %eax,-0x50(%rbp)
   151f3:	81 7d b0 32 01 00 00 	cmpl   $0x132,-0x50(%rbp)
   151fa:	75 47                	jne    15243 <gencode_op+0x217>
   151fc:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   15200:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15204:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15208:	49 89 c8             	mov    %rcx,%r8
   1520b:	48 89 d1             	mov    %rdx,%rcx
   1520e:	48 8d 15 6c 82 00 00 	lea    0x826c(%rip),%rdx        # 1d481 <__PRETTY_FUNCTION__.0+0x4b1>
   15215:	be 32 00 00 00       	mov    $0x32,%esi
   1521a:	48 89 c7             	mov    %rax,%rdi
   1521d:	b8 00 00 00 00       	mov    $0x0,%eax
   15222:	e8 89 d1 fe ff       	call   23b0 <snprintf@plt>
   15227:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1522b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1522f:	48 89 d6             	mov    %rdx,%rsi
   15232:	48 89 c7             	mov    %rax,%rdi
   15235:	e8 74 a2 ff ff       	call   f4ae <add_inst>
   1523a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1523e:	e9 70 04 00 00       	jmp    156b3 <gencode_op+0x687>
   15243:	81 7d b0 35 01 00 00 	cmpl   $0x135,-0x50(%rbp)
   1524a:	0f 85 49 01 00 00    	jne    15399 <gencode_op+0x36d>
   15250:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15254:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15258:	48 89 d1             	mov    %rdx,%rcx
   1525b:	48 8d 15 d3 7e 00 00 	lea    0x7ed3(%rip),%rdx        # 1d135 <__PRETTY_FUNCTION__.0+0x165>
   15262:	be 32 00 00 00       	mov    $0x32,%esi
   15267:	48 89 c7             	mov    %rax,%rdi
   1526a:	b8 00 00 00 00       	mov    $0x0,%eax
   1526f:	e8 3c d1 fe ff       	call   23b0 <snprintf@plt>
   15274:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15278:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1527c:	48 89 d6             	mov    %rdx,%rsi
   1527f:	48 89 c7             	mov    %rax,%rdi
   15282:	e8 27 a2 ff ff       	call   f4ae <add_inst>
   15287:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1528b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1528f:	48 8d 15 fa 81 00 00 	lea    0x81fa(%rip),%rdx        # 1d490 <__PRETTY_FUNCTION__.0+0x4c0>
   15296:	be 32 00 00 00       	mov    $0x32,%esi
   1529b:	48 89 c7             	mov    %rax,%rdi
   1529e:	b8 00 00 00 00       	mov    $0x0,%eax
   152a3:	e8 08 d1 fe ff       	call   23b0 <snprintf@plt>
   152a8:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   152ac:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   152b0:	48 89 d6             	mov    %rdx,%rsi
   152b3:	48 89 c7             	mov    %rax,%rdi
   152b6:	e8 f3 a1 ff ff       	call   f4ae <add_inst>
   152bb:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   152bf:	48 8d 45 b6          	lea    -0x4a(%rbp),%rax
   152c3:	48 8d 15 cc 81 00 00 	lea    0x81cc(%rip),%rdx        # 1d496 <__PRETTY_FUNCTION__.0+0x4c6>
   152ca:	be 0a 00 00 00       	mov    $0xa,%esi
   152cf:	48 89 c7             	mov    %rax,%rdi
   152d2:	b8 00 00 00 00       	mov    $0x0,%eax
   152d7:	e8 d4 d0 fe ff       	call   23b0 <snprintf@plt>
   152dc:	48 8d 4d b6          	lea    -0x4a(%rbp),%rcx
   152e0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   152e4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   152e8:	49 89 c8             	mov    %rcx,%r8
   152eb:	48 89 d1             	mov    %rdx,%rcx
   152ee:	48 8d 15 0d 7e 00 00 	lea    0x7e0d(%rip),%rdx        # 1d102 <__PRETTY_FUNCTION__.0+0x132>
   152f5:	be 32 00 00 00       	mov    $0x32,%esi
   152fa:	48 89 c7             	mov    %rax,%rdi
   152fd:	b8 00 00 00 00       	mov    $0x0,%eax
   15302:	e8 a9 d0 fe ff       	call   23b0 <snprintf@plt>
   15307:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1530b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1530f:	48 89 d6             	mov    %rdx,%rsi
   15312:	48 89 c7             	mov    %rax,%rdi
   15315:	e8 94 a1 ff ff       	call   f4ae <add_inst>
   1531a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1531e:	48 8d 55 b6          	lea    -0x4a(%rbp),%rdx
   15322:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15326:	48 89 d1             	mov    %rdx,%rcx
   15329:	48 8d 15 4f 7e 00 00 	lea    0x7e4f(%rip),%rdx        # 1d17f <__PRETTY_FUNCTION__.0+0x1af>
   15330:	be 32 00 00 00       	mov    $0x32,%esi
   15335:	48 89 c7             	mov    %rax,%rdi
   15338:	b8 00 00 00 00       	mov    $0x0,%eax
   1533d:	e8 6e d0 fe ff       	call   23b0 <snprintf@plt>
   15342:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15346:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1534a:	48 89 d6             	mov    %rdx,%rsi
   1534d:	48 89 c7             	mov    %rax,%rdi
   15350:	e8 59 a1 ff ff       	call   f4ae <add_inst>
   15355:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15359:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1535d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15361:	48 89 d1             	mov    %rdx,%rcx
   15364:	48 8d 15 1f 7e 00 00 	lea    0x7e1f(%rip),%rdx        # 1d18a <__PRETTY_FUNCTION__.0+0x1ba>
   1536b:	be 32 00 00 00       	mov    $0x32,%esi
   15370:	48 89 c7             	mov    %rax,%rdi
   15373:	b8 00 00 00 00       	mov    $0x0,%eax
   15378:	e8 33 d0 fe ff       	call   23b0 <snprintf@plt>
   1537d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15381:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15385:	48 89 d6             	mov    %rdx,%rsi
   15388:	48 89 c7             	mov    %rax,%rdi
   1538b:	e8 1e a1 ff ff       	call   f4ae <add_inst>
   15390:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15394:	e9 1a 03 00 00       	jmp    156b3 <gencode_op+0x687>
   15399:	81 7d b0 33 01 00 00 	cmpl   $0x133,-0x50(%rbp)
   153a0:	74 0d                	je     153af <gencode_op+0x383>
   153a2:	81 7d b0 36 01 00 00 	cmpl   $0x136,-0x50(%rbp)
   153a9:	0f 85 3d 02 00 00    	jne    155ec <gencode_op+0x5c0>
   153af:	48 8b 05 aa cc 00 00 	mov    0xccaa(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   153b6:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   153ba:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   153be:	48 8d 35 db 80 00 00 	lea    0x80db(%rip),%rsi        # 1d4a0 <__PRETTY_FUNCTION__.0+0x4d0>
   153c5:	48 89 c7             	mov    %rax,%rdi
   153c8:	b8 00 00 00 00       	mov    $0x0,%eax
   153cd:	e8 9e d0 fe ff       	call   2470 <fprintf@plt>
   153d2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   153d6:	48 8d 15 ed 80 00 00 	lea    0x80ed(%rip),%rdx        # 1d4ca <__PRETTY_FUNCTION__.0+0x4fa>
   153dd:	be 32 00 00 00       	mov    $0x32,%esi
   153e2:	48 89 c7             	mov    %rax,%rdi
   153e5:	b8 00 00 00 00       	mov    $0x0,%eax
   153ea:	e8 c1 cf fe ff       	call   23b0 <snprintf@plt>
   153ef:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   153f3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   153f7:	48 89 d6             	mov    %rdx,%rsi
   153fa:	48 89 c7             	mov    %rax,%rdi
   153fd:	e8 ac a0 ff ff       	call   f4ae <add_inst>
   15402:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15406:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1540a:	48 8d 15 c7 80 00 00 	lea    0x80c7(%rip),%rdx        # 1d4d8 <__PRETTY_FUNCTION__.0+0x508>
   15411:	be 32 00 00 00       	mov    $0x32,%esi
   15416:	48 89 c7             	mov    %rax,%rdi
   15419:	b8 00 00 00 00       	mov    $0x0,%eax
   1541e:	e8 8d cf fe ff       	call   23b0 <snprintf@plt>
   15423:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15427:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1542b:	48 89 d6             	mov    %rdx,%rsi
   1542e:	48 89 c7             	mov    %rax,%rdi
   15431:	e8 78 a0 ff ff       	call   f4ae <add_inst>
   15436:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1543a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1543e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15442:	48 89 d1             	mov    %rdx,%rcx
   15445:	48 8d 15 e9 7c 00 00 	lea    0x7ce9(%rip),%rdx        # 1d135 <__PRETTY_FUNCTION__.0+0x165>
   1544c:	be 32 00 00 00       	mov    $0x32,%esi
   15451:	48 89 c7             	mov    %rax,%rdi
   15454:	b8 00 00 00 00       	mov    $0x0,%eax
   15459:	e8 52 cf fe ff       	call   23b0 <snprintf@plt>
   1545e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15462:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15466:	48 89 d6             	mov    %rdx,%rsi
   15469:	48 89 c7             	mov    %rax,%rdi
   1546c:	e8 3d a0 ff ff       	call   f4ae <add_inst>
   15471:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15475:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15479:	48 8d 15 10 80 00 00 	lea    0x8010(%rip),%rdx        # 1d490 <__PRETTY_FUNCTION__.0+0x4c0>
   15480:	be 32 00 00 00       	mov    $0x32,%esi
   15485:	48 89 c7             	mov    %rax,%rdi
   15488:	b8 00 00 00 00       	mov    $0x0,%eax
   1548d:	e8 1e cf fe ff       	call   23b0 <snprintf@plt>
   15492:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15496:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1549a:	48 89 d6             	mov    %rdx,%rsi
   1549d:	48 89 c7             	mov    %rax,%rdi
   154a0:	e8 09 a0 ff ff       	call   f4ae <add_inst>
   154a5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   154a9:	48 8d 45 b6          	lea    -0x4a(%rbp),%rax
   154ad:	48 8d 15 e2 7f 00 00 	lea    0x7fe2(%rip),%rdx        # 1d496 <__PRETTY_FUNCTION__.0+0x4c6>
   154b4:	be 0a 00 00 00       	mov    $0xa,%esi
   154b9:	48 89 c7             	mov    %rax,%rdi
   154bc:	b8 00 00 00 00       	mov    $0x0,%eax
   154c1:	e8 ea ce fe ff       	call   23b0 <snprintf@plt>
   154c6:	48 8d 4d b6          	lea    -0x4a(%rbp),%rcx
   154ca:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   154ce:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   154d2:	49 89 c8             	mov    %rcx,%r8
   154d5:	48 89 d1             	mov    %rdx,%rcx
   154d8:	48 8d 15 23 7c 00 00 	lea    0x7c23(%rip),%rdx        # 1d102 <__PRETTY_FUNCTION__.0+0x132>
   154df:	be 32 00 00 00       	mov    $0x32,%esi
   154e4:	48 89 c7             	mov    %rax,%rdi
   154e7:	b8 00 00 00 00       	mov    $0x0,%eax
   154ec:	e8 bf ce fe ff       	call   23b0 <snprintf@plt>
   154f1:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   154f5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   154f9:	48 89 d6             	mov    %rdx,%rsi
   154fc:	48 89 c7             	mov    %rax,%rdi
   154ff:	e8 aa 9f ff ff       	call   f4ae <add_inst>
   15504:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15508:	48 8d 55 b6          	lea    -0x4a(%rbp),%rdx
   1550c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15510:	48 89 d1             	mov    %rdx,%rcx
   15513:	48 8d 15 65 7c 00 00 	lea    0x7c65(%rip),%rdx        # 1d17f <__PRETTY_FUNCTION__.0+0x1af>
   1551a:	be 32 00 00 00       	mov    $0x32,%esi
   1551f:	48 89 c7             	mov    %rax,%rdi
   15522:	b8 00 00 00 00       	mov    $0x0,%eax
   15527:	e8 84 ce fe ff       	call   23b0 <snprintf@plt>
   1552c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15530:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15534:	48 89 d6             	mov    %rdx,%rsi
   15537:	48 89 c7             	mov    %rax,%rdi
   1553a:	e8 6f 9f ff ff       	call   f4ae <add_inst>
   1553f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15543:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   15547:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1554b:	48 89 d1             	mov    %rdx,%rcx
   1554e:	48 8d 15 c4 7c 00 00 	lea    0x7cc4(%rip),%rdx        # 1d219 <__PRETTY_FUNCTION__.0+0x249>
   15555:	be 32 00 00 00       	mov    $0x32,%esi
   1555a:	48 89 c7             	mov    %rax,%rdi
   1555d:	b8 00 00 00 00       	mov    $0x0,%eax
   15562:	e8 49 ce fe ff       	call   23b0 <snprintf@plt>
   15567:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1556b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1556f:	48 89 d6             	mov    %rdx,%rsi
   15572:	48 89 c7             	mov    %rax,%rdi
   15575:	e8 34 9f ff ff       	call   f4ae <add_inst>
   1557a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   1557e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15582:	48 8d 15 5d 7f 00 00 	lea    0x7f5d(%rip),%rdx        # 1d4e6 <__PRETTY_FUNCTION__.0+0x516>
   15589:	be 32 00 00 00       	mov    $0x32,%esi
   1558e:	48 89 c7             	mov    %rax,%rdi
   15591:	b8 00 00 00 00       	mov    $0x0,%eax
   15596:	e8 15 ce fe ff       	call   23b0 <snprintf@plt>
   1559b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1559f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   155a3:	48 89 d6             	mov    %rdx,%rsi
   155a6:	48 89 c7             	mov    %rax,%rdi
   155a9:	e8 00 9f ff ff       	call   f4ae <add_inst>
   155ae:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   155b2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   155b6:	48 8d 15 36 7f 00 00 	lea    0x7f36(%rip),%rdx        # 1d4f3 <__PRETTY_FUNCTION__.0+0x523>
   155bd:	be 32 00 00 00       	mov    $0x32,%esi
   155c2:	48 89 c7             	mov    %rax,%rdi
   155c5:	b8 00 00 00 00       	mov    $0x0,%eax
   155ca:	e8 e1 cd fe ff       	call   23b0 <snprintf@plt>
   155cf:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   155d3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   155d7:	48 89 d6             	mov    %rdx,%rsi
   155da:	48 89 c7             	mov    %rax,%rdi
   155dd:	e8 cc 9e ff ff       	call   f4ae <add_inst>
   155e2:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   155e6:	90                   	nop
   155e7:	e9 c7 00 00 00       	jmp    156b3 <gencode_op+0x687>
   155ec:	81 7d b0 35 01 00 00 	cmpl   $0x135,-0x50(%rbp)
   155f3:	75 20                	jne    15615 <gencode_op+0x5e9>
   155f5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   155f9:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   155fd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15601:	48 89 ce             	mov    %rcx,%rsi
   15604:	48 89 c7             	mov    %rax,%rdi
   15607:	e8 db e7 ff ff       	call   13de7 <gencode_modulus>
   1560c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15610:	e9 9e 00 00 00       	jmp    156b3 <gencode_op+0x687>
   15615:	48 8b 05 44 ca 00 00 	mov    0xca44(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1561c:	48 89 c1             	mov    %rax,%rcx
   1561f:	ba 17 00 00 00       	mov    $0x17,%edx
   15624:	be 01 00 00 00       	mov    $0x1,%esi
   15629:	48 8d 05 d0 7e 00 00 	lea    0x7ed0(%rip),%rax        # 1d500 <__PRETTY_FUNCTION__.0+0x530>
   15630:	48 89 c7             	mov    %rax,%rdi
   15633:	e8 18 cf fe ff       	call   2550 <fwrite@plt>
   15638:	bf 01 00 00 00       	mov    $0x1,%edi
   1563d:	e8 fe ce fe ff       	call   2540 <exit@plt>
   15642:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   15646:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1564a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1564e:	49 89 c8             	mov    %rcx,%r8
   15651:	48 89 d1             	mov    %rdx,%rcx
   15654:	48 8d 15 bd 7e 00 00 	lea    0x7ebd(%rip),%rdx        # 1d518 <__PRETTY_FUNCTION__.0+0x548>
   1565b:	be 32 00 00 00       	mov    $0x32,%esi
   15660:	48 89 c7             	mov    %rax,%rdi
   15663:	b8 00 00 00 00       	mov    $0x0,%eax
   15668:	e8 43 cd fe ff       	call   23b0 <snprintf@plt>
   1566d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   15671:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15675:	48 89 d6             	mov    %rdx,%rsi
   15678:	48 89 c7             	mov    %rax,%rdi
   1567b:	e8 2e 9e ff ff       	call   f4ae <add_inst>
   15680:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   15684:	eb 2d                	jmp    156b3 <gencode_op+0x687>
   15686:	48 8b 05 d3 c9 00 00 	mov    0xc9d3(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1568d:	48 89 c1             	mov    %rax,%rcx
   15690:	ba 29 00 00 00       	mov    $0x29,%edx
   15695:	be 01 00 00 00       	mov    $0x1,%esi
   1569a:	48 8d 05 67 7d 00 00 	lea    0x7d67(%rip),%rax        # 1d408 <__PRETTY_FUNCTION__.0+0x438>
   156a1:	48 89 c7             	mov    %rax,%rdi
   156a4:	e8 a7 ce fe ff       	call   2550 <fwrite@plt>
   156a9:	bf 01 00 00 00       	mov    $0x1,%edi
   156ae:	e8 8d ce fe ff       	call   2540 <exit@plt>
   156b3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   156b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   156bb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   156c2:	00 00
   156c4:	74 05                	je     156cb <gencode_op+0x69f>
   156c6:	e8 d5 cc fe ff       	call   23a0 <__stack_chk_fail@plt>
   156cb:	c9                   	leave
   156cc:	c3                   	ret

00000000000156cd <gencode_op_deprecated>:
   156cd:	f3 0f 1e fa          	endbr64
   156d1:	55                   	push   %rbp
   156d2:	48 89 e5             	mov    %rsp,%rbp
   156d5:	48 83 ec 30          	sub    $0x30,%rsp
   156d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   156dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   156e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   156e5:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   156e8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   156ed:	75 28                	jne    15717 <gencode_op_deprecated+0x4a>
   156ef:	48 8d 05 3a 7f 00 00 	lea    0x7f3a(%rip),%rax        # 1d630 <__PRETTY_FUNCTION__.0>
   156f6:	48 89 c1             	mov    %rax,%rcx
   156f9:	ba 64 02 00 00       	mov    $0x264,%edx
   156fe:	48 8d 05 eb 78 00 00 	lea    0x78eb(%rip),%rax        # 1cff0 <__PRETTY_FUNCTION__.0+0x20>
   15705:	48 89 c6             	mov    %rax,%rsi
   15708:	48 8d 05 19 79 00 00 	lea    0x7919(%rip),%rax        # 1d028 <__PRETTY_FUNCTION__.0+0x58>
   1570f:	48 89 c7             	mov    %rax,%rdi
   15712:	e8 b9 cc fe ff       	call   23d0 <__assert_fail@plt>
   15717:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1571b:	8b 40 04             	mov    0x4(%rax),%eax
   1571e:	83 f8 02             	cmp    $0x2,%eax
   15721:	74 0e                	je     15731 <gencode_op_deprecated+0x64>
   15723:	83 f8 03             	cmp    $0x3,%eax
   15726:	0f 84 9a 00 00 00    	je     157c6 <gencode_op_deprecated+0xf9>
   1572c:	e9 f8 00 00 00       	jmp    15829 <gencode_op_deprecated+0x15c>
   15731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15735:	8b 40 08             	mov    0x8(%rax),%eax
   15738:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1573b:	81 7d fc 2e 01 00 00 	cmpl   $0x12e,-0x4(%rbp)
   15742:	75 26                	jne    1576a <gencode_op_deprecated+0x9d>
   15744:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   15747:	48 63 c8             	movslq %eax,%rcx
   1574a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1574e:	48 8d 15 d1 7d 00 00 	lea    0x7dd1(%rip),%rdx        # 1d526 <__PRETTY_FUNCTION__.0+0x556>
   15755:	48 89 ce             	mov    %rcx,%rsi
   15758:	48 89 c7             	mov    %rax,%rdi
   1575b:	b8 00 00 00 00       	mov    $0x0,%eax
   15760:	e8 4b cc fe ff       	call   23b0 <snprintf@plt>
   15765:	e9 ec 00 00 00       	jmp    15856 <gencode_op_deprecated+0x189>
   1576a:	81 7d fc 2f 01 00 00 	cmpl   $0x12f,-0x4(%rbp)
   15771:	75 26                	jne    15799 <gencode_op_deprecated+0xcc>
   15773:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   15776:	48 63 c8             	movslq %eax,%rcx
   15779:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1577d:	48 8d 15 a7 7d 00 00 	lea    0x7da7(%rip),%rdx        # 1d52b <__PRETTY_FUNCTION__.0+0x55b>
   15784:	48 89 ce             	mov    %rcx,%rsi
   15787:	48 89 c7             	mov    %rax,%rdi
   1578a:	b8 00 00 00 00       	mov    $0x0,%eax
   1578f:	e8 1c cc fe ff       	call   23b0 <snprintf@plt>
   15794:	e9 bd 00 00 00       	jmp    15856 <gencode_op_deprecated+0x189>
   15799:	48 8b 05 c0 c8 00 00 	mov    0xc8c0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   157a0:	48 89 c1             	mov    %rax,%rcx
   157a3:	ba 17 00 00 00       	mov    $0x17,%edx
   157a8:	be 01 00 00 00       	mov    $0x1,%esi
   157ad:	48 8d 05 b5 7c 00 00 	lea    0x7cb5(%rip),%rax        # 1d469 <__PRETTY_FUNCTION__.0+0x499>
   157b4:	48 89 c7             	mov    %rax,%rdi
   157b7:	e8 94 cd fe ff       	call   2550 <fwrite@plt>
   157bc:	bf 01 00 00 00       	mov    $0x1,%edi
   157c1:	e8 7a cd fe ff       	call   2540 <exit@plt>
   157c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157ca:	8b 40 08             	mov    0x8(%rax),%eax
   157cd:	89 45 fc             	mov    %eax,-0x4(%rbp)
   157d0:	81 7d fc 32 01 00 00 	cmpl   $0x132,-0x4(%rbp)
   157d7:	75 23                	jne    157fc <gencode_op_deprecated+0x12f>
   157d9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   157dc:	48 63 c8             	movslq %eax,%rcx
   157df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   157e3:	48 8d 15 46 7d 00 00 	lea    0x7d46(%rip),%rdx        # 1d530 <__PRETTY_FUNCTION__.0+0x560>
   157ea:	48 89 ce             	mov    %rcx,%rsi
   157ed:	48 89 c7             	mov    %rax,%rdi
   157f0:	b8 00 00 00 00       	mov    $0x0,%eax
   157f5:	e8 b6 cb fe ff       	call   23b0 <snprintf@plt>
   157fa:	eb 5a                	jmp    15856 <gencode_op_deprecated+0x189>
   157fc:	48 8b 05 5d c8 00 00 	mov    0xc85d(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15803:	48 89 c1             	mov    %rax,%rcx
   15806:	ba 17 00 00 00       	mov    $0x17,%edx
   1580b:	be 01 00 00 00       	mov    $0x1,%esi
   15810:	48 8d 05 e9 7c 00 00 	lea    0x7ce9(%rip),%rax        # 1d500 <__PRETTY_FUNCTION__.0+0x530>
   15817:	48 89 c7             	mov    %rax,%rdi
   1581a:	e8 31 cd fe ff       	call   2550 <fwrite@plt>
   1581f:	bf 01 00 00 00       	mov    $0x1,%edi
   15824:	e8 17 cd fe ff       	call   2540 <exit@plt>
   15829:	48 8b 05 30 c8 00 00 	mov    0xc830(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15830:	48 89 c1             	mov    %rax,%rcx
   15833:	ba 29 00 00 00       	mov    $0x29,%edx
   15838:	be 01 00 00 00       	mov    $0x1,%esi
   1583d:	48 8d 05 c4 7b 00 00 	lea    0x7bc4(%rip),%rax        # 1d408 <__PRETTY_FUNCTION__.0+0x438>
   15844:	48 89 c7             	mov    %rax,%rdi
   15847:	e8 04 cd fe ff       	call   2550 <fwrite@plt>
   1584c:	bf 01 00 00 00       	mov    $0x1,%edi
   15851:	e8 ea cc fe ff       	call   2540 <exit@plt>
   15856:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1585a:	c9                   	leave
   1585b:	c3                   	ret

000000000001585c <optimize>:
   1585c:	f3 0f 1e fa          	endbr64
   15860:	55                   	push   %rbp
   15861:	48 89 e5             	mov    %rsp,%rbp
   15864:	48 83 ec 10          	sub    $0x10,%rsp
   15868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1586c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15870:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15875:	75 28                	jne    1589f <optimize+0x43>
   15877:	48 8d 05 ea 81 00 00 	lea    0x81ea(%rip),%rax        # 1da68 <__PRETTY_FUNCTION__.12>
   1587e:	48 89 c1             	mov    %rax,%rcx
   15881:	ba 32 00 00 00       	mov    $0x32,%edx
   15886:	48 8d 05 d3 7d 00 00 	lea    0x7dd3(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   1588d:	48 89 c6             	mov    %rax,%rsi
   15890:	48 8d 05 e6 7d 00 00 	lea    0x7de6(%rip),%rax        # 1d67d <__PRETTY_FUNCTION__.0+0x4d>
   15897:	48 89 c7             	mov    %rax,%rdi
   1589a:	e8 31 cb fe ff       	call   23d0 <__assert_fail@plt>
   1589f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   158a4:	75 28                	jne    158ce <optimize+0x72>
   158a6:	48 8d 05 bb 81 00 00 	lea    0x81bb(%rip),%rax        # 1da68 <__PRETTY_FUNCTION__.12>
   158ad:	48 89 c1             	mov    %rax,%rcx
   158b0:	ba 33 00 00 00       	mov    $0x33,%edx
   158b5:	48 8d 05 a4 7d 00 00 	lea    0x7da4(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   158bc:	48 89 c6             	mov    %rax,%rsi
   158bf:	48 8d 05 c6 7d 00 00 	lea    0x7dc6(%rip),%rax        # 1d68c <__PRETTY_FUNCTION__.0+0x5c>
   158c6:	48 89 c7             	mov    %rax,%rdi
   158c9:	e8 02 cb fe ff       	call   23d0 <__assert_fail@plt>
   158ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   158d2:	8b 40 04             	mov    0x4(%rax),%eax
   158d5:	85 c0                	test   %eax,%eax
   158d7:	74 07                	je     158e0 <optimize+0x84>
   158d9:	83 f8 01             	cmp    $0x1,%eax
   158dc:	74 17                	je     158f5 <optimize+0x99>
   158de:	eb 2a                	jmp    1590a <optimize+0xae>
   158e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   158e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158e8:	48 89 d6             	mov    %rdx,%rsi
   158eb:	48 89 c7             	mov    %rax,%rdi
   158ee:	e8 3d 00 00 00       	call   15930 <optimize_prog>
   158f3:	eb 39                	jmp    1592e <optimize+0xd2>
   158f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   158f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158fd:	48 89 d6             	mov    %rdx,%rsi
   15900:	48 89 c7             	mov    %rax,%rdi
   15903:	e8 73 02 00 00       	call   15b7b <optimize_subprog>
   15908:	eb 24                	jmp    1592e <optimize+0xd2>
   1590a:	48 8b 05 4f c7 00 00 	mov    0xc74f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15911:	48 89 c1             	mov    %rax,%rcx
   15914:	ba 3e 00 00 00       	mov    $0x3e,%edx
   15919:	be 01 00 00 00       	mov    $0x1,%esi
   1591e:	48 8d 05 7b 7d 00 00 	lea    0x7d7b(%rip),%rax        # 1d6a0 <__PRETTY_FUNCTION__.0+0x70>
   15925:	48 89 c7             	mov    %rax,%rdi
   15928:	e8 23 cc fe ff       	call   2550 <fwrite@plt>
   1592d:	90                   	nop
   1592e:	c9                   	leave
   1592f:	c3                   	ret

0000000000015930 <optimize_prog>:
   15930:	f3 0f 1e fa          	endbr64
   15934:	55                   	push   %rbp
   15935:	48 89 e5             	mov    %rsp,%rbp
   15938:	48 83 ec 40          	sub    $0x40,%rsp
   1593c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15940:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15944:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1594b:	00 00
   1594d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15951:	31 c0                	xor    %eax,%eax
   15953:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   15958:	75 28                	jne    15982 <optimize_prog+0x52>
   1595a:	48 8d 05 17 81 00 00 	lea    0x8117(%rip),%rax        # 1da78 <__PRETTY_FUNCTION__.11>
   15961:	48 89 c1             	mov    %rax,%rcx
   15964:	ba 48 00 00 00       	mov    $0x48,%edx
   15969:	48 8d 05 f0 7c 00 00 	lea    0x7cf0(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15970:	48 89 c6             	mov    %rax,%rsi
   15973:	48 8d 05 03 7d 00 00 	lea    0x7d03(%rip),%rax        # 1d67d <__PRETTY_FUNCTION__.0+0x4d>
   1597a:	48 89 c7             	mov    %rax,%rdi
   1597d:	e8 4e ca fe ff       	call   23d0 <__assert_fail@plt>
   15982:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15987:	75 28                	jne    159b1 <optimize_prog+0x81>
   15989:	48 8d 05 e8 80 00 00 	lea    0x80e8(%rip),%rax        # 1da78 <__PRETTY_FUNCTION__.11>
   15990:	48 89 c1             	mov    %rax,%rcx
   15993:	ba 49 00 00 00       	mov    $0x49,%edx
   15998:	48 8d 05 c1 7c 00 00 	lea    0x7cc1(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   1599f:	48 89 c6             	mov    %rax,%rsi
   159a2:	48 8d 05 36 7d 00 00 	lea    0x7d36(%rip),%rax        # 1d6df <__PRETTY_FUNCTION__.0+0xaf>
   159a9:	48 89 c7             	mov    %rax,%rdi
   159ac:	e8 1f ca fe ff       	call   23d0 <__assert_fail@plt>
   159b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   159b5:	8b 40 04             	mov    0x4(%rax),%eax
   159b8:	85 c0                	test   %eax,%eax
   159ba:	74 28                	je     159e4 <optimize_prog+0xb4>
   159bc:	48 8d 05 b5 80 00 00 	lea    0x80b5(%rip),%rax        # 1da78 <__PRETTY_FUNCTION__.11>
   159c3:	48 89 c1             	mov    %rax,%rcx
   159c6:	ba 4a 00 00 00       	mov    $0x4a,%edx
   159cb:	48 8d 05 8e 7c 00 00 	lea    0x7c8e(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   159d2:	48 89 c6             	mov    %rax,%rsi
   159d5:	48 8d 05 14 7d 00 00 	lea    0x7d14(%rip),%rax        # 1d6f0 <__PRETTY_FUNCTION__.0+0xc0>
   159dc:	48 89 c7             	mov    %rax,%rdi
   159df:	e8 ec c9 fe ff       	call   23d0 <__assert_fail@plt>
   159e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   159e8:	48 83 c0 08          	add    $0x8,%rax
   159ec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   159f0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   159f7:	00
   159f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   159fc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15a00:	b8 00 00 00 00       	mov    $0x0,%eax
   15a05:	e8 88 26 ff ff       	call   8092 <optimize_flag>
   15a0a:	83 f8 01             	cmp    $0x1,%eax
   15a0d:	0f 8e 33 01 00 00    	jle    15b46 <optimize_prog+0x216>
   15a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a17:	48 8b 50 28          	mov    0x28(%rax),%rdx
   15a1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a1f:	48 89 d6             	mov    %rdx,%rsi
   15a22:	48 89 c7             	mov    %rax,%rdi
   15a25:	e8 9d 03 00 00       	call   15dc7 <decrement_self_references>
   15a2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a2e:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15a32:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15a36:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15a3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a3e:	48 89 c7             	mov    %rax,%rdi
   15a41:	e8 ee 11 00 00       	call   16c34 <set_vars_lists>
   15a46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a4a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15a4e:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15a55:	8b 45 d0             	mov    -0x30(%rbp),%eax
   15a58:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15a5b:	e9 c3 00 00 00       	jmp    15b23 <optimize_prog+0x1f3>
   15a60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a64:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15a68:	48 8b 05 f1 c5 00 00 	mov    0xc5f1(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15a6f:	48 8d 0d 9a 7c 00 00 	lea    0x7c9a(%rip),%rcx        # 1d710 <__PRETTY_FUNCTION__.0+0xe0>
   15a76:	48 89 ce             	mov    %rcx,%rsi
   15a79:	48 89 c7             	mov    %rax,%rdi
   15a7c:	b8 00 00 00 00       	mov    $0x0,%eax
   15a81:	e8 ea c9 fe ff       	call   2470 <fprintf@plt>
   15a86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a8a:	48 8b 50 28          	mov    0x28(%rax),%rdx
   15a8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a92:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15a96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a9a:	48 89 ce             	mov    %rcx,%rsi
   15a9d:	48 89 c7             	mov    %rax,%rdi
   15aa0:	e8 a5 05 00 00       	call   1604a <remove_mutation_statement>
   15aa5:	01 45 d0             	add    %eax,-0x30(%rbp)
   15aa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15aac:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15ab0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ab4:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15ab8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15abc:	48 89 ce             	mov    %rcx,%rsi
   15abf:	48 89 c7             	mov    %rax,%rdi
   15ac2:	e8 67 04 00 00       	call   15f2e <remove_var_decls>
   15ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15acb:	48 8b 40 10          	mov    0x10(%rax),%rax
   15acf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15ad3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15ad8:	75 49                	jne    15b23 <optimize_prog+0x1f3>
   15ada:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   15ade:	7e 43                	jle    15b23 <optimize_prog+0x1f3>
   15ae0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ae4:	48 89 c7             	mov    %rax,%rdi
   15ae7:	e8 aa 29 ff ff       	call   8496 <DestroyList>
   15aec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15af0:	48 89 c7             	mov    %rax,%rdi
   15af3:	e8 9e 29 ff ff       	call   8496 <DestroyList>
   15af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15afc:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15b00:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15b04:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15b08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b0c:	48 89 c7             	mov    %rax,%rdi
   15b0f:	e8 20 11 00 00       	call   16c34 <set_vars_lists>
   15b14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b18:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15b1c:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15b23:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15b28:	0f 85 32 ff ff ff    	jne    15a60 <optimize_prog+0x130>
   15b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15b32:	48 89 c7             	mov    %rax,%rdi
   15b35:	e8 5c 29 ff ff       	call   8496 <DestroyList>
   15b3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b3e:	48 89 c7             	mov    %rax,%rdi
   15b41:	e8 50 29 ff ff       	call   8496 <DestroyList>
   15b46:	b8 00 00 00 00       	mov    $0x0,%eax
   15b4b:	e8 42 25 ff ff       	call   8092 <optimize_flag>
   15b50:	85 c0                	test   %eax,%eax
   15b52:	7e 10                	jle    15b64 <optimize_prog+0x234>
   15b54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b58:	48 8b 40 28          	mov    0x28(%rax),%rax
   15b5c:	48 89 c7             	mov    %rax,%rdi
   15b5f:	e8 c0 08 00 00       	call   16424 <simplify_stmt_expr>
   15b64:	90                   	nop
   15b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b69:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   15b70:	00 00
   15b72:	74 05                	je     15b79 <optimize_prog+0x249>
   15b74:	e8 27 c8 fe ff       	call   23a0 <__stack_chk_fail@plt>
   15b79:	c9                   	leave
   15b7a:	c3                   	ret

0000000000015b7b <optimize_subprog>:
   15b7b:	f3 0f 1e fa          	endbr64
   15b7f:	55                   	push   %rbp
   15b80:	48 89 e5             	mov    %rsp,%rbp
   15b83:	48 83 ec 40          	sub    $0x40,%rsp
   15b87:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15b8b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   15b8f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15b96:	00 00
   15b98:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15b9c:	31 c0                	xor    %eax,%eax
   15b9e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   15ba3:	75 28                	jne    15bcd <optimize_subprog+0x52>
   15ba5:	48 8d 05 e4 7e 00 00 	lea    0x7ee4(%rip),%rax        # 1da90 <__PRETTY_FUNCTION__.10>
   15bac:	48 89 c1             	mov    %rax,%rcx
   15baf:	ba 7e 00 00 00       	mov    $0x7e,%edx
   15bb4:	48 8d 05 a5 7a 00 00 	lea    0x7aa5(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15bbb:	48 89 c6             	mov    %rax,%rsi
   15bbe:	48 8d 05 b8 7a 00 00 	lea    0x7ab8(%rip),%rax        # 1d67d <__PRETTY_FUNCTION__.0+0x4d>
   15bc5:	48 89 c7             	mov    %rax,%rdi
   15bc8:	e8 03 c8 fe ff       	call   23d0 <__assert_fail@plt>
   15bcd:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15bd2:	75 28                	jne    15bfc <optimize_subprog+0x81>
   15bd4:	48 8d 05 b5 7e 00 00 	lea    0x7eb5(%rip),%rax        # 1da90 <__PRETTY_FUNCTION__.10>
   15bdb:	48 89 c1             	mov    %rax,%rcx
   15bde:	ba 7f 00 00 00       	mov    $0x7f,%edx
   15be3:	48 8d 05 76 7a 00 00 	lea    0x7a76(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15bea:	48 89 c6             	mov    %rax,%rsi
   15bed:	48 8d 05 4a 7b 00 00 	lea    0x7b4a(%rip),%rax        # 1d73e <__PRETTY_FUNCTION__.0+0x10e>
   15bf4:	48 89 c7             	mov    %rax,%rdi
   15bf7:	e8 d4 c7 fe ff       	call   23d0 <__assert_fail@plt>
   15bfc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15c00:	8b 40 04             	mov    0x4(%rax),%eax
   15c03:	83 f8 01             	cmp    $0x1,%eax
   15c06:	74 28                	je     15c30 <optimize_subprog+0xb5>
   15c08:	48 8d 05 81 7e 00 00 	lea    0x7e81(%rip),%rax        # 1da90 <__PRETTY_FUNCTION__.10>
   15c0f:	48 89 c1             	mov    %rax,%rcx
   15c12:	ba 80 00 00 00       	mov    $0x80,%edx
   15c17:	48 8d 05 42 7a 00 00 	lea    0x7a42(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15c1e:	48 89 c6             	mov    %rax,%rsi
   15c21:	48 8d 05 22 7b 00 00 	lea    0x7b22(%rip),%rax        # 1d74a <__PRETTY_FUNCTION__.0+0x11a>
   15c28:	48 89 c7             	mov    %rax,%rdi
   15c2b:	e8 a0 c7 fe ff       	call   23d0 <__assert_fail@plt>
   15c30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15c34:	48 83 c0 08          	add    $0x8,%rax
   15c38:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15c3c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   15c43:	00
   15c44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15c48:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   15c4c:	b8 00 00 00 00       	mov    $0x0,%eax
   15c51:	e8 3c 24 ff ff       	call   8092 <optimize_flag>
   15c56:	83 f8 01             	cmp    $0x1,%eax
   15c59:	0f 8e 33 01 00 00    	jle    15d92 <optimize_subprog+0x217>
   15c5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c63:	48 8b 50 48          	mov    0x48(%rax),%rdx
   15c67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c6b:	48 89 d6             	mov    %rdx,%rsi
   15c6e:	48 89 c7             	mov    %rax,%rdi
   15c71:	e8 51 01 00 00       	call   15dc7 <decrement_self_references>
   15c76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c7a:	48 8b 70 38          	mov    0x38(%rax),%rsi
   15c7e:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15c82:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15c86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c8a:	48 89 c7             	mov    %rax,%rdi
   15c8d:	e8 a2 0f 00 00       	call   16c34 <set_vars_lists>
   15c92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15c96:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15c9a:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15ca1:	8b 45 d0             	mov    -0x30(%rbp),%eax
   15ca4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   15ca7:	e9 c3 00 00 00       	jmp    15d6f <optimize_subprog+0x1f4>
   15cac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cb0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15cb4:	48 8b 05 a5 c3 00 00 	mov    0xc3a5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   15cbb:	48 8d 0d 4e 7a 00 00 	lea    0x7a4e(%rip),%rcx        # 1d710 <__PRETTY_FUNCTION__.0+0xe0>
   15cc2:	48 89 ce             	mov    %rcx,%rsi
   15cc5:	48 89 c7             	mov    %rax,%rdi
   15cc8:	b8 00 00 00 00       	mov    $0x0,%eax
   15ccd:	e8 9e c7 fe ff       	call   2470 <fprintf@plt>
   15cd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cd6:	48 8b 50 48          	mov    0x48(%rax),%rdx
   15cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cde:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15ce2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15ce6:	48 89 ce             	mov    %rcx,%rsi
   15ce9:	48 89 c7             	mov    %rax,%rdi
   15cec:	e8 59 03 00 00       	call   1604a <remove_mutation_statement>
   15cf1:	01 45 d0             	add    %eax,-0x30(%rbp)
   15cf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cf8:	48 8b 50 38          	mov    0x38(%rax),%rdx
   15cfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d00:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15d04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d08:	48 89 ce             	mov    %rcx,%rsi
   15d0b:	48 89 c7             	mov    %rax,%rdi
   15d0e:	e8 1b 02 00 00       	call   15f2e <remove_var_decls>
   15d13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d17:	48 8b 40 10          	mov    0x10(%rax),%rax
   15d1b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15d1f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15d24:	75 49                	jne    15d6f <optimize_subprog+0x1f4>
   15d26:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   15d2a:	7e 43                	jle    15d6f <optimize_subprog+0x1f4>
   15d2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d30:	48 89 c7             	mov    %rax,%rdi
   15d33:	e8 5e 27 ff ff       	call   8496 <DestroyList>
   15d38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d3c:	48 89 c7             	mov    %rax,%rdi
   15d3f:	e8 52 27 ff ff       	call   8496 <DestroyList>
   15d44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d48:	48 8b 70 38          	mov    0x38(%rax),%rsi
   15d4c:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   15d50:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   15d54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d58:	48 89 c7             	mov    %rax,%rdi
   15d5b:	e8 d4 0e 00 00       	call   16c34 <set_vars_lists>
   15d60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d64:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15d68:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   15d6f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15d74:	0f 85 32 ff ff ff    	jne    15cac <optimize_subprog+0x131>
   15d7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d7e:	48 89 c7             	mov    %rax,%rdi
   15d81:	e8 10 27 ff ff       	call   8496 <DestroyList>
   15d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d8a:	48 89 c7             	mov    %rax,%rdi
   15d8d:	e8 04 27 ff ff       	call   8496 <DestroyList>
   15d92:	b8 00 00 00 00       	mov    $0x0,%eax
   15d97:	e8 f6 22 ff ff       	call   8092 <optimize_flag>
   15d9c:	85 c0                	test   %eax,%eax
   15d9e:	7e 10                	jle    15db0 <optimize_subprog+0x235>
   15da0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15da4:	48 8b 40 48          	mov    0x48(%rax),%rax
   15da8:	48 89 c7             	mov    %rax,%rdi
   15dab:	e8 74 06 00 00       	call   16424 <simplify_stmt_expr>
   15db0:	90                   	nop
   15db1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15db5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   15dbc:	00 00
   15dbe:	74 05                	je     15dc5 <optimize_subprog+0x24a>
   15dc0:	e8 db c5 fe ff       	call   23a0 <__stack_chk_fail@plt>
   15dc5:	c9                   	leave
   15dc6:	c3                   	ret

0000000000015dc7 <decrement_self_references>:
   15dc7:	f3 0f 1e fa          	endbr64
   15dcb:	55                   	push   %rbp
   15dcc:	48 89 e5             	mov    %rsp,%rbp
   15dcf:	48 83 ec 30          	sub    $0x30,%rsp
   15dd3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15dd7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15ddb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   15de0:	75 28                	jne    15e0a <decrement_self_references+0x43>
   15de2:	48 8d 05 c7 7c 00 00 	lea    0x7cc7(%rip),%rax        # 1dab0 <__PRETTY_FUNCTION__.9>
   15de9:	48 89 c1             	mov    %rax,%rcx
   15dec:	ba b5 00 00 00       	mov    $0xb5,%edx
   15df1:	48 8d 05 68 78 00 00 	lea    0x7868(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15df8:	48 89 c6             	mov    %rax,%rsi
   15dfb:	48 8d 05 7b 78 00 00 	lea    0x787b(%rip),%rax        # 1d67d <__PRETTY_FUNCTION__.0+0x4d>
   15e02:	48 89 c7             	mov    %rax,%rdi
   15e05:	e8 c6 c5 fe ff       	call   23d0 <__assert_fail@plt>
   15e0a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15e0f:	75 28                	jne    15e39 <decrement_self_references+0x72>
   15e11:	48 8d 05 98 7c 00 00 	lea    0x7c98(%rip),%rax        # 1dab0 <__PRETTY_FUNCTION__.9>
   15e18:	48 89 c1             	mov    %rax,%rcx
   15e1b:	ba b6 00 00 00       	mov    $0xb6,%edx
   15e20:	48 8d 05 39 78 00 00 	lea    0x7839(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15e27:	48 89 c6             	mov    %rax,%rsi
   15e2a:	48 8d 05 36 79 00 00 	lea    0x7936(%rip),%rax        # 1d767 <__PRETTY_FUNCTION__.0+0x137>
   15e31:	48 89 c7             	mov    %rax,%rdi
   15e34:	e8 97 c5 fe ff       	call   23d0 <__assert_fail@plt>
   15e39:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e3d:	8b 40 04             	mov    0x4(%rax),%eax
   15e40:	85 c0                	test   %eax,%eax
   15e42:	74 0e                	je     15e52 <decrement_self_references+0x8b>
   15e44:	83 f8 02             	cmp    $0x2,%eax
   15e47:	0f 84 a5 00 00 00    	je     15ef2 <decrement_self_references+0x12b>
   15e4d:	e9 d9 00 00 00       	jmp    15f2b <decrement_self_references+0x164>
   15e52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e56:	48 8b 40 08          	mov    0x8(%rax),%rax
   15e5a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15e5e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15e63:	75 28                	jne    15e8d <decrement_self_references+0xc6>
   15e65:	48 8d 05 44 7c 00 00 	lea    0x7c44(%rip),%rax        # 1dab0 <__PRETTY_FUNCTION__.9>
   15e6c:	48 89 c1             	mov    %rax,%rcx
   15e6f:	ba c1 00 00 00       	mov    $0xc1,%edx
   15e74:	48 8d 05 e5 77 00 00 	lea    0x77e5(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15e7b:	48 89 c6             	mov    %rax,%rsi
   15e7e:	48 8d 05 ef 78 00 00 	lea    0x78ef(%rip),%rax        # 1d774 <__PRETTY_FUNCTION__.0+0x144>
   15e85:	48 89 c7             	mov    %rax,%rdi
   15e88:	e8 43 c5 fe ff       	call   23d0 <__assert_fail@plt>
   15e8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e91:	8b 40 04             	mov    0x4(%rax),%eax
   15e94:	83 f8 04             	cmp    $0x4,%eax
   15e97:	74 28                	je     15ec1 <decrement_self_references+0xfa>
   15e99:	48 8d 05 10 7c 00 00 	lea    0x7c10(%rip),%rax        # 1dab0 <__PRETTY_FUNCTION__.9>
   15ea0:	48 89 c1             	mov    %rax,%rcx
   15ea3:	ba c2 00 00 00       	mov    $0xc2,%edx
   15ea8:	48 8d 05 b1 77 00 00 	lea    0x77b1(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15eaf:	48 89 c6             	mov    %rax,%rsi
   15eb2:	48 8d 05 c8 78 00 00 	lea    0x78c8(%rip),%rax        # 1d781 <__PRETTY_FUNCTION__.0+0x151>
   15eb9:	48 89 c7             	mov    %rax,%rdi
   15ebc:	e8 0f c5 fe ff       	call   23d0 <__assert_fail@plt>
   15ec1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ec5:	48 8b 40 08          	mov    0x8(%rax),%rax
   15ec9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15ecd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15ed1:	48 8b 40 10          	mov    0x10(%rax),%rax
   15ed5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15ed9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15edd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   15ee1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ee5:	48 89 ce             	mov    %rcx,%rsi
   15ee8:	48 89 c7             	mov    %rax,%rdi
   15eeb:	e8 01 09 00 00       	call   167f1 <decrement_reference_id_expr>
   15ef0:	eb 39                	jmp    15f2b <decrement_self_references+0x164>
   15ef2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15ef6:	48 8b 40 08          	mov    0x8(%rax),%rax
   15efa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15efe:	eb 23                	jmp    15f23 <decrement_self_references+0x15c>
   15f00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f04:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15f08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f0c:	48 89 d6             	mov    %rdx,%rsi
   15f0f:	48 89 c7             	mov    %rax,%rdi
   15f12:	e8 b0 fe ff ff       	call   15dc7 <decrement_self_references>
   15f17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f1b:	48 8b 40 10          	mov    0x10(%rax),%rax
   15f1f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15f23:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15f28:	75 d6                	jne    15f00 <decrement_self_references+0x139>
   15f2a:	90                   	nop
   15f2b:	90                   	nop
   15f2c:	c9                   	leave
   15f2d:	c3                   	ret

0000000000015f2e <remove_var_decls>:
   15f2e:	f3 0f 1e fa          	endbr64
   15f32:	55                   	push   %rbp
   15f33:	48 89 e5             	mov    %rsp,%rbp
   15f36:	48 83 ec 40          	sub    $0x40,%rsp
   15f3a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15f3e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15f42:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15f46:	e9 f2 00 00 00       	jmp    1603d <remove_var_decls+0x10f>
   15f4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f4f:	48 8b 40 08          	mov    0x8(%rax),%rax
   15f53:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15f57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f5b:	8b 40 04             	mov    0x4(%rax),%eax
   15f5e:	83 f8 02             	cmp    $0x2,%eax
   15f61:	74 28                	je     15f8b <remove_var_decls+0x5d>
   15f63:	48 8d 05 66 7b 00 00 	lea    0x7b66(%rip),%rax        # 1dad0 <__PRETTY_FUNCTION__.8>
   15f6a:	48 89 c1             	mov    %rax,%rcx
   15f6d:	ba e2 00 00 00       	mov    $0xe2,%edx
   15f72:	48 8d 05 e7 76 00 00 	lea    0x76e7(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   15f79:	48 89 c6             	mov    %rax,%rsi
   15f7c:	48 8d 05 1d 78 00 00 	lea    0x781d(%rip),%rax        # 1d7a0 <__PRETTY_FUNCTION__.0+0x170>
   15f83:	48 89 c7             	mov    %rax,%rdi
   15f86:	e8 45 c4 fe ff       	call   23d0 <__assert_fail@plt>
   15f8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f8f:	48 8b 40 08          	mov    0x8(%rax),%rax
   15f93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15f97:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   15f9e:	00
   15f9f:	e9 82 00 00 00       	jmp    16026 <remove_var_decls+0xf8>
   15fa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fa8:	48 8b 40 08          	mov    0x8(%rax),%rax
   15fac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15fb0:	48 89 d6             	mov    %rdx,%rsi
   15fb3:	48 89 c7             	mov    %rax,%rdi
   15fb6:	e8 95 c4 fe ff       	call   2450 <strcmp@plt>
   15fbb:	85 c0                	test   %eax,%eax
   15fbd:	75 53                	jne    16012 <remove_var_decls+0xe4>
   15fbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fc3:	48 8b 40 08          	mov    0x8(%rax),%rax
   15fc7:	48 89 c7             	mov    %rax,%rdi
   15fca:	e8 21 c3 fe ff       	call   22f0 <free@plt>
   15fcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fd3:	48 8b 40 10          	mov    0x10(%rax),%rax
   15fd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15fdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fdf:	48 89 c7             	mov    %rax,%rdi
   15fe2:	e8 09 c3 fe ff       	call   22f0 <free@plt>
   15fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15feb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15fef:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15ff4:	75 0e                	jne    16004 <remove_var_decls+0xd6>
   15ff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ffa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ffe:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16002:	eb 44                	jmp    16048 <remove_var_decls+0x11a>
   16004:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16008:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1600c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   16010:	eb 36                	jmp    16048 <remove_var_decls+0x11a>
   16012:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16016:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1601a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1601e:	48 8b 40 10          	mov    0x10(%rax),%rax
   16022:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16026:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1602b:	0f 85 73 ff ff ff    	jne    15fa4 <remove_var_decls+0x76>
   16031:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16035:	48 8b 40 10          	mov    0x10(%rax),%rax
   16039:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1603d:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   16042:	0f 85 03 ff ff ff    	jne    15f4b <remove_var_decls+0x1d>
   16048:	c9                   	leave
   16049:	c3                   	ret

000000000001604a <remove_mutation_statement>:
   1604a:	f3 0f 1e fa          	endbr64
   1604e:	55                   	push   %rbp
   1604f:	48 89 e5             	mov    %rsp,%rbp
   16052:	48 83 ec 20          	sub    $0x20,%rsp
   16056:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1605a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1605e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16062:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16067:	75 28                	jne    16091 <remove_mutation_statement+0x47>
   16069:	48 8d 05 80 7a 00 00 	lea    0x7a80(%rip),%rax        # 1daf0 <__PRETTY_FUNCTION__.7>
   16070:	48 89 c1             	mov    %rax,%rcx
   16073:	ba 06 01 00 00       	mov    $0x106,%edx
   16078:	48 8d 05 e1 75 00 00 	lea    0x75e1(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   1607f:	48 89 c6             	mov    %rax,%rsi
   16082:	48 8d 05 f4 75 00 00 	lea    0x75f4(%rip),%rax        # 1d67d <__PRETTY_FUNCTION__.0+0x4d>
   16089:	48 89 c7             	mov    %rax,%rdi
   1608c:	e8 3f c3 fe ff       	call   23d0 <__assert_fail@plt>
   16091:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   16096:	75 28                	jne    160c0 <remove_mutation_statement+0x76>
   16098:	48 8d 05 51 7a 00 00 	lea    0x7a51(%rip),%rax        # 1daf0 <__PRETTY_FUNCTION__.7>
   1609f:	48 89 c1             	mov    %rax,%rcx
   160a2:	ba 07 01 00 00       	mov    $0x107,%edx
   160a7:	48 8d 05 b2 75 00 00 	lea    0x75b2(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   160ae:	48 89 c6             	mov    %rax,%rsi
   160b1:	48 8d 05 af 76 00 00 	lea    0x76af(%rip),%rax        # 1d767 <__PRETTY_FUNCTION__.0+0x137>
   160b8:	48 89 c7             	mov    %rax,%rdi
   160bb:	e8 10 c3 fe ff       	call   23d0 <__assert_fail@plt>
   160c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   160c5:	75 28                	jne    160ef <remove_mutation_statement+0xa5>
   160c7:	48 8d 05 22 7a 00 00 	lea    0x7a22(%rip),%rax        # 1daf0 <__PRETTY_FUNCTION__.7>
   160ce:	48 89 c1             	mov    %rax,%rcx
   160d1:	ba 08 01 00 00       	mov    $0x108,%edx
   160d6:	48 8d 05 83 75 00 00 	lea    0x7583(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   160dd:	48 89 c6             	mov    %rax,%rsi
   160e0:	48 8d 05 d9 76 00 00 	lea    0x76d9(%rip),%rax        # 1d7c0 <__PRETTY_FUNCTION__.0+0x190>
   160e7:	48 89 c7             	mov    %rax,%rdi
   160ea:	e8 e1 c2 fe ff       	call   23d0 <__assert_fail@plt>
   160ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160f3:	8b 40 04             	mov    0x4(%rax),%eax
   160f6:	83 f8 02             	cmp    $0x2,%eax
   160f9:	74 29                	je     16124 <remove_mutation_statement+0xda>
   160fb:	83 f8 02             	cmp    $0x2,%eax
   160fe:	77 44                	ja     16144 <remove_mutation_statement+0xfa>
   16100:	85 c0                	test   %eax,%eax
   16102:	74 07                	je     1610b <remove_mutation_statement+0xc1>
   16104:	83 f8 01             	cmp    $0x1,%eax
   16107:	74 34                	je     1613d <remove_mutation_statement+0xf3>
   16109:	eb 39                	jmp    16144 <remove_mutation_statement+0xfa>
   1610b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1610f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16117:	48 89 ce             	mov    %rcx,%rsi
   1611a:	48 89 c7             	mov    %rax,%rdi
   1611d:	e8 4d 00 00 00       	call   1616f <remove_mutation_var_assign>
   16122:	eb 49                	jmp    1616d <remove_mutation_statement+0x123>
   16124:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16128:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1612c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16130:	48 89 ce             	mov    %rcx,%rsi
   16133:	48 89 c7             	mov    %rax,%rdi
   16136:	e8 8d 01 00 00       	call   162c8 <remove_mutation_compound_statement>
   1613b:	eb 30                	jmp    1616d <remove_mutation_statement+0x123>
   1613d:	b8 00 00 00 00       	mov    $0x0,%eax
   16142:	eb 29                	jmp    1616d <remove_mutation_statement+0x123>
   16144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16148:	8b 10                	mov    (%rax),%edx
   1614a:	48 8b 05 0f bf 00 00 	mov    0xbf0f(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16151:	48 8d 0d 78 76 00 00 	lea    0x7678(%rip),%rcx        # 1d7d0 <__PRETTY_FUNCTION__.0+0x1a0>
   16158:	48 89 ce             	mov    %rcx,%rsi
   1615b:	48 89 c7             	mov    %rax,%rdi
   1615e:	b8 00 00 00 00       	mov    $0x0,%eax
   16163:	e8 08 c3 fe ff       	call   2470 <fprintf@plt>
   16168:	b8 00 00 00 00       	mov    $0x0,%eax
   1616d:	c9                   	leave
   1616e:	c3                   	ret

000000000001616f <remove_mutation_var_assign>:
   1616f:	f3 0f 1e fa          	endbr64
   16173:	55                   	push   %rbp
   16174:	48 89 e5             	mov    %rsp,%rbp
   16177:	48 83 ec 30          	sub    $0x30,%rsp
   1617b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1617f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16183:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16187:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1618c:	75 28                	jne    161b6 <remove_mutation_var_assign+0x47>
   1618e:	48 8d 05 7b 79 00 00 	lea    0x797b(%rip),%rax        # 1db10 <__PRETTY_FUNCTION__.6>
   16195:	48 89 c1             	mov    %rax,%rcx
   16198:	ba 21 01 00 00       	mov    $0x121,%edx
   1619d:	48 8d 05 bc 74 00 00 	lea    0x74bc(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   161a4:	48 89 c6             	mov    %rax,%rsi
   161a7:	48 8d 05 4f 76 00 00 	lea    0x764f(%rip),%rax        # 1d7fd <__PRETTY_FUNCTION__.0+0x1cd>
   161ae:	48 89 c7             	mov    %rax,%rdi
   161b1:	e8 1a c2 fe ff       	call   23d0 <__assert_fail@plt>
   161b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161ba:	8b 40 04             	mov    0x4(%rax),%eax
   161bd:	85 c0                	test   %eax,%eax
   161bf:	74 28                	je     161e9 <remove_mutation_var_assign+0x7a>
   161c1:	48 8d 05 48 79 00 00 	lea    0x7948(%rip),%rax        # 1db10 <__PRETTY_FUNCTION__.6>
   161c8:	48 89 c1             	mov    %rax,%rcx
   161cb:	ba 22 01 00 00       	mov    $0x122,%edx
   161d0:	48 8d 05 89 74 00 00 	lea    0x7489(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   161d7:	48 89 c6             	mov    %rax,%rsi
   161da:	48 8d 05 2f 76 00 00 	lea    0x762f(%rip),%rax        # 1d810 <__PRETTY_FUNCTION__.0+0x1e0>
   161e1:	48 89 c7             	mov    %rax,%rdi
   161e4:	e8 e7 c1 fe ff       	call   23d0 <__assert_fail@plt>
   161e9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   161ee:	75 28                	jne    16218 <remove_mutation_var_assign+0xa9>
   161f0:	48 8d 05 19 79 00 00 	lea    0x7919(%rip),%rax        # 1db10 <__PRETTY_FUNCTION__.6>
   161f7:	48 89 c1             	mov    %rax,%rcx
   161fa:	ba 23 01 00 00       	mov    $0x123,%edx
   161ff:	48 8d 05 5a 74 00 00 	lea    0x745a(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16206:	48 89 c6             	mov    %rax,%rsi
   16209:	48 8d 05 b0 75 00 00 	lea    0x75b0(%rip),%rax        # 1d7c0 <__PRETTY_FUNCTION__.0+0x190>
   16210:	48 89 c7             	mov    %rax,%rdi
   16213:	e8 b8 c1 fe ff       	call   23d0 <__assert_fail@plt>
   16218:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1621c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16220:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16228:	8b 40 04             	mov    0x4(%rax),%eax
   1622b:	83 f8 04             	cmp    $0x4,%eax
   1622e:	74 28                	je     16258 <remove_mutation_var_assign+0xe9>
   16230:	48 8d 05 d9 78 00 00 	lea    0x78d9(%rip),%rax        # 1db10 <__PRETTY_FUNCTION__.6>
   16237:	48 89 c1             	mov    %rax,%rcx
   1623a:	ba 28 01 00 00       	mov    $0x128,%edx
   1623f:	48 8d 05 1a 74 00 00 	lea    0x741a(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16246:	48 89 c6             	mov    %rax,%rsi
   16249:	48 8d 05 e4 75 00 00 	lea    0x75e4(%rip),%rax        # 1d834 <__PRETTY_FUNCTION__.0+0x204>
   16250:	48 89 c7             	mov    %rax,%rdi
   16253:	e8 78 c1 fe ff       	call   23d0 <__assert_fail@plt>
   16258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1625c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16260:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16264:	48 89 d6             	mov    %rdx,%rsi
   16267:	48 89 c7             	mov    %rax,%rdi
   1626a:	e8 e1 c1 fe ff       	call   2450 <strcmp@plt>
   1626f:	85 c0                	test   %eax,%eax
   16271:	75 4e                	jne    162c1 <remove_mutation_var_assign+0x152>
   16273:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16277:	8b 10                	mov    (%rax),%edx
   16279:	48 8b 05 e0 bd 00 00 	mov    0xbde0(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16280:	48 8d 0d c9 75 00 00 	lea    0x75c9(%rip),%rcx        # 1d850 <__PRETTY_FUNCTION__.0+0x220>
   16287:	48 89 ce             	mov    %rcx,%rsi
   1628a:	48 89 c7             	mov    %rax,%rdi
   1628d:	b8 00 00 00 00       	mov    $0x0,%eax
   16292:	e8 d9 c1 fe ff       	call   2470 <fprintf@plt>
   16297:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1629b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1629f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162a3:	48 89 d6             	mov    %rdx,%rsi
   162a6:	48 89 c7             	mov    %rax,%rdi
   162a9:	e8 84 07 00 00       	call   16a32 <decrement_reference_expr>
   162ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162b2:	48 89 c7             	mov    %rax,%rdi
   162b5:	e8 e6 36 ff ff       	call   99a0 <destroy_stmt>
   162ba:	b8 01 00 00 00       	mov    $0x1,%eax
   162bf:	eb 05                	jmp    162c6 <remove_mutation_var_assign+0x157>
   162c1:	b8 00 00 00 00       	mov    $0x0,%eax
   162c6:	c9                   	leave
   162c7:	c3                   	ret

00000000000162c8 <remove_mutation_compound_statement>:
   162c8:	f3 0f 1e fa          	endbr64
   162cc:	55                   	push   %rbp
   162cd:	48 89 e5             	mov    %rsp,%rbp
   162d0:	48 83 ec 50          	sub    $0x50,%rsp
   162d4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   162d8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   162dc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   162e0:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   162e5:	75 28                	jne    1630f <remove_mutation_compound_statement+0x47>
   162e7:	48 8d 05 52 78 00 00 	lea    0x7852(%rip),%rax        # 1db40 <__PRETTY_FUNCTION__.5>
   162ee:	48 89 c1             	mov    %rax,%rcx
   162f1:	ba 3b 01 00 00       	mov    $0x13b,%edx
   162f6:	48 8d 05 63 73 00 00 	lea    0x7363(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   162fd:	48 89 c6             	mov    %rax,%rsi
   16300:	48 8d 05 74 75 00 00 	lea    0x7574(%rip),%rax        # 1d87b <__PRETTY_FUNCTION__.0+0x24b>
   16307:	48 89 c7             	mov    %rax,%rdi
   1630a:	e8 c1 c0 fe ff       	call   23d0 <__assert_fail@plt>
   1630f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16313:	8b 40 04             	mov    0x4(%rax),%eax
   16316:	83 f8 02             	cmp    $0x2,%eax
   16319:	74 28                	je     16343 <remove_mutation_compound_statement+0x7b>
   1631b:	48 8d 05 1e 78 00 00 	lea    0x781e(%rip),%rax        # 1db40 <__PRETTY_FUNCTION__.5>
   16322:	48 89 c1             	mov    %rax,%rcx
   16325:	ba 3c 01 00 00       	mov    $0x13c,%edx
   1632a:	48 8d 05 2f 73 00 00 	lea    0x732f(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16331:	48 89 c6             	mov    %rax,%rsi
   16334:	48 8d 05 5d 75 00 00 	lea    0x755d(%rip),%rax        # 1d898 <__PRETTY_FUNCTION__.0+0x268>
   1633b:	48 89 c7             	mov    %rax,%rdi
   1633e:	e8 8d c0 fe ff       	call   23d0 <__assert_fail@plt>
   16343:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   16348:	75 28                	jne    16372 <remove_mutation_compound_statement+0xaa>
   1634a:	48 8d 05 ef 77 00 00 	lea    0x77ef(%rip),%rax        # 1db40 <__PRETTY_FUNCTION__.5>
   16351:	48 89 c1             	mov    %rax,%rcx
   16354:	ba 3d 01 00 00       	mov    $0x13d,%edx
   16359:	48 8d 05 00 73 00 00 	lea    0x7300(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16360:	48 89 c6             	mov    %rax,%rsi
   16363:	48 8d 05 56 74 00 00 	lea    0x7456(%rip),%rax        # 1d7c0 <__PRETTY_FUNCTION__.0+0x190>
   1636a:	48 89 c7             	mov    %rax,%rdi
   1636d:	e8 5e c0 fe ff       	call   23d0 <__assert_fail@plt>
   16372:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16376:	48 8b 40 08          	mov    0x8(%rax),%rax
   1637a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1637e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   16385:	00
   16386:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   1638d:	e9 82 00 00 00       	jmp    16414 <remove_mutation_compound_statement+0x14c>
   16392:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16396:	48 8b 40 08          	mov    0x8(%rax),%rax
   1639a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1639e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   163a2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   163a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   163aa:	48 89 ce             	mov    %rcx,%rsi
   163ad:	48 89 c7             	mov    %rax,%rdi
   163b0:	e8 95 fc ff ff       	call   1604a <remove_mutation_statement>
   163b5:	85 c0                	test   %eax,%eax
   163b7:	7e 47                	jle    16400 <remove_mutation_compound_statement+0x138>
   163b9:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   163bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   163c1:	48 8b 40 10          	mov    0x10(%rax),%rax
   163c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   163c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   163cd:	48 89 c7             	mov    %rax,%rdi
   163d0:	e8 1b bf fe ff       	call   22f0 <free@plt>
   163d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   163dd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   163e2:	75 0e                	jne    163f2 <remove_mutation_compound_statement+0x12a>
   163e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   163e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   163ec:	48 89 50 08          	mov    %rdx,0x8(%rax)
   163f0:	eb 22                	jmp    16414 <remove_mutation_compound_statement+0x14c>
   163f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163f6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   163fa:	48 89 50 10          	mov    %rdx,0x10(%rax)
   163fe:	eb 14                	jmp    16414 <remove_mutation_compound_statement+0x14c>
   16400:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16404:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16408:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1640c:	48 8b 40 10          	mov    0x10(%rax),%rax
   16410:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16414:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16419:	0f 85 73 ff ff ff    	jne    16392 <remove_mutation_compound_statement+0xca>
   1641f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   16422:	c9                   	leave
   16423:	c3                   	ret

0000000000016424 <simplify_stmt_expr>:
   16424:	f3 0f 1e fa          	endbr64
   16428:	55                   	push   %rbp
   16429:	48 89 e5             	mov    %rsp,%rbp
   1642c:	48 83 ec 20          	sub    $0x20,%rsp
   16430:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16434:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   16439:	75 28                	jne    16463 <simplify_stmt_expr+0x3f>
   1643b:	48 8d 05 2e 77 00 00 	lea    0x772e(%rip),%rax        # 1db70 <__PRETTY_FUNCTION__.4>
   16442:	48 89 c1             	mov    %rax,%rcx
   16445:	ba 67 01 00 00       	mov    $0x167,%edx
   1644a:	48 8d 05 0f 72 00 00 	lea    0x720f(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16451:	48 89 c6             	mov    %rax,%rsi
   16454:	48 8d 05 0c 73 00 00 	lea    0x730c(%rip),%rax        # 1d767 <__PRETTY_FUNCTION__.0+0x137>
   1645b:	48 89 c7             	mov    %rax,%rdi
   1645e:	e8 6d bf fe ff       	call   23d0 <__assert_fail@plt>
   16463:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16467:	8b 40 04             	mov    0x4(%rax),%eax
   1646a:	85 c0                	test   %eax,%eax
   1646c:	74 07                	je     16475 <simplify_stmt_expr+0x51>
   1646e:	83 f8 02             	cmp    $0x2,%eax
   16471:	74 14                	je     16487 <simplify_stmt_expr+0x63>
   16473:	eb 44                	jmp    164b9 <simplify_stmt_expr+0x95>
   16475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16479:	48 83 c0 10          	add    $0x10,%rax
   1647d:	48 89 c7             	mov    %rax,%rdi
   16480:	e8 37 00 00 00       	call   164bc <simplify_expr>
   16485:	eb 32                	jmp    164b9 <simplify_stmt_expr+0x95>
   16487:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1648b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1648f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16493:	eb 1c                	jmp    164b1 <simplify_stmt_expr+0x8d>
   16495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16499:	48 8b 40 08          	mov    0x8(%rax),%rax
   1649d:	48 89 c7             	mov    %rax,%rdi
   164a0:	e8 7f ff ff ff       	call   16424 <simplify_stmt_expr>
   164a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164a9:	48 8b 40 10          	mov    0x10(%rax),%rax
   164ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   164b1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   164b6:	75 dd                	jne    16495 <simplify_stmt_expr+0x71>
   164b8:	90                   	nop
   164b9:	90                   	nop
   164ba:	c9                   	leave
   164bb:	c3                   	ret

00000000000164bc <simplify_expr>:
   164bc:	f3 0f 1e fa          	endbr64
   164c0:	55                   	push   %rbp
   164c1:	48 89 e5             	mov    %rsp,%rbp
   164c4:	48 83 ec 30          	sub    $0x30,%rsp
   164c8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   164cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   164d0:	48 8b 00             	mov    (%rax),%rax
   164d3:	8b 40 04             	mov    0x4(%rax),%eax
   164d6:	83 f8 08             	cmp    $0x8,%eax
   164d9:	0f 87 0b 03 00 00    	ja     167ea <simplify_expr+0x32e>
   164df:	83 f8 07             	cmp    $0x7,%eax
   164e2:	73 25                	jae    16509 <simplify_expr+0x4d>
   164e4:	83 f8 03             	cmp    $0x3,%eax
   164e7:	0f 84 fe 01 00 00    	je     166eb <simplify_expr+0x22f>
   164ed:	83 f8 03             	cmp    $0x3,%eax
   164f0:	0f 87 f4 02 00 00    	ja     167ea <simplify_expr+0x32e>
   164f6:	83 f8 01             	cmp    $0x1,%eax
   164f9:	74 18                	je     16513 <simplify_expr+0x57>
   164fb:	83 f8 02             	cmp    $0x2,%eax
   164fe:	0f 84 e4 00 00 00    	je     165e8 <simplify_expr+0x12c>
   16504:	e9 e1 02 00 00       	jmp    167ea <simplify_expr+0x32e>
   16509:	b8 01 00 00 00       	mov    $0x1,%eax
   1650e:	e9 dc 02 00 00       	jmp    167ef <simplify_expr+0x333>
   16513:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16517:	48 8b 00             	mov    (%rax),%rax
   1651a:	48 83 c0 08          	add    $0x8,%rax
   1651e:	48 89 c7             	mov    %rax,%rdi
   16521:	e8 96 ff ff ff       	call   164bc <simplify_expr>
   16526:	89 45 f0             	mov    %eax,-0x10(%rbp)
   16529:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1652d:	48 8b 00             	mov    (%rax),%rax
   16530:	48 8b 40 08          	mov    0x8(%rax),%rax
   16534:	48 85 c0             	test   %rax,%rax
   16537:	75 28                	jne    16561 <simplify_expr+0xa5>
   16539:	48 8d 05 48 76 00 00 	lea    0x7648(%rip),%rax        # 1db88 <__PRETTY_FUNCTION__.3>
   16540:	48 89 c1             	mov    %rax,%rcx
   16543:	ba 92 01 00 00       	mov    $0x192,%edx
   16548:	48 8d 05 11 71 00 00 	lea    0x7111(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   1654f:	48 89 c6             	mov    %rax,%rsi
   16552:	48 8d 05 6f 73 00 00 	lea    0x736f(%rip),%rax        # 1d8c8 <__PRETTY_FUNCTION__.0+0x298>
   16559:	48 89 c7             	mov    %rax,%rdi
   1655c:	e8 6f be fe ff       	call   23d0 <__assert_fail@plt>
   16561:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   16565:	75 77                	jne    165de <simplify_expr+0x122>
   16567:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1656b:	48 8b 00             	mov    (%rax),%rax
   1656e:	8b 10                	mov    (%rax),%edx
   16570:	48 8b 05 e9 ba 00 00 	mov    0xbae9(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16577:	48 8d 0d 72 73 00 00 	lea    0x7372(%rip),%rcx        # 1d8f0 <__PRETTY_FUNCTION__.0+0x2c0>
   1657e:	48 89 ce             	mov    %rcx,%rsi
   16581:	48 89 c7             	mov    %rax,%rdi
   16584:	b8 00 00 00 00       	mov    $0x0,%eax
   16589:	e8 e2 be fe ff       	call   2470 <fprintf@plt>
   1658e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16592:	48 8b 00             	mov    (%rax),%rax
   16595:	48 8b 40 08          	mov    0x8(%rax),%rax
   16599:	8b 40 08             	mov    0x8(%rax),%eax
   1659c:	f7 d8                	neg    %eax
   1659e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   165a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165a5:	48 8b 00             	mov    (%rax),%rax
   165a8:	8b 00                	mov    (%rax),%eax
   165aa:	8b 55 ec             	mov    -0x14(%rbp),%edx
   165ad:	89 d6                	mov    %edx,%esi
   165af:	89 c7                	mov    %eax,%edi
   165b1:	e8 e7 3f ff ff       	call   a59d <mk_inum>
   165b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   165ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165be:	48 8b 00             	mov    (%rax),%rax
   165c1:	48 89 c7             	mov    %rax,%rdi
   165c4:	e8 b9 35 ff ff       	call   9b82 <destroy_expr>
   165c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   165d1:	48 89 10             	mov    %rdx,(%rax)
   165d4:	b8 01 00 00 00       	mov    $0x1,%eax
   165d9:	e9 11 02 00 00       	jmp    167ef <simplify_expr+0x333>
   165de:	b8 00 00 00 00       	mov    $0x0,%eax
   165e3:	e9 07 02 00 00       	jmp    167ef <simplify_expr+0x333>
   165e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165ec:	48 8b 00             	mov    (%rax),%rax
   165ef:	48 83 c0 10          	add    $0x10,%rax
   165f3:	48 89 c7             	mov    %rax,%rdi
   165f6:	e8 c1 fe ff ff       	call   164bc <simplify_expr>
   165fb:	89 45 f0             	mov    %eax,-0x10(%rbp)
   165fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16602:	48 8b 00             	mov    (%rax),%rax
   16605:	48 83 c0 18          	add    $0x18,%rax
   16609:	48 89 c7             	mov    %rax,%rdi
   1660c:	e8 ab fe ff ff       	call   164bc <simplify_expr>
   16611:	89 45 f4             	mov    %eax,-0xc(%rbp)
   16614:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   16618:	0f 85 c3 00 00 00    	jne    166e1 <simplify_expr+0x225>
   1661e:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   16622:	0f 85 b9 00 00 00    	jne    166e1 <simplify_expr+0x225>
   16628:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1662c:	48 8b 00             	mov    (%rax),%rax
   1662f:	8b 10                	mov    (%rax),%edx
   16631:	48 8b 05 28 ba 00 00 	mov    0xba28(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16638:	48 8d 0d e9 72 00 00 	lea    0x72e9(%rip),%rcx        # 1d928 <__PRETTY_FUNCTION__.0+0x2f8>
   1663f:	48 89 ce             	mov    %rcx,%rsi
   16642:	48 89 c7             	mov    %rax,%rdi
   16645:	b8 00 00 00 00       	mov    $0x0,%eax
   1664a:	e8 21 be fe ff       	call   2470 <fprintf@plt>
   1664f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16653:	48 8b 00             	mov    (%rax),%rax
   16656:	8b 40 08             	mov    0x8(%rax),%eax
   16659:	3d 2e 01 00 00       	cmp    $0x12e,%eax
   1665e:	75 23                	jne    16683 <simplify_expr+0x1c7>
   16660:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16664:	48 8b 00             	mov    (%rax),%rax
   16667:	48 8b 40 10          	mov    0x10(%rax),%rax
   1666b:	8b 50 08             	mov    0x8(%rax),%edx
   1666e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16672:	48 8b 00             	mov    (%rax),%rax
   16675:	48 8b 40 18          	mov    0x18(%rax),%rax
   16679:	8b 40 08             	mov    0x8(%rax),%eax
   1667c:	01 d0                	add    %edx,%eax
   1667e:	89 45 ec             	mov    %eax,-0x14(%rbp)
   16681:	eb 21                	jmp    166a4 <simplify_expr+0x1e8>
   16683:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16687:	48 8b 00             	mov    (%rax),%rax
   1668a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1668e:	8b 50 08             	mov    0x8(%rax),%edx
   16691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16695:	48 8b 00             	mov    (%rax),%rax
   16698:	48 8b 40 18          	mov    0x18(%rax),%rax
   1669c:	8b 40 08             	mov    0x8(%rax),%eax
   1669f:	29 c2                	sub    %eax,%edx
   166a1:	89 55 ec             	mov    %edx,-0x14(%rbp)
   166a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166a8:	48 8b 00             	mov    (%rax),%rax
   166ab:	8b 00                	mov    (%rax),%eax
   166ad:	8b 55 ec             	mov    -0x14(%rbp),%edx
   166b0:	89 d6                	mov    %edx,%esi
   166b2:	89 c7                	mov    %eax,%edi
   166b4:	e8 e4 3e ff ff       	call   a59d <mk_inum>
   166b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   166bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166c1:	48 8b 00             	mov    (%rax),%rax
   166c4:	48 89 c7             	mov    %rax,%rdi
   166c7:	e8 b6 34 ff ff       	call   9b82 <destroy_expr>
   166cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166d4:	48 89 10             	mov    %rdx,(%rax)
   166d7:	b8 01 00 00 00       	mov    $0x1,%eax
   166dc:	e9 0e 01 00 00       	jmp    167ef <simplify_expr+0x333>
   166e1:	b8 00 00 00 00       	mov    $0x0,%eax
   166e6:	e9 04 01 00 00       	jmp    167ef <simplify_expr+0x333>
   166eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166ef:	48 8b 00             	mov    (%rax),%rax
   166f2:	48 83 c0 10          	add    $0x10,%rax
   166f6:	48 89 c7             	mov    %rax,%rdi
   166f9:	e8 be fd ff ff       	call   164bc <simplify_expr>
   166fe:	89 45 f0             	mov    %eax,-0x10(%rbp)
   16701:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16705:	48 8b 00             	mov    (%rax),%rax
   16708:	48 83 c0 18          	add    $0x18,%rax
   1670c:	48 89 c7             	mov    %rax,%rdi
   1670f:	e8 a8 fd ff ff       	call   164bc <simplify_expr>
   16714:	89 45 f4             	mov    %eax,-0xc(%rbp)
   16717:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
   1671b:	0f 85 c2 00 00 00    	jne    167e3 <simplify_expr+0x327>
   16721:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   16725:	0f 85 b8 00 00 00    	jne    167e3 <simplify_expr+0x327>
   1672b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1672f:	48 8b 00             	mov    (%rax),%rax
   16732:	8b 10                	mov    (%rax),%edx
   16734:	48 8b 05 25 b9 00 00 	mov    0xb925(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1673b:	48 8d 0d 1e 72 00 00 	lea    0x721e(%rip),%rcx        # 1d960 <__PRETTY_FUNCTION__.0+0x330>
   16742:	48 89 ce             	mov    %rcx,%rsi
   16745:	48 89 c7             	mov    %rax,%rdi
   16748:	b8 00 00 00 00       	mov    $0x0,%eax
   1674d:	e8 1e bd fe ff       	call   2470 <fprintf@plt>
   16752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16756:	48 8b 00             	mov    (%rax),%rax
   16759:	8b 40 08             	mov    0x8(%rax),%eax
   1675c:	3d 32 01 00 00       	cmp    $0x132,%eax
   16761:	75 24                	jne    16787 <simplify_expr+0x2cb>
   16763:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16767:	48 8b 00             	mov    (%rax),%rax
   1676a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1676e:	8b 50 08             	mov    0x8(%rax),%edx
   16771:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16775:	48 8b 00             	mov    (%rax),%rax
   16778:	48 8b 40 18          	mov    0x18(%rax),%rax
   1677c:	8b 40 08             	mov    0x8(%rax),%eax
   1677f:	0f af c2             	imul   %edx,%eax
   16782:	89 45 ec             	mov    %eax,-0x14(%rbp)
   16785:	eb 22                	jmp    167a9 <simplify_expr+0x2ed>
   16787:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1678b:	48 8b 00             	mov    (%rax),%rax
   1678e:	48 8b 40 10          	mov    0x10(%rax),%rax
   16792:	8b 40 08             	mov    0x8(%rax),%eax
   16795:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16799:	48 8b 12             	mov    (%rdx),%rdx
   1679c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   167a0:	8b 4a 08             	mov    0x8(%rdx),%ecx
   167a3:	99                   	cltd
   167a4:	f7 f9                	idiv   %ecx
   167a6:	89 45 ec             	mov    %eax,-0x14(%rbp)
   167a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167ad:	48 8b 00             	mov    (%rax),%rax
   167b0:	8b 00                	mov    (%rax),%eax
   167b2:	8b 55 ec             	mov    -0x14(%rbp),%edx
   167b5:	89 d6                	mov    %edx,%esi
   167b7:	89 c7                	mov    %eax,%edi
   167b9:	e8 df 3d ff ff       	call   a59d <mk_inum>
   167be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   167c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167c6:	48 8b 00             	mov    (%rax),%rax
   167c9:	48 89 c7             	mov    %rax,%rdi
   167cc:	e8 b1 33 ff ff       	call   9b82 <destroy_expr>
   167d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   167d9:	48 89 10             	mov    %rdx,(%rax)
   167dc:	b8 01 00 00 00       	mov    $0x1,%eax
   167e1:	eb 0c                	jmp    167ef <simplify_expr+0x333>
   167e3:	b8 00 00 00 00       	mov    $0x0,%eax
   167e8:	eb 05                	jmp    167ef <simplify_expr+0x333>
   167ea:	b8 00 00 00 00       	mov    $0x0,%eax
   167ef:	c9                   	leave
   167f0:	c3                   	ret

00000000000167f1 <decrement_reference_id_expr>:
   167f1:	f3 0f 1e fa          	endbr64
   167f5:	55                   	push   %rbp
   167f6:	48 89 e5             	mov    %rsp,%rbp
   167f9:	48 83 ec 30          	sub    $0x30,%rsp
   167fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16801:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16805:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16809:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16810:	00 00
   16812:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16816:	31 c0                	xor    %eax,%eax
   16818:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1681d:	75 28                	jne    16847 <decrement_reference_id_expr+0x56>
   1681f:	48 8d 05 7a 73 00 00 	lea    0x737a(%rip),%rax        # 1dba0 <__PRETTY_FUNCTION__.2>
   16826:	48 89 c1             	mov    %rax,%rcx
   16829:	ba ee 01 00 00       	mov    $0x1ee,%edx
   1682e:	48 8d 05 2b 6e 00 00 	lea    0x6e2b(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16835:	48 89 c6             	mov    %rax,%rsi
   16838:	48 8d 05 35 6f 00 00 	lea    0x6f35(%rip),%rax        # 1d774 <__PRETTY_FUNCTION__.0+0x144>
   1683f:	48 89 c7             	mov    %rax,%rdi
   16842:	e8 89 bb fe ff       	call   23d0 <__assert_fail@plt>
   16847:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1684b:	8b 40 04             	mov    0x4(%rax),%eax
   1684e:	83 f8 04             	cmp    $0x4,%eax
   16851:	0f 87 c3 01 00 00    	ja     16a1a <decrement_reference_id_expr+0x229>
   16857:	89 c0                	mov    %eax,%eax
   16859:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16860:	00
   16861:	48 8d 05 a8 71 00 00 	lea    0x71a8(%rip),%rax        # 1da10 <__PRETTY_FUNCTION__.0+0x3e0>
   16868:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1686b:	48 98                	cltq
   1686d:	48 8d 15 9c 71 00 00 	lea    0x719c(%rip),%rdx        # 1da10 <__PRETTY_FUNCTION__.0+0x3e0>
   16874:	48 01 d0             	add    %rdx,%rax
   16877:	3e ff e0             	notrack jmp *%rax
   1687a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1687e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16882:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16886:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1688a:	48 89 ce             	mov    %rcx,%rsi
   1688d:	48 89 c7             	mov    %rax,%rdi
   16890:	e8 5c ff ff ff       	call   167f1 <decrement_reference_id_expr>
   16895:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16899:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1689d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   168a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168a5:	48 89 ce             	mov    %rcx,%rsi
   168a8:	48 89 c7             	mov    %rax,%rdi
   168ab:	e8 41 ff ff ff       	call   167f1 <decrement_reference_id_expr>
   168b0:	e9 66 01 00 00       	jmp    16a1b <decrement_reference_id_expr+0x22a>
   168b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168b9:	48 8b 50 08          	mov    0x8(%rax),%rdx
   168bd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   168c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168c5:	48 89 ce             	mov    %rcx,%rsi
   168c8:	48 89 c7             	mov    %rax,%rdi
   168cb:	e8 21 ff ff ff       	call   167f1 <decrement_reference_id_expr>
   168d0:	e9 46 01 00 00       	jmp    16a1b <decrement_reference_id_expr+0x22a>
   168d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   168dd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   168e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168e5:	48 89 ce             	mov    %rcx,%rsi
   168e8:	48 89 c7             	mov    %rax,%rdi
   168eb:	e8 01 ff ff ff       	call   167f1 <decrement_reference_id_expr>
   168f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168f4:	48 8b 50 18          	mov    0x18(%rax),%rdx
   168f8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   168fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16900:	48 89 ce             	mov    %rcx,%rsi
   16903:	48 89 c7             	mov    %rax,%rdi
   16906:	e8 e6 fe ff ff       	call   167f1 <decrement_reference_id_expr>
   1690b:	e9 0b 01 00 00       	jmp    16a1b <decrement_reference_id_expr+0x22a>
   16910:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16914:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16918:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1691c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16920:	48 89 ce             	mov    %rcx,%rsi
   16923:	48 89 c7             	mov    %rax,%rdi
   16926:	e8 c6 fe ff ff       	call   167f1 <decrement_reference_id_expr>
   1692b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1692f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16933:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16937:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1693b:	48 89 ce             	mov    %rcx,%rsi
   1693e:	48 89 c7             	mov    %rax,%rdi
   16941:	e8 ab fe ff ff       	call   167f1 <decrement_reference_id_expr>
   16946:	e9 d0 00 00 00       	jmp    16a1b <decrement_reference_id_expr+0x22a>
   1694b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1694f:	48 8b 40 08          	mov    0x8(%rax),%rax
   16953:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16957:	48 89 d6             	mov    %rdx,%rsi
   1695a:	48 89 c7             	mov    %rax,%rdi
   1695d:	e8 ee ba fe ff       	call   2450 <strcmp@plt>
   16962:	85 c0                	test   %eax,%eax
   16964:	0f 85 b0 00 00 00    	jne    16a1a <decrement_reference_id_expr+0x229>
   1696a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1696e:	8b 08                	mov    (%rax),%ecx
   16970:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16974:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16978:	48 8b 05 e1 b6 00 00 	mov    0xb6e1(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   1697f:	48 8d 35 12 70 00 00 	lea    0x7012(%rip),%rsi        # 1d998 <__PRETTY_FUNCTION__.0+0x368>
   16986:	48 89 c7             	mov    %rax,%rdi
   16989:	b8 00 00 00 00       	mov    $0x0,%eax
   1698e:	e8 dd ba fe ff       	call   2470 <fprintf@plt>
   16993:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16997:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1699b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1699f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   169a3:	48 89 ce             	mov    %rcx,%rsi
   169a6:	48 89 c7             	mov    %rax,%rdi
   169a9:	e8 15 57 ff ff       	call   c0c3 <FindIdent>
   169ae:	85 c0                	test   %eax,%eax
   169b0:	74 28                	je     169da <decrement_reference_id_expr+0x1e9>
   169b2:	48 8d 05 e7 71 00 00 	lea    0x71e7(%rip),%rax        # 1dba0 <__PRETTY_FUNCTION__.2>
   169b9:	48 89 c1             	mov    %rax,%rcx
   169bc:	ba 0f 02 00 00       	mov    $0x20f,%edx
   169c1:	48 8d 05 98 6c 00 00 	lea    0x6c98(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   169c8:	48 89 c6             	mov    %rax,%rsi
   169cb:	48 8d 05 fe 6f 00 00 	lea    0x6ffe(%rip),%rax        # 1d9d0 <__PRETTY_FUNCTION__.0+0x3a0>
   169d2:	48 89 c7             	mov    %rax,%rdi
   169d5:	e8 f6 b9 fe ff       	call   23d0 <__assert_fail@plt>
   169da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   169de:	48 85 c0             	test   %rax,%rax
   169e1:	75 28                	jne    16a0b <decrement_reference_id_expr+0x21a>
   169e3:	48 8d 05 b6 71 00 00 	lea    0x71b6(%rip),%rax        # 1dba0 <__PRETTY_FUNCTION__.2>
   169ea:	48 89 c1             	mov    %rax,%rcx
   169ed:	ba 10 02 00 00       	mov    $0x210,%edx
   169f2:	48 8d 05 67 6c 00 00 	lea    0x6c67(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   169f9:	48 89 c6             	mov    %rax,%rsi
   169fc:	48 8d 05 ff 6f 00 00 	lea    0x6fff(%rip),%rax        # 1da02 <__PRETTY_FUNCTION__.0+0x3d2>
   16a03:	48 89 c7             	mov    %rax,%rdi
   16a06:	e8 c5 b9 fe ff       	call   23d0 <__assert_fail@plt>
   16a0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16a0f:	8b 50 20             	mov    0x20(%rax),%edx
   16a12:	83 ea 01             	sub    $0x1,%edx
   16a15:	89 50 20             	mov    %edx,0x20(%rax)
   16a18:	eb 01                	jmp    16a1b <decrement_reference_id_expr+0x22a>
   16a1a:	90                   	nop
   16a1b:	90                   	nop
   16a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a20:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16a27:	00 00
   16a29:	74 05                	je     16a30 <decrement_reference_id_expr+0x23f>
   16a2b:	e8 70 b9 fe ff       	call   23a0 <__stack_chk_fail@plt>
   16a30:	c9                   	leave
   16a31:	c3                   	ret

0000000000016a32 <decrement_reference_expr>:
   16a32:	f3 0f 1e fa          	endbr64
   16a36:	55                   	push   %rbp
   16a37:	48 89 e5             	mov    %rsp,%rbp
   16a3a:	48 83 ec 20          	sub    $0x20,%rsp
   16a3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16a42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16a46:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16a4d:	00 00
   16a4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16a53:	31 c0                	xor    %eax,%eax
   16a55:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16a5a:	75 28                	jne    16a84 <decrement_reference_expr+0x52>
   16a5c:	48 8d 05 5d 71 00 00 	lea    0x715d(%rip),%rax        # 1dbc0 <__PRETTY_FUNCTION__.1>
   16a63:	48 89 c1             	mov    %rax,%rcx
   16a66:	ba 20 02 00 00       	mov    $0x220,%edx
   16a6b:	48 8d 05 ee 6b 00 00 	lea    0x6bee(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16a72:	48 89 c6             	mov    %rax,%rsi
   16a75:	48 8d 05 f8 6c 00 00 	lea    0x6cf8(%rip),%rax        # 1d774 <__PRETTY_FUNCTION__.0+0x144>
   16a7c:	48 89 c7             	mov    %rax,%rdi
   16a7f:	e8 4c b9 fe ff       	call   23d0 <__assert_fail@plt>
   16a84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16a88:	8b 40 04             	mov    0x4(%rax),%eax
   16a8b:	83 f8 04             	cmp    $0x4,%eax
   16a8e:	0f 87 88 01 00 00    	ja     16c1c <decrement_reference_expr+0x1ea>
   16a94:	89 c0                	mov    %eax,%eax
   16a96:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16a9d:	00
   16a9e:	48 8d 05 7f 6f 00 00 	lea    0x6f7f(%rip),%rax        # 1da24 <__PRETTY_FUNCTION__.0+0x3f4>
   16aa5:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   16aa8:	48 98                	cltq
   16aaa:	48 8d 15 73 6f 00 00 	lea    0x6f73(%rip),%rdx        # 1da24 <__PRETTY_FUNCTION__.0+0x3f4>
   16ab1:	48 01 d0             	add    %rdx,%rax
   16ab4:	3e ff e0             	notrack jmp *%rax
   16ab7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16abb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16abf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ac3:	48 89 d6             	mov    %rdx,%rsi
   16ac6:	48 89 c7             	mov    %rax,%rdi
   16ac9:	e8 64 ff ff ff       	call   16a32 <decrement_reference_expr>
   16ace:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ad2:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ada:	48 89 d6             	mov    %rdx,%rsi
   16add:	48 89 c7             	mov    %rax,%rdi
   16ae0:	e8 4d ff ff ff       	call   16a32 <decrement_reference_expr>
   16ae5:	e9 33 01 00 00       	jmp    16c1d <decrement_reference_expr+0x1eb>
   16aea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16aee:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16af2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16af6:	48 89 d6             	mov    %rdx,%rsi
   16af9:	48 89 c7             	mov    %rax,%rdi
   16afc:	e8 31 ff ff ff       	call   16a32 <decrement_reference_expr>
   16b01:	e9 17 01 00 00       	jmp    16c1d <decrement_reference_expr+0x1eb>
   16b06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b0a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16b0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b12:	48 89 d6             	mov    %rdx,%rsi
   16b15:	48 89 c7             	mov    %rax,%rdi
   16b18:	e8 15 ff ff ff       	call   16a32 <decrement_reference_expr>
   16b1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b21:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b29:	48 89 d6             	mov    %rdx,%rsi
   16b2c:	48 89 c7             	mov    %rax,%rdi
   16b2f:	e8 fe fe ff ff       	call   16a32 <decrement_reference_expr>
   16b34:	e9 e4 00 00 00       	jmp    16c1d <decrement_reference_expr+0x1eb>
   16b39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b3d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16b41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b45:	48 89 d6             	mov    %rdx,%rsi
   16b48:	48 89 c7             	mov    %rax,%rdi
   16b4b:	e8 e2 fe ff ff       	call   16a32 <decrement_reference_expr>
   16b50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b54:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16b58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b5c:	48 89 d6             	mov    %rdx,%rsi
   16b5f:	48 89 c7             	mov    %rax,%rdi
   16b62:	e8 cb fe ff ff       	call   16a32 <decrement_reference_expr>
   16b67:	e9 b1 00 00 00       	jmp    16c1d <decrement_reference_expr+0x1eb>
   16b6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b70:	8b 08                	mov    (%rax),%ecx
   16b72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b76:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16b7a:	48 8b 05 df b4 00 00 	mov    0xb4df(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16b81:	48 8d 35 10 6e 00 00 	lea    0x6e10(%rip),%rsi        # 1d998 <__PRETTY_FUNCTION__.0+0x368>
   16b88:	48 89 c7             	mov    %rax,%rdi
   16b8b:	b8 00 00 00 00       	mov    $0x0,%eax
   16b90:	e8 db b8 fe ff       	call   2470 <fprintf@plt>
   16b95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b99:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16b9d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16ba1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   16ba5:	48 89 ce             	mov    %rcx,%rsi
   16ba8:	48 89 c7             	mov    %rax,%rdi
   16bab:	e8 13 55 ff ff       	call   c0c3 <FindIdent>
   16bb0:	85 c0                	test   %eax,%eax
   16bb2:	74 28                	je     16bdc <decrement_reference_expr+0x1aa>
   16bb4:	48 8d 05 05 70 00 00 	lea    0x7005(%rip),%rax        # 1dbc0 <__PRETTY_FUNCTION__.1>
   16bbb:	48 89 c1             	mov    %rax,%rcx
   16bbe:	ba 3f 02 00 00       	mov    $0x23f,%edx
   16bc3:	48 8d 05 96 6a 00 00 	lea    0x6a96(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16bca:	48 89 c6             	mov    %rax,%rsi
   16bcd:	48 8d 05 fc 6d 00 00 	lea    0x6dfc(%rip),%rax        # 1d9d0 <__PRETTY_FUNCTION__.0+0x3a0>
   16bd4:	48 89 c7             	mov    %rax,%rdi
   16bd7:	e8 f4 b7 fe ff       	call   23d0 <__assert_fail@plt>
   16bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16be0:	48 85 c0             	test   %rax,%rax
   16be3:	75 28                	jne    16c0d <decrement_reference_expr+0x1db>
   16be5:	48 8d 05 d4 6f 00 00 	lea    0x6fd4(%rip),%rax        # 1dbc0 <__PRETTY_FUNCTION__.1>
   16bec:	48 89 c1             	mov    %rax,%rcx
   16bef:	ba 40 02 00 00       	mov    $0x240,%edx
   16bf4:	48 8d 05 65 6a 00 00 	lea    0x6a65(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16bfb:	48 89 c6             	mov    %rax,%rsi
   16bfe:	48 8d 05 fd 6d 00 00 	lea    0x6dfd(%rip),%rax        # 1da02 <__PRETTY_FUNCTION__.0+0x3d2>
   16c05:	48 89 c7             	mov    %rax,%rdi
   16c08:	e8 c3 b7 fe ff       	call   23d0 <__assert_fail@plt>
   16c0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c11:	8b 50 20             	mov    0x20(%rax),%edx
   16c14:	83 ea 01             	sub    $0x1,%edx
   16c17:	89 50 20             	mov    %edx,0x20(%rax)
   16c1a:	eb 01                	jmp    16c1d <decrement_reference_expr+0x1eb>
   16c1c:	90                   	nop
   16c1d:	90                   	nop
   16c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c22:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16c29:	00 00
   16c2b:	74 05                	je     16c32 <decrement_reference_expr+0x200>
   16c2d:	e8 6e b7 fe ff       	call   23a0 <__stack_chk_fail@plt>
   16c32:	c9                   	leave
   16c33:	c3                   	ret

0000000000016c34 <set_vars_lists>:
   16c34:	f3 0f 1e fa          	endbr64
   16c38:	55                   	push   %rbp
   16c39:	48 89 e5             	mov    %rsp,%rbp
   16c3c:	48 83 ec 40          	sub    $0x40,%rsp
   16c40:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16c44:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16c48:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16c4c:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   16c50:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16c57:	00 00
   16c59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16c5d:	31 c0                	xor    %eax,%eax
   16c5f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16c63:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16c6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16c6e:	48 8b 10             	mov    (%rax),%rdx
   16c71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c75:	48 89 10             	mov    %rdx,(%rax)
   16c78:	e9 4f 01 00 00       	jmp    16dcc <set_vars_lists+0x198>
   16c7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16c81:	48 8b 40 08          	mov    0x8(%rax),%rax
   16c85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16c89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c8d:	8b 40 04             	mov    0x4(%rax),%eax
   16c90:	83 f8 03             	cmp    $0x3,%eax
   16c93:	0f 84 27 01 00 00    	je     16dc0 <set_vars_lists+0x18c>
   16c99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c9d:	8b 40 04             	mov    0x4(%rax),%eax
   16ca0:	83 f8 02             	cmp    $0x2,%eax
   16ca3:	74 28                	je     16ccd <set_vars_lists+0x99>
   16ca5:	48 8d 05 34 6f 00 00 	lea    0x6f34(%rip),%rax        # 1dbe0 <__PRETTY_FUNCTION__.0>
   16cac:	48 89 c1             	mov    %rax,%rcx
   16caf:	ba 5d 02 00 00       	mov    $0x25d,%edx
   16cb4:	48 8d 05 a5 69 00 00 	lea    0x69a5(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16cbb:	48 89 c6             	mov    %rax,%rsi
   16cbe:	48 8d 05 db 6a 00 00 	lea    0x6adb(%rip),%rax        # 1d7a0 <__PRETTY_FUNCTION__.0+0x170>
   16cc5:	48 89 c7             	mov    %rax,%rdi
   16cc8:	e8 03 b7 fe ff       	call   23d0 <__assert_fail@plt>
   16ccd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16cd1:	48 8b 40 08          	mov    0x8(%rax),%rax
   16cd5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16cd9:	e9 d7 00 00 00       	jmp    16db5 <set_vars_lists+0x181>
   16cde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ce2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16ce6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   16cea:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16cee:	48 89 ce             	mov    %rcx,%rsi
   16cf1:	48 89 c7             	mov    %rax,%rdi
   16cf4:	e8 ca 53 ff ff       	call   c0c3 <FindIdent>
   16cf9:	85 c0                	test   %eax,%eax
   16cfb:	74 28                	je     16d25 <set_vars_lists+0xf1>
   16cfd:	48 8d 05 dc 6e 00 00 	lea    0x6edc(%rip),%rax        # 1dbe0 <__PRETTY_FUNCTION__.0>
   16d04:	48 89 c1             	mov    %rax,%rcx
   16d07:	ba 62 02 00 00       	mov    $0x262,%edx
   16d0c:	48 8d 05 4d 69 00 00 	lea    0x694d(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16d13:	48 89 c6             	mov    %rax,%rsi
   16d16:	48 8d 05 1b 6d 00 00 	lea    0x6d1b(%rip),%rax        # 1da38 <__PRETTY_FUNCTION__.0+0x408>
   16d1d:	48 89 c7             	mov    %rax,%rdi
   16d20:	e8 ab b6 fe ff       	call   23d0 <__assert_fail@plt>
   16d25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d29:	48 85 c0             	test   %rax,%rax
   16d2c:	75 28                	jne    16d56 <set_vars_lists+0x122>
   16d2e:	48 8d 05 ab 6e 00 00 	lea    0x6eab(%rip),%rax        # 1dbe0 <__PRETTY_FUNCTION__.0>
   16d35:	48 89 c1             	mov    %rax,%rcx
   16d38:	ba 63 02 00 00       	mov    $0x263,%edx
   16d3d:	48 8d 05 1c 69 00 00 	lea    0x691c(%rip),%rax        # 1d660 <__PRETTY_FUNCTION__.0+0x30>
   16d44:	48 89 c6             	mov    %rax,%rsi
   16d47:	48 8d 05 b4 6c 00 00 	lea    0x6cb4(%rip),%rax        # 1da02 <__PRETTY_FUNCTION__.0+0x3d2>
   16d4e:	48 89 c7             	mov    %rax,%rdi
   16d51:	e8 7a b6 fe ff       	call   23d0 <__assert_fail@plt>
   16d56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d5a:	8b 40 20             	mov    0x20(%rax),%eax
   16d5d:	85 c0                	test   %eax,%eax
   16d5f:	75 25                	jne    16d86 <set_vars_lists+0x152>
   16d61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d65:	8b 40 10             	mov    0x10(%rax),%eax
   16d68:	83 f8 04             	cmp    $0x4,%eax
   16d6b:	74 19                	je     16d86 <set_vars_lists+0x152>
   16d6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d71:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16d75:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16d79:	48 89 d6             	mov    %rdx,%rsi
   16d7c:	48 89 c7             	mov    %rax,%rdi
   16d7f:	e8 6a 00 00 00       	call   16dee <add_to_list>
   16d84:	eb 23                	jmp    16da9 <set_vars_lists+0x175>
   16d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d8a:	8b 40 10             	mov    0x10(%rax),%eax
   16d8d:	83 f8 04             	cmp    $0x4,%eax
   16d90:	74 17                	je     16da9 <set_vars_lists+0x175>
   16d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d96:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16d9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d9e:	48 89 d6             	mov    %rdx,%rsi
   16da1:	48 89 c7             	mov    %rax,%rdi
   16da4:	e8 45 00 00 00       	call   16dee <add_to_list>
   16da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dad:	48 8b 40 10          	mov    0x10(%rax),%rax
   16db1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   16db5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   16dba:	0f 85 1e ff ff ff    	jne    16cde <set_vars_lists+0xaa>
   16dc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16dc4:	48 8b 40 10          	mov    0x10(%rax),%rax
   16dc8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16dcc:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   16dd1:	0f 85 a6 fe ff ff    	jne    16c7d <set_vars_lists+0x49>
   16dd7:	90                   	nop
   16dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ddc:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16de3:	00 00
   16de5:	74 05                	je     16dec <set_vars_lists+0x1b8>
   16de7:	e8 b4 b5 fe ff       	call   23a0 <__stack_chk_fail@plt>
   16dec:	c9                   	leave
   16ded:	c3                   	ret

0000000000016dee <add_to_list>:
   16dee:	f3 0f 1e fa          	endbr64
   16df2:	55                   	push   %rbp
   16df3:	48 89 e5             	mov    %rsp,%rbp
   16df6:	48 83 ec 10          	sub    $0x10,%rsp
   16dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16dfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16e02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e06:	48 8b 00             	mov    (%rax),%rax
   16e09:	48 85 c0             	test   %rax,%rax
   16e0c:	75 1a                	jne    16e28 <add_to_list+0x3a>
   16e0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16e12:	be 04 00 00 00       	mov    $0x4,%esi
   16e17:	48 89 c7             	mov    %rax,%rdi
   16e1a:	e8 dc 13 ff ff       	call   81fb <CreateListNode>
   16e1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e23:	48 89 02             	mov    %rax,(%rdx)
   16e26:	eb 2d                	jmp    16e55 <add_to_list+0x67>
   16e28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16e2c:	be 04 00 00 00       	mov    $0x4,%esi
   16e31:	48 89 c7             	mov    %rax,%rdi
   16e34:	e8 c2 13 ff ff       	call   81fb <CreateListNode>
   16e39:	48 89 c2             	mov    %rax,%rdx
   16e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e40:	48 8b 00             	mov    (%rax),%rax
   16e43:	48 89 d6             	mov    %rdx,%rsi
   16e46:	48 89 c7             	mov    %rax,%rdi
   16e49:	e8 79 14 ff ff       	call   82c7 <PushListNodeBack>
   16e4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e52:	48 89 02             	mov    %rax,(%rdx)
   16e55:	90                   	nop
   16e56:	c9                   	leave
   16e57:	c3                   	ret

0000000000016e58 <stack_trace_handler>:
   16e58:	f3 0f 1e fa          	endbr64
   16e5c:	55                   	push   %rbp
   16e5d:	48 89 e5             	mov    %rsp,%rbp
   16e60:	48 81 ec 00 09 00 00 	sub    $0x900,%rsp
   16e67:	89 bd 0c f7 ff ff    	mov    %edi,-0x8f4(%rbp)
   16e6d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16e74:	00 00
   16e76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16e7a:	31 c0                	xor    %eax,%eax
   16e7c:	48 8b 05 dd b1 00 00 	mov    0xb1dd(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16e83:	8b 95 0c f7 ff ff    	mov    -0x8f4(%rbp),%edx
   16e89:	48 8d 0d 60 6d 00 00 	lea    0x6d60(%rip),%rcx        # 1dbf0 <__PRETTY_FUNCTION__.0+0x10>
   16e90:	48 89 ce             	mov    %rcx,%rsi
   16e93:	48 89 c7             	mov    %rax,%rdi
   16e96:	b8 00 00 00 00       	mov    $0x0,%eax
   16e9b:	e8 d0 b5 fe ff       	call   2470 <fprintf@plt>
   16ea0:	48 8d 85 20 f7 ff ff 	lea    -0x8e0(%rbp),%rax
   16ea7:	48 89 c7             	mov    %rax,%rdi
   16eaa:	e8 11 b5 fe ff       	call   23c0 <_Ux86_64_getcontext@plt>
   16eaf:	48 8d 95 20 f7 ff ff 	lea    -0x8e0(%rbp),%rdx
   16eb6:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   16ebd:	48 89 d6             	mov    %rdx,%rsi
   16ec0:	48 89 c7             	mov    %rax,%rdi
   16ec3:	e8 38 b5 fe ff       	call   2400 <_Ux86_64_init_local@plt>
   16ec8:	48 8b 05 91 b1 00 00 	mov    0xb191(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16ecf:	48 89 c1             	mov    %rax,%rcx
   16ed2:	ba 0d 00 00 00       	mov    $0xd,%edx
   16ed7:	be 01 00 00 00       	mov    $0x1,%esi
   16edc:	48 8d 05 1f 6d 00 00 	lea    0x6d1f(%rip),%rax        # 1dc02 <__PRETTY_FUNCTION__.0+0x22>
   16ee3:	48 89 c7             	mov    %rax,%rdi
   16ee6:	e8 65 b6 fe ff       	call   2550 <fwrite@plt>
   16eeb:	e9 d9 00 00 00       	jmp    16fc9 <stack_trace_handler+0x171>
   16ef0:	48 8d 95 10 f7 ff ff 	lea    -0x8f0(%rbp),%rdx
   16ef7:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   16efe:	be 10 00 00 00       	mov    $0x10,%esi
   16f03:	48 89 c7             	mov    %rax,%rdi
   16f06:	e8 05 b5 fe ff       	call   2410 <_Ux86_64_get_reg@plt>
   16f0b:	85 c0                	test   %eax,%eax
   16f0d:	74 28                	je     16f37 <stack_trace_handler+0xdf>
   16f0f:	48 8b 05 4a b1 00 00 	mov    0xb14a(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16f16:	48 89 c1             	mov    %rax,%rcx
   16f19:	ba 26 00 00 00       	mov    $0x26,%edx
   16f1e:	be 01 00 00 00       	mov    $0x1,%esi
   16f23:	48 8d 05 e6 6c 00 00 	lea    0x6ce6(%rip),%rax        # 1dc10 <__PRETTY_FUNCTION__.0+0x30>
   16f2a:	48 89 c7             	mov    %rax,%rdi
   16f2d:	e8 1e b6 fe ff       	call   2550 <fwrite@plt>
   16f32:	e9 92 00 00 00       	jmp    16fc9 <stack_trace_handler+0x171>
   16f37:	48 8d 95 18 f7 ff ff 	lea    -0x8e8(%rbp),%rdx
   16f3e:	48 8d b5 f0 fe ff ff 	lea    -0x110(%rbp),%rsi
   16f45:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   16f4c:	48 89 d1             	mov    %rdx,%rcx
   16f4f:	ba 00 01 00 00       	mov    $0x100,%edx
   16f54:	48 89 c7             	mov    %rax,%rdi
   16f57:	e8 a4 b5 fe ff       	call   2500 <_Ux86_64_get_proc_name@plt>
   16f5c:	85 c0                	test   %eax,%eax
   16f5e:	75 41                	jne    16fa1 <stack_trace_handler+0x149>
   16f60:	48 8b 85 18 f7 ff ff 	mov    -0x8e8(%rbp),%rax
   16f67:	48 89 c1             	mov    %rax,%rcx
   16f6a:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
   16f71:	48 89 c6             	mov    %rax,%rsi
   16f74:	48 8b 05 e5 b0 00 00 	mov    0xb0e5(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16f7b:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   16f82:	49 89 c8             	mov    %rcx,%r8
   16f85:	48 89 d1             	mov    %rdx,%rcx
   16f88:	48 89 f2             	mov    %rsi,%rdx
   16f8b:	48 8d 35 a5 6c 00 00 	lea    0x6ca5(%rip),%rsi        # 1dc37 <__PRETTY_FUNCTION__.0+0x57>
   16f92:	48 89 c7             	mov    %rax,%rdi
   16f95:	b8 00 00 00 00       	mov    $0x0,%eax
   16f9a:	e8 d1 b4 fe ff       	call   2470 <fprintf@plt>
   16f9f:	eb 28                	jmp    16fc9 <stack_trace_handler+0x171>
   16fa1:	48 8b 85 10 f7 ff ff 	mov    -0x8f0(%rbp),%rax
   16fa8:	48 89 c2             	mov    %rax,%rdx
   16fab:	48 8b 05 ae b0 00 00 	mov    0xb0ae(%rip),%rax        # 22060 <stderr@GLIBC_2.2.5>
   16fb2:	48 8d 0d 97 6c 00 00 	lea    0x6c97(%rip),%rcx        # 1dc50 <__PRETTY_FUNCTION__.0+0x70>
   16fb9:	48 89 ce             	mov    %rcx,%rsi
   16fbc:	48 89 c7             	mov    %rax,%rdi
   16fbf:	b8 00 00 00 00       	mov    $0x0,%eax
   16fc4:	e8 a7 b4 fe ff       	call   2470 <fprintf@plt>
   16fc9:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
   16fd0:	48 89 c7             	mov    %rax,%rdi
   16fd3:	e8 88 b4 fe ff       	call   2460 <_Ux86_64_step@plt>
   16fd8:	85 c0                	test   %eax,%eax
   16fda:	0f 8f 10 ff ff ff    	jg     16ef0 <stack_trace_handler+0x98>
   16fe0:	8b 85 0c f7 ff ff    	mov    -0x8f4(%rbp),%eax
   16fe6:	89 c7                	mov    %eax,%edi
   16fe8:	e8 53 b5 fe ff       	call   2540 <exit@plt>

0000000000016fed <install_stack_trace_handler>:
   16fed:	f3 0f 1e fa          	endbr64
   16ff1:	55                   	push   %rbp
   16ff2:	48 89 e5             	mov    %rsp,%rbp
   16ff5:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   16ffc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17003:	00 00
   17005:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17009:	31 c0                	xor    %eax,%eax
   1700b:	48 8d 05 46 fe ff ff 	lea    -0x1ba(%rip),%rax        # 16e58 <stack_trace_handler>
   17012:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   17019:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17020:	48 83 c0 08          	add    $0x8,%rax
   17024:	48 89 c7             	mov    %rax,%rdi
   17027:	e8 54 b4 fe ff       	call   2480 <sigemptyset@plt>
   1702c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   17033:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1703a:	ba 00 00 00 00       	mov    $0x0,%edx
   1703f:	48 89 c6             	mov    %rax,%rsi
   17042:	bf 0b 00 00 00       	mov    $0xb,%edi
   17047:	e8 04 b3 fe ff       	call   2350 <sigaction@plt>
   1704c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17053:	ba 00 00 00 00       	mov    $0x0,%edx
   17058:	48 89 c6             	mov    %rax,%rsi
   1705b:	bf 08 00 00 00       	mov    $0x8,%edi
   17060:	e8 eb b2 fe ff       	call   2350 <sigaction@plt>
   17065:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1706c:	ba 00 00 00 00       	mov    $0x0,%edx
   17071:	48 89 c6             	mov    %rax,%rsi
   17074:	bf 06 00 00 00       	mov    $0x6,%edi
   17079:	e8 d2 b2 fe ff       	call   2350 <sigaction@plt>
   1707e:	90                   	nop
   1707f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17083:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   1708a:	00 00
   1708c:	74 05                	je     17093 <install_stack_trace_handler+0xa6>
   1708e:	e8 0d b3 fe ff       	call   23a0 <__stack_chk_fail@plt>
   17093:	c9                   	leave
   17094:	c3                   	ret

Disassembly of section .fini:

0000000000017098 <_fini>:
   17098:	f3 0f 1e fa          	endbr64
   1709c:	48 83 ec 08          	sub    $0x8,%rsp
   170a0:	48 83 c4 08          	add    $0x8,%rsp
   170a4:	c3                   	ret
